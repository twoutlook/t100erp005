#該程式未解開Section, 採用最新樣板產出!
{<section id="apmp842.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2017-01-23 16:36:45), PR版次:0005(2017-01-23 18:25:46)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000085
#+ Filename...: apmp842
#+ Description: 採購交期變更作業
#+ Creator....: 02749(2014-12-01 01:17:02)
#+ Modifier...: 02749 -SD/PR- 02749
 
{</section>}
 
{<section id="apmp842.global" >}
#應用 p02 樣板自動產生(Version:22)
#add-point:填寫註解說明 name="global.memo"
#161006-00008#11   2016/10/21 by sakura    整批修改組織
#160905-00007#11   2016/09/05 By 01727     调整系统中无ENT的SQL条件增加ent
#170109-00037#10   2017/01/19 by lori      1.勾選訂單時檢查是否有其他人正在使用並報錯, 且用匯總訊息方式報錯
#                                          2.將拋轉訂單LOCK,避免同時間有其他人使用並報錯
#                                          3.指標或筆數統計變數型態調整為num10
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD name="global.variable"
        sel            LIKE type_t.chr1,
        pmdl004        LIKE pmdl_t.pmdl004,
        pmdl004_desc   LIKE pmaal_t.pmaal004,
        pmdldocno      LIKE pmdl_t.pmdldocno,
        pmdnseq        LIKE pmdn_t.pmdnseq,
        pmdn200        LIKE pmdn_t.pmdn200,
        pmdn001        LIKE pmdn_t.pmdn001,
        pmdn001_desc   LIKE imaal_t.imaal003,
        pmdn001_desc_1 LIKE imaal_t.imaal004,
        pmdn002        LIKE pmdn_t.pmdn002, 
        pmdn002_desc   LIKE type_t.chr80,        
        pmdn201        LIKE pmdn_t.pmdn201,
        pmdn201_desc   LIKE oocal_t.oocal003,
        pmdn202        LIKE pmdn_t.pmdn202,        
        pmdn006        LIKE pmdn_t.pmdn006,
        pmdn006_desc   LIKE oocal_t.oocal003,
        pmdn007        LIKE pmdn_t.pmdn007,
        pmdn024        LIKE pmdn_t.pmdn024,
        pmdn014        LIKE pmdn_t.pmdn014,
        pmdl002        LIKE pmdl_t.pmdl002,
        pmdl002_desc   LIKE ooag_t.ooag011,
        pmdl003        LIKE pmdl_t.pmdl003,
        pmdl003_desc   LIKE ooefl_t.ooefl003,
        pmdnunit       LIKE pmdn_t.pmdnunit,
        pmdldocdt      LIKE pmdl_t.pmdldocdt
                     END RECORD 
TYPE type_g_pmdo_d   RECORD
        pmdodocno         LIKE pmdo_t.pmdodocno,    #採購單號  
        pmdoseq           LIKE pmdo_t.pmdoseq,      #項次  
        pmdoseq1          LIKE pmdo_t.pmdoseq1,     #項序 
        pmdoseq2          LIKE pmdo_t.pmdoseq2,     #分批序 
        pmdo200           LIKE pmdo_t.pmdo200,      #分批包裝單位
        pmdo200_desc      LIKE oocal_t.oocal003,    #單位說明
        pmdo201           LIKE pmdo_t.pmdo201,      #分批包裝數量      
        pmdo004           LIKE pmdo_t.pmdo004,      #採購單位  
        pmdo004_desc      LIKE oocal_t.oocal003,    #說明  
        pmdo006           LIKE pmdo_t.pmdo006,      #分批數量 
        pmdo009           LIKE pmdo_t.pmdo009,      #交期類型  
        pmdo013           LIKE pmdo_t.pmdo013,      #到庫日期
        pmdo015           LIKE pmdo_t.pmdo015       #已收貨數量  
                     END RECORD
DEFINE g_pmdo_d         DYNAMIC ARRAY OF type_g_pmdo_d 
DEFINE g_pmdo_d_t       type_g_pmdo_d
DEFINE g_pmdo_d_o       type_g_pmdo_d
#170109-00037#10 170119 by lori mod---(S)
#DEFINE g_detail_cnt2    LIKE type_t.num5                              #下方單身的筆數  
#DEFINE l_ac1            LIKE type_t.num5                              #上方單身點選到的列數 
#DEFINE l_ac2            LIKE type_t.num5                              #下方單身點選到的列數 
DEFINE g_detail_cnt2     LIKE type_t.num10                             #下方單身的筆數  
DEFINE l_ac1             LIKE type_t.num10                             #上方單身點選到的列數 
DEFINE l_ac2             LIKE type_t.num10                             #下方單身點選到的列數 
#170109-00037#10 170119 by lori mod---(E)
DEFINE l_ac1_t          LIKE type_t.num10                              #170109-00037#10 170119 by lori add
DEFINE g_ooef008        LIKE ooef_t.ooef008                            #行事曆參照表號 
DEFINE g_ooef009        LIKE ooef_t.ooef009                            #製造行事曆對應類別 
DEFINE g_flag           LIKE type_t.num5
DEFINE g_pmdo006_flag   LIKE type_t.num5
DEFINE g_pmdo201_flag   LIKE type_t.num5
DEFINE g_pmdo013_flag   LIKE type_t.num5
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="apmp842.main" >}
#+ 作業開始 
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   DEFINE ls_js  STRING
   #add-point:main段define name="main.define"
   DEFINE l_success LIKE type_t.num5 #150308-00001#4 150309 by lori522612 add
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   CALL apmp842_drop_table()
   CALL apmp842_create_table() 
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      CALL apmp842_drop_table()
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp842 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmp842_init()   
 
      #進入選單 Menu (="N")
      CALL apmp842_ui_dialog() 
 
      #add-point:畫面關閉前 name="main.before_close"
      CALL apmp842_drop_table()
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp842
   END IF 
   
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="apmp842.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION apmp842_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define name="init.define"
   DEFINE l_success LIKE type_t.num5 #150308-00001#4 150309 by lori522612 add
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   
   IF cl_null(g_bgjob) THEN
      LET g_bgjob = 'N'
   END IF

   LET g_errshow = 1
   LET g_flag = FALSE
      
   CALL cl_set_combo_scc_part('pmdl005','2052','1,4')   #採購性質
   CALL cl_set_combo_scc("b_pmdo009","2057") 
   CALL apmp842_set_act_no_visible()   #170109-00037#10 170119 by lori add
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp842.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmp842_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point 
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define name="init.init"
   DEFINE l_sql          STRING
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_cmd          LIKE type_t.chr1
  #DEFINE l_count        LIKE type_t.num5      #170109-00037#10 170119 by lori mark
   DEFINE l_count        LIKE type_t.num10     #170109-00037#10 170119 by lori add
   DEFINE l_amount       LIKE pmdo_t.pmdo006
   DEFINE l_errno        STRING
   DEFINE l_urgen_flag   LIKE type_t.chr1
   DEFINE l_date         LIKE pmdo_t.pmdo013
   DEFINE l_rtka010      LIKE rtka_t.rtka010
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   #170109-00037#10 170119 by lori add---(S)
   #採購明細(pmdn_t)與採購交期明細(pmdo_t)與採購多交期匯總(pmdq_t),皆能影響採購數量和交貨日,因此須以單號鎖表檢查
   LET g_forupd_sql = "SELECT pmdndocno ",
                      "  FROM pmdn_t ",
                      " WHERE pmdnent = ",g_enterprise,
                      "   AND pmdndocno = ? ",
                      "   FOR UPDATE "   
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料                      
   DECLARE apmp842_chk_lock_pmdn CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT pmdodocno ",
                      "  FROM pmdo_t ",
                      " WHERE pmdoent = ",g_enterprise,
                      "   AND pmdodocno = ? ",
                      "   FOR UPDATE "    
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料                      
   DECLARE apmp842_chk_lock_pmdo CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT pmdqdocno ",
                      "  FROM pmdq_t ",
                      " WHERE pmdqent = ",g_enterprise,
                      "   AND pmdqdocno = ? ",
                      "   FOR UPDATE "     
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料                      
   DECLARE apmp842_chk_lock_pmdq CURSOR FROM g_forupd_sql
   #170109-00037#10 170119 by lori add---(E)
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmp842_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         CONSTRUCT g_wc ON pmdlsite,pmdldocno,pmdldocdt,pmdl004,pmdl002,
                           pmdl003,pmdl005,pmdn001,pmdn002
              FROM pmdlsite,pmdldocno,pmdldocdt,pmdl004,pmdl002,
                   pmdl003,pmdl005,pmdn001,pmdn002

            BEFORE CONSTRUCT
               CALL cl_qbe_init()

            ON ACTION controlp INFIELD pmdlsite
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmdlsite',g_site,'c')   #150308-00001#4 150309 by lori522612 add 'c'
               CALL q_ooef001_24()                     
               DISPLAY g_qryparam.return1 TO pmdlsite  
               NEXT FIELD pmdlsite                     
            
            ON ACTION controlp INFIELD pmdldocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE 
               CALL q_pmdldocno_6()
               DISPLAY g_qryparam.return1 TO pmdldocno 
               NEXT FIELD pmdldocno

            ON ACTION controlp INFIELD pmdl004
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_3()
               DISPLAY g_qryparam.return1 TO pmdl004
               NEXT FIELD pmdl004

            ON ACTION controlp INFIELD pmdl002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO pmdl002
               NEXT FIELD pmdl002

            ON ACTION controlp INFIELD pmdl003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001()
               DISPLAY g_qryparam.return1 TO pmdl003
               NEXT FIELD pmdl003

            ON ACTION controlp INFIELD pmdn001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c' 
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = 'ALL'
               CALL q_imaf001_18()
               DISPLAY g_qryparam.return1 TO pmdn001
               NEXT FIELD pmdn001
               
            ON ACTION controlp INFIELD pmdn002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c' 
               LET g_qryparam.reqry = FALSE
               CALL q_pmdn002()
               DISPLAY g_qryparam.return1 TO pmdn002
               NEXT FIELD pmdn001               
         END CONSTRUCT 
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         INPUT ARRAY g_pmdo_d FROM s_detail2.*
               ATTRIBUTE(COUNT=g_detail_cnt2,MAXCOUNT=g_max_rec,WITHOUT DEFAULTS,
                         INSERT ROW = TRUE,
                         DELETE ROW = TRUE,
                         APPEND ROW = TRUE) 
                         
            BEFORE INPUT 
               IF cl_null(l_ac1) OR l_ac1 = 0 THEN
                  EXIT DIALOG
               END IF
               
               CALL cl_set_act_visible("accept",FALSE) 
               LET g_detail_cnt2 = g_pmdo_d.getLength()
               CALL apmp842_set_act_visible()
               CALL apmp842_set_act_no_visible()               
               
            BEFORE ROW
               LET l_ac2 = ARR_CURR()
               
               #170109-00037#10 170119 by lori add---(S)
               IF NOT apmp842_lock_chk(g_detail_d[l_ac1].pmdldocno) THEN
                  NEXT FIELD b_pmdldocno
               END IF
               #170109-00037#10 170119 by lori add---(E) 
               
               LET g_pmdo_d_t.* = g_pmdo_d[l_ac2].*
               LET g_pmdo_d_o.* = g_pmdo_d[l_ac2].*
               LET g_detail_cnt2 = g_pmdo_d.getLength() 
               
               IF g_detail_cnt2 >= l_ac2 THEN
                  LET l_cmd = 'u'
               END IF
               LET g_pmdo006_flag = FALSE  
               LET g_pmdo201_flag = FALSE
               CALL apmp842_set_entry_b()               
               CALL apmp842_set_no_entry_b()
               CALL s_transaction_begin()

            BEFORE INSERT
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               LET l_cmd = 'a'
               INITIALIZE g_pmdo_d[l_ac2].* TO NULL 
               INITIALIZE g_pmdo_d_t.* TO NULL 
               INITIALIZE g_pmdo_d_o.* TO NULL 
               
               LET g_pmdo_d[l_ac2].pmdodocno = g_detail_d[l_ac1].pmdldocno
               LET g_pmdo_d[l_ac2].pmdoseq   = g_detail_d[l_ac1].pmdnseq
               LET g_pmdo_d[l_ac2].pmdoseq1  = 1
               #設定分批序為最大數+1  
               SELECT COALESCE(MAX(pmdoseq2),0) + 1 INTO g_pmdo_d[l_ac2].pmdoseq2
                 FROM apmp842_tmp
                WHERE pmdodocno = g_pmdo_d[l_ac2].pmdodocno
                  AND pmdoseq  = g_pmdo_d[l_ac2].pmdoseq
                  AND COALESCE(txn_type,'-1') <> 'D' 
               #單位 
               LET g_pmdo_d[l_ac2].pmdo200 = g_detail_d[l_ac1].pmdn201
               LET g_pmdo_d[l_ac2].pmdo200_desc = s_desc_get_unit_desc(g_pmdo_d[l_ac2].pmdo200) 
               LET g_pmdo_d[l_ac2].pmdo004 = g_detail_d[l_ac1].pmdn006
               LET g_pmdo_d[l_ac2].pmdo004_desc = s_desc_get_unit_desc(g_pmdo_d[l_ac2].pmdo004)                

               #交期類型預設為1.約定交貨日 
               LET g_pmdo_d[l_ac2].pmdo009 = '1'
               
               #預設到庫日
               CALL s_apmt840_get_date('1',g_detail_d[l_ac1].pmdldocdt,g_detail_d[l_ac1].pmdnunit,g_detail_d[l_ac1].pmdl004)
                  RETURNING g_pmdo_d[l_ac2].pmdo013,l_rtka010
               DISPLAY "Defautle Date: ",g_pmdo_d[l_ac2].pmdo013   #test   
               #已收貨數量預設0 
               LET g_pmdo_d[l_ac2].pmdo015 = 0 
               
               LET g_pmdo_d_t.* = g_pmdo_d[l_ac2].*
               LET g_pmdo_d_o.* = g_pmdo_d[l_ac2].* 
               
               CALL apmp842_set_entry_b()
               
            AFTER INSERT
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  CALL s_transaction_end('N',0)
                  CANCEL INSERT
               END IF

               LET l_count = 0
               SELECT COUNT(*) INTO l_count
                 FROM apmp842_tmp
               #170109-00037#10 170123 by lori mod---(S)  
               #WHERE pmdoseq = g_pmdo_d[l_ac2].pmdoseq 
                WHERE pmdodocno = g_pmdo_d[l_ac2].pmdodocno
                  AND pmdoseq = g_pmdo_d[l_ac2].pmdoseq       
               #170109-00037#10 170123 by lori mod---(E)
                  AND pmdoseq1 = 1
                  AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2
                  AND COALESCE(txn_type,'-1') <> 'D' 
               IF l_count > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = 'std-00006'
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err() 
                  
                  INITIALIZE g_pmdo_d[l_ac2].* TO NULL
                  CANCEL INSERT
               END IF

               IF NOT apmp842_ins_tmp(l_urgen_flag) THEN
                  CALL s_transaction_end('N',0)
                  CANCEL INSERT
               END IF
               CALL s_transaction_end('Y',0) 
               
               LET g_detail_cnt2 = g_detail_cnt2 + 1 
               LET g_flag = TRUE
               CALL apmp842_set_act_visible()
               CALL apmp842_set_act_no_visible()

            BEFORE DELETE
               IF apmp842_del_tmp() THEN
                  CALL s_transaction_end('Y',0)
                  SELECT COUNT(*) INTO l_count
                   FROM apmp842_tmp
                    WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
                      AND pmdoseq = g_detail_d[l_ac1].pmdnseq
                      AND txn_type = 'D'
                  
                  LET g_detail_cnt2 = g_detail_cnt2 - 1                  
                  LET g_flag = TRUE 
                  CALL apmp842_b_fill02()                  
               ELSE
                  CALL s_transaction_end('N',0)
                  CANCEL DELETE               
               END IF

            AFTER DELETE
               IF l_ac2 > g_pmdo_d.getLength() THEN
                  CALL FGL_SET_ARR_CURR(l_ac2-1)
               END IF                

            #AFTER FIELD b_pmdoseq1
            #   IF NOT cl_null(g_pmdo_d[l_ac2].pmdoseq1) THEN
            #      IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmdo_d[l_ac2].pmdoseq1 != g_pmdo_d_o.pmdoseq1 OR g_pmdo_d_o.pmdoseq1 IS NULL )) THEN
            #         #設定分批序為最大數+1  
            #         SELECT COALESCE(MAX(pmdoseq2),0) + 1 INTO g_pmdo_d[l_ac2].pmdoseq2
            #           FROM apmp842_tmp
            #          WHERE pmdoseq  = g_pmdo_d[l_ac2].pmdoseq
            #            AND pmdoseq1  = g_pmdo_d[l_ac2].pmdoseq1
            #            AND COALESCE(txn_type,'-1') <> 'D' 
            #      END IF       
            #   END IF
               
            BEFORE FIELD b_pmdo201
               CALL apmp842_set_entry_b()
               
            ON CHANGE b_pmdo201
               LET g_pmdo201_flag = TRUE            
               
            AFTER FIELD b_pmdo201
               IF NOT cl_null(g_pmdo_d[l_ac2].pmdo201) THEN
                  IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmdo_d[l_ac2].pmdo201 != g_pmdo_d_o.pmdo201 OR g_pmdo_d_o.pmdo201 IS NULL )) THEN
                     IF g_pmdo_d[l_ac2].pmdo201 <= 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ade-00016"   #數量不可小於等於0 
                        LET g_errparam.extend = g_pmdo_d[l_ac2].pmdo201
                        LET g_errparam.popup  = TRUE
                        CALL cl_err() 
                        
                        LET g_pmdo_d[l_ac2].pmdo201 = g_pmdo_d_o.pmdo201
                        NEXT FIELD CURRENT
                     END IF
                    
                     #依單位取位
                     CALL s_aooi250_take_decimals(g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo201)
                        RETURNING l_success,g_pmdo_d[l_ac2].pmdo201
                     
                     IF NOT cl_null(g_pmdo_d[l_ac2].pmdo004) THEN
                        #包裝單位轉換成採購單位
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac1].pmdn001,g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo201)
                           RETURNING l_success,g_pmdo_d[l_ac2].pmdo006
                       
                        IF NOT apmp842_pmdo006_chk() THEN
                           LET g_pmdo_d[l_ac2].pmdo201 = g_pmdo_d_o.pmdo201
                           NEXT FIELD CURRENT 
                        END IF                           
                     END IF                        
                  END IF
               END IF
               LET g_pmdo_d_o.pmdo201 = g_pmdo_d[l_ac2].pmdo201
               LET g_pmdo_d_o.pmdo006 = g_pmdo_d[l_ac2].pmdo006                
               CALL apmp842_set_no_entry_b()

            ON CHANGE b_pmdo006
               LET g_pmdo006_flag = TRUE  
               
            AFTER FIELD b_pmdo006
               IF NOT cl_null(g_pmdo_d[l_ac2].pmdo006) THEN
                  IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmdo_d[l_ac2].pmdo006 != g_pmdo_d_o.pmdo006 OR g_pmdo_d_o.pmdo006 IS NULL )) THEN
                     #依單位取位
                     CALL s_aooi250_take_decimals(g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo006)
                        RETURNING l_success,g_pmdo_d[l_ac2].pmdo006
                     
                     IF NOT apmp842_pmdo006_chk() THEN
                        LET g_pmdo_d[l_ac2].pmdo006 = g_pmdo_d_o.pmdo006
                        NEXT FIELD CURRENT 
                     END IF                         
                     
                     IF NOT cl_null(g_pmdo_d[l_ac2].pmdo200) THEN
                        #採購單位轉換成包裝單位
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac1].pmdn001,g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo006)
                           RETURNING l_success,g_pmdo_d[l_ac2].pmdo201
                      END IF                        
                  END IF
               END IF
               LET g_pmdo_d_o.pmdo201 = g_pmdo_d[l_ac2].pmdo201
               LET g_pmdo_d_o.pmdo006 = g_pmdo_d[l_ac2].pmdo006 
               CALL apmp842_set_no_entry_b()
               
            ON CHANGE b_pmdo013
               LET g_pmdo013_flag = TRUE
               
            AFTER FIELD b_pmdo013
               IF NOT cl_null(g_pmdo_d[l_ac2].pmdo013) THEN
                  IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmdo_d[l_ac2].pmdo013 != g_pmdo_d_o.pmdo013 OR g_pmdo_d_o.pmdo013 IS NULL )) THEN
                     CALL s_apmt840_get_date('2',g_pmdo_d[l_ac2].pmdo013,g_detail_d[l_ac1].pmdnunit,g_detail_d[l_ac1].pmdl004)
                        RETURNING l_date,l_rtka010
                     DISPLAY "Schedule(1) Date: ",l_date   #test   
                     IF l_date < g_today THEN
                        LET l_urgen_flag = 'Y'
                     END IF                      
                  END IF
               END IF
               LET g_pmdo_d_o.pmdo013 = g_pmdo_d[l_ac2].pmdo013                               
               
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  LET g_pmdo_d[l_ac2].* = g_pmdo_d_t.*
                  CALL s_transaction_end('N',0)
                  EXIT DIALOG
               END IF
               
               IF apmp842_upd_tmp(l_urgen_flag) THEN
                  CALL s_transaction_end('Y',0)               
                  LET g_flag = TRUE
               ELSE
                  CALL s_transaction_end('N',0)               
               END IF
               
            AFTER ROW

            AFTER INPUT
               IF g_flag THEN 
                  #是否不執行該筆資料交期變更，放棄編輯過的交期明細內容？ 
                  IF cl_ask_confirm("axm-00428") THEN     
                     LET g_flag = FALSE
                  ELSE
                     NEXT FIELD CURRENT 
                  END IF
               END IF 
               
               CALL cl_set_act_visible("accept",TRUE)
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET l_ac1 = DIALOG.getCurrentRow("s_detail1")   #170109-00037#10 170123 by lori add
               CALL FGL_SET_ARR_CURR(l_ac1)
               
            BEFORE ROW
               LET l_ac1 = DIALOG.getCurrentRow("s_detail1")
               CALL apmp842_b_fill02()                  
         END DISPLAY

         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            CALL cl_set_comp_visible("sel",FALSE)
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall name="ui_dialog.selall.befroe"
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall name="ui_dialog.for.onaction_selall"
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone name="ui_dialog.for.onaction_selnone"
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmp842_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前 name="menu.filter"
            
            #end add-point
            CALL apmp842_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段 name="ui_dialog.qbeclear"
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh name="ui_dialog.datarefresh"
            
            #end add-point
            CALL apmp842_b_fill()
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         ON ACTION delete
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code   = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup  = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
            END IF     
            
            CALL s_transaction_begin()
            IF apmp842_del_tmp() THEN
               CALL s_transaction_end('Y',0)
               LET g_detail_cnt2 = g_detail_cnt2 - 1                  
               LET g_flag = TRUE 
               CALL apmp842_b_fill02()                  
            ELSE
               CALL s_transaction_end('N',0)
            END IF            
              
         ON ACTION batch_execute            
            #150404-00001#5 Add By Ken 150409 加上Array資料如空的話 提示錯誤訊息
            IF l_ac1 > 0 THEN
               IF l_ac2 > 0 THEN
                  IF cl_null(g_pmdo_d[l_ac2].pmdo201) AND cl_null(g_pmdo_d[l_ac2].pmdo006) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ade-00016'   #數量不可小於等於0 
                     LET g_errparam.popup  = TRUE
                     CALL cl_err() 
                     
                     NEXT FIELD b_pmdo201
                  ELSE   
                     IF g_pmdo_d[l_ac2].pmdo006 <> g_pmdo_d_o.pmdo006 OR g_pmdo_d_o.pmdo006 IS NULL THEN
                        LET g_pmdo006_flag = TRUE
                     END IF
                  
                     IF g_pmdo_d[l_ac2].pmdo201 <> g_pmdo_d_o.pmdo201 OR g_pmdo_d_o.pmdo006 IS NULL THEN
                        LET g_pmdo201_flag = TRUE
                     END IF
                     
                     IF g_pmdo006_flag THEN
                        #依單位取位
                        CALL s_aooi250_take_decimals(g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo006)
                           RETURNING l_success,g_pmdo_d[l_ac2].pmdo006
                        
                        IF NOT apmp842_pmdo006_chk() THEN
                           LET g_pmdo_d[l_ac2].pmdo006 = g_pmdo_d_o.pmdo006
                           NEXT FIELD b_pmdo006
                        END IF                          
                        
                        IF NOT cl_null(g_pmdo_d[l_ac2].pmdo200) THEN
                           #採購單位轉換成包裝單位
                           CALL s_aooi250_convert_qty(g_detail_d[l_ac1].pmdn001,g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo006)
                              RETURNING l_success,g_pmdo_d[l_ac2].pmdo201
                        END IF                                      
                     END IF
                     
                     IF g_pmdo201_flag THEN
                        #依單位取位
                        CALL s_aooi250_take_decimals(g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo201)
                           RETURNING l_success,g_pmdo_d[l_ac2].pmdo201   
                           
                        IF NOT cl_null(g_pmdo_d[l_ac2].pmdo004) THEN
                           #包裝單位轉換成採購單位
                           CALL s_aooi250_convert_qty(g_detail_d[l_ac1].pmdn001,g_pmdo_d[l_ac2].pmdo200,g_pmdo_d[l_ac2].pmdo004,g_pmdo_d[l_ac2].pmdo201)
                              RETURNING l_success,g_pmdo_d[l_ac2].pmdo006
                        END IF
                        
                        IF NOT apmp842_pmdo006_chk() THEN
                           LET g_pmdo_d[l_ac2].pmdo006 = g_pmdo_d_o.pmdo006
                           LET g_pmdo_d[l_ac2].pmdo201 = g_pmdo_d_o.pmdo201
                           NEXT FIELD b_pmdo201
                        END IF                   
                     END IF
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00880'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00879'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CONTINUE DIALOG               
            END IF
            
            LET l_count = 0 
            SELECT COUNT(*) INTO l_count
              FROM apmp842_tmp
             WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
               AND pmdoseq = g_detail_d[l_ac1].pmdnseq
               AND pmdoseq1 = 1
               AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2
               AND COALESCE(txn_type,'-1') <> 'D' 
            IF g_pmdo_d[l_ac2].pmdo013 <> g_pmdo_d_o.pmdo013 THEN
               CALL s_apmt840_get_date('2',g_pmdo_d[l_ac2].pmdo013,g_detail_d[l_ac1].pmdnunit,g_detail_d[l_ac1].pmdl004)
                  RETURNING l_date,l_rtka010
               DISPLAY "Schedule(2) Date: ",l_date   #test      
               IF l_date < g_today THEN
                  LET l_urgen_flag = 'Y'
               END IF                      
            END IF
               
            CALL s_transaction_begin()
            IF l_count = 0 THEN
              IF NOT apmp842_ins_tmp(l_urgen_flag) THEN
                 CALL s_transaction_end('N',0)
                 RETURN
              END IF    
            ELSE
               IF NOT apmp842_upd_tmp(l_urgen_flag) THEN
                  CALL s_transaction_end('N',0)
                  RETURN
               END IF   
            END IF
            CALL s_transaction_end('Y',0)
            
            LET l_amount = 0
            SELECT SUM(pmdo006) INTO l_amount
              FROM apmp842_tmp
             WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
               AND pmdoseq = g_detail_d[l_ac1].pmdnseq  
               AND COALESCE(txn_type,'-1') <> 'D'                  
            IF l_amount <> g_detail_d[l_ac1].pmdn007 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00586'   #所有交期明細的數量總和需等於原採購數量！   
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               
               NEXT FIELD b_pmdo201
            END IF
            
            CALL apmp842_process() 
           #CALL apmp842_b_fill()     #170109-00037#10 170123 by lori mark
            CALL apmp842_b_fill02()
            CALL cl_set_act_visible("accept",TRUE)
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:22) ---start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:22) --- end ---
 
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #(ver:22) ---start---
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         #(ver:22) --- end ---
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp842.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION apmp842_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define name="query.define"
   
   #end add-point 
    
   #add-point:cs段after_construct name="query.after_construct"
   IF g_flag THEN 
      #交期明細已有調整，是否放棄變更？
      IF cl_ask_confirm("apm-00664") THEN     
         LET g_flag = FALSE
      ELSE
         RETURN
      END IF
   END IF 
   #end add-point
        
   LET g_error_show = 1
   CALL apmp842_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query name="query.cs_after_query"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp842.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmp842_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   #add-point:b_fill段define name="b_fill.define"
   DEFINE l_where           STRING   #161006-00008#11 by sakura add   
   #end add-point
 
   LET g_wc = g_wc, cl_sql_auth_filter()   #(ver:21) add cl_sql_auth_filter()
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL s_aooi500_sql_where(g_prog,'pmdlsite') RETURNING l_where   #161006-00008#11 by sakura add
   
   LET g_sql = "SELECT 'N',     pmdl004,pmdldocno,pmdnseq,pmdn200, ",
               "       pmdn001, pmdn002,pmdn201,  pmdn202,pmdn006, ",
               "       pmdn007, pmdn024,pmdn014,  pmdl002,pmdl003, ",
               "       pmdnunit,pmdl004,pmdldocdt ",
               "  FROM pmdn_t,pmdl_t ",
               " WHERE pmdnent = pmdlent ",
               "   AND pmdndocno = pmdldocno ",
               "   AND pmdlent = ? ",
               "   AND pmdlstus = 'Y' ",            #查詢的採購單需是已經確認且未結案的採購單   
               "   AND pmdn045 = '1' ",             #單身的行狀態也需是未結案的資料
               "   AND ",g_wc,                  
               "   AND ",l_where,   #161006-00008#11 by sakura add
               " ORDER BY pmdldocno,pmdnseq "
   #end add-point
 
   PREPARE apmp842_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmp842_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空 name="b_fill.clear"
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into name="b_fill.foreach_into"
                       g_detail_d[l_ac].sel,     g_detail_d[l_ac].pmdl004,g_detail_d[l_ac].pmdldocno,   
                       g_detail_d[l_ac].pmdnseq, g_detail_d[l_ac].pmdn200,g_detail_d[l_ac].pmdn001,                            
                       g_detail_d[l_ac].pmdn002, g_detail_d[l_ac].pmdn201,g_detail_d[l_ac].pmdn202,
                       g_detail_d[l_ac].pmdn006, g_detail_d[l_ac].pmdn007,g_detail_d[l_ac].pmdn024,     
                       g_detail_d[l_ac].pmdn014, g_detail_d[l_ac].pmdl002,g_detail_d[l_ac].pmdl003,
                       g_detail_d[l_ac].pmdnunit,g_detail_d[l_ac].pmdl004,g_detail_d[l_ac].pmdldocdt
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充 name="b_fill.foreach_iside"
 
      #end add-point
      
      CALL apmp842_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.other_table"
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apmp842_sel
   
   LET l_ac = 1
   CALL apmp842_fetch()
   #add-point:b_fill段資料填充(其他單身) name="b_fill.after_b_fill"
   IF g_detail_d.getLength() > 0 THEN
      LET l_ac1 = 1
      CALL apmp842_b_fill02()
   END IF   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp842.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmp842_fetch()
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define name="fetch.define"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後 name="fetch.after_fill"
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="apmp842.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apmp842_detail_show()
   #add-point:show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point
   #add-point:show段define name="detail_show.define"
   DEFINE l_success       LIKE type_t.num5
   #end add-point
   
   #add-point:detail_show段 name="detail_show.detail_show"
   #取得交易對象簡稱 
   LET g_detail_d[l_ac].pmdl004_desc = s_desc_get_trading_partner_abbr_desc(g_detail_d[l_ac].pmdl004)
   
   #取得品名 規格  
   CALL s_desc_get_item_desc(g_detail_d[l_ac].pmdn001)
        RETURNING g_detail_d[l_ac].pmdn001_desc,
                  g_detail_d[l_ac].pmdn001_desc_1
   
   #取得單位說明 
   LET g_detail_d[l_ac].pmdn201_desc = s_desc_get_unit_desc(g_detail_d[l_ac].pmdn201)
   LET g_detail_d[l_ac].pmdn006_desc = s_desc_get_unit_desc(g_detail_d[l_ac].pmdn006)
   
   #取得人員姓名  
   LET g_detail_d[l_ac].pmdl002_desc= s_desc_get_person_desc(g_detail_d[l_ac].pmdl002)   
   
   #取得部門簡稱 
   LET g_detail_d[l_ac].pmdl003_desc  = s_desc_get_department_desc(g_detail_d[l_ac].pmdl003)
        
   #取得產品特徵說明 
   CALL s_feature_description(g_detail_d[l_ac].pmdn001,g_detail_d[l_ac].pmdn002)
        RETURNING l_success,g_detail_d[l_ac].pmdn002_desc
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp842.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION apmp842_filter()
   #add-point:filter段define(客製用) name="filter.define_customerization"
   
   #end add-point    
   #add-point:filter段define name="filter.define"
   
   #end add-point
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define name="filter.detail_cnt"
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apmp842_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="apmp842.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION apmp842_filter_parser(ps_field)
   #add-point:filter段define(客製用) name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apmp842.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apmp842_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmp842_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp842.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"

################################################################################
# Descriptions...: 填充單身-採購交期明細
# Memo...........:
# Usage..........: CALL apmp842_b_fill02()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_b_fill02()
   DEFINE l_sql       STRING
  #DEFINE l_cnt       LIKE type_t.num5    #170109-00037#10 170119 by lori mark
   DEFINE l_cnt       LIKE type_t.num10   #170109-00037#10 170119 by lori add
   DEFINE l_success   LIKE type_t.num5

   CALL g_pmdo_d.clear() 
   
   IF cl_null(l_ac1) OR l_ac1 = 0 THEN
      LET l_ac1 = 1
   END IF

   #清空temp table的資料
   IF NOT g_flag THEN
      DELETE FROM apmp842_tmp
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "Delete error:apmp842_tmp" 
         LET g_errparam.code   =  SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         RETURN
      END IF    
   END IF
   
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt
     FROM apmp842_tmp
    WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
      AND pmdoseq = g_detail_d[l_ac1].pmdnseq
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend =  "Select error:apmp842_tmp" 
      LET g_errparam.code   =  SQLCA.sqlcode
      LET g_errparam.popup  = TRUE 
      CALL cl_err() 
      RETURN
   END IF      
      
   IF l_cnt = 0 THEN  
      INSERT INTO apmp842_tmp(sel,txn_type,urgen_flag,                              #170109-00037#10 170123 by lori add:sel
                              pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,pmdo200,pmdo201,    
                              pmdo004,  pmdo006,pmdo009, pmdo013,pmdo015)
           SELECT 'Y','','',                                                        #170109-00037#10 170123 by lori add:sel=Y
                  pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,pmdo200,pmdo201,         
                  pmdo004,  pmdo006,pmdo009,pmdo013,pmdo015 
             FROM pmdo_t 
            WHERE pmdoent = g_enterprise
              AND pmdodocno = g_detail_d[l_ac1].pmdldocno
              AND pmdoseq = g_detail_d[l_ac1].pmdnseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "Insert error:apmp842_tmp" 
         LET g_errparam.code   =  SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN         
      END IF              
   END IF
   
   LET l_sql = "SELECT pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,pmdo200,pmdo201, ",          
               "       pmdo004,pmdo006,pmdo009,pmdo013,pmdo015  ",
               "  FROM apmp842_tmp ",
               " WHERE pmdodocno = '",g_detail_d[l_ac1].pmdldocno,"' ",  
               "   AND pmdoseq = ",g_detail_d[l_ac1].pmdnseq,
               "   AND COALESCE(txn_type,'-1') <> 'D' ",               
               " ORDER BY pmdoseq,pmdoseq1,pmdoseq2 "    
   PREPARE apmp842_b_fill02_prep FROM l_sql
   DECLARE apmp842_b_fill02_curs CURSOR FOR apmp842_b_fill02_prep

   LET l_ac2 = 1
   FOREACH apmp842_b_fill02_curs INTO g_pmdo_d[l_ac2].pmdodocno,g_pmdo_d[l_ac2].pmdoseq,g_pmdo_d[l_ac2].pmdoseq1,g_pmdo_d[l_ac2].pmdoseq2,
                                      g_pmdo_d[l_ac2].pmdo200,  g_pmdo_d[l_ac2].pmdo201,g_pmdo_d[l_ac2].pmdo004,
                                      g_pmdo_d[l_ac2].pmdo006,  g_pmdo_d[l_ac2].pmdo009,g_pmdo_d[l_ac2].pmdo013,
                                      g_pmdo_d[l_ac2].pmdo015

      #取得單位說明   
      LET g_pmdo_d[l_ac2].pmdo200_desc = s_desc_get_unit_desc(g_pmdo_d[l_ac2].pmdo200)
      LET g_pmdo_d[l_ac2].pmdo004_desc = s_desc_get_unit_desc(g_pmdo_d[l_ac2].pmdo004)

      LET l_ac2 = l_ac2 + 1
   END FOREACH

   CALL g_pmdo_d.deleteElement(l_ac2)
   LET l_ac2 = l_ac2 -1
   LET g_detail_cnt2 = l_ac2
END FUNCTION

################################################################################
# Descriptions...: 建立temp table 
# Memo...........:
# Usage..........: CALL apmp842_create_table()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_create_table()
   DEFINE l_session_id       LIKE type_t.num20               #170109-00037#10 170119 by lori add

   SELECT USERENV('SESSIONID') INTO l_session_id FROM DUAL   #170109-00037#10 170119 by lori add
   DISPLAY "SessionId: ",l_session_id                        #170109-00037#10 170119 by lori add
   
   #sel        資料是否可處理:預設Y,如有其他人正在使用中為N      #170109-00037#10 170119 by lori add
   #txn_type   變更類型:A-新增,D-刪除,U-修改                   
   #urgen_flag 緊急度：Y-當到庫日期有修改且小於系統日時為Y       
   CREATE TEMP TABLE apmp842_tmp(                            
      sel         LIKE type_t.chr1,                          #170109-00037#10 170119 by lori add
      txn_type    LIKE type_t.chr10,
      urgen_flag  LIKE type_t.chr1,
      pmdodocno   LIKE pmdo_t.pmdodocno,   
      pmdoseq     LIKE pmdo_t.pmdoseq,  
      pmdoseq1    LIKE pmdo_t.pmdoseq1,
      pmdoseq2    LIKE pmdo_t.pmdoseq2,    
      pmdo200     LIKE pmdo_t.pmdo200,     
      pmdo201     LIKE pmdo_t.pmdo201,     
      pmdo004     LIKE pmdo_t.pmdo004,     
      pmdo006     LIKE pmdo_t.pmdo006,     
      pmdo009     LIKE pmdo_t.pmdo009,     
      pmdo013     LIKE pmdo_t.pmdo013,     
      pmdo015     LIKE pmdo_t.pmdo015)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend =  "Create error:apmp842_tmp" 
      LET g_errparam.code   =  SQLCA.sqlcode
      LET g_errparam.popup  = TRUE 
      CALL cl_err() 
      RETURN
   END IF   
END FUNCTION

################################################################################
# Descriptions...: 刪除temp table 
# Memo...........:
# Usage..........: CALL apmp842_drop_table()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_drop_table()
   DROP TABLE apmp842_tmp;
END FUNCTION

################################################################################
# Descriptions...: 交期明細變更處理
# Memo...........:
# Usage..........: CALL apmp842_process()
# Return code....: 
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_process()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_sql         STRING
   DEFINE l_main_sql    STRING
   DEFINE l_where_sql   STRING
   DEFINE l_order_sql   STRING
  #DEFINE l_err_cnt     LIKE type_t.num5    #170109-00037#10 170119 by lori mark
   DEFINE l_err_cnt     LIKE type_t.num10   #170109-00037#10 170119 by lori add
   DEFINE l_success     LIKE type_t.num5
  #170109-00037#10 170119 by lori mod---(S) 
  #DEFINE l_count       LIKE type_t.num5   
  #DEFINE l_count2      LIKE type_t.num5   
   DEFINE l_count       LIKE type_t.num10
   DEFINE l_count2      LIKE type_t.num10
  #170109-00037#10 170119 by lori mod---(E) 
   DEFINE l_pmdo        RECORD
             pmdoent     LIKE pmdo_t.pmdoent,    #企業編號
             pmdodocno   LIKE pmdo_t.pmdodocno,  #營運據點
             pmdoseq     LIKE pmdo_t.pmdoseq,    #採購單號
             pmdoseq1    LIKE pmdo_t.pmdoseq1,   #採購項次
             pmdoseq2    LIKE pmdo_t.pmdoseq2,   #項序
             pmdosite    LIKE pmdo_t.pmdosite,   #分批序
             pmdo001     LIKE pmdo_t.pmdo001,    #料件編號
             pmdo002     LIKE pmdo_t.pmdo002,    #產品特徵
             pmdo003     LIKE pmdo_t.pmdo003,    #子件特性
             pmdo004     LIKE pmdo_t.pmdo004,    #採購單位
             pmdo005     LIKE pmdo_t.pmdo005,    #採購總數量
             pmdo006     LIKE pmdo_t.pmdo006,    #分批採購數量
             pmdo007     LIKE pmdo_t.pmdo007,    #摺合主件數量
             pmdo008     LIKE pmdo_t.pmdo008,    #QPA
             pmdo009     LIKE pmdo_t.pmdo009,    #交期類型
             pmdo010     LIKE pmdo_t.pmdo010,    #收貨時段
             pmdo011     LIKE pmdo_t.pmdo011,    #出貨日期
             pmdo012     LIKE pmdo_t.pmdo012,    #到廠日期
             pmdo013     LIKE pmdo_t.pmdo013,    #到庫日期
             pmdo014     LIKE pmdo_t.pmdo014,    #MRP交期凍結
             pmdo015     LIKE pmdo_t.pmdo015,    #已收貨量
             pmdo016     LIKE pmdo_t.pmdo016,    #驗退量
             pmdo017     LIKE pmdo_t.pmdo017,    #倉退換貨量
             pmdo019     LIKE pmdo_t.pmdo019,    #已入庫量
             pmdo020     LIKE pmdo_t.pmdo020,    #VMI請款量
             pmdo021     LIKE pmdo_t.pmdo021,    #交貨狀態
             pmdo022     LIKE pmdo_t.pmdo022,    #參考價格
             pmdo023     LIKE pmdo_t.pmdo023,    #稅別
             pmdo024     LIKE pmdo_t.pmdo024,    #稅率
             pmdo025     LIKE pmdo_t.pmdo025,    #電子採購單號
             pmdo026     LIKE pmdo_t.pmdo026,    #最近修改人員
             pmdo027     DATETIME YEAR TO SECOND,#最近修改時間
             pmdo028     LIKE pmdo_t.pmdo028,    #分批參考單位
             pmdo029     LIKE pmdo_t.pmdo029,    #分批參考數量
             pmdo030     LIKE pmdo_t.pmdo030,    #分批計價單位
             pmdo031     LIKE pmdo_t.pmdo031,    #分批計價數量
             pmdo032     LIKE pmdo_t.pmdo032,    #分批未稅金額
             pmdo033     LIKE pmdo_t.pmdo033,    #分批含稅金額
             pmdo034     LIKE pmdo_t.pmdo034,    #分批稅額
             pmdo035     LIKE pmdo_t.pmdo035,    #初始營運據點
             pmdo036     LIKE pmdo_t.pmdo036,    #初始來源單號
             pmdo037     LIKE pmdo_t.pmdo037,    #初始來源項次
             pmdo038     LIKE pmdo_t.pmdo038,    #初始項序
             pmdo039     LIKE pmdo_t.pmdo039,    #初始分批序
             pmdo040     LIKE pmdo_t.pmdo040,    #倉退量
             pmdo200     LIKE pmdo_t.pmdo200,    #分批包裝單位
             pmdo201     LIKE pmdo_t.pmdo201     #分批包裝數量
                      END RECORD
   DEFINE l_pmdq      RECORD
             pmdqent     LIKE pmdq_t.pmdqent,    #企業編號
             pmdqsite    LIKE pmdq_t.pmdqsite,   #營運據點
             pmdqdocno   LIKE pmdq_t.pmdqdocno,  #採購單號
             pmdqseq     LIKE pmdq_t.pmdqseq,    #採購項次
             pmdqseq2    LIKE pmdq_t.pmdqseq2,   #分批序
             pmdq002     LIKE pmdq_t.pmdq002,    #分批數量
             pmdq003     LIKE pmdq_t.pmdq003,    #交貨日期
             pmdq004     LIKE pmdq_t.pmdq004,    #到廠日期
             pmdq005     LIKE pmdq_t.pmdq005,    #到庫日期
             pmdq006     LIKE pmdq_t.pmdq006,    #收貨時段
             pmdq007     LIKE pmdq_t.pmdq007,    #MRP凍結否
             pmdq008     LIKE pmdq_t.pmdq008,    #交期類型
             pmdq201     LIKE pmdq_t.pmdq201,    #分批包裝單位
             pmdq202     LIKE pmdq_t.pmdq202     #分批包裝數量
                      END RECORD
   
   
   DEFINE l_pmdo015            LIKE pmdo_t.pmdo015    #已收貨數
   DEFINE l_txn_type           LIKE type_t.chr10
   DEFINE l_pmdosite           LIKE pmdo_t.pmdosite 
   DEFINE l_pmdodocno          LIKE pmdo_t.pmdodocno
   DEFINE l_pmdoseq            LIKE pmdo_t.pmdoseq  
   DEFINE l_pmdoseq1           LIKE pmdo_t.pmdoseq1  
   DEFINE l_pmdoseq2           LIKE pmdo_t.pmdoseq2 
   DEFINE l_pmdn001            LIKE pmdn_t.pmdn001  
   DEFINE l_pmdn002            LIKE pmdn_t.pmdn002  
   DEFINE l_pmdn019            LIKE pmdn_t.pmdn019  
   DEFINE l_pmdn007            LIKE pmdn_t.pmdn007  
   DEFINE l_pmdo004            LIKE pmdo_t.pmdo004  
   DEFINE l_pmdn008            LIKE pmdn_t.pmdn008  
   DEFINE l_pmdn010            LIKE pmdn_t.pmdn010  
   DEFINE l_pmdo200            LIKE pmdo_t.pmdo200  
   DEFINE l_pmdo006            LIKE pmdo_t.pmdo006  
   DEFINE l_pmdo201            LIKE pmdo_t.pmdo201  
   DEFINE l_pmdo009            LIKE pmdo_t.pmdo009  
   DEFINE l_pmdo013            LIKE pmdo_t.pmdo013  
   DEFINE l_pmdn015            LIKE pmdn_t.pmdn015
   DEFINE l_pmdn016            LIKE pmdn_t.pmdn016
   DEFINE l_pmdn017            LIKE pmdn_t.pmdn017
   DEFINE l_pmdn046            LIKE pmdn_t.pmdn046
   DEFINE l_pmdn047            LIKE pmdn_t.pmdn047
   DEFINE l_pmdn048            LIKE pmdn_t.pmdn048   
   DEFINE l_pmdl004            LIKE pmdl_t.pmdl004
   DEFINE l_pmdl015            LIKE pmdl_t.pmdl015
   DEFINE l_pmdo029            LIKE pmdo_t.pmdo029    
   DEFINE l_pmdo031            LIKE pmdo_t.pmdo031
   DEFINE l_pmdn020            LIKE pmdn_t.pmdn020
   DEFINE l_pmdn024            LIKE pmdn_t.pmdn024 
   DEFINE l_pmdn224            LIKE pmdn_t.pmdn224
   DEFINE l_pmdnunit           LIKE pmdn_t.pmdnunit
   DEFINE l_rtka010            LIKE rtka_t.rtka010
   DEFINE l_rtka012            LIKE rtka_t.rtka012 
   DEFINE l_pmdo013_min        LIKE pmdo_t.pmdo013 
  #DEFINE l_pmdo013_cnt        LIKE type_t.num5       #150504-00020#1 150506 by lori522612 add   #170109-00037#10 170119 by lori mark
   DEFINE l_pmdo013_cnt        LIKE type_t.num10      #170109-00037#10 170119 by lori add
   DEFINE l_pmdo032_amount     LIKE pmdo_t.pmdo032    #分批未稅金額-總額
   DEFINE l_pmdo033_amount     LIKE pmdo_t.pmdo033    #分批含稅金額-總額
   DEFINE l_pmdo034_amount     LIKE pmdo_t.pmdo034    #分批稅額-總額
   DEFINE l_chk_cnt            LIKE type_t.num10      #170109-00037#10 170123 by lori add 
   DEFINE l_lockcnt            LIKE type_t.num10      #170109-00037#10 170123 by lori add 

   LET r_success = TRUE
   LET l_err_cnt = 0
  
   INITIALIZE l_pmdo.* TO NULL
   
   LET l_main_sql = "SELECT txn_type, ",
                    "       pmdnsite,pmdodocno,pmdoseq,pmdoseq1,pmdoseq2, ",   #營運組織/單號/項次/項序/分批序
                    "       pmdn001, pmdn002,  pmdn019,pmdn007,  ",            #料件編號/產品特徵/子件特性/採購(總)數量
                    "       pmdo004, pmdn008,  pmdn010,pmdo200,  ",            #採購單位/參考單位/計價單位/包裝單位
                    "       pmdo006, pmdo201,  pmdo009,pmdo013,  ",            #分批採購數量/分批包裝數量/交期類型/到庫日期
                    "       pmdn015, pmdn016,  pmdn017,  ",                    #單價/稅別/稅率
                    "       pmdn046, pmdn047,  pmdn048,  ",                    #未稅金額/含稅金額/稅額
                    "       pmdl004, pmdl015 ",                                #供應商編號/幣別
                    "  FROM apmp842_tmp LEFT JOIN (SELECT pmdnsite,pmdndocno,pmdnseq, ",
                    "                                     pmdn006,pmdn008,pmdn010,pmdn201, ",   #採購單位/參考單位/計價單位/包裝單位
                    "                                     pmdn007, ",                           #採購數量
                    "                                     pmdn001,pmdn002,pmdn019, ",           #料件編號/產品特徵/子件特性
                    "                                     pmdn015,pmdn016,pmdn017, ",           #單價/稅別/稅率
                    "                                     pmdn046,pmdn047,pmdn048, ",           #未稅金額/含稅金額/稅額
                    "                                     pmdl004,pmdl015 ",                    #供應商編號/幣別                
                    "                                FROM pmdn_t, pmdl_t ",
                    "                               WHERE pmdnent = pmdlent AND pmdndocno = pmdldocno ",
                    "                                 AND pmdlent = ",g_enterprise, " )",
                    "                          ON pmdodocno = pmdndocno AND pmdoseq = pmdnseq "

   LET l_order_sql = " ORDER BY pmdodocno,pmdoseq,pmdoseq1,pmdoseq2 "
   
   LET l_where_sql = " WHERE COALESCE(txn_type,'-1') = 'D' ",     #170109-00037#10 170130 by lori add:,
                     "   AND sel = 'Y' "                          #170109-00037#10 170130 by lori add:sel=Y, 可處理的資料為Y
   LET l_sql = l_main_sql,l_where_sql,l_order_sql
   PREPARE apmp842_del_pre FROM l_sql
   DECLARE apmp842_del_cur CURSOR FOR apmp842_del_pre
   #DISPLAY "del SQL: ",l_sql   #test
   
   LET l_where_sql = " WHERE COALESCE(txn_type,'-1') <> 'D'  ",   #170109-00037#10 170130 by lori add:,
                     "   AND sel = 'Y' "                          #170109-00037#10 170130 by lori add:sel=Y, 可處理的資料為Y
   LET l_sql = l_main_sql,l_where_sql,l_order_sql
   PREPARE apmp842_mod_pre FROM l_sql
   DECLARE apmp842_mod_cur CURSOR FOR apmp842_mod_pre   
   #DISPLAY "mod SQL: ",l_sql   #test
   
   LET l_sql = "SELECT pmdo015 FROM pmdo_t ",
               " WHERE pmdoent = ",g_enterprise,
               "   AND pmdodocno= ? AND pmdoseq = ? AND pmdoseq1 = 1 AND pmdoseq2 = ? "
   PREPARE apmp842_get_pmdo015 FROM l_sql   

   LET l_sql = "SELECT pmdndocno,pmdnseq,pmdn046,pmdn047,pmdn048,pmdnunit, ",
               "       (SELECT pmdl004       FROM pmdl_t WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno), ",
               "       (SELECT MAX(pmdoseq2) FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq), ",
               "       (SELECT SUM(pmdo032)  FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq), ",
               "       (SELECT SUM(pmdo033)  FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq), ",
               "       (SELECT SUM(pmdo034)  FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq), ",
               "       (SELECT COUNT(pmdqseq2) FROM pmdq_t WHERE pmdqent = pmdnent AND pmdqdocno = pmdndocno AND pmdqseq = pmdnseq ), ",
               "       (SELECT COUNT(urgen_flag) FROM apmp842_tmp WHERE pmdodocno = pmdndocno AND pmdoseq = pmdnseq AND urgen_flag = 'Y' AND COALESCE(txn_type,'-1') <> 'D' ), ",
               "       (SELECT MIN(pmdo013)  FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq), ",
               "       (SELECT COUNT(pmdo013)  FROM pmdo_t WHERE pmdoent = pmdnent AND pmdodocno = pmdndocno AND pmdoseq = pmdnseq) ",   #150504-00020#1 150506 by lori522612 add
               "  FROM pmdn_t ",
               " WHERE pmdnent = ",g_enterprise,
              #170109-00037#10 170130 by lori mod---(S)
              #增加條件:sel=Y, 可處理的資料為Y
              #"   AND EXISTS(SELECT 1 FROM apmp842_tmp WHERE pmdodocno = pmdndocno AND pmdoseq = pmdnseq AND COALESCE(txn_type,'-1') <> 'D') "
               "   AND EXISTS(SELECT 1 FROM apmp842_tmp ",
               "               WHERE pmdodocno = pmdndocno AND pmdoseq = pmdnseq ",
               "                 AND COALESCE(txn_type,'-1') <> 'D' ",
               "                 AND sel = 'Y') "
              #170109-00037#10 170130 by lori mod---(E)
   PREPARE apmp842_upd_pmdn_pre FROM l_sql
   DECLARE apmp842_upd_pmdn_cur CURSOR FOR apmp842_upd_pmdn_pre
   #DISPLAY "upd SQL: ",l_sql   #test
   
   CALL s_transaction_begin()
   CALL cl_err_collect_init()   

   LET l_lockcnt = 0    #170109-00037#10 170123 by lori add
   LET l_count = 0      #170109-00037#10 170123 by lori add
   
   #交期明細原已存在但交期變更選擇刪除->刪除
   LET l_err_cnt = 0
   FOREACH apmp842_del_cur INTO l_txn_type,
                                l_pmdosite,l_pmdodocno,l_pmdoseq,l_pmdoseq1,l_pmdoseq2, 
                                l_pmdn001, l_pmdn002,  l_pmdn019,l_pmdn007,  
                                l_pmdo004, l_pmdn008,  l_pmdn010,l_pmdo200,  
                                l_pmdo006, l_pmdo201,  l_pmdo009,l_pmdo013,
                                l_pmdn015, l_pmdn016,  l_pmdn017,
                                l_pmdn046, l_pmdn047,  l_pmdn048,
                                l_pmdl004, l_pmdl015
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmp842_del_cur"
         LET g_errparam.code   =  SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1      
      END IF
      
      #170109-00037#10 170123 by lori add---(S)
      LET l_count = l_count + 1
      LET l_chk_cnt = 0
      
      OPEN apmp842_chk_lock_pmdn USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdn:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdn
      
      OPEN apmp842_chk_lock_pmdo USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdo:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdo
      
      OPEN apmp842_chk_lock_pmdq USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdq:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdq
      
      IF l_chk_cnt > 0  THEN
         LET l_lockcnt = l_lockcnt +1
         
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 'ast-00868'
         LET g_errparam.replace[1] = l_pmdodocno
         LET g_errparam.popup  = TRUE
         CALL cl_err() 
         CONTINUE FOREACH
      END IF
      #170109-00037#10 170123 by lori add---(E)
      
      LET l_pmdo015 = ''
      EXECUTE apmp842_get_pmdo015 USING l_pmdodocno,l_pmdoseq,l_pmdoseq2
                                  INTO l_pmdo015
      
      IF l_pmdo015 > 0 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.code   =  'apm-00589'
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1
         CONTINUE FOREACH
      ELSE
         DELETE FROM pmdo_t
          WHERE pmdoent = g_enterprise
            AND pmdodocno = l_pmdodocno
            AND pmdoseq = l_pmdoseq
            AND pmdoseq1 = 1
            AND pmdoseq2 = l_pmdoseq2
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Delete error:pmdo_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF 

         DELETE FROM pmdq_t
          WHERE pmdqent = g_enterprise
            AND pmdqdocno = l_pmdodocno
            AND pmdqseq = l_pmdoseq
            AND pmdqseq2 = l_pmdoseq2
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Delete error:pmdq_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF
      END IF
   END FOREACH
   
   IF l_err_cnt > 0 THEN
      CALL s_transaction_end('N',0)
      CALL cl_err_collect_show()
      RETURN
   END IF
   
   
   #交期明細原不存在時->新增;原已存在->更新
   LET l_err_cnt = 0
   FOREACH apmp842_mod_cur INTO l_txn_type,
                                l_pmdosite,l_pmdodocno,l_pmdoseq,l_pmdoseq1,l_pmdoseq2, 
                                l_pmdn001, l_pmdn002,  l_pmdn019,l_pmdn007,  
                                l_pmdo004, l_pmdn008,  l_pmdn010,l_pmdo200,  
                                l_pmdo006, l_pmdo201,  l_pmdo009,l_pmdo013,
                                l_pmdn015, l_pmdn016,  l_pmdn017,
                                l_pmdn046, l_pmdn047,  l_pmdn048,
                                l_pmdl004, l_pmdl015
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmp842_mod_cur"
         LET g_errparam.code   =  SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1      
      END IF      

      #170109-00037#10 170123 by lori add---(S)
      LET l_count = l_count + 1
      LET l_chk_cnt = 0
      
      OPEN apmp842_chk_lock_pmdn USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdn:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdn
      
      OPEN apmp842_chk_lock_pmdo USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdo:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdo
      
      OPEN apmp842_chk_lock_pmdq USING l_pmdodocno
      IF SQLCA.sqlcode THEN
         LET l_chk_cnt = l_chk_cnt + 1
      END IF
      DISPLAY "OPEN apmp842_chk_lock_pmdq:",SQLCA.sqlcode
      CLOSE apmp842_chk_lock_pmdq
      
      IF l_chk_cnt > 0  THEN
         LET l_lockcnt = l_lockcnt +1
         
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 'ast-00868'
         LET g_errparam.replace[1] = l_pmdodocno
         LET g_errparam.popup  = TRUE
         CALL cl_err() 
         CONTINUE FOREACH
      END IF
      #170109-00037#10 170123 by lori add---(E)
      
      IF cl_null(l_pmdo200) THEN      
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = l_pmdodocno,"-",l_pmdoseq,"-",l_pmdoseq1,"-",l_pmdoseq2
         LET g_errparam.code   = 'amm-00212'
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1
         CONTINUE FOREACH       
      END IF
      
      IF cl_null(l_pmdl015) THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = l_pmdodocno,"-",l_pmdoseq,"-",l_pmdoseq1,"-",l_pmdoseq2
         LET g_errparam.code   = 'amm-00164'
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1
         CONTINUE FOREACH        
      END IF
      
      #單位數量換算
      LET l_pmdo029 = 0
      LET l_pmdo031 = 0
      #參考數量
      IF NOT cl_null(l_pmdn008) THEN
         CALL s_aooi250_convert_qty(l_pmdn001,l_pmdo004,l_pmdn008,l_pmdo006)
            RETURNING l_success,l_pmdo029
      END IF
      #計價數量
      IF NOT cl_null(l_pmdn010) THEN
         CALL s_aooi250_convert_qty(l_pmdn001,l_pmdo004,l_pmdn010,l_pmdo006)
            RETURNING l_success,l_pmdo031
      END IF      
      
      LET l_pmdo.pmdoent     = g_enterprise      #企業編號
      LET l_pmdo.pmdosite    = l_pmdosite        #營運據點
      LET l_pmdo.pmdodocno   = l_pmdodocno       #採購單號
      LET l_pmdo.pmdoseq     = l_pmdoseq         #採購項次
      LET l_pmdo.pmdoseq1    = l_pmdoseq1        #項序
      LET l_pmdo.pmdoseq2    = l_pmdoseq2        #分批序                              
      LET l_pmdo.pmdo001     = l_pmdn001         #料件編號
      LET l_pmdo.pmdo002     = l_pmdn002         #產品特徵
      LET l_pmdo.pmdo003     = l_pmdn019         #子件特性
      LET l_pmdo.pmdo004     = l_pmdo004         #採購單位
      LET l_pmdo.pmdo005     = l_pmdn007         #採購總數量
      LET l_pmdo.pmdo006     = l_pmdo006         #分批採購數量
      LET l_pmdo.pmdo007     = l_pmdo006         #摺合主件數量
      LET l_pmdo.pmdo008     = 1                 #QPA
      LET l_pmdo.pmdo009     = l_pmdo009         #交期類型
      CALL s_apmt840_get_pmaa274(l_pmdl004) RETURNING l_pmdo.pmdo010 #收貨時段
      LET l_pmdo.pmdo011     = l_pmdo013         #出貨日期
      LET l_pmdo.pmdo012     = l_pmdo013         #到廠日期
      LET l_pmdo.pmdo013     = l_pmdo013         #到庫日期
      LET l_pmdo.pmdo014     = 'N'               #MRP交期凍結
      LET l_pmdo.pmdo015     = 0                 #已收貨量
      LET l_pmdo.pmdo016     = 0                 #驗退量
      LET l_pmdo.pmdo017     = 0                 #倉退換貨量
      LET l_pmdo.pmdo019     = 0                 #已入庫量
      LET l_pmdo.pmdo020     = 0                 #VMI請款量
      LET l_pmdo.pmdo021     = '2'               #交貨狀態
      LET l_pmdo.pmdo022     = l_pmdn015         #參考價格
      LET l_pmdo.pmdo023     = l_pmdn016         #稅別
      LET l_pmdo.pmdo024     = l_pmdn017         #稅率
      LET l_pmdo.pmdo025     = ''                #電子採購單號
      LET l_pmdo.pmdo026     = g_user            #最近修改人員
      LET l_pmdo.pmdo027     = cl_get_current()  #最近修改時間
      LET l_pmdo.pmdo028     = l_pmdn008         #分批參考單位
      LET l_pmdo.pmdo029     = l_pmdo029         #分批參考數量
      LET l_pmdo.pmdo030     = l_pmdn010         #分批計價單位
      LET l_pmdo.pmdo031     = l_pmdo031         #分批計價數量
      LET l_pmdo.pmdo032     = l_pmdo006 / l_pmdn007 * l_pmdn046   #分批未稅金額
      LET l_pmdo.pmdo033     = l_pmdo006 / l_pmdn007 * l_pmdn047   #分批含稅金額
      LET l_pmdo.pmdo034     = l_pmdo006 / l_pmdn007 * l_pmdn048   #分批稅額
      LET l_pmdo.pmdo035     = ''                #初始營運據點
      LET l_pmdo.pmdo036     = ''                #初始來源單號
      LET l_pmdo.pmdo037     = ''                #初始來源項次
      LET l_pmdo.pmdo038     = ''                #初始項序
      LET l_pmdo.pmdo039     = ''                #初始分批序
      LET l_pmdo.pmdo040     = 0                 #倉退量
      LET l_pmdo.pmdo200     = l_pmdo200         #分批包裝單位
      LET l_pmdo.pmdo201     = l_pmdo201         #分批包裝數量   
   
      #依幣別取位
      LET l_pmdo.pmdo032 = s_curr_round(g_site,l_pmdl015,l_pmdo.pmdo032,2)
      LET l_pmdo.pmdo033 = s_curr_round(g_site,l_pmdl015,l_pmdo.pmdo033,2)
      LET l_pmdo.pmdo034 = s_curr_round(g_site,l_pmdl015,l_pmdo.pmdo034,2) 

      LET l_pmdq.pmdqent     = g_enterprise      #企業編號
      LET l_pmdq.pmdqsite    = l_pmdosite        #營運據點
      LET l_pmdq.pmdqdocno   = l_pmdodocno       #採購單號  
      LET l_pmdq.pmdqseq     = l_pmdoseq         #採購項次
      LET l_pmdq.pmdqseq2    = l_pmdoseq2        #分批序
      LET l_pmdq.pmdq002     = l_pmdo006         #分批數量
      LET l_pmdq.pmdq003     = l_pmdo013         #交貨日期
      LET l_pmdq.pmdq004     = l_pmdo013         #到廠日期
      LET l_pmdq.pmdq005     = l_pmdo013         #到庫日期
      LET l_pmdq.pmdq006     = l_pmdo.pmdo010    #收貨時段
      LET l_pmdq.pmdq007     = l_pmdo.pmdo014    #MRP凍結否
      LET l_pmdq.pmdq008     = '1'               #交期類型
      LET l_pmdq.pmdq201     = l_pmdo200         #分批包裝單位
      LET l_pmdq.pmdq202     = l_pmdo201         #分批包裝數量
      
      IF l_txn_type = 'A' THEN
         INSERT INTO pmdo_t(pmdoent,  pmdosite,
                            pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,   
                            pmdo001,  pmdo002,pmdo003, pmdo004,pmdo005,   
                            pmdo006,  pmdo007,pmdo008, pmdo009,pmdo010,    
                            pmdo011,  pmdo012,pmdo013, pmdo014,pmdo015,    
                            pmdo016,  pmdo017,pmdo019, pmdo020,pmdo021,    
                            pmdo022,  pmdo023,pmdo024, pmdo025,pmdo026,    
                            pmdo027,  pmdo028,pmdo029, pmdo030,pmdo031,    
                            pmdo032,  pmdo033,pmdo034, pmdo035,pmdo036,    
                            pmdo037,  pmdo038,pmdo039, pmdo040,pmdo200,    
                            pmdo201) 
              VALUES(l_pmdo.pmdoent,  l_pmdo.pmdosite,
                     l_pmdo.pmdodocno,l_pmdo.pmdoseq,l_pmdo.pmdoseq1,l_pmdo.pmdoseq2,   
                     l_pmdo.pmdo001,  l_pmdo.pmdo002,l_pmdo.pmdo003, l_pmdo.pmdo004,l_pmdo.pmdo005,   
                     l_pmdo.pmdo006,  l_pmdo.pmdo007,l_pmdo.pmdo008, l_pmdo.pmdo009,l_pmdo.pmdo010,    
                     l_pmdo.pmdo011,  l_pmdo.pmdo012,l_pmdo.pmdo013, l_pmdo.pmdo014,l_pmdo.pmdo015,    
                     l_pmdo.pmdo016,  l_pmdo.pmdo017,l_pmdo.pmdo019, l_pmdo.pmdo020,l_pmdo.pmdo021,    
                     l_pmdo.pmdo022,  l_pmdo.pmdo023,l_pmdo.pmdo024, l_pmdo.pmdo025,l_pmdo.pmdo026,    
                     l_pmdo.pmdo027,  l_pmdo.pmdo028,l_pmdo.pmdo029, l_pmdo.pmdo030,l_pmdo.pmdo031,    
                     l_pmdo.pmdo032,  l_pmdo.pmdo033,l_pmdo.pmdo034, l_pmdo.pmdo035,l_pmdo.pmdo036,    
                     l_pmdo.pmdo037,  l_pmdo.pmdo038,l_pmdo.pmdo039, l_pmdo.pmdo040,l_pmdo.pmdo200,    
                     l_pmdo.pmdo201)
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Insert error:pmdo_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF 
      
         INSERT INTO pmdq_t(pmdqent,pmdqsite,pmdqdocno,pmdqseq,pmdqseq2, 
                            pmdq002,pmdq003, pmdq004,  pmdq005,pmdq006,  
                            pmdq007,pmdq008, pmdq201,  pmdq202)          
              VALUES(l_pmdq.pmdqent,l_pmdq.pmdqsite,l_pmdq.pmdqdocno,l_pmdq.pmdqseq,l_pmdq.pmdqseq2, 
                     l_pmdq.pmdq002,l_pmdq.pmdq003, l_pmdq.pmdq004,  l_pmdq.pmdq005,l_pmdq.pmdq006,  
                     l_pmdq.pmdq007,l_pmdq.pmdq008, l_pmdq.pmdq201,  l_pmdq.pmdq202)  
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Insert error:pmdq_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF      
      END IF
      
      IF l_txn_type = 'U' THEN
         UPDATE pmdo_t 
            SET pmdo006 = l_pmdo.pmdo006,   #分批採購數量
                pmdo007 = l_pmdo.pmdo007,   #摺合主件數量
                pmdo009 = l_pmdo.pmdo009,   #交期類型
                pmdo011 = l_pmdo.pmdo011,   #出貨日期
                pmdo012 = l_pmdo.pmdo012,   #到廠日期
                pmdo013 = l_pmdo.pmdo013,   #到庫日期
                pmdo026 = l_pmdo.pmdo026,   #最近修改人員
                pmdo027 = l_pmdo.pmdo027,   #最近修改時間
                pmdo029 = l_pmdo.pmdo029,   #分批參考數量
                pmdo031 = l_pmdo.pmdo031,   #分批計價數量
                pmdo032 = l_pmdo.pmdo032,   #分批未稅金額
                pmdo033 = l_pmdo.pmdo033,   #分批含稅金額
                pmdo034 = l_pmdo.pmdo034,   #分批稅額
                pmdo201 = l_pmdo.pmdo201    #分批包裝數量   
          WHERE pmdoent = g_enterprise
            AND pmdodocno = l_pmdodocno
            AND pmdoseq = l_pmdoseq
            AND pmdoseq1 = 1
            AND pmdoseq2 = l_pmdoseq2
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Update error:pmdo_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF
         
         UPDATE pmdq_t      
            SET pmdqent   = l_pmdq.pmdqent  ,
                pmdqsite  = l_pmdq.pmdqsite ,
                pmdqdocno = l_pmdq.pmdqdocno,
                pmdqseq   = l_pmdq.pmdqseq  ,
                pmdqseq2  = l_pmdq.pmdqseq2 ,
                pmdq002   = l_pmdq.pmdq002  ,
                pmdq003   = l_pmdq.pmdq003  ,
                pmdq004   = l_pmdq.pmdq004  ,
                pmdq005   = l_pmdq.pmdq005  ,
                pmdq006   = l_pmdq.pmdq006  ,
                pmdq007   = l_pmdq.pmdq007  ,
                pmdq008   = l_pmdq.pmdq008  ,
                pmdq201   = l_pmdq.pmdq201  ,
                pmdq202   = l_pmdq.pmdq202  
          WHERE pmdqent = g_enterprise
            AND pmdqdocno = l_pmdodocno
            AND pmdqseq = l_pmdoseq
            AND pmdqseq2 = l_pmdoseq2
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Update error:pmdq_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()      
            
            LET l_err_cnt = l_err_cnt + 1
            CONTINUE FOREACH      
         END IF            
      END IF   
   END FOREACH    
   
   #170109-00037#10 170123 by lori add---(S)
   IF l_count = l_lockcnt THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = ""
      LET g_errparam.code   = "ast-00867"
      LET g_errparam.popup  = TRUE 
      CALL cl_err() 

      CALL s_transaction_end('N',0)
      CALL cl_err_collect_show()
      RETURN
   ELSE
   #170109-00037#10 170123 by lori add---(E)
      IF l_err_cnt > 0 THEN
         CALL s_transaction_end('N',0)
         CALL cl_err_collect_show()
         RETURN
      END IF
   END IF   #170109-00037#10 170123 by lori add
   
   #尾差處理及更新多交期
   LET l_err_cnt = 0
   FOREACH apmp842_upd_pmdn_cur INTO l_pmdodocno,l_pmdoseq,l_pmdn046,l_pmdn047,l_pmdn048,
                                     l_pmdnunit,l_pmdl004,
                                     l_pmdoseq2,l_pmdo032_amount,l_pmdo033_amount,l_pmdo034_amount,
                                     l_count,l_count2,l_pmdo013_min,l_pmdo013_cnt    #150504-00020#1 150506 by lori522612 add l_pmdo013_cnt
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmp842_upd_pmdn_cur"
         LET g_errparam.code   =  SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1      
      END IF 
      
      UPDATE pmdo_t
         SET pmdo032 = pmdo032 + (l_pmdn046 - l_pmdo032_amount),
             pmdo033 = pmdo033 + (l_pmdn047 - l_pmdo033_amount),
             pmdo034 = pmdo034 + (l_pmdn048 - l_pmdo034_amount)
       WHERE pmdoent = g_enterprise
         AND pmdodocno = l_pmdodocno
         AND pmdoseq = l_pmdoseq
         AND pmdoseq1 = 1
         AND pmdoseq2 = l_pmdoseq2
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "Update error:pmdo_t" 
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1
         CONTINUE FOREACH      
      END IF  
       
      #緊急度 
      LEt l_pmdn020 = ''
      IF l_count2 > 1 THEN
         LET l_pmdn020 = 'Y'  
      ELSE
         LEt l_pmdn020 = 'N'
      END IF
      
      #多交期否
      LEt l_pmdn024 = ''
      IF l_count > 1 THEN
         LET l_pmdn024 = 'Y'  
      ELSE
         LEt l_pmdn024 = 'N'
      END IF
      
      #採購失效日
      LET l_pmdn224 = ''      
      CALL s_apmt840_get_rtka(l_pmdnunit,l_pmdl004) RETURNING l_rtka010,l_rtka012
      LET l_pmdn224 = l_pmdo013_min + l_rtka010
      #150504-00020#1 150506 by lori522612 mod---(S)      
      LET l_sql = "   UPDATE pmdn_t ",
                  "      SET pmdn020 = '",l_pmdn020,"', ",
                  "          pmdn024 = '",l_pmdn024,"', ",
                  "          pmdn224 = '",l_pmdn224,"', "
      IF l_pmdo013_cnt = 1 THEN
         LET l_sql = l_sql," pmdn012 = '",l_pmdo013_min,"', ",
                           " pmdn013 = '",l_pmdo013_min,"', ",   
                           " pmdn014 = '",l_pmdo013_min,"' "
      ELSE   
         LET l_sql = l_sql," pmdn012 = '', ",
                           " pmdn013 = '', ",   
                           " pmdn014 = '' "      
      END IF 
      
      LET l_sql = l_sql, " WHERE pmdnent = ",g_enterprise,
                         " AND pmdndocno = '",l_pmdodocno,"' ",
                         " AND pmdnseq = ",l_pmdoseq
      PREPARE apmp842_upd_pmdn FROM l_sql
      EXECUTE apmp842_upd_pmdn
      #150504-00020#1 150506 by lori522612 mod---(E)      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "Update error:pmdn_t" 
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()      
         
         LET l_err_cnt = l_err_cnt + 1
         CONTINUE FOREACH      
      END IF      
   END FOREACH
   IF l_err_cnt > 0 THEN
      CALL s_transaction_end('N',0)
      CALL cl_err_collect_show()
      RETURN
   END IF
   
   DELETE FROM apmp842_tmp
   CALL s_transaction_end('Y',0)
   CALL cl_err_collect_show()
   
   LET g_flag = FALSE 
   
   IF g_bgjob = 'N' THEN
      #前景作業完成處理
      CALL cl_ask_pressanykey("std-00012")
   ELSE
      #背景作業完成處理 
   END IF
END FUNCTION

################################################################################
# Descriptions...: ACTION設定
# Memo...........:
# Usage..........: CALL apmp842_set_act_visible()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_set_act_visible()
   CALL cl_set_act_visible('delete',TRUE)
END FUNCTION

################################################################################
# Descriptions...: ACTION設定
# Memo...........:
# Usage..........: CALL apmp842_set_act_no_visible()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_set_act_no_visible()
  #DEFINE l_cnt   LIKE type_t.num5    #170109-00037#10 170119 by lori mark
   DEFINE l_cnt   LIKE type_t.num10   #170109-00037#10 170119 by lori add

   #本作業簿提供勾選功能, 相關按鈕不開放
   CALL cl_set_act_visible("sel,selall,unsel,selnone",FALSE)   #170109-00037#10 170119 by lori add   
   
   IF l_ac1 > 0 THEN   #170109-00037#10 170119 by lori add
      LET l_cnt = 0 
      
      SELECT COUNT(*) INTO l_cnt 
        FROM apmp842_tmp
       WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
         AND pmdoseq = g_detail_d[l_ac1].pmdnseq
         AND COALESCE(txn_type,'-1') <> 'D'
         
      IF g_detail_d[l_ac1].pmdn024 = 'N' OR l_cnt <= 1 THEN
         CALL cl_set_act_visible('delete',FALSE)
      END IF
   END IF   #170109-00037#10 170119 by lori add
END FUNCTION

################################################################################
# Descriptions...: 欄位輸入控制
# Memo...........:
# Usage..........: CALL apmp842_set_entry_b()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_set_entry_b()
   CALL cl_set_comp_entry('pmdo201',TRUE)
END FUNCTION

################################################################################
# Descriptions...: 欄位輸入控制
# Memo...........:
# Usage..........: CALL apmp842_set_no_entry_b()
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_set_no_entry_b()
   IF l_ac2 > 0 THEN
      IF NOT cl_null(g_pmdo_d[l_ac2].pmdo201) THEN
         CALL cl_set_comp_entry('b_pmdo201',FALSE)
      END IF
   END IF   
END FUNCTION

################################################################################
# Descriptions...: 採購數量檢查
# Memo...........:
# Usage..........: CALL apmp842_pmdo006_chk()
#                     RETURNING r_success
# Return code...: r_success
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_pmdo006_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_errno     STRING
   DEFINE l_amount    LIKE pmdo_t.pmdo006
   
   LET r_success = TRUE
   LET l_errno = ''
   LET l_amount = 0
   
   SELECT COALESCE(SUM(pmdo006),0) INTO l_amount
     FROM apmp842_tmp
    WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
      AND pmdoseq = g_detail_d[l_ac1].pmdnseq
      AND pmdoseq1 = 1 
      AND pmdoseq2 <> g_pmdo_d[l_ac2].pmdoseq2
      AND COALESCE(txn_type,'-1') <> 'D'  
   LET l_amount = l_amount + g_pmdo_d[l_ac2].pmdo006 
   
   CASE
      WHEN g_pmdo_d[l_ac2].pmdo006 <= 0
         LET l_errno = "ade-00016"
      WHEN g_pmdo_d[l_ac2].pmdo006 > g_detail_d[l_ac1].pmdn007                           
         LET l_errno = "apm-00582"   #分批數量不可大於原採購數量 
      WHEN (g_pmdo_d[l_ac2].pmdo006 < g_pmdo_d[l_ac2].pmdo015 AND g_pmdo_d[l_ac2].pmdo015 <> 0)
         LET l_errno = "apm-00583"   #輸入的數量不可小於已收貨數量  
      WHEN l_amount > g_detail_d[l_ac1].pmdn007    
         LET l_errno = 'apm-00662'   #所有交期明細的數量總和不可大於原採購數量！
   END CASE
   
   IF NOT cl_null(l_errno) THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno
      LET g_errparam.popup  = TRUE
      CALL cl_err()

      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 寫入暫存檔
# Memo...........:
# Usage..........: CALL apmp842_ins_tmp(p_urgen_flag)
#                  RETURNING r_success
# Input parameter: p_urgen_flag    緊急度
# Return code....: r_success
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_ins_tmp(p_urgen_flag)
   DEFINE p_urgen_flag   LIKE type_t.chr1
   DEFINE r_success      LIKE type_t.num5
   
   LET r_success = TRUE
   
   INSERT INTO apmp842_tmp(sel,txn_type,urgen_flag,                               #170109-00037#10 1710120 by lori add:sel
                           pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,pmdo200,pmdo201,
                           pmdo004,  pmdo006,pmdo009, pmdo013,pmdo015)
        VALUES('Y','A',p_urgen_flag,                                              #170109-00037#10 1710120 by lori add:sel預設值=Y
               g_pmdo_d[l_ac2].pmdodocno,g_pmdo_d[l_ac2].pmdoseq,g_pmdo_d[l_ac2].pmdoseq1,g_pmdo_d[l_ac2].pmdoseq2,
               g_pmdo_d[l_ac2].pmdo200,  g_pmdo_d[l_ac2].pmdo201,g_pmdo_d[l_ac2].pmdo004,  
               g_pmdo_d[l_ac2].pmdo006,  g_pmdo_d[l_ac2].pmdo009,g_pmdo_d[l_ac2].pmdo013,
               g_pmdo_d[l_ac2].pmdo015)  
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "Insert error:apmp842_tmp"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 更新暫存檔
# Memo...........:
# Usage..........: CALL apmp842_upd_tmp(p_urgen_flag)
#                  RETURNING r_success
# Input parameter: p_urgen_flag   緊急度
# Return code....: r_success
# Date & Author..: 2014/11/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_upd_tmp(p_urgen_flag)
   DEFINE p_urgen_flag   LIKE type_t.chr1
   DEFINE r_success      LIKE type_t.num5
  #DEFINE l_cnt          LIKE type_t.num5    #170109-00037#10 170119 by lori mark
   DEFINE l_cnt          LIKE type_t.num10   #170109-00037#10 170119 by lori add
   DEFINE l_txn_type     LIKE type_t.chr5
   
   LET r_success = TRUE
   LET l_cnt = 0
   LET l_txn_type = ''
   
   SELECT COUNT(*) INTO l_cnt
     FROM pmdo_t
    WHERE pmdodocno = g_pmdo_d[l_ac2].pmdodocno
      AND pmdoseq = g_pmdo_d[l_ac2].pmdoseq
      AND pmdoseq1 = 1       
      AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2  
      AND pmdoent  = g_enterprise   #160905-00007#11 Add
   
   IF l_cnt = 0 THEN
      LET l_txn_type = 'A'
   ELSE
      LET l_txn_type = 'U'
   END IF   
   
   UPDATE apmp842_tmp 
      SET txn_type = l_txn_type,
          urgen_flag = p_urgen_flag,
          pmdo201  = g_pmdo_d[l_ac2].pmdo201,    
          pmdo006  = g_pmdo_d[l_ac2].pmdo006,    
          pmdo009  = g_pmdo_d[l_ac2].pmdo009,    
          pmdo013  = g_pmdo_d[l_ac2].pmdo013  
    WHERE pmdodocno = g_pmdo_d[l_ac2].pmdodocno
      AND pmdoseq = g_pmdo_d[l_ac2].pmdoseq
      AND pmdoseq1 = 1       
      AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'apmp842_tmp'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
      LET g_pmdo_d[l_ac2].* = g_pmdo_d_t.*
   END IF 

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 更新暫存檔
# Memo...........: 更新 apmp842_tmp.txn_type = 'D'
#                  後續批次處理時判斷, txn_type = D 時, 要DELETE pmdo_t & pmdq_t
# Usage..........: CALL apmp842_del_tmp()
#                  RETURNING r_success
# Return code....: r_success   
# Date & Author..: 2014/12/04 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_del_tmp()
   DEFINE r_success   LIKE type_t.num5
  #DEFINE l_cnt       LIKE type_t.num5    #170109-00037#10 170119 by lori mark
   DEFINE l_cnt       LIKE type_t.num10   #170109-00037#10 170119 by lori add
   
   LET r_success = TRUE
   LET l_cnt = 0
   
   IF l_ac1 > 0 AND l_ac2 > 0 THEN
      #刪除時須檢核若該分批序的已收貨數量已大於0時 則該筆交期明細不允許刪除 
      IF g_pmdo_d[l_ac2].pmdo015 > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = 'apm-00589'     
         LET g_errparam.extend = g_pmdo_d[l_ac2].pmdo015
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_transaction_end('N',0)
      ELSE     
         #是否取消單身 
         IF cl_ask_del_detail() THEN
            SELECT COUNT(*) INTO l_cnt
              FROM apmp842_tmp
             WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
               AND pmdoseq = g_detail_d[l_ac1].pmdnseq
               AND pmdoseq1 = 1 
               AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2                 
            
            IF l_cnt > 0 THEN            
               UPDATE apmp842_tmp
                  SET txn_type = 'D'
                WHERE pmdodocno = g_detail_d[l_ac1].pmdldocno
                  AND pmdoseq = g_detail_d[l_ac1].pmdnseq
                  AND pmdoseq1 = 1 
                  AND pmdoseq2 = g_pmdo_d[l_ac2].pmdoseq2                 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.extend = 'Update error:apmp842_tmp'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  LET r_success = FALSE
               END IF
           END IF               
         ELSE
            LET r_success = FALSE
         END IF      
      END IF
   END IF
    
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查選擇的資料是否正被其他人使用中
# Memo...........:
# Usage..........: CALL apmp842_lock_chk(p_pmdldocno)
#                  RETURNING r_success
# Input parameter: p_pmdldocno    採購單號
# Return code....: r_success      檢查結果
# Date & Author..: 2017/01/19 By Lori   #170109-00037#10
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp842_lock_chk(p_pmdldocno)
   DEFINE p_pmdldocno      LIKE pmdl_t.pmdldocno
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_chk_cnt        LIKE type_t.num10
   
   LET r_success = TRUE
   CALL cl_err_collect_init()
   CALL s_transaction_begin()

   LET l_chk_cnt = 0
   
   OPEN apmp842_chk_lock_pmdn USING p_pmdldocno
   IF SQLCA.sqlcode THEN
      LET l_chk_cnt = l_chk_cnt + 1
   END IF
   CLOSE apmp842_chk_lock_pmdn
   
   OPEN apmp842_chk_lock_pmdo USING p_pmdldocno
   IF SQLCA.sqlcode THEN
      LET l_chk_cnt = l_chk_cnt + 1
   END IF
   CLOSE apmp842_chk_lock_pmdo

   OPEN apmp842_chk_lock_pmdq USING p_pmdldocno
   IF SQLCA.sqlcode THEN
      LET l_chk_cnt = l_chk_cnt + 1
   END IF
   CLOSE apmp842_chk_lock_pmdq
   
   IF l_chk_cnt > 0  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ''
      LET g_errparam.code   = 'ast-00868'
      LET g_errparam.replace[1] = p_pmdldocno
      LET g_errparam.popup  = TRUE
      CALL cl_err()    
     
      LET r_success = FALSE
      
      CALL s_transaction_end('N',0)   

      #暫存檔資料須在transaction之外處理
      UPDATE apmp842_tmp 
         SET sel = 'N'
       WHERE pmdodocno = p_pmdldocno    
   ELSE     
      CALL s_transaction_end('Y',0)
   END IF

   CALL cl_err_collect_show()
   
   RETURN r_success           
END FUNCTION

#end add-point
 
{</section>}
 
