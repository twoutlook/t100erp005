#該程式未解開Section, 採用最新樣板產出!
{<section id="apmr070_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-06-29 17:00:02), PR版次:0002(2016-07-04 18:38:52)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000025
#+ Filename...: apmr070_x01
#+ Description: 採購折扣合約明細表
#+ Creator....: 05016(2016-04-29 10:38:03)
#+ Modifier...: 02749 -SD/PR- 02749
 
{</section>}
 
{<section id="apmr070_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="apmr070_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr070_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr070_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr070_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr070_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr070_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr070_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr070_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr070_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmevdocno.pmev_t.pmevdocno,pmevdocdt.pmev_t.pmevdocdt,pmevstus.pmev_t.pmevstus,l_pmevstus_desc.type_t.chr100,pmev001.pmev_t.pmev001,l_pmev001_desc.type_t.chr100,pmev002.pmev_t.pmev002,l_pmev002_desc.type_t.chr100,pmev003.pmev_t.pmev003,l_pmev003_desc.type_t.chr100,pmev004.pmev_t.pmev004,l_pmev004_desc.type_t.chr100,pmev005.pmev_t.pmev005,l_pmev005_desc.type_t.chr100,pmev006.pmev_t.pmev006,pmev007.pmev_t.pmev007,pmev008.pmev_t.pmev008,l_pmev008_desc.type_t.chr100,pmev009.pmev_t.pmev009,l_pme009_desc.type_t.chr100,pmev010.pmev_t.pmev010,l_pmev010_desc.type_t.chr100,pmev011.pmev_t.pmev011,pmev012.pmev_t.pmev012,pmexseq.pmex_t.pmexseq,l_pmex001_desc.type_t.chr100,pmex002.pmex_t.pmex002,l_pmex002_desc.type_t.chr100,l_pmex002_desc1.type_t.chr100,pmex003.pmex_t.pmex003,l_pmex003_desc.type_t.chr100,l_pmex005_desc.type_t.chr100,pmex007.pmex_t.pmex007,pmex006.pmex_t.pmex006,l_pmex006_desc.type_t.chr100,pmexsite.pmex_t.pmexsite,pmex008.pmex_t.pmex008,pmevsite.pmev_t.pmevsite,pmevent.pmev_t.pmevent" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   LET g_sql =" pmeyent.pmey_t.pmeyent, ",
              " pmeydocno.pmey_t.pmeydocno,",
              " pmeyseq.pmey_t.pmeyseq, ",
              " pmey001.pmey_t.pmey001, ",
              " pmey002.pmey_t.pmey002, ",
              " pmey003.pmey_t.pmey003, ",
              " pmey004.pmey_t.pmey004  "
   IF NOT cl_xg_create_tmptable(g_sql,2) THEN
      LET g_rep_success = 'N'
   END IF 
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr070_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         WHEN 2
            LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[2] CLIPPED,
                        " VALUES(?,?,?,?,?,?,?)"
            PREPARE insert_prep1 FROM g_sql
            IF STATUS THEN
               LET l_prep_str = "insert_prep1",i
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = l_prep_str
               LET g_errparam.code   = STATUS
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            
               CALL cl_xg_drop_tmptable()
               LET g_rep_success = 'N'
            END IF
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr070_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select =  " SELECT pmevdocno,pmevdocdt,pmevstus,  ",
                   " (SELECT pmevstus||'.'||gzcbl004 FROM gzcbl_t WHERE gzcbl001 = '13' AND gzcbl002 = pmevstus AND gzcbl003= '",g_dlang,"' ),    ",
                   "  pmev001,(SELECT ooag011  FROM ooag_t WHERE ooagent = pmevent AND ooag001 = pmev001),                                        ",
                   "  pmev002,(SELECT ooefl003 FROM ooefl_t WHERE ooeflent = pmevent AND ooefl001 = pmev002 AND ooefl002 = '",g_dlang,"' ),       ",
                   "  pmev003,(SELECT pmaal003 FROM pmaal_t WHERE pmaalent = pmevent AND pmaal001 = pmev003 AND pmaal002 = '",g_dlang,"' ),       ",
                   "  pmev004,(SELECT ooail003 FROM ooail_t WHERE ooailent = pmevent AND ooail001 = pmev004 AND ooail002 = '",g_dlang,"' ),       ",
                   "  pmev005,(SELECT oodbl004 FROM oodbl_t,ooef_t WHERE oodblent = pmevent AND oodblent = ooefent AND ooef001 = pmevsite         ", 
                   "                                                AND ooef019 = oodbl001 AND oodbl002 = pmev005 AND oodbl003 = '",g_dlang,"'),  ",
                   "  pmev006/100,pmev007,                                                                                                            ",
                   "  pmev008,(SELECT ooibl004 FROM ooibl_t WHERE ooiblent = pmevent AND ooibl002 = pmev008 AND ooibl003 = '",g_dlang,"' ) ,      ",
                   "  pmev009,(SELECT oocql004 FROM oocql_t WHERE oocqlent = pmevent AND oocql001 = '238' AND oocql002 = pmev009 AND oocql003= '",g_dlang,"' ), ",
                  #160621-00003#6 160629 by lori mark and add---(S)
                  #"  pmev010,(SELECT oocql004 FROM oocql_t WHERE oocqlent = pmevent AND oocql001 = '275' AND oocql002 = pmev010 AND oocql003= '",g_dlang,"' ), ",
                   "  pmev010,(SELECT oojdl003 FROM oojdl_t WHERE oojdlent = pmevent AND oojdl001 = pmev010 AND oojdl002= '",g_dlang,"' ), ",
                  #160621-00003#6 160629 by lori mark and add---(E)
                   "  pmev011,pmev012,pmexseq,  ",
                   "          (SELECT pmex001||'.'||gzcbl004 FROM gzcbl_t WHERE gzcbl001 = '2104' AND gzcbl002 = pmex001 AND gzcbl003= '",g_dlang,"' ),  ",
                   "  pmex002,(CASE WHEN pmex001 = '1' THEN (SELECT imaal003 FROM imaal_t WHERE imaalent = pmevent AND imaal001 = pmex002 AND imaal002 = '",g_dlang,"' )                            ",
                   "                WHEN pmex001 = '2' THEN (SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent = pmevent AND rtaxl001 = pmex002 AND rtaxl002 = '",g_dlang,"' )                            ",
                   "                WHEN pmex001 = '3' THEN (SELECT oocql004 FROM oocql_t WHERE oocqlent = pmevent AND oocql001 = '2003' AND oocql002 = pmex002 AND oocql003='",g_dlang,"'  ) END), ",
                   "          (CASE WHEN pmex001 = '1' THEN (SELECT imaal004 FROM imaal_t WHERE imaalent = pmevent AND imaal001 = pmex002 AND imaal002 = '",g_dlang,"') END),                       ",
                   "  pmex003,'',  ",
                   " (SELECT pmex005||'.'||gzcbl004 FROM gzcbl_t WHERE gzcbl001 = '2105' AND gzcbl002 = pmex005 AND gzcbl003= '",g_dlang,"' ), ",
                   "  pmex007, ",
                   "  pmex006,(SELECT oocal003 FROM oocal_t WHERE oocalent = pmevent AND oocal001 = pmex006 AND oocal002 = '",g_dlang,"'),     ",
                   "  pmexsite,pmex008/100,pmevsite,pmevent "
#   #end add-point
#   LET g_select = " SELECT pmevdocno,pmevdocdt,pmevstus,'',pmev001,'',pmev002,'',pmev003,'',pmev004, 
#       '',pmev005,'',pmev006,pmev007,pmev008,'',pmev009,'',pmev010,'',pmev011,pmev012,pmexseq,'',pmex002, 
#       '','',pmex003,'','',pmex007,pmex006,'',pmexsite,pmex008,pmevsite,pmevent"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from  = " FROM pmev_t                                                       ",
                 "      LEFT JOIN pmaa_t ON pmaa001 = pmev003 AND pmaaent = pmevent  ",
                 "      ,pmex_t                                                      ",
                 "      LEFT JOIN imaa_t ON imaaent = pmexent AND imaa001 = pmex002  ",
                 "      LEFT JOIN imaf_t ON imafent = pmexent AND imafsite = pmexsite AND imaf001 = pmex002 "                

#   #end add-point
#    LET g_from = " FROM  pmev_t  LEFT OUTER JOIN ( SELECT pmex_t.* FROM pmex_t  ) x  ON pmev_t.pmevent  
#        = x.pmexent AND pmev_t.pmevdocno = x.pmexdocno"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = "  WHERE pmevent = pmexent AND pmevdocno = pmexdocno AND ",tm.wc CLIPPED
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmev_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE apmr070_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr070_x01_curs CURSOR FOR apmr070_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr070_x01_ins_data()
DEFINE sr RECORD 
   pmevdocno LIKE pmev_t.pmevdocno, 
   pmevdocdt LIKE pmev_t.pmevdocdt, 
   pmevstus LIKE pmev_t.pmevstus, 
   l_pmevstus_desc LIKE type_t.chr100, 
   pmev001 LIKE pmev_t.pmev001, 
   l_pmev001_desc LIKE type_t.chr100, 
   pmev002 LIKE pmev_t.pmev002, 
   l_pmev002_desc LIKE type_t.chr100, 
   pmev003 LIKE pmev_t.pmev003, 
   l_pmev003_desc LIKE type_t.chr100, 
   pmev004 LIKE pmev_t.pmev004, 
   l_pmev004_desc LIKE type_t.chr100, 
   pmev005 LIKE pmev_t.pmev005, 
   l_pmev005_desc LIKE type_t.chr100, 
   pmev006 LIKE pmev_t.pmev006, 
   pmev007 LIKE pmev_t.pmev007, 
   pmev008 LIKE pmev_t.pmev008, 
   l_pmev008_desc LIKE type_t.chr100, 
   pmev009 LIKE pmev_t.pmev009, 
   l_pme009_desc LIKE type_t.chr100, 
   pmev010 LIKE pmev_t.pmev010, 
   l_pmev010_desc LIKE type_t.chr100, 
   pmev011 LIKE pmev_t.pmev011, 
   pmev012 LIKE pmev_t.pmev012, 
   pmexseq LIKE pmex_t.pmexseq, 
   l_pmex001_desc LIKE type_t.chr100, 
   pmex002 LIKE pmex_t.pmex002, 
   l_pmex002_desc LIKE type_t.chr100, 
   l_pmex002_desc1 LIKE type_t.chr100, 
   pmex003 LIKE pmex_t.pmex003, 
   l_pmex003_desc LIKE type_t.chr100, 
   l_pmex005_desc LIKE type_t.chr100, 
   pmex007 LIKE pmex_t.pmex007, 
   pmex006 LIKE pmex_t.pmex006, 
   l_pmex006_desc LIKE type_t.chr100, 
   pmexsite LIKE pmex_t.pmexsite, 
   pmex008 LIKE pmex_t.pmex008, 
   pmevsite LIKE pmev_t.pmevsite, 
   pmevent LIKE pmev_t.pmevent
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE sr1 RECORD
   pmeyent       LIKE pmey_t.pmeyent, 
   pmeydocno     LIKE pmey_t.pmeydocno,
   pmeyseq       LIKE pmey_t.pmeyseq,
   pmey001       LIKE pmey_t.pmey001,
   pmey002       LIKE pmey_t.pmey002,
   pmey003       LIKE pmey_t.pmey003,
   pmey004       LIKE pmey_t.pmey004 
END RECORD
DEFINE l_sql     STRING

    LET l_sql = "SELECT pmeyent,pmeydocno,pmeyseq,pmey001,pmey002,pmey003,pmey004 ",
                "  FROM pmey_t                                                    ",
                " WHERE pmeyent = ",g_enterprise,"     ",
                "   AND pmeydocno = ?  AND pmeyseq = ? "
    PREPARE apmr070_x01_subprep FROM l_sql
    DECLARE apmr070_x01_subcurs CURSOR FOR apmr070_x01_subprep
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr070_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       IF NOT cl_null(sr.pmex002) AND NOT cl_null(sr.pmex003) THEN
          CALL s_feature_description(sr.pmex002,sr.pmex003)
                          RETURNING g_sub_success,sr.l_pmex003_desc
       END IF     
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
         
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmevdocno,sr.pmevdocdt,sr.pmevstus,sr.l_pmevstus_desc,sr.pmev001,sr.l_pmev001_desc,sr.pmev002,sr.l_pmev002_desc,sr.pmev003,sr.l_pmev003_desc,sr.pmev004,sr.l_pmev004_desc,sr.pmev005,sr.l_pmev005_desc,sr.pmev006,sr.pmev007,sr.pmev008,sr.l_pmev008_desc,sr.pmev009,sr.l_pme009_desc,sr.pmev010,sr.l_pmev010_desc,sr.pmev011,sr.pmev012,sr.pmexseq,sr.l_pmex001_desc,sr.pmex002,sr.l_pmex002_desc,sr.l_pmex002_desc1,sr.pmex003,sr.l_pmex003_desc,sr.l_pmex005_desc,sr.pmex007,sr.pmex006,sr.l_pmex006_desc,sr.pmexsite,sr.pmex008,sr.pmevsite,sr.pmevent
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr070_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       OPEN apmr070_x01_subcurs USING sr.pmevdocno,sr.pmexseq
       FOREACH apmr070_x01_subcurs INTO sr1.*        
          EXECUTE insert_prep1 USING sr1.pmeyent,sr1.pmeydocno,sr1.pmeyseq,
                                     sr1.pmey001,sr1.pmey002,sr1.pmey003,sr1.pmey004
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.extend = "apmr070_x01_subcurs"
             LET g_errparam.code   = SQLCA.sqlcode 
             LET g_errparam.popup  = FALSE
             CALL cl_err()        
             LET g_rep_success = 'N'
             EXIT FOREACH
          END IF
       END FOREACH
       CLOSE apmr070_x01_subcurs
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr070_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="apmr070_x01.other_function" readonly="Y" >}

 
{</section>}
 
