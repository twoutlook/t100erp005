#該程式未解開Section, 採用最新樣板產出!
{<section id="apmp431.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2016-08-09 15:49:22), PR版次:0005(2016-09-05 18:56:02)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000042
#+ Filename...: apmp431
#+ Description: 採購折扣帳款處理作業
#+ Creator....: 02295(2015-07-03 11:17:16)
#+ Modifier...: 07024 -SD/PR- 01727
 
{</section>}
 
{<section id="apmp431.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#151229-00018#1  15/12/29  by Sarah     產生的倉退單應該要帶入庫位、儲位、批號,否則後面會產生不了inaj_t
#160809-00030#2  15/08/09  by dorislai  1.合約單號開窗，多過濾"已結案、未確認、已作廢"
#160905-00007#11 2016/09/05 By 01727     调整系统中无ENT的SQL条件增加ent
#                                       
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
GLOBALS "../../../com/sub/4gl/s_apmm101.inc"
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        pmevdocno           LIKE pmev_t.pmevdocno,   #合約編號
        pmexseq             LIKE pmex_t.pmexseq,     #合約項次
        l_docno             LIKE ooba_t.ooba002,     #帳款單別
        l_reason            LIKE oocq_t.oocq002,     #理由碼
        l_exchange_rate     LIKE type_t.chr1,        #匯率指定方式
        l_date              LIKE type_t.dat,         #單據日期   #2015/10/15 by stellar add
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
        sel                 LIKE type_t.chr1,        #選擇
        pmeo001             LIKE pmeo_t.pmeo001,     #合約編號
        pmeo002             LIKE pmeo_t.pmeo002,     #項次
#        pmeo005             LIKE pmex_t.pmex010,    #結算日期   #160809-00030#2-mod-(S)
        pmeo005             LIKE type_t.dat,         #結算日期   #160809-00030#2-mod-(E)
        pmev003             LIKE pmev_t.pmev003,     #帐款供应商
        pmev003_desc        LIKE pmaal_t.pmaal004,   #名稱        
        pmeo003             LIKE pmeo_t.pmeo003,     #入庫/倉退單號
        pmeo004             LIKE pmeo_t.pmeo004,     #項次
        pmeo006             LIKE pmeo_t.pmeo006,     #料件編號
        pmeo006_desc        LIKE imaal_t.imaal003,   #品名
        pmeo006_desc1       LIKE imaal_t.imaal004,   #規格
        pmeo007             LIKE pmeo_t.pmeo007,     #產品特徵
        pmeo007_desc        LIKE type_t.chr80,       #説明
        pmeo008             LIKE pmeo_t.pmeo008,     #原始數量
        pmeo009             LIKE pmeo_t.pmeo009,     #單位
        pmeo009_desc        LIKE oocal_t.oocal003,   #說明
        pmeo010             LIKE pmeo_t.pmeo010,     #原始單價
        pmeo011             LIKE pmeo_t.pmeo011,     #原始未稅金額
        pmeo012             LIKE pmeo_t.pmeo012,     #原始含稅金額
        pmeo013             LIKE pmeo_t.pmeo013,     #原始稅額
        pmeo021             LIKE pmeo_t.pmeo021,     #折扣數量
        pmeo020             LIKE pmeo_t.pmeo020,     #折扣單價
        pmeo017             LIKE pmeo_t.pmeo017,     #折扣未稅金額
        pmeo018             LIKE pmeo_t.pmeo018,     #折扣含稅金額
        pmeo019             LIKE pmeo_t.pmeo019,     #折扣稅額
        pmeo029             LIKE pmeo_t.pmeo029,     #調整折扣單價
        pmeo014             LIKE pmeo_t.pmeo014,     #調整折扣未稅金額
        pmeo015             LIKE pmeo_t.pmeo015,     #調整折扣含稅金額
        pmeo016             LIKE pmeo_t.pmeo016      #調整折扣稅額
                            END RECORD
DEFINE g_param              type_parameter
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_pmev019            LIKE pmev_t.pmev019      #帳款產生方式
DEFINE g_xrcasite           LIKE xrca_t.xrcasite     #帳務中心
DEFINE g_xrcald             LIKE xrca_t.xrcald       #帳套
DEFINE g_xrcacomp           LIKE xrca_t.xrcacomp     #所屬法人
DEFINE g_glaa001            LIKE glaa_t.glaa001      #使用幣別
DEFINE g_glaa016            LIKE glaa_t.glaa016      #本位幣二
DEFINE g_glaa020            LIKE glaa_t.glaa020      #本位幣三
DEFINE g_glaa024            LIKE glaa_t.glaa024      #單據別參照表號
DEFINE g_glaa121            LIKE glaa_t.glaa121      #子模組啟用分錄底稿
DEFINE g_gen_doc            STRING                   #產生的單據組成字串
DEFINE g_pmds               RECORD LIKE pmds_t.*
DEFINE g_pmdt               RECORD LIKE pmdt_t.*
DEFINE g_xrca               RECORD LIKE xrca_t.*
DEFINE g_xrcb               RECORD LIKE xrcb_t.*
DEFINE g_detail_d_t         type_g_detail_d
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="apmp431.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp431 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmp431_init()   
 
      #進入選單 Menu (="N")
      CALL apmp431_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp431
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="apmp431.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION apmp431_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   LET g_errshow = 1
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp431.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmp431_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   DEFINE l_ooef004      LIKE ooef_t.ooef004
   DEFINE l_ooef019      LIKE ooef_t.ooef019
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   LET g_param.pmexseq = ''
   #2015/10/15 by stellar modify ----- (S)
#   LET g_param.l_exchange_rate = '1'
   LET g_param.l_exchange_rate = '2'
   LET g_param.l_date = g_today
   #2015/10/15 by stellar modify ----- (E)
   LET g_errshow = 1
   IF NOT cl_null(g_argv[01]) THEN
      LET g_param.pmevdocno = g_argv[01]
      LET g_param.pmexseq = g_argv[02]
      CALL apmp431_query()
   END IF
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmp431_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         INPUT BY NAME g_param.pmevdocno,g_param.pmexseq,
                       g_param.l_docno,g_param.l_reason,g_param.l_exchange_rate
                      ,g_param.l_date   #2015/10/15 by stellar add
               ATTRIBUTE(WITHOUT DEFAULTS)
            
            AFTER FIELD pmevdocno
               IF NOT cl_null(g_param.pmevdocno) THEN
                  #合約編號檢查
                  IF NOT apmp431_pmevdocno_chk(g_param.pmevdocno) THEN
                     LET g_param.pmevdocno = ''
                     DISPLAY BY NAME g_param.pmevdocno
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_param.pmexseq) THEN
                     #合約項次檢查
                     IF NOT apmp431_pmexseq_chk(g_param.pmevdocno,g_param.pmexseq) THEN
                        LET g_param.pmevdocno = ''
                        DISPLAY BY NAME g_param.pmevdocno
                        NEXT FIELD CURRENT
                     END IF
                  END IF                  
                  #帶值
                  IF NOT apmp431_pmevdocno_default(g_param.pmevdocno) THEN
                     LET g_param.pmevdocno = ''
                     DISPLAY BY NAME g_param.pmevdocno
                     NEXT FIELD CURRENT
                  END IF       
#               ELSE
#                  NEXT FIELD CURRENT
               END IF
               CALL apmp431_set_entry()
               CALL apmp431_set_no_entry()
               
            BEFORE FIELD pmexseq
#               IF cl_null(g_param.pmevdocno) THEN
#                  NEXT FIELD pmevdocno
#               END IF
               
            AFTER FIELD pmexseq
               IF NOT cl_null(g_param.pmexseq) THEN
                  #合約項次檢查
                  IF NOT apmp431_pmexseq_chk(g_param.pmevdocno,g_param.pmexseq) THEN
                     LET g_param.pmexseq = ''
                     DISPLAY BY NAME g_param.pmexseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            BEFORE FIELD l_docno
               IF cl_null(g_param.pmevdocno) THEN
                  NEXT FIELD pmevdocno
               END IF
               
            AFTER FIELD l_docno
               IF NOT cl_null(g_param.l_docno) THEN
                  #單別檢查
                  IF NOT apmp431_docno_chk(g_param.l_docno) THEN
                     LET g_param.l_docno = ''
                     DISPLAY BY NAME g_param.l_docno
                     DISPLAY '' TO FORMONLY.l_docno_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #單別說明
                  CALL apmp431_docno_desc(g_param.l_docno)
               END IF
            
            BEFORE FIELD l_reason
               IF cl_null(g_param.pmevdocno) THEN 
                  NEXT FIELD pmevdocno
               END IF
               
            AFTER FIELD l_reason
               IF NOT cl_null(g_param.l_reason) THEN
                  #理由碼檢查
                  IF NOT apmp431_reason_chk(g_param.l_reason) THEN
                     LET g_param.l_reason = ''
                     DISPLAY BY NAME g_param.l_reason
                     DISPLAY '' TO FORMONLY.l_reason_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #理由碼說明
                  CALL apmp431_reason_desc(g_param.l_reason)
               END IF
               
            BEFORE FIELD l_exchange_reate
               IF cl_null(g_param.pmevdocno) THEN
                  NEXT FIELD pmevdocno
               END IF
            
            ON ACTION controlp INFIELD pmevdocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.pmevdocno
               LET l_ooef019 = ''
               SELECT ooef019 INTO l_ooef019 
                 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_site
               LET g_qryparam.arg1 = l_ooef019
               LET g_qryparam.where = " pmevdocno IN (SELECT pmeo001 FROM pmeo_t ",
                                      "                WHERE pmeoent = ",g_enterprise,
                                      "                  AND pmeosite= '",g_site,"'",
                                      "                  AND pmeo000 = '3' ",
                                      "                  AND pmeo025 = '1' )", #160809-00030#2-add-','
                                      " AND pmevstus NOT IN ('C','N','X')"     #160809-00030#2-add
               CALL q_pmevdocno()
               LET g_param.pmevdocno = g_qryparam.return1
               DISPLAY BY NAME g_param.pmevdocno
               NEXT FIELD pmevdocno
               
#            ON ACTION controlp INFIELD pmexseq
#               INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'i'
#               LET g_qryparam.reqry = FALSE
#               LET g_qryparam.default1 = g_param.pmexseq
#               LET g_qryparam.arg1 = g_param.pmevdocno
#               LET g_qryparam.where = " EXISTS(SELECT pmeo001,pmeo002 FROM pmeo_t ",
#                                      "         WHERE pmeoent = ",g_enterprise,
#                                      "           AND pmeosite = '",g_site,"'",
#                                      "           AND pmeo000 = '3' ",
#                                      "           AND pmeo001 = '",g_param.pmevdocno,"'",
#                                      "           AND pmeo002 = pmexseq ",
#                                      "           AND pmeo025 = '1') "
#               CALL q_pmexseq()
#               LET g_param.pmexseq = g_qryparam.return1
#               DISPLAY BY NAME g_param.pmexseq
#               NEXT FIELD pmexseq
            
            ON ACTION controlp INFIELD l_docno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.l_docno
               CASE g_pmev019
                  WHEN '1'
                       LET l_ooef004 = ''
                       SELECT ooef004 INTO l_ooef004
                         FROM ooef_t
                        WHERE ooefent = g_enterprise
                          AND ooef001 = g_site
                       LET g_qryparam.arg1 = l_ooef004
                       LET g_qryparam.arg2 = 'apmt580'
                  WHEN '2'
                       LET g_qryparam.arg1 = g_glaa024
                       LET g_qryparam.arg2 = 'axrt330'
               END CASE
               CALL q_ooba002_1()
               LET g_param.l_docno = g_qryparam.return1
               DISPLAY BY NAME g_param.l_docno
               CALL apmp431_docno_desc(g_param.l_docno)
               NEXT FIELD l_docno
               
            ON ACTION controlp INFIELD l_reason
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.l_reason
               CASE g_pmev019 
                  WHEN '1'   #倉退折讓
                       LET g_qryparam.arg1 = '313'
                       CALL q_oocq002()
                       LET g_param.l_reason = g_qryparam.return1
                       DISPLAY BY NAME g_param.l_reason
                  WHEN '2'   #雜項應付
               END CASE
               CALL apmp431_reason_desc(g_param.l_reason)
               NEXT FIELD l_reason
         END INPUT

         INPUT ARRAY g_detail_d FROM s_detail1.*
            ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                    INSERT ROW = FALSE,
                    DELETE ROW = FALSE,
                    APPEND ROW = FALSE)
            BEFORE INPUT
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac

            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO h_index
               LET g_detail_d_t.* = g_detail_d[l_ac].* 
            
            AFTER FIELD b_pmeo029
               IF NOT cl_ap_chk_range(g_detail_d[l_ac].pmeo029,"0","0","","","azz-00079",1) THEN
                  LET g_detail_d[l_ac].pmeo029 = g_detail_d_t.pmeo029
                  NEXT FIELD b_pmeo029
               END IF 
              
               IF NOT cl_null(g_detail_d[l_ac].pmeo029) THEN
                  #帶出調整折扣含未稅金額與稅額
                  CALL apmp431_pmeo029_default()                     
                  #不可大於原始未税金额(pmeo014)
                  IF (g_detail_d[l_ac].pmeo008 <0 AND g_detail_d[l_ac].pmeo014 < g_detail_d[l_ac].pmeo011)
                      OR (g_detail_d[l_ac].pmeo008 > 0 AND  g_detail_d[l_ac].pmeo014 > g_detail_d[l_ac].pmeo011) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apm-00977'
                     LET g_errparam.extend = g_detail_d[l_ac].pmeo014
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_detail_d[l_ac].pmeo029 = g_detail_d_t.pmeo029
                     #帶出調整折扣含未稅金額與稅額
                     CALL apmp431_pmeo029_default()
                     NEXT FIELD CURRENT
                  END IF   
               END IF
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
            CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmp431_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            IF cl_null(g_param.pmevdocno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00676'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               
               CALL cl_err()
               NEXT FIELD pmevdocno
            ELSE
               IF NOT cl_null(g_param.pmevdocno) THEN
                  #合約編號檢查
                  IF NOT apmp431_pmevdocno_chk(g_param.pmevdocno) THEN
                     LET g_param.pmevdocno = ''
                     DISPLAY BY NAME g_param.pmevdocno
                     NEXT FIELD pmevdocno
                  END IF
                  
                  #帶值
                  IF NOT apmp431_pmevdocno_default(g_param.pmevdocno) THEN
                     LET g_param.pmevdocno = ''
                     DISPLAY BY NAME g_param.pmevdocno
                     NEXT FIELD pmevdocno
                  END IF
               ELSE
                  NEXT FIELD CURRENT
               END IF
               CALL apmp431_set_entry()
               CALL apmp431_set_no_entry()
            END IF
            LET g_wc_filter = '1=1'  #160809-00030#2-add
            #end add-point
            CALL apmp431_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL apmp431_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            IF cl_null(g_param.l_docno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00603'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD l_docno
            ELSE
               #單別檢查
               IF NOT apmp431_docno_chk(g_param.l_docno) THEN
                  LET g_param.l_docno = ''
                  DISPLAY BY NAME g_param.l_docno
                  DISPLAY '' TO FORMONLY.l_docno_desc
                  NEXT FIELD l_docno
               END IF
                  
               #單別說明
               CALL apmp431_docno_desc(g_param.l_docno)
            END IF
            IF g_pmev019 = '1' THEN
               IF cl_null(g_param.l_reason) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00622'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
 
                  NEXT FIELD l_reason
               ELSE
                  #理由碼檢查
                  IF NOT apmp431_reason_chk(g_param.l_reason) THEN
                     LET g_param.l_reason = ''
                     DISPLAY BY NAME g_param.l_reason
                     DISPLAY '' TO FORMONLY.l_reason_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #理由碼說明
                  CALL apmp431_reason_desc(g_param.l_reason)
               END IF
            END IF
            CALL apmp431_batch_execute()
            CALL apmp431_b_fill()
            CONTINUE DIALOG
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp431.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION apmp431_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   
   #end add-point
        
   LET g_error_show = 1
   CALL apmp431_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp431.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmp431_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   
   LET g_sql = "SELECT 'Y',pmeo001,pmeo002,pmeo005,pmev003,b.pmaal004,pmeo003,pmeo004, ",
               "       pmeo006,imaal003,imaal004,pmeo007,'',pmeo008, ",
               "       pmeo009,oocal003,pmeo010,pmeo011,pmeo012,pmeo013,pmeo021,pmeo020, ",
               "       pmeo017,pmeo018,pmeo019,pmeo029,pmeo014,pmeo015,pmeo016 ",
               "  FROM pmeo_t ",
               "       LEFT OUTER JOIN imaal_t ON imaalent=",g_enterprise," AND imaal001=pmeo006 AND imaal002='",g_dlang,"'",
               "       LEFT OUTER JOIN oocal_t ON oocalent=",g_enterprise," AND oocal001=pmeo009 AND oocal002='",g_dlang,"'",
               "      ,pmev_t ",
               "       LEFT OUTER JOIN pmaal_t b ON b.pmaalent=",g_enterprise," AND b.pmaal001=pmev003 AND b.pmaal002='",g_dlang,"'",
               " WHERE pmeoent = ?",
               "   AND pmeosite= '",g_site,"'",
               "   AND pmeo000 = '3' ",
               "   AND pmeo001 = '",g_param.pmevdocno,"' ",
               "   AND pmeo025 = '1' ",
               "   AND pmevent = pmeoent ",
               "   AND pmevdocno = pmeo001 ",
               "   AND pmevstus NOT IN ('C','N','X') ",     #160809-00030#2-add
               "   AND ",g_wc_filter CLIPPED
   IF NOT cl_null(g_param.pmexseq) THEN
      LET g_sql = g_sql CLIPPED,
                  " AND pmeo002 = ",g_param.pmexseq
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY pmeo005,pmeo001,pmeo002,pmeo003,pmeo004 "
   #end add-point
 
   PREPARE apmp431_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmp431_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
      g_detail_d[l_ac].sel,g_detail_d[l_ac].pmeo001,
      g_detail_d[l_ac].pmeo002,g_detail_d[l_ac].pmeo005,g_detail_d[l_ac].pmev003,g_detail_d[l_ac].pmev003_desc,
      g_detail_d[l_ac].pmeo003,g_detail_d[l_ac].pmeo004,
      g_detail_d[l_ac].pmeo006,g_detail_d[l_ac].pmeo006_desc,
      g_detail_d[l_ac].pmeo006_desc1,g_detail_d[l_ac].pmeo007,g_detail_d[l_ac].pmeo007_desc,g_detail_d[l_ac].pmeo008,
      g_detail_d[l_ac].pmeo009,g_detail_d[l_ac].pmeo009_desc,g_detail_d[l_ac].pmeo010,g_detail_d[l_ac].pmeo011,
      g_detail_d[l_ac].pmeo012,g_detail_d[l_ac].pmeo013,g_detail_d[l_ac].pmeo021,g_detail_d[l_ac].pmeo020,
      g_detail_d[l_ac].pmeo017,g_detail_d[l_ac].pmeo018,g_detail_d[l_ac].pmeo019,g_detail_d[l_ac].pmeo029,
      g_detail_d[l_ac].pmeo014,g_detail_d[l_ac].pmeo015,g_detail_d[l_ac].pmeo016
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      
      #end add-point
      
      CALL apmp431_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apmp431_sel
   
   LET l_ac = 1
   CALL apmp431_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp431.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmp431_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="apmp431.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apmp431_detail_show()
   #add-point:show段define
   DEFINE l_success      LIKE type_t.num5
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   CALL s_feature_description(g_detail_d[l_ac].pmeo006,g_detail_d[l_ac].pmeo007)
        RETURNING l_success,g_detail_d[l_ac].pmeo007_desc
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp431.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION apmp431_filter()
   #add-point:filter段define
   DEFINE l_ooef019      LIKE ooef_t.ooef019
   
   {  #160809-00030#2-add
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   }  #160809-00030#2-add
   CLEAR FORM 
   CALL g_detail_d.clear()
   
   CONSTRUCT g_wc_filter ON pmeo001,pmeo002,pmeo005,pmeo003,pmeo004,pmeo006,pmeo007,
                            pmeo008,pmeo009,pmeo010,pmeo011,pmeo012,pmeo013,pmeo020,
                            pmeo021,pmeo017,pmeo018,pmeo019,pmeo029,pmeo014
        FROM s_detail1[1].b_pmeo001,s_detail1[1].b_pmeo002,s_detail1[1].b_pmeo005,s_detail1[1].b_pmeo003,
             s_detail1[1].b_pmeo004,s_detail1[1].b_pmeo006,s_detail1[1].b_pmeo007,s_detail1[1].b_pmeo008,
             s_detail1[1].b_pmeo009,s_detail1[1].b_pmeo010,s_detail1[1].b_pmeo011,s_detail1[1].b_pmeo012,
             s_detail1[1].b_pmeo013,s_detail1[1].b_pmeo020,s_detail1[1].b_pmeo021,s_detail1[1].b_pmeo017,
             s_detail1[1].b_pmeo018,s_detail1[1].b_pmeo019,s_detail1[1].b_pmeo029,s_detail1[1].b_pmeo014
             
      BEFORE CONSTRUCT
      
      ON ACTION controlp INFIELD b_pmeo001
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         LET l_ooef019 = ''
         SELECT ooef019 INTO l_ooef019 
           FROM ooef_t
          WHERE ooefent = g_enterprise
            AND ooef001 = g_site
         LET g_qryparam.arg1 = l_ooef019
         LET g_qryparam.where = " pmevdocno IN (SELECT pmeo001 FROM pmeo_t ",
                                "                WHERE pmeoent = ",g_enterprise,
                                "                  AND pmeosite= '",g_site,"'",
                                "                  AND pmeo000 = '3' ",
                                "                  AND pmeo025 = '1' )"
         CALL q_pmevdocno()
         DISPLAY g_qryparam.return1 TO b_pmeo001
         NEXT FIELD b_pmeo001
               
      ON ACTION controlp INFIELD b_pmeo003
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.where = " xmdkdocno IN (SELECT pmeo003 FROM pmeo_t ",
                                "                WHERE pmeoent = ",g_enterprise,
                                "                  AND pmeosite = '",g_site,"'",
                                "                  AND pmeo000 = '3' ",
                                "                  AND pmeo025 = '1' )"
         CALL q_xmdkdocno_1()
         DISPLAY g_qryparam.return1 TO b_pmeo003
         NEXT FIELD b_pmeo003
         
      ON ACTION controlp INFIELD b_pmeo006
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         
         CALL q_imaf001_15()
         DISPLAY g_qryparam.return1 TO b_pmeo006
         NEXT FIELD b_pmeo006
         
      ON ACTION controlp INFIELD b_pmeo009
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c' 
         LET g_qryparam.reqry = FALSE
         
         CALL q_ooca001_1()  
         DISPLAY g_qryparam.return1 TO b_pmeo009
         NEXT FIELD b_pmeo009
         
   END CONSTRUCT
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apmp431_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="apmp431.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION apmp431_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apmp431.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apmp431_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmp431_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp431.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 合約編號檢查
# Memo...........:
# Usage..........: CALL apmp431_pmevdocno_chk(p_pmevdocno)
#                  RETURNING r_success
# Input parameter: p_pmevdocno    合約編號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmevdocno_chk(p_pmevdocno)
DEFINE p_pmevdocno       LIKE pmev_t.pmevdocno
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_pmevdocno) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_pmevdocno
   IF cl_chk_exist("v_pmevdocno") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #須存在pmeo_t，且資料類型(pmeo000) = '3'、差異處理否(pmeo025) = '1'
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt 
     FROM pmeo_t
    WHERE pmeoent = g_enterprise
      AND pmeo000 = '3'
      AND pmeo001 = p_pmevdocno
      AND pmeo025 = '1'
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00667'
      LET g_errparam.extend = p_pmevdocno
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 合約編號帶值
# Memo...........:
# Usage..........: CALL apmp431_pmevdocno_default(p_pmevdocno)
#                  RETURNING r_success
# Input parameter: p_pmevdocno    合約編號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmevdocno_default(p_pmevdocno)
DEFINE p_pmevdocno       LIKE pmev_t.pmevdocno
DEFINE r_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5
DEFINE l_pmev019_t       LIKE pmev_t.pmev019

   LET r_success = TRUE
   LET g_xrcasite = ''
   LET g_xrcald = ''
   LET g_xrcacomp = ''
   LET g_glaa001 = ''
   LET g_glaa016 = ''
   LET g_glaa020 = ''
   LET g_glaa024 = ''
   LET g_glaa121 = ''
   
   IF cl_null(p_pmevdocno) THEN
      RETURN r_success
   END IF
   
   #判斷該合約單是1.倉退折讓或2.雜項應收
   LET l_pmev019_t = g_pmev019
   LET g_pmev019 = ''
   SELECT pmev019 INTO g_pmev019
     FROM pmev_t
    WHERE pmevent = g_enterprise
      AND pmevdocno = p_pmevdocno
   IF cl_null(g_pmev019) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00973'
      LET g_errparam.extend = p_pmevdocno
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CASE g_pmev019
      WHEN '1'   #倉退折讓
      WHEN '2'   #雜項應收
           #帶出財務資料
           #帳務中心(apcasite),帳套(apcald),所屬法人(apcacomp)
           CALL s_aap_get_default_apcasite('','','') 
                RETURNING l_success1,g_errno,g_xrcasite,g_xrcald,g_xrcacomp
           IF NOT l_success1 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = g_errno
              LET g_errparam.extend = p_pmevdocno
              LET g_errparam.popup = TRUE
              
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
           
           #單據別參照表號(glaa024)
           CALL s_ld_sel_glaa(g_xrcald,'glaa001|glaa016|glaa020|glaa024|glaa121') 
                RETURNING l_success1,g_glaa001,g_glaa016,g_glaa020,g_glaa024,g_glaa121
           IF NOT l_success1 THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   IF NOT cl_null(l_pmev019_t) AND g_pmev019 != l_pmev019_t THEN
      LET g_param.l_docno = ''
      DISPLAY BY NAME g_param.l_docno
      DISPLAY '' TO FORMONLY.l_docno_desc
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 欄位開放
# Memo...........:
# Usage..........: CALL apmp431_set_entry()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_set_entry()

   CALL cl_set_comp_entry("l_reason,l_exchange_rate",TRUE)
   
END FUNCTION

################################################################################
# Descriptions...: 欄位關閉
# Memo...........:
# Usage..........: CALL apmp431_set_no_entry()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_set_no_entry()

   IF NOT cl_null(g_param.pmevdocno) THEN
      IF g_pmev019 = '2' THEN
         CALL cl_set_comp_entry("l_reason,l_exchange_rate",FALSE)
         LET g_param.l_reason = ''
         LET g_param.l_exchange_rate = '1'
         DISPLAY BY NAME g_param.l_reason,g_param.l_exchange_rate
         DISPLAY '' TO l_reason_desc
      END IF
   END IF
END FUNCTION

################################################################################
# Descriptions...: 合約項次檢查
# Memo...........:
# Usage..........: CALL apmp431_pmexseq_chk(p_pmevdocno,p_pmexseq)
#                  RETURNING r_success
# Input parameter: p_pmevdocno    合約編號
#                : p_pmexseq      合約項次
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmexseq_chk(p_pmevdocno,p_pmexseq)
DEFINE p_pmevdocno       LIKE pmev_t.pmevdocno
DEFINE p_pmexseq         LIKE pmex_t.pmexseq
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_pmevdocno) OR cl_null(p_pmexseq) THEN
      RETURN r_success
   END IF
   
   #校驗
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_pmevdocno
   LET g_chkparam.arg2 = p_pmexseq
   IF cl_chk_exist("v_pmexseq") THEN
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #須存在pmeo_t，且資料類型(pmeo000) = '3'、差異處理否(pmeo025) = '1'
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt 
     FROM pmeo_t
    WHERE pmeoent = g_enterprise
      AND pmeo000 = '3'
      AND pmeo001 = p_pmevdocno
      AND pmeo002 = p_pmexseq
      AND pmeo025 = '1'
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00669'
      LET g_errparam.extend = p_pmevdocno,"+",p_pmexseq USING '<<<<<'
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 單別說明
# Memo...........:
# Usage..........: CALL apmp431_docno_desc(p_docno)
#                  
# Input parameter: p_docno        單別
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_docno_desc(p_docno)
DEFINE p_docno           LIKE ooba_t.ooba002
DEFINE l_docno_desc      LIKE type_t.chr80

   IF cl_null(p_docno) THEN
      RETURN
   END IF
   
   CASE g_pmev019
      WHEN '1'   #倉退折讓
           CALL s_aooi200_get_slip_desc(p_docno) RETURNING l_docno_desc
      WHEN '2'   #雜項應收
           CALL s_aooi200_fin_get_slip_desc(p_docno) RETURNING l_docno_desc
   END CASE
   
   DISPLAY l_docno_desc TO FORMONLY.l_docno_desc
END FUNCTION

################################################################################
# Descriptions...: 單別檢查
# Memo...........:
# Usage..........: CALL apmp431_docno_chk(p_docno)
#                  RETURNING r_success
# Input parameter: p_docno        單別
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_docno_chk(p_docno)
DEFINE p_docno           LIKE ooba_t.ooba002
DEFINE r_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5
DEFINE l_exist           LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_docno) THEN
      RETURN r_success
   END IF
   
   CASE g_pmev019
      WHEN '1'   #倉退折讓
           #檢查單別是否正確
           CALL s_aooi200_chk_slip(g_site,'',p_docno,'apmt580') RETURNING l_success1
           IF NOT l_success1 THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
           
           #檢查該單別可否被key人員對應的控制組使用
           CALL s_control_chk_doc('1',p_docno,'2',g_user,g_dept,'','') 
                RETURNING l_success1,l_exist
           IF l_success1 THEN
              IF NOT l_exist THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'axm-00015'
                 LET g_errparam.extend = p_docno
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
         
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           ELSE
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN '2'   #雜項應收
           CALL s_fin_slip_chk(p_docno,'axrt330',g_xrcald,'D-FIN-2001')
                RETURNING l_success1,g_errno
           IF NOT l_success1 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = g_errno
              LET g_errparam.extend = p_docno
              LET g_errparam.popup = TRUE
              
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 理由碼說明
# Memo...........:
# Usage..........: CALL apmp431_reason_desc(p_reason)
#                  
# Input parameter: p_reason       理由碼
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_reason_desc(p_reason)
DEFINE p_reason          LIKE oocq_t.oocq002
DEFINE l_reason_desc     LIKE type_t.chr80

   IF cl_null(p_reason) THEN
      RETURN 
   END IF
   
   CASE g_pmev019
      WHEN '1'   #倉退折讓
           CALL s_desc_get_acc_desc('313',p_reason) RETURNING l_reason_desc
      WHEN '2'   #雜項應收
         #無理由碼
   END CASE
   
   DISPLAY l_reason_desc TO FORMONLY.l_reason_desc
END FUNCTION

################################################################################
# Descriptions...: 理由碼檢查
# Memo...........:
# Usage..........: CALL apmp431_reason_chk(p_reason)
#                  RETURNING r_success
# Input parameter: p_reason       理由碼
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_reason_chk(p_reason)
DEFINE p_reason          LIKE oocq_t.oocq002
DEFINE r_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_reason) THEN
      RETURN r_success
   END IF
   
   #理由碼檢查
   CASE g_pmev019
      WHEN '1'   #倉退折讓
           CALL s_azzi650_chk_exist('313',p_reason) RETURNING l_success1
           IF NOT l_success1 THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN '2'   #雜項應收
   END CASE
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 帶出調整折扣含未稅金額與稅額
# Memo...........:
# Usage..........: CALL apmp431_pmeo029_default()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmeo029_default()
DEFINE l_curr            LIKE ooai_t.ooai001
DEFINE l_tax             LIKE oodb_t.oodb002
DEFINE l_exrate          LIKE ooan_t.ooan005
DEFINE l_amount          LIKE pmeo_t.pmeo014
DEFINE l_xrcd113         LIKE xrcd_t.xrcd113
DEFINE l_xrcd114         LIKE xrcd_t.xrcd114
DEFINE l_xrcd115         LIKE xrcd_t.xrcd115
DEFINE l_success         LIKE type_t.num5

   CASE g_param.l_exchange_rate
      WHEN '1'   #當下匯率
           SELECT pmev004,pmev005 INTO l_curr,l_tax
             FROM pmev_t
            WHERE pmevent = g_enterprise
              AND pmevdocno = g_detail_d[l_ac].pmeo001
              
           #當前匯率
           CALL apmp431_get_exrate(g_detail_d[l_ac].pmev003,l_curr) RETURNING l_success,l_exrate
           IF NOT l_success THEN
              RETURN
           END IF
      WHEN '2'   #依據入庫單原始匯率
           SELECT pmds037,pmdt046,pmds038 INTO l_curr,l_tax,l_exrate
             FROM pmds_t,pmdt_t
            WHERE pmdsent = g_enterprise
              AND pmdsdocno = pmdtdocno
              AND pmdsdocno = g_detail_d[l_ac].pmeo003
              AND pmdtseq = g_detail_d[l_ac].pmeo004
   END CASE
   
   LET l_amount = g_detail_d[l_ac].pmeo021 * g_detail_d[l_ac].pmeo029
   CALL s_tax_count(g_site,l_tax,l_amount,g_detail_d[l_ac].pmeo021,l_curr,l_exrate)
        RETURNING g_detail_d[l_ac].pmeo014,g_detail_d[l_ac].pmeo016,g_detail_d[l_ac].pmeo015,
                  l_xrcd113,l_xrcd114,l_xrcd115
END FUNCTION

################################################################################
# Descriptions...: 取當前的匯率
# Memo...........:
# Usage..........: CALL apmp431_get_exrate(p_customer,p_curr)
#                  RETURNING r_success,r_exrate
# Input parameter: p_customer     客戶編號
#                : p_curr         幣別
# Return code....: r_success      TRUE/FALSE
#                : r_exrate       匯率
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_get_exrate(p_customer,p_curr)
DEFINE p_customer        LIKE pmaa_t.pmaa001
DEFINE p_curr            LIKE ooai_t.ooai001
DEFINE r_success         LIKE type_t.num5
DEFINE r_exrate          LIKE ooan_t.ooan005
DEFINE l_success         LIKE type_t.num5
DEFINE l_controlno       LIKE ooha_t.ooha001
DEFINE l_para_data       LIKE type_t.chr80
DEFINE p_to              LIKE xmdk_t.xmdk016

   LET r_success = TRUE
   LET r_exrate = ''
   
   IF cl_null(p_customer) OR cl_null(p_curr) THEN
      RETURN r_success,r_exrate
   END IF
   
   #取得控制組編號
   CALL s_control_get_group('3',g_user,g_dept) RETURNING l_success,l_controlno
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CALL s_apmm101_default_pmab('1',l_controlno,g_site,p_customer) 
        RETURNING g_pmab.*


   LET l_para_data = ''
   CASE g_pmab.pmab057
      WHEN '1'  #內
         CALL cl_get_para(g_enterprise,g_site,'S-BAS-0014') RETURNING l_para_data
      WHEN '2'  #外
         CALL cl_get_para(g_enterprise,g_site,'S-BAS-0015') RETURNING l_para_data
   END CASE
   #取本幣
   SELECT ooef016 INTO p_to
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site  

   CALL s_aooi160_get_exrate('1',g_site,g_today,p_curr,p_to,'',l_para_data)
        RETURNING r_exrate
     
   RETURN r_success,r_exrate
END FUNCTION

################################################################################
# Descriptions...: 資料處理
# Memo...........:
# Usage..........: CALL apmp431_batch_execute()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_batch_execute()
DEFINE l_success         LIKE type_t.num5
DEFINE l_prog            LIKE gzzz_t.gzzz001
DEFINE ls_js             STRING
DEFINE lc_param          type_parameter
DEFINE la_param          RECORD
          prog           STRING,
          param          DYNAMIC ARRAY OF STRING
                         END RECORD

   #合約編號帶出預設值
   IF cl_null(g_param.pmevdocno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00678'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      RETURN
   ELSE
      CALL apmp431_pmevdocno_default(g_param.pmevdocno)
           RETURNING l_success
      IF NOT l_success THEN
         RETURN
      END IF
   END IF
   
   CALL apmp431_create_temptable() RETURNING l_success
   IF NOT l_success THEN
      RETURN 
   END IF
   
   #若有需要產生分錄時要呼叫的TEMP TABLE
   CALL s_pre_voucher_cre_tmp_table() RETURNING l_success
   IF NOT l_success THEN 
      RETURN
   END IF
   CALL s_voucher_cre_ar_tmp_table() RETURNING l_success 
   IF NOT l_success THEN 
      RETURN
   END IF   
   CALL s_axrp133_create_success_tmp() RETURNING l_success
   IF NOT l_success THEN 
      RETURN
   END IF 
   CALL s_tax_recount_tmp()
   CALL s_transaction_begin()
   CALL cl_err_collect_init()
   
   #將勾選的資料新增到temp table
   CALL apmp431_ins_temptable() RETURNING l_success
   IF l_success THEN
      CASE g_pmev019 
         WHEN '1'   #倉退折讓
              #新增倉退單維護作業
              CALL apmp431_ins_apmt580() RETURNING l_success
         WHEN '2'   #雜項應收
              #新增雜項應付
              CALL apmp431_ins_axrt330() RETURNING l_success
      END CASE
   END IF
   
   CALL cl_err_collect_show()
   IF l_success THEN
      CALL s_transaction_end('Y','0')
      IF cl_ask_confirm('aps-00127') THEN
         CASE g_pmev019
            WHEN '1'
                 LET la_param.prog = 'apmt580'
                 LET la_param.param[4] = g_gen_doc
            WHEN '2'
                 LET la_param.prog = 'axrt330'
                 LET la_param.param[1] = g_xrca.xrcald
                 LET la_param.param[2] = g_xrca.xrcadocno
         END CASE
         LET ls_js = util.JSON.stringify(la_param )
         DISPLAY ls_js
         CALL cl_cmdrun_wait(ls_js)
      END IF
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   
   CALL apmp431_drop_temptable()
END FUNCTION

################################################################################
# Descriptions...: Create Temp Table
# Memo...........:
# Usage..........: CALL apmp431_create_temptable()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/12 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_create_temptable()
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   CALL apmp431_drop_temptable()
   CREATE TEMP TABLE apmp431_temp1(
      pmev003        LIKE pmev_t.pmev003,     #帳款客戶
      pmev004        LIKE pmev_t.pmev004,     #幣別
      pmev005        LIKE pmev_t.pmev005,     #稅別
      pmev006        LIKE pmev_t.pmev006,     #稅率
      pmev007        LIKE pmev_t.pmev007,     #含稅否
      pmev008        LIKE pmev_t.pmev008,     #收款條件
      pmev009        LIKE pmev_t.pmev009,     #交易條件
      pmev010        LIKE pmev_t.pmev010,     #銷售通路
      exrate         LIKE ooan_t.ooan005,     #匯率
      pmeo001        LIKE pmeo_t.pmeo001,     #合約編號
      pmeo002        LIKE pmeo_t.pmeo002,     #合約項次
      pmeo003        LIKE pmeo_t.pmeo003,     #入庫/倉退單號
      pmeo004        LIKE pmeo_t.pmeo004,     #入庫/倉退項次
      pmeo006        LIKE pmeo_t.pmeo006,     #料件編號
      pmeo007        LIKE pmeo_t.pmeo007,     #產品特徵
      pmeo014        LIKE pmeo_t.pmeo014,     #未稅金額
      pmeo015        LIKE pmeo_t.pmeo015,     #含稅金額
      pmeo016        LIKE pmeo_t.pmeo016,     #稅額
      pmeo021        LIKE pmeo_t.pmeo021,     #折扣數量
      pmeo022        LIKE pmeo_t.pmeo022,     #采购单号
      pmeo023        LIKE pmeo_t.pmeo023,     #采购项次
      pmeo029        LIKE pmeo_t.pmeo029,     #調整折扣單價
      pmeo005        DATETIME YEAR TO SECOND  #結算日期
   )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create apmp431_tmp1'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
      
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: Drop Temp Table
# Memo...........:
# Usage..........: CALL apmp431_drop_temptable()
#                  
# Input parameter: 
# Return code....:  
# Date & Author..: 2015/06/12 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_drop_temptable()

   DROP TABLE apmp431_temp1;
   
END FUNCTION

################################################################################
# Descriptions...: 將勾選的資料新增到Temp Table
# Memo...........:
# Usage..........: CALL apmp431_ins_temptable()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/06/15 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_ins_temptable()
DEFINE r_success         LIKE type_t.num5
DEFINE l_i               LIKE type_t.num5
DEFINE l_pmev004         LIKE pmev_t.pmev004
DEFINE l_pmev005         LIKE pmev_t.pmev005
DEFINE l_pmev006         LIKE pmev_t.pmev006
DEFINE l_pmev007         LIKE pmev_t.pmev007
DEFINE l_pmev008         LIKE pmev_t.pmev008
DEFINE l_pmev009         LIKE pmev_t.pmev009
DEFINE l_pmev010         LIKE pmev_t.pmev010
DEFINE l_exrate          LIKE ooan_t.ooan005
DEFINE l_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_pmeo022         LIKE pmeo_t.pmeo022
DEFINE l_pmeo023         LIKE pmeo_t.pmeo023

   LET r_success = TRUE
   
   FOR l_i = 1 TO g_detail_d.getLength()
      IF cl_null(g_detail_d[l_i].pmeo001) THEN
         CONTINUE FOR
      END IF
      IF g_detail_d[l_i].sel ='N' THEN
         CONTINUE FOR
      END IF      
      LET l_pmev004 = ''
      LET l_pmev005 = ''
      LET l_pmev006 = ''
      LET l_pmev007 = ''
      LET l_pmev008 = ''
      LET l_pmev009 = ''
      LET l_pmev010 = ''
      LET l_exrate = ''
      CASE g_param.l_exchange_rate
         WHEN '1'   #當下匯率
              #幣別、稅別、稅率、含稅否、付款條件、交易條件、採購通路
              SELECT pmev004,pmev005,pmev006,pmev007,pmev008,pmev009,pmev010
                INTO l_pmev004,l_pmev005,l_pmev006,l_pmev007,l_pmev008,l_pmev009,l_pmev010
                FROM pmev_t
               WHERE pmevent = g_enterprise
                 AND pmevdocno = g_detail_d[l_i].pmeo001
              IF SQLCA.sqlcode THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = SQLCA.sqlcode
                 LET g_errparam.extend = 'sel pmev_t:',g_detail_d[l_i].pmeo001
                 LET g_errparam.popup = TRUE
                 
                 CALL cl_err()
                 LET r_success = FALSE
                 EXIT FOR
              END IF
              
              #匯率：當前匯率
              CALL apmp431_get_exrate(g_detail_d[l_i].pmev003,l_pmev004) RETURNING l_success,l_exrate
              IF NOT l_success THEN
                 LET r_success = FALSE
                 EXIT FOR
              END IF
         WHEN '2'   #依據入庫單原始匯率
                      #幣別、稅別、稅率、含稅否、付款條件、交易條件、採購通路、匯率
              SELECT pmds037,pmds033,pmds034,pmds035,pmds031,pmds032,pmds012,pmds038
                INTO l_pmev004,l_pmev005,l_pmev006,l_pmev007,l_pmev008,l_pmev009,l_pmev010,l_exrate
                FROM pmds_t
               WHERE pmdsent = g_enterprise
                 AND pmdsdocno = g_detail_d[l_i].pmeo003
              IF SQLCA.sqlcode THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = SQLCA.sqlcode
                 LET g_errparam.extend = 'sel xmdk_t:',g_detail_d[l_i].pmeo003
                 LET g_errparam.popup = TRUE
                 
                 CALL cl_err()
                 LET r_success = FALSE
                 EXIT FOR
              END IF
      END CASE
      SELECT pmeo022,pmeo023 INTO l_pmeo022,l_pmeo023
        FROM pmeo_t
       WHERE pmeoent = g_enterprise
         AND pmeo000 = '3'
         AND pmeo001 = g_detail_d[l_i].pmeo001
         AND pmeo002 = g_detail_d[l_i].pmeo002
         AND pmeo003 = g_detail_d[l_i].pmeo003
         AND pmeo004 = g_detail_d[l_i].pmeo004
         AND pmeo005 = g_detail_d[l_i].pmeo005         
      INSERT INTO apmp431_temp1(pmev003,pmev004,pmev005,pmev006,pmev007,pmev008,pmev009,pmev010,exrate,
                                pmeo001,pmeo002,pmeo003,pmeo004,pmeo006,pmeo007,pmeo014,pmeo015,pmeo016,
                                pmeo021,pmeo022,pmeo023,pmeo029,pmeo005)
         VALUES(g_detail_d[l_i].pmev003,l_pmev004,l_pmev005,l_pmev006,l_pmev007,l_pmev008,l_pmev009,l_pmev010,l_exrate,
                g_detail_d[l_i].pmeo001,g_detail_d[l_i].pmeo002,g_detail_d[l_i].pmeo003,g_detail_d[l_i].pmeo004,
                g_detail_d[l_i].pmeo006,g_detail_d[l_i].pmeo007,g_detail_d[l_i].pmeo014,g_detail_d[l_i].pmeo015,
                g_detail_d[l_i].pmeo016,g_detail_d[l_i].pmeo021,l_pmeo022,l_pmeo023,g_detail_d[l_i].pmeo029,g_detail_d[l_i].pmeo005)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins temp'
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOR
      END IF
   END FOR
   
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt 
     FROM apmp431_temp1
   IF cl_null(l_cnt) OR l_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'afa-00063'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 新增倉退單
# Memo...........:
# Usage..........: CALL apmp431_ins_apmt580()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_ins_apmt580()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_pmds007         LIKE pmds_t.pmds007
DEFINE l_pmds037         LIKE pmds_t.pmds037
DEFINE l_pmds033         LIKE pmds_t.pmds033
DEFINE l_pmds034         LIKE pmds_t.pmds034
DEFINE l_pmds035         LIKE pmds_t.pmds035
DEFINE l_pmds031         LIKE pmds_t.pmds031
DEFINE l_pmds032         LIKE pmds_t.pmds032
DEFINE l_pmds012         LIKE pmds_t.pmds012
DEFINE l_pmds038         LIKE pmds_t.pmds038
DEFINE l_pmds055         LIKE pmds_t.pmds055
DEFINE l_success         LIKE type_t.num5
DEFINE l_success1        LIKE type_t.num5
DEFINE l_tot_success     LIKE type_t.num5
DEFINE l_pmeo001         LIKE pmeo_t.pmeo001
DEFINE l_pmeo002         LIKE pmeo_t.pmeo002
DEFINE l_pmeo003         LIKE pmeo_t.pmeo003
DEFINE l_pmeo004         LIKE pmeo_t.pmeo004
DEFINE l_pmeo005         LIKE pmeo_t.pmeo005
DEFINE l_pmeo006         LIKE pmeo_t.pmeo006
DEFINE l_pmeo007         LIKE pmeo_t.pmeo007
DEFINE l_pmeo014         LIKE pmeo_t.pmeo014
DEFINE l_pmeo015         LIKE pmeo_t.pmeo015
DEFINE l_pmeo016         LIKE pmeo_t.pmeo016
DEFINE l_pmeo021         LIKE pmeo_t.pmeo021
DEFINE l_pmeo029         LIKE pmeo_t.pmeo029
DEFINE l_pmeo022         LIKE pmeo_t.pmeo022
DEFINE l_pmeo023         LIKE pmeo_t.pmeo023
DEFINE l_xrcd113         LIKE xrcd_t.xrcd113
DEFINE l_xrcd114         LIKE xrcd_t.xrcd114
DEFINE l_xrcd115         LIKE xrcd_t.xrcd115
DEFINE l_xrcd123         LIKE xrcd_t.xrcd123
DEFINE l_xrcd124         LIKE xrcd_t.xrcd124
DEFINE l_xrcd125         LIKE xrcd_t.xrcd125
DEFINE l_xrcd133         LIKE xrcd_t.xrcd133
DEFINE l_xrcd134         LIKE xrcd_t.xrcd134
DEFINE l_xrcd135         LIKE xrcd_t.xrcd135
DEFINE l_seq             LIKE xmdl_t.xmdlseq
DEFINE l_n               LIKE type_t.num5      #2015/10/15 by stellar add

   LET r_success = TRUE
   LET l_tot_success = TRUE
   LET l_success = TRUE
   LET g_gen_doc = ''
   LET l_sql = "SELECT DISTINCT pmev003,pmev004,pmev005,pmev006,pmev007,pmev008,pmev009,pmev010,exrate,pmeo001 ",
               "  FROM apmp431_temp1 ",
               " GROUP BY pmev003,pmev004,pmev005,pmev006,pmev007,pmev008,pmev009,pmev010,exrate,pmeo001 ",
               " ORDER BY pmev003,pmev004,pmev005,pmev006,pmev007,pmev008,pmev009,pmev010,exrate,pmeo001 "
   PREPARE apmp431_ins_apmt580_pre FROM l_sql
   DECLARE apmp431_ins_apmt580_cs CURSOR FOR apmp431_ins_apmt580_pre
      
   #將相同的料件+產品特徵、調整折扣單價做匯總產生倉退明細
   LET l_sql = "SELECT DISTINCT pmeo002,pmeo003,pmeo004,pmeo006,pmeo007,",
               "       pmeo014,pmeo015,pmeo016,pmeo021,pmeo022,",
               "       pmeo023,pmeo029,pmeo005",
               "  FROM apmp431_temp1 ",
               " WHERE pmev003 = ? ",
               "   AND pmev004 = ? ",
               "   AND pmev005 = ? ",
               "   AND pmev006 = ? ",
               "   AND pmev007 = ? ",
               "   AND pmev008 = ? ",
               "   AND pmev009 = ? ",
               "   AND pmev010 = ? ",
               "   AND exrate = ? ",
               "   AND pmeo001 = ? ",
               " ORDER BY pmeo002,pmeo003,pmeo004,pmeo022,pmeo023 "
   PREPARE apmp431_ins_apmt580_pre1 FROM l_sql
   DECLARE apmp431_ins_apmt580_cs1 CURSOR FOR apmp431_ins_apmt580_pre1
   
#   #將有勾選產生帳款處理的pmeo_t進行更新
#   LET l_sql = "SELECT pmeo001,pmeo002,pmeo003,pmeo004,pmeo005 ",
#               "  FROM apmp431_temp1 ",
#               " WHERE pmev003 = ? ",
#               "   AND pmev004 = ? ",
#               "   AND pmev005 = ? ",
#               "   AND pmev006 = ? ",
#               "   AND pmev007 = ? ",
#               "   AND pmev008 = ? ",
#               "   AND pmev009 = ? ",
#               "   AND pmev010 = ? ",
#               "   AND exrate = ? ",
#               "   AND pmeo001 = ? "
#   PREPARE apmp431_ins_apmt580_pre2 FROM l_sql
#   DECLARE apmp431_ins_apmt580_cs2 CURSOR FOR apmp431_ins_apmt580_pre2
   
   FOREACH apmp431_ins_apmt580_cs INTO l_pmds007,l_pmds037,l_pmds033,l_pmds034,l_pmds035,
                                       l_pmds031,l_pmds032,l_pmds012,l_pmds038,l_pmds055
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'apmp431_ins_axmt600_cs:'
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      IF NOT l_success THEN
         LET l_tot_success = FALSE
      END IF
      LET l_success = TRUE
      
      #銷售單頭新增
      INITIALIZE g_pmds.* TO NULL
      
      #新增預設
      CALL apmp431_pmds_init()
      
      #單據別預設
      #CALL apmp431_pmds_doc_default()
      
      #客戶預設
      LET g_pmds.pmds007 = l_pmds007
      CALL apmp431_pmds_customer_default()
           RETURNING l_success1
      IF NOT l_success1 THEN
         LET l_success = FALSE
         CONTINUE FOREACH
      END IF
      
      #給值
      LET g_pmds.pmds008 = g_pmds.pmds007   #帳款供應商
      LET g_pmds.pmds009 = g_pmds.pmds007   #送貨供應商
      LET g_pmds.pmds014 = '1'   #多角性質
      LET g_pmds.pmds100 = '4'   #倉退方式
      LET g_pmds.pmds054 = '4'   #資料來源
      LET g_pmds.pmds055 = l_pmds055   #來源單號
      
      #幣別、稅別、稅率、含稅否、收款條件、交易條件、銷售通路、匯率給值
      LET g_pmds.pmds037 = l_pmds037
      LET g_pmds.pmds033 = l_pmds033
      LET g_pmds.pmds034 = l_pmds034
      LET g_pmds.pmds035 = l_pmds035
      LET g_pmds.pmds031 = l_pmds031
      LET g_pmds.pmds032 = l_pmds032
      LET g_pmds.pmds012 = l_pmds012
      LET g_pmds.pmds038 = l_pmds038
      
      #單據別自動編碼
      CALL s_aooi200_gen_docno(g_site,g_param.l_docno,g_pmds.pmdsdocdt,'apmt580')
           RETURNING l_success,g_pmds.pmdsdocno
      IF NOT l_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00003'
         LET g_errparam.extend = g_param.l_docno
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INSERT INTO pmds_t VALUES (g_pmds.*)
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins pmds_t'
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #新增單身
      LET l_seq = 1
      OPEN apmp431_ins_apmt580_cs1 USING l_pmds007,l_pmds037,l_pmds033,l_pmds034,l_pmds035,
                                         l_pmds031,l_pmds032,l_pmds012,l_pmds038,l_pmds055
      FOREACH apmp431_ins_apmt580_cs1 INTO l_pmeo002,l_pmeo003,l_pmeo004,l_pmeo006,l_pmeo007,
                                           l_pmeo014,l_pmeo015,l_pmeo016,l_pmeo021,l_pmeo022,
                                           l_pmeo023,l_pmeo029,l_pmeo005
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'apmp431_ins_apmt580_cs1:'
            LET g_errparam.popup = TRUE
            
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         INITIALIZE g_pmdt.* TO NULL
         LET g_pmdt.pmdtent = g_pmds.pmdsent
         LET g_pmdt.pmdtsite= g_pmds.pmdssite
         LET g_pmdt.pmdtdocno = g_pmds.pmdsdocno
         LET g_pmdt.pmdtseq = l_seq
         LET g_pmdt.pmdt006 = l_pmeo006   #料件編號
         LET g_pmdt.pmdt007 = l_pmeo007   #產品特征                      
         LET g_pmdt.pmdt005 = '1'         #子件特性
         LET g_pmdt.pmdt062 = 'N'         #多庫儲批收貨入庫
         #收货单号+收货项次
         SELECT pmdt027,pmdt028 INTO g_pmdt.pmdt027,g_pmdt.pmdt028
           FROM pmdt_t
          WHERE pmdtent = g_enterprise
            AND pmdtdocno = l_pmeo003
            AND pmdtseq = l_pmeo004 
         IF cl_null(g_pmdt.pmdt027) THEN LET g_pmdt.pmdt027 = l_pmeo003 END IF 
         IF cl_null(g_pmdt.pmdt028) THEN LET g_pmdt.pmdt028 = l_pmeo004 END IF          
         #采购单号+采购项次
         LET g_pmdt.pmdt001 = l_pmeo022
         LET g_pmdt.pmdt002 = l_pmeo023

         #2015/10/15 by stellar add ----- (S)
         #採購單號、採購項次、採購項序、採購分批序、倉庫、儲位、批號
         SELECT pmdt001,pmdt002,pmdt003,pmdt004
               ,pmdt016,pmdt017,pmdt018  #151229-00018#1 add
           INTO g_pmdt.pmdt001,g_pmdt.pmdt002,g_pmdt.pmdt003,g_pmdt.pmdt004
               ,g_pmdt.pmdt016,g_pmdt.pmdt017,g_pmdt.pmdt018  #151229-00018#1 add           
           FROM pmdt_t
          WHERE pmdtent = g_enterprise
            AND pmdtdocno = l_pmeo003
            AND pmdtseq = l_pmeo004
         #2015/10/15 by stellar add ----- (E)

         #單位
         SELECT pmex006 INTO g_pmdt.pmdt019 
           FROM pmex_t
          WHERE pmexent = g_enterprise
            AND pmexdocno = l_pmds055
            AND pmexseq = l_pmeo002
         
         LET g_pmdt.pmdt020 = l_pmeo021
         
         #營運據點是否使用參考單位(若不使用為'')
         IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = "N" THEN
            LET g_pmdt.pmdt021 = ''  #參考單位
         ELSE
            SELECT imaf015 INTO g_pmdt.pmdt021
              FROM imaf_t
             WHERE imafent = g_enterprise
               AND imafsite = g_site
               AND imaf001 = l_pmeo006              
         END IF
         
         #推算參考數量
         IF NOT cl_null(g_pmdt.pmdt006) AND NOT cl_null(g_pmdt.pmdt019) AND
            NOT cl_null(g_pmdt.pmdt021) AND NOT cl_null(g_pmdt.pmdt020) THEN

            CALL s_aooi250_convert_qty(g_pmdt.pmdt006,g_pmdt.pmdt019,g_pmdt.pmdt021,g_pmdt.pmdt020)
                 RETURNING l_success1,g_pmdt.pmdt022
            IF NOT l_success1 THEN
               LET l_success = FALSE
               CONTINUE FOREACH
            END IF
         ELSE
            LET g_pmdt.pmdt022 = ''
         END IF
         
         LET g_pmdt.pmdt023 = g_pmdt.pmdt019
         LET g_pmdt.pmdt024 = g_pmdt.pmdt020
         LET g_pmdt.pmdt026 = 'N'
         LET g_pmdt.pmdt036 = l_pmeo029
         
         #稅別、稅率
         LET g_pmdt.pmdt046 = g_pmds.pmds033
         LET g_pmdt.pmdt037 = g_pmds.pmds034
            
         #含未稅金額與稅額
         CALL s_tax_ins(g_pmds.pmdsdocno,g_pmdt.pmdtseq,0,g_site,g_pmdt.pmdt024*g_pmdt.pmdt036,
                        g_pmdt.pmdt046,g_pmdt.pmdt024,g_pmds.pmds037,g_pmds.pmds038,'','','')
              RETURNING g_pmdt.pmdt038,g_pmdt.pmdt047,g_pmdt.pmdt039,l_xrcd113,l_xrcd114,l_xrcd115,
                        l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
         IF NOT g_sub_success THEN
            LET l_success = FALSE
            CONTINUE FOREACH
         END IF
#         LET g_pmdt.pmdt038 = l_pmeo014
#         LET g_pmdt.pmdt039 = l_pmeo015
#         LET g_pmdt.pmdt047 = l_pmeo016
         LET g_pmdt.pmdt051 = g_param.l_reason
         LET g_pmdt.pmdt084 = 'Y'
         LET g_pmdt.pmdt070 = g_pmds.pmds055
         LET g_pmdt.pmdt071 = l_pmeo002
         
         #20150823 DSC.liquor add------
         #取原發票號碼
         SELECT pmdw010 INTO g_pmdt.pmdt050
           FROM pmdw_t
             WHERE pmdwdocno=l_pmeo003
               AND pmdwent = g_enterprise   #160905-00007#11 Add
         #20150823 add end--------------
         
         INSERT INTO pmdt_t VALUES (g_pmdt.*)
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'ins pmdt_t'
            LET g_errparam.popup = TRUE
            
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         INSERT INTO pmdu_t(pmduent,pmdusite,pmdudocno,pmduseq,pmduseq1,
                            pmdu001,pmdu002,pmdu003,pmdu004,pmdu005,
                            pmdu006,pmdu007,pmdu008,pmdu009,pmdu010,
                            pmdu011,pmdu012,pmdu013,pmdu014,pmdu015)
            VALUES(g_enterprise,g_site,g_pmds.pmdsdocno,g_pmdt.pmdtseq,1,
                   g_pmdt.pmdt006,g_pmdt.pmdt007,g_pmdt.pmdt009,g_pmdt.pmdt010,g_pmdt.pmdt063,
                   g_pmdt.pmdt016,g_pmdt.pmdt017,g_pmdt.pmdt018,g_pmdt.pmdt019,g_pmdt.pmdt020,
                   g_pmdt.pmdt021,g_pmdt.pmdt022,0,0,0)
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'ins pmdu_t'
            LET g_errparam.popup = TRUE
            
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF

         UPDATE pmeo_t SET pmeo025 = '2',
                           pmeo026 = g_pmev019,
                           pmeo027 = g_pmds.pmdsdocno,
                           pmeo028 = g_pmdt.pmdtseq,
                           pmeo029 = g_pmdt.pmdt036
          WHERE pmeoent = g_enterprise
            AND pmeo000 = '3'
            AND pmeo001 = l_pmds055
            AND pmeo002 = l_pmeo002
            AND pmeo003 = l_pmeo003
            AND pmeo004 = l_pmeo004
            AND pmeo005 = l_pmeo005
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd pmeo_t'
            LET g_errparam.popup = TRUE
               
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF
            

         LET l_seq = l_seq + 1
         
#         OPEN apmp431_ins_apmt580_cs2 USING l_pmds007,l_pmds037,l_pmds033,l_pmds034,l_pmds035,
#                                            l_pmds031,l_pmds032,l_pmds012,l_pmds038,l_pmds055,
#                                            l_pmeo002,l_pmeo006,l_pmeo007,l_pmeo029
#         FOREACH apmp431_ins_apmt580_cs2 INTO l_pmeo001,l_pmeo002,l_pmeo003,l_pmeo004,l_pmeo005,
#                                              l_pmeo014,l_pmeo015,l_pmeo016
#      
#            UPDATE pmeo_t SET pmeo025 = '2',
#                              pmeo026 = g_pmev019,
#                              pmeo027 = g_pmds.pmdsdocno,
#                              pmeo028 = g_pmdt.pmdtseq,
#                              pmeo029 = g_pmdt.pmdt036
#             WHERE pmeoent = g_enterprise
#               AND pmeo000 = '3'
#               AND pmeo001 = l_pmeo001
#               AND pmeo002 = l_pmeo002
#               AND pmeo003 = l_pmeo003
#               AND pmeo004 = l_pmeo004
#               AND pmeo005 = l_pmeo005
#            IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
#               INITIALIZE g_errparam TO NULL
#               LET g_errparam.code = SQLCA.sqlcode
#               LET g_errparam.extend = 'upd pmeo_t'
#               LET g_errparam.popup = TRUE
#                  
#               CALL cl_err()
#               LET r_success = FALSE
#               EXIT FOREACH
#            END IF
#         END FOREACH
         
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
      END FOREACH
         
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
      
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      
      #2015/10/15 by stellar add ----- (S)
      #若單身的收貨單號都一樣時，更新單頭的收貨單號
      LET l_n = 0
      SELECT COUNT(DISTINCT(pmdt027)) INTO l_n 
        FROM pmdt_t
       WHERE pmdtent = g_enterprise
         AND pmdtdocno = g_pmds.pmdsdocno
      IF NOT cl_null(l_n) AND l_n = 1 THEN  
         DECLARE apmp431_sel_pmdt027_cs CURSOR FOR
          SELECT pmdt027
            FROM pmdt_t
           WHERE pmdtent = g_enterprise
             AND pmdtdocno = g_pmds.pmdsdocno
         FOREACH apmp431_sel_pmdt027_cs INTO g_pmds.pmds006
            EXIT FOREACH
         END FOREACH
         
         UPDATE pmds_t SET pmds006 = g_pmds.pmds006
          WHERE pmdsent = g_enterprise
            AND pmdsdocno = g_pmds.pmdsdocno
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd pmds_t'
            LET g_errparam.popup = TRUE
               
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END IF
      #2015/10/15 by stellar add ----- (E)
      
      #整單含未稅金額與稅額
      CALL s_tax_recount(g_pmds.pmdsdocno)
           RETURNING g_pmds.pmds043,g_pmds.pmds046,g_pmds.pmds044,
                     l_xrcd113,l_xrcd114,l_xrcd115
      UPDATE pmds_t SET pmds043 = g_pmds.pmds043,
                        pmds044 = g_pmds.pmds044,
                        pmds046 = g_pmds.pmds046
       WHERE pmdsent = g_enterprise
         AND pmdsdocno = g_pmds.pmdsdocno
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'upd pmds_t'
         LET g_errparam.popup = TRUE
            
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #倉退單確認過帳-不需要自动审核过账
#      CALL s_apmt520_conf_chk(g_pmds.pmdsdocno) RETURNING l_success1
#      IF NOT l_success1 THEN
#         LET l_success = FALSE
#         CONTINUE FOREACH
#      END IF
#      
#      CALL s_apmt520_conf_upd(g_pmds.pmdsdocno) RETURNING l_success1
#      IF NOT l_success1 THEN
#         LET l_success = FALSE
#         CONTINUE FOREACH
#      END IF
#      
#      CALL s_apmt520_posted_chk(g_pmds.pmdsdocno) RETURNING l_success1
#      IF NOT l_success1 THEN
#         LET l_success = FALSE
#         CONTINUE FOREACH
#      END IF
#      
#      CALL s_apmt520_posted_upd(g_pmds.pmdsdocno) RETURNING l_success1
#      IF NOT l_success1 THEN
#         LET l_success = FALSE
#         CONTINUE FOREACH
#      END IF
      
      IF cl_null(g_gen_doc) THEN
         LET g_gen_doc = " pmdsdocno IN('",g_pmds.pmdsdocno,"'"
      ELSE
         LET g_gen_doc = g_gen_doc,",'",g_pmds.pmdsdocno,"'"
      END IF
   END FOREACH
   IF NOT cl_null(g_gen_doc) THEN
      LET g_gen_doc = g_gen_doc,")"
   END IF
   IF NOT l_tot_success OR NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 倉退單頭新增預設
# Memo...........:
# Usage..........: CALL apmp431_pmds_init()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmds_init()

   #公用欄位新增給值
   LET g_pmds.pmdsownid = g_user
   LET g_pmds.pmdsowndp = g_dept
   LET g_pmds.pmdscrtid = g_user
   LET g_pmds.pmdscrtdp = g_dept
   LET g_pmds.pmdscrtdt = cl_get_current()
   LET g_pmds.pmdsmodid = g_user
   LET g_pmds.pmdsmoddt = cl_get_current()
   LET g_pmds.pmdsstus = 'N'
      
   #一般欄位給值
   LET g_pmds.pmdsent = g_enterprise
   LET g_pmds.pmds100 = "4"
   LET g_pmds.pmds011 = "1"
   LET g_pmds.pmds014 = "1"
   LET g_pmds.pmds021 = "N"
   LET g_pmds.pmds036 = "1"
   LET g_pmds.pmds048 = "1"
   LET g_pmds.pmds047 = "N"
   LET g_pmds.pmds049 = "1"
   LET g_pmds.pmds043 = "0"
   LET g_pmds.pmds044 = "0"
   LET g_pmds.pmds046 = "0"
   LET g_pmds.pmds054 = "1"
   LET g_pmds.pmds050 = "N"
   LET g_pmds.pmdssite = g_site
   #2015/10/15 by stellar modify ----- (S)
#   LET g_pmds.pmdsdocdt = g_today
   LET g_pmds.pmdsdocdt = g_param.l_date
   #2015/10/15 by stellar modify ----- (E)
   LET g_pmds.pmds000 = '7'
   #2015/10/15 by stellar modify ----- (S)
#   LET g_pmds.pmds001 = g_today
   LET g_pmds.pmds001 = g_param.l_date
   #2015/10/15 by stellar modify ----- (E)
   LET g_pmds.pmds002 = g_user
   LET g_pmds.pmds003 = g_dept
   
END FUNCTION

################################################################################
# Descriptions...: 倉退單的單別預設
# Memo...........:
# Usage..........: CALL apmp431_pmds_doc_default()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmds_doc_default()
DEFINE l_success         LIKE type_t.num5
DEFINE l_oodbl004        LIKE oodbl_t.oodbl004
DEFINE l_oodb005         LIKE oodb_t.oodb005
DEFINE l_oodb006         LIKE oodb_t.oodb006
DEFINE l_oodb011         LIKE oodb_t.oodb011
   
   LET g_pmds.pmds001 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds001',g_pmds.pmds001)
   LET g_pmds.pmds003 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds003',g_pmds.pmds003)
   LET g_pmds.pmds002 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds002',g_pmds.pmds002)
   LET g_pmds.pmds007 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds007',g_pmds.pmds007)
   LET g_pmds.pmds008 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds008',g_pmds.pmds008)
   LET g_pmds.pmds009 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds009',g_pmds.pmds009)
   LET g_pmds.pmds010 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds010',g_pmds.pmds010)
   LET g_pmds.pmds011 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds011',g_pmds.pmds011)
   LET g_pmds.pmds012 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds012',g_pmds.pmds012)
   LET g_pmds.pmds037 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds037',g_pmds.pmds037)
   LET g_pmds.pmds039 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds039',g_pmds.pmds039)
   LET g_pmds.pmds012 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds012',g_pmds.pmds012)
   LET g_pmds.pmds031 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds031',g_pmds.pmds031)
   LET g_pmds.pmds033 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds033',g_pmds.pmds033)
   LET g_pmds.pmds042 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds042',g_pmds.pmds042)
   LET g_pmds.pmds043 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds043',g_pmds.pmds043)
   LET g_pmds.pmds044 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds044',g_pmds.pmds044)
   LET g_pmds.pmds045 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds045',g_pmds.pmds045)
   LET g_pmds.pmds054 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds054',g_pmds.pmds054)
   LET g_pmds.pmds202 = s_aooi200_get_doc_default(g_site,'1',g_param.l_docno,'pmds202',g_pmds.pmds202)

   IF NOT cl_null(g_pmds.pmds012) THEN
      #檢查、取得稅別、單價含稅否
      CALL s_tax_chk(g_site,g_pmds.pmds033)
      RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011

      LET g_pmds.pmds034 = l_oodb006
      LET g_pmds.pmds035 = l_oodb005
   END IF

END FUNCTION

################################################################################
# Descriptions...: 倉退單的供應商預設
# Memo...........:
# Usage..........: CALL apmp431_pmds_customer_default()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success       TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_pmds_customer_default()
DEFINE r_success         LIKE type_t.num5
DEFINE l_success         LIKE type_t.num5
DEFINE l_controlno       LIKE ooha_t.ooha001

   LET r_success = TRUE

   #取得控制組編號
   CALL s_control_get_group('4',g_user,g_dept) RETURNING l_success,l_controlno
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN
   END IF
   
   CALL s_apmm101_default_pmab('1',l_controlno,g_site,g_pmds.pmds007) 
        RETURNING g_pmab.*
   
   #先判斷欄位是否在單據別設定的預設欄位中，如果存在，則不重新帶值，不存在，則根據交易對象帶預設值     
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_param.l_docno,'pmds039') THEN
      LET g_pmds.pmds039 = g_pmab.pmab054  #取價方式
   END IF
   
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_param.l_docno,'pmds048') THEN
      LET g_pmds.pmds048 = g_pmab.pmab057  #內外銷
   END IF
   
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_param.l_docno,'pmds049') THEN
      LET g_pmds.pmds049 = g_pmab.pmab058  #匯率計算基準
   END IF
   
   IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_param.l_docno,'pmds013') THEN
      LET g_pmds.pmds013 = g_pmab.pmab039  #採購分類
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 新增雜項應收
# Memo...........:
# Usage..........: CALL apmp431_ins_axrt330()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_ins_axrt330()
DEFINE r_success         LIKE type_t.num5
DEFINE l_success         LIKE type_t.num5
DEFINE l_amount          RECORD
          xrcb103        LIKE xrcb_t.xrcb103,
          xrcb113        LIKE xrcb_t.xrcb113,
          xrcb123        LIKE xrcb_t.xrcb123,
          xrcb133        LIKE xrcb_t.xrcb133,
          xrcd104        LIKE xrcd_t.xrcd104,
          xrcd114        LIKE xrcd_t.xrcd114,
          xrcd124        LIKE xrcd_t.xrcd124,
          xrcd134        LIKE xrcd_t.xrcd134,
          xrca106        LIKE xrca_t.xrca106,
          xrca116        LIKE xrca_t.xrca116,
          xrca126        LIKE xrca_t.xrca126,
          xrca136        LIKE xrca_t.xrca136,
          xrca107        LIKE xrca_t.xrca107,
          xrca117        LIKE xrca_t.xrca117,
          xrca127        LIKE xrca_t.xrca127,
          xrca137        LIKE xrca_t.xrca137,
          xrca108        LIKE xrca_t.xrca108,
          xrca118        LIKE xrca_t.xrca118,
          xrca128        LIKE xrca_t.xrca128,
          xrca138        LIKE xrca_t.xrca138
                         END RECORD
DEFINE l_chr             LIKE type_t.chr1
DEFINE l_ap_slip         LIKE xrca_t.xrcadocno
DEFINE l_desc            LIKE type_t.chr50
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   #新增應付單頭
   CALL apmp431_ins_xrca() RETURNING l_success
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #新增應付單身
   CALL apmp431_ins_xrcb() RETURNING l_success
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt FROM xrcb_t
    WHERE xrcbent = g_enterprise AND xrcbld = g_xrca.xrcald AND xrcbdocno = g_xrca.xrcadocno 
   IF l_cnt > 0 THEN  
      SELECT ABS(SUM(xrcb103 * xrcb022)),ABS(SUM(xrcb104 * xrcb022)),ABS(SUM(xrcb113 * xrcb022)),ABS(SUM(xrcb114 * xrcb022)),
             ABS(SUM(xrcb123 * xrcb022)),ABS(SUM(xrcb124 * xrcb022)),ABS(SUM(xrcb133 * xrcb022)),ABS(SUM(xrcb134 * xrcb022))  
        INTO g_xrca.xrca103,g_xrca.xrca104,g_xrca.xrca113,g_xrca.xrca114, 
             g_xrca.xrca123,g_xrca.xrca124,g_xrca.xrca133,g_xrca.xrca134     
        FROM xrcb_t
       WHERE xrcbent = g_enterprise AND xrcbld = g_xrca.xrcald AND xrcbdocno = g_xrca.xrcadocno
      IF cl_null(g_xrca.xrca103) THEN LET g_xrca.xrca103 = 0 END IF 
      IF cl_null(g_xrca.xrca104) THEN LET g_xrca.xrca104 = 0 END IF 
      IF cl_null(g_xrca.xrca113) THEN LET g_xrca.xrca113 = 0 END IF 
      IF cl_null(g_xrca.xrca114) THEN LET g_xrca.xrca114 = 0 END IF
      IF cl_null(g_xrca.xrca123) THEN LET g_xrca.xrca123 = 0 END IF 
      IF cl_null(g_xrca.xrca124) THEN LET g_xrca.xrca124 = 0 END IF
      IF cl_null(g_xrca.xrca133) THEN LET g_xrca.xrca133 = 0 END IF 
      IF cl_null(g_xrca.xrca134) THEN LET g_xrca.xrca134 = 0 END IF
      UPDATE xrca_t SET (xrca103,xrca104,xrca113,xrca114,xrca123,xrca124,xrca133,xrca134) = (g_xrca.xrca103,g_xrca.xrca104,g_xrca.xrca113,g_xrca.xrca114,g_xrca.xrca123,g_xrca.xrca124,g_xrca.xrca133,g_xrca.xrca134) 
       WHERE xrcaent = g_enterprise AND xrcald = g_xrca.xrcald AND xrcadocno = g_xrca.xrcadocno
      IF SQLCA.SQLCODE THEN
         LET l_success = FALSE 
      END IF
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      END IF       
   END IF
#   #產生直接沖帳
#   CALL s_axrp133_ins_xrce(p_style,p_ld,p_check1,p_check2,p_check3,p_check4,p_check5,p_check6,p_docdt)
#    
   #產生多帳期
   CALL s_axrt300_installments(g_xrca.xrcald,g_xrca.xrcadocno) RETURNING l_success
   IF NOT l_success THEN
      IF g_prog <> 'axrp141' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_xrca.xrcadocno
         LET g_errparam.code   = 'aap-00092'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      ELSE
         CALL s_axrp133_success_tmp_ins('','',0,0,'aap-00092','N')
      END IF 
      LET l_success = 'N' 
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      END IF        
   END IF   
   CALL s_fin_get_doc_para(g_xrca.xrcald,g_xrca.xrcacomp,g_param.l_docno,'D-FIN-0030') RETURNING l_chr
   IF g_glaa121 = 'Y' AND l_chr = 'Y' THEN
      CALL s_pre_voucher_ins('AR','R10',g_xrca.xrcald,g_xrca.xrcadocno,g_xrca.xrcadocdt,'1') RETURNING l_success
      IF NOT l_success THEN
         LET l_success = FALSE   
      END IF
   END IF
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF 
   #axrt330 审核段-规格要求直接产生一张未审核的应收，不需要自动确认
#   IF g_xrca.xrca103 = 0 OR cl_null(g_xrca.xrca103) THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = 'afa-00025'
#      LET g_errparam.extend = g_xrca.xrca103
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#   END IF
#   IF NOT s_axrt300_conf_chk(g_xrca.xrcald,g_xrca.xrcadocno) THEN
#      LET l_success = FALSE 
#   END IF
#   IF NOT l_success THEN
#      LET r_success = FALSE
#      RETURN r_success
#   END IF    
#   IF NOT s_axrt300_conf_upd(g_xrca.xrcald,g_xrca.xrcadocno) THEN
#      LET l_success = FALSE 
#   END IF
#   IF NOT l_success THEN
#      LET r_success = FALSE
#      RETURN r_success
#   END IF 
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 新增應付單頭
# Memo...........:
# Usage..........: CALL apmp431_ins_xrca()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_ins_xrca()
DEFINE r_success         LIKE type_t.num5
DEFINE l_success         LIKE type_t.num5
DEFINE l_xrca101         LIKE xrca_t.xrca101  #原幣匯率
DEFINE l_xrca011         LIKE xrca_t.xrca011  #稅別
DEFINE l_desc            LIKE type_t.chr50
DEFINE l_controlno       LIKE ooha_t.ooha001
DEFINE l_pmeo001         LIKE pmeo_t.pmeo001
DEFINE l_ooba002         LIKE ooba_t.ooba002

   LET r_success = TRUE
   
   INITIALIZE g_xrca.* TO NULL
   LET g_xrca.xrcaent  = g_enterprise
   LET g_xrca.xrcald   = g_xrcald
   LET g_xrca.xrcacomp = g_xrcacomp
   #2015/10/15 by stellar modify ----- (S)
#   LET g_xrca.xrcadocdt = g_today
   LET g_xrca.xrcadocdt = g_param.l_date
   #2015/10/15 by stellar modify ----- (E)
   LET g_xrca.xrcasite = g_xrcasite
   LET g_xrca.xrca001 = '19'
   LET g_xrca.xrca003 = g_user
   
          
              #帳款供應商
   SELECT UNIQUE pmev003
     INTO g_xrca.xrca004
     FROM apmp431_temp1

   CALL apmp431_xrca004_ref(g_xrcald) RETURNING 
          g_xrca.xrca005,g_xrca.xrca006,g_xrca.xrca007,g_xrca.xrca008,g_xrca.xrca009,
          g_xrca.xrca010,g_xrca.xrca011,g_xrca.xrca012,g_xrca.xrca013,g_xrca.xrca014,
          g_xrca.xrca015,g_xrca.xrca046,g_xrca.xrca058,g_xrca.xrca061,g_xrca.xrca100,
          g_xrca.xrca101,g_xrca.xrca121,g_xrca.xrca131

              # 幣別,   稅別,     稅率,單價含稅否,付款條件,匯率,合約單號
   SELECT UNIQUE pmev004,pmev005,pmev006,pmev007,pmev008,exrate,pmeo001
     INTO g_xrca.xrca100,g_xrca.xrca011,g_xrca.xrca012,g_xrca.xrca013,
          g_xrca.xrca008,g_xrca.xrca101,l_pmeo001
     FROM apmp431_temp1
     
   #收款條件
   SELECT pmev020 INTO g_xrca.xrca008
     FROM pmev_t
    WHERE pmevent = g_enterprise
      AND pmevdocno = l_pmeo001
     
   LET g_xrca.xrca005 = g_xrca.xrca004
   
   #供應商分類/企業關係人
   SELECT pmaa080,pmaa047 INTO g_xrca.xrca006,g_xrca.xrca046
     FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa001 = g_xrca.xrca004
   
   LET g_xrca.xrca016   = '1C'
   LET g_xrca.xrca017   = '0'
   LET g_xrca.xrca018   = l_pmeo001
   LET g_xrca.xrca019   = ''
   LET g_xrca.xrca020   = 'N'
   LET g_xrca.xrca021   = ''
   LET g_xrca.xrca022   = ''
   LET g_xrca.xrca023   = ''
   LET g_xrca.xrca024   = ''
   LET g_xrca.xrca025   = ''
   LET g_xrca.xrca026   = ''
   LET g_xrca.xrca028   = ''
   LET g_xrca.xrca029   = ''
   LET g_xrca.xrca030   = 0
   LET g_xrca.xrca031   = 0
   LET g_xrca.xrca032   = 0
   LET g_xrca.xrca033   = ''
   
   SELECT ooeg004 INTO g_xrca.xrca034 FROM ooeg_t WHERE ooegent = g_enterprise AND ooeg001 = g_xrca.xrca015
   SELECT glab005 INTO g_xrca.xrca035 FROM glab_t 
    WHERE glabld = g_xrcald 
      AND glabent = g_enterprise
      AND glab002 = g_xrca.xrca007   # 帳款類別
      AND glab001 = '13'             # 應收帳務類型科目設定
      AND glab003 = '8304_01'
    
   SELECT glab005 INTO g_xrca.xrca036 FROM glab_t 
    WHERE glabld = g_xrcald 
      AND glabent = g_enterprise
      AND glab002 = g_xrca.xrca007   # 帳款類別
      AND glab001 = '13'             # 應收帳務類型科目設定
      AND glab003 = '8304_21'    
      
   CALL s_aooi200_fin_get_slip(g_param.l_docno) RETURNING l_success,l_ooba002
   CALL s_fin_get_doc_para(g_xrca.xrcald,g_xrca.xrcacomp,l_ooba002,'D-FIN-0030') RETURNING g_xrca.xrca037
   IF cl_null(g_xrca.xrca037) THEN LET g_xrca.xrca037   = 'N' END IF  
   
   LET g_xrca.xrca038 = ''
   LET g_xrca.xrca039 = 0
   LET g_xrca.xrca040 = 'N'
   LET g_xrca.xrca041 = ''
   LET g_xrca.xrca042 = ''
   LET g_xrca.xrca043 = ''
   LET g_xrca.xrca044 = 0
   LET g_xrca.xrca045 = ''
   LET g_xrca.xrca047 = ''
   LET g_xrca.xrca048 = ''
   LET g_xrca.xrca049 = ''
   LET g_xrca.xrca050 = ''
   LET g_xrca.xrca051 = ''
   LET g_xrca.xrca052 = 0
   LET g_xrca.xrca053 = '' 
   LET g_xrca.xrca106 = 0
   LET g_xrca.xrca116 = 0
   LET g_xrca.xrca126 = 0
   LET g_xrca.xrca136 = 0
   LET g_xrca.xrcamodid = g_user
   LET g_xrca.xrcamoddt = cl_get_current()
   LET g_xrca.xrcaownid = g_user
   LET g_xrca.xrcaowndp = g_dept
   LET g_xrca.xrcacrtid = g_user
   LET g_xrca.xrcacrtdp = g_dept
   LET g_xrca.xrcacrtdt = cl_get_current()
   LET g_xrca.xrcastus  = 'N'
   
   CALL s_aooi200_fin_gen_docno(g_xrca.xrcald,'','',g_param.l_docno,g_xrca.xrcadocdt,'axrt330')
        RETURNING l_success,g_xrca.xrcadocno
        
   INSERT INTO xrca_t VALUES(g_xrca.*)
   IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xrca_t'
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 新增應收單身
# Memo...........:
# Usage..........: CALL apmp431_ins_xrcb()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2015/07/06 By xianghui
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_ins_xrcb()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_seq             LIKE type_t.num5
DEFINE l_success         LIKE type_t.num5
DEFINE l_pmeo001         LIKE pmeo_t.pmeo001
DEFINE l_pmeo002         LIKE pmeo_t.pmeo002
DEFINE l_pmeo003         LIKE pmeo_t.pmeo003
DEFINE l_pmeo004         LIKE pmeo_t.pmeo004
DEFINE l_pmeo005         LIKE pmeo_t.pmeo005
DEFINE l_pmeo006         LIKE pmeo_t.pmeo006
DEFINE l_pmeo007         LIKE pmeo_t.pmeo007
DEFINE l_pmeo014         LIKE pmeo_t.pmeo014
DEFINE l_pmeo015         LIKE pmeo_t.pmeo015
DEFINE l_pmeo016         LIKE pmeo_t.pmeo016
DEFINE l_pmeo021         LIKE pmeo_t.pmeo021
DEFINE l_pmeo029         LIKE pmeo_t.pmeo029
DEFINE l_xrcb105         LIKE xrcb_t.xrcb105

   LET r_success = TRUE
   
   LET l_sql = "SELECT pmeo001,pmeo002,pmeo006,pmeo007,SUM(pmeo021),pmeo029 ",
               "  FROM apmp431_temp1 ",
               " GROUP BY pmeo001,pmeo002,pmeo006,pmeo007,pmeo029 ",
               " ORDER BY pmeo001,pmeo002,pmeo006,pmeo007,pmeo029 "
   PREPARE apmp431_ins_xrcb_pre FROM l_sql
   DECLARE apmp431_ins_xrcb_cs CURSOR FOR apmp431_ins_xrcb_pre
   
   LET l_sql = "SELECT pmeo001,pmeo002,pmeo003,pmeo004,pmeo005,pmeo014,pmeo015,pmeo016 ",
               "  FROM apmp431_temp1 ",
               " WHERE pmeo001 = ? ",
               "   AND pmeo002 = ? ",
               "   AND pmeo006 = ? ",
               "   AND pmeo007 = ? ",
               "   AND pmeo029 = ? "
   PREPARE apmp431_ins_xrcb_pre1 FROM l_sql
   DECLARE apmp431_ins_xrcb_cs1 CURSOR FOR apmp431_ins_xrcb_pre1
   
   LET l_seq = 1
   FOREACH apmp431_ins_xrcb_cs INTO l_pmeo001,l_pmeo002,l_pmeo006,l_pmeo007,l_pmeo021,l_pmeo029
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'apmp431_ins_xrcb_cs:'
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
   
      INITIALIZE g_xrcb.* TO NULL
      
      LET g_xrcb.xrcbent = g_enterprise
      LET g_xrcb.xrcbld = g_xrca.xrcald
      LET g_xrcb.xrcborga = g_site
      LET g_xrcb.xrcbsite = g_xrca.xrcasite
      LET g_xrcb.xrcblegl = g_xrca.xrcacomp
      LET g_xrcb.xrcbdocno = g_xrca.xrcadocno
      LET g_xrcb.xrcbseq = l_seq
      LET g_xrcb.xrcb001 = '1C'
      IF l_pmeo021 < 0 THEN 
         LET g_xrcb.xrcb007 = -1 *l_pmeo021
         LET g_xrcb.xrcb022 = -1 
      ELSE         
         LET g_xrcb.xrcb007 = l_pmeo021
         LET g_xrcb.xrcb022 = 1
      END IF
      LET g_xrcb.xrcb002 = l_pmeo001
      LET g_xrcb.xrcb003 = l_pmeo002
      LET g_xrcb.xrcb004 = l_pmeo006
      LET g_xrcb.xrcb005 = s_aapt300_get_apcb005(g_xrcb.xrcb004,'','')
      
      #單位
      SELECT pmex006 INTO g_xrcb.xrcb006
        FROM pmex_t
       WHERE pmexent = g_enterprise
         AND pmexdocno = l_pmeo001
         AND pmexseq = l_pmeo002
      
      SELECT imaa009 INTO g_xrcb.xrcb012
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_xrcb.xrcb004
         
      LET g_xrcb.xrcb013 = 'N'
      LET g_xrcb.xrcb015 = g_xrca.xrca033   #專案編號
      LET g_xrcb.xrcb017 = g_xrca.xrca059   #預算編號
      LET g_xrcb.xrcb020 = g_xrca.xrca011   #稅別
      LET g_xrcb.xrcb021 = g_xrca.xrca036
      LET g_xrcb.xrcb023 = 'N'
      LET g_xrcb.xrcb029 = g_xrca.xrca035
      LET g_xrcb.xrcb030 = g_xrca.xrca008
      LET g_xrcb.xrcb100 = g_xrca.xrca100   #幣別
      LET g_xrcb.xrcb101 = l_pmeo029        #原幣單價
      
      CALL s_curr_round_ld('1',g_xrca.xrcald,g_xrcb.xrcb100,g_xrcb.xrcb101,1) 
           RETURNING l_success,g_errno,g_xrcb.xrcb101
           
      LET g_xrcb.xrcb102  = g_xrca.xrca101                   #本幣匯率
      LET g_xrcb.xrcb111  = g_xrcb.xrcb101 * g_xrca.xrca101  #本幣單價
      
      CALL s_curr_round_ld('1',g_xrca.xrcald,g_glaa001,g_xrcb.xrcb111,1) 
           RETURNING l_success,g_errno,g_xrcb.xrcb111
           
      LET l_xrcb105 = g_xrcb.xrcb007 * g_xrcb.xrcb101
      
      CALL s_curr_round_ld('1',g_xrca.xrcald,g_glaa001,l_xrcb105,2) 
           RETURNING l_success,g_errno,l_xrcb105

      CALL s_tax_ins(g_xrca.xrcadocno,g_xrcb.xrcbseq,'0',g_xrcb.xrcborga,l_xrcb105,
                     g_xrcb.xrcb020,g_xrcb.xrcb007,g_xrcb.xrcb100,g_xrca.xrca101,
                     g_xrca.xrcald,g_xrca.xrca121,g_xrca.xrca131)
           RETURNING g_xrcb.xrcb103,g_xrcb.xrcb104,g_xrcb.xrcb105,
                     g_xrcb.xrcb113,g_xrcb.xrcb114,g_xrcb.xrcb115,
                     g_xrcb.xrcb123,g_xrcb.xrcb124,g_xrcb.xrcb125,
                     g_xrcb.xrcb133,g_xrcb.xrcb134,g_xrcb.xrcb135
      
      LET g_xrcb.xrcb106 = 0  
      LET g_xrcb.xrcb116 = 0    LET g_xrcb.xrcb119 = 0
      LET g_xrcb.xrcb126 = 0  
      LET g_xrcb.xrcb136 = 0  

      INSERT INTO xrcb_t VALUES(g_xrcb.*)
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins xrcb_t'
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      OPEN apmp431_ins_xrcb_cs1 USING l_pmeo001,l_pmeo002,l_pmeo006,l_pmeo007,l_pmeo029
      FOREACH apmp431_ins_xrcb_cs1 INTO l_pmeo001,l_pmeo002,l_pmeo003,l_pmeo004,l_pmeo005,
                                        l_pmeo014,l_pmeo015,l_pmeo016
         
         UPDATE pmeo_t SET pmeo025 = '2',
                           pmeo026 = g_pmev019,
                           pmeo027 = g_xrca.xrcadocno,
                           pmeo028 = g_xrcb.xrcbseq,
                           pmeo029 = l_pmeo029,
                           pmeo014 = l_pmeo014,
                           pmeo015 = l_pmeo015,
                           pmeo016 = l_pmeo016
             WHERE pmeoent = g_enterprise
               AND pmeo000 = '3'
               AND pmeo001 = l_pmeo001
               AND pmeo002 = l_pmeo002
               AND pmeo003 = l_pmeo003
               AND pmeo004 = l_pmeo004
               AND pmeo005 = l_pmeo005
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd pmeo_t'
            LET g_errparam.popup = TRUE
         
            CALL cl_err()
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END FOREACH
      
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
      
      LET l_seq = l_seq + 1
   END FOREACH
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp431_xrca004_ref(p_ld)
DEFINE p_ld           LIKE xrca_t.xrcald
DEFINE p_comb1        LIKE type_t.chr20
DEFINE l_site         LIKE xrca_t.xrcasite
DEFINE l_ooba002      LIKE ooba_t.ooba002
DEFINE l_success      LIKE type_t.num5
DEFINE l_pmab085      LIKE pmab_t.pmab085
DEFINE l_oodbl004     LIKE oodbl_t.oodbl004
DEFINE l_oodb011      LIKE oodb_t.oodb011
DEFINE l_ooib         RECORD LIKE ooib_t.*
DEFINE r_xrca         RECORD
          xrca005     LIKE xrca_t.xrca005,
          xrca006     LIKE xrca_t.xrca006,
          xrca007     LIKE xrca_t.xrca007,
          xrca008     LIKE xrca_t.xrca008,
          xrca009     LIKE xrca_t.xrca009,
          xrca010     LIKE xrca_t.xrca010,
          xrca011     LIKE xrca_t.xrca011,
          xrca012     LIKE xrca_t.xrca012,
          xrca013     LIKE xrca_t.xrca013,
          xrca014     LIKE xrca_t.xrca014,
          xrca015     LIKE xrca_t.xrca015,
          xrca046     LIKE xrca_t.xrca046,
          xrca058     LIKE xrca_t.xrca058,
          xrca061     LIKE xrca_t.xrca061,
          xrca100     LIKE xrca_t.xrca100,
          xrca101     LIKE xrca_t.xrca101,
          xrca121     LIKE xrca_t.xrca121,
          xrca131     LIKE xrca_t.xrca131
                      END RECORD

   #新增/修改帳款對象後,依帳款對象更新客戶慣用資料
   
   ################################################
   #      STEP1-7 欄位取用原則:
   #      依帳務人員所屬 site  取出該客戶的相關欄位
   #      若取不到時再取 xrcacomp =pmabsite  為條件取  
   ################################################  
   
   SELECT DISTINCT ooag004 INTO l_site
     FROM ooag_t
    WHERE ooag001 = g_user AND ooagstus ='Y' 
      AND ooagent = g_enterprise   #160905-00007#11 Add
   
   #STEP1.獲取交易對象簡稱
   
   #STEP2.帶出主要應收條件
   SELECT pmab087 INTO r_xrca.xrca008 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = g_xrca.xrcacomp AND pmab001 = g_xrca.xrca004
   
   #應收日期/票據到期日
   SELECT * INTO l_ooib.* FROM ooib_t WHERE ooibent = g_enterprise AND ooib001 = '2' AND ooib002 = r_xrca.xrca008
   CALL s_fin_date_ar_receivable(g_xrca.xrcasite,g_xrca.xrca004,r_xrca.xrca008,g_xrca.xrcadocdt,
     g_xrca.xrcadocdt,g_xrca.xrcadocdt,'') RETURNING l_success,r_xrca.xrca009,r_xrca.xrca010
   
   #STEP3.帳款類別
   SELECT pmab105 INTO r_xrca.xrca007 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = g_xrca.xrcacomp AND pmab001 = g_xrca.xrca004
   
   #STEP4.業務人員/業務部門
   SELECT pmab081 INTO r_xrca.xrca014 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = g_xrca.xrcacomp AND pmab001 = g_xrca.xrca004
   SELECT ooag003 INTO r_xrca.xrca015 FROM ooag_t
    WHERE ooagent = g_enterprise AND ooag001 = r_xrca.xrca014
   
   #STEP5.稅別/含稅否/稅率
   SELECT pmab084 INTO r_xrca.xrca011 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = g_xrca.xrcacomp AND pmab001 = g_xrca.xrca004   
   CALL s_tax_chk(g_xrca.xrcacomp,r_xrca.xrca011) RETURNING l_success,l_oodbl004,r_xrca.xrca013,r_xrca.xrca012,l_oodb011
   
   #STEP6.慣用幣別/匯率
   LET r_xrca.xrca100 = g_glaa001

   #STEP7.預開發票日
   SELECT pmab083 INTO l_pmab085 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = g_xrca.xrcacomp AND pmab001 = g_xrca.xrca004

   IF NOT cl_null(l_pmab085) THEN
      IF l_pmab085 = '30' THEN
         #月結彙總開立發票
         IF MONTH(g_xrca.xrcadocdt) = 12 THEN
            #立帳日期為12月份,則依照條件開立發票日為12月31號
            LET r_xrca.xrca061 = MDY(12,31,YEAR(g_xrca.xrcadocdt))
         ELSE
            #立帳日期的下一個月減一天
            LET r_xrca.xrca061 = MDY(MONTH(g_xrca.xrcadocdt) + 1,1,YEAR(g_xrca.xrcadocdt)) - 1
         END IF
      ELSE
         LET r_xrca.xrca061 = g_xrca.xrcadocdt
      END IF
   END IF

   #SETP8.收款客戶   
   SELECT pmac002 INTO r_xrca.xrca005 FROM pmac_t
    WHERE pmacent = g_enterprise AND pmac001 = g_xrca.xrca004 
      AND pmac003 = '1' AND pmac004 = 'Y' AND pmacstus = 'Y'
   IF SQLCA.sqlcode = 100 THEN
      LET r_xrca.xrca005 = g_xrca.xrca004
   END IF
      
   #SETP9.關係人   
   SELECT pmaa047 INTO r_xrca.xrca046 FROM pmaa_t
    WHERE pmaaent = g_enterprise AND pmaa001 = g_xrca.xrca004     

   #SETP10.慣用銷售分類取
   SELECT pmab089 INTO r_xrca.xrca058 FROM pmab_t
    WHERE pmabent = g_enterprise AND pmabsite = l_site AND pmab001 = g_xrca.xrca004 
   
   #SETP11.客戶分類
   SELECT pmaa090 INTO r_xrca.xrca006 FROM pmaa_t
    WHERE pmaaent = g_enterprise AND pmaa001 = g_xrca.xrca004 

   RETURN r_xrca.*
END FUNCTION

#end add-point
 
{</section>}
 
