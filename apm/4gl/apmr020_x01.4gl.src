#該程式未解開Section, 採用最新樣板產出!
{<section id="apmr020_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2016-12-21 18:29:19), PR版次:0004(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000079
#+ Filename...: apmr020_x01
#+ Description: ...
#+ Creator....: 02748(2014-09-17 10:28:51)
#+ Modifier...: 01534 -SD/PR- 00000
 
{</section>}
 
{<section id="apmr020_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"

#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       date1 LIKE pmdi_t.pmdi015,         #起始有效日 
       date2 LIKE pmdi_t.pmdi015,         #截止有效日 
       flag1 LIKE pmdi_t.pmdi014,         #核決內容 
       flag2 LIKE type_t.chr1          #僅列印未結案
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="apmr020_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr020_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE pmdi_t.pmdi015         #tm.date1  起始有效日 
DEFINE  p_arg3 LIKE pmdi_t.pmdi015         #tm.date2  截止有效日 
DEFINE  p_arg4 LIKE pmdi_t.pmdi014         #tm.flag1  核決內容 
DEFINE  p_arg5 LIKE type_t.chr1         #tm.flag2  僅列印未結案
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.date1 = p_arg2
   LET tm.date2 = p_arg3
   LET tm.flag1 = p_arg4
   LET tm.flag2 = p_arg5
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr020_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr020_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr020_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr020_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr020_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr020_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr020_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdidocno.pmdi_t.pmdidocno,pmdidocdt.pmdi_t.pmdidocdt,l_pmdi004.pmaal_t.pmaal004,l_pmdi002.ooag_t.ooag011,l_pmdi003.ooefl_t.ooefl003,l_pmdi014.gzcbl_t.gzcbl004,pmdi015.pmdi_t.pmdi015,pmdi016.pmdi_t.pmdi016,pmdj002.pmdj_t.pmdj002,l_pmdj002_desc1.imaal_t.imaal003,l_pmdj002_desc2.imaal_t.imaal004,pmdj003.pmdj_t.pmdj003,pmdj031.pmdj_t.pmdj031,l_pmdj031_desc.type_t.chr50,l_pmdj031desc.type_t.chr80,pmdj010.pmdj_t.pmdj010,pmdj011.pmdj_t.pmdj011,pmdl_t_pmdldocno.pmdl_t.pmdldocno,pmdl_t_pmdldocdt.pmdl_t.pmdldocdt,pmdn_t_pmdnseq.pmdn_t.pmdnseq,pmdn_t_pmdn015.pmdn_t.pmdn015,pmdn_t_pmdn007.pmdn_t.pmdn007,pmdo_t_pmdoseq1.pmdo_t.pmdoseq1,pmdo_t_pmdoseq2.pmdo_t.pmdoseq2,pmdo_t_pmdo006.pmdo_t.pmdo006,pmdo_t_pmdo015.pmdo_t.pmdo015,pmdo_t_pmdo016.pmdo_t.pmdo016,pmdo_t_pmdo017.pmdo_t.pmdo017,pmdo_t_pmdo019.pmdo_t.pmdo019,l_unpaid.pmdo_t.pmdo015" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr020_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr020_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   #151106-00004#6 20151106 s983961--mark & mod(s)
   #LET g_select = " SELECT pmdidocno,pmdidocdt,pmdi004,trim(pmdi004)||'.'||trim(pmaal_t.pmaal004),trim(pmdi002)||'.'||trim(ooag_t.ooag011), 
   #    trim(pmdi003)||'.'||trim(ooefl_t.ooefl003),gzcbl004,pmdi015,pmdi016,pmdj002,pmaal003,pmaal004,pmdj003,pmdj031,'','',pmdj010,pmdj011, 
   #    pmdl_t.pmdldocno,pmdl_t.pmdldocdt,pmdn_t.pmdnseq,pmdn_t.pmdn015,pmdn_t.pmdn007,pmdo_t.pmdoseq1, 
   #    pmdo_t.pmdoseq2,pmdo_t.pmdo006,pmdo_t.pmdo015,pmdo_t.pmdo016,pmdo_t.pmdo017,pmdo_t.pmdo019,pmdo_t.pmdo006-pmdo_t.pmdo015+pmdo_t.pmdo016+pmdo_t.pmdo017" 

   LET g_select = " SELECT DISTINCT pmdidocno,pmdidocdt,pmdi004,trim(pmdi004)||'.'||trim(pmaal_t.pmaal004),trim(pmdi002)||'.'||trim(ooag_t.ooag011), 
       trim(pmdi003)||'.'||trim(ooefl_t.ooefl003),gzcbl004,pmdi015,pmdi016,pmdj002,pmaal003,pmaal004,pmdj003,imaa127,oocql004,trim(imaa127)||'.'||trim(oocql004),
       pmdj010,pmdj011,pmdl_t.pmdldocno,pmdl_t.pmdldocdt,pmdn_t.pmdnseq,pmdn_t.pmdn015,pmdn_t.pmdn007,pmdo_t.pmdoseq1, 
       pmdo_t.pmdoseq2,pmdo_t.pmdo006,pmdo_t.pmdo015,pmdo_t.pmdo016,pmdo_t.pmdo017,pmdo_t.pmdo019,pmdo_t.pmdo006-pmdo_t.pmdo015+pmdo_t.pmdo016+pmdo_t.pmdo017" 
   #151106-00004#6 20151106 s983961--mark & mod(e)

#   #end add-point
#   LET g_select = " SELECT pmdidocno,pmdidocdt,pmdi004,trim(pmdi004)||'.'||trim(pmaal_t.pmaal004),trim(pmdi002)||'.'||trim(ooag_t.ooag011), 
#       trim(pmdi003)||'.'||trim(ooefl_t.ooefl003),'',pmdi015,pmdi016,pmdj002,'','',pmdj003,pmdj031,'', 
#       '',pmdj010,pmdj011,pmdl_t.pmdldocno,pmdl_t.pmdldocdt,pmdn_t.pmdnseq,pmdn_t.pmdn015,pmdn_t.pmdn007, 
#       pmdo_t.pmdoseq1,pmdo_t.pmdoseq2,pmdo_t.pmdo006,pmdo_t.pmdo015,pmdo_t.pmdo016,pmdo_t.pmdo017,pmdo_t.pmdo019, 
#       NULL"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = " FROM pmdj_t ",
                " LEFT OUTER JOIN imaa_t ON imaaent = pmdjent AND imaa001 = pmdj002 ",
                " LEFT OUTER JOIN imaal_t ON imaalent = pmdjent AND imaal001 = pmdj002 AND imaal002 = '",g_dlang,"'",
                " LEFT OUTER JOIN oocql_t ON oocqlent = pmdjent AND oocql001 = '2003' AND oocql002 = imaa127 AND oocql003 = '",g_dlang,"' ",  #151106-00004#6 20151106--add
                " ,pmdi_t ",
                " LEFT OUTER JOIN ooag_t ON ooagent = pmdient AND ooag001 = pmdi002 ",
                " LEFT OUTER JOIN ooefl_t ON ooeflent = pmdient AND ooefl001 = pmdi003 AND ooefl002 = '",g_dlang,"'",
                " LEFT OUTER JOIN pmaal_t ON pmaalent = pmdient AND pmaal001 = pmdi004 AND pmaal002 = '",g_dlang,"'",
                " LEFT OUTER JOIN gzcbl_t ON gzcbl001 = '2039' AND gzcbl002 = pmdi014 AND gzcbl003 = '",g_dlang,"'",
                " ,pmdl_t,pmdn_t,pmdo_t "
#   #end add-point
#    LET g_from = " FROM pmdi_t,pmdj_t,pmdl_t,pmdn_t,pmdo_t,pmaal_t,ooag_t,ooefl_t"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = " WHERE pmdient = pmdjent AND pmdidocno = pmdjdocno AND pmdnent = pmdient AND pmdn040 = '2' AND pmdn041 = pmdjdocno AND pmdn042 = pmdjseq ",
                 "   AND pmdnent = pmdlent AND pmdndocno = pmdldocno AND pmdnent = pmdoent AND pmdndocno = pmdodocno AND pmdnseq = pmdoseq ",
                 "   AND pmdlstus = 'Y' AND pmdistus <> 'X' AND pmdient = ",g_enterprise
   IF NOT cl_null(tm.date1) AND NOT cl_null(tm.date2) THEN
       LET g_where = g_where, " AND pmdi015 <= '",tm.date2,"' AND (pmdi016 IS NULL OR pmdi016 >= '",tm.date1,"') "
   ELSE
      IF NOT cl_null(tm.date1) THEN
         LET g_where = g_where, " AND (pmdi016 IS NULL OR pmdi016 >= '",tm.date1,"') "
      END IF
      IF NOT cl_null(tm.date2) THEN
         LET g_where = g_where, " AND pmdi015 <= '",tm.date2,"' "
      END IF
   END IF
   
   IF tm.flag1 = '1' THEN
      LET g_where = g_where, " AND pmdi014 = '1' "
   END IF
   IF tm.flag1 = '2' THEN
      LET g_where = g_where, " AND pmdi014 = '2' "
   END IF
   IF tm.flag2 = 'Y' THEN
      LET g_where = g_where, " AND pmdl047 = 'N' "
   END IF
   LET g_where = g_where, " AND ",tm.wc CLIPPED
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
 
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmdi_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE apmr020_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr020_x01_curs CURSOR FOR apmr020_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr020_x01_ins_data()
DEFINE sr RECORD 
   pmdidocno LIKE pmdi_t.pmdidocno, 
   pmdidocdt LIKE pmdi_t.pmdidocdt, 
   pmdi004 LIKE pmdi_t.pmdi004, 
   l_pmdi004 LIKE pmaal_t.pmaal004, 
   l_pmdi002 LIKE ooag_t.ooag011, 
   l_pmdi003 LIKE ooefl_t.ooefl003, 
   l_pmdi014 LIKE gzcbl_t.gzcbl004, 
   pmdi015 LIKE pmdi_t.pmdi015, 
   pmdi016 LIKE pmdi_t.pmdi016, 
   pmdj002 LIKE pmdj_t.pmdj002, 
   l_pmdj002_desc1 LIKE imaal_t.imaal003, 
   l_pmdj002_desc2 LIKE imaal_t.imaal004, 
   pmdj003 LIKE pmdj_t.pmdj003, 
   pmdj031 LIKE pmdj_t.pmdj031, 
   l_pmdj031_desc LIKE type_t.chr50, 
   l_pmdj031desc LIKE type_t.chr80, 
   pmdj010 LIKE pmdj_t.pmdj010, 
   pmdj011 LIKE pmdj_t.pmdj011, 
   pmdl_t_pmdldocno LIKE pmdl_t.pmdldocno, 
   pmdl_t_pmdldocdt LIKE pmdl_t.pmdldocdt, 
   pmdn_t_pmdnseq LIKE pmdn_t.pmdnseq, 
   pmdn_t_pmdn015 LIKE pmdn_t.pmdn015, 
   pmdn_t_pmdn007 LIKE pmdn_t.pmdn007, 
   pmdo_t_pmdoseq1 LIKE pmdo_t.pmdoseq1, 
   pmdo_t_pmdoseq2 LIKE pmdo_t.pmdoseq2, 
   pmdo_t_pmdo006 LIKE pmdo_t.pmdo006, 
   pmdo_t_pmdo015 LIKE pmdo_t.pmdo015, 
   pmdo_t_pmdo016 LIKE pmdo_t.pmdo016, 
   pmdo_t_pmdo017 LIKE pmdo_t.pmdo017, 
   pmdo_t_pmdo019 LIKE pmdo_t.pmdo019, 
   l_unpaid LIKE pmdo_t.pmdo015
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr020_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       #系列  20150820 by dorislai  add   (S)
       #----若系列為空，則用料號抓取系列
       #151106-00004#6 20151106 s983961--mark(s)
       #IF cl_null(sr.pmdj031) THEN
       #   SELECT imaa127 INTO sr.pmdj031 FROM imaa_t
       #    WHERE imaa001 = sr.pmdj002
       #      AND imaaent = g_enterprise
       #END IF
       ##----抓取系列說明
       #CALL s_desc_get_acc_desc('2003',sr.pmdj031)  RETURNING sr.l_pmdj031_desc   
       #IF NOT cl_null(sr.l_pmdj031_desc) THEN
       #   LET sr.l_pmdj031desc = sr.pmdj031,'.',sr.l_pmdj031_desc 
       #ELSE
       #   LET sr.l_pmdj031desc = ''
       #END IF
       #151106-00004#6 20151106 s983961--mark(e)
       #      20150820 by dorislai  add   (E)
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdidocno,sr.pmdidocdt,sr.l_pmdi004,sr.l_pmdi002,sr.l_pmdi003,sr.l_pmdi014,sr.pmdi015,sr.pmdi016,sr.pmdj002,sr.l_pmdj002_desc1,sr.l_pmdj002_desc2,sr.pmdj003,sr.pmdj031,sr.l_pmdj031_desc,sr.l_pmdj031desc,sr.pmdj010,sr.pmdj011,sr.pmdl_t_pmdldocno,sr.pmdl_t_pmdldocdt,sr.pmdn_t_pmdnseq,sr.pmdn_t_pmdn015,sr.pmdn_t_pmdn007,sr.pmdo_t_pmdoseq1,sr.pmdo_t_pmdoseq2,sr.pmdo_t_pmdo006,sr.pmdo_t_pmdo015,sr.pmdo_t_pmdo016,sr.pmdo_t_pmdo017,sr.pmdo_t_pmdo019,sr.l_unpaid
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr020_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr020_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="apmr020_x01.other_function" readonly="Y" >}

 
{</section>}
 
