#該程式未解開Section, 採用最新樣板產出!
{<section id="apmp210.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2015-10-23 11:12:14), PR版次:0002(2016-08-24 17:55:08)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000036
#+ Filename...: apmp210
#+ Description: 請購單整批確認作業
#+ Creator....: 05423(2015-09-29 10:33:34)
#+ Modifier...: 05423 -SD/PR- 01258
 
{</section>}
 
{<section id="apmp210.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#Memos
#160824-00041#1  16/08/24  By 01258  查询条件请购部门开窗开错，开成员工了，应改成部门
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
   sel         LIKE type_t.chr1,
   pmdadocno   LIKE pmda_t.pmdadocno,
   pmdadocdt   LIKE pmda_t.pmdadocdt,
   pmda002     LIKE pmda_t.pmda002,
   l_pmda002_desc LIKE ooag_t.ooag011,
   pmda003     LIKE pmda_t.pmda003,
   l_pmda003_desc LIKE ooefl_t.ooefl003
END RECORD 
DEFINE g_pmda    RECORD       #QBE
   pmdadocno   LIKE pmda_t.pmdadocno,
   pmdadocdt   LIKE pmda_t.pmdadocdt,
   pmda002     LIKE pmda_t.pmda002,
   pmda003     LIKE pmda_t.pmda003
END RECORD
DEFINE g_detail_idx         LIKE type_t.num5  
DEFINE g_detail_idx2        LIKE type_t.num5
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
TYPE type_g_detail2_d RECORD        #请购明细
   pmdbseq     LIKE pmdb_t.pmdbseq,
   pmdb004     LIKE pmdb_t.pmdb004,
   l_pmdb004_desc    LIKE imaal_t.imaal003,
   l_pmdb004_desc_1  LIKE imaal_t.imaal004,
   pmdb005     LIKE pmdb_t.pmdb005,
   l_pmdb005_desc    LIKE oocal_t.oocal003,
   pmdb007     LIKE pmdb_t.pmdb007,
   l_pmdb007_desc    LIKE oocal_t.oocal003,
   pmdb006     LIKE pmdb_t.pmdb006,
   pmdb009     LIKE pmdb_t.pmdb009,
   l_pmdb009_desc    LIKE type_t.chr50,
   pmdb008     LIKE pmdb_t.pmdb008,
   pmdb030     LIKE pmdb_t.pmdb030,
   pmdb031     LIKE pmdb_t.pmdb031,
   l_pmdb031_desc    LIKE oocql_t.oocql004,
   pmdb033     LIKE pmdb_t.pmdb033
END RECORD
DEFINE g_detail2_d  DYNAMIC ARRAY OF type_g_detail2_d 
DEFINE g_detail2_idx         LIKE type_t.num5
DEFINE g_count1      LIKE type_t.num5
DEFINE g_count2      LIKE type_t.num5
DEFINE g_detail2_cnt LIKE type_t.num5
DEFINE g_extra_cnt   LIKE type_t.num10
#end add-point
 
{</section>}
 
{<section id="apmp210.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   CREATE TEMP TABLE apmp210_tmp
   (
      pmdadocno    VARCHAR(40)
   );
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp210 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmp210_init()   
 
      #進入選單 Menu (="N")
      CALL apmp210_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp210
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="apmp210.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION apmp210_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   LET g_pmda.pmdadocdt = ''  
   CALL cl_set_combo_scc('b_pmdb033','2036') 
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp210.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmp210_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   DEFINE ls_result   STRING
   DEFINE g_loc                LIKE type_t.chr5              #判斷游標所在位置
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   LET g_count1 = 0
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmp210_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         CONSTRUCT BY NAME g_wc ON pmdadocno,pmdadocdt,pmda002,pmda003
            BEFORE CONSTRUCT
               DISPLAY BY NAME g_pmda.pmdadocno,g_pmda.pmdadocdt,g_pmda.pmda002,g_pmda.pmda003
   
            AFTER FIELD pmdadocno
               LET g_pmda.pmdadocno = GET_FLDBUF(pmdadocno)
            
            AFTER FIELD pmdadocdt
               LET g_pmda.pmdadocdt = GET_FLDBUF(pmdadocdt)
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)
               
            AFTER FIELD pmda002
               LET g_pmda.pmda002 = GET_FLDBUF(pmda002)
               
            AFTER FIELD pmda003
               LET g_pmda.pmda003 = GET_FLDBUF(pmda003)

            ON ACTION controlp INFIELD pmdadocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " pmdastus = 'N' "
               CALL q_pmdadocno()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmdadocno    #顯示到畫面上
               NEXT FIELD pmdadocno                       #返回原欄位
   
            ON ACTION controlp INFIELD pmda002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmda002      #顯示到畫面上
               NEXT FIELD pmda002                         #返回原欄位
               
            ON ACTION controlp INFIELD pmda003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
              #CALL q_ooag001()                           #呼叫開窗   #160824-00041#1 mark
               CALL q_ooeg001()                                       #160824-00041#1 add
               DISPLAY g_qryparam.return1 TO pmda003      #顯示到畫面上
               NEXT FIELD pmda003                         #返回原欄位

         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段input
         INPUT ARRAY g_detail_d FROM s_detail1.* ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
            BEFORE INPUT

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_detail_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL apmp210_fetch()
                  
            ON CHANGE l_chk
              IF g_detail_d[l_ac].sel = 'Y' THEN 
                 LET g_count1 = g_count1 + 1
              ELSE
                 LET g_count1 = g_count1 - 1
              END IF                   
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         DISPLAY ARRAY g_detail2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail2_cnt)

            BEFORE DISPLAY
               LET g_current_page = 2
               CALL cl_set_act_visible("filter",FALSE)

            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               DISPLAY g_detail2_d.getLength() TO FORMONLY.cnt
         END DISPLAY
 
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
            CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE) 
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            LET g_count1 = g_detail_d.getLength()
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
 
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            LET g_count1 = 0
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            LET g_count1 = g_count1 + 1
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            LET g_count1 = g_count1 - 1
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmp210_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL apmp210_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL apmp210_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            IF g_count1 > 0 THEN
               CALL apmp210_execute()
               
#               CALL cl_ask_confirm3("std-00012","")          #批次作業已執行完成。       
#               IF cl_ask_confirm('asf-00182') THEN           #是否繼續執行？
                  CALL apmp210_query()
                  LET g_count1 = 0
#                  EXIT DIALOG
#               ELSE
#                  LET g_action_choice = 'exit'
#                  EXIT DIALOG
#               END IF  
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00481'    #未勾選任何資料！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()           
            END IF          
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp210.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION apmp210_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   IF cl_null(g_wc) THEN 
      LET g_wc = " 1=1 "
   END IF
   IF NOT cl_null(g_wc_filter) THEN 
      LET g_wc = g_wc," AND ",g_wc_filter
   END IF
   
   DELETE FROM apmp210_tmp;
   LET g_sql = " INSERT INTO apmp210_tmp SELECT pmdadocno FROM pmda_t ",
               "  WHERE pmdaent = '",g_enterprise,"' AND pmdasite = '",g_site,"' AND ",g_wc," AND pmdastus='N' AND rownum < = ",g_max_rec
   PREPARE apmp210_pre1 FROM g_sql
   EXECUTE apmp210_pre1 
   #end add-point
        
   LET g_error_show = 1
   CALL apmp210_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp210.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmp210_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   DEFINE l_success     LIKE type_t.num5
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   CLEAR FORM
   CALL g_detail_d.clear() 
   CALL g_detail2_d.clear()
   LET g_detail_idx = 0   
   LET g_sql = " SELECT DISTINCT 'N',apmp210_tmp.pmdadocno,pmdadocdt,pmda002,ooag011,pmda003,ooefl003 ",
               "   FROM apmp210_tmp,pmda_t ",
               "   LEFT OUTER JOIN ooag_t ON ooagent = pmda_t.pmdaent AND pmda_t.pmda002 = ooag001 ",
               "   LEFT OUTER JOIN ooefl_t ON ooeflent = pmda_t.pmdaent AND ooefl001 = pmda_t.pmda003 AND ooefl002 ='",g_dlang,"'",
               "  WHERE apmp210_tmp.pmdadocno = pmda_t.pmdadocno AND pmda_t.pmdaent = ? AND pmda_t.pmdasite = '",g_site,"' ",
               "  ORDER BY apmp210_tmp.pmdadocno " 
   #end add-point
 
   PREPARE apmp210_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmp210_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
         g_detail_d[l_ac].sel,g_detail_d[l_ac].pmdadocno,g_detail_d[l_ac].pmdadocdt,
         g_detail_d[l_ac].pmda002,g_detail_d[l_ac].l_pmda002_desc,g_detail_d[l_ac].pmda003,g_detail_d[l_ac].l_pmda003_desc
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      LET g_detail_idx = l_ac
      #end add-point
      
      CALL apmp210_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apmp210_sel
   
   LET l_ac = 1
   CALL apmp210_fetch()
   #add-point:b_fill段資料填充(其他單身)
 
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp210.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmp210_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   DEFINE l_success        LIKE type_t.num5
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   CALL g_detail2_d.clear()
   #判定單頭是否有資料
   IF g_detail_idx <= 0 OR g_detail_d.getLength() = 0 THEN
      RETURN
   END IF
   LET l_ac = 1
    
   IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
      LET g_sql = " SELECT DISTINCT pmdbseq,pmdb004,imaal003,imaal004,pmdb005,NULL,pmdb007,a.oocal003, ",
                  "        pmdb006,pmdb009,b.oocal003,pmdb008,pmdb030,pmdb031,oocql004,pmdb033 ",
                  "   FROM pmdb_t ",
                  "   LEFT OUTER JOIN imaal_t ON pmdbent = imaalent AND pmdb004 = imaal001 AND imaal002 = '",g_dlang,"'",
                  "   LEFT OUTER JOIN oocql_t ON pmdb031 = oocql002 AND oocql001 = '265' AND oocql002 = '",g_dlang,"' ",
                  "   LEFT OUTER JOIN oocal_t a ON a.oocalent = pmdbent AND pmdb007 = a.oocal001 AND a.oocal002 = '",g_dlang,"' ",
                  "   LEFT OUTER JOIN oocal_t b ON b.oocalent = pmdbent AND pmdb009 = b.oocal001 AND b.oocal002 = '",g_dlang,"' ",
                  " WHERE pmdbent = '",g_enterprise,"' AND pmdbdocno = '",g_detail_d[g_detail_idx].pmdadocno,"' ",
                  " ORDER BY pmdbseq "
      PREPARE apmp210_sel2 FROM g_sql
      DECLARE b_fill_curs2 CURSOR FOR apmp210_sel2
      FOREACH b_fill_curs2 INTO g_detail2_d[l_ac].pmdbseq,g_detail2_d[l_ac].pmdb004,g_detail2_d[l_ac].l_pmdb004_desc,g_detail2_d[l_ac].l_pmdb004_desc_1,
                                g_detail2_d[l_ac].pmdb005,g_detail2_d[l_ac].l_pmdb005_desc,g_detail2_d[l_ac].pmdb007,g_detail2_d[l_ac].l_pmdb007_desc,g_detail2_d[l_ac].pmdb006,
                                g_detail2_d[l_ac].pmdb009,g_detail2_d[l_ac].l_pmdb009_desc,
                                g_detail2_d[l_ac].pmdb008,g_detail2_d[l_ac].pmdb030,g_detail2_d[l_ac].pmdb031,g_detail2_d[l_ac].l_pmdb031_desc,g_detail2_d[l_ac].pmdb033
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
    
            EXIT FOREACH
         END IF   
         #产品特征获取
         CALL s_feature_description(g_detail2_d[l_ac].pmdb004,g_detail2_d[l_ac].pmdb005) 
            RETURNING l_success,g_detail2_d[l_ac].l_pmdb005_desc   
         LET l_ac = l_ac + 1            
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend =  "" 
               LET g_errparam.code   =  9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
    
            END IF
            EXIT FOREACH
         END IF      
      END FOREACH
      CALL g_detail2_d.deleteElement(g_detail2_d.getLength())
      LET g_detail2_cnt = l_ac - 1
   END IF
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="apmp210.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apmp210_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp210.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION apmp210_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   CONSTRUCT g_wc_filter ON pmdadocno,pmda002,pmda003 
      FROM s_detail1[1].b_pmdadocno,s_detail1[1].b_pmda002,s_detail1[1].b_pmda003
     
      BEFORE CONSTRUCT
  
      ON ACTION controlp INFIELD pmdadocno
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_pmdadocno()                         #呼叫開窗
         DISPLAY g_qryparam.return1 TO pmdadocno    #顯示到畫面上
         NEXT FIELD pmdadocno                       #返回原欄位
         
      ON ACTION controlp INFIELD pmda002
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooag001()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO pmda002      #顯示到畫面上
         NEXT FIELD pmda002                         #返回原欄位
               
     ON ACTION controlp INFIELD pmda003
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooeg001()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO pmda003      #顯示到畫面上
         NEXT FIELD pmda003                         #返回原欄位

   END CONSTRUCT
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apmp210_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="apmp210.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION apmp210_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apmp210.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apmp210_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmp210_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp210.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 执行整批确认
# Memo...........: 1.选择Y，才需执行确认作业
# Memo...........: 2.再次确认是否为未确认资料
# Memo...........: 3.执行原请购单确认元件
# Usage..........: CALL apmp210_execute()
# Date & Author..: 2015-10-08 By zhujing
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp210_execute()
DEFINE ls_js         STRING
DEFINE lc_param      type_parameter
DEFINE li_count      LIKE type_t.num10  #progressbar計量
DEFINE ls_value      STRING
DEFINE l_success    LIKE type_t.num5
DEFINE l_count      LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
DEFINE l_idx        LIKE type_t.num5
DEFINE l_chr        STRING
DEFINE l_success2    LIKE type_t.num5
DEFINE l_date        DATETIME YEAR TO SECOND
   
   CALL cl_err_collect_init()   #匯總訊息-初始化
   LET li_count = 0
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      #抓去所需處理資料的總筆數
      LET li_count = g_count1
      CALL cl_progress_bar_no_window(li_count) 
   END IF
   LET g_extra_cnt = 0
   LET g_coll_title[1] = s_desc_get_error_desc('apm-01032') #请购单号
   LET l_success = TRUE
   LET l_success2 = TRUE
   LET l_count = 0
   LET l_count = g_count1
   LET l_idx = 1
   IF l_count > 0 THEN 
      FOR l_i = 1 TO g_detail_d.getLength()
         IF g_detail_d[l_i].sel = 'Y' THEN 
            LET l_success = TRUE
            ##畫面顯示處理進度 
            IF g_bgjob <> "Y" THEN
               LET ls_value = g_detail_d[l_i].pmdadocno
               CALL cl_progress_no_window_ing(ls_value)
            END IF 
            #啟用事務
            CALL s_transaction_begin()
            IF s_apmt400_conf_chk(g_detail_d[l_i].pmdadocno) THEN
               IF NOT s_apmt400_conf_upd(g_detail_d[l_i].pmdadocno) THEN
                  CALL s_transaction_end('N',0)
                  LET l_success = FALSE     
                  LET l_success2 = FALSE                  
               END IF
            ELSE
              CALL s_transaction_end('N',0)
              LET l_success = FALSE   
              LET l_success2 = FALSE              
            END IF
            IF l_success THEN
#              #單據確認成功！
#              INITIALIZE g_errparam TO NULL
#              LET g_errparam.code = 'axr-00309'
#              LET g_errparam.extend = g_detail_d[l_i].pmdadocno
#              LET g_errparam.popup = TRUE
#              CALL cl_err() 
               LET l_date = cl_get_current()
               
               #異動狀態碼欄位/修改人/修改日期
               UPDATE pmda_t 
                  SET (pmdamodid,pmdamoddt) 
                    = (g_user,l_date)     
                WHERE pmdaent = g_enterprise AND pmdadocno = g_detail_d[l_i].pmdadocno
             
                
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CALL s_transaction_end('N',0)              
               ELSE
                  CALL s_transaction_end('Y',0)              
               END IF
            END IF           
         END IF
         CALL apmp210_err_collect(g_detail_d[l_i].pmdadocno)
       END FOR
    END IF
    CALL cl_err_collect_show()
    IF l_success2 = TRUE THEN 
      CALL cl_ask_confirm3("std-00012","")
   END IF
END FUNCTION

################################################################################
# Descriptions...: 汇总信息加上请购单号
# Memo...........:
# Usage..........: CALL apmp210_err_collect(p_pmdadocno)
#                  RETURNING 回传参数
# Date & Author..: 2015-11-9 By zhujing
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp210_err_collect(p_pmdadocno)
   DEFINE p_pmdadocno   LIKE pmda_t.pmdadocno
   DEFINE l_i           LIKE type_t.num10
   
   FOR l_i = g_extra_cnt + 1 TO g_errcollect.getLength()
      LET g_errcollect[l_i].extra[1] = p_pmdadocno   #額外欄位資訊
   END FOR
   
   LET g_extra_cnt = g_errcollect.getLength()
END FUNCTION

#end add-point
 
{</section>}
 
