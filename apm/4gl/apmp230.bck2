#該程式未解開Section, 採用最新樣板產出!
{<section id="apmp230.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2015-10-28 10:35:58), PR版次:0002(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000036
#+ Filename...: apmp230
#+ Description: 一般收貨單整批確認作業
#+ Creator....: 02295(2015-10-28 10:35:58)
#+ Modifier...: 02295 -SD/PR- 00000
 
{</section>}
 
{<section id="apmp230.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
   sel          LIKE type_t.chr1,
   pmdsdocno    LIKE pmds_t.pmdsdocno,
   pmdsdocdt    LIKE pmds_t.pmdsdocdt,
   pmds007      LIKE pmds_t.pmds007,
   pmds007_desc LIKE type_t.chr500,
   pmds002      LIKE pmds_t.pmds002,
   pmds002_desc LIKE type_t.chr500,
   pmds003      LIKE pmds_t.pmds003,
   pmds003_desc LIKE type_t.chr500,
   pmds006      LIKE pmds_t.pmds006,
   pmds011      LIKE pmds_t.pmds011,
   pmds008      LIKE pmds_t.pmds008,
   pmds008_desc LIKE type_t.chr500,
   pmds009      LIKE pmds_t.pmds009,
   pmds009_desc LIKE type_t.chr500,
   pmds031      LIKE pmds_t.pmds031,
   pmds031_desc LIKE type_t.chr500,
   pmds032      LIKE pmds_t.pmds032,
   pmds032_desc LIKE type_t.chr500,
   pmds033      LIKE pmds_t.pmds033,
   pmds033_desc LIKE type_t.chr500,
   pmds034      LIKE pmds_t.pmds034,
   pmds035      LIKE pmds_t.pmds035,
   pmds037      LIKE pmds_t.pmds037,
   pmds037_desc LIKE type_t.chr500
END RECORD
TYPE type_g_detail2_d RECORD
   pmdtseq        LIKE pmdt_t.pmdtseq,
   pmdt001        LIKE pmdt_t.pmdt001,
   pmdt002        LIKE pmdt_t.pmdt002,
   pmdt003        LIKE pmdt_t.pmdt003,
   pmdt004        LIKE pmdt_t.pmdt004,
   pmdt005        LIKE pmdt_t.pmdt005,
   pmdo001        LIKE pmdo_t.pmdo001,
   pmdo001_desc   LIKE type_t.chr500,
   pmdo001_desc_1 LIKE type_t.chr500,
   pmdo002        LIKE pmdo_t.pmdo002,
   pmdo002_desc   LIKE type_t.chr500,
   pmdt006        LIKE pmdt_t.pmdt006,
   pmdt006_desc   LIKE type_t.chr500,
   pmdt006_desc_1 LIKE type_t.chr500,
   pmdt007        LIKE pmdt_t.pmdt007,
   pmdt007_desc   LIKE type_t.chr500,
   pmdt025        LIKE pmdt_t.pmdt025,
   pmdt019        LIKE pmdt_t.pmdt019,
   pmdt019_desc   LIKE type_t.chr500,
   pmdt020        LIKE pmdt_t.pmdt020,
   pmdt026        LIKE pmdt_t.pmdt026,
   pmdt062        LIKE pmdt_t.pmdt062,
   pmdt063        LIKE pmdt_t.pmdt063,
   pmdt016        LIKE pmdt_t.pmdt016,
   pmdt016_desc   LIKE type_t.chr500,
   pmdt017        LIKE pmdt_t.pmdt017,
   pmdt017_desc   LIKE type_t.chr500,
   pmdt018        LIKE pmdt_t.pmdt018,
   pmdt051        LIKE pmdt_t.pmdt051,
   pmdt051_desc   LIKE type_t.chr500,
   pmdt059        LIKE pmdt_t.pmdt059
END RECORD
TYPE type_g_detail3_d RECORD
   pmduseq        LIKE pmdu_t.pmduseq,
   pmduseq1       LIKE pmdu_t.pmduseq1,
   pmdu001        LIKE pmdu_t.pmdu001,
   pmdu001_desc   LIKE type_t.chr500,
   pmdu001_desc_1 LIKE type_t.chr500,
   pmdu002        LIKE pmdu_t.pmdu002,
   pmdu002_desc   LIKE type_t.chr500,
   pmdu003        LIKE pmdu_t.pmdu003,
   pmdu003_desc   LIKE type_t.chr500,
   pmdu004        LIKE pmdu_t.pmdu004,
   pmdu006        LIKE pmdu_t.pmdu006,
   pmdu006_desc   LIKE type_t.chr500,
   pmdu007        LIKE pmdu_t.pmdu007,
   pmdu007_desc   LIKE type_t.chr500,
   pmdu008        LIKE pmdu_t.pmdu008,
   pmdu009        LIKE pmdu_t.pmdu009,
   pmdu009_desc   LIKE type_t.chr500,
   pmdu010        LIKE pmdu_t.pmdu010
END RECORD
DEFINE g_detail2_d  DYNAMIC ARRAY OF type_g_detail2_d
DEFINE g_detail3_d  DYNAMIC ARRAY OF type_g_detail3_d
DEFINE g_count      LIKE type_t.num10
DEFINE g_rec_b      LIKE type_t.num10
DEFINE g_detail_idx LIKE type_t.num10
DEFINE g_ooef019    LIKE ooef_t.ooef019
DEFINE g_extra_cnt   LIKE type_t.num10
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="apmp230.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp230 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmp230_init()   
 
      #進入選單 Menu (="N")
      CALL apmp230_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp230
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="apmp230.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION apmp230_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   CALL cl_set_combo_scc('b_pmds011','2061')
   CALL cl_set_combo_scc('b_pmdt005','2055') 
   CALL cl_set_combo_scc('b_pmdt025','2036')  
   SELECT ooef019 INTO g_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp230.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmp230_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   LET g_count = 0
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmp230_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         CONSTRUCT BY NAME g_wc ON pmdsdocno,pmdsdocdt,pmds007,pmds002,pmds003
            
            BEFORE CONSTRUCT

            ON ACTION controlp INFIELD pmdsdocno
	  	 	      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
	    	 	   LET g_qryparam.reqry = FALSE
               CASE g_argv[01]
                  WHEN '0'
                     LET g_qryparam.where = " pmds000 IN('1','2') AND pmdsstus = 'N' "
                  WHEN '1'                 
                     LET g_qryparam.where = " pmds000 IN('8') AND pmdsstus = 'N' "
                  WHEN '2'                 
                     LET g_qryparam.where = " pmds000 IN('9') AND pmdsstus = 'N' "
                  WHEN '3'                 
                     LET g_qryparam.where = " pmds000 IN('23') AND pmdsstus = 'N' "         
               END CASE	                
               CALL q_pmdsdocno_1()                     #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmdsdocno  #顯示到畫面上
               NEXT FIELD pmdsdocno                     #返回原欄位

            ON ACTION controlp INFIELD pmds007
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_3()                     #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmds007  #顯示到畫面上
               NEXT FIELD pmds007                     #返回原欄位

            ON ACTION controlp INFIELD pmds002
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmds002  #顯示到畫面上
               NEXT FIELD pmds002                     #返回原欄位

            ON ACTION controlp INFIELD pmds003
		       	INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
		       	LET g_qryparam.reqry = FALSE
               CALL q_ooeg001()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmds003  #顯示到畫面上
               NEXT FIELD pmds003                     #返回原欄位
         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段input
         INPUT ARRAY g_detail_d FROM s_detail1.*
            ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                       INSERT ROW = FALSE,
                       DELETE ROW = FALSE,
                       APPEND ROW = FALSE)
            BEFORE INPUT               
               
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_master_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_detail_d.getLength() TO FORMONLY.h_count
               CALL apmp230_fetch()

            ON CHANGE b_sel
               IF g_detail_d[l_ac].sel = "Y" THEN 
                  LET g_count = g_count + 1
               ELSE
                  LET g_count = g_count - 1               
               END IF
    
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE DISPLAY
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               DISPLAY g_detail2_d.getLength() TO FORMONLY.cnt
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               DISPLAY l_ac TO FORMONLY.idx
               
         END DISPLAY
         DISPLAY ARRAY g_detail3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE DISPLAY
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               DISPLAY g_detail3_d.getLength() TO FORMONLY.cnt
               DISPLAY l_ac TO FORMONLY.idx
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               DISPLAY l_ac TO FORMONLY.idx
         END DISPLAY
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            LET g_count = g_detail_d.getLength()
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            LET g_count = 0
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            LET g_count = g_count + 1
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            LET g_count = g_count - 1
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmp230_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL apmp230_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL apmp230_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            IF g_count = 0 THEN 
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend =  "" 
               LET g_errparam.code   =  'apm-00481'
               LET g_errparam.popup  = TRUE 
               CALL cl_err()    
            ELSE             
               CALL apmp230_process()
               CALL apmp230_query()
            END IF            
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp230.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION apmp230_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   IF cl_null(g_wc) THEN 
      LET g_wc = " 1=1"
   END IF   
   #end add-point
        
   LET g_error_show = 1
   CALL apmp230_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
 
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmp230.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmp230_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   CLEAR FORM
   CALL g_detail_d.clear() 
   CALL g_detail2_d.clear()
   CALL g_detail3_d.clear()
   LET g_detail_idx = 0
   LET g_count = 0   
   LET g_sql = "SELECT DISTINCT 'N',pmdsdocno,pmdsdocdt,pmds007,a.pmaal004,pmds002,",        
               "                ooag011,pmds003,ooefl003,pmds006,pmds011,",        
               "                pmds008,b.pmaal004,pmds009,c.pmaal004,pmds031,",   
               "                ooibl004,pmds032,oocql004,pmds033,oodbl004,",        
               "                pmds034,pmds035,pmds037,ooail003",
               "  FROM pmds_t",
               "  LEFT OUTER JOIN pmaal_t a ON a.pmaalent=pmdsent AND a.pmaal001=pmds007 AND a.pmaal002='",g_dlang,"'",
               "  LEFT OUTER JOIN ooag_t ON ooagent=pmdsent AND ooag001=pmds002",
               "  LEFT OUTER JOIN ooefl_t ON ooeflent=pmdsent AND ooefl001=pmds003 AND ooefl002='",g_dlang,"'",
               "  LEFT OUTER JOIN pmaal_t b ON b.pmaalent=pmdsent AND b.pmaal001=pmds008 AND b.pmaal002='",g_dlang,"'",
               "  LEFT OUTER JOIN pmaal_t c ON c.pmaalent=pmdsent AND c.pmaal001=pmds008 AND c.pmaal002='",g_dlang,"'",      
               "  LEFT OUTER JOIN ooibl_t ON ooiblent=pmdsent AND ooibl002=pmds031 AND ooibl003='",g_dlang,"'",
               "  LEFT OUTER JOIN oocql_t ON oocqlent=pmdsent AND oocql001='238' AND oocql002=pmds032 AND oocql003='",g_dlang,"'",
               "  LEFT OUTER JOIN oodbl_t ON oodblent=pmdsent AND oodbl001='",g_ooef019,"' AND oodbl002=pmds033 AND oodbl003='",g_dlang,"'",
               "  LEFT OUTER JOIN ooail_t ON ooailent=pmdsent AND ooail001=pmds037 AND ooail002='",g_dlang,"'",
               " WHERE pmdsent = ? ",
               "   AND pmdssite = '",g_site,"' AND pmdsstus = 'N' AND ",g_wc
 
   #"   AND pmds000 IN('1','2','3','4','8','9','12','20','23','24') ",               
   CASE g_argv[01]
      WHEN '0'
         LET g_sql = g_sql," AND pmds000 IN('1','2')"
      WHEN '1'
         LET g_sql = g_sql," AND pmds000 IN('8')"
      WHEN '2'
         LET g_sql = g_sql," AND pmds000 IN('9')"
      WHEN '3'
         LET g_sql = g_sql," AND pmds000 IN('23')"         
   END CASE
   LET g_sql = g_sql," ORDER BY pmdsdocdt,pmdsdocno" 
   #end add-point
 
   PREPARE apmp230_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmp230_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
 
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   g_detail_d[l_ac].*
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      
      #end add-point
      
      CALL apmp230_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   IF g_detail_d.getLength() > 0 THEN 
      LET g_detail_idx = 1
   END IF
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apmp230_sel
   
   LET l_ac = 1
   CALL apmp230_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp230.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmp230_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   DEFINE l_success       LIKE type_t.num5
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   IF g_detail_idx < 1 OR cl_null(g_detail_idx) THEN RETURN END IF
   
   CALL g_detail2_d.clear()
   CALL g_detail3_d.clear()

   LET g_sql = "SELECT DISTINCT pmdtseq,pmdt001,pmdt002,pmdt003,pmdt004,",       
               "                pmdt005,pmdo001,b.imaal003,b.imaal004,pmdo002,'',",      
               "                pmdt006,a.imaal003,a.imaal004,pmdt007,'',pmdt025,",       
               "                pmdt019,oocal003,pmdt020,pmdt026,pmdt062,",       
               "                pmdt063,pmdt016,inayl003,pmdt017,inab003,",  
               "                pmdt018,pmdt051,oocql004,pmdt059 ",
               "  FROM pmdt_t ",
               "  LEFT OUTER JOIN imaal_t a ON a.imaalent = pmdtent AND a.imaal001 = pmdt006 AND a.imaal002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN oocal_t ON oocalent = pmdtent AND oocal001 = pmdt019 AND oocal002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN inayl_t ON inaylent = pmdtent AND inayl001 = pmdt016 AND inayl002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN inab_t ON inabent = pmdtent AND inabsite = '",g_site,"' AND inab001 = pmdt016 AND inab002 = pmdt017",
               "  LEFT OUTER JOIN oocql_t ON oocqlent = pmdtent AND oocql001 = '269' AND oocql002 = pmdt051 AND oocql003 = '",g_dlang,"'",
               "  LEFT JOIN pmdo_t ON pmdoent = pmdtent AND pmdodocno=pmdt001 AND pmdoseq=pmdt002 AND pmdoseq1=pmdt003 AND pmdoseq2=pmdt004 ",
               "  LEFT JOIN imaal_t b ON b.imaalent=pmdoent AND b.imaal001=pmdo001 AND b.imaal002='",g_dlang,"'",
               " WHERE pmdtent=? AND pmdtsite=? AND pmdtdocno=? ",
               " ORDER BY pmdtseq"
   PREPARE apmp230_pb2 FROM g_sql
   DECLARE apmp230_cs2 CURSOR FOR apmp230_pb2
   LET l_ac = 1
   OPEN apmp230_cs2 USING g_enterprise,g_site,g_detail_d[g_detail_idx].pmdsdocno
   FOREACH apmp230_cs2 INTO g_detail2_d[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
 
         EXIT FOREACH
      END IF 
      CALL s_feature_description(g_detail2_d[l_ac].pmdo001,g_detail2_d[l_ac].pmdo002) RETURNING l_success,g_detail2_d[l_ac].pmdo002_desc
      CALL s_feature_description(g_detail2_d[l_ac].pmdt006,g_detail2_d[l_ac].pmdt007) RETURNING l_success,g_detail2_d[l_ac].pmdt007_desc
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH

   CALL g_detail2_d.deleteElement(g_detail2_d.getLength())

   LET g_sql = "SELECT UNIQUE pmduseq,pmduseq1,pmdu001,imaal003,imaal004,",
               "              pmdu002,'',pmdu003,oocql004,pmdu004,pmdu006,",       
               "              inayl003,pmdu007,inab003,pmdu008,",       
               "              pmdu009,oocal003,pmdu010", 
               "  FROM pmdu_t ",
               "  LEFT JOIN imaal_t  ON imaalent = pmduent AND imaal001 = pmdu001 AND imaal002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN oocql_t ON oocqlent = pmduent AND oocql001 = '221' AND oocql002 = pmdu003 AND oocql003 = '",g_dlang,"'",
               "  LEFT OUTER JOIN inayl_t ON inaylent = pmduent AND inayl001 = pmdu006 AND inayl002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN inab_t ON inabent = pmduent AND inabsite = '",g_site,"' AND inab001 = pmdu006 AND inab002 = pmdu007",
               "  LEFT JOIN oocal_t ON oocalent=pmduent AND oocal001=pmdu009 AND oocal002='",g_dlang,"'",
               " WHERE pmduent=? AND pmdusite=? AND pmdudocno=? ",
               " ORDER BY pmduseq,pmduseq1"
   PREPARE apmp230_pb3 FROM g_sql
   DECLARE apmp230_cs3 CURSOR FOR apmp230_pb3
   LET l_ac = 1
   OPEN apmp230_cs3 USING g_enterprise,g_site,g_detail_d[g_detail_idx].pmdsdocno
   FOREACH apmp230_cs3 INTO g_detail3_d[l_ac].*

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      CALL s_feature_description(g_detail3_d[l_ac].pmdu001,g_detail3_d[l_ac].pmdu002) RETURNING l_success,g_detail3_d[l_ac].pmdu002_desc
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_detail3_d.deleteElement(g_detail3_d.getLength())
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="apmp230.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apmp230_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apmp230.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION apmp230_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apmp230_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="apmp230.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION apmp230_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apmp230.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apmp230_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmp230_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apmp230.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

PRIVATE FUNCTION apmp230_process()
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE l_i           LIKE type_t.num5
   DEFINE ls_value      STRING
   DEFINE l_sfaa004     LIKE sfaa_t.sfaa004
   DEFINE l_sfaa011     LIKE sfaa_t.sfaa011
   DEFINE l_sfaa015     LIKE sfaa_t.sfaa015
   DEFINE l_ooba002     LIKE ooba_t.ooba002
   DEFINE l_n           LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_num         LIKE type_t.num5
   DEFINE l_success2    LIKE type_t.num5
   
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      #抓去所需處理資料的總筆數
      LET li_count = g_count
      CALL cl_progress_bar_no_window(li_count) 
   END IF
   LET l_success2 = TRUE
   CALL cl_err_collect_init() 
   LET g_extra_cnt = 0
   LET g_coll_title[1] = s_desc_get_error_desc('aap-00153') 
   FOR l_i = 1 TO g_detail_d.getLength() 
      IF g_detail_d[l_i].sel = 'N' THEN CONTINUE FOR END IF 
      
      ##畫面顯示處理進度 
      IF g_bgjob <> "Y" THEN
         LET ls_value = g_detail_d[l_i].pmdsdocno
         CALL cl_progress_no_window_ing(ls_value)
      END IF 
      CALL s_transaction_begin()      
       
      CALL s_apmt520_conf_chk(g_detail_d[l_i].pmdsdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N',0)
         LET l_success2 = FALSE
         CALL apmp230_err_collect(g_detail_d[l_i].pmdsdocno) 
         CONTINUE FOR
      END IF
      CALL s_apmt520_conf_upd(g_detail_d[l_i].pmdsdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N',0)
         LET l_success2 = FALSE
         CALL apmp230_err_collect(g_detail_d[l_i].pmdsdocno) 
         CONTINUE FOR
      END IF            
      CALL s_transaction_end('Y',0)     
   END FOR
    
   CALL cl_err_collect_show()
   IF l_success2 = TRUE THEN 
      CALL cl_ask_confirm3("std-00012","")
   END IF
END FUNCTION

################################################################################
# Descriptions...: 报错信息中增加显示单据编号
################################################################################
PRIVATE FUNCTION apmp230_err_collect(p_pmdsdocno)
   DEFINE p_pmdsdocno   LIKE pmds_t.pmdsdocno
   DEFINE l_i           LIKE type_t.num10
   
   FOR l_i = g_extra_cnt + 1 TO g_errcollect.getLength()
      LET g_errcollect[l_i].extra[1] = p_pmdsdocno   #額外欄位資訊
   END FOR
   
   LET g_extra_cnt = g_errcollect.getLength()
END FUNCTION

#end add-point
 
{</section>}
 
