<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprm211" std_prog="aprm211" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.aprm211_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭帶值欄位顯示
# Memo...........:
# Usage..........: CALL aprm211_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/13 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_desc()
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdlunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdlunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdlunit_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl006
   CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl006_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl007
   CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl007_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl004
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl004_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl005_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '2100' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl008_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdl_m.prdl009
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '2101' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdl_m.prdl009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdl_m.prdl009_desc
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdp_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: prde單身帶值欄位顯示
# Memo...........:
# Usage..........: CALL aprm211_prdp_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/13 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdp_desc()
   
   LET g_prdp_d[l_ac].prdp004_desc = ''
   IF g_prdp_d[l_ac].prdp003 = '1' THEN
      SELECT rtaal003 INTO g_prdp_d[l_ac].prdp004_desc
        FROM rtaal_t
       WHERE rtaalent = g_enterprise
         AND rtaal001 = g_prdp_d[l_ac].prdp004
         AND rtaal002 = g_dlang
   ELSE
      SELECT ooefl003 INTO g_prdp_d[l_ac].prdp004_desc
        FROM ooefl_t
       WHERE ooeflent = g_enterprise
         AND ooefl001 = g_prdp_d[l_ac].prdp004
         AND ooefl002 = g_dlang
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdr_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: prdg單身帶值欄位顯示
# Memo...........:
# Usage..........: CALL aprm211_prdr_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/13 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdr_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdp2_d[l_ac].prdr006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdp2_d[l_ac].prdr006_desc
   
   IF g_prdp2_d[l_ac].prdr003 = '4' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '5' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '6' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2000' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '7' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2001' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '8' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2002' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '9' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2003' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'A' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2004' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'B' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2005' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'C' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2006' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'D' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2007' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'E' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2008' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'F' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2009' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'G' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2010' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'H' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2011' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'I' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2012' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'J' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2013' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'K' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2014' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'L' THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prdp2_d[l_ac].prdr004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '2015' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prdp2_d[l_ac].prdr004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prdp2_d[l_ac].prdr004_desc
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdq_desc" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: prdf單身帶值欄位顯示
# Memo...........:
# Usage..........: CALL aprm211_prdq_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/13 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdq_desc()
DEFINE l_ooia002     LIKE ooia_t.ooia002

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prdp3_d[l_ac].prdq003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooial003 FROM ooial_t WHERE ooialent='"||g_enterprise||"' AND ooial001=? AND ooial002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prdp3_d[l_ac].prdq003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prdp3_d[l_ac].prdq003_desc
   
   IF NOT cl_null(g_prdp3_d[l_ac].prdq003) THEN
      SELECT ooia002 INTO l_ooia002
        FROM ooia_t
       WHERE ooiaent = g_enterprise
         AND ooia001 = g_prdp3_d[l_ac].prdq003
      IF l_ooia002 = '40' THEN #券
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_prdp3_d[l_ac].prdq004
         CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_prdp3_d[l_ac].prdq004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_prdp3_d[l_ac].prdq004_desc
      END IF
      IF l_ooia002 = '60' THEN #卡
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_prdp3_d[l_ac].prdq004
         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_prdp3_d[l_ac].prdq004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_prdp3_d[l_ac].prdq004_desc
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdl006_def" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 促銷方案帶值
# Memo...........:
# Usage..........: CALL aprm211_prdl006_def()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdl006_def()
DEFINE l_sql             STRING
DEFINE l_prdp002         LIKE prdp_t.prdp002
DEFINE l_prce            RECORD LIKE prce_t.*

   SELECT prcf002,prcf007,prcf008,prcf009,prcf010
     INTO g_prdl_m.prdl007,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1
     FROM prcf_t
    WHERE prcfent = g_enterprise
      AND prcf001 = g_prdl_m.prdl006
   DISPLAY BY NAME g_prdl_m.prdl007,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1
   IF NOT cl_null(g_prdl_m.prdl007) THEN
#      DELETE FROM prdp_t WHERE prdpent = g_enterprise AND prdedocno = g_prdl_m.prdadocno
      LET l_prdp002 = 1
      LET l_sql = " SELECT * FROM prce_t",
                  "  WHERE prceent = '",g_enterprise,"'",
                  "    AND prce001 = '",g_prdl_m.prdl007,"'"
      PREPARE aprm211_sel_prce_pre FROM l_sql
      DECLARE aprm211_sel_prce_cur CURSOR FOR aprm211_sel_prce_pre
      FOREACH aprm211_sel_prce_cur INTO l_prce.*
#         INSERT INTO prdp_t(prdpent,prdpunit,prdpsite,prdedocno,prdp001,prdp002,prdp003,prdp004,prdeacti)
#                     VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,l_prdp002,l_prce.prce002,l_prce.prce003,l_prce.prceacti)
         LET l_prdp002 = l_prdp002+1            
      END FOREACH
      CALL aprm211_b_fill() 
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdl007_def" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 活动方案帶值
# Memo...........:
# Usage..........: CALL aprm211_prdl007_def()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdl007_def()
DEFINE l_sql             STRING
DEFINE l_prdp002         LIKE prdp_t.prdp002
DEFINE l_prce            RECORD LIKE prce_t.*

   IF cl_null(g_prdl_m.prdl006) THEN
      SELECT prcd002,prcd003,prcd004,prcd005 
        INTO g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1
        FROM prcd_t
       WHERE prcdent = g_enterprise
         AND prcd001 = g_prdl_m.prdl007
      DISPLAY BY NAME g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1
#      DELETE FROM prdp_t WHERE prdpent = g_enterprise AND prdedocno = g_prdl_m.prdadocno
      LET l_prdp002 = 1
      LET l_sql = " SELECT * FROM prce_t",
                  "  WHERE prceent = '",g_enterprise,"'",
                  "    AND prce001 = '",g_prdl_m.prdl007,"'"
      PREPARE aprm211_sel_prce_pre1 FROM l_sql
      DECLARE aprm211_sel_prce_cur1 CURSOR FOR aprm211_sel_prce_pre1
      FOREACH aprm211_sel_prce_cur1 INTO l_prce.*
#         INSERT INTO prdp_t(prdpent,prdpunit,prdpsite,prdedocno,prdp001,prdp002,prdp003,prdp004,prdeacti)
#                     VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,l_prdp002,l_prce.prce002,l_prce.prce003,l_prce.prceacti)
         LET l_prdp002 = l_prdp002+1            
      END FOREACH
      CALL aprm211_b_fill()  
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_set_no_required" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 单头栏位必输关闭
# Memo...........:
# Usage..........: CALL aprm211_set_no_required(p_cmd)
# Input parameter: p_cmd          新增/修改标识符
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_set_no_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_required("prdl006",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.aprm211_set_required" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[###############################################################################
# Descriptions...: 单头栏位必输
# Memo...........:
# Usage..........: CALL aprm211_set_required(p_cmd)
# Input parameter: p_cmd          新增/修改标识符
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_set_required(p_cmd)
DEFINE p_cmd        LIKE type_t.chr1
DEFINE l_prcd006    LIKE prcd_t.prcd006  

   IF NOT cl_null(g_prdl_m.prdl007) THEN  
      LET l_prcd006 = ''
      SELECT prcd006 INTO l_prcd006
        FROM prcd_t
       WHERE prcdent = g_enterprise
         AND prcd001 = g_prdl_m.prdl007
      IF l_prcd006 = 'Y' THEN
         CALL cl_set_comp_required("prdl006",TRUE)
      END IF
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprm211_chk_prdl006_007" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查促銷方案對應的活動計劃是否和現在的活動計劃相同
# Memo...........:
# Usage..........: CALL aprm211_chk_prdl006_007()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_chk_prdl006_007()
DEFINE l_prcf002        LIKE prcf_t.prcf002

   LET g_errno = ''
   SELECT prcf002 INTO l_prcf002
     FROM prcf_t
    WHERE prcfent = g_enterprise
      AND prcf001 = g_prdl_m.prdl006
   IF l_prcf002 <> g_prdl_m.prdl007 THEN
      LET g_errno = 'apr-00065'
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_set_comp_visible" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 畫面UI的呈現方式
# Memo...........:
# Usage..........: CALL aprm211_set_comp_visible()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_set_comp_visible()
   CALL cl_set_comp_visible('bpage2',TRUE)
   IF g_prdl_m.prdl010 = 'Y' THEN
      CALL cl_set_comp_visible('bpage2',FALSE)
   END IF
   CALL cl_set_comp_visible('bpage3',FALSE)
   IF g_prdl_m.prdl011 = 'Y' THEN
      CALL cl_set_comp_visible('bpage3',TRUE)
   END IF
   CALL cl_set_comp_visible('bpage4',TRUE)
   CALL cl_set_comp_visible('lbl_prdo003',TRUE)
   CALL cl_set_comp_visible('prdo003_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo004',TRUE)
   CALL cl_set_comp_visible('prdo004_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo005',TRUE)
   CALL cl_set_comp_visible('prdo005_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo006',TRUE)
   CALL cl_set_comp_visible('prdo006_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo007',TRUE)
   CALL cl_set_comp_visible('prdo007_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo008',TRUE)
   CALL cl_set_comp_visible('prdo008_1',TRUE)
   IF g_prdl_m.prdl013 = 'Y' THEN
      CALL cl_set_comp_visible('lbl_prdo003',FALSE)
      CALL cl_set_comp_visible('prdo003_1',FALSE)
      LET g_prdl_m.prdo003_1 = ''
      CALL cl_set_comp_visible('lbl_prdo004',FALSE)
      CALL cl_set_comp_visible('prdo004_1',FALSE)
      LET g_prdl_m.prdo004_1 = ''
      CALL cl_set_comp_visible('lbl_prdo005',FALSE)
      CALL cl_set_comp_visible('prdo005_1',FALSE)
      LET g_prdl_m.prdo005_1 = ''
      CALL cl_set_comp_visible('lbl_prdo006',FALSE)
      CALL cl_set_comp_visible('prdo006_1',FALSE)
      LET g_prdl_m.prdo006_1 = ''
      CALL cl_set_comp_visible('lbl_prdo007',FALSE)
      CALL cl_set_comp_visible('prdo007_1',FALSE)
      LET g_prdl_m.prdo007_1 = ''
      CALL cl_set_comp_visible('lbl_prdo008',FALSE)
      CALL cl_set_comp_visible('prdo008_1',FALSE)
      LET g_prdl_m.prdo008_1 = ''
   ELSE
      CALL cl_set_comp_visible('bpage4',FALSE)
   END IF
   CALL cl_set_comp_visible('lbl_prdb005_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdb005_2',TRUE)
   CALL cl_set_comp_visible('prdb005_1',TRUE)
   CALL cl_set_comp_visible('prdb005_2',TRUE)
   CALL cl_set_comp_visible('lbl_3',FALSE)
   CALL cl_set_comp_visible('lbl_4',FALSE)
   IF g_prdl_m.prdl026 = '1' THEN
      CALL cl_set_comp_visible('lbl_prdb005_2',FALSE)
      CALL cl_set_comp_visible('prdb005_2',FALSE)
      LET g_prdl_m.prdb005_2 = ''
      CALL cl_set_comp_visible('lbl_4',TRUE)
   END IF
   IF g_prdl_m.prdl026 = '2' THEN
      CALL cl_set_comp_visible('lbl_prdb005_1',FALSE)
      CALL cl_set_comp_visible('prdb005_1',FALSE)
      LET g_prdl_m.prdb005_1 = ''
      CALL cl_set_comp_visible('lbl_3',TRUE)
   END IF
   IF g_prdl_m.prdl026 = '4' THEN
      CALL cl_set_comp_visible('lbl_prdb005_1',FALSE)
      CALL cl_set_comp_visible('lbl_prdb005_2',FALSE)
      CALL cl_set_comp_visible('prdb005_1',FALSE)
      LET g_prdl_m.prdb005_1 = ''
      CALL cl_set_comp_visible('prdb005_2',FALSE)
      LET g_prdl_m.prdb005_2 = ''
      CALL cl_set_comp_visible('lbl_3',TRUE)
      CALL cl_set_comp_visible('lbl_4',TRUE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_set_comp_att_text" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 根據不同的條件欄位顯示名稱不同
# Memo...........:
# Usage..........: CALL aprm211_set_comp_att_text()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_set_comp_att_text()
DEFINE l_msg      STRING 

   CALL cl_getmsg('apr-00184',g_lang) RETURNING l_msg
   CALL cl_set_comp_att_text("lbl_prdb005_1",l_msg)
   CALL cl_getmsg('apr-00185',g_lang) RETURNING l_msg
   CALL cl_set_comp_att_text("lbl_prdb005_2",l_msg)
   IF g_prdl_m.prdl024 = '3' THEN
      CALL cl_getmsg('apr-00070',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("lbl_prdb005_1",l_msg)
      CALL cl_getmsg('apr-00072',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("lbl_prdb005_2",l_msg)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_master_def" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭日期+參考對象新增
# Memo...........:
# Usage..........: CALL aprm211_master_def()
# Input parameter: 無
# Return code....: TRUE/FALSE
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_master_def()
#   DELETE FROM prdb_t WHERE prdbent = g_enterprise AND prdbdocno = g_prdl_m.prdadocno
   IF g_prdl_m.prdl026 = '1'  OR g_prdl_m.prdl026 = '3'  THEN
      #散客
      IF NOT cl_null(g_prdl_m.prdb005_1) THEN
#         INSERT INTO prdb_t(prdbent,prdbunit,prdbsite,prdbdocno,prdb001,prdb002,prdb003,prdb004,prdb005,prdbacti)
#                     VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,1,'1',0,g_prdl_m.prdb005_1,'Y')         
         IF SQLCA.sqlcode THEN
            CALL cl_err('ins prdb',SQLCA.sqlcode,1)
            RETURN FALSE
         END IF
      END IF
   END IF
   IF g_prdl_m.prdl026 = '2'  OR g_prdl_m.prdl026 = '3'  THEN
      #會員
      IF NOT cl_null(g_prdl_m.prdb005_2) THEN
#         INSERT INTO prdb_t(prdbent,prdbunit,prdbsite,prdbdocno,prdb001,prdb002,prdb003,prdb004,prdb005,prdbacti)
#                     VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,2,'2',0,g_prdl_m.prdb005_2,'Y')         
         IF SQLCA.sqlcode THEN
            CALL cl_err('ins prdb',SQLCA.sqlcode,1)
            RETURN FALSE
         END IF
      END IF
   END IF
#   DELETE FROM prdo_t WHERE prdoent = g_enterprise AND prdddocno = g_prdl_m.prdadocno
   #日期
   IF g_prdl_m.prdl013 = 'N' THEN
#      INSERT INTO prdo_t(prdoent,prdounit,prdosite,prdddocno,prdo001,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prddacti)
#                  VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,1,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1,g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdo007_1,g_prdl_m.prdo008_1,'Y')
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins prdd',SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aprm211_master_upd" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭日期+參考對象更新
# Memo...........:
# Usage..........: CALL aprm211_master_upd()
# Input parameter: 無
# Return code....: TRUE/FALSE
# Date & Author..: 2014/03/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_master_upd()
DEFINE l_n           LIKE type_t.num5


#   IF g_prdl_m.prdl026 = '1'  OR g_prdl_m.prdl026 = '3'  THEN
#      #散客
#      IF NOT cl_null(g_prdl_m.prdb005_1) THEN
#         LET l_n = 0
#         SELECT COUNT(*) INTO l_n
#           FROM prdb_t
#          WHERE prdbent = g_enterprise
#            AND prdbdocno = g_prdl_m.prdadocno
#            AND prdb002 = 1
#         IF l_n = 0 THEN
#            INSERT INTO prdb_t(prdbent,prdbunit,prdbsite,prdbdocno,prdb001,prdb002,prdb003,prdb004,prdb005,prdbacti)
#                        VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,1,'1',0,g_prdl_m.prdb005_1,'Y')         
#            IF SQLCA.sqlcode THEN
#               CALL cl_err('ins prdb',SQLCA.sqlcode,1)
#               RETURN FALSE
#            END IF
#         ELSE
#            UPDATE prdb_t SET prdb001 = g_prdl_m.prdl001,
#                              prdb003 = '1',
#                              prdb004 = 0,
#                              prdb005 = g_prdl_m.prdb005_1,
#                              prdbacti = 'Y'
#            WHERE prdbent = g_enterprise
#              AND prdbdocno = g_prdl_m.prdadocno
#              AND prdb002 = 1  
#            IF SQLCA.sqlcode THEN
#               CALL cl_err('upd prdb',SQLCA.sqlcode,1)
#               RETURN FALSE
#            END IF     
#         END IF
#      END IF
#   END IF
#   IF g_prdl_m.prdl026 = '2'  OR g_prdl_m.prdl026 = '3'  THEN
#      #散客
#      IF NOT cl_null(g_prdl_m.prdb005_2) THEN
#         LET l_n = 0
#         SELECT COUNT(*) INTO l_n
#           FROM prdb_t
#          WHERE prdbent = g_enterprise
#            AND prdbdocno = g_prdl_m.prdadocno
#            AND prdb002 = 2
#         IF l_n = 0 THEN
#            INSERT INTO prdb_t(prdbent,prdbunit,prdbsite,prdbdocno,prdb001,prdb002,prdb003,prdb004,prdb005,prdbacti)
#                        VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,2,'2',0,g_prdl_m.prdb005_2,'Y')         
#            IF SQLCA.sqlcode THEN
#               CALL cl_err('ins prdb',SQLCA.sqlcode,1)
#               RETURN FALSE
#            END IF
#         ELSE
#            UPDATE prdb_t SET prdb001 = g_prdl_m.prdl001,
#                              prdb003 = '2',
#                              prdb004 = 0,
#                              prdb005 = g_prdl_m.prdb005_2,
#                              prdbacti = 'Y'
#            WHERE prdbent = g_enterprise
#              AND prdbdocno = g_prdl_m.prdadocno
#              AND prdb002 = 2  
#            IF SQLCA.sqlcode THEN
#               CALL cl_err('upd prdb',SQLCA.sqlcode,1)
#               RETURN FALSE
#            END IF  
#         END IF
#      END IF
#   END IF
#   #日期
#   IF g_prdl_m.prdl013 = 'N' THEN
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM prdo_t
#       WHERE prdoent = g_enterprise
#         AND prdddocno = g_prdl_m.prdadocno
#         AND prdo002 = 1
#      IF l_n = 0 THEN   
#         INSERT INTO prdo_t(prdoent,prdounit,prdosite,prdddocno,prdo001,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prddacti)
#                     VALUES(g_enterprise,g_site,g_site,g_prdl_m.prdadocno,g_prdl_m.prdl001,1,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1,g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdo007_1,g_prdl_m.prdo008_1,'Y')
#         IF SQLCA.sqlcode THEN
#            CALL cl_err('ins prdd',SQLCA.sqlcode,1)
#            RETURN FALSE
#         END IF
#      ELSE
#         UPDATE prdo_t SET prdo001 = g_prdl_m.prdl001,
#                           prdo003 = g_prdl_m.prdo003_1,
#                           prdo004 = g_prdl_m.prdo004_1,
#                           prdo005 = g_prdl_m.prdo005_1,
#                           prdo006 = g_prdl_m.prdo006_1,
#                           prdo007 = g_prdl_m.prdo007_1,
#                           prdo008 = g_prdl_m.prdo008_1,
#                           prddacti = 'Y'
#         WHERE prdoent = g_enterprise
#           AND prdddocno = g_prdl_m.prdadocno
#           AND prdo002 = 1  
#         IF SQLCA.sqlcode THEN
#            CALL cl_err('upd prdd',SQLCA.sqlcode,1)
#            RETURN FALSE
#         END IF  
#      END IF
#   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aprm211_chk_prdl001" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 規則編號檢查
# Memo...........:
# Usage..........: CALL aprm211_chk_prdl001()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_chk_prdl001()
DEFINE l_n              LIKE type_t.num5
DEFINE l_prdlstus       LIKE prdl_t.prdlstus

   LET g_errno = ""
   
#   IF g_prdl_m.prda000 = 'I' THEN
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM prdl_t
#       WHERE prdlent = g_enterprise
#         AND prdl001 = g_prdl_m.prdl001
#      IF l_n > 0 THEN
#         LET g_errno = 'apr-00080'
#         RETURN
#      END IF
#   END IF
#   IF g_prdl_m.prda000 = 'U' THEN
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM prdl_t
#       WHERE prdlent = g_enterprise
#         AND prdl001 = g_prdl_m.prdl001
#      IF l_n = 0 THEN
#         LET g_errno = 'apr-00081'
#         RETURN
#      END IF
#      LET l_prdlstus = ''
#      SELECT prdlstus INTO l_prdlstus
#        FROM prdl_t
#       WHERE prdlent = g_enterprise
#         AND prdl001 = g_prdl_m.prdl001
#      IF l_prdlstus = 'X' THEN
#         LET g_errno = 'apr-00082'
#         RETURN
#      END IF
#      IF l_prdlstus = 'N' THEN
#         LET g_errno = 'apr-00083'
#         RETURN
#      END IF
#   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_chk_prdp004" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 店群/門店檢查
# Memo...........:
# Usage..........: CALL aprm211_chk_prdp004()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_chk_prdp004()
DEFINE l_n       LIKE type_t.num5
DEFINE l_sql     STRING

   LET g_errno = ''
   IF g_prdp_d[l_ac].prdp003 = '1' THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM rtaa_t
       WHERE rtaaent = g_enterprise
         AND rtaa001 = g_prdp_d[l_ac].prdp004
      IF l_n = 0 THEN
         LET g_errno = 'apr-00006'
         RETURN
      END IF
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM rtaa_t
       WHERE rtaaent = g_enterprise
         AND rtaa001 = g_prdp_d[l_ac].prdp004
         AND rtaastus = 'Y'
      IF l_n = 0 THEN
         LET g_errno = 'apr-00007'
         RETURN
      END IF
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM rtaa_t
       WHERE rtaaent = g_enterprise
         AND rtaa001 = g_prdp_d[l_ac].prdp004
         AND rtaastus = 'Y'
         AND rtaa002 = '4'
      IF l_n = 0 THEN
         LET g_errno = 'apr-00008'
         RETURN
      END IF
      LET l_n = 0
      LET l_sql = "SELECT COUNT(*) ",
                  "  FROM rtaa_t,rtab_t",
                  " WHERE rtaaent = '",g_enterprise,"'",
                  "   AND rtaa001 = '",g_prdp_d[l_ac].prdp004,"'",
                  "   AND rtaastus = 'Y'",
                  "   AND rtaa002 = '4'",
                  "   AND rtaaent = rtabent",
                  "   AND rtaa001 = rtab001",
                  "   AND rtab002 IN (SELECT ooed004 FROM ooed_t ",
                  "                    START WITH ooed005 = '",g_site,"'",
                  "                      AND ooed001='2'",
                  "                      AND ooed006<= '",g_today,"'",
                  "                      AND (ooed007>= '",g_today,"' OR ooed007 IS NULL)",
                  "                    CONNECT BY  nocycle PRIOR ooed004=ooed005 ",
                  "                      AND ooed001='2' ",
                  "                      AND ooed006<= '",g_today,"'",
                  "                      AND (ooed007>= '",g_today,"' OR ooed007 IS NULL)",
                  "                    UNION SELECT ooed004 FROM ooed_t WHERE ooed004 = '",g_site,"' )"
      PREPARE aprm211_sel_rtaa_pr FROM l_sql
      EXECUTE aprm211_sel_rtaa_pr INTO l_n
      IF l_n = 0 THEN
         LET g_errno = 'apr-00066'
         RETURN
      END IF
   END IF
#   IF g_prdp_d[l_ac].prdp003 = '1' THEN
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM rtab_t
#       WHERE rtabent = g_enterprise
#         AND rtab002 IN (SELECT prdp004 FROM prdp_t
#                          WHERE prdpent = g_enterprise
#                            AND prdedocno = g_prdl_m.prdadocno
#                            AND prdp003 = '2')
#         AND rtab001 = g_prdp_d[l_ac].prdp004
#      IF l_n > 0 THEN
#         LET g_errno = 'apr-00013'
#         RETURN
#      END IF
#   END IF
#   IF g_prdp_d[l_ac].prdp003 = '2' THEN
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM prdp_t
#       WHERE prdpent = g_enterprise
#         AND prdedocno = g_prdl_m.prdadocno
#         AND prdp004 IN (SELECT rtab001 FROM rtab_t
#                          WHERE rtabent = g_enterprise
#                            AND rtab002 = g_prdp_d[l_ac].prdp004)
#         AND prdp003 = '1'
#      IF l_n > 0 THEN
#         LET g_errno = 'apr-00014'
#         RETURN
#      END IF
#   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_chk_prdq004" order="16" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 检查款别资料
# Memo...........:
# Usage..........: CALL aprm211_chk_prdq004()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_chk_prdq004()
DEFINE l_ooia002       LIKE ooia_t.ooia002
DEFINE l_gcafstus      LIKE gcaf_t.gcafstus
DEFINE l_mmanstus      LIKE mman_t.mmanstus
DEFINE l_n             LIKE type_t.num5

   LET g_errno = ""
   SELECT ooia002 INTO l_ooia002
     FROM ooia_t
    WHERE ooiaent = g_enterprise
      AND ooia001 = g_prdp3_d[l_ac].prdq003
   IF l_ooia002 = '40' THEN #券
      SELECT gcafstus INTO l_gcafstus
        FROM gcaf_t
       WHERE gcafent = g_enterprise
         AND gcaf001 = g_prdp3_d[l_ac].prdq004
      CASE 
         WHEN SQLCA.sqlcode = 100
              LET g_errno = 'apr-00085'
              RETURN
         WHEN l_gcafstus = 'X'
              LET g_errno = 'apr-00086'
              RETURN
         WHEN l_gcafstus = 'N'
              LET g_errno = 'apr-00087'
              RETURN
      END CASE   
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmap_t
       WHERE mmapent = g_enterprise
         AND mmap001 = 'agcm300'
         AND mmap002 = g_prdp3_d[l_ac].prdq004
         AND mmap003 = g_site
         AND mmapstus = 'Y'
      IF l_n = 0 THEN
         LET g_errno = 'apr-00092'
         RETURN
      END IF
   END IF
   IF l_ooia002 = '60' THEN #卡
      SELECT mmanstus INTO l_mmanstus
        FROM mman_t
       WHERE mmanent = g_enterprise
         AND mman001 = g_prdp3_d[l_ac].prdq004
      CASE 
         WHEN SQLCA.sqlcode = 100
              LET g_errno = 'apr-00088'
              RETURN
         WHEN l_mmanstus = 'X'
              LET g_errno = 'apr-00089'
              RETURN
         WHEN l_mmanstus = 'N'
              LET g_errno = 'apr-00090'
              RETURN
      END CASE 
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmap_t
       WHERE mmapent = g_enterprise
         AND mmap001 = 'ammm320'
         AND mmap002 = g_prdp3_d[l_ac].prdq004
         AND mmap003 = g_site
         AND mmapstus = 'Y'
      IF l_n = 0 THEN
         LET g_errno = 'apr-00092'
         RETURN
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm211_chk_prdr004" order="17" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 屬性代碼檢查
# Memo...........:
# Usage..........: CALL aprm211_chk_prdr004()
#                  RETURNING TRUE/FALSE
# Input parameter: 無
# Return code....: TRUE/FALSE
# Date & Author..: 2014/03/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_chk_prdr004()
   IF g_prdp2_d[l_ac].prdr003 = '4' THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_prdp2_d[l_ac].prdr004
      LET g_chkparam.arg2 = g_site
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_rtdx001_1") THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '5' THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_prdp2_d[l_ac].prdr004
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_rtax001_1") THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '6' THEN
      IF NOT s_azzi650_chk_exist('2000',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '7' THEN
      IF NOT s_azzi650_chk_exist('2001',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '8' THEN
      IF NOT s_azzi650_chk_exist('2002',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = '9' THEN
      IF NOT s_azzi650_chk_exist('2003',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'A' THEN
      IF NOT s_azzi650_chk_exist('2004',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'B' THEN
      IF NOT s_azzi650_chk_exist('2005',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'C' THEN
      IF NOT s_azzi650_chk_exist('2006',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'D' THEN
      IF NOT s_azzi650_chk_exist('2007',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'E' THEN
      IF NOT s_azzi650_chk_exist('2008',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'F' THEN
      IF NOT s_azzi650_chk_exist('2009',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'G' THEN
      IF NOT s_azzi650_chk_exist('2010',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'H' THEN
      IF NOT s_azzi650_chk_exist('2011',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'I' THEN
      IF NOT s_azzi650_chk_exist('2012',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'J' THEN
      IF NOT s_azzi650_chk_exist('2013',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'K' THEN
      IF NOT s_azzi650_chk_exist('2014',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   IF g_prdp2_d[l_ac].prdr003 = 'L' THEN
      IF NOT s_azzi650_chk_exist('2015',g_prdp2_d[l_ac].prdr004) THEN
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aprm211_prdr004_def" order="18" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 商品編號帶值
# Memo...........:
# Usage..........: CALL aprm211_prdr004_def()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_prdr004_def()
   SELECT rtdx002,rtdx033 INTO g_prdp2_d[l_ac].prdr005,g_prdp2_d[l_ac].prdr006
     FROM rtdx_t
    WHERE rtdxent = g_enterprise
      AND rtdxsite = g_site
      AND rtdx001 = g_prdp2_d[l_ac].prdr004
   CALL aprm211_prdr_desc()
END FUNCTION]]>
  </point>
  <point name="function.aprm211_master_show" order="19" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭其他表欄位顯示
# Memo...........:
# Usage..........: CALL　aprm211_master_show()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/03/18 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aprm211_master_show()
   IF g_prdl_m.prdl026 = '1'  OR g_prdl_m.prdl026 = '3'  THEN
      #散客
      SELECT prdm005 INTO g_prdl_m.prdb005_1
        FROM prdm_t
       WHERE prdment = g_enterprise
         AND prdm001 = g_prdl_m.prdl001
         AND prdm002 = 1
   END IF
   IF g_prdl_m.prdl026 = '2'  OR g_prdl_m.prdl026 = '3'  THEN
      #會員
      SELECT prdm005 INTO g_prdl_m.prdb005_2
        FROM prdm_t
       WHERE prdment = g_enterprise
         AND prdm001 = g_prdl_m.prdl001
         AND prdm002 = 2
   END IF
   
   #日期
   IF g_prdl_m.prdl013 = 'N' THEN
      SELECT prdo003,prdo004,prdo005,prdo006,prdo007,prdo008 
        INTO g_prdl_m.prdo003_1,g_prdl_m.prdo004_1,g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdo007_1,g_prdl_m.prdo008_1
        FROM prdo_t
       WHERE prdoent = g_enterprise
         AND prdo001 = g_prdl_m.prdl001
         AND prdo002 = 1
   END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prdl001 ",
 
                        " FROM prdl_t ",
                              " ",
                              " LEFT JOIN prdp_t ON prdpent = prdlent AND prdl001 = prdp001 ",
                              " LEFT JOIN prdr_t ON prdrent = prdlent AND prdl001 = prdr001", 
 
                              " LEFT JOIN prdq_t ON prdqent = prdlent AND prdl001 = prdq001", 
 
                              " LEFT JOIN prdo_t ON prdoent = prdlent AND prdl001 = prdo001", 
 
 
 
                              " LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ", 
                              " ", 
                       " WHERE prdlent = '" ||g_enterprise|| "' AND prdpent = '" ||g_enterprise|| "' AND prdl003 = '1' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prdl001 ",
 
                        " FROM prdl_t ", 
                              " ",
                              " LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ",
                        "WHERE prdlent = '" ||g_enterprise|| "' AND prdl003 = '1' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT prdlstus,prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027, 
          DENSE_RANK() OVER(ORDER BY prdl001 ",g_order,") AS RANK ",
                        " FROM prdl_t ",
                              " ",
                              " LEFT JOIN prdp_t ON prdpent = prdlent AND prdl001 = prdp001 ",
                              " LEFT JOIN prdr_t ON prdrent = prdlent AND prdl001 = prdr001",
 
                              " LEFT JOIN prdq_t ON prdqent = prdlent AND prdl001 = prdq001",
 
                              " LEFT JOIN prdo_t ON prdoent = prdlent AND prdl001 = prdo001",
 
 
 
                              " LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE prdlent = '" ||g_enterprise|| "' AND prdl003 = '1'  AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT prdlstus,prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027, 
          DENSE_RANK() OVER(ORDER BY prdl001 ",g_order,") AS RANK ",
                       " FROM prdl_t ",
                            "  ",
                            "  LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ",
                       " WHERE prdlent = '" ||g_enterprise|| "' AND prdl003 = '1' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT prdlstus,prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027 FROM (",l_sql_rank, 
       ") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order]]>
  </point>
  <point name="construct.a.prdl100" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.c.page1.prdp004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '1'
            LET g_qryparam.arg2 = '1'
            CALL q_prdp004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdp004  #顯示到畫面上

            NEXT FIELD prdp004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.prdr004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '1'
            LET g_qryparam.arg2 = '1'
            CALL q_prdr004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdr004  #顯示到畫面上

            NEXT FIELD prdr004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.prdr005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdr005  #顯示到畫面上

            NEXT FIELD prdr005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.prdr006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdr006  #顯示到畫面上

            NEXT FIELD prdr006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.prdq003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooia001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdq003  #顯示到畫面上
            
            NEXT FIELD prdq003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.prdq004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '1'
            LET g_qryparam.arg2 = '1'
            CALL q_prdq004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdq004  #顯示到畫面上

            NEXT FIELD prdq004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '1'
			LET g_qryparam.arg2 = '1'
            CALL q_prdl001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl001  #顯示到畫面上

            NEXT FIELD prdl001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl004  #顯示到畫面上

            NEXT FIELD prdl004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl005  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooeg001 #部門編號 

            NEXT FIELD prdl005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '1'
            CALL q_prcf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl006  #顯示到畫面上

            NEXT FIELD prdl006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '1'
            CALL q_prcd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl007  #顯示到畫面上

            NEXT FIELD prdl007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2100'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl008  #顯示到畫面上
            NEXT FIELD prdl008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2101'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdl009  #顯示到畫面上
            NEXT FIELD prdl009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prdlcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlcnfid  #顯示到畫面上

            NEXT FIELD prdlcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlcrtdp  #顯示到畫面上

            NEXT FIELD prdlcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlcrtid  #顯示到畫面上

            NEXT FIELD prdlcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlmodid  #顯示到畫面上

            NEXT FIELD prdlmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlowndp  #顯示到畫面上

            NEXT FIELD prdlowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlownid  #顯示到畫面上

            NEXT FIELD prdlownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prdlunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prdlunit  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD prdlunit                     #返回原欄位

]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible('bpage2',TRUE)
   CALL cl_set_comp_visible('bpage3',TRUE)
   CALL cl_set_comp_visible('bpage4',TRUE)
   CALL cl_set_comp_visible('lbl_prdo003',TRUE)
   CALL cl_set_comp_visible('prdo003_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo004',TRUE)
   CALL cl_set_comp_visible('prdo004_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo005',TRUE)
   CALL cl_set_comp_visible('prdo005_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo006',TRUE)
   CALL cl_set_comp_visible('prdo006_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo007',TRUE)
   CALL cl_set_comp_visible('prdo007_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdo008',TRUE)
   CALL cl_set_comp_visible('prdo008_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdb005_1',TRUE)
   CALL cl_set_comp_visible('lbl_prdb005_2',TRUE)
   CALL cl_set_comp_visible('prdb005_1',TRUE)
   CALL cl_set_comp_visible('prdb005_2',TRUE)
   CALL cl_set_comp_visible('lbl_3',FALSE)
   CALL cl_set_comp_visible('lbl_4',FALSE)]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   IF g_prdl_m.prdlstus = 'N' THEN
#      CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
#   ELSE
#      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
#   END IF
   IF g_prdl_m.prdl026 <> '4' THEN
      CALL cl_set_act_visible("object", FALSE)
   ELSE
      CALL cl_set_act_visible("object", TRUE)
   END IF
   CALL cl_set_act_visible("statechange", FALSE)
   IF g_prdl_m.prdl099 = 'Y' THEN
      CALL cl_set_act_visible("release", FALSE)
   ELSE
      CALL cl_set_act_visible("release", TRUE)
   END IF
   CALL aprm211_set_comp_att_text()]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE l_success             LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('prdo007_1','6520') 
   CALL cl_set_combo_scc('prdo008_1','30') 
   CALL cl_set_combo_scc('b_prdl000','32') 
   CALL cl_set_combo_scc_part('prdl024','6564','2,3') 
   CALL cl_set_combo_scc_part('prdr003','6517','4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L')
   CALL aprm211_set_comp_visible()
   CALL aprm211_set_comp_att_text()]]>
  </point>
  <point name="input.a.page1.prdp002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            #此段落由子樣板a05產生
#            IF  g_prdl_m.prdadocno IS NOT NULL AND g_prdp_d[g_detail_idx].prdp002 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp_d[g_detail_idx].prdp002 != g_prdp_d_t.prdp002)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp_d[l_ac].prdp002,"SELECT COUNT(*) FROM prdp_t WHERE "||"prdpent = '" ||g_enterprise|| "' AND "||"prdedocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdp002 = '"||g_prdp_d[g_detail_idx].prdp002 ||"'",'std-00004',1) THEN 
#                     LET g_prdp_d[l_ac].prdp002 = g_prdp_d_t.prdp002
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF

]]>
  </point>
  <point name="input.a.page1.prdp003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdp_d[l_ac].prdp003) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_prdp_d[l_ac].prdp003 <>　g_prdp_d_t.prdp003) THEN
                  LET g_prdp_d[l_ac].prdp004 = ''
                  LET g_prdp_d[l_ac].prdp004_desc = ''
                  DISPLAY BY NAME g_prdp_d[l_ac].prdp004
                  DISPLAY BY NAME g_prdp_d[l_ac].prdp004_desc
#                  CALL aprm211_chk_prdp004()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_prdp_d[l_ac].prdp003,g_errno,1)
#                     LET g_prdp_d[l_ac].prdp003 = g_prdp_d_t.prdp003
#                     NEXT FIELD CURRENT
#                  END IF
#                  IF g_prdp_d[l_ac].prdp003 = '2' THEN
#                     INITIALIZE g_chkparam.* TO NULL
#                     LET g_chkparam.arg1 = g_prdp_d[l_ac].prdp004
#                     LET g_chkparam.arg2 = '2'
#                     LET g_chkparam.arg3 = g_site
#                     IF NOT cl_chk_exist("v_ooed004") THEN
#                        LET g_prdp_d[l_ac].prdp003 = g_prdp_d_t.prdp003
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.prdp004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL aprm211_prdp_desc()
#            IF NOT cl_null(g_prdp_d[l_ac].prdp004) THEN
#               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_prdp_d[l_ac].prdp004 <>　g_prdp_d_t.prdp004) THEN
#                  IF NOT ap_chk_notDup(g_prdp_d[l_ac].prdp004,"SELECT COUNT(*) FROM prdp_t WHERE "||"prdpent = '" ||g_enterprise|| "' AND "||"prdedocno = '"||g_prdl_m.prdadocno ||"'  AND "||"prdp004 = '"||g_prdp_d[l_ac].prdp004 ||"' ",'std-00004',1) THEN
#                     LET g_prdp_d[l_ac].prdp004 = g_prdp_d_t.prdp004
#                     CALL aprm211_prdp_desc()
#                     NEXT FIELD CURRENT
#                  END IF
#                  CALL aprm211_chk_prdp004()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_prdp_d[l_ac].prdp004,g_errno,1)
#                     LET g_prdp_d[l_ac].prdp004 = g_prdp_d_t.prdp004
#                     CALL aprm211_prdp_desc()
#                     NEXT FIELD CURRENT
#                  END IF
#                  IF g_prdp_d[l_ac].prdp003 = '2' THEN
#                     INITIALIZE g_chkparam.* TO NULL
#                     LET g_chkparam.arg1 = g_prdp_d[l_ac].prdp004
#                     LET g_chkparam.arg2 = '2'
#                     LET g_chkparam.arg3 = g_site
#                     IF NOT cl_chk_exist("v_ooed004") THEN
#                        LET g_prdp_d[l_ac].prdp004 = g_prdp_d_t.prdp004
#                        CALL aprm211_prdp_desc()
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
#               END IF
#            END IF]]>
  </point>
  <point name="input.a.page2.prdr002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
#            IF g_prdl_m.prdadocno IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr002 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr003 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr004 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp2_d[g_detail_idx].prdr002 != g_prdp2_d_t.prdr002 OR g_prdp2_d[g_detail_idx].prdr003 != g_prdp2_d_t.prdr003 OR g_prdp2_d[g_detail_idx].prdr004 != g_prdp2_d_t.prdr004)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp2_d[l_ac].prdr002,"SELECT COUNT(*) FROM prdr_t WHERE "||"prdrent = '" ||g_enterprise|| "' AND "||"prdgdocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdr002 = '"||g_prdp2_d[g_detail_idx].prdr002 ||"' AND "|| "prdr003 = '"||g_prdp2_d[g_detail_idx].prdr003 ||"' AND "|| "prdr004 = '"||g_prdp2_d[g_detail_idx].prdr004 ||"' ",'std-00004',1) THEN 
#                     LET g_prdp2_d[l_ac].prdr002 = g_prdp2_d_t.prdr002
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF

]]>
  </point>
  <point name="input.a.page2.prdr003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
#            IF g_prdl_m.prdadocno IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr002 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr003 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr004 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp2_d[g_detail_idx].prdr002 != g_prdp2_d_t.prdr002 OR g_prdp2_d[g_detail_idx].prdr003 != g_prdp2_d_t.prdr003 OR g_prdp2_d[g_detail_idx].prdr004 != g_prdp2_d_t.prdr004)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp2_d[l_ac].prdr003,"SELECT COUNT(*) FROM prdr_t WHERE "||"prdrent = '" ||g_enterprise|| "' AND "||"prdgdocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdr002 = '"||g_prdp2_d[g_detail_idx].prdr002 ||"' AND "|| "prdr003 = '"||g_prdp2_d[g_detail_idx].prdr003 ||"' AND "|| "prdr004 = '"||g_prdp2_d[g_detail_idx].prdr004 ||"' ",'std-00004',1) THEN 
#                     LET g_prdp2_d[l_ac].prdr003 = g_prdp2_d_t.prdr003
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#            IF NOT cl_null(g_prdp2_d[l_ac].prdr003) THEN
#               IF l_cmd = 'a' THEN
#                  LET g_prdp2_d[l_ac].prdr004 = ""
#                  DISPLAY BY NAME g_prdp2_d[l_ac].prdr004
#               END IF
#               IF NOT cl_null(g_prdp2_d[l_ac].prdr004) THEN
#                  IF NOT aprm211_chk_prdr004() THEN
#                     LET g_prdp2_d[l_ac].prdr003 = g_prdp2_d_t.prdr003
#                     NEXT FIELD prdr003
#                  END IF
#               END IF   
#            END IF
#            CALL aprm211_set_entry_b(l_cmd)
#            CALL aprm211_set_no_entry_b(l_cmd)
]]>
  </point>
  <point name="input.a.page2.prdr004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
#            CALL aprm211_prdr_desc()
#            IF g_prdl_m.prdadocno IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr002 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr003 IS NOT NULL AND g_prdp2_d[g_detail_idx].prdr004 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp2_d[g_detail_idx].prdr002 != g_prdp2_d_t.prdr002 OR g_prdp2_d[g_detail_idx].prdr003 != g_prdp2_d_t.prdr003 OR g_prdp2_d[g_detail_idx].prdr004 != g_prdp2_d_t.prdr004)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp2_d[l_ac].prdr004,"SELECT COUNT(*) FROM prdr_t WHERE "||"prdrent = '" ||g_enterprise|| "' AND "||"prdgdocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdr002 = '"||g_prdp2_d[g_detail_idx].prdr002 ||"' AND "|| "prdr003 = '"||g_prdp2_d[g_detail_idx].prdr003 ||"' AND "|| "prdr004 = '"||g_prdp2_d[g_detail_idx].prdr004 ||"' ",'std-00004',1) THEN 
#                     LET g_prdp2_d[l_ac].prdr004 = g_prdp2_d_t.prdr004
#                     CALL aprm211_prdr_desc()
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#            IF NOT cl_null(g_prdp2_d[l_ac].prdr004) THEN
#               IF NOT cl_null(g_prdp2_d[l_ac].prdr003) THEN
#                  IF NOT aprm211_chk_prdr004() THEN
#                     LET g_prdp2_d[l_ac].prdr004 = g_prdp2_d_t.prdr004
#                     CALL aprm211_prdr_desc()
#                     NEXT FIELD CURRENT
#                  END IF
#                  IF g_prdp2_d[l_ac].prdr003 = '4' THEN
#                     CALL aprm211_prdr004_def()
#                  END IF
#               END IF   
#            END IF
]]>
  </point>
  <point name="input.a.page2.prdr005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_prdp2_d[l_ac].prdr005) THEN
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_prdp2_d[l_ac].prdr005
#               #呼叫檢查存在並帶值的library
#               IF NOT cl_chk_exist("v_imay003_1") THEN
#                  LET g_prdp2_d[l_ac].prdr005 = g_prdp2_d_t.prdr005
#                  NEXT FIELD CURRENT
#               END IF
#               IF g_prdp2_d[l_ac].prdr003 = '4' THEN
#                  LET l_n1 = 0
#                  SELECT COUNT(*) INTO l_n1
#                    FROM imay_t
#                   WHERE imayent = g_enterprise
#                     AND imay003 = g_prdp2_d[l_ac].prdr005
#                  IF l_n1 = 1 THEN
#                     SELECT imay001 INTO l_prdr004
#                       FROM imay_t
#                      WHERE imayent = g_enterprise
#                        AND imay003 = g_prdp2_d[l_ac].prdr005
#                     IF NOT cl_null(l_prdr004) THEN
#                        LET l_n1 = 0
#                        SELECT COUNT(*) INTO l_n1
#                          FROM prdr_t
#                         WHERE prdrent = g_enterprise
#                           AND prdgdocno = g_prdl_m.prdadocno
#                           AND prdr004 = l_prdr004
#                           AND prdr002 <> g_prdp2_d[l_ac].prdr002
#                        IF l_n1 > 0 THEN
#                           CALL cl_err(l_prdr004,'apr-00197',1)
#                           LET g_prdp2_d[l_ac].prdr005 = g_prdp2_d_t.prdr005
#                           NEXT FIELD CURRENT
#                        END IF
#                     END IF
#                     LET g_prdp2_d[l_ac].prdr004 = l_prdr004
#                     CALL aprm211_prdr004_def() 
#                  END IF
#               END IF
#               CALL aprm211_prdr_desc()   
#            END IF               
#                
            ]]>
  </point>
  <point name="input.a.page2.prdr006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page3.prdq002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
#            IF  g_prdl_m.prdadocno IS NOT NULL AND g_prdp3_d[g_detail_idx].prdq002 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp3_d[g_detail_idx].prdq002 != g_prdp3_d_t.prdq002)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp3_d[l_ac].prdq002,"SELECT COUNT(*) FROM prdq_t WHERE "||"prdqent = '" ||g_enterprise|| "' AND "||"prdfdocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdq002 = '"||g_prdp3_d[g_detail_idx].prdq002 ||"'",'std-00004',1) THEN 
#                     LET g_prdp3_d[l_ac].prdq002 = g_prdp3_d_t.prdq002
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#
#]]>
  </point>
  <point name="input.a.page3.prdq003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_prdq_desc()
            IF NOT cl_null(g_prdp3_d[l_ac].prdq003) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prdp3_d[l_ac].prdq003
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooia001_2") THEN
                  LET g_prdp3_d[l_ac].prdq003 = g_prdp3_d_t.prdq003
                  CALL aprm211_prdq_desc()
                  NEXT FIELD CURRENT
               END IF
               CALL aprm211_set_entry_b(l_cmd)
               CALL aprm211_set_no_entry_b(l_cmd)
               IF NOT cl_null(g_prdp3_d[l_ac].prdq004) THEN
                  CALL aprm211_chk_prdq004()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prdp3_d[l_ac].prdq003,g_errno,1)
                     LET g_prdp3_d[l_ac].prdq003 = g_prdp3_d_t.prdq003
                     NEXT FIELD prdq003
                  END IF   
               END IF
            END IF]]>
  </point>
  <point name="input.a.page3.prdq004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_prdq_desc()
            IF NOT cl_null(g_prdp3_d[l_ac].prdq004) THEN
               IF NOT cl_null(g_prdp3_d[l_ac].prdq003) THEN
                  CALL aprm211_chk_prdq004()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prdp3_d[l_ac].prdq004,g_errno,1)
                     LET g_prdp3_d[l_ac].prdq004 = g_prdp3_d_t.prdq004
                     CALL aprm211_prdq_desc()
                     NEXT FIELD prdq004
                  END IF   
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page4.prdo002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
#            IF  g_prdl_m.prdadocno IS NOT NULL AND g_prdp4_d[g_detail_idx].prdo002 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prdl_m.prdadocno != g_prdldocno_t OR g_prdp4_d[g_detail_idx].prdo002 != g_prdp4_d_t.prdo002)) THEN 
#                  IF NOT ap_chk_notDup(g_prdp4_d[l_ac].prdo002,"SELECT COUNT(*) FROM prdo_t WHERE "||"prdoent = '" ||g_enterprise|| "' AND "||"prdddocno = '"||g_prdl_m.prdadocno ||"' AND "|| "prdo002 = '"||g_prdp4_d[g_detail_idx].prdo002 ||"'",'std-00004',1) THEN 
#                     LET g_prdp4_d[l_ac].prdo002 = g_prdp4_d_t.prdo002
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#
#]]>
  </point>
  <point name="input.a.page4.prdo003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdp4_d[l_ac].prdo003) AND NOT cl_null(g_prdp4_d[l_ac].prdo004) THEN
               IF g_prdp4_d[l_ac].prdo003 > g_prdp4_d[l_ac].prdo004 THEN
                  CALL cl_err(g_prdp4_d[l_ac].prdo003,'amm-00080',1)
                  LET g_prdp4_d[l_ac].prdo003 = g_prdp4_d_t.prdo003
                  NEXT FIELD prdo003
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.prdo004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdp4_d[l_ac].prdo003) AND NOT cl_null(g_prdp4_d[l_ac].prdo004) THEN
               IF g_prdp4_d[l_ac].prdo003 > g_prdp4_d[l_ac].prdo004 THEN
                  CALL cl_err(g_prdp4_d[l_ac].prdo003,'amm-00081',1)
                  LET g_prdp4_d[l_ac].prdo004 = g_prdp4_d_t.prdo004
                  NEXT FIELD prdo004
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.prdo005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdp4_d[l_ac].prdo005) AND NOT cl_null(g_prdp4_d[l_ac].prdo006) THEN
               IF g_prdp4_d[l_ac].prdo005 > g_prdp4_d[l_ac].prdo006 THEN
                  CALL cl_err(g_prdp4_d[l_ac].prdo005,'apr-00091',1)
                  LET g_prdp4_d[l_ac].prdo005 = g_prdp4_d_t.prdo005
                  NEXT FIELD prdo005
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.prdo006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdp4_d[l_ac].prdo005) AND NOT cl_null(g_prdp4_d[l_ac].prdo006) THEN
               IF g_prdp4_d[l_ac].prdo005 > g_prdp4_d[l_ac].prdo006 THEN
                  CALL cl_err(g_prdp4_d[l_ac].prdo006,'apr-00091',1)
                  LET g_prdp4_d[l_ac].prdo006 = g_prdp4_d_t.prdo006
                  NEXT FIELD prdo006
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdb005_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdl024) THEN
               IF g_prdl_m.prdl024 = '2' THEN
                  IF g_prdl_m.prdb005_1 < 0 OR g_prdl_m.prdb005_1 > 100 THEN
                     CALL cl_err(g_prdl_m.prdb005_1,'apr-00077',1)
                     LET g_prdl_m.prdb005_1 = g_prdl_m_t.prdb005_1
                     NEXT FIELD prdb005_1
                  END IF
               END IF
               IF g_prdl_m.prdl024 = '3' THEN
                  IF g_prdl_m.prdb005_1 <= 0 THEN
                     CALL cl_err(g_prdl_m.prdb005_1,'apr-00078',1)
                     LET g_prdl_m.prdb005_1 = g_prdl_m_t.prdb005_1
                     NEXT FIELD prdb005_1
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdb005_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdl024) THEN
               IF g_prdl_m.prdl024 = '2' THEN
                  IF g_prdl_m.prdb005_2 < 0 OR g_prdl_m.prdb005_2 > 100 THEN
                     CALL cl_err(g_prdl_m.prdb005_2,'apr-00077',1)
                     LET g_prdl_m.prdb005_2 = g_prdl_m_t.prdb005_2
                     NEXT FIELD prdb005_2
                  END IF
               END IF
               IF g_prdl_m.prdl024 = '3' THEN
                  IF g_prdl_m.prdb005_2 <= 0 THEN
                     CALL cl_err(g_prdl_m.prdb005_2,'apr-00078',1)
                     LET g_prdl_m.prdb005_2 = g_prdl_m_t.prdb005_2
                     NEXT FIELD prdb005_2
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_prdl_m.prdl001) THEN
#               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prdl_m.prdl001 != g_prdl_m_t.prdl001 )) THEN 
#                  CALL aprm211_chk_prdl001()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_prdl_m.prdl001,g_errno,1)
#                     LET g_prdl_m.prdl001 = g_prdl_m_t.prdl001
#                     NEXT FIELD prdl001
#                  END IF
#               END IF
#               IF g_prdl_m.prda000 = 'U' THEN   
#                  SELECT MAX(to_number(prdl002)) +1 INTO l_prdl002
#                       FROM prdl_t
#                      WHERE prdlent = g_enterprise
#                        AND prdl001 = g_prdl_m.prdl001
#                     IF cl_null(l_prdl002) THEN
#                        LET g_prdl_m.prdl002 = 1
#                     ELSE
#                        LET g_prdl_m.prdl002 = l_prdl002
#                     END IF
#               END IF
#            END IF]]>
  </point>
  <point name="input.a.prdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_desc()
            IF NOT cl_null(g_prdl_m.prdl004) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prdl_m.prdl004
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooag001") THEN
                  LET g_prdl_m.prdl004 = g_prdl_m_t.prdl004
                  CALL aprm211_desc()
                  NEXT FIELD CURRENT
               END IF
               SELECT ooag003 INTO g_prdl_m.prdl005
                 FROM ooag_t
                WHERE ooagent = g_enterprise
                  AND ooag001 = g_prdl_m.prdl004
               CALL aprm211_desc()
            END IF ]]>
  </point>
  <point name="input.a.prdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_desc()
            IF NOT cl_null(g_prdl_m.prdl005) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prdl_m.prdl005
               LET g_chkparam.arg2 = g_today

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooeg001") THEN
                  LET g_prdl_m.prdl005 = g_prdl_m_t.prdl005
                  CALL aprm211_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
  </point>
  <point name="input.a.prdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          
]]>
  </point>
  <point name="input.a.prdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.prdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdl008
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND '2100'=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prdl_m.prdl008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdl008_desc
]]>
  </point>
  <point name="input.a.prdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdl009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND '2101'=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prdl_m.prdl009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdl009_desc
]]>
  </point>
  <point name="input.a.prdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL aprm211_set_comp_visible()
#            IF g_prdl_m.prdl010 = 'Y' THEN
#               DELETE FROM prdr_t WHERE prdrent = g_enterprise AND prdgdocno = g_prdl_m.prdadocno
#               CALL aprm211_b_fill()
#            END IF]]>
  </point>
  <point name="input.a.prdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_set_comp_visible()]]>
  </point>
  <point name="input.a.prdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_set_comp_visible()]]>
  </point>
  <point name="input.a.prdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdl024) THEN
               IF g_prdl_m.prdl024 = '2' THEN
                  IF g_prdl_m.prdb005_1 < 0 OR g_prdl_m.prdb005_1 > 100 THEN
                     CALL cl_err(g_prdl_m.prdb005_1,'apr-00077',1)
                     LET g_prdl_m.prdl024 = g_prdl_m_t.prdl024
                     NEXT FIELD prdl024
                  END IF
                  IF g_prdl_m.prdb005_2 < 0 OR g_prdl_m.prdb005_2 > 100 THEN
                     CALL cl_err(g_prdl_m.prdb005_2,'apr-00077',1)
                     LET g_prdl_m.prdl024 = g_prdl_m_t.prdl024
                     NEXT FIELD prdl024
                  END IF
               END IF
               IF g_prdl_m.prdl024 = '3' THEN
                  IF g_prdl_m.prdb005_1 <= 0 THEN
                     CALL cl_err(g_prdl_m.prdb005_1,'apr-00078',1)
                     LET g_prdl_m.prdl024 = g_prdl_m_t.prdl024
                     NEXT FIELD prdl024
                  END IF
                  IF g_prdl_m.prdb005_2 <= 0 THEN
                     CALL cl_err(g_prdl_m.prdb005_2,'apr-00078',1)
                     LET g_prdl_m.prdl024 = g_prdl_m_t.prdl024
                     NEXT FIELD prdl024
                  END IF
               END IF
            END IF
            CALL aprm211_set_comp_att_text()
            ]]>
  </point>
  <point name="input.a.prdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL aprm211_set_entry(p_cmd)
#            CALL aprm211_set_no_entry(p_cmd)
#            CALL aprm211_set_comp_visible()
#            IF g_prdl_m.prdl026 <> '4' THEN
#               CALL cl_set_act_visible("object", FALSE)
#               DELETE FROM prdb_t WHERE prdbent = g_enterprise AND prdbdocno = g_prdl_m.prdadocno
#               DELETE FROM prdc_t WHERE prdcent = g_enterprise AND prdcdocno = g_prdl_m.prdadocno
#            ELSE
#               CALL cl_set_act_visible("object", TRUE)
#            END IF]]>
  </point>
  <point name="input.a.prdlunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.prdo003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo003) AND NOT cl_null(g_prdl_m.prdo004) THEN
               IF g_prdl_m.prdo003 > g_prdl_m.prdo004 THEN
                  CALL cl_err(g_prdl_m.prdo003,'amm-00080',1)
                  LET g_prdl_m.prdo003 = g_prdl_m_t.prdo003
                  NEXT FIELD prdo003
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo003_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo003_1) AND NOT cl_null(g_prdl_m.prdo004_1) THEN
               IF g_prdl_m.prdo003_1 > g_prdl_m.prdo004_1 THEN
                  CALL cl_err(g_prdl_m.prdo003_1,'amm-00080',1)
                  LET g_prdl_m.prdo003_1 = g_prdl_m_t.prdo003_1
                  NEXT FIELD prdo003_1
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo003) AND NOT cl_null(g_prdl_m.prdo004) THEN
               IF g_prdl_m.prdo003 > g_prdl_m.prdo004 THEN
                  CALL cl_err(g_prdl_m.prdo003,'amm-00081',1)
                  LET g_prdl_m.prdo004 = g_prdl_m_t.prdo004
                  NEXT FIELD prdo004
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo004_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo003_1) AND NOT cl_null(g_prdl_m.prdo004_1) THEN
               IF g_prdl_m.prdo003_1 > g_prdl_m.prdo004_1 THEN
                  CALL cl_err(g_prdl_m.prdo003_1,'amm-00081',1)
                  LET g_prdl_m.prdo004_1 = g_prdl_m_t.prdo004_1
                  NEXT FIELD prdo004_1
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo005) AND NOT cl_null(g_prdl_m.prdo006) THEN
               IF g_prdl_m.prdo005 > g_prdl_m.prdo006 THEN
                  CALL cl_err(g_prdl_m.prdo005,'apr-00091',1)
                  LET g_prdl_m.prdo005 = g_prdl_m_t.prdo005
                  NEXT FIELD prdo005
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo005_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo005_1) AND NOT cl_null(g_prdl_m.prdo006_1) THEN
               IF g_prdl_m.prdo005_1 > g_prdl_m.prdo006_1 THEN
                  CALL cl_err(g_prdl_m.prdo005_1,'apr-00091',1)
                  LET g_prdl_m.prdo005_1 = g_prdl_m_t.prdo005_1
                  NEXT FIELD prdo005_1
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo005) AND NOT cl_null(g_prdl_m.prdo006) THEN
               IF g_prdl_m.prdo005 > g_prdl_m.prdo006 THEN
                  CALL cl_err(g_prdl_m.prdo006,'apr-00091',1)
                  LET g_prdl_m.prdo006 = g_prdl_m_t.prdo006
                  NEXT FIELD prdo006
               END IF
            END IF]]>
  </point>
  <point name="input.a.prdo006_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prdl_m.prdo005_1) AND NOT cl_null(g_prdl_m.prdo006_1) THEN
               IF g_prdl_m.prdo005_1 > g_prdl_m.prdo006_1 THEN
                  CALL cl_err(g_prdl_m.prdo006_1,'apr-00091',1)
                  LET g_prdl_m.prdo006_1 = g_prdl_m_t.prdo006_1
                  NEXT FIELD prdo006_1
               END IF
            END IF]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[     ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL aprm211_set_no_required(p_cmd)
   CALL aprm211_set_required(p_cmd) ]]>
  </point>
  <point name="input.b.prdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            IF g_prdl_m.prda000 = 'I' AND p_cmd = 'a' THEN
#               LET l_n1 = 0
#               SELECT COUNT(*) INTO l_n1
#                 FROM oofg_t
#                WHERE oofgent = g_enterprise
#                  AND oofg002 = '21'
#                  AND oofgstus = 'Y'
#               IF l_n1 > 0 THEN
#                  CALL s_aooi390('21') RETURNING l_success,l_prdl001
#                  IF l_success THEN
#                     LET g_prdl_m.prdl001 = l_prdl001
#                  END IF 
#                  IF NOT cl_null(g_prdl_m.prdl001) THEN
#                     CALL aprm211_chk_prdl001()
#                     IF NOT cl_null(g_errno) THEN
#                        CALL cl_err(g_prdl_m.prdl001,g_errno,1)
#                        LET g_prdl_m.prdl001 = g_prdl_m_t.prdl001
#                        NEXT FIELD prdl001
#                     END IF
##                     CALL cl_set_comp_entry("prdl001",FALSE)
##                  ELSE
##                     NEXT FIELD prda000
#                  END IF
#               END IF
#            END IF]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                     CANCEL INSERT
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            SELECT MAX(prdp002)+1 INTO g_prdp_d[l_ac].prdp002
#              FROM prdp_t
#             WHERE prdpent = g_enterprise
#               AND prdedocno = g_prdl_m.prdadocno
#            IF cl_null(g_prdp_d[l_ac].prdp002) THEN
#               LET g_prdp_d[l_ac].prdp002 = 1
#            END IF
#            LET g_prdp_d[l_ac].prdp001 = g_prdl_m.prdl001
#            LET g_prdp_d[l_ac].prdpunit = g_site
#            LET g_prdp_d[l_ac].prdpsite = g_site]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                     CANCEL INSERT
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            SELECT MAX(prdr002)+1 INTO g_prdp2_d[l_ac].prdr002
#              FROM prdr_t
#             WHERE prdrent = g_enterprise
#               AND prdgdocno = g_prdl_m.prdadocno
#            IF cl_null(g_prdp2_d[l_ac].prdr002) THEN
#               LET g_prdp2_d[l_ac].prdr002 = 1
#            END IF
#            LET g_prdp2_d[l_ac].prdr001 = g_prdl_m.prdl001
#            LET g_prdp2_d[l_ac].prdrunit = g_site
#            LET g_prdp2_d[l_ac].prdrsite = g_site]]>
  </point>
  <point name="input.body3.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                     CANCEL INSERT
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            SELECT MAX(prdq002)+1 INTO g_prdp3_d[l_ac].prdq002
#              FROM prdq_t
#             WHERE prdqent = g_enterprise
#               AND prdfdocno = g_prdl_m.prdadocno
#            IF cl_null(g_prdp3_d[l_ac].prdq002) THEN
#               LET g_prdp3_d[l_ac].prdq002 = 1
#            END IF
#            LET g_prdp3_d[l_ac].prdq001 = g_prdl_m.prdl001
#            LET g_prdp3_d[l_ac].prdqunit = g_site
#            LET g_prdp3_d[l_ac].prdqsite = g_site]]>
  </point>
  <point name="input.body4.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body4.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               IF p_cmd = 'u' THEN
#                  LET l_time = cl_get_current()
#                  UPDATE prdl_t SET prdlmodid = g_user,
#                                    prdlmoddt = l_time
#                   WHERE prdlent = g_enterprise
#                     AND prdadocno = g_prdl_m.prdadocno
#                  IF SQLCA.SQLcode  THEN
#                     CALL cl_err("upd prdl_t",SQLCA.sqlcode,1)
#                     CALL s_transaction_end('N','0')
#                     CANCEL INSERT
#                  END IF
#               END IF]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            SELECT MAX(prdo002)+1 INTO g_prdp4_d[l_ac].prdo002
#              FROM prdo_t
#             WHERE prdoent = g_enterprise
#               AND prdddocno = g_prdl_m.prdadocno
            IF cl_null(g_prdp4_d[l_ac].prdo002) THEN
               LET g_prdp4_d[l_ac].prdo002 = 1
            END IF
#            LET g_prdp4_d[l_ac].prdo001 = g_prdl_m.prdl001
            LET g_prdp4_d[l_ac].prdounit = g_site
            LET g_prdp4_d[l_ac].prdosite = g_site
            LET g_prdp4_d[l_ac].prdo005 = '00:00:00'
            LET g_prdp4_d[l_ac].prdo006 = '23:59:59']]>
  </point>
  <point name="input.c.page1.prdp004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                                        #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_prdp_d[l_ac].prdp004   #給予default值
            #給予arg
            IF g_prdp_d[l_ac].prdp003 = '1' THEN
               LET g_qryparam.arg1 = '4'
               LET g_qryparam.arg2 = g_site
               LET g_qryparam.arg3 = '2'
               CALL q_rtaa001_5()
            ELSE
               LET g_qryparam.arg1 = g_site
               LET g_qryparam.arg2 = '2'
               CALL q_ooed004()                                #呼叫開窗
            END IF

            LET g_prdp_d[l_ac].prdp004  = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_prdp_d[l_ac].prdp004  TO prdp004         #顯示到畫面上
            CALL aprm211_prdp_desc()
            NEXT FIELD prdp004                                 #返回原欄位                                                  ]]>
  </point>
  <point name="input.c.page2.prdr004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_prdp2_d[l_ac].prdr004             #給予default值

            IF g_prdp2_d[l_ac].prdr003 = '4' THEN
               LET g_qryparam.arg1 = g_site
               CALL q_rtdx001_12()
            END IF                      
            IF g_prdp2_d[l_ac].prdr003 = '5' THEN
               CALL q_rtax001()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = '6' THEN
               LET g_qryparam.arg1 = '2000'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = '7' THEN
               LET g_qryparam.arg1 = '2001'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = '8' THEN
               LET g_qryparam.arg1 = '2002'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = '9' THEN
               LET g_qryparam.arg1 = '2003'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'A' THEN
               LET g_qryparam.arg1 = '2004'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'B' THEN
               LET g_qryparam.arg1 = '2005'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'C' THEN
               LET g_qryparam.arg1 = '2006'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'D' THEN
               LET g_qryparam.arg1 = '2007'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'E' THEN
               LET g_qryparam.arg1 = '2008'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'F' THEN
               LET g_qryparam.arg1 = '2009'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'G' THEN
               LET g_qryparam.arg1 = '2010'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'H' THEN
               LET g_qryparam.arg1 = '2011'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'I' THEN
               LET g_qryparam.arg1 = '2012'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'J' THEN
               LET g_qryparam.arg1 = '2013'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'K' THEN
               LET g_qryparam.arg1 = '2014'
               CALL q_oocq002()
            END IF
            IF g_prdp2_d[l_ac].prdr003 = 'L' THEN
               LET g_qryparam.arg1 = '2015'
               CALL q_oocq002()
            END IF
            
            LET g_prdp2_d[l_ac].prdr004 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_prdp2_d[l_ac].prdr004 TO prdr004              #顯示到畫面上
            CALL aprm211_prdr_desc()
            NEXT FIELD prdr004                                      #返回原欄位]]>
  </point>
  <point name="input.c.page2.prdr005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdp2_d[l_ac].prdr005             #給予default值

            #給予arg

            CALL q_imay003_2()                                #呼叫開窗

            LET g_prdp2_d[l_ac].prdr005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdp2_d[l_ac].prdr005 TO prdr005              #顯示到畫面上

            NEXT FIELD prdr005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.prdr006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdp2_d[l_ac].prdr006             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_prdp2_d[l_ac].prdr006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdp2_d[l_ac].prdr006 TO prdr006              #顯示到畫面上

            NEXT FIELD prdr006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prdq003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdp3_d[l_ac].prdq003             #給予default值

            #給予arg

            CALL q_ooia001()                                #呼叫開窗

            LET g_prdp3_d[l_ac].prdq003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdp3_d[l_ac].prdq003 TO prdq003              #顯示到畫面上
            CALL aprm211_prdq_desc()
            NEXT FIELD prdq003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prdq004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_prdp3_d[l_ac].prdq004   #給予default值
            #給予arg
            IF NOT cl_null(g_prdp3_d[l_ac].prdq003) THEN
               LET l_ooia002 = ''
               SELECT ooia002 INTO l_ooia002
                 FROM ooia_t
                WHERE ooiaent = g_enterprise
                  AND ooia001 = g_prdp3_d[l_ac].prdq003
               IF l_ooia002 = '40' THEN
                  CALL q_gcaf001_4()
               END IF
               IF l_ooia002 = '60' THEN
                  CALL q_mman001_7()
               END IF
            END IF

            LET g_prdp3_d[l_ac].prdq004  = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_prdp3_d[l_ac].prdq004  TO prdq004         #顯示到畫面上
            CALL aprm211_prdq_desc()
            NEXT FIELD prdq004      ]]>
  </point>
  <point name="input.c.prdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.prdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdl_m.prdl004             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_prdl_m.prdl004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdl_m.prdl004 TO prdl004              #顯示到畫面上
            CALL aprm211_desc()
            NEXT FIELD prdl004                          #返回原欄位

]]>
  </point>
  <point name="input.c.prdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdl_m.prdl005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_prdl_m.prdl005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdl_m.prdl005 TO prdl005              #顯示到畫面上
            CALL aprm211_desc()
            NEXT FIELD prdl005                          #返回原欄位

]]>
  </point>
  <point name="input.c.prdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdl_m.prdl006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '1'
            CALL q_prcf001()                                #呼叫開窗

            LET g_prdl_m.prdl006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdl_m.prdl006 TO prdl006              #顯示到畫面上
            CALL aprm211_desc()
            NEXT FIELD prdl006                          #返回原欄位

]]>
  </point>
  <point name="input.c.prdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prdl_m.prdl007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '1'
            CALL q_prcd001_1()                                #呼叫開窗

            LET g_prdl_m.prdl007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prdl_m.prdl007 TO prdl007              #顯示到畫面上
            CALL aprm211_desc()
            NEXT FIELD prdl007                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_prdl001             LIKE prdl_t.prdl001
   DEFINE  l_n1                  LIKE type_t.num5
   DEFINE  l_ooia002             LIKE ooia_t.ooia002
   DEFINE  l_time                DATETIME YEAR TO SECOND
   DEFINE  l_prdl002             LIKE type_t.num5
   DEFINE  l_prdr004             LIKE prdr_t.prdr004]]>
  </point>
  <point name="input.detail_input.page2.quickly" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               CALL aprt211_02(g_prdl_m.prdadocno,g_prdp2_d[l_ac].prdr002)
#               CALL aprm211_b_fill()
#               EXIT DIALOG]]>
  </point>
  <point name="input.g.prdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL aprm211_set_comp_visible()
#            IF g_prdl_m.prdl010 = 'Y' THEN
#               DELETE FROM prdr_t WHERE prdrent = g_enterprise AND prdgdocno = g_prdl_m.prdadocno
#               CALL aprm211_b_fill()
#            END IF]]>
  </point>
  <point name="input.g.prdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_set_comp_visible()]]>
  </point>
  <point name="input.g.prdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_prdl_m.prdl013 = 'N' THEN
               LET g_prdl_m.prdo005_1 = '00:00:00'
               LET g_prdl_m.prdo006_1 = '23:59:59'
            END IF
            CALL aprm211_set_comp_visible()]]>
  </point>
  <point name="input.g.prdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprm211_set_comp_att_text()]]>
  </point>
  <point name="input.g.prdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL aprm211_set_entry(p_cmd)
#            CALL aprm211_set_no_entry(p_cmd)
#            CALL aprm211_set_comp_visible()
#            IF g_prdl_m.prdl026 <> '4' THEN
#               CALL cl_set_act_visible("object", FALSE)
#               DELETE FROM prdb_t WHERE prdbent = g_enterprise AND prdbdocno = g_prdl_m.prdadocno
#               DELETE FROM prdc_t WHERE prdcent = g_enterprise AND prdcdocno = g_prdl_m.prdadocno
#            ELSE
#               CALL cl_set_act_visible("object", TRUE)
#            END IF]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT aprm211_master_def() THEN
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[              ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT aprm211_master_upd() THEN
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF]]>
  </point>
  <point name="input.master_input.quickly" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL aprt211_02()]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_prdl_m.prdlunit = g_site
      LET g_prdl_m.prdlsite = g_site
      LET g_prdl_m.prdl003 = '1'
      LET g_prdl_m.prdl004 = g_user
      LET g_prdl_m.prdl005 = g_dept
      LET g_prdl_m.prdl002 = 1
      LET g_prdl_m.prdl098 = '1'
      LET g_prdl_m.prdo005_1 = '00:00:00'
      LET g_prdl_m.prdo006_1 = '23:59:59'
      CALL aprm211_desc()
      CALL aprm211_set_comp_visible()
      LET g_prdl_m_t.* = g_prdl_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="menu.object" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prdl_m.prdl001) THEN
                  IF g_prdl_m.prdl026 = '4' THEN
                     CALL aprm211_01(g_prdl_m.prdl001,'N','N')
                  END IF
               END IF
               LET  g_action_choice='']]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                LET g_current_row = g_current_idx
                LET g_curr_diag = ui.DIALOG.getCurrent()
                CALL aprm211_idx_chk()]]>
  </point>
  <point name="menu.release" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_transaction_begin()
               CALL s_aprm211_release_chk(g_prdl_m.prdl001,g_prdl_m.prdlstus) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  CALL cl_err(g_prdl_m.prdl001,g_errno,1)
                  CALL s_transaction_end('N','0')
               ELSE
                  IF NOT cl_ask_confirm('amm-00178') THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                    CALL s_aprm211_release_upd(g_prdl_m.prdl001,g_prdl_m.prdlstus) RETURNING l_success
                    IF NOT l_success THEN
                       CALL s_transaction_end('N','0')
                    END IF
                  END IF
               END IF
               CALL s_transaction_end('Y','0')]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL aprm211_set_entry('a')
   CALL aprm211_set_no_required('a')
   CALL aprm211_set_required('a')
   CALL aprm211_set_no_entry('a')               ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("prdl001",TRUE)
   CALL cl_set_comp_entry("prdb005_1",TRUE)
   CALL cl_set_comp_entry("prdb005_2",TRUE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("prdq004",TRUE)
   CALL cl_set_comp_entry("prdr005",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prdl_m.prdl026 = '1' THEN
      CALL cl_set_comp_entry("prdb005_2",FALSE)
      LET g_prdl_m.prdb005_2 = ''
   END IF
   IF g_prdl_m.prdl026 = '2' THEN
      CALL cl_set_comp_entry("prdb005_1",FALSE)
      LET g_prdl_m.prdb005_1 = ''
   END IF
#   IF NOT cl_null(g_prdl_m.prdl001) AND g_prdl_m.prda000 = 'I' THEN
#      CALL cl_set_comp_entry("prdl001",FALSE)
#   END IF]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooia002       LIKE ooia_t.ooia002]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_ooia002 = ''
   IF NOT cl_null(g_prdp3_d[l_ac].prdq003) THEN
      SELECT ooia002 INTO l_ooia002
        FROM ooia_t
       WHERE ooiaent = g_enterprise
         AND ooia001 = g_prdp3_d[l_ac].prdq003
   END IF
   IF l_ooia002 <> '40' AND l_ooia002 <> '60' THEN
      CALL cl_set_comp_entry("prdq004",FALSE)
      LET g_prdp3_d[l_ac].prdq004 = ""
   END IF    
   IF g_prdp2_d[l_ac].prdr003 <> '4' THEN
      CALL cl_set_comp_entry("prdr005",FALSE)
      LET g_prdp2_d[l_ac].prdr005 = ""
   END IF]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL aprm211_prdp_desc()]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      
      CALL aprm211_prdr_desc()]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL aprm211_prdq_desc()     
]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdlcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prdl_m.prdlcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prdl_m.prdlcnfid_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prdl_m.prdl001
            CALL ap_ref_array2(g_ref_fields," SELECT prdll003 FROM prdll_t WHERE prdllent = '"||g_enterprise||"' AND prdll001 = ? AND prdll002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
            LET g_prdl_m.prdll003 = g_rtn_fields[1] 
            DISPLAY g_prdl_m.prdll003 TO prdll003
   
            CALL aprm211_desc()

            CALL aprm211_master_show()
            CALL aprm211_set_comp_visible()]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   LET l_success = TRUE
#   CALL s_transaction_begin()
#   IF lc_state = 'Y' THEN
#      CALL s_aprt211_conf_chk(g_prdl_m.prdadocno,g_prdl_m.prdlstus) RETURNING l_success,g_errno
#      IF NOT l_success THEN
#         CALL cl_err(g_prdl_m.prdadocno,g_errno,1)
#         CALL s_transaction_end('N','0')
#         RETURN
#      ELSE
#         IF NOT cl_ask_confirm('aim-00108') THEN
#            CALL s_transaction_end('N','0')
#            RETURN
#         ELSE
#            CALL s_aprt211_conf_upd(g_prdl_m.prdadocno,g_prdl_m.prdlstus) RETURNING l_success
#            IF NOT l_success THEN
#               CALL s_transaction_end('N','0')
#               RETURN
#            END IF
#         END IF
#      END IF
#   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_prdl_m.prdlstus <> 'N' THEN
         CALL cl_set_act_visible("invalid", FALSE)
      END IF]]>
  </point>
  <section id="aprm211.b_fill" ver="8" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprm211_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prdp_d.clear()    #g_prdp_d 單頭及單身 
   CALL g_prdp2_d.clear()
   CALL g_prdp3_d.clear()
   CALL g_prdp4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprm211_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prdp002,prdpstus,prdp003,prdp004,prdpsite,prdpunit ,t1.ooefl003 FROM prdp_t", 
             
                  " INNER JOIN prdl_t ON prdl001 = prdp001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prdp004 AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE prdpent=? AND prdp001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prdp_t.prdp002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprm211_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprm211_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prdl_m.prdl001
                                               
      FOREACH b_fill_cs INTO g_prdp_d[l_ac].prdp002,g_prdp_d[l_ac].prdpstus,g_prdp_d[l_ac].prdp003,g_prdp_d[l_ac].prdp004, 
          g_prdp_d[l_ac].prdpsite,g_prdp_d[l_ac].prdpunit,g_prdp_d[l_ac].prdp004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF aprm211_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE prdrstus,prdr002,prdr003,prdr004,prdr005,prdr006,prdr007,prdrsite, 
          prdrunit,prdr010 ,t2.oocql004 ,t3.oocal003 FROM prdr_t",   
                  " INNER JOIN prdl_t ON prdl001 = prdr001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql002=prdr004 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=prdr006 AND t3.oocal002='"||g_dlang||"' ",
 
                  " WHERE prdrent=? AND prdr001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prdr_t.prdr002,prdr_t.prdr003,prdr_t.prdr004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprm211_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR aprm211_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_prdl_m.prdl001
                                               
      FOREACH b_fill_cs2 INTO g_prdp2_d[l_ac].prdrstus,g_prdp2_d[l_ac].prdr002,g_prdp2_d[l_ac].prdr003, 
          g_prdp2_d[l_ac].prdr004,g_prdp2_d[l_ac].prdr005,g_prdp2_d[l_ac].prdr006,g_prdp2_d[l_ac].prdr007, 
          g_prdp2_d[l_ac].prdrsite,g_prdp2_d[l_ac].prdrunit,g_prdp2_d[l_ac].prdr010,g_prdp2_d[l_ac].prdr004_desc, 
          g_prdp2_d[l_ac].prdr006_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF aprm211_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE prdqstus,prdq003,prdq004,prdq002,prdqsite,prdqunit ,t4.ooial003 ,t5.mmanl003 FROM prdq_t", 
             
                  " INNER JOIN prdl_t ON prdl001 = prdq001 ",
 
                  "",
                  
                                 " LEFT JOIN ooial_t t4 ON t4.ooialent='"||g_enterprise||"' AND t4.ooial001=prdq003 AND t4.ooial002='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t5 ON t5.mmanlent='"||g_enterprise||"' AND t5.mmanl001=prdq004 AND t5.mmanl002='"||g_dlang||"' ",
 
                  " WHERE prdqent=? AND prdq001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prdq_t.prdq002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprm211_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR aprm211_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_prdl_m.prdl001
                                               
      FOREACH b_fill_cs3 INTO g_prdp3_d[l_ac].prdqstus,g_prdp3_d[l_ac].prdq003,g_prdp3_d[l_ac].prdq004, 
          g_prdp3_d[l_ac].prdq002,g_prdp3_d[l_ac].prdqsite,g_prdp3_d[l_ac].prdqunit,g_prdp3_d[l_ac].prdq003_desc, 
          g_prdp3_d[l_ac].prdq004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF aprm211_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE prdostus,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prdosite, 
          prdounit  FROM prdo_t",   
                  " INNER JOIN prdl_t ON prdl001 = prdo001 ",
 
                  "",
                  
                  
                  " WHERE prdoent=? AND prdo001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prdo_t.prdo002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprm211_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR aprm211_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_prdl_m.prdl001
                                               
      FOREACH b_fill_cs4 INTO g_prdp4_d[l_ac].prdostus,g_prdp4_d[l_ac].prdo002,g_prdp4_d[l_ac].prdo003, 
          g_prdp4_d[l_ac].prdo004,g_prdp4_d[l_ac].prdo005,g_prdp4_d[l_ac].prdo006,g_prdp4_d[l_ac].prdo007, 
          g_prdp4_d[l_ac].prdo008,g_prdp4_d[l_ac].prdosite,g_prdp4_d[l_ac].prdounit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prdp_d.deleteElement(g_prdp_d.getLength())
   CALL g_prdp2_d.deleteElement(g_prdp2_d.getLength())
   CALL g_prdp3_d.deleteElement(g_prdp3_d.getLength())
   CALL g_prdp4_d.deleteElement(g_prdp4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprm211_pb
   FREE aprm211_pb2
 
   FREE aprm211_pb3
 
   FREE aprm211_pb4
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprm211_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprm211_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.browser_fill" ver="11" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprm211_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prdl_m.* TO NULL
   CALL g_prdp_d.clear()        
   CALL g_prdp2_d.clear() 
   CALL g_prdp3_d.clear() 
   CALL g_prdp4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prdl001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prdl001 ",
                      " FROM prdl_t ",
                      " ",
                      " LEFT JOIN prdp_t ON prdpent = prdlent AND prdl001 = prdp001 ",
                      " LEFT JOIN prdr_t ON prdrent = prdlent AND prdl001 = prdr001", 
 
                      " LEFT JOIN prdq_t ON prdqent = prdlent AND prdl001 = prdq001", 
 
                      " LEFT JOIN prdo_t ON prdoent = prdlent AND prdl001 = prdo001", 
 
 
 
                      " LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE prdlent = '" ||g_enterprise|| "' AND prdpent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prdl_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prdl001 ",
                      " FROM prdl_t ", 
                      "  ",
                      "  LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ",
                      " WHERE prdlent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prdl_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prdlstus,prdlunit,'',prdl001,prdl002,prdl006,'',prdl007,'',prdl027, 
       t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ",
               " FROM prdl_t ",
               "  ",
               "  LEFT JOIN prdp_t ON prdpent = prdlent AND prdl001 = prdp001 ",
               "  LEFT JOIN prdr_t ON prdrent = prdlent AND prdl001 = prdr001",
 
               "  LEFT JOIN prdq_t ON prdqent = prdlent AND prdl001 = prdq001",
 
               "  LEFT JOIN prdo_t ON prdoent = prdlent AND prdl001 = prdo001",
 
 
 
               "  LEFT JOIN prdll_t ON prdl001 = prdll001 AND prdll002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prdlunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prdl006 AND t2.prcfl002='"||g_lang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prdl007 AND t3.prcdl002='"||g_lang||"' ",
 
               " WHERE prdlent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prdl_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prdlunit,g_browser[g_cnt].b_prdlunit_desc, 
       g_browser[g_cnt].b_prdl001,g_browser[g_cnt].b_prdl002,g_browser[g_cnt].b_prdl006,g_browser[g_cnt].b_prdl006_desc, 
       g_browser[g_cnt].b_prdl007,g_browser[g_cnt].b_prdl007_desc,g_browser[g_cnt].b_prdl027,g_browser[g_cnt].b_prdlunit_desc, 
       g_browser[g_cnt].b_prdl006_desc,g_browser[g_cnt].b_prdl007_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprm211_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prdl001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprm211_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.construct" ver="14" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprm211_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prdl_m.* TO NULL
   CALL g_prdp_d.clear()        
   CALL g_prdp2_d.clear() 
   CALL g_prdp3_d.clear() 
   CALL g_prdp4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prdlunit,prdl001,prdl002,prdll003,prdl006,prdl007,prdl027,prdl099,prdl100, 
          prdlstus,prdl010,prdl011,prdl012,prdl013,prdl024,prdl025,prdl026,prdl098,prdl004,prdl005,prdl003, 
          prdl008,prdl009,prdlsite,prdlcrtid,prdlcrtdp,prdlcrtdt,prdlownid,prdlowndp,prdlmodid,prdlmoddt, 
          prdlcnfid,prdlcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prdlcrtdt>>----
         AFTER FIELD prdlcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prdlmoddt>>----
         AFTER FIELD prdlmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prdlcnfdt>>----
         AFTER FIELD prdlcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prdlpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prdlunit
         ON ACTION controlp INFIELD prdlunit
            #add-point:ON ACTION controlp INFIELD prdlunit
            {<point name="construct.c.prdlunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlunit
            #add-point:BEFORE FIELD prdlunit
            {<point name="construct.b.prdlunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlunit
            
            #add-point:AFTER FIELD prdlunit
            {<point name="construct.a.prdlunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl001
         ON ACTION controlp INFIELD prdl001
            #add-point:ON ACTION controlp INFIELD prdl001
            {<point name="construct.c.prdl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl001
            #add-point:BEFORE FIELD prdl001
            {<point name="construct.b.prdl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl001
            
            #add-point:AFTER FIELD prdl001
            {<point name="construct.a.prdl001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl002
            #add-point:BEFORE FIELD prdl002
            {<point name="construct.b.prdl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl002
            
            #add-point:AFTER FIELD prdl002
            {<point name="construct.a.prdl002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl002
         ON ACTION controlp INFIELD prdl002
            #add-point:ON ACTION controlp INFIELD prdl002
            {<point name="construct.c.prdl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdll003
            #add-point:BEFORE FIELD prdll003
            {<point name="construct.b.prdll003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdll003
            
            #add-point:AFTER FIELD prdll003
            {<point name="construct.a.prdll003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdll003
         ON ACTION controlp INFIELD prdll003
            #add-point:ON ACTION controlp INFIELD prdll003
            {<point name="construct.c.prdll003" />}
            #END add-point
 
         #Ctrlp:construct.c.prdl006
         ON ACTION controlp INFIELD prdl006
            #add-point:ON ACTION controlp INFIELD prdl006
            {<point name="construct.c.prdl006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl006
            #add-point:BEFORE FIELD prdl006
            {<point name="construct.b.prdl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl006
            
            #add-point:AFTER FIELD prdl006
            {<point name="construct.a.prdl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl007
         ON ACTION controlp INFIELD prdl007
            #add-point:ON ACTION controlp INFIELD prdl007
            {<point name="construct.c.prdl007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl007
            #add-point:BEFORE FIELD prdl007
            {<point name="construct.b.prdl007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl007
            
            #add-point:AFTER FIELD prdl007
            {<point name="construct.a.prdl007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl027
            #add-point:BEFORE FIELD prdl027
            {<point name="construct.b.prdl027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl027
            
            #add-point:AFTER FIELD prdl027
            {<point name="construct.a.prdl027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl027
         ON ACTION controlp INFIELD prdl027
            #add-point:ON ACTION controlp INFIELD prdl027
            {<point name="construct.c.prdl027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl099
            #add-point:BEFORE FIELD prdl099
            {<point name="construct.b.prdl099" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl099
            
            #add-point:AFTER FIELD prdl099
            {<point name="construct.a.prdl099" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl099
         ON ACTION controlp INFIELD prdl099
            #add-point:ON ACTION controlp INFIELD prdl099
            {<point name="construct.c.prdl099" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl100
            #add-point:BEFORE FIELD prdl100
            {<point name="construct.b.prdl100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl100
            
            #add-point:AFTER FIELD prdl100
            {<point name="construct.a.prdl100" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl100
         ON ACTION controlp INFIELD prdl100
            #add-point:ON ACTION controlp INFIELD prdl100
            {<point name="construct.c.prdl100" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlstus
            #add-point:BEFORE FIELD prdlstus
            {<point name="construct.b.prdlstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlstus
            
            #add-point:AFTER FIELD prdlstus
            {<point name="construct.a.prdlstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdlstus
         ON ACTION controlp INFIELD prdlstus
            #add-point:ON ACTION controlp INFIELD prdlstus
            {<point name="construct.c.prdlstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl010
            #add-point:BEFORE FIELD prdl010
            {<point name="construct.b.prdl010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl010
            
            #add-point:AFTER FIELD prdl010
            {<point name="construct.a.prdl010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl010
         ON ACTION controlp INFIELD prdl010
            #add-point:ON ACTION controlp INFIELD prdl010
            {<point name="construct.c.prdl010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl011
            #add-point:BEFORE FIELD prdl011
            {<point name="construct.b.prdl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl011
            
            #add-point:AFTER FIELD prdl011
            {<point name="construct.a.prdl011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl011
         ON ACTION controlp INFIELD prdl011
            #add-point:ON ACTION controlp INFIELD prdl011
            {<point name="construct.c.prdl011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl012
            #add-point:BEFORE FIELD prdl012
            {<point name="construct.b.prdl012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl012
            
            #add-point:AFTER FIELD prdl012
            {<point name="construct.a.prdl012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl012
         ON ACTION controlp INFIELD prdl012
            #add-point:ON ACTION controlp INFIELD prdl012
            {<point name="construct.c.prdl012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl013
            #add-point:BEFORE FIELD prdl013
            {<point name="construct.b.prdl013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl013
            
            #add-point:AFTER FIELD prdl013
            {<point name="construct.a.prdl013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl013
         ON ACTION controlp INFIELD prdl013
            #add-point:ON ACTION controlp INFIELD prdl013
            {<point name="construct.c.prdl013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl024
            #add-point:BEFORE FIELD prdl024
            {<point name="construct.b.prdl024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl024
            
            #add-point:AFTER FIELD prdl024
            {<point name="construct.a.prdl024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl024
         ON ACTION controlp INFIELD prdl024
            #add-point:ON ACTION controlp INFIELD prdl024
            {<point name="construct.c.prdl024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl025
            #add-point:BEFORE FIELD prdl025
            {<point name="construct.b.prdl025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl025
            
            #add-point:AFTER FIELD prdl025
            {<point name="construct.a.prdl025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl025
         ON ACTION controlp INFIELD prdl025
            #add-point:ON ACTION controlp INFIELD prdl025
            {<point name="construct.c.prdl025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl026
            #add-point:BEFORE FIELD prdl026
            {<point name="construct.b.prdl026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl026
            
            #add-point:AFTER FIELD prdl026
            {<point name="construct.a.prdl026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl026
         ON ACTION controlp INFIELD prdl026
            #add-point:ON ACTION controlp INFIELD prdl026
            {<point name="construct.c.prdl026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl098
            #add-point:BEFORE FIELD prdl098
            {<point name="construct.b.prdl098" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl098
            
            #add-point:AFTER FIELD prdl098
            {<point name="construct.a.prdl098" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl098
         ON ACTION controlp INFIELD prdl098
            #add-point:ON ACTION controlp INFIELD prdl098
            {<point name="construct.c.prdl098" />}
            #END add-point
 
         #Ctrlp:construct.c.prdl004
         ON ACTION controlp INFIELD prdl004
            #add-point:ON ACTION controlp INFIELD prdl004
            {<point name="construct.c.prdl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl004
            #add-point:BEFORE FIELD prdl004
            {<point name="construct.b.prdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl004
            
            #add-point:AFTER FIELD prdl004
            {<point name="construct.a.prdl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl005
         ON ACTION controlp INFIELD prdl005
            #add-point:ON ACTION controlp INFIELD prdl005
            {<point name="construct.c.prdl005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl005
            #add-point:BEFORE FIELD prdl005
            {<point name="construct.b.prdl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl005
            
            #add-point:AFTER FIELD prdl005
            {<point name="construct.a.prdl005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl003
            #add-point:BEFORE FIELD prdl003
            {<point name="construct.b.prdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl003
            
            #add-point:AFTER FIELD prdl003
            {<point name="construct.a.prdl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl003
         ON ACTION controlp INFIELD prdl003
            #add-point:ON ACTION controlp INFIELD prdl003
            {<point name="construct.c.prdl003" />}
            #END add-point
 
         #Ctrlp:construct.c.prdl008
         ON ACTION controlp INFIELD prdl008
            #add-point:ON ACTION controlp INFIELD prdl008
            {<point name="construct.c.prdl008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl008
            #add-point:BEFORE FIELD prdl008
            {<point name="construct.b.prdl008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl008
            
            #add-point:AFTER FIELD prdl008
            {<point name="construct.a.prdl008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdl009
         ON ACTION controlp INFIELD prdl009
            #add-point:ON ACTION controlp INFIELD prdl009
            {<point name="construct.c.prdl009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl009
            #add-point:BEFORE FIELD prdl009
            {<point name="construct.b.prdl009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl009
            
            #add-point:AFTER FIELD prdl009
            {<point name="construct.a.prdl009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlsite
            #add-point:BEFORE FIELD prdlsite
            {<point name="construct.b.prdlsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlsite
            
            #add-point:AFTER FIELD prdlsite
            {<point name="construct.a.prdlsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdlsite
         ON ACTION controlp INFIELD prdlsite
            #add-point:ON ACTION controlp INFIELD prdlsite
            {<point name="construct.c.prdlsite" />}
            #END add-point
 
         #Ctrlp:construct.c.prdlcrtid
         ON ACTION controlp INFIELD prdlcrtid
            #add-point:ON ACTION controlp INFIELD prdlcrtid
            {<point name="construct.c.prdlcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlcrtid
            #add-point:BEFORE FIELD prdlcrtid
            {<point name="construct.b.prdlcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlcrtid
            
            #add-point:AFTER FIELD prdlcrtid
            {<point name="construct.a.prdlcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdlcrtdp
         ON ACTION controlp INFIELD prdlcrtdp
            #add-point:ON ACTION controlp INFIELD prdlcrtdp
            {<point name="construct.c.prdlcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlcrtdp
            #add-point:BEFORE FIELD prdlcrtdp
            {<point name="construct.b.prdlcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlcrtdp
            
            #add-point:AFTER FIELD prdlcrtdp
            {<point name="construct.a.prdlcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlcrtdt
            #add-point:BEFORE FIELD prdlcrtdt
            {<point name="construct.b.prdlcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prdlownid
         ON ACTION controlp INFIELD prdlownid
            #add-point:ON ACTION controlp INFIELD prdlownid
            {<point name="construct.c.prdlownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlownid
            #add-point:BEFORE FIELD prdlownid
            {<point name="construct.b.prdlownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlownid
            
            #add-point:AFTER FIELD prdlownid
            {<point name="construct.a.prdlownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdlowndp
         ON ACTION controlp INFIELD prdlowndp
            #add-point:ON ACTION controlp INFIELD prdlowndp
            {<point name="construct.c.prdlowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlowndp
            #add-point:BEFORE FIELD prdlowndp
            {<point name="construct.b.prdlowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlowndp
            
            #add-point:AFTER FIELD prdlowndp
            {<point name="construct.a.prdlowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prdlmodid
         ON ACTION controlp INFIELD prdlmodid
            #add-point:ON ACTION controlp INFIELD prdlmodid
            {<point name="construct.c.prdlmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlmodid
            #add-point:BEFORE FIELD prdlmodid
            {<point name="construct.b.prdlmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlmodid
            
            #add-point:AFTER FIELD prdlmodid
            {<point name="construct.a.prdlmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlmoddt
            #add-point:BEFORE FIELD prdlmoddt
            {<point name="construct.b.prdlmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prdlcnfid
         ON ACTION controlp INFIELD prdlcnfid
            #add-point:ON ACTION controlp INFIELD prdlcnfid
            {<point name="construct.c.prdlcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlcnfid
            #add-point:BEFORE FIELD prdlcnfid
            {<point name="construct.b.prdlcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlcnfid
            
            #add-point:AFTER FIELD prdlcnfid
            {<point name="construct.a.prdlcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlcnfdt
            #add-point:BEFORE FIELD prdlcnfdt
            {<point name="construct.b.prdlcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prdp002,prdpstus,prdp003,prdp004,prdpsite,prdpunit
           FROM s_detail1[1].prdp002,s_detail1[1].prdpstus,s_detail1[1].prdp003,s_detail1[1].prdp004, 
               s_detail1[1].prdpsite,s_detail1[1].prdpunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<prdpcrtdt>>----
         
         #----<<prdpmoddt>>----
         
         #----<<prdpcnfdt>>----
         
         #----<<prdppstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON prdrstus,prdr002,prdr003,prdr004,prdr005,prdr006,prdr007,prdrsite,prdrunit, 
          prdr010
           FROM s_detail2[1].prdrstus,s_detail2[1].prdr002,s_detail2[1].prdr003,s_detail2[1].prdr004, 
               s_detail2[1].prdr005,s_detail2[1].prdr006,s_detail2[1].prdr007,s_detail2[1].prdrsite, 
               s_detail2[1].prdrunit,s_detail2[1].prdr010
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #此段落由子樣板a11產生
         ##----<<prdrcrtdt>>----
         
         #----<<prdrmoddt>>----
         
         #----<<prdrcnfdt>>----
         
         #----<<prdrpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON prdqstus,prdq003,prdq004,prdq002,prdqsite,prdqunit
           FROM s_detail3[1].prdqstus,s_detail3[1].prdq003,s_detail3[1].prdq004,s_detail3[1].prdq002, 
               s_detail3[1].prdqsite,s_detail3[1].prdqunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       #此段落由子樣板a11產生
         ##----<<prdqcrtdt>>----
         
         #----<<prdqmoddt>>----
         
         #----<<prdqcnfdt>>----
         
         #----<<prdqpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON prdostus,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prdosite, 
          prdounit
           FROM s_detail4[1].prdostus,s_detail4[1].prdo002,s_detail4[1].prdo003,s_detail4[1].prdo004, 
               s_detail4[1].prdo005,s_detail4[1].prdo006,s_detail4[1].prdo007,s_detail4[1].prdo008,s_detail4[1].prdosite, 
               s_detail4[1].prdounit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       #此段落由子樣板a11產生
         ##----<<prdocrtdt>>----
         
         #----<<prdomoddt>>----
         
         #----<<prdocnfdt>>----
         
         #----<<prdopstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.default_search" ver="3" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprm211_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prdl001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.delete" ver="15" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprm211_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prdl_m.prdl001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
   
   LET g_master_multi_table_t.prdll001 = g_prdl_m.prdl001
LET g_master_multi_table_t.prdll003 = g_prdl_m.prdll003
 
 
   CALL aprm211_show()
   
   CALL s_transaction_begin()
 
   OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
   IF STATUS THEN
      CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
      CLOSE aprm211_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prdl_m.prdl001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprm211_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prdl001_t = g_prdl_m.prdl001
 
 
      DELETE FROM prdl_t
       WHERE prdlent = g_enterprise AND prdl001 = g_prdl_m.prdl001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prdl_m.prdl001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prdp_t
       WHERE prdpent = g_enterprise AND prdp001 = g_prdl_m.prdl001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdp_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM prdr_t
       WHERE prdrent = g_enterprise AND
             prdr001 = g_prdl_m.prdl001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdr_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM prdq_t
       WHERE prdqent = g_enterprise AND
             prdq001 = g_prdl_m.prdl001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdq_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM prdo_t
       WHERE prdoent = g_enterprise AND
             prdo001 = g_prdl_m.prdl001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdo_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_prdp_d.clear() 
      CALL g_prdp2_d.clear()       
      CALL g_prdp3_d.clear()       
      CALL g_prdp4_d.clear()       
 
     
      #CALL aprm211_ui_browser_refresh()  
      CALL aprm211_ui_headershow()  
      CALL aprm211_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprm211_browser_fill("")
         CALL aprm211_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprm211_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.prdll001
   LET l_field_keys[01] = 'prdll001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'prdll002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'prdll_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprm211_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prdl_m.prdl001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aprm211.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprm211_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prdp_t
       WHERE prdpent = g_enterprise AND
         prdp001 = ps_keys_bak[1] AND prdp002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM prdr_t
       WHERE prdrent = g_enterprise AND
         prdr001 = ps_keys_bak[1] AND prdr002 = ps_keys_bak[2] AND prdr003 = ps_keys_bak[3] AND prdr004 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdr_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM prdq_t
       WHERE prdqent = g_enterprise AND
         prdq001 = ps_keys_bak[1] AND prdq002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdq_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM prdo_t
       WHERE prdoent = g_enterprise AND
         prdo001 = ps_keys_bak[1] AND prdo002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdo_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.description" ver="91" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000093
#+ 
#+ Filename...: aprm211
#+ Description: 一般促銷規則主檔
#+ Creator....: 02482(2014/03/27)
#+ Modifier...: 02003(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprm211.detail_reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprm211_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prdp_t.*
   DEFINE l_detail2    RECORD LIKE prdr_t.*
 
   DEFINE l_detail3    RECORD LIKE prdq_t.*
 
   DEFINE l_detail4    RECORD LIKE prdo_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprm211_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprm211_detail AS ",
                "SELECT * FROM prdp_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm211_detail SELECT * FROM prdp_t 
                                         WHERE prdpent = g_enterprise AND prdp001 = g_prdl001_t
 
   
   #將key修正為調整後   
   UPDATE aprm211_detail 
      #更新key欄位
      SET prdp001 = g_prdl_m.prdl001
 
      #更新共用欄位
      #此段落由子樣板a13產生
      #, prdpstus = "Y"
 
#此段落由子樣板a13產生
      #, prdrstus = "Y"
 
#此段落由子樣板a13產生
      #, prdqstus = "Y"
 
#此段落由子樣板a13產生
      #, prdostus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO prdp_t SELECT * FROM aprm211_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm211_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprm211_detail AS ",
      "SELECT * FROM prdr_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm211_detail SELECT * FROM prdr_t
                                         WHERE prdrent = g_enterprise AND prdr001 = g_prdl001_t
 
 
   #將key修正為調整後   
   UPDATE aprm211_detail SET prdr001 = g_prdl_m.prdl001
 
  
   #將資料塞回原table   
   INSERT INTO prdr_t SELECT * FROM aprm211_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm211_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprm211_detail AS ",
      "SELECT * FROM prdq_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm211_detail SELECT * FROM prdq_t
                                         WHERE prdqent = g_enterprise AND prdq001 = g_prdl001_t
 
 
   #將key修正為調整後   
   UPDATE aprm211_detail SET prdq001 = g_prdl_m.prdl001
 
  
   #將資料塞回原table   
   INSERT INTO prdq_t SELECT * FROM aprm211_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm211_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprm211_detail AS ",
      "SELECT * FROM prdo_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm211_detail SELECT * FROM prdo_t
                                         WHERE prdoent = g_enterprise AND prdo001 = g_prdl001_t
 
 
   #將key修正為調整後   
   UPDATE aprm211_detail SET prdo001 = g_prdl_m.prdl001
 
  
   #將資料塞回原table   
   INSERT INTO prdo_t SELECT * FROM aprm211_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm211_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prdl001_t = g_prdl_m.prdl001
 
   
   DROP TABLE aprm211_detail
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.detail_show" ver="3" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprm211_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.fetch" ver="7" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprm211_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prdl_m.prdl001 = g_browser[g_current_idx].b_prdl001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prdl_t",SQLCA.sqlcode,1)
      INITIALIZE g_prdl_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprm211_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprm211_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.filter" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprm211_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prdlunit,prdl001,prdl002,prdl006,prdl007,prdl027
                          FROM s_browse[1].b_prdlunit,s_browse[1].b_prdl001,s_browse[1].b_prdl002,s_browse[1].b_prdl006, 
                              s_browse[1].b_prdl007,s_browse[1].b_prdl027
 
         BEFORE CONSTRUCT
               DISPLAY aprm211_filter_parser('prdlunit') TO s_browse[1].b_prdlunit
            DISPLAY aprm211_filter_parser('prdl001') TO s_browse[1].b_prdl001
            DISPLAY aprm211_filter_parser('prdl002') TO s_browse[1].b_prdl002
            DISPLAY aprm211_filter_parser('prdl006') TO s_browse[1].b_prdl006
            DISPLAY aprm211_filter_parser('prdl007') TO s_browse[1].b_prdl007
            DISPLAY aprm211_filter_parser('prdl027') TO s_browse[1].b_prdl027
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprm211_filter_show('prdlunit')
   CALL aprm211_filter_show('prdl001')
   CALL aprm211_filter_show('prdl002')
   CALL aprm211_filter_show('prdl006')
   CALL aprm211_filter_show('prdl007')
   CALL aprm211_filter_show('prdl027')
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprm211_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprm211_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprm211_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.global" ver="18" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prdl_m        RECORD
       prdlunit LIKE prdl_t.prdlunit, 
   prdlunit_desc LIKE type_t.chr80, 
   prdl001 LIKE prdl_t.prdl001, 
   prdl002 LIKE prdl_t.prdl002, 
   prdll003 LIKE prdll_t.prdll003, 
   prdl006 LIKE prdl_t.prdl006, 
   prdl006_desc LIKE type_t.chr80, 
   prdl007 LIKE prdl_t.prdl007, 
   prdl007_desc LIKE type_t.chr80, 
   prdl027 LIKE prdl_t.prdl027, 
   prdl099 LIKE prdl_t.prdl099, 
   prdl100 DATETIME YEAR TO SECOND, 
   prdlstus LIKE prdl_t.prdlstus, 
   prdl010 LIKE prdl_t.prdl010, 
   prdl011 LIKE prdl_t.prdl011, 
   prdl012 LIKE prdl_t.prdl012, 
   prdl013 LIKE prdl_t.prdl013, 
   prdl024 LIKE prdl_t.prdl024, 
   prdl025 LIKE prdl_t.prdl025, 
   prdl026 LIKE prdl_t.prdl026, 
   prdo003_1 LIKE type_t.dat, 
   prdo004_1 LIKE type_t.dat, 
   prdl098 LIKE prdl_t.prdl098, 
   prdl004 LIKE prdl_t.prdl004, 
   prdl004_desc LIKE type_t.chr80, 
   prdl005 LIKE prdl_t.prdl005, 
   prdl005_desc LIKE type_t.chr80, 
   prdb005_1 LIKE type_t.num20_6, 
   prdo005_1 LIKE type_t.chr8, 
   prdo006_1 LIKE type_t.chr8, 
   prdl003 LIKE prdl_t.prdl003, 
   prdl008 LIKE prdl_t.prdl008, 
   prdl008_desc LIKE type_t.chr80, 
   prdl009 LIKE prdl_t.prdl009, 
   prdl009_desc LIKE type_t.chr80, 
   prdb005_2 LIKE type_t.num20_6, 
   prdo007_1 LIKE type_t.chr10, 
   prdo008_1 LIKE type_t.chr1, 
   prdlsite LIKE prdl_t.prdlsite, 
   prdlcrtid LIKE prdl_t.prdlcrtid, 
   prdlcrtid_desc LIKE type_t.chr80, 
   prdlcrtdp LIKE prdl_t.prdlcrtdp, 
   prdlcrtdp_desc LIKE type_t.chr80, 
   prdlcrtdt DATETIME YEAR TO SECOND, 
   prdlownid LIKE prdl_t.prdlownid, 
   prdlownid_desc LIKE type_t.chr80, 
   prdlowndp LIKE prdl_t.prdlowndp, 
   prdlowndp_desc LIKE type_t.chr80, 
   prdlmodid LIKE prdl_t.prdlmodid, 
   prdlmodid_desc LIKE type_t.chr80, 
   prdlmoddt DATETIME YEAR TO SECOND, 
   prdlcnfid LIKE prdl_t.prdlcnfid, 
   prdlcnfid_desc LIKE type_t.chr80, 
   prdlcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prdp_d        RECORD
       prdp002 LIKE prdp_t.prdp002, 
   prdpstus LIKE prdp_t.prdpstus, 
   prdp003 LIKE prdp_t.prdp003, 
   prdp004 LIKE prdp_t.prdp004, 
   prdp004_desc LIKE type_t.chr500, 
   prdpsite LIKE prdp_t.prdpsite, 
   prdpunit LIKE prdp_t.prdpunit
       END RECORD
PRIVATE TYPE type_g_prdp2_d RECORD
       prdrstus LIKE prdr_t.prdrstus, 
   prdr002 LIKE prdr_t.prdr002, 
   prdr003 LIKE prdr_t.prdr003, 
   prdr004 LIKE prdr_t.prdr004, 
   prdr004_desc LIKE type_t.chr500, 
   prdr005 LIKE prdr_t.prdr005, 
   prdr006 LIKE prdr_t.prdr006, 
   prdr006_desc LIKE type_t.chr500, 
   prdr007 LIKE prdr_t.prdr007, 
   prdrsite LIKE prdr_t.prdrsite, 
   prdrunit LIKE prdr_t.prdrunit, 
   prdr010 LIKE prdr_t.prdr010
       END RECORD
PRIVATE TYPE type_g_prdp3_d RECORD
       prdqstus LIKE prdq_t.prdqstus, 
   prdq003 LIKE prdq_t.prdq003, 
   prdq003_desc LIKE type_t.chr500, 
   prdq004 LIKE prdq_t.prdq004, 
   prdq004_desc LIKE type_t.chr500, 
   prdq002 LIKE prdq_t.prdq002, 
   prdqsite LIKE prdq_t.prdqsite, 
   prdqunit LIKE prdq_t.prdqunit
       END RECORD
PRIVATE TYPE type_g_prdp4_d RECORD
       prdostus LIKE prdo_t.prdostus, 
   prdo002 LIKE prdo_t.prdo002, 
   prdo003 LIKE prdo_t.prdo003, 
   prdo004 LIKE prdo_t.prdo004, 
   prdo005 LIKE prdo_t.prdo005, 
   prdo006 LIKE prdo_t.prdo006, 
   prdo007 LIKE prdo_t.prdo007, 
   prdo008 LIKE prdo_t.prdo008, 
   prdosite LIKE prdo_t.prdosite, 
   prdounit LIKE prdo_t.prdounit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prdl_m          type_g_prdl_m
DEFINE g_prdl_m_t        type_g_prdl_m
 
   DEFINE g_prdl001_t LIKE prdl_t.prdl001
 
 
DEFINE g_prdp_d          DYNAMIC ARRAY OF type_g_prdp_d
DEFINE g_prdp_d_t        type_g_prdp_d
DEFINE g_prdp2_d   DYNAMIC ARRAY OF type_g_prdp2_d
DEFINE g_prdp2_d_t type_g_prdp2_d
DEFINE g_prdp3_d   DYNAMIC ARRAY OF type_g_prdp3_d
DEFINE g_prdp3_d_t type_g_prdp3_d
DEFINE g_prdp4_d   DYNAMIC ARRAY OF type_g_prdp4_d
DEFINE g_prdp4_d_t type_g_prdp4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prdlunit LIKE prdl_t.prdlunit,
   b_prdlunit_desc LIKE type_t.chr80,
      b_prdl001 LIKE prdl_t.prdl001,
      b_prdl002 LIKE prdl_t.prdl002,
      b_prdl006 LIKE prdl_t.prdl006,
   b_prdl006_desc LIKE type_t.chr80,
      b_prdl007 LIKE prdl_t.prdl007,
   b_prdl007_desc LIKE type_t.chr80,
      b_prdl027 LIKE prdl_t.prdl027
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prdlunit LIKE prdl_t.prdlunit,
   b_prdlunit_desc LIKE type_t.chr80,
      b_prdl001 LIKE prdl_t.prdl001,
      b_prdl002 LIKE prdl_t.prdl002,
      b_prdl006 LIKE prdl_t.prdl006,
   b_prdl006_desc LIKE type_t.chr80,
      b_prdl007 LIKE prdl_t.prdl007,
   b_prdl007_desc LIKE type_t.chr80,
      b_prdl027 LIKE prdl_t.prdl027
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      prdll001 LIKE prdll_t.prdll001,
      prdll003 LIKE prdll_t.prdll003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprm211.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprm211_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prdp_d.getLength() THEN
         LET g_detail_idx = g_prdp_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prdp_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prdp_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_prdp2_d.getLength() THEN
         LET g_detail_idx = g_prdp2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prdp2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prdp2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_prdp3_d.getLength() THEN
         LET g_detail_idx = g_prdp3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prdp3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prdp3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_prdp4_d.getLength() THEN
         LET g_detail_idx = g_prdp4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prdp4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prdp4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.init" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprm211_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prdlstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('prdl024','6564') 
   CALL cl_set_combo_scc('prdl025','6565') 
   CALL cl_set_combo_scc('prdl026','6566') 
   CALL cl_set_combo_scc('prdp003','6560') 
   CALL cl_set_combo_scc('prdr003','6517') 
   CALL cl_set_combo_scc('prdo007','6520') 
   CALL cl_set_combo_scc('prdo008','30') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprm211_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprm211.input" ver="10" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprm211_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prdp002,prdpstus,prdp003,prdp004,prdpsite,prdpunit FROM prdp_t WHERE prdpent=?  
       AND prdp001=? AND prdp002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprm211_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT prdrstus,prdr002,prdr003,prdr004,prdr005,prdr006,prdr007,prdrsite,prdrunit, 
       prdr010 FROM prdr_t WHERE prdrent=? AND prdr001=? AND prdr002=? AND prdr003=? AND prdr004=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprm211_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT prdqstus,prdq003,prdq004,prdq002,prdqsite,prdqunit FROM prdq_t WHERE prdqent=?  
       AND prdq001=? AND prdq002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprm211_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT prdostus,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prdosite, 
       prdounit FROM prdo_t WHERE prdoent=? AND prdo001=? AND prdo002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprm211_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprm211_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprm211_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002,g_prdl_m.prdll003,g_prdl_m.prdl006, 
       g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus,g_prdl_m.prdl010, 
       g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025,g_prdl_m.prdl026, 
       g_prdl_m.prdo003_1,g_prdl_m.prdo004_1,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdb005_1, 
       g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdl003,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdb005_2, 
       g_prdl_m.prdo007_1,g_prdl_m.prdo008_1,g_prdl_m.prdlsite
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="aprm211.input.body" ver="12" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prdp_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prdp_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprm211_b_fill()
            LET g_rec_b = g_prdp_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
            IF STATUS THEN
               CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
               CLOSE aprm211_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prdp_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prdp_d[l_ac].prdp002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prdp_d_t.* = g_prdp_d[l_ac].*  #BACKUP
               CALL aprm211_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprm211_set_no_entry_b(l_cmd)
               IF NOT aprm211_lock_b("prdp_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm211_bcl INTO g_prdp_d[l_ac].prdp002,g_prdp_d[l_ac].prdpstus,g_prdp_d[l_ac].prdp003, 
                      g_prdp_d[l_ac].prdp004,g_prdp_d[l_ac].prdpsite,g_prdp_d[l_ac].prdpunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prdp_d_t.prdp002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprm211_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prdp_d[l_ac].* TO NULL 
            
            LET g_prdp_d_t.* = g_prdp_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm211_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprm211_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prdp_d[li_reproduce_target].* = g_prdp_d[li_reproduce].*
 
               LET g_prdp_d[li_reproduce_target].prdp002 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_prdp_d[l_ac].prdpstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prdp_t 
             WHERE prdpent = g_enterprise AND prdp001 = g_prdl_m.prdl001
 
               AND prdp002 = g_prdp_d[l_ac].prdp002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp_d[g_detail_idx].prdp002
               CALL aprm211_insert_b('prdp_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prdp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prdp_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm211_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prdp_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prdp_d.deleteElement(l_ac)
               NEXT FIELD prdp002
            END IF
         
            IF g_prdp_d[l_ac].prdp002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prdp_t
                WHERE prdpent = g_enterprise AND prdp001 = g_prdl_m.prdl001 AND
 
                      prdp002 = g_prdp_d_t.prdp002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prdp_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm211_bcl
               LET l_count = g_prdp_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp_d[g_detail_idx].prdp002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprm211_delete_b('prdp_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD prdp002
            #add-point:BEFORE FIELD prdp002
            {<point name="input.b.page1.prdp002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdp002
            
            #add-point:AFTER FIELD prdp002
            {<point name="input.a.page1.prdp002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdp002
            #add-point:ON CHANGE prdp002
            {<point name="input.g.page1.prdp002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdpstus
            #add-point:BEFORE FIELD prdpstus
            {<point name="input.b.page1.prdpstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdpstus
            
            #add-point:AFTER FIELD prdpstus
            {<point name="input.a.page1.prdpstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdpstus
            #add-point:ON CHANGE prdpstus
            {<point name="input.g.page1.prdpstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdp003
            #add-point:BEFORE FIELD prdp003
            {<point name="input.b.page1.prdp003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdp003
            
            #add-point:AFTER FIELD prdp003
            {<point name="input.a.page1.prdp003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdp003
            #add-point:ON CHANGE prdp003
            {<point name="input.g.page1.prdp003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdp004
            
            #add-point:AFTER FIELD prdp004
            {<point name="input.a.page1.prdp004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdp004
            #add-point:BEFORE FIELD prdp004
            {<point name="input.b.page1.prdp004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdp004
            #add-point:ON CHANGE prdp004
            {<point name="input.g.page1.prdp004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdpsite
            #add-point:BEFORE FIELD prdpsite
            {<point name="input.b.page1.prdpsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdpsite
            
            #add-point:AFTER FIELD prdpsite
            {<point name="input.a.page1.prdpsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdpsite
            #add-point:ON CHANGE prdpsite
            {<point name="input.g.page1.prdpsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdpunit
            #add-point:BEFORE FIELD prdpunit
            {<point name="input.b.page1.prdpunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdpunit
            
            #add-point:AFTER FIELD prdpunit
            {<point name="input.a.page1.prdpunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdpunit
            #add-point:ON CHANGE prdpunit
            {<point name="input.g.page1.prdpunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prdp002
         ON ACTION controlp INFIELD prdp002
            #add-point:ON ACTION controlp INFIELD prdp002
            {<point name="input.c.page1.prdp002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prdpstus
         ON ACTION controlp INFIELD prdpstus
            #add-point:ON ACTION controlp INFIELD prdpstus
            {<point name="input.c.page1.prdpstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prdp003
         ON ACTION controlp INFIELD prdp003
            #add-point:ON ACTION controlp INFIELD prdp003
            {<point name="input.c.page1.prdp003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prdp004
         ON ACTION controlp INFIELD prdp004
            #add-point:ON ACTION controlp INFIELD prdp004
            {<point name="input.c.page1.prdp004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prdpsite
         ON ACTION controlp INFIELD prdpsite
            #add-point:ON ACTION controlp INFIELD prdpsite
            {<point name="input.c.page1.prdpsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prdpunit
         ON ACTION controlp INFIELD prdpunit
            #add-point:ON ACTION controlp INFIELD prdpunit
            {<point name="input.c.page1.prdpunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prdp_d[l_ac].* = g_prdp_d_t.*
               CLOSE aprm211_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prdp_d[l_ac].prdp002,-263,1)
               LET g_prdp_d[l_ac].* = g_prdp_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
 
      
               UPDATE prdp_t SET (prdp001,prdp002,prdpstus,prdp003,prdp004,prdpsite,prdpunit) = (g_prdl_m.prdl001, 
                   g_prdp_d[l_ac].prdp002,g_prdp_d[l_ac].prdpstus,g_prdp_d[l_ac].prdp003,g_prdp_d[l_ac].prdp004, 
                   g_prdp_d[l_ac].prdpsite,g_prdp_d[l_ac].prdpunit)
                WHERE prdpent = g_enterprise AND prdp001 = g_prdl_m.prdl001 
 
                  AND prdp002 = g_prdp_d_t.prdp002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prdp_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prdp_d[l_ac].* = g_prdp_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prdp_t",SQLCA.sqlcode,1)
                     LET g_prdp_d[l_ac].* = g_prdp_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys_bak[1] = g_prdl001_t
               LET gs_keys[2] = g_prdp_d[g_detail_idx].prdp002
               LET gs_keys_bak[2] = g_prdp_d_t.prdp002
               CALL aprm211_update_b('prdp_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp_d_t)
               LET g_log2 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprm211_unlock_b("prdp_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prdp_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prdp_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_prdp2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prdp2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprm211_b_fill()
            LET g_rec_b = g_prdp2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prdp2_d[l_ac].* TO NULL 
                  LET g_prdp2_d[l_ac].prdr003 = "4"
 
            LET g_prdp2_d_t.* = g_prdp2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm211_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprm211_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prdp2_d[li_reproduce_target].* = g_prdp2_d[li_reproduce].*
 
               LET g_prdp2_d[li_reproduce_target].prdr002 = NULL
               LET g_prdp2_d[li_reproduce_target].prdr003 = NULL
               LET g_prdp2_d[li_reproduce_target].prdr004 = NULL
            END IF
            #公用欄位給值(單身2)
            #此段落由子樣板a14產生    
      LET g_prdp2_d[l_ac].prdrstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
            IF STATUS THEN
               CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
               CLOSE aprm211_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prdp2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prdp2_d[l_ac].prdr002 IS NOT NULL
               AND g_prdp2_d[l_ac].prdr003 IS NOT NULL
               AND g_prdp2_d[l_ac].prdr004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prdp2_d_t.* = g_prdp2_d[l_ac].*  #BACKUP
               CALL aprm211_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aprm211_set_no_entry_b(l_cmd)
               IF NOT aprm211_lock_b("prdr_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm211_bcl2 INTO g_prdp2_d[l_ac].prdrstus,g_prdp2_d[l_ac].prdr002,g_prdp2_d[l_ac].prdr003, 
                      g_prdp2_d[l_ac].prdr004,g_prdp2_d[l_ac].prdr005,g_prdp2_d[l_ac].prdr006,g_prdp2_d[l_ac].prdr007, 
                      g_prdp2_d[l_ac].prdrsite,g_prdp2_d[l_ac].prdrunit,g_prdp2_d[l_ac].prdr010
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprm211_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prdp2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prdp2_d.deleteElement(l_ac)
               NEXT FIELD prdr002
            END IF
         
            IF g_prdp2_d[l_ac].prdr002 IS NOT NULL
               AND g_prdp2_d_t.prdr003 IS NOT NULL
               AND g_prdp2_d_t.prdr004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM prdr_t
                WHERE prdrent = g_enterprise AND prdr001 = g_prdl_m.prdl001 AND
                      prdr002 = g_prdp2_d_t.prdr002
                  AND prdr003 = g_prdp2_d_t.prdr003
                  AND prdr004 = g_prdp2_d_t.prdr004
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prdp_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm211_bcl
               LET l_count = g_prdp_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp2_d[g_detail_idx].prdr002
               LET gs_keys[3] = g_prdp2_d[g_detail_idx].prdr003
               LET gs_keys[4] = g_prdp2_d[g_detail_idx].prdr004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL aprm211_delete_b('prdr_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prdr_t 
             WHERE prdrent = g_enterprise AND prdr001 = g_prdl_m.prdl001
               AND prdr002 = g_prdp2_d[l_ac].prdr002
               AND prdr003 = g_prdp2_d[l_ac].prdr003
               AND prdr004 = g_prdp2_d[l_ac].prdr004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp2_d[g_detail_idx].prdr002
               LET gs_keys[3] = g_prdp2_d[g_detail_idx].prdr003
               LET gs_keys[4] = g_prdp2_d[g_detail_idx].prdr004
               CALL aprm211_insert_b('prdr_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prdp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prdr_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm211_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prdp2_d[l_ac].* = g_prdp2_d_t.*
               CLOSE aprm211_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prdp2_d[l_ac].* = g_prdp2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
 
               
               UPDATE prdr_t SET (prdr001,prdrstus,prdr002,prdr003,prdr004,prdr005,prdr006,prdr007,prdrsite, 
                   prdrunit,prdr010) = (g_prdl_m.prdl001,g_prdp2_d[l_ac].prdrstus,g_prdp2_d[l_ac].prdr002, 
                   g_prdp2_d[l_ac].prdr003,g_prdp2_d[l_ac].prdr004,g_prdp2_d[l_ac].prdr005,g_prdp2_d[l_ac].prdr006, 
                   g_prdp2_d[l_ac].prdr007,g_prdp2_d[l_ac].prdrsite,g_prdp2_d[l_ac].prdrunit,g_prdp2_d[l_ac].prdr010)  
                   #自訂欄位頁簽
                WHERE prdrent = g_enterprise AND prdr001 = g_prdl_m.prdl001
                  AND prdr002 = g_prdp2_d_t.prdr002 #項次 
                  AND prdr003 = g_prdp2_d_t.prdr003
                  AND prdr004 = g_prdp2_d_t.prdr004
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prdr_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prdp2_d[l_ac].* = g_prdp2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prdr_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prdp2_d[l_ac].* = g_prdp2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys_bak[1] = g_prdl001_t
               LET gs_keys[2] = g_prdp2_d[g_detail_idx].prdr002
               LET gs_keys_bak[2] = g_prdp2_d_t.prdr002
               LET gs_keys[3] = g_prdp2_d[g_detail_idx].prdr003
               LET gs_keys_bak[3] = g_prdp2_d_t.prdr003
               LET gs_keys[4] = g_prdp2_d[g_detail_idx].prdr004
               LET gs_keys_bak[4] = g_prdp2_d_t.prdr004
               CALL aprm211_update_b('prdr_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp2_d_t)
               LET g_log2 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD prdrstus
            #add-point:BEFORE FIELD prdrstus
            {<point name="input.b.page2.prdrstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdrstus
            
            #add-point:AFTER FIELD prdrstus
            {<point name="input.a.page2.prdrstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdrstus
            #add-point:ON CHANGE prdrstus
            {<point name="input.g.page2.prdrstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prdp2_d[l_ac].prdr002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD prdr002
            END IF
 
 
            #add-point:AFTER FIELD prdr002
            {<point name="input.a.page2.prdr002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr002
            #add-point:BEFORE FIELD prdr002
            {<point name="input.b.page2.prdr002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdr002
            #add-point:ON CHANGE prdr002
            {<point name="input.g.page2.prdr002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr003
            #add-point:BEFORE FIELD prdr003
            {<point name="input.b.page2.prdr003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr003
            
            #add-point:AFTER FIELD prdr003
            {<point name="input.a.page2.prdr003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdr003
            #add-point:ON CHANGE prdr003
            {<point name="input.g.page2.prdr003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr004
            
            #add-point:AFTER FIELD prdr004
            {<point name="input.a.page2.prdr004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr004
            #add-point:BEFORE FIELD prdr004
            {<point name="input.b.page2.prdr004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdr004
            #add-point:ON CHANGE prdr004
            {<point name="input.g.page2.prdr004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr005
            #add-point:BEFORE FIELD prdr005
            {<point name="input.b.page2.prdr005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr005
            
            #add-point:AFTER FIELD prdr005
            {<point name="input.a.page2.prdr005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdr005
            #add-point:ON CHANGE prdr005
            {<point name="input.g.page2.prdr005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr006
            
            #add-point:AFTER FIELD prdr006
            {<point name="input.a.page2.prdr006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr006
            #add-point:BEFORE FIELD prdr006
            {<point name="input.b.page2.prdr006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdr006
            #add-point:ON CHANGE prdr006
            {<point name="input.g.page2.prdr006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr007
            #add-point:BEFORE FIELD prdr007
            {<point name="input.b.page2.prdr007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr007
            
            #add-point:AFTER FIELD prdr007
            {<point name="input.a.page2.prdr007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdr007
            #add-point:ON CHANGE prdr007
            {<point name="input.g.page2.prdr007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdrsite
            #add-point:BEFORE FIELD prdrsite
            {<point name="input.b.page2.prdrsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdrsite
            
            #add-point:AFTER FIELD prdrsite
            {<point name="input.a.page2.prdrsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdrsite
            #add-point:ON CHANGE prdrsite
            {<point name="input.g.page2.prdrsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdrunit
            #add-point:BEFORE FIELD prdrunit
            {<point name="input.b.page2.prdrunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdrunit
            
            #add-point:AFTER FIELD prdrunit
            {<point name="input.a.page2.prdrunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdrunit
            #add-point:ON CHANGE prdrunit
            {<point name="input.g.page2.prdrunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdr010
            #add-point:BEFORE FIELD prdr010
            {<point name="input.b.page2.prdr010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdr010
            
            #add-point:AFTER FIELD prdr010
            {<point name="input.a.page2.prdr010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdr010
            #add-point:ON CHANGE prdr010
            {<point name="input.g.page2.prdr010" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.prdrstus
         ON ACTION controlp INFIELD prdrstus
            #add-point:ON ACTION controlp INFIELD prdrstus
            {<point name="input.c.page2.prdrstus" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr002
         ON ACTION controlp INFIELD prdr002
            #add-point:ON ACTION controlp INFIELD prdr002
            {<point name="input.c.page2.prdr002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr003
         ON ACTION controlp INFIELD prdr003
            #add-point:ON ACTION controlp INFIELD prdr003
            {<point name="input.c.page2.prdr003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr004
         ON ACTION controlp INFIELD prdr004
            #add-point:ON ACTION controlp INFIELD prdr004
            {<point name="input.c.page2.prdr004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr005
         ON ACTION controlp INFIELD prdr005
            #add-point:ON ACTION controlp INFIELD prdr005
            {<point name="input.c.page2.prdr005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr006
         ON ACTION controlp INFIELD prdr006
            #add-point:ON ACTION controlp INFIELD prdr006
            {<point name="input.c.page2.prdr006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr007
         ON ACTION controlp INFIELD prdr007
            #add-point:ON ACTION controlp INFIELD prdr007
            {<point name="input.c.page2.prdr007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdrsite
         ON ACTION controlp INFIELD prdrsite
            #add-point:ON ACTION controlp INFIELD prdrsite
            {<point name="input.c.page2.prdrsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdrunit
         ON ACTION controlp INFIELD prdrunit
            #add-point:ON ACTION controlp INFIELD prdrunit
            {<point name="input.c.page2.prdrunit" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prdr010
         ON ACTION controlp INFIELD prdr010
            #add-point:ON ACTION controlp INFIELD prdr010
            {<point name="input.c.page2.prdr010" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prdp2_d[l_ac].* = g_prdp2_d_t.*
               END IF
               CLOSE aprm211_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aprm211_unlock_b("prdr_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_prdp2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prdp2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_prdp3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prdp3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprm211_b_fill()
            LET g_rec_b = g_prdp3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prdp3_d[l_ac].* TO NULL 
            
            LET g_prdp3_d_t.* = g_prdp3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm211_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprm211_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prdp3_d[li_reproduce_target].* = g_prdp3_d[li_reproduce].*
 
               LET g_prdp3_d[li_reproduce_target].prdq002 = NULL
            END IF
            #公用欄位給值(單身3)
            #此段落由子樣板a14產生    
      LET g_prdp3_d[l_ac].prdqstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
            IF STATUS THEN
               CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
               CLOSE aprm211_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prdp3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prdp3_d[l_ac].prdq002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prdp3_d_t.* = g_prdp3_d[l_ac].*  #BACKUP
               CALL aprm211_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL aprm211_set_no_entry_b(l_cmd)
               IF NOT aprm211_lock_b("prdq_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm211_bcl3 INTO g_prdp3_d[l_ac].prdqstus,g_prdp3_d[l_ac].prdq003,g_prdp3_d[l_ac].prdq004, 
                      g_prdp3_d[l_ac].prdq002,g_prdp3_d[l_ac].prdqsite,g_prdp3_d[l_ac].prdqunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprm211_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prdp3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prdp3_d.deleteElement(l_ac)
               NEXT FIELD prdq002
            END IF
         
            IF g_prdp3_d[l_ac].prdq002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM prdq_t
                WHERE prdqent = g_enterprise AND prdq001 = g_prdl_m.prdl001 AND
                      prdq002 = g_prdp3_d_t.prdq002
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prdp_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm211_bcl
               LET l_count = g_prdp_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp3_d[g_detail_idx].prdq002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL aprm211_delete_b('prdq_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prdq_t 
             WHERE prdqent = g_enterprise AND prdq001 = g_prdl_m.prdl001
               AND prdq002 = g_prdp3_d[l_ac].prdq002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp3_d[g_detail_idx].prdq002
               CALL aprm211_insert_b('prdq_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prdp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prdq_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm211_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prdp3_d[l_ac].* = g_prdp3_d_t.*
               CLOSE aprm211_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prdp3_d[l_ac].* = g_prdp3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
 
               
               UPDATE prdq_t SET (prdq001,prdqstus,prdq003,prdq004,prdq002,prdqsite,prdqunit) = (g_prdl_m.prdl001, 
                   g_prdp3_d[l_ac].prdqstus,g_prdp3_d[l_ac].prdq003,g_prdp3_d[l_ac].prdq004,g_prdp3_d[l_ac].prdq002, 
                   g_prdp3_d[l_ac].prdqsite,g_prdp3_d[l_ac].prdqunit) #自訂欄位頁簽
                WHERE prdqent = g_enterprise AND prdq001 = g_prdl_m.prdl001
                  AND prdq002 = g_prdp3_d_t.prdq002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prdq_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prdp3_d[l_ac].* = g_prdp3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prdq_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prdp3_d[l_ac].* = g_prdp3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys_bak[1] = g_prdl001_t
               LET gs_keys[2] = g_prdp3_d[g_detail_idx].prdq002
               LET gs_keys_bak[2] = g_prdp3_d_t.prdq002
               CALL aprm211_update_b('prdq_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp3_d_t)
               LET g_log2 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD prdqstus
            #add-point:BEFORE FIELD prdqstus
            {<point name="input.b.page3.prdqstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdqstus
            
            #add-point:AFTER FIELD prdqstus
            {<point name="input.a.page3.prdqstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdqstus
            #add-point:ON CHANGE prdqstus
            {<point name="input.g.page3.prdqstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdq003
            
            #add-point:AFTER FIELD prdq003
            {<point name="input.a.page3.prdq003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdq003
            #add-point:BEFORE FIELD prdq003
            {<point name="input.b.page3.prdq003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdq003
            #add-point:ON CHANGE prdq003
            {<point name="input.g.page3.prdq003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdq004
            
            #add-point:AFTER FIELD prdq004
            {<point name="input.a.page3.prdq004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdq004
            #add-point:BEFORE FIELD prdq004
            {<point name="input.b.page3.prdq004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdq004
            #add-point:ON CHANGE prdq004
            {<point name="input.g.page3.prdq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdq002
            #add-point:BEFORE FIELD prdq002
            {<point name="input.b.page3.prdq002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdq002
            
            #add-point:AFTER FIELD prdq002
            {<point name="input.a.page3.prdq002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdq002
            #add-point:ON CHANGE prdq002
            {<point name="input.g.page3.prdq002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdqsite
            #add-point:BEFORE FIELD prdqsite
            {<point name="input.b.page3.prdqsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdqsite
            
            #add-point:AFTER FIELD prdqsite
            {<point name="input.a.page3.prdqsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdqsite
            #add-point:ON CHANGE prdqsite
            {<point name="input.g.page3.prdqsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdqunit
            #add-point:BEFORE FIELD prdqunit
            {<point name="input.b.page3.prdqunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdqunit
            
            #add-point:AFTER FIELD prdqunit
            {<point name="input.a.page3.prdqunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdqunit
            #add-point:ON CHANGE prdqunit
            {<point name="input.g.page3.prdqunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.prdqstus
         ON ACTION controlp INFIELD prdqstus
            #add-point:ON ACTION controlp INFIELD prdqstus
            {<point name="input.c.page3.prdqstus" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prdq003
         ON ACTION controlp INFIELD prdq003
            #add-point:ON ACTION controlp INFIELD prdq003
            {<point name="input.c.page3.prdq003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prdq004
         ON ACTION controlp INFIELD prdq004
            #add-point:ON ACTION controlp INFIELD prdq004
            {<point name="input.c.page3.prdq004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prdq002
         ON ACTION controlp INFIELD prdq002
            #add-point:ON ACTION controlp INFIELD prdq002
            {<point name="input.c.page3.prdq002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prdqsite
         ON ACTION controlp INFIELD prdqsite
            #add-point:ON ACTION controlp INFIELD prdqsite
            {<point name="input.c.page3.prdqsite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prdqunit
         ON ACTION controlp INFIELD prdqunit
            #add-point:ON ACTION controlp INFIELD prdqunit
            {<point name="input.c.page3.prdqunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prdp3_d[l_ac].* = g_prdp3_d_t.*
               END IF
               CLOSE aprm211_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aprm211_unlock_b("prdq_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_prdp3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prdp3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_prdp4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prdp4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprm211_b_fill()
            LET g_rec_b = g_prdp4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prdp4_d[l_ac].* TO NULL 
            
            LET g_prdp4_d_t.* = g_prdp4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm211_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprm211_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prdp4_d[li_reproduce_target].* = g_prdp4_d[li_reproduce].*
 
               LET g_prdp4_d[li_reproduce_target].prdo002 = NULL
            END IF
            #公用欄位給值(單身4)
            #此段落由子樣板a14產生    
      LET g_prdp4_d[l_ac].prdostus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
            IF STATUS THEN
               CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
               CLOSE aprm211_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prdp4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prdp4_d[l_ac].prdo002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prdp4_d_t.* = g_prdp4_d[l_ac].*  #BACKUP
               CALL aprm211_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL aprm211_set_no_entry_b(l_cmd)
               IF NOT aprm211_lock_b("prdo_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm211_bcl4 INTO g_prdp4_d[l_ac].prdostus,g_prdp4_d[l_ac].prdo002,g_prdp4_d[l_ac].prdo003, 
                      g_prdp4_d[l_ac].prdo004,g_prdp4_d[l_ac].prdo005,g_prdp4_d[l_ac].prdo006,g_prdp4_d[l_ac].prdo007, 
                      g_prdp4_d[l_ac].prdo008,g_prdp4_d[l_ac].prdosite,g_prdp4_d[l_ac].prdounit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprm211_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prdp4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prdp4_d.deleteElement(l_ac)
               NEXT FIELD prdo002
            END IF
         
            IF g_prdp4_d[l_ac].prdo002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM prdo_t
                WHERE prdoent = g_enterprise AND prdo001 = g_prdl_m.prdl001 AND
                      prdo002 = g_prdp4_d_t.prdo002
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prdp_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm211_bcl
               LET l_count = g_prdp_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp4_d[g_detail_idx].prdo002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL aprm211_delete_b('prdo_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prdo_t 
             WHERE prdoent = g_enterprise AND prdo001 = g_prdl_m.prdl001
               AND prdo002 = g_prdp4_d[l_ac].prdo002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys[2] = g_prdp4_d[g_detail_idx].prdo002
               CALL aprm211_insert_b('prdo_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prdp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prdo_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm211_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prdp4_d[l_ac].* = g_prdp4_d_t.*
               CLOSE aprm211_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prdp4_d[l_ac].* = g_prdp4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
 
               
               UPDATE prdo_t SET (prdo001,prdostus,prdo002,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008, 
                   prdosite,prdounit) = (g_prdl_m.prdl001,g_prdp4_d[l_ac].prdostus,g_prdp4_d[l_ac].prdo002, 
                   g_prdp4_d[l_ac].prdo003,g_prdp4_d[l_ac].prdo004,g_prdp4_d[l_ac].prdo005,g_prdp4_d[l_ac].prdo006, 
                   g_prdp4_d[l_ac].prdo007,g_prdp4_d[l_ac].prdo008,g_prdp4_d[l_ac].prdosite,g_prdp4_d[l_ac].prdounit)  
                   #自訂欄位頁簽
                WHERE prdoent = g_enterprise AND prdo001 = g_prdl_m.prdl001
                  AND prdo002 = g_prdp4_d_t.prdo002 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prdo_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prdp4_d[l_ac].* = g_prdp4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prdo_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prdp4_d[l_ac].* = g_prdp4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prdl_m.prdl001
               LET gs_keys_bak[1] = g_prdl001_t
               LET gs_keys[2] = g_prdp4_d[g_detail_idx].prdo002
               LET gs_keys_bak[2] = g_prdp4_d_t.prdo002
               CALL aprm211_update_b('prdo_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp4_d_t)
               LET g_log2 = util.JSON.stringify(g_prdl_m),util.JSON.stringify(g_prdp4_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD prdostus
            #add-point:BEFORE FIELD prdostus
            {<point name="input.b.page4.prdostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdostus
            
            #add-point:AFTER FIELD prdostus
            {<point name="input.a.page4.prdostus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdostus
            #add-point:ON CHANGE prdostus
            {<point name="input.g.page4.prdostus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo002
            #add-point:BEFORE FIELD prdo002
            {<point name="input.b.page4.prdo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo002
            
            #add-point:AFTER FIELD prdo002
            {<point name="input.a.page4.prdo002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo002
            #add-point:ON CHANGE prdo002
            {<point name="input.g.page4.prdo002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo003
            #add-point:BEFORE FIELD prdo003
            {<point name="input.b.page4.prdo003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo003
            
            #add-point:AFTER FIELD prdo003
            {<point name="input.a.page4.prdo003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo003
            #add-point:ON CHANGE prdo003
            {<point name="input.g.page4.prdo003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo004
            #add-point:BEFORE FIELD prdo004
            {<point name="input.b.page4.prdo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo004
            
            #add-point:AFTER FIELD prdo004
            {<point name="input.a.page4.prdo004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo004
            #add-point:ON CHANGE prdo004
            {<point name="input.g.page4.prdo004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo005
            #add-point:BEFORE FIELD prdo005
            {<point name="input.b.page4.prdo005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo005
            
            #add-point:AFTER FIELD prdo005
            {<point name="input.a.page4.prdo005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo005
            #add-point:ON CHANGE prdo005
            {<point name="input.g.page4.prdo005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo006
            #add-point:BEFORE FIELD prdo006
            {<point name="input.b.page4.prdo006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo006
            
            #add-point:AFTER FIELD prdo006
            {<point name="input.a.page4.prdo006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo006
            #add-point:ON CHANGE prdo006
            {<point name="input.g.page4.prdo006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo007
            #add-point:BEFORE FIELD prdo007
            {<point name="input.b.page4.prdo007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo007
            
            #add-point:AFTER FIELD prdo007
            {<point name="input.a.page4.prdo007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo007
            #add-point:ON CHANGE prdo007
            {<point name="input.g.page4.prdo007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo008
            #add-point:BEFORE FIELD prdo008
            {<point name="input.b.page4.prdo008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo008
            
            #add-point:AFTER FIELD prdo008
            {<point name="input.a.page4.prdo008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo008
            #add-point:ON CHANGE prdo008
            {<point name="input.g.page4.prdo008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdosite
            #add-point:BEFORE FIELD prdosite
            {<point name="input.b.page4.prdosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdosite
            
            #add-point:AFTER FIELD prdosite
            {<point name="input.a.page4.prdosite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdosite
            #add-point:ON CHANGE prdosite
            {<point name="input.g.page4.prdosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdounit
            #add-point:BEFORE FIELD prdounit
            {<point name="input.b.page4.prdounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdounit
            
            #add-point:AFTER FIELD prdounit
            {<point name="input.a.page4.prdounit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdounit
            #add-point:ON CHANGE prdounit
            {<point name="input.g.page4.prdounit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.prdostus
         ON ACTION controlp INFIELD prdostus
            #add-point:ON ACTION controlp INFIELD prdostus
            {<point name="input.c.page4.prdostus" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo002
         ON ACTION controlp INFIELD prdo002
            #add-point:ON ACTION controlp INFIELD prdo002
            {<point name="input.c.page4.prdo002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo003
         ON ACTION controlp INFIELD prdo003
            #add-point:ON ACTION controlp INFIELD prdo003
            {<point name="input.c.page4.prdo003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo004
         ON ACTION controlp INFIELD prdo004
            #add-point:ON ACTION controlp INFIELD prdo004
            {<point name="input.c.page4.prdo004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo005
         ON ACTION controlp INFIELD prdo005
            #add-point:ON ACTION controlp INFIELD prdo005
            {<point name="input.c.page4.prdo005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo006
         ON ACTION controlp INFIELD prdo006
            #add-point:ON ACTION controlp INFIELD prdo006
            {<point name="input.c.page4.prdo006" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo007
         ON ACTION controlp INFIELD prdo007
            #add-point:ON ACTION controlp INFIELD prdo007
            {<point name="input.c.page4.prdo007" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdo008
         ON ACTION controlp INFIELD prdo008
            #add-point:ON ACTION controlp INFIELD prdo008
            {<point name="input.c.page4.prdo008" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdosite
         ON ACTION controlp INFIELD prdosite
            #add-point:ON ACTION controlp INFIELD prdosite
            {<point name="input.c.page4.prdosite" />}
            #END add-point
 
         #Ctrlp:input.c.page4.prdounit
         ON ACTION controlp INFIELD prdounit
            #add-point:ON ACTION controlp INFIELD prdounit
            {<point name="input.c.page4.prdounit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prdp4_d[l_ac].* = g_prdp4_d_t.*
               END IF
               CLOSE aprm211_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aprm211_unlock_b("prdo_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_prdp4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prdp4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="aprm211.input.head" ver="13" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002,g_prdl_m.prdll003,g_prdl_m.prdl006, 
          g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus,g_prdl_m.prdl010, 
          g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025,g_prdl_m.prdl026, 
          g_prdl_m.prdo003_1,g_prdl_m.prdo004_1,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdb005_1, 
          g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdl003,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdb005_2, 
          g_prdl_m.prdo007_1,g_prdl_m.prdo008_1,g_prdl_m.prdlsite 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.prdll001 = g_prdl_m.prdl001
LET g_master_multi_table_t.prdll003 = g_prdl_m.prdll003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.prdll001 = ''
LET g_master_multi_table_t.prdll003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prdlunit
            
            #add-point:AFTER FIELD prdlunit
            {<point name="input.a.prdlunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlunit
            #add-point:BEFORE FIELD prdlunit
            {<point name="input.b.prdlunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdlunit
            #add-point:ON CHANGE prdlunit
            {<point name="input.g.prdlunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl001
            #add-point:BEFORE FIELD prdl001
            {<point name="input.b.prdl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl001
            
            #add-point:AFTER FIELD prdl001
            {<point name="input.a.prdl001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl001
            #add-point:ON CHANGE prdl001
            {<point name="input.g.prdl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl002
            #add-point:BEFORE FIELD prdl002
            {<point name="input.b.prdl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl002
            
            #add-point:AFTER FIELD prdl002
            {<point name="input.a.prdl002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl002
            #add-point:ON CHANGE prdl002
            {<point name="input.g.prdl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdll003
            #add-point:BEFORE FIELD prdll003
            {<point name="input.b.prdll003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdll003
            
            #add-point:AFTER FIELD prdll003
            {<point name="input.a.prdll003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdll003
            #add-point:ON CHANGE prdll003
            {<point name="input.g.prdll003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl006
            
            #add-point:AFTER FIELD prdl006
            {<point name="input.a.prdl006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl006
            #add-point:BEFORE FIELD prdl006
            {<point name="input.b.prdl006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl006
            #add-point:ON CHANGE prdl006
            {<point name="input.g.prdl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl007
            
            #add-point:AFTER FIELD prdl007
            {<point name="input.a.prdl007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl007
            #add-point:BEFORE FIELD prdl007
            {<point name="input.b.prdl007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl007
            #add-point:ON CHANGE prdl007
            {<point name="input.g.prdl007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl027
            #add-point:BEFORE FIELD prdl027
            {<point name="input.b.prdl027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl027
            
            #add-point:AFTER FIELD prdl027
            {<point name="input.a.prdl027" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl027
            #add-point:ON CHANGE prdl027
            {<point name="input.g.prdl027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl099
            #add-point:BEFORE FIELD prdl099
            {<point name="input.b.prdl099" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl099
            
            #add-point:AFTER FIELD prdl099
            {<point name="input.a.prdl099" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl099
            #add-point:ON CHANGE prdl099
            {<point name="input.g.prdl099" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl100
            #add-point:BEFORE FIELD prdl100
            {<point name="input.b.prdl100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl100
            
            #add-point:AFTER FIELD prdl100
            {<point name="input.a.prdl100" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl100
            #add-point:ON CHANGE prdl100
            {<point name="input.g.prdl100" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlstus
            #add-point:BEFORE FIELD prdlstus
            {<point name="input.b.prdlstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlstus
            
            #add-point:AFTER FIELD prdlstus
            {<point name="input.a.prdlstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdlstus
            #add-point:ON CHANGE prdlstus
            {<point name="input.g.prdlstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl010
            #add-point:BEFORE FIELD prdl010
            {<point name="input.b.prdl010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl010
            
            #add-point:AFTER FIELD prdl010
            {<point name="input.a.prdl010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl010
            #add-point:ON CHANGE prdl010
            {<point name="input.g.prdl010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl011
            #add-point:BEFORE FIELD prdl011
            {<point name="input.b.prdl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl011
            
            #add-point:AFTER FIELD prdl011
            {<point name="input.a.prdl011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl011
            #add-point:ON CHANGE prdl011
            {<point name="input.g.prdl011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl012
            #add-point:BEFORE FIELD prdl012
            {<point name="input.b.prdl012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl012
            
            #add-point:AFTER FIELD prdl012
            {<point name="input.a.prdl012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl012
            #add-point:ON CHANGE prdl012
            {<point name="input.g.prdl012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl013
            #add-point:BEFORE FIELD prdl013
            {<point name="input.b.prdl013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl013
            
            #add-point:AFTER FIELD prdl013
            {<point name="input.a.prdl013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl013
            #add-point:ON CHANGE prdl013
            {<point name="input.g.prdl013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl024
            #add-point:BEFORE FIELD prdl024
            {<point name="input.b.prdl024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl024
            
            #add-point:AFTER FIELD prdl024
            {<point name="input.a.prdl024" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl024
            #add-point:ON CHANGE prdl024
            {<point name="input.g.prdl024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl025
            #add-point:BEFORE FIELD prdl025
            {<point name="input.b.prdl025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl025
            
            #add-point:AFTER FIELD prdl025
            {<point name="input.a.prdl025" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl025
            #add-point:ON CHANGE prdl025
            {<point name="input.g.prdl025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl026
            #add-point:BEFORE FIELD prdl026
            {<point name="input.b.prdl026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl026
            
            #add-point:AFTER FIELD prdl026
            {<point name="input.a.prdl026" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl026
            #add-point:ON CHANGE prdl026
            {<point name="input.g.prdl026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo003_1
            #add-point:BEFORE FIELD prdo003_1
            {<point name="input.b.prdo003_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo003_1
            
            #add-point:AFTER FIELD prdo003_1
            {<point name="input.a.prdo003_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo003_1
            #add-point:ON CHANGE prdo003_1
            {<point name="input.g.prdo003_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo004_1
            #add-point:BEFORE FIELD prdo004_1
            {<point name="input.b.prdo004_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo004_1
            
            #add-point:AFTER FIELD prdo004_1
            {<point name="input.a.prdo004_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo004_1
            #add-point:ON CHANGE prdo004_1
            {<point name="input.g.prdo004_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl098
            #add-point:BEFORE FIELD prdl098
            {<point name="input.b.prdl098" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl098
            
            #add-point:AFTER FIELD prdl098
            {<point name="input.a.prdl098" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl098
            #add-point:ON CHANGE prdl098
            {<point name="input.g.prdl098" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl004
            
            #add-point:AFTER FIELD prdl004
            {<point name="input.a.prdl004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl004
            #add-point:BEFORE FIELD prdl004
            {<point name="input.b.prdl004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl004
            #add-point:ON CHANGE prdl004
            {<point name="input.g.prdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl005
            
            #add-point:AFTER FIELD prdl005
            {<point name="input.a.prdl005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl005
            #add-point:BEFORE FIELD prdl005
            {<point name="input.b.prdl005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl005
            #add-point:ON CHANGE prdl005
            {<point name="input.g.prdl005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdb005_1
            #add-point:BEFORE FIELD prdb005_1
            {<point name="input.b.prdb005_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdb005_1
            
            #add-point:AFTER FIELD prdb005_1
            {<point name="input.a.prdb005_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdb005_1
            #add-point:ON CHANGE prdb005_1
            {<point name="input.g.prdb005_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo005_1
            #add-point:BEFORE FIELD prdo005_1
            {<point name="input.b.prdo005_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo005_1
            
            #add-point:AFTER FIELD prdo005_1
            {<point name="input.a.prdo005_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo005_1
            #add-point:ON CHANGE prdo005_1
            {<point name="input.g.prdo005_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo006_1
            #add-point:BEFORE FIELD prdo006_1
            {<point name="input.b.prdo006_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo006_1
            
            #add-point:AFTER FIELD prdo006_1
            {<point name="input.a.prdo006_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo006_1
            #add-point:ON CHANGE prdo006_1
            {<point name="input.g.prdo006_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl003
            #add-point:BEFORE FIELD prdl003
            {<point name="input.b.prdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl003
            
            #add-point:AFTER FIELD prdl003
            {<point name="input.a.prdl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdl003
            #add-point:ON CHANGE prdl003
            {<point name="input.g.prdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl008
            
            #add-point:AFTER FIELD prdl008
            {<point name="input.a.prdl008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl008
            #add-point:BEFORE FIELD prdl008
            {<point name="input.b.prdl008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl008
            #add-point:ON CHANGE prdl008
            {<point name="input.g.prdl008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdl009
            
            #add-point:AFTER FIELD prdl009
            {<point name="input.a.prdl009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdl009
            #add-point:BEFORE FIELD prdl009
            {<point name="input.b.prdl009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prdl009
            #add-point:ON CHANGE prdl009
            {<point name="input.g.prdl009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdb005_2
            #add-point:BEFORE FIELD prdb005_2
            {<point name="input.b.prdb005_2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdb005_2
            
            #add-point:AFTER FIELD prdb005_2
            {<point name="input.a.prdb005_2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdb005_2
            #add-point:ON CHANGE prdb005_2
            {<point name="input.g.prdb005_2" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo007_1
            #add-point:BEFORE FIELD prdo007_1
            {<point name="input.b.prdo007_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo007_1
            
            #add-point:AFTER FIELD prdo007_1
            {<point name="input.a.prdo007_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo007_1
            #add-point:ON CHANGE prdo007_1
            {<point name="input.g.prdo007_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdo008_1
            #add-point:BEFORE FIELD prdo008_1
            {<point name="input.b.prdo008_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdo008_1
            
            #add-point:AFTER FIELD prdo008_1
            {<point name="input.a.prdo008_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdo008_1
            #add-point:ON CHANGE prdo008_1
            {<point name="input.g.prdo008_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prdlsite
            #add-point:BEFORE FIELD prdlsite
            {<point name="input.b.prdlsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prdlsite
            
            #add-point:AFTER FIELD prdlsite
            {<point name="input.a.prdlsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prdlsite
            #add-point:ON CHANGE prdlsite
            {<point name="input.g.prdlsite" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prdlunit
         ON ACTION controlp INFIELD prdlunit
            #add-point:ON ACTION controlp INFIELD prdlunit
            {<point name="input.c.prdlunit" />}
            #END add-point
 
         #Ctrlp:input.c.prdl001
         ON ACTION controlp INFIELD prdl001
            #add-point:ON ACTION controlp INFIELD prdl001
            {<point name="input.c.prdl001" />}
            #END add-point
 
         #Ctrlp:input.c.prdl002
         ON ACTION controlp INFIELD prdl002
            #add-point:ON ACTION controlp INFIELD prdl002
            {<point name="input.c.prdl002" />}
            #END add-point
 
         #Ctrlp:input.c.prdll003
         ON ACTION controlp INFIELD prdll003
            #add-point:ON ACTION controlp INFIELD prdll003
            {<point name="input.c.prdll003" />}
            #END add-point
 
         #Ctrlp:input.c.prdl006
         ON ACTION controlp INFIELD prdl006
            #add-point:ON ACTION controlp INFIELD prdl006
            {<point name="input.c.prdl006" />}
            #END add-point
 
         #Ctrlp:input.c.prdl007
         ON ACTION controlp INFIELD prdl007
            #add-point:ON ACTION controlp INFIELD prdl007
            {<point name="input.c.prdl007" />}
            #END add-point
 
         #Ctrlp:input.c.prdl027
         ON ACTION controlp INFIELD prdl027
            #add-point:ON ACTION controlp INFIELD prdl027
            {<point name="input.c.prdl027" />}
            #END add-point
 
         #Ctrlp:input.c.prdl099
         ON ACTION controlp INFIELD prdl099
            #add-point:ON ACTION controlp INFIELD prdl099
            {<point name="input.c.prdl099" />}
            #END add-point
 
         #Ctrlp:input.c.prdl100
         ON ACTION controlp INFIELD prdl100
            #add-point:ON ACTION controlp INFIELD prdl100
            {<point name="input.c.prdl100" />}
            #END add-point
 
         #Ctrlp:input.c.prdlstus
         ON ACTION controlp INFIELD prdlstus
            #add-point:ON ACTION controlp INFIELD prdlstus
            {<point name="input.c.prdlstus" />}
            #END add-point
 
         #Ctrlp:input.c.prdl010
         ON ACTION controlp INFIELD prdl010
            #add-point:ON ACTION controlp INFIELD prdl010
            {<point name="input.c.prdl010" />}
            #END add-point
 
         #Ctrlp:input.c.prdl011
         ON ACTION controlp INFIELD prdl011
            #add-point:ON ACTION controlp INFIELD prdl011
            {<point name="input.c.prdl011" />}
            #END add-point
 
         #Ctrlp:input.c.prdl012
         ON ACTION controlp INFIELD prdl012
            #add-point:ON ACTION controlp INFIELD prdl012
            {<point name="input.c.prdl012" />}
            #END add-point
 
         #Ctrlp:input.c.prdl013
         ON ACTION controlp INFIELD prdl013
            #add-point:ON ACTION controlp INFIELD prdl013
            {<point name="input.c.prdl013" />}
            #END add-point
 
         #Ctrlp:input.c.prdl024
         ON ACTION controlp INFIELD prdl024
            #add-point:ON ACTION controlp INFIELD prdl024
            {<point name="input.c.prdl024" />}
            #END add-point
 
         #Ctrlp:input.c.prdl025
         ON ACTION controlp INFIELD prdl025
            #add-point:ON ACTION controlp INFIELD prdl025
            {<point name="input.c.prdl025" />}
            #END add-point
 
         #Ctrlp:input.c.prdl026
         ON ACTION controlp INFIELD prdl026
            #add-point:ON ACTION controlp INFIELD prdl026
            {<point name="input.c.prdl026" />}
            #END add-point
 
         #Ctrlp:input.c.prdo003_1
         ON ACTION controlp INFIELD prdo003_1
            #add-point:ON ACTION controlp INFIELD prdo003_1
            {<point name="input.c.prdo003_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdo004_1
         ON ACTION controlp INFIELD prdo004_1
            #add-point:ON ACTION controlp INFIELD prdo004_1
            {<point name="input.c.prdo004_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdl098
         ON ACTION controlp INFIELD prdl098
            #add-point:ON ACTION controlp INFIELD prdl098
            {<point name="input.c.prdl098" />}
            #END add-point
 
         #Ctrlp:input.c.prdl004
         ON ACTION controlp INFIELD prdl004
            #add-point:ON ACTION controlp INFIELD prdl004
            {<point name="input.c.prdl004" />}
            #END add-point
 
         #Ctrlp:input.c.prdl005
         ON ACTION controlp INFIELD prdl005
            #add-point:ON ACTION controlp INFIELD prdl005
            {<point name="input.c.prdl005" />}
            #END add-point
 
         #Ctrlp:input.c.prdb005_1
         ON ACTION controlp INFIELD prdb005_1
            #add-point:ON ACTION controlp INFIELD prdb005_1
            {<point name="input.c.prdb005_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdo005_1
         ON ACTION controlp INFIELD prdo005_1
            #add-point:ON ACTION controlp INFIELD prdo005_1
            {<point name="input.c.prdo005_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdo006_1
         ON ACTION controlp INFIELD prdo006_1
            #add-point:ON ACTION controlp INFIELD prdo006_1
            {<point name="input.c.prdo006_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdl003
         ON ACTION controlp INFIELD prdl003
            #add-point:ON ACTION controlp INFIELD prdl003
            {<point name="input.c.prdl003" />}
            #END add-point
 
         #Ctrlp:input.c.prdl008
         ON ACTION controlp INFIELD prdl008
            #add-point:ON ACTION controlp INFIELD prdl008
            {<point name="input.c.prdl008" />}
            #END add-point
 
         #Ctrlp:input.c.prdl009
         ON ACTION controlp INFIELD prdl009
            #add-point:ON ACTION controlp INFIELD prdl009
            {<point name="input.c.prdl009" />}
            #END add-point
 
         #Ctrlp:input.c.prdb005_2
         ON ACTION controlp INFIELD prdb005_2
            #add-point:ON ACTION controlp INFIELD prdb005_2
            {<point name="input.c.prdb005_2" />}
            #END add-point
 
         #Ctrlp:input.c.prdo007_1
         ON ACTION controlp INFIELD prdo007_1
            #add-point:ON ACTION controlp INFIELD prdo007_1
            {<point name="input.c.prdo007_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdo008_1
         ON ACTION controlp INFIELD prdo008_1
            #add-point:ON ACTION controlp INFIELD prdo008_1
            {<point name="input.c.prdo008_1" />}
            #END add-point
 
         #Ctrlp:input.c.prdlsite
         ON ACTION controlp INFIELD prdlsite
            #add-point:ON ACTION controlp INFIELD prdlsite
            {<point name="input.c.prdlsite" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prdl_m.prdl001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prdl_t (prdlent,prdlunit,prdl001,prdl002,prdl006,prdl007,prdl027,prdl099, 
                   prdl100,prdlstus,prdl010,prdl011,prdl012,prdl013,prdl024,prdl025,prdl026,prdl098, 
                   prdl004,prdl005,prdl003,prdl008,prdl009,prdlsite,prdlcrtid,prdlcrtdp,prdlcrtdt,prdlownid, 
                   prdlowndp,prdlcnfid,prdlcnfdt)
               VALUES (g_enterprise,g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002,g_prdl_m.prdl006, 
                   g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
                   g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024, 
                   g_prdl_m.prdl025,g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005, 
                   g_prdl_m.prdl003,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid, 
                   g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid,g_prdl_m.prdlowndp,g_prdl_m.prdlcnfid, 
                   g_prdl_m.prdlcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prdl_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prdl_m.prdl001 = g_master_multi_table_t.prdll001 AND
         g_prdl_m.prdll003 = g_master_multi_table_t.prdll003  THEN
         ELSE 
            LET l_var_keys[01] = g_prdl_m.prdl001
            LET l_field_keys[01] = 'prdll001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prdll001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prdll002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prdl_m.prdll003
            LET l_fields[01] = 'prdll003'
            LET l_vars[02] = g_site 
            LET l_fields[02] = 'prdllsite'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prdllent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prdll_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprm211_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prdl_t SET (prdlunit,prdl001,prdl002,prdl006,prdl007,prdl027,prdl099,prdl100,prdlstus, 
                   prdl010,prdl011,prdl012,prdl013,prdl024,prdl025,prdl026,prdl098,prdl004,prdl005,prdl003, 
                   prdl008,prdl009,prdlsite,prdlcrtid,prdlcrtdp,prdlcrtdt,prdlownid,prdlowndp,prdlcnfid, 
                   prdlcnfdt) = (g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002,g_prdl_m.prdl006, 
                   g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
                   g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024, 
                   g_prdl_m.prdl025,g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005, 
                   g_prdl_m.prdl003,g_prdl_m.prdl008,g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid, 
                   g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid,g_prdl_m.prdlowndp,g_prdl_m.prdlcnfid, 
                   g_prdl_m.prdlcnfdt)
                WHERE prdlent = g_enterprise AND prdl001 = g_prdl001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prdl_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prdl_m.prdl001 = g_master_multi_table_t.prdll001 AND
         g_prdl_m.prdll003 = g_master_multi_table_t.prdll003  THEN
         ELSE 
            LET l_var_keys[01] = g_prdl_m.prdl001
            LET l_field_keys[01] = 'prdll001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prdll001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prdll002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prdl_m.prdll003
            LET l_fields[01] = 'prdll003'
            LET l_vars[02] = g_site 
            LET l_fields[02] = 'prdllsite'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prdllent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prdll_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_prdl_m_t)
               LET g_log2 = util.JSON.stringify(g_prdl_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prdl001_t = g_prdl_m.prdl001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="aprm211.input.other" ver="7" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prdl001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prdp002
               WHEN "s_detail2"
                  NEXT FIELD prdrstus
               WHEN "s_detail3"
                  NEXT FIELD prdqstus
               WHEN "s_detail4"
                  NEXT FIELD prdostus
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.insert" ver="6" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprm211_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prdp_d.clear()   
   CALL g_prdp2_d.clear()  
   CALL g_prdp3_d.clear()  
   CALL g_prdp4_d.clear()  
 
 
   INITIALIZE g_prdl_m.* LIKE prdl_t.*             #DEFAULT 設定
   
   LET g_prdl001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prdl_m.prdlownid = g_user
      LET g_prdl_m.prdlowndp = g_dept
      LET g_prdl_m.prdlcrtid = g_user
      LET g_prdl_m.prdlcrtdp = g_dept 
      LET g_prdl_m.prdlcrtdt = cl_get_current()
      LET g_prdl_m.prdlmodid = ""
      LET g_prdl_m.prdlmoddt = ""
      LET g_prdl_m.prdlstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prdl_m.prdlstus = "N"
      LET g_prdl_m.prdl010 = "N"
      LET g_prdl_m.prdl011 = "N"
      LET g_prdl_m.prdl012 = "N"
      LET g_prdl_m.prdl013 = "N"
      LET g_prdl_m.prdl024 = "2"
      LET g_prdl_m.prdl025 = "1"
      LET g_prdl_m.prdl026 = "3"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprm211_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prdl_m.* = g_prdl_m_t.*
         CALL aprm211_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prdp_d.clear()
      CALL g_prdp2_d.clear()
      CALL g_prdp3_d.clear()
      CALL g_prdp4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prdl001_t = g_prdl_m.prdl001
 
   
   LET g_wc = g_wc,  
              " OR ( prdlent = '" ||g_enterprise|| "' AND",
              " prdl001 = '", g_prdl_m.prdl001 CLIPPED, "' "
 
              , ") "
   
   CLOSE aprm211_cl
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.insert_b" ver="4" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprm211_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prdp_t
                  (prdpent,
                   prdp001,
                   prdp002
                   ,prdpstus,prdp003,prdp004,prdpsite,prdpunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prdp_d[g_detail_idx].prdpstus,g_prdp_d[g_detail_idx].prdp003,g_prdp_d[g_detail_idx].prdp004, 
                       g_prdp_d[g_detail_idx].prdpsite,g_prdp_d[g_detail_idx].prdpunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdp_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO prdr_t
                  (prdrent,
                   prdr001,
                   prdr002,prdr003,prdr004
                   ,prdrstus,prdr005,prdr006,prdr007,prdrsite,prdrunit,prdr010) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_prdp2_d[g_detail_idx].prdrstus,g_prdp2_d[g_detail_idx].prdr005,g_prdp2_d[g_detail_idx].prdr006, 
                       g_prdp2_d[g_detail_idx].prdr007,g_prdp2_d[g_detail_idx].prdrsite,g_prdp2_d[g_detail_idx].prdrunit, 
                       g_prdp2_d[g_detail_idx].prdr010)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdr_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO prdq_t
                  (prdqent,
                   prdq001,
                   prdq002
                   ,prdqstus,prdq003,prdq004,prdqsite,prdqunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prdp3_d[g_detail_idx].prdqstus,g_prdp3_d[g_detail_idx].prdq003,g_prdp3_d[g_detail_idx].prdq004, 
                       g_prdp3_d[g_detail_idx].prdqsite,g_prdp3_d[g_detail_idx].prdqunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdq_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO prdo_t
                  (prdoent,
                   prdo001,
                   prdo002
                   ,prdostus,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prdosite,prdounit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prdp4_d[g_detail_idx].prdostus,g_prdp4_d[g_detail_idx].prdo003,g_prdp4_d[g_detail_idx].prdo004, 
                       g_prdp4_d[g_detail_idx].prdo005,g_prdp4_d[g_detail_idx].prdo006,g_prdp4_d[g_detail_idx].prdo007, 
                       g_prdp4_d[g_detail_idx].prdo008,g_prdp4_d[g_detail_idx].prdosite,g_prdp4_d[g_detail_idx].prdounit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prdo_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprm211_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprm211_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prdp_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprm211_bcl USING g_enterprise,
                                       g_prdl_m.prdl001,g_prdp_d[g_detail_idx].prdp002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm211_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "prdr_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm211_bcl2 USING g_enterprise,
                                             g_prdl_m.prdl001,g_prdp2_d[g_detail_idx].prdr002,g_prdp2_d[g_detail_idx].prdr003, 
                                                 g_prdp2_d[g_detail_idx].prdr004
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm211_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "prdq_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm211_bcl3 USING g_enterprise,
                                             g_prdl_m.prdl001,g_prdp3_d[g_detail_idx].prdq002
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm211_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "prdo_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm211_bcl4 USING g_enterprise,
                                             g_prdl_m.prdl001,g_prdp4_d[g_detail_idx].prdo002
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm211_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.main" ver="11" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prdlunit,'',prdl001,prdl002,'',prdl006,'',prdl007,'',prdl027,prdl099, 
       prdl100,prdlstus,prdl010,prdl011,prdl012,prdl013,prdl024,prdl025,prdl026,'','',prdl098,prdl004, 
       '',prdl005,'','','','',prdl003,prdl008,'',prdl009,'','','','',prdlsite,prdlcrtid,'',prdlcrtdp, 
       '',prdlcrtdt,prdlownid,'',prdlowndp,'',prdlmodid,'',prdlmoddt,prdlcnfid,'',prdlcnfdt", 
                      " FROM prdl_t",
                      " WHERE prdlent= ? AND prdl001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprm211_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prdlunit,prdl001,prdl002,prdl006,prdl007,prdl027,prdl099,prdl100,prdlstus, 
       prdl010,prdl011,prdl012,prdl013,prdl024,prdl025,prdl026,prdl098,prdl004,prdl005,prdl003,prdl008, 
       prdl009,prdlsite,prdlcrtid,prdlcrtdp,prdlcrtdt,prdlownid,prdlowndp,prdlmodid,prdlmoddt,prdlcnfid, 
       prdlcnfdt,t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oocql004 ,t7.oocql004 , 
       t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.ooefl003 ,t12.oofa011 ,t13.oofa011",
               " FROM prdl_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prdlunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prdl006 AND t2.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prdl007 AND t3.prcdl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prdl004  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prdl005 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='2100' AND t6.oocql002=prdl008 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='2101' AND t7.oocql002=prdl009 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prdlcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prdlcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prdlownid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=prdlowndp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t12 ON t12.oofaent='"||g_enterprise||"' AND t12.oofa002='2' AND t12.oofa003=prdlmodid  ",
               " LEFT JOIN oofa_t t13 ON t13.oofaent='"||g_enterprise||"' AND t13.oofa002='2' AND t13.oofa003=prdlcnfid  ",
 
               " WHERE prdlent = '" ||g_enterprise|| "' AND prdl001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprm211_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprm211 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprm211_init()   
 
      #進入選單 Menu (="N")
      CALL aprm211_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprm211
      
   END IF 
   
   CLOSE aprm211_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aprm211.modify" ver="14" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprm211_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prdl_m.prdl001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
 
   ERROR ""
  
   LET g_prdl001_t = g_prdl_m.prdl001
 
   CALL s_transaction_begin()
   
   OPEN aprm211_cl USING g_enterprise,g_prdl_m.prdl001
   IF STATUS THEN
      CALL cl_err("OPEN aprm211_cl:", STATUS, 1)
      CLOSE aprm211_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prdl_m.prdl001,SQLCA.sqlcode,0)
      CLOSE aprm211_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprm211_show()
   WHILE TRUE
      LET g_prdl001_t = g_prdl_m.prdl001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prdl_m.prdlmodid = g_user 
LET g_prdl_m.prdlmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprm211_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prdl_m.* = g_prdl_m_t.*
         CALL aprm211_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prdl_t SET (prdlmodid,prdlmoddt) = (g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt)
       WHERE prdlent = g_enterprise AND prdl001 = g_prdl001_t
 
                  
      #若單頭key欄位有變更
      IF g_prdl_m.prdl001 != g_prdl001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prdp_t SET prdp001 = g_prdl_m.prdl001
 
          WHERE prdpent = g_enterprise AND prdp001 = g_prdl001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prdp_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prdp_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE prdr_t
            SET prdr001 = g_prdl_m.prdl001
 
          WHERE prdrent = g_enterprise AND
                prdr001 = g_prdl001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prdr_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prdr_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE prdq_t
            SET prdq001 = g_prdl_m.prdl001
 
          WHERE prdqent = g_enterprise AND
                prdq001 = g_prdl001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prdq_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prdq_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE prdo_t
            SET prdo001 = g_prdl_m.prdl001
 
          WHERE prdoent = g_enterprise AND
                prdo001 = g_prdl001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prdo_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prdo_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prdl_m.prdl001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprm211_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prdl_m.prdl001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aprm211.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprm211.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aprm211.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprm211_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prdp_d.clear()
   CALL g_prdp2_d.clear()
   CALL g_prdp3_d.clear()
   CALL g_prdp4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprm211_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprm211_browser_fill("")
      CALL aprm211_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprm211_filter_show('prdlunit')
   CALL aprm211_filter_show('prdl001')
   CALL aprm211_filter_show('prdl002')
   CALL aprm211_filter_show('prdl006')
   CALL aprm211_filter_show('prdl007')
   CALL aprm211_filter_show('prdl027')
   CALL aprm211_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprm211_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.reproduce" ver="6" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprm211_reproduce()
   DEFINE l_newno     LIKE prdl_t.prdl001 
   DEFINE l_oldno     LIKE prdl_t.prdl001 
 
   DEFINE l_master    RECORD LIKE prdl_t.*
   DEFINE l_detail    RECORD LIKE prdp_t.*
   DEFINE l_detail2    RECORD LIKE prdr_t.*
 
   DEFINE l_detail3    RECORD LIKE prdq_t.*
 
   DEFINE l_detail4    RECORD LIKE prdo_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prdl_m.prdl001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prdl001_t = g_prdl_m.prdl001
 
    
   LET g_prdl_m.prdl001 = ""
 
    
   CALL aprm211_set_entry('a')
   CALL aprm211_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prdl_m.prdlownid = g_user
      LET g_prdl_m.prdlowndp = g_dept
      LET g_prdl_m.prdlcrtid = g_user
      LET g_prdl_m.prdlcrtdp = g_dept 
      LET g_prdl_m.prdlcrtdt = cl_get_current()
      LET g_prdl_m.prdlmodid = ""
      LET g_prdl_m.prdlmoddt = ""
      LET g_prdl_m.prdlstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprm211_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prdl001 = '", g_prdl_m.prdl001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprm211_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prdl001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprm211_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprm211.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprm211_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prdl001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprm211_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprm211.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprm211_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prdl_m.prdl001
   LET g_pk_array[1].column = 'prdl001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprm211.show" ver="13" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprm211_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prdl_m_t.* = g_prdl_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprm211_b_fill() #單身填充
      CALL aprm211_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prdl_m.prdlownid_desc = cl_get_username(g_prdl_m.prdlownid)
      #LET g_prdl_m.prdlowndp_desc = cl_get_deptname(g_prdl_m.prdlowndp)
      #LET g_prdl_m.prdlcrtid_desc = cl_get_username(g_prdl_m.prdlcrtid)
      #LET g_prdl_m.prdlcrtdp_desc = cl_get_deptname(g_prdl_m.prdlcrtdp)
      #LET g_prdl_m.prdlmodid_desc = cl_get_username(g_prdl_m.prdlmodid)
      #LET g_prdl_m.prdlcnfid_desc = cl_get_deptname(g_prdl_m.prdlcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprm211_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prdl_m.prdlunit,g_prdl_m.prdlunit_desc,g_prdl_m.prdl001,g_prdl_m.prdl002,g_prdl_m.prdll003, 
       g_prdl_m.prdl006,g_prdl_m.prdl006_desc,g_prdl_m.prdl007,g_prdl_m.prdl007_desc,g_prdl_m.prdl027, 
       g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus,g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012, 
       g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025,g_prdl_m.prdl026,g_prdl_m.prdo003_1,g_prdl_m.prdo004_1, 
       g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl004_desc,g_prdl_m.prdl005,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdb005_1,g_prdl_m.prdo005_1,g_prdl_m.prdo006_1,g_prdl_m.prdl003,g_prdl_m.prdl008,g_prdl_m.prdl008_desc, 
       g_prdl_m.prdl009,g_prdl_m.prdl009_desc,g_prdl_m.prdb005_2,g_prdl_m.prdo007_1,g_prdl_m.prdo008_1, 
       g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdp_desc, 
       g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid,g_prdl_m.prdlownid_desc,g_prdl_m.prdlowndp,g_prdl_m.prdlowndp_desc, 
       g_prdl_m.prdlmodid,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfid_desc, 
       g_prdl_m.prdlcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prdl_m.prdlstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prdp_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_prdp2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_prdp3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_prdp4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprm211_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprm211.state_change" ver="4" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprm211_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prdl_m.prdl001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prdl_m.prdlstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prdl_t SET prdlstus = lc_state 
    WHERE prdlent = g_enterprise AND prdl001 = g_prdl_m.prdl001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_prdl_m.prdlstus = lc_state
      DISPLAY BY NAME g_prdl_m.prdlstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprm211.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprm211_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prdl001 = g_prdl_m.prdl001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprm211_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.ui_dialog" ver="28" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprm211_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprm211_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prdl001 = g_prdl001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprm211_fetch('') # reload data
               LET l_ac = 1
               CALL aprm211_ui_detailshow() #Setting the current row 
      
               CALL aprm211_idx_chk()
               #NEXT FIELD prdp002
         
         END DISPLAY
        
         DISPLAY ARRAY g_prdp_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprm211_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprm211_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_prdp2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprm211_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL aprm211_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_prdp3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprm211_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL aprm211_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_prdp4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprm211_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL aprm211_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprm211_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprm211_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprm211_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprm211_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprm211_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprm211_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprm211_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprm211_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprm211_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm211_idx_chk()
            
         ON ACTION previous
            CALL aprm211_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm211_idx_chk()
            
         ON ACTION jump
            CALL aprm211_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm211_idx_chk()
            
         ON ACTION next
            CALL aprm211_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm211_idx_chk()
            
         ON ACTION last
            CALL aprm211_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm211_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prdp002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprm211_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION object
            LET g_action_choice="object"
            IF cl_auth_chk_act("object") THEN
               
               #add-point:ON ACTION object
               {<point name="menu.object" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION release
            LET g_action_choice="release"
            IF cl_auth_chk_act("release") THEN
               
               #add-point:ON ACTION release
               {<point name="menu.release" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprm211_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprm211_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprm211_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprm211.ui_headershow" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprm211_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prdl_m.prdl001 = g_browser[g_current_idx].b_prdl001   
 
   EXECUTE aprm211_master_referesh USING g_prdl_m.prdl001 INTO g_prdl_m.prdlunit,g_prdl_m.prdl001,g_prdl_m.prdl002, 
       g_prdl_m.prdl006,g_prdl_m.prdl007,g_prdl_m.prdl027,g_prdl_m.prdl099,g_prdl_m.prdl100,g_prdl_m.prdlstus, 
       g_prdl_m.prdl010,g_prdl_m.prdl011,g_prdl_m.prdl012,g_prdl_m.prdl013,g_prdl_m.prdl024,g_prdl_m.prdl025, 
       g_prdl_m.prdl026,g_prdl_m.prdl098,g_prdl_m.prdl004,g_prdl_m.prdl005,g_prdl_m.prdl003,g_prdl_m.prdl008, 
       g_prdl_m.prdl009,g_prdl_m.prdlsite,g_prdl_m.prdlcrtid,g_prdl_m.prdlcrtdp,g_prdl_m.prdlcrtdt,g_prdl_m.prdlownid, 
       g_prdl_m.prdlowndp,g_prdl_m.prdlmodid,g_prdl_m.prdlmoddt,g_prdl_m.prdlcnfid,g_prdl_m.prdlcnfdt, 
       g_prdl_m.prdlunit_desc,g_prdl_m.prdl006_desc,g_prdl_m.prdl007_desc,g_prdl_m.prdl004_desc,g_prdl_m.prdl005_desc, 
       g_prdl_m.prdl008_desc,g_prdl_m.prdl009_desc,g_prdl_m.prdlcrtid_desc,g_prdl_m.prdlcrtdp_desc,g_prdl_m.prdlownid_desc, 
       g_prdl_m.prdlowndp_desc,g_prdl_m.prdlmodid_desc,g_prdl_m.prdlcnfid_desc
   CALL aprm211_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprm211.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprm211_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm211_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm211_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm211_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm211_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprm211.update_b" ver="4" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprm211_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prdp_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prdp_t 
         SET (prdp001,
              prdp002
              ,prdpstus,prdp003,prdp004,prdpsite,prdpunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prdp_d[g_detail_idx].prdpstus,g_prdp_d[g_detail_idx].prdp003,g_prdp_d[g_detail_idx].prdp004, 
                  g_prdp_d[g_detail_idx].prdpsite,g_prdp_d[g_detail_idx].prdpunit) 
         WHERE prdpent = g_enterprise AND prdp001 = ps_keys_bak[1] AND prdp002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prdp_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prdp_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prdr_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE prdr_t 
         SET (prdr001,
              prdr002,prdr003,prdr004
              ,prdrstus,prdr005,prdr006,prdr007,prdrsite,prdrunit,prdr010) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_prdp2_d[g_detail_idx].prdrstus,g_prdp2_d[g_detail_idx].prdr005,g_prdp2_d[g_detail_idx].prdr006, 
                  g_prdp2_d[g_detail_idx].prdr007,g_prdp2_d[g_detail_idx].prdrsite,g_prdp2_d[g_detail_idx].prdrunit, 
                  g_prdp2_d[g_detail_idx].prdr010) 
         WHERE prdrent = g_enterprise AND prdr001 = ps_keys_bak[1] AND prdr002 = ps_keys_bak[2] AND prdr003 = ps_keys_bak[3] AND prdr004 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prdr_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prdr_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prdq_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE prdq_t 
         SET (prdq001,
              prdq002
              ,prdqstus,prdq003,prdq004,prdqsite,prdqunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prdp3_d[g_detail_idx].prdqstus,g_prdp3_d[g_detail_idx].prdq003,g_prdp3_d[g_detail_idx].prdq004, 
                  g_prdp3_d[g_detail_idx].prdqsite,g_prdp3_d[g_detail_idx].prdqunit) 
         WHERE prdqent = g_enterprise AND prdq001 = ps_keys_bak[1] AND prdq002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prdq_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prdq_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prdo_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE prdo_t 
         SET (prdo001,
              prdo002
              ,prdostus,prdo003,prdo004,prdo005,prdo006,prdo007,prdo008,prdosite,prdounit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prdp4_d[g_detail_idx].prdostus,g_prdp4_d[g_detail_idx].prdo003,g_prdp4_d[g_detail_idx].prdo004, 
                  g_prdp4_d[g_detail_idx].prdo005,g_prdp4_d[g_detail_idx].prdo006,g_prdp4_d[g_detail_idx].prdo007, 
                  g_prdp4_d[g_detail_idx].prdo008,g_prdp4_d[g_detail_idx].prdosite,g_prdp4_d[g_detail_idx].prdounit)  

         WHERE prdoent = g_enterprise AND prdo001 = ps_keys_bak[1] AND prdo002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prdo_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prdo_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
