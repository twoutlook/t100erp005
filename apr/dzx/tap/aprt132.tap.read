<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprt132" std_prog="aprt132" erpver="1.0" module="APR" ver="11" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aprt132_prbqsite_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbqsite
PRIVATE FUNCTION aprt132_prbqsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbqsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbq_m.prbqsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbq_m.prbqsite_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbq001_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbq001
PRIVATE FUNCTION aprt132_prbq001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbq001
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbq_m.prbq001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbq_m.prbq001_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbq004_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbq004
PRIVATE FUNCTION aprt132_prbq004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbq004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_prbq_m.prbq004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbq_m.prbq004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbq005_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbq005
PRIVATE FUNCTION aprt132_prbq005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbq005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbq_m.prbq005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbq_m.prbq005_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbq004_display" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbq004,prbq005
PRIVATE FUNCTION aprt132_prbq004_display()
   SELECT ooag003 INTO g_prbq_m.prbq005
     FROM ooag_t
    WHERE ooagent= g_enterprise
      AND ooag001= g_prbq_m.prbq004
   CALL aprt132_prbq005_ref()
END FUNCTION]]>
  </point>
  <point name="function.aprt132_chk_prbq002" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[##chk prbq002
PRIVATE FUNCTION aprt132_chk_prbq002()
   LET g_errno=null
   IF NOT cl_null(g_prbq_m.prbq002) AND NOT cl_null(g_prbq_m.prbq003) THEN
      IF g_prbq_m.prbq003<g_prbq_m.prbq002 THEN
         LET g_errno="amm-00080"
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt132_create_prbrseq" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#create prbrseq
PRIVATE FUNCTION aprt132_create_prbrseq()
   IF cl_null(g_prbr_d[l_ac].prbrseq) THEN
      SELECT max(prbrseq)+1 INTO g_prbr_d[l_ac].prbrseq
        FROM prbr_t
       WHERE prbrent=g_enterprise AND prbrdocno=g_prbq_m.prbqdocno 
   END IF
   IF cl_null(g_prbr_d[l_ac].prbrseq) OR g_prbr_d[l_ac].prbrseq=0 THEN
      LET g_prbr_d[l_ac].prbrseq=1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbr001_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbr001
PRIVATE FUNCTION aprt132_prbr001_ref()
   IF cl_null(g_prbr_d[l_ac].prbr002) THEN
      SELECT rtdx002 INTO g_prbr_d[l_ac].prbr002 FROM rtdx_t,imay_t
       WHERE rtdx001=imay001 AND rtdx002 = imay003 AND rtdxent=imayent 
         AND rtdx001 = g_prbr_d[l_ac].prbr001
         AND rtdxent = g_enterprise AND rtdxstus = 'Y' AND imaystus='Y'
      DISPLAY  g_prbr_d[l_ac].prbr002 TO s_detail1[l_ac].prbr002
   END IF 
   DISPLAY g_prbr_d[l_ac].prbr002 TO s_detail[l_ac].prbr002
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbr0011_ref" order="9" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#display 规格，品名等
PRIVATE FUNCTION aprt132_prbr0011_ref()
   SELECT rtdx002 INTO g_prbr_d[l_ac].prbr002 FROM rtdx_t,imay_t
    WHERE rtdx001=imay001 AND rtdx002 = imay003 AND rtdxent=imayent 
      AND rtdx001 = g_prbr_d[l_ac].prbr001
      AND rtdxent = g_enterprise AND rtdxstus = 'Y' AND imaystus='Y'
   DISPLAY  g_prbr_d[l_ac].prbr002 TO s_detail1[l_ac].prbr002
   SELECT imaal003,imaal004 INTO g_prbr_d[l_ac].imaal003,g_prbr_d[l_ac].imaal004
     FROM imaal_t
    WHERE imaalent=g_enterprise AND imaal001= g_prbr_d[l_ac].prbr001
   LET g_prbr_d[l_ac].prbr009 = g_prbr_d[l_ac].imaal003       #20150703--add by dongsz
   SELECT imaa009 INTO g_prbr_d[l_ac].imaa009
     FROM imaa_t
    WHERE imaaent=g_enterprise AND imaa001= g_prbr_d[l_ac].prbr001
   SELECT rtaxl003 INTO g_prbr_d[l_ac].imaa009_desc
     FROM rtaxl_t
    WHERE rtaxlent=g_enterprise AND rtaxl001= g_prbr_d[l_ac].imaa009
      AND rtaxl002=g_dlang    
   #150312-00002#5 Modify-S By Ken 150317
   #SELECT rtdx033,rtdx034,rtdx016 
   #  INTO g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr005,g_prbr_d[l_ac].prbr006
   #  FROM rtdx_t
   # WHERE rtdxent=g_enterprise AND rtdxsite=g_prbq_m.prbqsite
   #   AND rtdx001 = g_prbr_d[l_ac].prbr001
   SELECT imaa106,rtdx034,rtdx016 
     INTO g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr005,g_prbr_d[l_ac].prbr006
     FROM rtdx_t,imaa_t
    WHERE rtdxent = imaaent AND rtdx001 = imaa001
      AND rtdxent = g_enterprise AND rtdxsite = g_prbq_m.prbqsite
      AND rtdx001 = g_prbr_d[l_ac].prbr001
   #150312-00002#5 Modify-E
   SELECT oocal003 INTO g_prbr_d[l_ac].prbr004_desc
     FROM oocal_t
    WHERE oocalent=g_enterprise AND oocal001= g_prbr_d[l_ac].prbr004
      AND oocal002=g_dlang    
   IF cl_null(g_prbr_d[l_ac].prbr006)  THEN
      LET g_prbr_d[l_ac].prbr006=0
   END IF   
   IF cl_null(g_prbr_d[l_ac].prbr006) OR g_prbr_d[l_ac].prbr006=0 THEN
   ELSE
      LET g_prbr_d[l_ac].prbr007=(g_prbr_d[l_ac].prbr006-g_prbr_d[l_ac].prbr005)/g_prbr_d[l_ac].prbr006*100  
   END IF 
   DISPLAY g_prbr_d[l_ac].imaal003,g_prbr_d[l_ac].imaal004,g_prbr_d[l_ac].imaa009,
           g_prbr_d[l_ac].imaa009_desc,g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr004_desc,
           g_prbr_d[l_ac].prbr006, g_prbr_d[l_ac].prbr007,g_prbr_d[l_ac].prbr005
        TO s_detail1[l_ac].imaal003,s_detail1[l_ac].imaal004,s_detail1[l_ac].imaa009,
           s_detail1[l_ac].imaa009_desc,s_detail1[l_ac].prbr004,s_detail1[l_ac].prbr004_desc,
           s_detail1[l_ac].prbr006,s_detail1[l_ac].prbr007,s_detail1[l_ac].prbr005
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbr002_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display prbr001
PRIVATE FUNCTION aprt132_prbr002_ref()
   IF cl_null(g_prbr_d[l_ac].prbr001) THEN
      SELECT rtdx001 INTO g_prbr_d[l_ac].prbr001
        FROM rtdx_t LEFT JOIN imaa_t ON imaa001=rtdx001 AND imaaent=rtdxent
                    LEFT JOIN imay_t ON rtdx001=imay001 AND rtdxent=imayent
       WHERE imayent=g_enterprise AND imay003= g_prbr_d[l_ac].prbr002
         AND rtdxsite=g_prbq_m.prbqsite AND imaastus='Y' AND rtdxstus='Y'       
   END IF
   DISPLAY g_prbr_d[l_ac].prbr001 TO s_detail[l_ac].prbr001
END FUNCTION]]>
  </point>
  <point name="function.aprt132_unique_prbr001" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#unique prbr001
PRIVATE FUNCTION aprt132_unique_prbr001()
   DEFINE l_cnt LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   SELECT count(*) INTO l_cnt FROM prbr_t WHERE prbrdocno = g_prbq_m.prbqdocno
      AND prbrent = g_enterprise AND prbr001 = g_prbr_d[l_ac].prbr001
   IF l_cnt >0 THEN
      LET g_errno  = "art-00072"
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt132_null_prbr001" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display null
PRIVATE FUNCTION aprt132_null_prbr001()
   LET g_prbr_d[l_ac].imaal003 = NULL
   LET g_prbr_d[l_ac].imaal004 = NULL
   LET g_prbr_d[l_ac].imaa009 = NULL
   LET g_prbr_d[l_ac].imaa009_desc = NULL
   LET g_prbr_d[l_ac].prbr004 = NULL
   LET g_prbr_d[l_ac].prbr004_desc = NULL
   LET g_prbr_d[l_ac].prbr005 = NULL
   LET g_prbr_d[l_ac].prbr006 = NULL
   DISPLAY g_prbr_d[l_ac].imaal003,g_prbr_d[l_ac].imaal004,g_prbr_d[l_ac].imaa009,
           g_prbr_d[l_ac].imaa009_desc,g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr004_desc,
           g_prbr_d[l_ac].prbr005, g_prbr_d[l_ac].prbr006
        TO s_detail1[l_ac].imaal003,s_detail1[l_ac].imaal004,s_detail1[l_ac].imaa009,
           s_detail1[l_ac].imaa009_desc,s_detail1[l_ac].prbr004,s_detail1[l_ac].prbr004_desc,
           s_detail1[l_ac].prbr005,s_detail1[l_ac].prbr006
END FUNCTION]]>
  </point>
  <point name="function.aprt132_chk_prbr0012" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#chk prbr001,prbr002
PRIVATE FUNCTION aprt132_chk_prbr0012()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0 
   IF NOT cl_null(g_prbr_d[l_ac].prbr002) AND NOT cl_null(g_prbr_d[l_ac].prbr001) THEN
      SELECT COUNT(*) INTO l_cnt
        FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                    LEFT JOIN imay_t ON imay001=rtdx001 AND rtdxent=imayent 
       WHERE rtdx001 = g_prbr_d[l_ac].prbr001 
         AND imay003 = g_prbr_d[l_ac].prbr002 
         AND rtdxsite = g_prbq_m.prbqsite
         
      IF l_cnt <=0 THEN
         LET g_errno="art-00286"
      ELSE
         SELECT COUNT(*) INTO l_cnt1
           FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                       LEFT JOIN imay_t ON imay001=rtdx001 AND rtdxent=imayent
          WHERE rtdx001 = g_prbr_d[l_ac].prbr001 
            AND imay003 = g_prbr_d[l_ac].prbr002 
            AND rtdxsite = g_prbq_m.prbqsite
            AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y'
         IF l_cnt1<=0 THEN
            LET g_errno="art-00153"
         END IF      
      END IF
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.aprt132_chk_prbr002" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#chkprbr002
PRIVATE FUNCTION aprt132_chk_prbr002()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   define l_sql   string
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0  
   IF g_prbq_m.prbq001<>'ALL' THEN
      LET l_sql = " SELECT COUNT(*) ",
        " FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent ",
        "            LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent  ",
       " WHERE imay003 = '",g_prbr_d[l_ac].prbr002,"' AND rtdxsite = '",g_prbq_m.prbqsite,"'"
      PREPARE l_sql_prbq002_pre21 FROM l_sql
      EXECUTE l_sql_prbq002_pre21 INTO l_cnt
      IF l_cnt <=0 THEN
         LET g_errno="art-00152"
         RETURN
      END IF
      LET l_sql = " SELECT COUNT(*) ",
        " FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent ",
        "            LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent  ",
       " WHERE imay003 = '",g_prbr_d[l_ac].prbr002,"' AND rtdxsite = '",g_prbq_m.prbqsite,"'",
       " AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y' "
         PREPARE l_sql_prbq002_pre22 FROM l_sql
         EXECUTE l_sql_prbq002_pre22 INTO l_cnt1
      IF l_cnt1<=0 THEN
         LET g_errno="art-00153"
         RETURN
      END IF 
            
      LET l_sql = " SELECT COUNT(*) ",
        " FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent ",
        "            LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent  ",
       " WHERE imay003 = '",g_prbr_d[l_ac].prbr002,"' AND rtdxsite = '",g_prbq_m.prbqsite,"'",
       "  AND imaa009  IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 ",
       "                       START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 ",
       "                       UNION ",
       "                       SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_prbq_m.prbq001,"')"
      PREPARE l_sql_prbq002_pre FROM l_sql
      EXECUTE l_sql_prbq002_pre INTO l_cnt 
#      SELECT COUNT(*) INTO l_cnt
#        FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
#                    LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
#       WHERE imay003 = g_prbr_d[l_ac].prbr002 AND rtdxsite = g_prbq_m.prbqsite
#         AND imaa009 = g_prbq_m.prbq001
      IF l_cnt <=0 THEN
         LET g_errno="art-00392"
      ELSE
         LET l_sql = " SELECT COUNT(*) ",
        " FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent ",
        "            LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent  ",
       " WHERE imay003 = '",g_prbr_d[l_ac].prbr002,"' AND rtdxsite = '",g_prbq_m.prbqsite,"'",
       "  AND imaa009  IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 ",
       "                       START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 ",
       "                       UNION ",
       "                       SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_prbq_m.prbq001,"')",
       " AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y' "
         PREPARE l_sql_prbq002_pre2 FROM l_sql
         EXECUTE l_sql_prbq002_pre2 INTO l_cnt1
#         SELECT COUNT(*) INTO l_cnt1
#           FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
#                       LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
#          WHERE imay003 = g_prbr_d[l_ac].prbr002 AND rtdxsite = g_prbq_m.prbqsite
#            AND imaa009 = g_prbq_m.prbq001 
#            AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y'
         IF l_cnt1<=0 THEN
            LET g_errno="art-00393"
         END IF      
      END IF
   ELSE
      SELECT COUNT(*) INTO l_cnt
        FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                    LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
       WHERE imay003 = g_prbr_d[l_ac].prbr002 AND rtdxsite = g_prbq_m.prbqsite
      IF l_cnt <=0 THEN
         LET g_errno="art-00152"
      ELSE
         SELECT COUNT(*) INTO l_cnt1
           FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                       LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
          WHERE imay003 = g_prbr_d[l_ac].prbr002 AND rtdxsite = g_prbq_m.prbqsite
            AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y'
         IF l_cnt1<=0 THEN
            LET g_errno="art-00153"
         END IF      
      END IF
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbr011" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#count prbr011
PRIVATE FUNCTION aprt132_prbr011()
   LET g_prbr_d[l_ac].prbr012=g_prbr_d[l_ac].prbr010*g_prbr_d[l_ac].prbr011
   LET g_prbr_d[l_ac].prbr015=(g_prbr_d[l_ac].prbr011-g_prbr_d[l_ac].prbr005)/g_prbr_d[l_ac].prbr011*100
   DISPLAY g_prbr_d[l_ac].prbr012 TO s_detail1[l_ac].prbr012
   DISPLAY g_prbr_d[l_ac].prbr015 TO s_detail1[l_ac].prbr015
END FUNCTION]]>
  </point>
  <point name="function.aprt132_prbr014_ref" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[##display prbr014
PRIVATE FUNCTION aprt132_prbr014_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbr_d[l_ac].prbr014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2098' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbr_d[l_ac].prbr014_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prbr_d[l_ac].prbr014_desc TO s_detail1[l_ac].prbr014_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt132_chk_prbq001" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#chk prbq001
PRIVATE FUNCTION aprt132_chk_prbq001()
   DEFINE l_cnt  like type_t.num5
   DEFINE l_cnt1  like type_t.num5
   DEFINE l_sql   STRING
   LET g_errno=null
   
   LET l_sql=" SELECT count(*)  FROM prbr_t LEFT JOIN imaa_t ON prbrent=imaaent AND prbr001=imaa001",
    " WHERE prbrent=g_enterprise AND prbrdocno = '",g_prbq_m.prbqdocno,"' ",
    "  AND imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 UNION SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_prbq_m.prbq001,"')"    
#    AND imaa009 = g_prbq_m.prbq001
   PREPARE l_sql_prbr001_pre FROM l_sql
   EXECUTE l_sql_prbr001_pre INTO l_cnt 
   SELECT count(*) INTO l_cnt1 FROM prbr_t LEFT JOIN imaa_t ON prbrent=imaaent AND prbr001=imaa001
    WHERE prbrent=g_enterprise AND prbrdocno = g_prbq_m.prbqdocno
   IF cl_null(l_cnt) THEN
      LET l_cnt=0
   END IF
   IF cl_null(l_cnt1) THEN
      LET l_cnt1=0
   END IF    
   IF l_cnt<>l_cnt1 THEN
      LET g_errno="apr-00062"
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt132_imaa009_ref" order="18" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 品类带值
# Memo...........:
# Usage..........: CALL aprt132_imaa009_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20150701 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION aprt132_imaa009_ref()

   SELECT imaal003,imaal004 INTO g_prbr_d[l_ac].imaal003,g_prbr_d[l_ac].imaal004
     FROM imaal_t
    WHERE imaalent=g_enterprise AND imaal001= g_prbr_d[l_ac].prbr001
   SELECT imaa009 INTO g_prbr_d[l_ac].imaa009
     FROM imaa_t
    WHERE imaaent=g_enterprise AND imaa001= g_prbr_d[l_ac].prbr001
   SELECT rtaxl003 INTO g_prbr_d[l_ac].imaa009_desc
     FROM rtaxl_t
    WHERE rtaxlent=g_enterprise AND rtaxl001= g_prbr_d[l_ac].imaa009
      AND rtaxl002=g_dlang    

   #150312-00002#5 Modify-E
   SELECT oocal003 INTO g_prbr_d[l_ac].prbr004_desc
     FROM oocal_t
    WHERE oocalent=g_enterprise AND oocal001= g_prbr_d[l_ac].prbr004
      AND oocal002=g_dlang    
 
END FUNCTION]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'prbqsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim()]]>
  </point>
  <point name="browser_fill.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="construct.c.page1.prbr001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbr001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO rtdx002 #商品條碼 

            NEXT FIELD prbr001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbr002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbr002  #顯示到畫面上

            NEXT FIELD prbr002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbr004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbr004  #顯示到畫面上

            NEXT FIELD prbr004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbr014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2098'
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbr014  #顯示到畫面上

            NEXT FIELD prbr014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbq001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbq001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO rtax001 #品類編號 

            NEXT FIELD prbq001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbq004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbq004  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooag003 #歸屬部門 
               #DISPLAY g_qryparam.return3 TO oofa011 #全名 
               #DISPLAY g_qryparam.return4 TO ooefl003 #說明(簡稱) 

            NEXT FIELD prbq004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbq005" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbq005  #顯示到畫面上

            NEXT FIELD prbq005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqcnfid  #顯示到畫面上

            NEXT FIELD prbqcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqcrtdp  #顯示到畫面上

            NEXT FIELD prbqcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqcrtid  #顯示到畫面上

            NEXT FIELD prbqcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqdocno" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prbqdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqdocno  #顯示到畫面上

            NEXT FIELD prbqdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqmodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqmodid  #顯示到畫面上

            NEXT FIELD prbqmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqowndp  #顯示到畫面上

            NEXT FIELD prbqowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbqownid  #顯示到畫面上

            NEXT FIELD prbqownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbqsite" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
#			LET g_qryparam.arg1 = g_site
#			LET g_qryparam.arg2 = '8'
#            CALL q_ooed004_3()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'prbqsite',g_site,'c') #150308-00001#1  By Ken add 'c' 150309
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO prbqsite  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD prbqsite                     #返回原欄位

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #150518-00007#1--add by dongsz--str---
      IF NOT s_aooi200_del_docno(g_prbq_m.prbqdocno,g_prbq_m.prbqdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #150518-00007#1--add by dongsz--end---]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   IF g_prbq_m.prbqstus<>'N' THEN
#      CALL cl_set_act_visible("modify,delete",false)
#   ELSE
#      CALL cl_set_act_visible("modify,delete",true)
#   END IF
   IF g_prbq_m.prbqstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_site_flag           LIKE type_t.num5]]>
  </point>
  <point name="init.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 #150308-00001#1  By Ken 150309]]>
  </point>
  <point name="init.init" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success #150308-00001#1  By Ken 150309]]>
  </point>
  <point name="input.a.page1.prbr001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aprt132_null_prbr001()
            IF NOT cl_null(g_prbr_d[l_ac].prbr001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbr_d[l_ac].prbr001 != g_prbr_d_t.prbr001 OR g_prbr_d_t.prbr001 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prbr_d[l_ac].prbr001
                  LET g_chkparam.arg2 = g_prbq_m.prbqsite
                  IF g_prbq_m.prbq001<>'ALL'  THEN
                     LET g_chkparam.arg3 = g_prbq_m.prbq001

                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_rtdx001_8") THEN

                     ELSE
                        #檢查失敗時後續處理
                        LET g_prbr_d[l_ac].prbr001 = g_prbr_d_t.prbr001
                        CALL aprt132_prbr0011_ref()
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     IF cl_chk_exist("v_rtdx001_1") THEN
                     ELSE
                        #檢查失敗時後續處理
                        LET g_prbr_d[l_ac].prbr001 = g_prbr_d_t.prbr001
                        CALL aprt132_prbr0011_ref()
                        NEXT FIELD CURRENT
                     END IF                  
                  END IF
                  CALL aprt132_unique_prbr001()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbr_d[l_ac].prbr001 = g_prbr_d_t.prbr001
                     CALL aprt132_prbr0011_ref()
                     NEXT FIELD prbr001
                  END IF
                  CALL aprt132_chk_prbr0012()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbr_d[l_ac].prbr001 = g_prbr_d_t.prbr001
                     CALL aprt132_prbr0011_ref()
                     NEXT FIELD prbr001
                  END IF
                  
               END IF
            END IF 
            CALL aprt132_prbr0011_ref()]]>
  </point>
  <point name="input.a.page1.prbr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbr_d[l_ac].prbr002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbr_d[l_ac].prbr002 != g_prbr_d_t.prbr002 OR g_prbr_d_t.prbr002 IS NULL )) THEN
                  CALL aprt132_chk_prbr002()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbr_d[l_ac].prbr002 = g_prbr_d_t.prbr002
                     NEXT FIELD prbr002
                  END IF 
                  IF cl_null( g_prbr_d[l_ac].prbr001) THEN
                     CALL aprt132_prbr002_ref()
                     CALL aprt132_unique_prbr001()
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                        LET g_prbr_d[l_ac].prbr002 = g_prbr_d_t.prbr002
                        LET g_prbr_d[l_ac].prbr001 = NULL
                        NEXT FIELD prbr002
                     END IF
                     CALL aprt132_prbr0011_ref()
                  END IF
                  CALL aprt132_chk_prbr0012()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbr_d[l_ac].prbr002 = g_prbr_d_t.prbr002
                     NEXT FIELD prbr002
                  END IF
               END IF 
            END IF   
            CALL aprt132_prbr0011_ref()  ]]>
  </point>
  <point name="input.a.page1.prbr004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbr_d[l_ac].prbr004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbr_d[l_ac].prbr004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbr_d[l_ac].prbr004_desc
]]>
  </point>
  <point name="input.a.page1.prbr010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbr_d[l_ac].prbr010) THEN
               CALL aprt132_prbr011()              
            END IF 
]]>
  </point>
  <point name="input.a.page1.prbr011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbr_d[l_ac].prbr011) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbr_d[l_ac].prbr011 != g_prbr_d_t.prbr011 OR g_prbr_d_t.prbr011 IS NULL )) THEN
                  IF g_prbr_d[l_ac].prbr011>g_prbr_d[l_ac].prbr006 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "apr-00130"
                     LET g_errparam.extend = g_prbr_d[l_ac].prbr011||'>'||g_prbr_d[l_ac].prbr006
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbr_d[l_ac].prbr011 = g_prbr_d_t.prbr011
                     NEXT FIELD prbr011
                  END IF
                  CALL aprt132_prbr011()
               END IF             
            END IF 
]]>
  </point>
  <point name="input.a.page1.prbr012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbr_d[l_ac].prbr012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.prbr014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_prbr_d[l_ac].prbr014_desc = NULL
            DISPLAY g_prbr_d[l_ac].prbr014_desc TO s_detail1[l_ac].prbr014_desc
            IF NOT cl_null(g_prbr_d[l_ac].prbr014) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbr_d[l_ac].prbr014 != g_prbr_d_t.prbr014 OR g_prbr_d_t.prbr014 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prbr_d[l_ac].prbr014

                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_2098") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_prbr_d[l_ac].prbr014=g_prbr_d_t.prbr014
                     CALL aprt132_prbr014_ref()
                     NEXT FIELD CURRENT
                  END IF
            
               END IF
            END IF
            CALL aprt132_prbr014_ref()            
            
]]>
  </point>
  <point name="input.a.page1.prbrseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbr_d[l_ac].prbrseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_prbq_m.prbqdocno IS NOT NULL AND g_prbr_d[g_detail_idx].prbrseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prbq_m.prbqdocno != g_prbqdocno_t OR g_prbr_d[g_detail_idx].prbrseq != g_prbr_d_t.prbrseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbr_t WHERE "||"prbrent = '" ||g_enterprise|| "' AND "||"prbrdocno = '"||g_prbq_m.prbqdocno ||"' AND "|| "prbrseq = '"||g_prbr_d[g_detail_idx].prbrseq ||"'",'std-00004',0) THEN 
                     LET g_prbr_d[l_ac].prbrseq = g_prbr_d_t.prbrseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.prbq001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_prbq_m.prbq001_desc=null
            DISPLAY BY NAME g_prbq_m.prbq001_desc
            IF NOT cl_null(g_prbq_m.prbq001) AND g_prbq_m.prbq001<>'ALL' THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq001 != g_prbq_m_t.prbq001 OR g_prbq_m_t.prbq001 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET l_rtax004 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')    #150512-00027#1--add by dongsz
#                  SELECT ooaa002 INTO l_ooaa002 FROM ooaa_t                       #150512-00027#1--mark by dongsz
#                   WHERE ooaaent = g_enterprise AND ooaa001 = 'E-CIR-0001'        #150512-00027#1--mark by dongsz
                  LET g_chkparam.arg1 = g_prbq_m.prbq001
                  #LET g_chkparam.arg2 = l_ooaa002         #150512-00027#1--mark by dongsz
                  LET g_chkparam.arg2 = l_rtax004          #150512-00027#1--add by dongsz
    
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_rtax001_3") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prbq_m.prbq001 = g_prbq_m_t.prbq001
                     CALL aprt132_prbq001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt132_chk_prbq001()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbq_m.prbq001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbq_m.prbq001 = g_prbq_m_t.prbq001
                     CALL aprt132_prbq001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF 

            END IF 
            CALL aprt132_prbq001_ref()
]]>
  </point>
  <point name="input.a.prbq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_prbq_m.prbq002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq002 != g_prbq_m_t.prbq002 OR g_prbq_m_t.prbq002 IS NULL )) THEN 
                  IF g_prbq_m.prbq002<g_today THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "apr-00063"
                     LET g_errparam.extend = g_prbq_m.prbq002||'<'||g_today
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbq_m.prbq002 = g_prbq_m_t.prbq002
                     NEXT FIELD prbq002
                  END IF
                  CALL aprt132_chk_prbq002()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbq_m.prbq002||'>'||g_prbq_m.prbq003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbq_m.prbq002 = g_prbq_m_t.prbq002
                     NEXT FIELD prbq002
                  END IF
                  
               END IF
            END IF ]]>
  </point>
  <point name="input.a.prbq003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_prbq_m.prbq003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq003 != g_prbq_m_t.prbq003 OR g_prbq_m_t.prbq003 IS NULL )) THEN 
                  IF g_prbq_m.prbq003<g_today THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "apr-00063"
                     LET g_errparam.extend = g_prbq_m.prbq003||'<'||g_today
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbq_m.prbq003 = g_prbq_m_t.prbq003
                     NEXT FIELD prbq003
                  END IF
                  CALL aprt132_chk_prbq002()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_prbq_m.prbq002||'>'||g_prbq_m.prbq003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_prbq_m.prbq003 = g_prbq_m_t.prbq003
                     NEXT FIELD prbq003
                  END IF
                  
               END IF
            END IF]]>
  </point>
  <point name="input.a.prbq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_prbq_m.prbq004_desc = NULL
            DISPLAY BY NAME g_prbq_m.prbq004_desc
            IF NOT cl_null(g_prbq_m.prbq004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq004 != g_prbq_m_t.prbq004 OR g_prbq_m_t.prbq004 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prbq_m.prbq004  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_prbq_m.prbq004 = g_prbq_m_t.prbq004
                     CALL aprt132_prbq004_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt132_prbq004_display()
               END IF

            END IF 
            CALL aprt132_prbq004_ref()
]]>
  </point>
  <point name="input.a.prbq005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbq_m.prbq005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq005 != g_prbq_m_t.prbq005 OR g_prbq_m_t.prbq005 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prbq_m.prbq005
                  LET g_chkparam.arg2 = g_today

                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001_3") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prbq_m.prbq005 = g_prbq_m_t.prbq005
                     CALL aprt132_prbq005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt132_prbq005_ref()
]]>
  </point>
  <point name="input.a.prbqdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_prbq_m.prbqdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbqdocno != g_prbqdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbq_t WHERE "||"prbqent = '" ||g_enterprise|| "' AND "||"prbqdocno = '"||g_prbq_m.prbqdocno ||"'",'std-00004',0) THEN 
                     LET g_prbq_m.prbqdocno = g_prbq_m_t.prbqdocno
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prbq_m.prbqdocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_prbq_m.prbqdocno = g_prbq_m_t.prbqdocno
                     NEXT FIELD prbqdocno
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.prbqsite" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbq_m.prbqsite) THEN
               CALL s_aooi500_chk(g_prog,'prbqsite',g_prbq_m.prbqsite,g_prbq_m.prbqsite)
                  RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_prbq_m.prbqsite = g_prbq_m_t.prbqsite
                  CALL aprt132_prbqsite_ref()
                  DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc
                  NEXT FIELD CURRENT
               END IF

               LET g_site_flag = TRUE
               CALL aprt132_set_entry(p_cmd)
               CALL aprt132_set_no_entry(p_cmd)
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbq_m.prbqsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbq_m.prbqsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbq_m.prbqsite_desc
]]>
  </point>
  <point name="input.before_dialog" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prbqsite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prbrseq
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow=1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_site]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd='a' AND cl_null(g_prbr_d[l_ac].prbr008) THEN
               CALL s_auto_barcode('3')
               RETURNING g_prbr_d[l_ac].prbr008,l_success
               IF NOT l_success THEN  
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               SELECT count(*) INTO l_count 
                 FROM prbr_t
                WHERE prbr008=g_prbr_d[l_ac].prbr008
               IF l_count>0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "apr-00136"
                  LET g_errparam.extend = g_prbr_d[l_ac].prbr008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF 
            END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aprt132_create_prbrseq()
            LET g_prbr_d[l_ac].prbrunit = g_prbq_m.prbqunit
            LET g_prbr_d[l_ac].prbrsite = g_prbq_m.prbqsite
            LET g_prbr_d[l_ac].prbr013 = 0
#            IF l_cmd='a' AND cl_null(g_prbr_d[l_ac].prbr008) THEN
#               CALL s_auto_barcode('3')
#               RETURNING g_prbr_d[l_ac].prbr008,l_success
#               IF NOT l_success THEN  
#                  CALL s_transaction_end('N','0')
#                  RETURN
#               END IF
#               SELECT count(*) INTO l_count 
#                 FROM prbr_t
#                WHERE prbr008=g_prbr_d[l_ac].prbr008
#               IF l_count>0 THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = "apr-00136"
#                  LET g_errparam.extend = g_prbr_d[l_ac].prbr008
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#
#                  CALL s_transaction_end('N','0')
#                  RETURN
#               END IF 
#            END IF]]>
  </point>
  <point name="input.c.page1.prbr001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbr_d[l_ac].prbr001             #給予default值
            LET g_qryparam.default2 = "" #g_prbr_d[l_ac].rtdx002 #商品條碼

            #給予arg
            IF g_prbq_m.prbq001<>'ALL' THEN
               LET g_qryparam.arg1 = g_prbq_m.prbqsite #
               LET g_qryparam.arg2 = g_prbq_m.prbq001 #

               CALL q_rtdx001_17()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = g_prbq_m.prbqsite #

               CALL q_rtdx001_6()
            END IF

            LET g_prbr_d[l_ac].prbr001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prbr_d[l_ac].rtdx002 = g_qryparam.return2 #商品條碼

            DISPLAY g_prbr_d[l_ac].prbr001 TO prbr001              #顯示到畫面上
            #DISPLAY g_prbr_d[l_ac].rtdx002 TO rtdx002 #商品條碼

            NEXT FIELD prbr001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbr_d[l_ac].prbr002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prbq_m.prbqsite #
            IF cl_null(g_prbr_d[l_ac].prbr001) THEN 
               IF g_prbq_m.prbq001<>'ALL' THEN
                  LET g_qryparam.WHERE  =" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 UNION SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_prbq_m.prbq001,"')"
               ELSE
                  LET g_qryparam.WHERE  =" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 UNION SELECT rtax001 FROM rtax_t )"
               END IF               
            ELSE
               IF g_prbq_m.prbq001<>'ALL' THEN
                  LET g_qryparam.WHERE  =" rtdx001='",g_prbr_d[l_ac].prbr001,"' AND imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 UNION SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_prbq_m.prbq001,"')"
               ELSE
                  LET g_qryparam.WHERE  =" rtdx001='",g_prbr_d[l_ac].prbr001,"' AND imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_prbq_m.prbq001,"' CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 UNION SELECT rtax001 FROM rtax_t )"
               END IF               
            END IF
            CALL q_rtdx002_1()                                #呼叫開窗

            LET g_prbr_d[l_ac].prbr002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbr_d[l_ac].prbr002 TO prbr002              #顯示到畫面上

            NEXT FIELD prbr002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbr004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbr_d[l_ac].prbr004             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_prbr_d[l_ac].prbr004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbr_d[l_ac].prbr004 TO prbr004              #顯示到畫面上

            NEXT FIELD prbr004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbr014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbr_d[l_ac].prbr014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2098" #

            CALL q_oocq002_5()                                #呼叫開窗

            LET g_prbr_d[l_ac].prbr014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbr_d[l_ac].prbr014 TO prbr014              #顯示到畫面上
            CALL aprt132_prbr014_ref()
            NEXT FIELD prbr014                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbq001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbq_m.prbq001             #給予default值
            LET g_qryparam.default2 = "" #g_prbq_m.rtax001 #品類編號

            #給予arg
            LET l_rtax004 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')    #150512-00027#1--add by dongsz
            LET g_qryparam.arg1 = l_rtax004                                  #150512-00027#1--add by dongsz
#            SELECT ooaa002 INTO l_ooaa002 FROM ooaa_t                       #150512-00027#1--mark by dongsz
#             WHERE ooaaent = g_enterprise AND ooaa001 = 'E-CIR-0001'        #150512-00027#1--mark by dongsz
#            LET g_qryparam.arg1 = l_ooaa002 #                               #150512-00027#1--mark by dongsz

            CALL q_rtax001_4()                                #呼叫開窗

            LET g_prbq_m.prbq001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prbq_m.rtax001 = g_qryparam.return2 #品類編號

            DISPLAY g_prbq_m.prbq001 TO prbq001              #顯示到畫面上
            #DISPLAY g_prbq_m.rtax001 TO rtax001 #品類編號
            CALL aprt132_prbq001_ref()
            NEXT FIELD prbq001                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbq_m.prbq004             #給予default值
            LET g_qryparam.default2 = "" #g_prbq_m.ooag003 #歸屬部門
            LET g_qryparam.default3 = "" #g_prbq_m.oofa011 #全名
            LET g_qryparam.default4 = "" #g_prbq_m.ooefl003 #說明(簡稱)

            #給予arg

            CALL q_ooag001_6()                                #呼叫開窗

            LET g_prbq_m.prbq004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prbq_m.ooag003 = g_qryparam.return2 #歸屬部門
            #LET g_prbq_m.oofa011 = g_qryparam.return3 #全名
            #LET g_prbq_m.ooefl003 = g_qryparam.return4 #說明(簡稱)

            DISPLAY g_prbq_m.prbq004 TO prbq004              #顯示到畫面上
            #DISPLAY g_prbq_m.ooag003 TO ooag003 #歸屬部門
            #DISPLAY g_prbq_m.oofa011 TO oofa011 #全名
            #DISPLAY g_prbq_m.ooefl003 TO ooefl003 #說明(簡稱)
            CALL aprt132_prbq004_ref()
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbq_m.prbq004 != g_prbq_m_t.prbq004 OR g_prbq_m_t.prbq004 IS NULL )) THEN 
               CALL aprt132_prbq004_display()
            END IF
            NEXT FIELD prbq004                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbq005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbq_m.prbq005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prbq_m.prbq005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbq_m.prbq005 TO prbq005              #顯示到畫面上
            CALL aprt132_prbq005_ref()
            NEXT FIELD prbq005                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbqdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbq_m.prbqdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "aprt132" #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prbq_m.prbqdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbq_m.prbqdocno TO prbqdocno              #顯示到畫面上

            NEXT FIELD prbqdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbqsite" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbq_m.prbqsite             #給予default值
            LET g_qryparam.default2 = "" #g_prbq_m.ooefl003 #說明(簡稱)

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = "8" #
#
#            CALL q_ooed004_3()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'prbqsite',g_prbq_m.prbqsite,'i') #150308-00001#1  By Ken add 'i' 150309

            CALL q_ooef001_24()

            LET g_prbq_m.prbqsite = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prbq_m.ooefl003 = g_qryparam.return2 #說明(簡稱)

            DISPLAY g_prbq_m.prbqsite TO prbqsite              #顯示到畫面上
            #DISPLAY g_prbq_m.ooefl003 TO ooefl003 #說明(簡稱)
            CALL aprt132_prbqsite_ref()

            NEXT FIELD prbqsite                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooaa002             LIKE ooaa_t.ooaa002
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_rtax004             LIKE rtax_t.rtax004       #150512-00027#1--add by dongsz]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prbq_m.prbqdocno) THEN 
               
                  CALL s_aooi200_gen_docno(g_prbq_m.prbqsite,g_prbq_m.prbqdocno,g_prbq_m.prbqdocdt,g_prog)
                     RETURNING  g_success,g_prbq_m.prbqdocno
                  IF g_success<>'1' THEN
                     INITIALIZE g_errparam TO NULL
LET g_errparam.code = "amm-00001"
LET g_errparam.extend = g_prbq_m.prbqdocno
LET g_errparam.popup = TRUE
CALL cl_err()

                     NEXT FIELD prbqdocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbq_t WHERE "||"prbqent = '" ||g_enterprise|| "' AND "||"prbqdocno = '"||g_prbq_m.prbqdocno ||"'",'std-00004',1) THEN
                        LET g_prbq_m.prbqdocno = g_prbqdocno_t
                        NEXT FIELD prbqdocno
                     END IF

                  END IF
                  LET g_prbq_m_t.prbqdocno = g_prbq_m.prbqdocno
                     
               END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd_t = 'r' THEN
               SELECT count(*) INTO l_cnt FROM prbr_t
                WHERE prbrdocno=g_prbqdocno_t AND prbrent=g_enterprise
               IF l_cnt>0 THEN
                  CALL cl_set_comp_entry("prbq001",FALSE)
               ELSE
                  CALL cl_set_comp_entry("prbq001",TRUE)   
               END IF
            ELSE
               CALL aprt132_set_entry(p_cmd)
               CALL aprt132_set_no_entry(p_cmd)
            END IF   ]]>
  </point>
  <point name="insert.default" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'prbqsite',g_prbq_m.prbqsite)
         RETURNING l_insert,g_prbq_m.prbqsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_prbq_m.prbqstus = "N"
      LET g_prbq_m.prbqunit = g_prbq_m.prbqsite
      LET g_prbq_m.prbq002 =g_today
      LET g_prbq_m.prbq003 =g_today
#      LET g_prbq_m.prbqsite = g_prbq_m.prbqunit
      CALL aprt132_prbqsite_ref()
      LET g_prbq_m.prbqdocdt = g_today
      LET g_prbq_m.prbq004 = g_user
      CALL aprt132_prbq004_ref()
      CALL aprt132_prbq004_display() 
      
      #dongsz--add--str---
      #預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_prbq_m.prbqsite,g_prog,'1')
           RETURNING r_success,r_doctype
      LET g_prbq_m.prbqdocno = r_doctype
      #dongsz--add--end---
            
      LET g_prbq_m_t.* = g_prbq_m.*]]>
  </point>
  <point name="insert.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004
   DEFINE l_insert      LIKE type_t.num5]]>
  </point>
  <point name="main.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 #150308-00001#1  By Ken 150309]]>
  </point>
  <point name="main.exit" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success #150308-00001#1  By Ken 150309]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT ooef004 INTO g_ooef004 FROM  ooef_t
    WHERE ooefent=g_enterprise AND ooef001=g_site]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_prbq_m.prbqstus MATCHES "[DR]" THEN 
         LET g_prbq_m.prbqstus = "N"
      END IF ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_prbq_m.prbqstus MATCHES "[DR]" THEN 
      LET g_prbq_m.prbqstus = "N"
   END IF
   IF g_prbq_m.prbqstus<>'N' THEN
      RETURN
   END IF]]>
  </point>
  <point name="reproduce.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE r_success     LIKE type_t.num5
   DEFINE l_insert      LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_prbq_m.prbqcnfid = ""
   LET g_prbq_m.prbqcnfdt = ""
   LET g_prbq_m.prbqstus = "N"
   LET g_prbq_m.prbqdocdt = g_today
   LET g_prbq_m.prbq004 = g_user
   CALL aprt132_prbq004_ref()
   CALL aprt132_prbq004_display()
   LET g_site_flag = FALSE
   CALL s_aooi500_default(g_prog,'prbqsite',g_prbq_m.prbqsite)
      RETURNING l_insert,g_prbq_m.prbqsite
   IF NOT l_insert THEN
      RETURN
   END IF
   LET g_prbq_m.prbqunit = g_prbq_m.prbqsite
#   LET g_prbq_m.prbqsite = g_prbq_m.prbqunit
   CALL aprt132_prbqsite_ref()
   
   #dongsz--add--str---
   #預設單據的單別
   LET r_success = ''
   LET r_doctype = ''
   CALL s_arti200_get_def_doc_type(g_prbq_m.prbqsite,g_prog,'1')
        RETURNING r_success,r_doctype
   LET g_prbq_m.prbqdocno = r_doctype
   #dongsz--add--end---]]>
  </point>
  <point name="send.after_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aprt132_conf_chk(g_prbq_m.prbqdocno,g_prbq_m.prbqstus) RETURNING l_success
   IF l_success THEN
            
   ELSE
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="5" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_prbq_m.prbqstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_entry.field_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("prbqsite",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aooi500_comp_entry(g_prog,'prbqsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("prbqsite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body.reference" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbr_d[l_ac].prbr004
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbr_d[l_ac].prbr004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbr_d[l_ac].prbr004_desc
      #CALL aprt132_prbr0011_ref() #mark by geza 20150701
      CALL aprt132_imaa009_ref() #add by geza 20150701
      CALL aprt132_prbr014_ref()       ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqsite
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqsite_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqsite_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbq001
#            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbq001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbq001_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbq004
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbq004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbq004_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbq005
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbq005_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbq005_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbq_m.prbqcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_prbq_m.prbqcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbq_m.prbqcnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT prbqstus,prbqcnfid,prbqcnfdt,prbqmodid,prbqmoddt INTO g_prbq_m.prbqstus,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfdt,
                                                                g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt  
     FROM prbq_t
    WHERE prbqent = g_enterprise AND prbqdocno = g_prbq_m.prbqdocno
   DISPLAY BY NAME g_prbq_m.prbqstus,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbqcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_prbq_m.prbqcnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbq_m.prbqcnfid_desc   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbq_m.prbqmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_prbq_m.prbqmodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbq_m.prbqmodid_desc
   IF g_prbq_m.prbqstus NOT MATCHES "[DNR]" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", true)    
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT prbqstus INTO g_prbq_m.prbqstus FROM prbq_t WHERE prbqdocno = g_prbq_m.prbqdocno
            AND prbqent = g_enterprise         
         CALL s_aprt132_conf_chk(g_prbq_m.prbqdocno,g_prbq_m.prbqstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt132_conf_upd(g_prbq_m.prbqdocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_prbq_m.prbqdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            RETURN            
         END IF
                
      WHEN 'N'
         SELECT prbqstus INTO g_prbq_m.prbqstus FROM prbq_t WHERE prbqdocno = g_prbq_m.prbqdocno
            AND prbqent = g_enterprise 
         CALL s_aprt132_unconf_chk(g_prbq_m.prbqdocno,g_prbq_m.prbqstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt132_unconf_upd(g_prbq_m.prbqdocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_prbq_m.prbqdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            RETURN    
         END IF 
      WHEN 'X'
         SELECT prbqstus INTO g_prbq_m.prbqstus FROM prbq_t WHERE prbqdocno = g_prbq_m.prbqdocno
            AND prbqent = g_enterprise  
         CALL s_aprt132_void_chk(g_prbq_m.prbqdocno,g_prbq_m.prbqstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt132_void_upd(g_prbq_m.prbqdocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_prbq_m.prbqdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE 
            RETURN    
         END IF        
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_prbq_m.prbqstus = 'X' THEN
      RETURN
   END IF
   IF g_prbq_m.prbqstus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("invalid,unconfirmed,confirmed", true)
#      IF g_prbq_m.prbqstus <> 'N' THEN
#         CALL cl_set_act_visible("unconfirmed", true)
#      ELSE
#         CALL cl_set_act_visible("unconfirmed", FALSE)
#         CALL cl_set_act_visible("invalid,confirmed", true)            
#      END IF
#      IF g_prbq_m.prbqstus = 'Y' THEN
#         CALL cl_set_act_visible("unconfirmed", TRUE)
#         CALL cl_set_act_visible("confirmed,invalid", FALSE)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prbq_m.prbqstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success like type_t.num5]]>
  </point>
  <section id="aprt132.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aprt132_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.b_fill" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt132_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_prbr_d.clear()    #g_prbr_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt132_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE prbrseq,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006,prbr007, 
             prbr008,prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite,prbrunit ,t1.oocal003 , 
             t2.oocql004 FROM prbr_t",   
                     " INNER JOIN prbq_t ON prbqdocno = prbrdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocal_t t1 ON t1.oocalent='"||g_enterprise||"' AND t1.oocal001=prbr004 AND t1.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2098' AND t2.oocql002=prbr014 AND t2.oocql003='"||g_dlang||"' ",
 
                     " WHERE prbrent=? AND prbrdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY prbr_t.prbrseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aprt132_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aprt132_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prbq_m.prbqdocno
                                               
      FOREACH b_fill_cs INTO g_prbr_d[l_ac].prbrseq,g_prbr_d[l_ac].prbr001,g_prbr_d[l_ac].prbr002,g_prbr_d[l_ac].prbr003, 
          g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr005,g_prbr_d[l_ac].prbr006,g_prbr_d[l_ac].prbr007, 
          g_prbr_d[l_ac].prbr008,g_prbr_d[l_ac].prbr009,g_prbr_d[l_ac].prbr010,g_prbr_d[l_ac].prbr011, 
          g_prbr_d[l_ac].prbr012,g_prbr_d[l_ac].prbr013,g_prbr_d[l_ac].prbr014,g_prbr_d[l_ac].prbr015, 
          g_prbr_d[l_ac].prbrsite,g_prbr_d[l_ac].prbrunit,g_prbr_d[l_ac].prbr004_desc,g_prbr_d[l_ac].prbr014_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prbr_d.deleteElement(g_prbr_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt132_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_prbr_d.getLength()
      LET g_prbr_d_mask_o[l_ac].* =  g_prbr_d[l_ac].*
      CALL aprt132_prbr_t_mask()
      LET g_prbr_d_mask_n[l_ac].* =  g_prbr_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt132_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt132_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.browser_fill" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt132_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prbqdocno ",
                      " FROM prbq_t ",
                      " ",
                      " LEFT JOIN prbr_t ON prbrent = prbqent AND prbqdocno = prbrdocno ", "  ",
                      #add-point:browser_fill段sql(prbr_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE prbqent = '" ||g_enterprise|| "' AND prbrent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prbq_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prbqdocno ",
                      " FROM prbq_t ", 
                      "  ",
                      "  ",
                      " WHERE prbqent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prbq_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_prbq_m.* TO NULL
      CALL g_prbr_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.prbqsite,t0.prbqdocdt,t0.prbqdocno,t0.prbq001,t0.prbq002,t0.prbq003,t0.prbq004,t0.prbq005,t0.prbq006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.prbqstus,t0.prbqsite,t0.prbqdocdt,t0.prbqdocno,t0.prbq001,t0.prbq002, 
       t0.prbq003,t0.prbq004,t0.prbq005,t0.prbq006,t1.ooefl003 ,t2.rtaxl003 ,t3.ooag011 ,t4.ooefl003 ", 

               " FROM prbq_t t0",
               "  ",
               "  LEFT JOIN prbr_t ON prbrent = prbqent AND prbqdocno = prbrdocno ", "  ", 
               #add-point:browser_fill段sql(prbr_t1)
               {<point name="browser_fill.join.prbr_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.prbqsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent='"||g_enterprise||"' AND t2.rtaxl001=t0.prbq001 AND t2.rtaxl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.prbq004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.prbq005 AND t4.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.prbqent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prbq_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY prbqdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"prbq_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prbqsite,g_browser[g_cnt].b_prbqdocdt, 
       g_browser[g_cnt].b_prbqdocno,g_browser[g_cnt].b_prbq001,g_browser[g_cnt].b_prbq002,g_browser[g_cnt].b_prbq003, 
       g_browser[g_cnt].b_prbq004,g_browser[g_cnt].b_prbq005,g_browser[g_cnt].b_prbq006,g_browser[g_cnt].b_prbqsite_desc, 
       g_browser[g_cnt].b_prbq001_desc,g_browser[g_cnt].b_prbq004_desc,g_browser[g_cnt].b_prbq005_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aprt132_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_prbqdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.construct" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt132_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prbq_m.* TO NULL
   CALL g_prbr_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prbqsite,prbqdocdt,prbqdocno,prbq001,prbq002,prbq003,prbq004,prbq005, 
          prbq006,prbqunit,prbqstus,prbqownid,prbqowndp,prbqcrtid,prbqcrtdp,prbqcrtdt,prbqmodid,prbqmoddt, 
          prbqcnfid,prbqcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<prbqcrtdt>>----
         AFTER FIELD prbqcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<prbqmoddt>>----
         AFTER FIELD prbqmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbqcnfdt>>----
         AFTER FIELD prbqcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbqpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prbqsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqsite
            #add-point:ON ACTION controlp INFIELD prbqsite
            {<point name="construct.c.prbqsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqsite
            #add-point:BEFORE FIELD prbqsite
            {<point name="construct.b.prbqsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqsite
            
            #add-point:AFTER FIELD prbqsite
            {<point name="construct.a.prbqsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqdocdt
            #add-point:BEFORE FIELD prbqdocdt
            {<point name="construct.b.prbqdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqdocdt
            
            #add-point:AFTER FIELD prbqdocdt
            {<point name="construct.a.prbqdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqdocdt
            #add-point:ON ACTION controlp INFIELD prbqdocdt
            {<point name="construct.c.prbqdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbqdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqdocno
            #add-point:ON ACTION controlp INFIELD prbqdocno
            {<point name="construct.c.prbqdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqdocno
            #add-point:BEFORE FIELD prbqdocno
            {<point name="construct.b.prbqdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqdocno
            
            #add-point:AFTER FIELD prbqdocno
            {<point name="construct.a.prbqdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq001
            #add-point:ON ACTION controlp INFIELD prbq001
            {<point name="construct.c.prbq001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq001
            #add-point:BEFORE FIELD prbq001
            {<point name="construct.b.prbq001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq001
            
            #add-point:AFTER FIELD prbq001
            {<point name="construct.a.prbq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq002
            #add-point:BEFORE FIELD prbq002
            {<point name="construct.b.prbq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq002
            
            #add-point:AFTER FIELD prbq002
            {<point name="construct.a.prbq002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq002
            #add-point:ON ACTION controlp INFIELD prbq002
            {<point name="construct.c.prbq002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq003
            #add-point:BEFORE FIELD prbq003
            {<point name="construct.b.prbq003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq003
            
            #add-point:AFTER FIELD prbq003
            {<point name="construct.a.prbq003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq003
            #add-point:ON ACTION controlp INFIELD prbq003
            {<point name="construct.c.prbq003" />}
            #END add-point
 
         #Ctrlp:construct.c.prbq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq004
            #add-point:ON ACTION controlp INFIELD prbq004
            {<point name="construct.c.prbq004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq004
            #add-point:BEFORE FIELD prbq004
            {<point name="construct.b.prbq004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq004
            
            #add-point:AFTER FIELD prbq004
            {<point name="construct.a.prbq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbq005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq005
            #add-point:ON ACTION controlp INFIELD prbq005
            {<point name="construct.c.prbq005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq005
            #add-point:BEFORE FIELD prbq005
            {<point name="construct.b.prbq005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq005
            
            #add-point:AFTER FIELD prbq005
            {<point name="construct.a.prbq005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq006
            #add-point:BEFORE FIELD prbq006
            {<point name="construct.b.prbq006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq006
            
            #add-point:AFTER FIELD prbq006
            {<point name="construct.a.prbq006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbq006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq006
            #add-point:ON ACTION controlp INFIELD prbq006
            {<point name="construct.c.prbq006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqunit
            #add-point:BEFORE FIELD prbqunit
            {<point name="construct.b.prbqunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqunit
            
            #add-point:AFTER FIELD prbqunit
            {<point name="construct.a.prbqunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqunit
            #add-point:ON ACTION controlp INFIELD prbqunit
            {<point name="construct.c.prbqunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqstus
            #add-point:BEFORE FIELD prbqstus
            {<point name="construct.b.prbqstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqstus
            
            #add-point:AFTER FIELD prbqstus
            {<point name="construct.a.prbqstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqstus
            #add-point:ON ACTION controlp INFIELD prbqstus
            {<point name="construct.c.prbqstus" />}
            #END add-point
 
         #Ctrlp:construct.c.prbqownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqownid
            #add-point:ON ACTION controlp INFIELD prbqownid
            {<point name="construct.c.prbqownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqownid
            #add-point:BEFORE FIELD prbqownid
            {<point name="construct.b.prbqownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqownid
            
            #add-point:AFTER FIELD prbqownid
            {<point name="construct.a.prbqownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqowndp
            #add-point:ON ACTION controlp INFIELD prbqowndp
            {<point name="construct.c.prbqowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqowndp
            #add-point:BEFORE FIELD prbqowndp
            {<point name="construct.b.prbqowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqowndp
            
            #add-point:AFTER FIELD prbqowndp
            {<point name="construct.a.prbqowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqcrtid
            #add-point:ON ACTION controlp INFIELD prbqcrtid
            {<point name="construct.c.prbqcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqcrtid
            #add-point:BEFORE FIELD prbqcrtid
            {<point name="construct.b.prbqcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqcrtid
            
            #add-point:AFTER FIELD prbqcrtid
            {<point name="construct.a.prbqcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbqcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqcrtdp
            #add-point:ON ACTION controlp INFIELD prbqcrtdp
            {<point name="construct.c.prbqcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqcrtdp
            #add-point:BEFORE FIELD prbqcrtdp
            {<point name="construct.b.prbqcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqcrtdp
            
            #add-point:AFTER FIELD prbqcrtdp
            {<point name="construct.a.prbqcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqcrtdt
            #add-point:BEFORE FIELD prbqcrtdt
            {<point name="construct.b.prbqcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbqmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqmodid
            #add-point:ON ACTION controlp INFIELD prbqmodid
            {<point name="construct.c.prbqmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqmodid
            #add-point:BEFORE FIELD prbqmodid
            {<point name="construct.b.prbqmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqmodid
            
            #add-point:AFTER FIELD prbqmodid
            {<point name="construct.a.prbqmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqmoddt
            #add-point:BEFORE FIELD prbqmoddt
            {<point name="construct.b.prbqmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbqcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqcnfid
            #add-point:ON ACTION controlp INFIELD prbqcnfid
            {<point name="construct.c.prbqcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqcnfid
            #add-point:BEFORE FIELD prbqcnfid
            {<point name="construct.b.prbqcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqcnfid
            
            #add-point:AFTER FIELD prbqcnfid
            {<point name="construct.a.prbqcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqcnfdt
            #add-point:BEFORE FIELD prbqcnfdt
            {<point name="construct.b.prbqcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prbrseq,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006,prbr007,prbr008, 
          prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite,prbrunit
           FROM s_detail1[1].prbrseq,s_detail1[1].prbr001,s_detail1[1].prbr002,s_detail1[1].prbr003, 
               s_detail1[1].prbr004,s_detail1[1].prbr005,s_detail1[1].prbr006,s_detail1[1].prbr007,s_detail1[1].prbr008, 
               s_detail1[1].prbr009,s_detail1[1].prbr010,s_detail1[1].prbr011,s_detail1[1].prbr012,s_detail1[1].prbr013, 
               s_detail1[1].prbr014,s_detail1[1].prbr015,s_detail1[1].prbrsite,s_detail1[1].prbrunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrseq
            #add-point:BEFORE FIELD prbrseq
            {<point name="construct.b.page1.prbrseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrseq
            
            #add-point:AFTER FIELD prbrseq
            {<point name="construct.a.page1.prbrseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbrseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrseq
            #add-point:ON ACTION controlp INFIELD prbrseq
            {<point name="construct.c.page1.prbrseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.prbr001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr001
            #add-point:ON ACTION controlp INFIELD prbr001
            {<point name="construct.c.page1.prbr001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr001
            #add-point:BEFORE FIELD prbr001
            {<point name="construct.b.page1.prbr001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr001
            
            #add-point:AFTER FIELD prbr001
            {<point name="construct.a.page1.prbr001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr002
            #add-point:ON ACTION controlp INFIELD prbr002
            {<point name="construct.c.page1.prbr002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr002
            #add-point:BEFORE FIELD prbr002
            {<point name="construct.b.page1.prbr002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr002
            
            #add-point:AFTER FIELD prbr002
            {<point name="construct.a.page1.prbr002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr003
            #add-point:BEFORE FIELD prbr003
            {<point name="construct.b.page1.prbr003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr003
            
            #add-point:AFTER FIELD prbr003
            {<point name="construct.a.page1.prbr003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr003
            #add-point:ON ACTION controlp INFIELD prbr003
            {<point name="construct.c.page1.prbr003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.prbr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr004
            #add-point:ON ACTION controlp INFIELD prbr004
            {<point name="construct.c.page1.prbr004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr004
            #add-point:BEFORE FIELD prbr004
            {<point name="construct.b.page1.prbr004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr004
            
            #add-point:AFTER FIELD prbr004
            {<point name="construct.a.page1.prbr004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr005
            #add-point:BEFORE FIELD prbr005
            {<point name="construct.b.page1.prbr005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr005
            
            #add-point:AFTER FIELD prbr005
            {<point name="construct.a.page1.prbr005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr005
            #add-point:ON ACTION controlp INFIELD prbr005
            {<point name="construct.c.page1.prbr005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr006
            #add-point:BEFORE FIELD prbr006
            {<point name="construct.b.page1.prbr006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr006
            
            #add-point:AFTER FIELD prbr006
            {<point name="construct.a.page1.prbr006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr006
            #add-point:ON ACTION controlp INFIELD prbr006
            {<point name="construct.c.page1.prbr006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr007
            #add-point:BEFORE FIELD prbr007
            {<point name="construct.b.page1.prbr007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr007
            
            #add-point:AFTER FIELD prbr007
            {<point name="construct.a.page1.prbr007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr007
            #add-point:ON ACTION controlp INFIELD prbr007
            {<point name="construct.c.page1.prbr007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr008
            #add-point:BEFORE FIELD prbr008
            {<point name="construct.b.page1.prbr008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr008
            
            #add-point:AFTER FIELD prbr008
            {<point name="construct.a.page1.prbr008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr008
            #add-point:ON ACTION controlp INFIELD prbr008
            {<point name="construct.c.page1.prbr008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr009
            #add-point:BEFORE FIELD prbr009
            {<point name="construct.b.page1.prbr009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr009
            
            #add-point:AFTER FIELD prbr009
            {<point name="construct.a.page1.prbr009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr009
            #add-point:ON ACTION controlp INFIELD prbr009
            {<point name="construct.c.page1.prbr009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr010
            #add-point:BEFORE FIELD prbr010
            {<point name="construct.b.page1.prbr010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr010
            
            #add-point:AFTER FIELD prbr010
            {<point name="construct.a.page1.prbr010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr010
            #add-point:ON ACTION controlp INFIELD prbr010
            {<point name="construct.c.page1.prbr010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr011
            #add-point:BEFORE FIELD prbr011
            {<point name="construct.b.page1.prbr011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr011
            
            #add-point:AFTER FIELD prbr011
            {<point name="construct.a.page1.prbr011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr011
            #add-point:ON ACTION controlp INFIELD prbr011
            {<point name="construct.c.page1.prbr011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr012
            #add-point:BEFORE FIELD prbr012
            {<point name="construct.b.page1.prbr012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr012
            
            #add-point:AFTER FIELD prbr012
            {<point name="construct.a.page1.prbr012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr012
            #add-point:ON ACTION controlp INFIELD prbr012
            {<point name="construct.c.page1.prbr012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr013
            #add-point:BEFORE FIELD prbr013
            {<point name="construct.b.page1.prbr013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr013
            
            #add-point:AFTER FIELD prbr013
            {<point name="construct.a.page1.prbr013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr013
            #add-point:ON ACTION controlp INFIELD prbr013
            {<point name="construct.c.page1.prbr013" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.prbr014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr014
            #add-point:ON ACTION controlp INFIELD prbr014
            {<point name="construct.c.page1.prbr014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr014
            #add-point:BEFORE FIELD prbr014
            {<point name="construct.b.page1.prbr014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr014
            
            #add-point:AFTER FIELD prbr014
            {<point name="construct.a.page1.prbr014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr015
            #add-point:BEFORE FIELD prbr015
            {<point name="construct.b.page1.prbr015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr015
            
            #add-point:AFTER FIELD prbr015
            {<point name="construct.a.page1.prbr015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbr015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr015
            #add-point:ON ACTION controlp INFIELD prbr015
            {<point name="construct.c.page1.prbr015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrsite
            #add-point:BEFORE FIELD prbrsite
            {<point name="construct.b.page1.prbrsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrsite
            
            #add-point:AFTER FIELD prbrsite
            {<point name="construct.a.page1.prbrsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrsite
            #add-point:ON ACTION controlp INFIELD prbrsite
            {<point name="construct.c.page1.prbrsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrunit
            #add-point:BEFORE FIELD prbrunit
            {<point name="construct.b.page1.prbrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrunit
            
            #add-point:AFTER FIELD prbrunit
            {<point name="construct.a.page1.prbrunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prbrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrunit
            #add-point:ON ACTION controlp INFIELD prbrunit
            {<point name="construct.c.page1.prbrunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "prbq_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "prbr_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.default_search" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt132_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prbqdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "prbq_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "prbr_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.delete" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt132_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_prbq_m.prbqdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aprt132_cl USING g_enterprise,g_prbq_m.prbqdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aprt132_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aprt132_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_prbq_m_mask_o.* =  g_prbq_m.*
   CALL aprt132_prbq_t_mask()
   LET g_prbq_m_mask_n.* =  g_prbq_m.*
   
   CALL aprt132_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aprt132_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
 
      DELETE FROM prbq_t
       WHERE prbqent = g_enterprise AND prbqdocno = g_prbq_m.prbqdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_prbq_m.prbqdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prbr_t
       WHERE prbrent = g_enterprise AND prbrdocno = g_prbq_m.prbqdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "prbr_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aprt132_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_prbr_d.clear() 
 
     
      CALL aprt132_ui_browser_refresh()  
      #CALL aprt132_ui_headershow()  
      #CALL aprt132_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aprt132_browser_fill("")
         CALL aprt132_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aprt132_cl
 
   #功能已完成,通報訊息中心
   CALL aprt132_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aprt132.delete_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt132_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prbr_t
       WHERE prbrent = g_enterprise AND
         prbrdocno = ps_keys_bak[1] AND prbrseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_prbr_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.description" ver="66" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-000139
#+ 
#+ Filename...: aprt132
#+ Description: 門店商品削價維護作業
#+ Creator....: 02296(2014-03-18 18:39:14)
#+ Modifier...: 06189(2015-07-01 13:46:21) -SD/PR-
]]>
  </section>
  <section id="aprt132.detail_reproduce" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt132_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prbr_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt132_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt132_detail AS ",
                "SELECT * FROM prbr_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt132_detail SELECT * FROM prbr_t 
                                         WHERE prbrent = g_enterprise AND prbrdocno = g_prbqdocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt132_detail 
      #更新key欄位
      SET prbrdocno = g_prbq_m.prbqdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO prbr_t SELECT * FROM aprt132_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt132_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.detail_show" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt132_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.fetch" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt132_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prbq_m.prbqdocno = g_browser[g_current_idx].b_prbqdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
   
   #遮罩相關處理
   LET g_prbq_m_mask_o.* =  g_prbq_m.*
   CALL aprt132_prbq_t_mask()
   LET g_prbq_m_mask_n.* =  g_prbq_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aprt132_set_act_visible()   
   CALL aprt132_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_prbq_m_t.* = g_prbq_m.*
   LET g_prbq_m_o.* = g_prbq_m.*
   
   LET g_data_owner = g_prbq_m.prbqownid      
   LET g_data_dept  = g_prbq_m.prbqowndp
   
   #重新顯示   
   CALL aprt132_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt132_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.filter" ver="8" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aprt132_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prbqsite,prbqdocdt,prbqdocno,prbq001,prbq002,prbq003,prbq004,prbq005, 
          prbq006
                          FROM s_browse[1].b_prbqsite,s_browse[1].b_prbqdocdt,s_browse[1].b_prbqdocno, 
                              s_browse[1].b_prbq001,s_browse[1].b_prbq002,s_browse[1].b_prbq003,s_browse[1].b_prbq004, 
                              s_browse[1].b_prbq005,s_browse[1].b_prbq006
 
         BEFORE CONSTRUCT
               DISPLAY aprt132_filter_parser('prbqsite') TO s_browse[1].b_prbqsite
            DISPLAY aprt132_filter_parser('prbqdocdt') TO s_browse[1].b_prbqdocdt
            DISPLAY aprt132_filter_parser('prbqdocno') TO s_browse[1].b_prbqdocno
            DISPLAY aprt132_filter_parser('prbq001') TO s_browse[1].b_prbq001
            DISPLAY aprt132_filter_parser('prbq002') TO s_browse[1].b_prbq002
            DISPLAY aprt132_filter_parser('prbq003') TO s_browse[1].b_prbq003
            DISPLAY aprt132_filter_parser('prbq004') TO s_browse[1].b_prbq004
            DISPLAY aprt132_filter_parser('prbq005') TO s_browse[1].b_prbq005
            DISPLAY aprt132_filter_parser('prbq006') TO s_browse[1].b_prbq006
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt132_filter_show('prbqsite')
   CALL aprt132_filter_show('prbqdocdt')
   CALL aprt132_filter_show('prbqdocno')
   CALL aprt132_filter_show('prbq001')
   CALL aprt132_filter_show('prbq002')
   CALL aprt132_filter_show('prbq003')
   CALL aprt132_filter_show('prbq004')
   CALL aprt132_filter_show('prbq005')
   CALL aprt132_filter_show('prbq006')
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt132_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt132_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt132_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.global" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prbq_m        RECORD
       prbqsite LIKE prbq_t.prbqsite, 
   prbqsite_desc LIKE type_t.chr80, 
   prbqdocdt LIKE prbq_t.prbqdocdt, 
   prbqdocno LIKE prbq_t.prbqdocno, 
   prbq001 LIKE prbq_t.prbq001, 
   prbq001_desc LIKE type_t.chr80, 
   prbq002 LIKE prbq_t.prbq002, 
   prbq003 LIKE prbq_t.prbq003, 
   prbq004 LIKE prbq_t.prbq004, 
   prbq004_desc LIKE type_t.chr80, 
   prbq005 LIKE prbq_t.prbq005, 
   prbq005_desc LIKE type_t.chr80, 
   prbq006 LIKE prbq_t.prbq006, 
   prbqunit LIKE prbq_t.prbqunit, 
   prbqstus LIKE prbq_t.prbqstus, 
   prbqownid LIKE prbq_t.prbqownid, 
   prbqownid_desc LIKE type_t.chr80, 
   prbqowndp LIKE prbq_t.prbqowndp, 
   prbqowndp_desc LIKE type_t.chr80, 
   prbqcrtid LIKE prbq_t.prbqcrtid, 
   prbqcrtid_desc LIKE type_t.chr80, 
   prbqcrtdp LIKE prbq_t.prbqcrtdp, 
   prbqcrtdp_desc LIKE type_t.chr80, 
   prbqcrtdt LIKE prbq_t.prbqcrtdt, 
   prbqmodid LIKE prbq_t.prbqmodid, 
   prbqmodid_desc LIKE type_t.chr80, 
   prbqmoddt LIKE prbq_t.prbqmoddt, 
   prbqcnfid LIKE prbq_t.prbqcnfid, 
   prbqcnfid_desc LIKE type_t.chr80, 
   prbqcnfdt LIKE prbq_t.prbqcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prbr_d        RECORD
       prbrseq LIKE prbr_t.prbrseq, 
   prbr001 LIKE prbr_t.prbr001, 
   prbr002 LIKE prbr_t.prbr002, 
   prbr003 LIKE prbr_t.prbr003, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   imaa009_desc LIKE type_t.chr500, 
   prbr004 LIKE prbr_t.prbr004, 
   prbr004_desc LIKE type_t.chr500, 
   prbr005 LIKE prbr_t.prbr005, 
   prbr006 LIKE prbr_t.prbr006, 
   prbr007 LIKE prbr_t.prbr007, 
   prbr008 LIKE prbr_t.prbr008, 
   prbr009 LIKE prbr_t.prbr009, 
   prbr010 LIKE prbr_t.prbr010, 
   prbr011 LIKE prbr_t.prbr011, 
   prbr012 LIKE prbr_t.prbr012, 
   prbr013 LIKE prbr_t.prbr013, 
   prbr014 LIKE prbr_t.prbr014, 
   prbr014_desc LIKE type_t.chr500, 
   prbr015 LIKE prbr_t.prbr015, 
   prbrsite LIKE prbr_t.prbrsite, 
   prbrunit LIKE prbr_t.prbrunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_prbqsite LIKE prbq_t.prbqsite,
   b_prbqsite_desc LIKE type_t.chr80,
      b_prbqdocdt LIKE prbq_t.prbqdocdt,
      b_prbqdocno LIKE prbq_t.prbqdocno,
      b_prbq001 LIKE prbq_t.prbq001,
   b_prbq001_desc LIKE type_t.chr80,
      b_prbq002 LIKE prbq_t.prbq002,
      b_prbq003 LIKE prbq_t.prbq003,
      b_prbq004 LIKE prbq_t.prbq004,
   b_prbq004_desc LIKE type_t.chr80,
      b_prbq005 LIKE prbq_t.prbq005,
   b_prbq005_desc LIKE type_t.chr80,
      b_prbq006 LIKE prbq_t.prbq006
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_prbq_m          type_g_prbq_m
DEFINE g_prbq_m_t        type_g_prbq_m
DEFINE g_prbq_m_o        type_g_prbq_m
DEFINE g_prbq_m_mask_o   type_g_prbq_m #轉換遮罩前資料
DEFINE g_prbq_m_mask_n   type_g_prbq_m #轉換遮罩後資料
 
   DEFINE g_prbqdocno_t LIKE prbq_t.prbqdocno
 
 
DEFINE g_prbr_d          DYNAMIC ARRAY OF type_g_prbr_d
DEFINE g_prbr_d_t        type_g_prbr_d
DEFINE g_prbr_d_o        type_g_prbr_d
DEFINE g_prbr_d_mask_o   DYNAMIC ARRAY OF type_g_prbr_d #轉換遮罩前資料
DEFINE g_prbr_d_mask_n   DYNAMIC ARRAY OF type_g_prbr_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprt132.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aprt132_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prbr_d.getLength() THEN
         LET g_detail_idx = g_prbr_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prbr_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prbr_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.init" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt132_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('prbqstus','13','N,Y,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aprt132_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprt132.input" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt132_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001, 
       g_prbq_m.prbq001_desc,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq004_desc, 
       g_prbq_m.prbq005,g_prbq_m.prbq005_desc,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtid_desc, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmodid_desc, 
       g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfid_desc,g_prbq_m.prbqcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prbrseq,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006,prbr007,prbr008, 
       prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite,prbrunit FROM prbr_t WHERE prbrent=?  
       AND prbrdocno=? AND prbrseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt132_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt132_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt132_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002, 
       g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aprt132.input.body" ver="21" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prbr_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prbr_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt132_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_prbr_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt132_cl USING g_enterprise,g_prbq_m.prbqdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aprt132_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aprt132_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prbr_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prbr_d[l_ac].prbrseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prbr_d_t.* = g_prbr_d[l_ac].*  #BACKUP
               LET g_prbr_d_o.* = g_prbr_d[l_ac].*  #BACKUP
               CALL aprt132_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt132_set_no_entry_b(l_cmd)
               IF NOT aprt132_lock_b("prbr_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt132_bcl INTO g_prbr_d[l_ac].prbrseq,g_prbr_d[l_ac].prbr001,g_prbr_d[l_ac].prbr002, 
                      g_prbr_d[l_ac].prbr003,g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr005,g_prbr_d[l_ac].prbr006, 
                      g_prbr_d[l_ac].prbr007,g_prbr_d[l_ac].prbr008,g_prbr_d[l_ac].prbr009,g_prbr_d[l_ac].prbr010, 
                      g_prbr_d[l_ac].prbr011,g_prbr_d[l_ac].prbr012,g_prbr_d[l_ac].prbr013,g_prbr_d[l_ac].prbr014, 
                      g_prbr_d[l_ac].prbr015,g_prbr_d[l_ac].prbrsite,g_prbr_d[l_ac].prbrunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_prbr_d_t.prbrseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_prbr_d_mask_o[l_ac].* =  g_prbr_d[l_ac].*
                  CALL aprt132_prbr_t_mask()
                  LET g_prbr_d_mask_n[l_ac].* =  g_prbr_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aprt132_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prbr_d[l_ac].* TO NULL 
            INITIALIZE g_prbr_d_t.* TO NULL 
            INITIALIZE g_prbr_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_prbr_d[l_ac].prbr005 = "0"
      LET g_prbr_d[l_ac].prbr006 = "0"
      LET g_prbr_d[l_ac].prbr010 = "0"
      LET g_prbr_d[l_ac].prbr011 = "0"
      LET g_prbr_d[l_ac].prbr012 = "0"
      LET g_prbr_d[l_ac].prbr013 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_prbr_d_t.* = g_prbr_d[l_ac].*     #新輸入資料
            LET g_prbr_d_o.* = g_prbr_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt132_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt132_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prbr_d[li_reproduce_target].* = g_prbr_d[li_reproduce].*
 
               LET g_prbr_d[li_reproduce_target].prbrseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prbr_t 
             WHERE prbrent = g_enterprise AND prbrdocno = g_prbq_m.prbqdocno
 
               AND prbrseq = g_prbr_d[l_ac].prbrseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbq_m.prbqdocno
               LET gs_keys[2] = g_prbr_d[g_detail_idx].prbrseq
               CALL aprt132_insert_b('prbr_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_prbr_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "prbr_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt132_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_prbq_m.prbqdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_prbr_d_t.prbrseq
 
            
               #刪除同層單身
               IF NOT aprt132_delete_b('prbr_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aprt132_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aprt132_key_delete_b(gs_keys,'prbr_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aprt132_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aprt132_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_prbr_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_prbr_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_prbr_d[l_ac].prbrseq,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbrseq
            END IF 
 
 
            #add-point:AFTER FIELD prbrseq
            {<point name="input.a.page1.prbrseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrseq
            #add-point:BEFORE FIELD prbrseq
            {<point name="input.b.page1.prbrseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbrseq
            #add-point:ON CHANGE prbrseq
            {<point name="input.g.page1.prbrseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr001
            
            #add-point:AFTER FIELD prbr001
            {<point name="input.a.page1.prbr001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr001
            #add-point:BEFORE FIELD prbr001
            {<point name="input.b.page1.prbr001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr001
            #add-point:ON CHANGE prbr001
            {<point name="input.g.page1.prbr001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr002
            #add-point:BEFORE FIELD prbr002
            {<point name="input.b.page1.prbr002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr002
            
            #add-point:AFTER FIELD prbr002
            {<point name="input.a.page1.prbr002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr002
            #add-point:ON CHANGE prbr002
            {<point name="input.g.page1.prbr002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr003
            #add-point:BEFORE FIELD prbr003
            {<point name="input.b.page1.prbr003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr003
            
            #add-point:AFTER FIELD prbr003
            {<point name="input.a.page1.prbr003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr003
            #add-point:ON CHANGE prbr003
            {<point name="input.g.page1.prbr003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr004
            
            #add-point:AFTER FIELD prbr004
            {<point name="input.a.page1.prbr004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr004
            #add-point:BEFORE FIELD prbr004
            {<point name="input.b.page1.prbr004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr004
            #add-point:ON CHANGE prbr004
            {<point name="input.g.page1.prbr004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr005
            #add-point:BEFORE FIELD prbr005
            {<point name="input.b.page1.prbr005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr005
            
            #add-point:AFTER FIELD prbr005
            {<point name="input.a.page1.prbr005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr005
            #add-point:ON CHANGE prbr005
            {<point name="input.g.page1.prbr005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr006
            #add-point:BEFORE FIELD prbr006
            {<point name="input.b.page1.prbr006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr006
            
            #add-point:AFTER FIELD prbr006
            {<point name="input.a.page1.prbr006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr006
            #add-point:ON CHANGE prbr006
            {<point name="input.g.page1.prbr006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr007
            #add-point:BEFORE FIELD prbr007
            {<point name="input.b.page1.prbr007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr007
            
            #add-point:AFTER FIELD prbr007
            {<point name="input.a.page1.prbr007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr007
            #add-point:ON CHANGE prbr007
            {<point name="input.g.page1.prbr007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr008
            #add-point:BEFORE FIELD prbr008
            {<point name="input.b.page1.prbr008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr008
            
            #add-point:AFTER FIELD prbr008
            {<point name="input.a.page1.prbr008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr008
            #add-point:ON CHANGE prbr008
            {<point name="input.g.page1.prbr008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr009
            #add-point:BEFORE FIELD prbr009
            {<point name="input.b.page1.prbr009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr009
            
            #add-point:AFTER FIELD prbr009
            {<point name="input.a.page1.prbr009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr009
            #add-point:ON CHANGE prbr009
            {<point name="input.g.page1.prbr009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr010
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_prbr_d[l_ac].prbr010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbr010
            END IF 
 
 
            #add-point:AFTER FIELD prbr010
            {<point name="input.a.page1.prbr010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr010
            #add-point:BEFORE FIELD prbr010
            {<point name="input.b.page1.prbr010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr010
            #add-point:ON CHANGE prbr010
            {<point name="input.g.page1.prbr010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr011
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_prbr_d[l_ac].prbr011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbr011
            END IF 
 
 
            #add-point:AFTER FIELD prbr011
            {<point name="input.a.page1.prbr011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr011
            #add-point:BEFORE FIELD prbr011
            {<point name="input.b.page1.prbr011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr011
            #add-point:ON CHANGE prbr011
            {<point name="input.g.page1.prbr011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr012
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_prbr_d[l_ac].prbr012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbr012
            END IF 
 
 
            #add-point:AFTER FIELD prbr012
            {<point name="input.a.page1.prbr012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr012
            #add-point:BEFORE FIELD prbr012
            {<point name="input.b.page1.prbr012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr012
            #add-point:ON CHANGE prbr012
            {<point name="input.g.page1.prbr012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr013
            #add-point:BEFORE FIELD prbr013
            {<point name="input.b.page1.prbr013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr013
            
            #add-point:AFTER FIELD prbr013
            {<point name="input.a.page1.prbr013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr013
            #add-point:ON CHANGE prbr013
            {<point name="input.g.page1.prbr013" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr014
            
            #add-point:AFTER FIELD prbr014
            {<point name="input.a.page1.prbr014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr014
            #add-point:BEFORE FIELD prbr014
            {<point name="input.b.page1.prbr014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr014
            #add-point:ON CHANGE prbr014
            {<point name="input.g.page1.prbr014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbr015
            #add-point:BEFORE FIELD prbr015
            {<point name="input.b.page1.prbr015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbr015
            
            #add-point:AFTER FIELD prbr015
            {<point name="input.a.page1.prbr015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbr015
            #add-point:ON CHANGE prbr015
            {<point name="input.g.page1.prbr015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrsite
            #add-point:BEFORE FIELD prbrsite
            {<point name="input.b.page1.prbrsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrsite
            
            #add-point:AFTER FIELD prbrsite
            {<point name="input.a.page1.prbrsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbrsite
            #add-point:ON CHANGE prbrsite
            {<point name="input.g.page1.prbrsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbrunit
            #add-point:BEFORE FIELD prbrunit
            {<point name="input.b.page1.prbrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbrunit
            
            #add-point:AFTER FIELD prbrunit
            {<point name="input.a.page1.prbrunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbrunit
            #add-point:ON CHANGE prbrunit
            {<point name="input.g.page1.prbrunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.prbrseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrseq
            #add-point:ON ACTION controlp INFIELD prbrseq
            {<point name="input.c.page1.prbrseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr001
            #add-point:ON ACTION controlp INFIELD prbr001
            {<point name="input.c.page1.prbr001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr002
            #add-point:ON ACTION controlp INFIELD prbr002
            {<point name="input.c.page1.prbr002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr003
            #add-point:ON ACTION controlp INFIELD prbr003
            {<point name="input.c.page1.prbr003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr004
            #add-point:ON ACTION controlp INFIELD prbr004
            {<point name="input.c.page1.prbr004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr005
            #add-point:ON ACTION controlp INFIELD prbr005
            {<point name="input.c.page1.prbr005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr006
            #add-point:ON ACTION controlp INFIELD prbr006
            {<point name="input.c.page1.prbr006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr007
            #add-point:ON ACTION controlp INFIELD prbr007
            {<point name="input.c.page1.prbr007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr008
            #add-point:ON ACTION controlp INFIELD prbr008
            {<point name="input.c.page1.prbr008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr009
            #add-point:ON ACTION controlp INFIELD prbr009
            {<point name="input.c.page1.prbr009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr010
            #add-point:ON ACTION controlp INFIELD prbr010
            {<point name="input.c.page1.prbr010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr011
            #add-point:ON ACTION controlp INFIELD prbr011
            {<point name="input.c.page1.prbr011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr012
            #add-point:ON ACTION controlp INFIELD prbr012
            {<point name="input.c.page1.prbr012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr013
            #add-point:ON ACTION controlp INFIELD prbr013
            {<point name="input.c.page1.prbr013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr014
            #add-point:ON ACTION controlp INFIELD prbr014
            {<point name="input.c.page1.prbr014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbr015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbr015
            #add-point:ON ACTION controlp INFIELD prbr015
            {<point name="input.c.page1.prbr015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrsite
            #add-point:ON ACTION controlp INFIELD prbrsite
            {<point name="input.c.page1.prbrsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbrunit
            #add-point:ON ACTION controlp INFIELD prbrunit
            {<point name="input.c.page1.prbrunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_prbr_d[l_ac].* = g_prbr_d_t.*
               CLOSE aprt132_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_prbr_d[l_ac].prbrseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_prbr_d[l_ac].* = g_prbr_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aprt132_prbr_t_mask_restore('restore_mask_o')
      
               UPDATE prbr_t SET (prbrdocno,prbrseq,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006, 
                   prbr007,prbr008,prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite, 
                   prbrunit) = (g_prbq_m.prbqdocno,g_prbr_d[l_ac].prbrseq,g_prbr_d[l_ac].prbr001,g_prbr_d[l_ac].prbr002, 
                   g_prbr_d[l_ac].prbr003,g_prbr_d[l_ac].prbr004,g_prbr_d[l_ac].prbr005,g_prbr_d[l_ac].prbr006, 
                   g_prbr_d[l_ac].prbr007,g_prbr_d[l_ac].prbr008,g_prbr_d[l_ac].prbr009,g_prbr_d[l_ac].prbr010, 
                   g_prbr_d[l_ac].prbr011,g_prbr_d[l_ac].prbr012,g_prbr_d[l_ac].prbr013,g_prbr_d[l_ac].prbr014, 
                   g_prbr_d[l_ac].prbr015,g_prbr_d[l_ac].prbrsite,g_prbr_d[l_ac].prbrunit)
                WHERE prbrent = g_enterprise AND prbrdocno = g_prbq_m.prbqdocno 
 
                  AND prbrseq = g_prbr_d_t.prbrseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "prbr_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_prbr_d[l_ac].* = g_prbr_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "prbr_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_prbr_d[l_ac].* = g_prbr_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbq_m.prbqdocno
               LET gs_keys_bak[1] = g_prbqdocno_t
               LET gs_keys[2] = g_prbr_d[g_detail_idx].prbrseq
               LET gs_keys_bak[2] = g_prbr_d_t.prbrseq
               CALL aprt132_update_b('prbr_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aprt132_prbr_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_prbr_d[g_detail_idx].prbrseq = g_prbr_d_t.prbrseq 
 
                  ) THEN
                  LET gs_keys[01] = g_prbq_m.prbqdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_prbr_d_t.prbrseq
 
                  CALL aprt132_key_update_b(gs_keys,'prbr_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_prbq_m),util.JSON.stringify(g_prbr_d_t)
               LET g_log2 = util.JSON.stringify(g_prbq_m),util.JSON.stringify(g_prbr_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt132_unlock_b("prbr_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prbr_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prbr_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="aprt132.input.head" ver="19" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002, 
          g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aprt132_cl USING g_enterprise,g_prbq_m.prbqdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aprt132_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aprt132_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aprt132_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aprt132_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqsite
            
            #add-point:AFTER FIELD prbqsite
            {<point name="input.a.prbqsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqsite
            #add-point:BEFORE FIELD prbqsite
            {<point name="input.b.prbqsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbqsite
            #add-point:ON CHANGE prbqsite
            {<point name="input.g.prbqsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqdocdt
            #add-point:BEFORE FIELD prbqdocdt
            {<point name="input.b.prbqdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqdocdt
            
            #add-point:AFTER FIELD prbqdocdt
            {<point name="input.a.prbqdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbqdocdt
            #add-point:ON CHANGE prbqdocdt
            {<point name="input.g.prbqdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqdocno
            #add-point:BEFORE FIELD prbqdocno
            {<point name="input.b.prbqdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqdocno
            
            #add-point:AFTER FIELD prbqdocno
            {<point name="input.a.prbqdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbqdocno
            #add-point:ON CHANGE prbqdocno
            {<point name="input.g.prbqdocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq001
            
            #add-point:AFTER FIELD prbq001
            {<point name="input.a.prbq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq001
            #add-point:BEFORE FIELD prbq001
            {<point name="input.b.prbq001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq001
            #add-point:ON CHANGE prbq001
            {<point name="input.g.prbq001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq002
            #add-point:BEFORE FIELD prbq002
            {<point name="input.b.prbq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq002
            
            #add-point:AFTER FIELD prbq002
            {<point name="input.a.prbq002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq002
            #add-point:ON CHANGE prbq002
            {<point name="input.g.prbq002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq003
            #add-point:BEFORE FIELD prbq003
            {<point name="input.b.prbq003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq003
            
            #add-point:AFTER FIELD prbq003
            {<point name="input.a.prbq003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq003
            #add-point:ON CHANGE prbq003
            {<point name="input.g.prbq003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq004
            
            #add-point:AFTER FIELD prbq004
            {<point name="input.a.prbq004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq004
            #add-point:BEFORE FIELD prbq004
            {<point name="input.b.prbq004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq004
            #add-point:ON CHANGE prbq004
            {<point name="input.g.prbq004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq005
            
            #add-point:AFTER FIELD prbq005
            {<point name="input.a.prbq005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq005
            #add-point:BEFORE FIELD prbq005
            {<point name="input.b.prbq005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq005
            #add-point:ON CHANGE prbq005
            {<point name="input.g.prbq005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbq006
            #add-point:BEFORE FIELD prbq006
            {<point name="input.b.prbq006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbq006
            
            #add-point:AFTER FIELD prbq006
            {<point name="input.a.prbq006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbq006
            #add-point:ON CHANGE prbq006
            {<point name="input.g.prbq006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqunit
            #add-point:BEFORE FIELD prbqunit
            {<point name="input.b.prbqunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqunit
            
            #add-point:AFTER FIELD prbqunit
            {<point name="input.a.prbqunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbqunit
            #add-point:ON CHANGE prbqunit
            {<point name="input.g.prbqunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD prbqstus
            #add-point:BEFORE FIELD prbqstus
            {<point name="input.b.prbqstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD prbqstus
            
            #add-point:AFTER FIELD prbqstus
            {<point name="input.a.prbqstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE prbqstus
            #add-point:ON CHANGE prbqstus
            {<point name="input.g.prbqstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.prbqsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqsite
            #add-point:ON ACTION controlp INFIELD prbqsite
            {<point name="input.c.prbqsite" />}
            #END add-point
 
         #Ctrlp:input.c.prbqdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqdocdt
            #add-point:ON ACTION controlp INFIELD prbqdocdt
            {<point name="input.c.prbqdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prbqdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqdocno
            #add-point:ON ACTION controlp INFIELD prbqdocno
            {<point name="input.c.prbqdocno" />}
            #END add-point
 
         #Ctrlp:input.c.prbq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq001
            #add-point:ON ACTION controlp INFIELD prbq001
            {<point name="input.c.prbq001" />}
            #END add-point
 
         #Ctrlp:input.c.prbq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq002
            #add-point:ON ACTION controlp INFIELD prbq002
            {<point name="input.c.prbq002" />}
            #END add-point
 
         #Ctrlp:input.c.prbq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq003
            #add-point:ON ACTION controlp INFIELD prbq003
            {<point name="input.c.prbq003" />}
            #END add-point
 
         #Ctrlp:input.c.prbq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq004
            #add-point:ON ACTION controlp INFIELD prbq004
            {<point name="input.c.prbq004" />}
            #END add-point
 
         #Ctrlp:input.c.prbq005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq005
            #add-point:ON ACTION controlp INFIELD prbq005
            {<point name="input.c.prbq005" />}
            #END add-point
 
         #Ctrlp:input.c.prbq006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbq006
            #add-point:ON ACTION controlp INFIELD prbq006
            {<point name="input.c.prbq006" />}
            #END add-point
 
         #Ctrlp:input.c.prbqunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqunit
            #add-point:ON ACTION controlp INFIELD prbqunit
            {<point name="input.c.prbqunit" />}
            #END add-point
 
         #Ctrlp:input.c.prbqstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD prbqstus
            #add-point:ON ACTION controlp INFIELD prbqstus
            {<point name="input.c.prbqstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_prbq_m.prbqdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prbq_t (prbqent,prbqsite,prbqdocdt,prbqdocno,prbq001,prbq002,prbq003,prbq004, 
                   prbq005,prbq006,prbqunit,prbqstus,prbqownid,prbqowndp,prbqcrtid,prbqcrtdp,prbqcrtdt, 
                   prbqmodid,prbqmoddt,prbqcnfid,prbqcnfdt)
               VALUES (g_enterprise,g_prbq_m.prbqsite,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001, 
                   g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005,g_prbq_m.prbq006, 
                   g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
                   g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
                   g_prbq_m.prbqcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_prbq_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt132_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aprt132_b_fill()
                  CALL aprt132_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aprt132_prbq_t_mask_restore('restore_mask_o')
               
               UPDATE prbq_t SET (prbqsite,prbqdocdt,prbqdocno,prbq001,prbq002,prbq003,prbq004,prbq005, 
                   prbq006,prbqunit,prbqstus,prbqownid,prbqowndp,prbqcrtid,prbqcrtdp,prbqcrtdt,prbqmodid, 
                   prbqmoddt,prbqcnfid,prbqcnfdt) = (g_prbq_m.prbqsite,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno, 
                   g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
                   g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp, 
                   g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt, 
                   g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfdt)
                WHERE prbqent = g_enterprise AND prbqdocno = g_prbqdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "prbq_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aprt132_prbq_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_prbq_m_t)
               LET g_log2 = util.JSON.stringify(g_prbq_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aprt132.input.other" ver="9" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD prbqdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prbrseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.insert" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt132_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prbr_d.clear()   
 
 
   INITIALIZE g_prbq_m.* LIKE prbq_t.*             #DEFAULT 設定
   
   LET g_prbqdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_prbq_m.prbqownid = g_user
      LET g_prbq_m.prbqowndp = g_dept
      LET g_prbq_m.prbqcrtid = g_user
      LET g_prbq_m.prbqcrtdp = g_dept 
      LET g_prbq_m.prbqcrtdt = cl_get_current()
      LET g_prbq_m.prbqmodid = g_user
      LET g_prbq_m.prbqmoddt = cl_get_current()
      LET g_prbq_m.prbqstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_prbq_m_t.* = g_prbq_m.*
      LET g_prbq_m_o.* = g_prbq_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_prbq_m.prbqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aprt132_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_prbq_m.* TO NULL
         INITIALIZE g_prbr_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aprt132_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_prbr_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aprt132_set_act_visible()   
   CALL aprt132_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " prbqent = '" ||g_enterprise|| "' AND",
                      " prbqdocno = '", g_prbq_m.prbqdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aprt132_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aprt132_cl
   
   CALL aprt132_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
   
   #遮罩相關處理
   LET g_prbq_m_mask_o.* =  g_prbq_m.*
   CALL aprt132_prbq_t_mask()
   LET g_prbq_m_mask_n.* =  g_prbq_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001, 
       g_prbq_m.prbq001_desc,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq004_desc, 
       g_prbq_m.prbq005,g_prbq_m.prbq005_desc,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtid_desc, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmodid_desc, 
       g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfid_desc,g_prbq_m.prbqcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aprt132_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt132_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prbr_t
                  (prbrent,
                   prbrdocno,
                   prbrseq
                   ,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006,prbr007,prbr008,prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite,prbrunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prbr_d[g_detail_idx].prbr001,g_prbr_d[g_detail_idx].prbr002,g_prbr_d[g_detail_idx].prbr003, 
                       g_prbr_d[g_detail_idx].prbr004,g_prbr_d[g_detail_idx].prbr005,g_prbr_d[g_detail_idx].prbr006, 
                       g_prbr_d[g_detail_idx].prbr007,g_prbr_d[g_detail_idx].prbr008,g_prbr_d[g_detail_idx].prbr009, 
                       g_prbr_d[g_detail_idx].prbr010,g_prbr_d[g_detail_idx].prbr011,g_prbr_d[g_detail_idx].prbr012, 
                       g_prbr_d[g_detail_idx].prbr013,g_prbr_d[g_detail_idx].prbr014,g_prbr_d[g_detail_idx].prbr015, 
                       g_prbr_d[g_detail_idx].prbrsite,g_prbr_d[g_detail_idx].prbrunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "prbr_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_prbr_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aprt132_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aprt132_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt132_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aprt132_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prbr_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt132_bcl USING g_enterprise,
                                       g_prbq_m.prbqdocno,g_prbr_d[g_detail_idx].prbrseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aprt132_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.main" ver="13" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prbqsite,'',prbqdocdt,prbqdocno,prbq001,'',prbq002,prbq003,prbq004,'', 
       prbq005,'',prbq006,prbqunit,prbqstus,prbqownid,'',prbqowndp,'',prbqcrtid,'',prbqcrtdp,'',prbqcrtdt, 
       prbqmodid,'',prbqmoddt,prbqcnfid,'',prbqcnfdt", 
                      " FROM prbq_t",
                      " WHERE prbqent= ? AND prbqdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt132_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.prbqsite,t0.prbqdocdt,t0.prbqdocno,t0.prbq001,t0.prbq002,t0.prbq003, 
       t0.prbq004,t0.prbq005,t0.prbq006,t0.prbqunit,t0.prbqstus,t0.prbqownid,t0.prbqowndp,t0.prbqcrtid, 
       t0.prbqcrtdp,t0.prbqcrtdt,t0.prbqmodid,t0.prbqmoddt,t0.prbqcnfid,t0.prbqcnfdt,t1.ooefl003 ,t2.rtaxl003 , 
       t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011", 

               " FROM prbq_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.prbqsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent='"||g_enterprise||"' AND t2.rtaxl001=t0.prbq001 AND t2.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.prbq004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.prbq005 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.prbqownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.prbqowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.prbqcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.prbqcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.prbqmodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.prbqcnfid  ",
 
               " WHERE t0.prbqent = '" ||g_enterprise|| "' AND t0.prbqdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt132_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt132 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt132_init()   
 
      #進入選單 Menu (="N")
      CALL aprt132_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt132
      
   END IF 
   
   CLOSE aprt132_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aprt132.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/apr/aprt132_mask.4gl"
]]>
  </section>
  <section id="aprt132.modify" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt132_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_prbq_m_t.* = g_prbq_m.*
   LET g_prbq_m_o.* = g_prbq_m.*
   
   IF g_prbq_m.prbqdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
   CALL s_transaction_begin()
   
   OPEN aprt132_cl USING g_enterprise,g_prbq_m.prbqdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aprt132_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aprt132_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_prbq_m_mask_o.* =  g_prbq_m.*
   CALL aprt132_prbq_t_mask()
   LET g_prbq_m_mask_n.* =  g_prbq_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aprt132_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prbq_m.prbqmodid = g_user 
LET g_prbq_m.prbqmoddt = cl_get_current()
LET g_prbq_m.prbqmodid_desc = cl_get_username(g_prbq_m.prbqmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aprt132_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE prbq_t SET (prbqmodid,prbqmoddt) = (g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt)
          WHERE prbqent = g_enterprise AND prbqdocno = g_prbqdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prbq_m.* = g_prbq_m_t.*
         CALL aprt132_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_prbq_m.prbqdocno != g_prbqdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prbr_t SET prbrdocno = g_prbq_m.prbqdocno
 
          WHERE prbrent = g_enterprise AND prbrdocno = g_prbqdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "prbr_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "prbr_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aprt132_set_act_visible()   
   CALL aprt132_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " prbqent = '" ||g_enterprise|| "' AND",
                      " prbqdocno = '", g_prbq_m.prbqdocno, "' "
 
   #填到對應位置
   CALL aprt132_browser_fill("")
 
   CLOSE aprt132_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aprt132_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aprt132.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aprt132_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aprt132_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_prbq_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt132.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aprt132.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aprt132.query" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt132_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prbr_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aprt132_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt132_browser_fill("")
      CALL aprt132_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt132_filter_show('prbqsite')
   CALL aprt132_filter_show('prbqdocdt')
   CALL aprt132_filter_show('prbqdocno')
   CALL aprt132_filter_show('prbq001')
   CALL aprt132_filter_show('prbq002')
   CALL aprt132_filter_show('prbq003')
   CALL aprt132_filter_show('prbq004')
   CALL aprt132_filter_show('prbq005')
   CALL aprt132_filter_show('prbq006')
   CALL aprt132_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aprt132_fetch("F") 
      #顯示單身筆數
      CALL aprt132_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.reproduce" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt132_reproduce()
   DEFINE l_newno     LIKE prbq_t.prbqdocno 
   DEFINE l_oldno     LIKE prbq_t.prbqdocno 
 
   DEFINE l_master    RECORD LIKE prbq_t.*
   DEFINE l_detail    RECORD LIKE prbr_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_prbq_m.prbqdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
    
   LET g_prbq_m.prbqdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_prbq_m.prbqownid = g_user
      LET g_prbq_m.prbqowndp = g_dept
      LET g_prbq_m.prbqcrtid = g_user
      LET g_prbq_m.prbqcrtdp = g_dept 
      LET g_prbq_m.prbqcrtdt = cl_get_current()
      LET g_prbq_m.prbqmodid = g_user
      LET g_prbq_m.prbqmoddt = cl_get_current()
      LET g_prbq_m.prbqstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_prbq_m.prbqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL aprt132_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_prbq_m.* TO NULL
      INITIALIZE g_prbr_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aprt132_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aprt132_set_act_visible()   
   CALL aprt132_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_prbqdocno_t = g_prbq_m.prbqdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " prbqent = '" ||g_enterprise|| "' AND",
                      " prbqdocno = '", g_prbq_m.prbqdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aprt132_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aprt132_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aprt132_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aprt132_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aprt132_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aprt132_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aprt132_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt132_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("prbqdocno,prbqdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prbqdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt132_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt132_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prbqdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("prbqdocno,prbqdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt132_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprt132.set_pk_array" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aprt132_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prbq_m.prbqdocno
   LET g_pk_array[1].column = 'prbqdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt132.show" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt132_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aprt132_b_fill() #單身填充
      CALL aprt132_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aprt132_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_prbq_m_mask_o.* =  g_prbq_m.*
   CALL aprt132_prbq_t_mask()
   LET g_prbq_m_mask_n.* =  g_prbq_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001, 
       g_prbq_m.prbq001_desc,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq004_desc, 
       g_prbq_m.prbq005,g_prbq_m.prbq005_desc,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtid_desc, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmodid_desc, 
       g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfid_desc,g_prbq_m.prbqcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_prbq_m.prbqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prbr_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt132_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.signature" ver="9" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION aprt132_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aprt132_show()
   CALL aprt132_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prbq_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prbr_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt132_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt132_ui_headershow()
   CALL aprt132_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION aprt132_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt132_ui_headershow()  
   CALL aprt132_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aprt132.state_change" ver="17" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aprt132_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prbq_m.prbqdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aprt132_cl USING g_enterprise,g_prbq_m.prbqdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aprt132_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
 
   #檢查是否允許此動作
   IF NOT aprt132_action_chk() THEN
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno,g_prbq_m.prbq001, 
       g_prbq_m.prbq001_desc,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq004_desc, 
       g_prbq_m.prbq005,g_prbq_m.prbq005_desc,g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtid_desc, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmodid_desc, 
       g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfid_desc,g_prbq_m.prbqcnfdt
 
   CASE g_prbq_m.prbqstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prbq_m.prbqstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt132_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aprt132_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt132_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aprt132_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_prbq_m.prbqstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aprt132_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_prbq_m.prbqmodid = g_user
   LET g_prbq_m.prbqmoddt = cl_get_current()
   LET g_prbq_m.prbqstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE prbq_t 
      SET (prbqstus,prbqmodid,prbqmoddt) 
        = (g_prbq_m.prbqstus,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt)     
    WHERE prbqent = g_enterprise AND prbqdocno = g_prbq_m.prbqdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
          g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
          g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp, 
          g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt, 
          g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc, 
          g_prbq_m.prbq005_desc,g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc, 
          g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_prbq_m.prbqsite,g_prbq_m.prbqsite_desc,g_prbq_m.prbqdocdt,g_prbq_m.prbqdocno, 
          g_prbq_m.prbq001,g_prbq_m.prbq001_desc,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004, 
          g_prbq_m.prbq004_desc,g_prbq_m.prbq005,g_prbq_m.prbq005_desc,g_prbq_m.prbq006,g_prbq_m.prbqunit, 
          g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp,g_prbq_m.prbqowndp_desc, 
          g_prbq_m.prbqcrtid,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdp_desc,g_prbq_m.prbqcrtdt, 
          g_prbq_m.prbqmodid,g_prbq_m.prbqmodid_desc,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid,g_prbq_m.prbqcnfid_desc, 
          g_prbq_m.prbqcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aprt132_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aprt132_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt132.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aprt132_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aprt132.ui_browser_refresh" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt132_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prbqdocno = g_prbq_m.prbqdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt132_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprt132.ui_dialog" ver="35" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt132_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt132_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_prbq_m.* TO NULL
         CALL g_prbr_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aprt132_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt132_fetch('') # reload data
               LET l_ac = 1
               CALL aprt132_ui_detailshow() #Setting the current row 
         
               CALL aprt132_idx_chk()
               #NEXT FIELD prbrseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_prbr_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aprt132_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aprt132_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aprt132_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt132_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt132_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt132_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt132_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aprt132_set_act_visible()   
            CALL aprt132_set_act_no_visible()
            IF NOT (g_prbq_m.prbqdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " prbqent = '" ||g_enterprise|| "' AND",
                                  " prbqdocno = '", g_prbq_m.prbqdocno, "' "
 
               #填到對應位置
               CALL aprt132_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "prbq_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "prbr_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aprt132_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "prbq_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "prbr_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aprt132_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aprt132_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt132_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aprt132_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt132_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aprt132_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt132_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aprt132_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt132_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aprt132_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt132_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aprt132_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt132_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_prbr_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prbrseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt132_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt132_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt132_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt132_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/apr/aprt132_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aprt132_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt132_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aprt132_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt132_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt132_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prbq_m.prbqdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprt132.ui_headershow" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt132_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_prbq_m.prbqdocno = g_browser[g_current_idx].b_prbqdocno   
 
   EXECUTE aprt132_master_referesh USING g_prbq_m.prbqdocno INTO g_prbq_m.prbqsite,g_prbq_m.prbqdocdt, 
       g_prbq_m.prbqdocno,g_prbq_m.prbq001,g_prbq_m.prbq002,g_prbq_m.prbq003,g_prbq_m.prbq004,g_prbq_m.prbq005, 
       g_prbq_m.prbq006,g_prbq_m.prbqunit,g_prbq_m.prbqstus,g_prbq_m.prbqownid,g_prbq_m.prbqowndp,g_prbq_m.prbqcrtid, 
       g_prbq_m.prbqcrtdp,g_prbq_m.prbqcrtdt,g_prbq_m.prbqmodid,g_prbq_m.prbqmoddt,g_prbq_m.prbqcnfid, 
       g_prbq_m.prbqcnfdt,g_prbq_m.prbqsite_desc,g_prbq_m.prbq001_desc,g_prbq_m.prbq004_desc,g_prbq_m.prbq005_desc, 
       g_prbq_m.prbqownid_desc,g_prbq_m.prbqowndp_desc,g_prbq_m.prbqcrtid_desc,g_prbq_m.prbqcrtdp_desc, 
       g_prbq_m.prbqmodid_desc,g_prbq_m.prbqcnfid_desc
   CALL aprt132_prbq_t_mask()
   CALL aprt132_show()
      
END FUNCTION
]]>
  </section>
  <section id="aprt132.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt132_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt132_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt132.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt132_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prbr_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aprt132_prbr_t_mask_restore('restore_mask_o')
               
      UPDATE prbr_t 
         SET (prbrdocno,
              prbrseq
              ,prbr001,prbr002,prbr003,prbr004,prbr005,prbr006,prbr007,prbr008,prbr009,prbr010,prbr011,prbr012,prbr013,prbr014,prbr015,prbrsite,prbrunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prbr_d[g_detail_idx].prbr001,g_prbr_d[g_detail_idx].prbr002,g_prbr_d[g_detail_idx].prbr003, 
                  g_prbr_d[g_detail_idx].prbr004,g_prbr_d[g_detail_idx].prbr005,g_prbr_d[g_detail_idx].prbr006, 
                  g_prbr_d[g_detail_idx].prbr007,g_prbr_d[g_detail_idx].prbr008,g_prbr_d[g_detail_idx].prbr009, 
                  g_prbr_d[g_detail_idx].prbr010,g_prbr_d[g_detail_idx].prbr011,g_prbr_d[g_detail_idx].prbr012, 
                  g_prbr_d[g_detail_idx].prbr013,g_prbr_d[g_detail_idx].prbr014,g_prbr_d[g_detail_idx].prbr015, 
                  g_prbr_d[g_detail_idx].prbrsite,g_prbr_d[g_detail_idx].prbrunit) 
         WHERE prbrent = g_enterprise AND prbrdocno = ps_keys_bak[1] AND prbrseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "prbr_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "prbr_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aprt132_prbr_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
