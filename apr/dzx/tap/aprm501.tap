<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprm501" std_prog="aprm501" erpver="1.0" module="APR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.aprm501_pmaa_t" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a06產生
PRIVATE FUNCTION aprm501_pmaa_t(ps_type)
 

   DEFINE li_cnt    LIKE type_t.num10
   DEFINE ps_type   STRING  
   DEFINE ls_sql    STRING 
   RETURN   

#   IF ps_type = "s" THEN 
#            LET ls_sql = 'SELECT  FROM pmaa_t WHERE pmaaent= ? AND pmaa001=? ' 
#      DECLARE pmaa_t_cl CURSOR FROM ls_sql 
#      OPEN pmaa_t_cl USING g_enterprise,g_prfc_m.prfc001
#      FETCH pmaa_t_cl INTO g_prfc_m. 
#
#      IF SQLCA.sqlcode THEN
#                  LET g_prfc_m.  = NULL 
#
#      END IF 
#      RETURN 
#   END IF 
#
#      SELECT COUNT(*) INTO li_cnt FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_prfc001_t
#   
#   IF li_cnt = 0 AND ps_type = "u" THEN 
#            INSERT INTO pmaa_t 
#      (pmaaent,pmaa001, )
#      VALUES (g_enterprise,g_prfc_m.prfc001,g_prfc_m. )
#   END IF 
#
#   IF li_cnt > 0 AND ps_type = "u" THEN 
#            UPDATE pmaa_t SET 
#      (pmaa001, ) = 
#      (g_prfc_m.prfc001,g_prfc_m. ) 
#      WHERE pmaaent = g_enterprise AND pmaa001 = g_prfc001_t
#
#   END IF 
#
#   IF li_cnt > 0 AND ps_type = "d" THEN 
#            DELETE FROM pmaa_t
#      WHERE pmaaent = g_enterprise AND pmaa001 = g_prfc001_t
#   END IF 
#
#   IF SQLCA.sqlcode THEN
#      CALL cl_err("",SQLCA.sqlcode,0)
#   END IF 



END FUNCTION]]>
  </point>
  <point name="function.aprm501_prfd004_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfd004
PRIVATE FUNCTION aprm501_prfd004_ref()
DEFINE l_oocq001  LIKE oocq_t.oocq001
   CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         SELECT pmaal003 INTO g_prfd_d[l_ac].prfd004_desc
           FROM pmaal_t WHERE pmaalent = g_enterprise AND pmaal001=g_prfd_d[l_ac].prfd004
            AND pmaal002 = g_dlang
      WHEN '2'
         LET l_oocq001=281
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '3'
         LET l_oocq001=2061
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '4'
         LET l_oocq001=2062
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '5'
         LET l_oocq001=2063
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '6'
         LET l_oocq001=2064
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '7'
         LET l_oocq001=2065
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '8'
         LET l_oocq001=2066
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '9'
         LET l_oocq001=2067
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '10'
         LET l_oocq001=2068
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '11'
         LET l_oocq001=2069
         CALL aprm501_prfd004_display(l_oocq001) 
      WHEN '12'
         LET l_oocq001=2070
         CALL aprm501_prfd004_display(l_oocq001)          
   END CASE 
END FUNCTION]]>
  </point>
  <point name="function.aprm501_prfd004_display" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##display
PRIVATE FUNCTION aprm501_prfd004_display(p_oocq001)
   DEFINE p_oocq001  LIKE oocq_t.oocq001
   SELECT oocql004 INTO g_prfd_d[l_ac].prfd004_desc
     FROM oocql_t 
    WHERE oocqlent=g_enterprise 
      AND oocql001=p_oocq001 AND oocql002=g_prfd_d[l_ac].prfd004 AND oocql003=g_dlang
   
   DISPLAY  g_prfd_d[l_ac].prfd004_desc TO s_detail1[l_ac].prfd004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprm501_create_prfd002" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prfd002
PRIVATE FUNCTION aprm501_create_prfd002()
   SELECT max(prfd002)+1 INTO g_prfd_d[l_ac].prfd002
     FROM prfd_t
    WHERE prfdent = g_enterprise AND prfd001=g_prfc_m.prfc001
   IF cl_null(g_prfd_d[l_ac].prfd002) THEN
      LET g_prfd_d[l_ac].prfd002=1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm501_prfd004" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prfd004
PRIVATE FUNCTION aprm501_prfd004()
   DEFINE l_oocq001  LIKE oocq_t.oocq001
   CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         call aprm501_prfd004_1()
      WHEN '2'
         LET l_oocq001=281
         CALL aprm501_prfd004_2(l_oocq001) 
      WHEN '3'
         LET l_oocq001=2061
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '4'
         LET l_oocq001=2062
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '5'
         LET l_oocq001=2063
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '6'
         LET l_oocq001=2064
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '7'
         LET l_oocq001=2065
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '8'
         LET l_oocq001=2066
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '9'
         LET l_oocq001=2067
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '10'
         LET l_oocq001=2068
         CALL aprm501_prfd004_2(l_oocq001)
      WHEN '11'
         LET l_oocq001=2069
         CALL aprm501_prfd004_2(l_oocq001) 
      WHEN '12'
         LET l_oocq001=2070
         CALL aprm501_prfd004_2(l_oocq001)        
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.aprm501_prfd004_2" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk oocq_t
PRIVATE FUNCTION aprm501_prfd004_2(p_oocq001)
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_cnt1 LIKE type_t.num5
   DEFINE p_oocq001 LIKE oocq_t.oocq001
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   SELECT count(*) INTO l_cnt FROM oocq_t WHERE oocqent = g_enterprise
      AND oocq001=p_oocq001 AND oocq002=g_prfd_d[l_ac].prfd004
   IF l_cnt <=0 THEN
      CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         LET g_errno="apr-00157"
      WHEN '2'
         LET g_errno="apr-00158" 
      WHEN '3'
         LET g_errno="apr-00159"
      WHEN '4'
         LET g_errno="apr-00160"
      WHEN '5'
         LET g_errno="apr-00161"
      WHEN '6'
         LET g_errno="apr-00162"
      WHEN '7'
         LET g_errno="apr-00163"
      WHEN '8'
         LET g_errno="apr-00164"
      WHEN '9'
         LET g_errno="apr-00165"
      WHEN '10'
         LET g_errno="apr-00166"
      WHEN '11'
         LET g_errno="apr-00167"
      WHEN '12'
         LET g_errno="apr-00168"         
      END CASE
   ELSE
     SELECT count(*) INTO l_cnt FROM oocq_t WHERE oocqent = g_enterprise
        AND oocq001=p_oocq001 AND oocq002=g_prfd_d[l_ac].prfd004
        AND oocqstus='Y'
      IF l_cnt <=0 THEN
         CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         LET g_errno="apr-00157"
      WHEN '2'
         LET g_errno="apr-00158" 
      WHEN '3'
         LET g_errno="apr-00159"
      WHEN '4'
         LET g_errno="apr-00160"
      WHEN '5'
         LET g_errno="apr-00161"
      WHEN '6'
         LET g_errno="apr-00162"
      WHEN '7'
         LET g_errno="apr-00163"
      WHEN '8'
         LET g_errno="apr-00164"
      WHEN '9'
         LET g_errno="apr-00165"
      WHEN '10'
         LET g_errno="apr-00166"
      WHEN '11'
         LET g_errno="apr-00167"
      WHEN '12'
         LET g_errno="apr-00168"         
      END CASE
      END IF   
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm501_prfd004_1" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk pmaa_t
PRIVATE FUNCTION aprm501_prfd004_1()
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_cnt1 LIKE type_t.num5
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   SELECT count(*) INTO l_cnt FROM pmaa_t WHERE pmaaent = g_enterprise
      AND pmaa001=g_prfd_d[l_ac].prfd004 AND (pmaa002 ='2' OR pmaa002='3')
   IF l_cnt <=0 THEN
      CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         LET g_errno="apr-00157"
      WHEN '2'
         LET g_errno="apr-00158" 
      WHEN '3'
         LET g_errno="apr-00159"
      WHEN '4'
         LET g_errno="apr-00160"
      WHEN '5'
         LET g_errno="apr-00161"
      WHEN '6'
         LET g_errno="apr-00162"
      WHEN '7'
         LET g_errno="apr-00163"
      WHEN '8'
         LET g_errno="apr-00164"
      WHEN '9'
         LET g_errno="apr-00165"
      WHEN '10'
         LET g_errno="apr-00166"
      WHEN '11'
         LET g_errno="apr-00167"
      WHEN '12'
         LET g_errno="apr-00168"         
      END CASE
   ELSE
      SELECT count(*) INTO l_cnt FROM pmaa_t WHERE pmaaent = g_enterprise
         AND pmaa001=g_prfd_d[l_ac].prfd004 
         AND (pmaa002 ='2' OR pmaa002='3')
         AND pmaastus='Y'
      IF l_cnt <=0 THEN
         CASE g_prfd_d[l_ac].prfd003
      WHEN '1'
         LET g_errno="apr-00169"
      WHEN '2'
         LET g_errno="apr-00170" 
      WHEN '3'
         LET g_errno="apr-00171"
      WHEN '4'
         LET g_errno="apr-00172"
      WHEN '5'
         LET g_errno="apr-00173"
      WHEN '6'
         LET g_errno="apr-00174"
      WHEN '7'
         LET g_errno="apr-00175"
      WHEN '8'
         LET g_errno="apr-00176"
      WHEN '9'
         LET g_errno="apr-00177"
      WHEN '10'
         LET g_errno="apr-00178"
      WHEN '11'
         LET g_errno="apr-00179"
      WHEN '12'
         LET g_errno="apr-00180"         
      END CASE
      END IF   
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprm501_fill" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#fill pmaa
PRIVATE FUNCTION aprm501_fill()
   DEFINE l_sql      STRING
   DEFINE l_sql2     STRING
   DEFINE l_sql3     STRING
   DEFINE l_sql4     STRING
   DEFINE l_prfd002  LIKE prfd_t.prfd002
   DEFINE l_prfd003  LIKE prfd_t.prfd003
   DEFINE l_prfd004  LIKE prfd_t.prfd004
   
   CALL g_pmaa_d.clear()
#   IF NOT cl_null(g_prfd_d[l_ac].prfd003) THEN
   LET l_sql = " SELECT distinct pmaa001,pmaal004,pmaal003,pmaal005 ",
               "   FROM pmaa_t LEFT JOIN pmaal_t ON pmaa001=pmaal001 AND pmaaent=pmaalent AND pmaal002='",g_dlang,"' ",
               "  WHERE pmaaent=",g_enterprise," AND pmaastus='Y' "
   LET l_sql2 = " SELECT DISTINCT prfd002 FROM prfd_t WHERE prfdent=",g_enterprise," AND prfd001='",g_prfc_m.prfc001,"' AND prfdstus='Y' "  
   PREPARE l_sql2_prfd002_pre FROM l_sql2
   DECLARE l_sql2_prfd002_cs CURSOR FOR  l_sql2_prfd002_pre
   LET l_sql3 = " SELECT DISTINCT prfd003 FROM prfd_t WHERE prfdent=",g_enterprise," AND prfd001='",g_prfc_m.prfc001,"' AND prfdstus='Y' ",
                "    AND prfd002=? "
   PREPARE l_sql3_prfd003_pre FROM l_sql3
   DECLARE l_sql3_prfd003_cs CURSOR FOR  l_sql3_prfd003_pre 
   LET l_sql4 = " SELECT DISTINCT prfd004 FROM prfd_t WHERE prfdent=",g_enterprise," AND prfd001='",g_prfc_m.prfc001,"' AND prfdstus='Y' ",
                "    AND prfd002=? AND prfd003=? " 
   PREPARE l_sql4_prfd004_pre FROM l_sql4
   DECLARE l_sql4_prfd004_cs CURSOR FOR  l_sql4_prfd004_pre
   LET l_sql4="1<>1"
   LET l_sql3="1=1"
   LET l_sql2="1<>1"
   FOREACH  l_sql2_prfd002_cs INTO l_prfd002
      FOREACH l_sql3_prfd003_cs USING l_prfd002 INTO l_prfd003
         FOREACH l_sql4_prfd004_cs USING l_prfd002,l_prfd003 INTO l_prfd004
            CASE l_prfd003
               WHEN '1'
                  LET l_sql4 = l_sql4," OR pmaa001='",l_prfd004,"' " 
               WHEN '2'
                  LET l_sql4 = l_sql4," OR pmaa090='",l_prfd004,"' "
               WHEN '3'
                  LET l_sql4 = l_sql4," OR pmaa291='",l_prfd004,"' "
               WHEN '4'
                  LET l_sql4 = l_sql4," OR pmaa292='",l_prfd004,"' "
               WHEN '5'
                  LET l_sql4 = l_sql4," OR pmaa293='",l_prfd004,"' "
               WHEN '6'
                  LET l_sql4 = l_sql4," OR pmaa294='",l_prfd004,"' "
               WHEN '7'
                  LET l_sql4 = l_sql4," OR pmaa295='",l_prfd004,"' "
               WHEN '8'
                  LET l_sql4 = l_sql4," OR pmaa296='",l_prfd004,"' "
               WHEN '9'
                  LET l_sql4 = l_sql4," OR pmaa297='",l_prfd004,"' "
               WHEN '10'
                  LET l_sql4 = l_sql4," OR pmaa298='",l_prfd004,"' "
               WHEN '11'
                  LET l_sql4 = l_sql4," OR pmaa299='",l_prfd004,"' "
               WHEN '12'
                  LET l_sql4 = l_sql4," OR pmaa300='",l_prfd004,"' "
         
            END CASE
            LET l_prfd004=null
         END FOREACH
         LET l_sql3 = l_sql3," AND (",l_sql4,") "
         LET l_sql4="1<>1"
         LET l_prfd003=null
      END FOREACH
      LET l_sql2 = l_sql2," OR (",l_sql3,") "
      LET l_sql3="1=1"
      LET l_prfd002=null 
   END FOREACH  
          
#   LET l_sql2 = " SELECT prfd003,prfd004 FROM prfd_t WHERE prfdent=",g_enterprise,
#                "    AND prfd002 = ",g_prfd_d[l_ac].prfd002," AND prfd001='",g_prfc_m.prfc001,"' "  
#   PREPARE l_sql2_prfd003_pre FROM l_sql2
#   DECLARE l_sql2_prfd003_cs CURSOR FOR  l_sql2_prfd003_pre
#   LET l_prfd003=null
#   LET l_prfd004=null
#   LET l_sql3=" 1<>1 "
#   FOREACH l_sql2_prfd003_cs INTO l_prfd003,l_prfd004            
#      CASE l_prfd003
#         WHEN '1'
#            LET l_sql3 = l_sql3," OR pmaa001='",l_prfd004,"' " 
#         WHEN '2'
#            LET l_sql3 = l_sql3," OR pmaa090='",l_prfd004,"' "
#         WHEN '3'
#            LET l_sql3 = l_sql3," OR pmaa291='",l_prfd004,"' "
#         WHEN '4'
#            LET l_sql3 = l_sql3," OR pmaa292='",l_prfd004,"' "
#         WHEN '5'
#            LET l_sql3 = l_sql3," OR pmaa293='",l_prfd004,"' "
#         WHEN '6'
#            LET l_sql3 = l_sql3," OR pmaa294='",l_prfd004,"' "
#         WHEN '7'
#            LET l_sql3 = l_sql3," OR pmaa295='",l_prfd004,"' "
#         WHEN '8'
#            LET l_sql3 = l_sql3," OR pmaa296='",l_prfd004,"' "
#         WHEN '9'
#            LET l_sql3 = l_sql3," OR pmaa297='",l_prfd004,"' "
#         WHEN '10'
#            LET l_sql3 = l_sql3," OR pmaa298='",l_prfd004,"' "
#         WHEN '11'
#            LET l_sql3 = l_sql3," OR pmaa299='",l_prfd004,"' "
#         WHEN '12'
#            LET l_sql3 = l_sql3," OR pmaa300='",l_prfd004,"' "
#         
#      END CASE
#      LET l_prfd003=null
#      LET l_prfd004=null
#   END FOREACH
   LET l_sql = l_sql," AND ( ",l_sql2," )"
   LET l_sql = l_sql,"  ORDER BY pmaa001 "
   PREPARE l_sql_pre FROM l_sql
   DECLARE l_sql_cs CURSOR FOR l_sql_pre
   LET g_cnt = l_ac
   LET l_ac = 1
   FOREACH l_sql_cs INTO g_pmaa_d[l_ac].pmaa001,g_pmaa_d[l_ac].pmaal004,g_pmaa_d[l_ac].pmaal003,g_pmaa_d[l_ac].pmaal005
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
   END FOREACH
   LET g_error_show = 0
   
   CALL g_pmaa_d.deleteElement(g_pmaa_d.getLength())
 
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE l_sql_cs
#   END IF   
END FUNCTION]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
           ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_prfc001
      CALL ap_ref_array2(g_ref_fields,"SELECT prfcl004 FROM prfcl_t WHERE prfclent='"||g_enterprise||"' AND prfcl001=? AND prfcl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_prfcl004= '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_prfcl004]]>
  </point>
  <point name="construct.c.page1.prfd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prfd004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfd004  #顯示到畫面上

            NEXT FIELD prfd004  ]]>
  </point>
  <point name="construct.c.prfc001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prfc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfc001  #顯示到畫面上

            NEXT FIELD prfc001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfccrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfccrtdp  #顯示到畫面上

            NEXT FIELD prfccrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfccrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfccrtid  #顯示到畫面上

            NEXT FIELD prfccrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfcmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfcmodid  #顯示到畫面上

            NEXT FIELD prfcmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfcowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfcowndp  #顯示到畫面上

            NEXT FIELD prfcowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfcownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfcownid  #顯示到畫面上

            NEXT FIELD prfcownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prfcunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfcunit  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD prfcunit                     #返回原欄位

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prfc_m.prfcstus='N' THEN
      CALL cl_set_act_visible("delete",false)
   ELSE 
      CALL cl_set_act_visible("delete",TRUE)   
   END IF ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_pmaa_d       DYNAMIC ARRAY OF RECORD    #欄位 
         pmaa001       like pmaa_t.pmaa001,
         pmaal004      like pmaal_t.pmaal004,
         pmaal003      like pmaal_t.pmaal003,
         pmaal005      like pmaal_t.pmaal005
      END RECORD]]>
  </point>
  <point name="input.a.page1.prfd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_prfd_d[l_ac].prfd002) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd_d[g_detail_idx].prfd002 != g_prfd_d_t.prfd002 OR g_prfd_d[g_detail_idx].prfd003 != g_prfd_d_t.prfd003 OR g_prfd_d[g_detail_idx].prfd004 != g_prfd_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     LET g_prfd_d[l_ac].prfd002 = g_prfd_d_t.prfd002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.prfd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd_d[g_detail_idx].prfd002 != g_prfd_d_t.prfd002 OR g_prfd_d[g_detail_idx].prfd003 != g_prfd_d_t.prfd003 OR g_prfd_d[g_detail_idx].prfd004 != g_prfd_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     LET g_prfd_d[l_ac].prfd003 = g_prfd_d_t.prfd003
                     NEXT FIELD CURRENT
                  END IF
#                  IF NOT cl_null(g_prfd_d[l_ac].prfd003) THEN
#                     CALL aprm501_prfd004()
#                     IF NOT cl_null(g_errno) THEN
#                        CALL cl_err(g_prfd_d[l_ac].prfd003,g_errno,1)
#                        LET g_prfd_d[l_ac].prfd003 = g_prfd_d_t.prfd003
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.prfd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_prfd_d[l_ac].prfd004_desc = NULL
            DISPLAY g_prfd_d[l_ac].prfd004_desc TO s_detail1[l_ac].prfd004_desc
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd_d[g_detail_idx].prfd002 != g_prfd_d_t.prfd002 OR g_prfd_d[g_detail_idx].prfd003 != g_prfd_d_t.prfd003 OR g_prfd_d[g_detail_idx].prfd004 != g_prfd_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     LET g_prfd_d[l_ac].prfd004 = g_prfd_d_t.prfd004
                     CALL aprm501_prfd004_ref()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_prfd_d[l_ac].prfd004) THEN
                     CALL aprm501_prfd004()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_prfd_d[l_ac].prfd004,g_errno,1)
                        LET g_prfd_d[l_ac].prfd004 = g_prfd_d_t.prfd004
                        CALL aprm501_prfd004_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            CALL aprm501_prfd004_ref()
]]>
  </point>
  <point name="input.a.page2.pmaa001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd004 IS NOT NULL AND g_prfd2_d[g_detail_idx2].pmaa001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd_d[g_detail_idx].prfd002 != g_prfd_d[g_detail_idx].prfd002 OR g_prfd_d[g_detail_idx].prfd003 != g_prfd_d[g_detail_idx].prfd003 OR g_prfd_d[g_detail_idx].prfd004 != g_prfd_d[g_detail_idx].prfd004 OR g_prfd2_d[g_detail_idx2].pmaa001 != g_prfd2_d_t.pmaa001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmaa_t WHERE "||"pmaaent = '" ||g_enterprise|| "' AND "||"pmaa001 = '"||g_prfc_m.prfc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.prfd002_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd2_d[g_detail_idx].prfd002 != g_prfd2_d_t.prfd002 OR g_prfd2_d[g_detail_idx].prfd003 != g_prfd2_d_t.prfd003 OR g_prfd2_d[g_detail_idx].prfd004 != g_prfd2_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd2_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd2_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd2_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.prfd003_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd2_d[g_detail_idx].prfd002 != g_prfd2_d_t.prfd002 OR g_prfd2_d[g_detail_idx].prfd003 != g_prfd2_d_t.prfd003 OR g_prfd2_d[g_detail_idx].prfd004 != g_prfd2_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd2_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd2_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd2_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.prfd004_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd2_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd2_d[g_detail_idx].prfd002 != g_prfd2_d_t.prfd002 OR g_prfd2_d[g_detail_idx].prfd003 != g_prfd2_d_t.prfd003 OR g_prfd2_d[g_detail_idx].prfd004 != g_prfd2_d_t.prfd004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfd_t WHERE "||"prfdent = '" ||g_enterprise|| "' AND "||"prfd001 = '"||g_prfc_m.prfc001 ||"' AND "|| "prfd002 = '"||g_prfd2_d[g_detail_idx].prfd002 ||"' AND "|| "prfd003 = '"||g_prfd2_d[g_detail_idx].prfd003 ||"' AND "|| "prfd004 = '"||g_prfd2_d[g_detail_idx].prfd004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.prfc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_prfc_m.prfc001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfc_t WHERE "||"prfcent = '" ||g_enterprise|| "' AND "||"prfc001 = '"||g_prfc_m.prfc001 ||"'",'std-00004',0) THEN 
                     LET g_prfc_m.prfc001 = g_prfc_m_t.prfc001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #此段落由子樣板a25產生
            #有輸入資料才做查詢

]]>
  </point>
  <point name="input.a.prfc002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_prfc_m.prfc002) THEN 
            END IF 
]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow=1]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL g_pmaa_d.clear()
            CALL aprm501_fill()
            LET g_prfd_d[l_ac].prfdunit = g_prfc_m.prfcunit
            CALL aprm501_create_prfd002()]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd='u' THEN
               CALL aprm501_fill()
            END IF   ]]>
  </point>
  <point name="input.c.page1.prfd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfd_d[l_ac].prfd004             #給予default值

            CASE g_prfd_d[l_ac].prfd003
               WHEN '1'
                  CALL q_pmaa001_6() 
               WHEN '2'
                  LET g_qryparam.arg1 =281
                  CALL q_oocq002_5() 
               WHEN '3'
                  LET g_qryparam.arg1=2061
                  CALL q_oocq002_5()
               WHEN '4'
                  LET g_qryparam.arg1=2062
                  CALL q_oocq002_5()
               WHEN '5'
                  LET g_qryparam.arg1=2063
                  CALL q_oocq002_5()
               WHEN '6'
                  LET g_qryparam.arg1=2064
                  CALL q_oocq002_5()
               WHEN '7'
                  LET g_qryparam.arg1=2065
                  CALL q_oocq002_5()
               WHEN '8'
                  LET g_qryparam.arg1=2066
                  CALL q_oocq002_5()
               WHEN '9'
                  LET g_qryparam.arg1=2067
                  CALL q_oocq002_5()
               WHEN '10'
                  LET g_qryparam.arg1=2068
                  CALL q_oocq002_5()
               WHEN '11'
                  LET g_qryparam.arg1=2069
                  CALL q_oocq002_5()
               WHEN '12'
                  LET g_qryparam.arg1=2070
                  CALL q_oocq002_5()         
            END CASE                   

            LET g_prfd_d[l_ac].prfd004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prfd_d[l_ac].prfd004 TO s_detail1[l_ac].prfd004              #顯示到畫面上
            CALL aprm501_prfd004_ref()
            NEXT FIELD prfd004]]>
  </point>
  <point name="input.c.prfcunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfc_m.prfcunit             #給予default值
            LET g_qryparam.default2 = "" #g_prfc_m.ooefl003 #說明(簡稱)

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_prfc_m.prfcunit = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prfc_m.ooefl003 = g_qryparam.return2 #說明(簡稱)

            DISPLAY g_prfc_m.prfcunit TO prfcunit              #顯示到畫面上
            #DISPLAY g_prfc_m.ooefl003 TO ooefl003 #說明(簡稱)

            NEXT FIELD prfcunit                          #返回原欄位

]]>
  </point>
  <point name="input.g.page1.prfd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.prfd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  g_prfc_m.prfc001 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd002 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd003 IS NOT NULL AND g_prfd_d[g_detail_idx].prfd004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfc_m.prfc001 != g_prfc001_t OR g_prfd_d[g_detail_idx].prfd002 != g_prfd_d_t.prfd002 OR g_prfd_d[g_detail_idx].prfd003 != g_prfd_d_t.prfd003 OR g_prfd_d[g_detail_idx].prfd004 != g_prfd_d_t.prfd004)) THEN 
                  LET g_prfd_d[l_ac].prfd004_desc = NULL
                  LET g_prfd_d[l_ac].prfd004 = null
                  DISPLAY g_prfd_d[l_ac].prfd004_desc TO s_detail1[l_ac].prfd004_desc  
                  DISPLAY g_prfd_d[l_ac].prfd004 TO s_detail1[l_ac].prfd004                  
               END IF
            END IF]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfc_m.prfc001) THEN
               CALL n_prfal(g_prfc_m.prfc001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_prfc_m.prfc001
               CALL ap_ref_array2(g_ref_fields," SELECT prfcl003,prfcl004 FROM prfcl_t WHERE prfcl001 = ? AND prfcl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_prfc_m.prfcl003 = g_rtn_fields[1]
               LET g_prfc_m.prfcl004 = g_rtn_fields[2]
               DISPLAY BY NAME g_prfc_m.prfcl003
               DISPLAY BY NAME g_prfc_m.prfcl004
            END IF]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      DISPLAY ARRAY g_pmaa_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
               
      END DISPLAY]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL g_pmaa_d.clear()
      LET g_prfc_m.prfcstus = "Y"
      LET g_prfc_m.prfcunit = g_site
      LET g_prfc_m.prfc002 = 1
      LET g_prfc_m_t.* = g_prfc_m.*]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_prfc_m.prfcstus = 'Y'
   LET g_prfc_m.prfc002 = 1]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF l_ac<>0 THEN 
      CALL aprm501_fill()
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL aprm501_prfd004_ref()]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a25產生
            #有輸入資料才做查

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfc_m.prfc001
   CALL ap_ref_array2(g_ref_fields," SELECT prfcl003,prfcl004 FROM prfcl_t WHERE prfclent = '"||g_enterprise||"' AND prfcl001 = ? AND prfcl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_prfc_m.prfcl003 = g_rtn_fields[1] 
   LET g_prfc_m.prfcl004 = g_rtn_fields[2] 
   DISPLAY g_prfc_m.prfcl003,g_prfc_m.prfcl004 TO prfcl003,prfcl004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfc_m.prfcownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prfc_m.prfcownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfc_m.prfcownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfc_m.prfcowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfc_m.prfcowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfc_m.prfcowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfc_m.prfccrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prfc_m.prfccrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfc_m.prfccrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfc_m.prfccrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfc_m.prfccrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfc_m.prfccrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfc_m.prfcmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prfc_m.prfcmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfc_m.prfcmodid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prfc_m.prfcstus='N' THEN
      CALL cl_set_act_visible("delete",false)
   ELSE 
      CALL cl_set_act_visible("delete",TRUE)   
   END IF]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   RETURN]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_pmaa_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 1
               
         END DISPLAY ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <section id="aprm501.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprm501_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prfd_d.clear()    #g_prfd_d 單頭及單身 
   CALL g_prfd2_d.clear()
 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprm501_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prfdstus,prfd002,prfd003,prfd004,'',prfdunit FROM prfd_t",   
                  " INNER JOIN prfc_t ON prfc001 = prfd001 ",
 
                  #"",
                  " LEFT JOIN pmaa_t ON prfdent = pmaaent AND prfd001 = pmaa001                                                                                      AND prfd002 =  AND prfd003 =  AND prfd004 =  ",
                  "",
                  " WHERE prfdent=? AND prfd001=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY prfd_t.prfd002,prfd_t.prfd003,prfd_t.prfd004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE aprm501_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprm501_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prfc_m.prfc001
 
                                               
      FOREACH b_fill_cs INTO g_prfd_d[l_ac].prfdstus,g_prfd_d[l_ac].prfd002,g_prfd_d[l_ac].prfd003,g_prfd_d[l_ac].prfd004, 
          g_prfd_d[l_ac].prfd004_desc,g_prfd_d[l_ac].prfdunit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prfd_d.deleteElement(g_prfd_d.getLength())
   CALL g_prfd2_d.deleteElement(g_prfd2_d.getLength())
 
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprm501_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprm501_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF aprm501_fill_chk(2) THEN
      IF pi_idx = 2 OR pi_idx = 0 THEN
               CALL g_prfd2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE pmaa001,'','','' FROM pmaa_t",    
                     "",
                     " WHERE"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  pmaa_t.pmaa001" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         PREPARE aprm501_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR aprm501_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,
                                        g_prfc_m.prfc001,g_prfd_d[g_detail_idx].prfd002,g_prfd_d[g_detail_idx].prfd003, 
                                            g_prfd_d[g_detail_idx].prfd004
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_prfd2_d[l_ac].pmaa001,g_prfd2_d[l_ac].pmaal004,g_prfd2_d[l_ac].pmaal003, 
             g_prfd2_d[l_ac].pmaal005
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_prfd2_d.deleteElement(g_prfd2_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprm501_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.browser_fill" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprm501_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfc_m.* TO NULL
   CALL g_prfd_d.clear()        
   CALL g_prfd2_d.clear() 
 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prfc001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prfc001 ",
 
                        " FROM prfc_t ",
                              " ",
                              " LEFT JOIN prfd_t ON prfdent = prfcent AND prfc001 = prfd001 ",
 
                              " LEFT JOIN pmaa_t ON pmaaent = prfcent AND prfd001 = pmaa001", 
 
 
                              " LEFT JOIN prfcl_t ON prfc001 = prfcl001 AND prfcl002 = '",g_lang,"' ", 
                              " ", 
                       " WHERE prfcent = '" ||g_enterprise|| "' AND prfdent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prfc001 ",
 
                        " FROM prfc_t ", 
                              " ",
                              " LEFT JOIN prfcl_t ON prfc001 = prfcl001 AND prfcl002 = '",g_lang,"' ",
                        "WHERE prfcent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - 1
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + 1
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 1
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 1
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照prfc001 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT prfcstus,prfc001,DENSE_RANK() OVER(ORDER BY prfc001 ",g_order, 
          ") AS RANK ",
                        " FROM prfc_t ",
                              " ",
                              " LEFT JOIN prfd_t ON prfdent = prfcent AND prfc001 = prfd001 ",
 
                              " LEFT JOIN pmaa_t ON pmaaent = prfcent AND prfd001 = pmaa001",
 
 
                              " LEFT JOIN prfcl_t ON prfc001 = prfcl001 AND prfcl002 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE prfcent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT prfcstus,prfc001,DENSE_RANK() OVER(ORDER BY prfc001 ",g_order, 
          ") AS RANK ",
                       " FROM prfc_t ",
                            "  ",
                            "  LEFT JOIN prfcl_t ON prfc001 = prfcl001 AND prfcl002 = '",g_lang,"' ",
                       " WHERE prfcent = '" ||g_enterprise|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT prfcstus,prfc001 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prfc001
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
 
 
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprm501_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prfc001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprm501_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.construct" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprm501_construct()
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfc_m.* TO NULL
   CALL g_prfd_d.clear()        
   CALL g_prfd2_d.clear() 
 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prfc001,prfc002,prfcunit,prfcl003,prfcl004,prfcstus,prfcownid,prfcowndp, 
          prfccrtid,prfccrtdp,prfccrtdt,prfcmodid,prfcmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prfcownid>>----
         #ON ACTION controlp INFIELD prfcownid
         #   CALL q_common('prfc_t','prfcownid',TRUE,FALSE,g_prfc_m.prfcownid) RETURNING ls_return
         #   DISPLAY ls_return TO prfcownid
         #   NEXT FIELD prfcownid  
         #
         ##----<<prfcowndp>>----
         #ON ACTION controlp INFIELD prfcowndp
         #   CALL q_common('prfc_t','prfcowndp',TRUE,FALSE,g_prfc_m.prfcowndp) RETURNING ls_return
         #   DISPLAY ls_return TO prfcowndp
         #   NEXT FIELD prfcowndp
         #
         ##----<<prfccrtid>>----
         #ON ACTION controlp INFIELD prfccrtid
         #   CALL q_common('prfc_t','prfccrtid',TRUE,FALSE,g_prfc_m.prfccrtid) RETURNING ls_return
         #   DISPLAY ls_return TO prfccrtid
         #   NEXT FIELD prfccrtid
         #
         ##----<<prfccrtdp>>----
         #ON ACTION controlp INFIELD prfccrtdp
         #   CALL q_common('prfc_t','prfccrtdp',TRUE,FALSE,g_prfc_m.prfccrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO prfccrtdp
         #   NEXT FIELD prfccrtdp
         #
         ##----<<prfcmodid>>----
         #ON ACTION controlp INFIELD prfcmodid
         #   CALL q_common('prfc_t','prfcmodid',TRUE,FALSE,g_prfc_m.prfcmodid) RETURNING ls_return
         #   DISPLAY ls_return TO prfcmodid
         #   NEXT FIELD prfcmodid
         #
         ##----<<prfccnfid>>----
         ##ON ACTION controlp INFIELD prfccnfid
         ##   CALL q_common('prfc_t','prfccnfid',TRUE,FALSE,g_prfc_m.prfccnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfccnfid
         ##   NEXT FIELD prfccnfid
         #
         ##----<<prfcpstid>>----
         ##ON ACTION controlp INFIELD prfcpstid
         ##   CALL q_common('prfc_t','prfcpstid',TRUE,FALSE,g_prfc_m.prfcpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfcpstid
         ##   NEXT FIELD prfcpstid
         
         ##----<<prfccrtdt>>----
         AFTER FIELD prfccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfcmoddt>>----
         AFTER FIELD prfcmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfccnfdt>>----
         #AFTER FIELD prfccnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfcpstdt>>----
         #AFTER FIELD prfcpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<prfc001>>----
         #Ctrlp:construct.c.prfc001
         ON ACTION controlp INFIELD prfc001
            #add-point:ON ACTION controlp INFIELD prfc001
            {<point name="construct.c.prfc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfc001
            #add-point:BEFORE FIELD prfc001
            {<point name="construct.b.prfc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfc001
            
            #add-point:AFTER FIELD prfc001
            {<point name="construct.a.prfc001" />}
            #END add-point
            
 
         #----<<prfc002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfc002
            #add-point:BEFORE FIELD prfc002
            {<point name="construct.b.prfc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfc002
            
            #add-point:AFTER FIELD prfc002
            {<point name="construct.a.prfc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfc002
         ON ACTION controlp INFIELD prfc002
            #add-point:ON ACTION controlp INFIELD prfc002
            {<point name="construct.c.prfc002" />}
            #END add-point
 
         #----<<prfcunit>>----
         #Ctrlp:construct.c.prfcunit
         ON ACTION controlp INFIELD prfcunit
            #add-point:ON ACTION controlp INFIELD prfcunit
            {<point name="construct.c.prfcunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfcunit
            #add-point:BEFORE FIELD prfcunit
            {<point name="construct.b.prfcunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcunit
            
            #add-point:AFTER FIELD prfcunit
            {<point name="construct.a.prfcunit" />}
            #END add-point
            
 
         #----<<prfcl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcl003
            #add-point:BEFORE FIELD prfcl003
            {<point name="construct.b.prfcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcl003
            
            #add-point:AFTER FIELD prfcl003
            {<point name="construct.a.prfcl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfcl003
         ON ACTION controlp INFIELD prfcl003
            #add-point:ON ACTION controlp INFIELD prfcl003
            {<point name="construct.c.prfcl003" />}
            #END add-point
 
         #----<<prfcl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcl004
            #add-point:BEFORE FIELD prfcl004
            {<point name="construct.b.prfcl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcl004
            
            #add-point:AFTER FIELD prfcl004
            {<point name="construct.a.prfcl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfcl004
         ON ACTION controlp INFIELD prfcl004
            #add-point:ON ACTION controlp INFIELD prfcl004
            {<point name="construct.c.prfcl004" />}
            #END add-point
 
         #----<<prfcstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcstus
            #add-point:BEFORE FIELD prfcstus
            {<point name="construct.b.prfcstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcstus
            
            #add-point:AFTER FIELD prfcstus
            {<point name="construct.a.prfcstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfcstus
         ON ACTION controlp INFIELD prfcstus
            #add-point:ON ACTION controlp INFIELD prfcstus
            {<point name="construct.c.prfcstus" />}
            #END add-point
 
         #----<<prfcownid>>----
         #Ctrlp:construct.c.prfcownid
         ON ACTION controlp INFIELD prfcownid
            #add-point:ON ACTION controlp INFIELD prfcownid
            {<point name="construct.c.prfcownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfcownid
            #add-point:BEFORE FIELD prfcownid
            {<point name="construct.b.prfcownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcownid
            
            #add-point:AFTER FIELD prfcownid
            {<point name="construct.a.prfcownid" />}
            #END add-point
            
 
         #----<<prfcowndp>>----
         #Ctrlp:construct.c.prfcowndp
         ON ACTION controlp INFIELD prfcowndp
            #add-point:ON ACTION controlp INFIELD prfcowndp
            {<point name="construct.c.prfcowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfcowndp
            #add-point:BEFORE FIELD prfcowndp
            {<point name="construct.b.prfcowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcowndp
            
            #add-point:AFTER FIELD prfcowndp
            {<point name="construct.a.prfcowndp" />}
            #END add-point
            
 
         #----<<prfccrtid>>----
         #Ctrlp:construct.c.prfccrtid
         ON ACTION controlp INFIELD prfccrtid
            #add-point:ON ACTION controlp INFIELD prfccrtid
            {<point name="construct.c.prfccrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfccrtid
            #add-point:BEFORE FIELD prfccrtid
            {<point name="construct.b.prfccrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfccrtid
            
            #add-point:AFTER FIELD prfccrtid
            {<point name="construct.a.prfccrtid" />}
            #END add-point
            
 
         #----<<prfccrtdp>>----
         #Ctrlp:construct.c.prfccrtdp
         ON ACTION controlp INFIELD prfccrtdp
            #add-point:ON ACTION controlp INFIELD prfccrtdp
            {<point name="construct.c.prfccrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfccrtdp
            #add-point:BEFORE FIELD prfccrtdp
            {<point name="construct.b.prfccrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfccrtdp
            
            #add-point:AFTER FIELD prfccrtdp
            {<point name="construct.a.prfccrtdp" />}
            #END add-point
            
 
         #----<<prfccrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfccrtdt
            #add-point:BEFORE FIELD prfccrtdt
            {<point name="construct.b.prfccrtdt" />}
            #END add-point
 
         #----<<prfcmodid>>----
         #Ctrlp:construct.c.prfcmodid
         ON ACTION controlp INFIELD prfcmodid
            #add-point:ON ACTION controlp INFIELD prfcmodid
            {<point name="construct.c.prfcmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfcmodid
            #add-point:BEFORE FIELD prfcmodid
            {<point name="construct.b.prfcmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcmodid
            
            #add-point:AFTER FIELD prfcmodid
            {<point name="construct.a.prfcmodid" />}
            #END add-point
            
 
         #----<<prfcmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcmoddt
            #add-point:BEFORE FIELD prfcmoddt
            {<point name="construct.b.prfcmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prfdstus,prfd002,prfd003,prfd004,prfdunit
           FROM s_detail1[1].prfdstus,s_detail1[1].prfd002,s_detail1[1].prfd003,s_detail1[1].prfd004, 
               s_detail1[1].prfdunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<prfdownid>>----
         ##ON ACTION controlp INFIELD prfdownid
         ##   CALL q_common('prfc_t','prfdownid',TRUE,FALSE,g_prfd2_d[1].prfdownid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdownid
         ##   NEXT FIELD prfdownid  
         #
         ##----<<prfdowndp>>----
         ##ON ACTION controlp INFIELD prfdowndp
         ##   CALL q_common('prfc_t','prfdowndp',TRUE,FALSE,g_prfd2_d[1].prfdowndp) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdowndp
         ##   NEXT FIELD prfdowndp
         #
         ##----<<prfdcrtid>>----
         ##ON ACTION controlp INFIELD prfdcrtid
         ##   CALL q_common('prfc_t','prfdcrtid',TRUE,FALSE,g_prfd2_d[1].prfdcrtid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdcrtid
         ##   NEXT FIELD prfdcrtid
         #
         ##----<<prfdcrtdp>>----
         ##ON ACTION controlp INFIELD prfdcrtdp
         ##   CALL q_common('prfc_t','prfdcrtdp',TRUE,FALSE,g_prfd2_d[1].prfdcrtdp) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdcrtdp
         ##   NEXT FIELD prfdcrtdp
         #
         ##----<<prfdmodid>>----
         ##ON ACTION controlp INFIELD prfdmodid
         ##   CALL q_common('prfc_t','prfdmodid',TRUE,FALSE,g_prfd2_d[1].prfdmodid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdmodid
         ##   NEXT FIELD prfdmodid
         #
         ##----<<prfdcnfid>>----
         ##ON ACTION controlp INFIELD prfdcnfid
         ##   CALL q_common('prfc_t','prfdcnfid',TRUE,FALSE,g_prfd2_d[1].prfdcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdcnfid
         ##   NEXT FIELD prfdcnfid
         #
         ##----<<prfdpstid>>----
         ##ON ACTION controlp INFIELD prfdpstid
         ##   CALL q_common('prfc_t','prfdpstid',TRUE,FALSE,g_prfd2_d[1].prfdpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO prfdpstid
         ##   NEXT FIELD prfdpstid
         
         ##----<<prfdcrtdt>>----
         #AFTER FIELD prfdcrtdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfdmoddt>>----
         #AFTER FIELD prfdmoddt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfdcnfdt>>----
         #AFTER FIELD prfdcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfdpstdt>>----
         #AFTER FIELD prfdpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<prfdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfdstus
            #add-point:BEFORE FIELD prfdstus
            {<point name="construct.b.page1.prfdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfdstus
            
            #add-point:AFTER FIELD prfdstus
            {<point name="construct.a.page1.prfdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prfdstus
         ON ACTION controlp INFIELD prfdstus
            #add-point:ON ACTION controlp INFIELD prfdstus
            {<point name="construct.c.page1.prfdstus" />}
            #END add-point
 
         #----<<prfd002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfd002
            #add-point:BEFORE FIELD prfd002
            {<point name="construct.b.page1.prfd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfd002
            
            #add-point:AFTER FIELD prfd002
            {<point name="construct.a.page1.prfd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prfd002
         ON ACTION controlp INFIELD prfd002
            #add-point:ON ACTION controlp INFIELD prfd002
            {<point name="construct.c.page1.prfd002" />}
            #END add-point
 
         #----<<prfd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfd003
            #add-point:BEFORE FIELD prfd003
            {<point name="construct.b.page1.prfd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfd003
            
            #add-point:AFTER FIELD prfd003
            {<point name="construct.a.page1.prfd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prfd003
         ON ACTION controlp INFIELD prfd003
            #add-point:ON ACTION controlp INFIELD prfd003
            {<point name="construct.c.page1.prfd003" />}
            #END add-point
 
         #----<<prfd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfd004
            #add-point:BEFORE FIELD prfd004
            {<point name="construct.b.page1.prfd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfd004
            
            #add-point:AFTER FIELD prfd004
            {<point name="construct.a.page1.prfd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prfd004
         ON ACTION controlp INFIELD prfd004
            #add-point:ON ACTION controlp INFIELD prfd004
            {<point name="construct.c.page1.prfd004" />}
            #END add-point
 
         #----<<prfdunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfdunit
            #add-point:BEFORE FIELD prfdunit
            {<point name="construct.b.page1.prfdunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfdunit
            
            #add-point:AFTER FIELD prfdunit
            {<point name="construct.a.page1.prfdunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prfdunit
         ON ACTION controlp INFIELD prfdunit
            #add-point:ON ACTION controlp INFIELD prfdunit
            {<point name="construct.c.page1.prfdunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON NULL
           FROM NULL
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page2  >---------------------
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprm501_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " prfc001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprm501_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prfc_m.prfc001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid,prfccrtdp,prfccrtdt, 
        prfcmodid,prfcmoddt
 INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcowndp, 
     g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdt,g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt
 FROM prfc_t
 WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
   
   LET g_master_multi_table_t.prfcl001 = g_prfc_m.prfc001
LET g_master_multi_table_t.prfcl003 = g_prfc_m.prfcl003
LET g_master_multi_table_t.prfcl004 = g_prfc_m.prfcl004
 
 
   CALL aprm501_show()
   
   CALL s_transaction_begin()
 
   OPEN aprm501_cl USING g_enterprise,g_prfc_m.prfc001
 
   IF STATUS THEN
      CALL cl_err("OPEN aprm501_cl:", STATUS, 1)
      CLOSE aprm501_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH aprm501_cl INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcl003,g_prfc_m.prfcl004, 
       g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcownid_desc,g_prfc_m.prfcowndp,g_prfc_m.prfcowndp_desc, 
       g_prfc_m.prfccrtid,g_prfc_m.prfccrtid_desc,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdp_desc,g_prfc_m.prfccrtdt, 
       g_prfc_m.prfcmodid,g_prfc_m.prfcmodid_desc,g_prfc_m.prfcmoddt              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfc_m.prfc001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "prfc001"       
      LET g_doc.value1 = g_prfc_m.prfc001     
      CALL cl_doc_remove()   
  
      #資料備份
      LET g_prfc001_t = g_prfc_m.prfc001
 
 
      DELETE FROM prfc_t
       WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prfc_m.prfc001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prfd_t
       WHERE prfdent = g_enterprise AND prfd001 = g_prfc_m.prfc001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfd_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM pmaa_t
       WHERE pmaaent = g_enterprise AND
              = g_prfc_m.prfc001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmaa_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
                                                               
      CLEAR FORM
      CALL g_prfd_d.clear() 
      CALL g_prfd2_d.clear()       
 
 
     
      CALL aprm501_ui_browser_refresh()  
      CALL aprm501_ui_headershow()  
      CALL aprm501_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprm501_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprm501_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.prfcl001
   LET l_field_keys[01] = 'prfcl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'prfcl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'prfcl_t')
 
      
      #單身多語言刪除
      
 
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprm501_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prfc_m.prfc001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aprm501.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprm501_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prfd_t
       WHERE prfdent = g_enterprise AND
         prfd001 = ps_keys_bak[1] AND prfd002 = ps_keys_bak[2] AND prfd003 = ps_keys_bak[3] AND prfd004 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM pmaa_t
       WHERE 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmaa_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: aprm501
#+ Description: 客戶組主檔維護作業
#+ Creator....: 02296(2014/03/25)
#+ Modifier...: 02296(2014/03/25)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprm501.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprm501_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prfd_t.*
 
   DEFINE l_detail2    RECORD LIKE pmaa_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprm501_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprm501_detail AS ",
                "SELECT * FROM prfd_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm501_detail SELECT * FROM prfd_t 
                                         WHERE prfdent = g_enterprise AND prfd001 = g_prfc001_t
 
   
   #將key修正為調整後   
   UPDATE aprm501_detail 
      #更新key欄位
      SET prfd001 = g_prfc_m.prfc001
 
      #更新共用欄位
      #此段落由子樣板a13產生
      # , prfdownid = g_user
      # , prfdowndp = g_dept
      # , prfdcrtid = g_user
      # , prfdcrtdp = g_dept 
      # , prfdcrtdt = ld_date
      # , prfdmodid = "" 
      # , prfdmoddt = "" 
      #, prfdstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO prfd_t SELECT * FROM aprm501_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm501_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprm501_detail AS ",
      "SELECT * FROM pmaa_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprm501_detail SELECT * FROM pmaa_t
                                         WHERE pmaaent = g_enterprise AND  = g_prfc001_t
 
 
   #將key修正為調整後   
   UPDATE aprm501_detail SET  = g_prfc_m.prfc001
 
  
   #將資料塞回原table   
   INSERT INTO pmaa_t SELECT * FROM aprm501_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprm501_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prfc001_t = g_prfc_m.prfc001
 
   
   DROP TABLE aprm501_detail
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION aprm501_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprm501_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL aprm501_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prfc_m.prfc001 = g_browser[g_current_idx].b_prfc001
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid,prfccrtdp,prfccrtdt, 
        prfcmodid,prfcmoddt
 INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcowndp, 
     g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdt,g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt
 FROM prfc_t
 WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
   IF SQLCA.sqlcode THEN
      CALL cl_err("prfc_t",SQLCA.sqlcode,1)
      INITIALIZE g_prfc_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprm501_show()
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprm501_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION aprm501_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprm501_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="aprm501.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prfc_m        RECORD
       prfc001 LIKE prfc_t.prfc001, 
   prfc002 LIKE prfc_t.prfc002, 
   prfcunit LIKE prfc_t.prfcunit, 
   prfcl003 LIKE prfcl_t.prfcl003, 
   prfcl004 LIKE prfcl_t.prfcl004, 
   prfcstus LIKE prfc_t.prfcstus, 
   prfcownid LIKE prfc_t.prfcownid, 
   prfcownid_desc LIKE type_t.chr80, 
   prfcowndp LIKE prfc_t.prfcowndp, 
   prfcowndp_desc LIKE type_t.chr80, 
   prfccrtid LIKE prfc_t.prfccrtid, 
   prfccrtid_desc LIKE type_t.chr80, 
   prfccrtdp LIKE prfc_t.prfccrtdp, 
   prfccrtdp_desc LIKE type_t.chr80, 
   prfccrtdt DATETIME YEAR TO SECOND, 
   prfcmodid LIKE prfc_t.prfcmodid, 
   prfcmodid_desc LIKE type_t.chr80, 
   prfcmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prfd_d        RECORD
       prfdstus LIKE prfd_t.prfdstus, 
   prfd002 LIKE prfd_t.prfd002, 
   prfd003 LIKE prfd_t.prfd003, 
   prfd004 LIKE prfd_t.prfd004, 
   prfd004_desc LIKE type_t.chr500, 
   prfdunit LIKE prfd_t.prfdunit
       END RECORD
PRIVATE TYPE type_g_prfd2_d RECORD
       pmaa001 LIKE type_t.chr10, 
   pmaal004 LIKE type_t.chr500, 
   pmaal003 LIKE type_t.chr500, 
   pmaal005 LIKE type_t.chr10
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_prfc_m          type_g_prfc_m
DEFINE g_prfc_m_t        type_g_prfc_m
 
   DEFINE g_prfc001_t LIKE prfc_t.prfc001
 
 
DEFINE g_prfd_d          DYNAMIC ARRAY OF type_g_prfd_d
DEFINE g_prfd_d_t        type_g_prfd_d
DEFINE g_prfd2_d   DYNAMIC ARRAY OF type_g_prfd2_d
DEFINE g_prfd2_d_t type_g_prfd2_d
 
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfc001 LIKE prfc_t.prfc001
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfc001 LIKE prfc_t.prfc001
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      prfcl001 LIKE prfcl_t.prfcl001,
      prfcl003 LIKE prfcl_t.prfcl003,
      prfcl004 LIKE prfcl_t.prfcl004
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprm501.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprm501_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prfd_d.getLength() THEN
         LET g_detail_idx = g_prfd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prfd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prfd_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_prfd2_d.getLength() THEN
         LET g_detail_idx2 = g_prfd2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_prfd2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_prfd2_d.getLength() TO FORMONLY.cnt
   END IF
 
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprm501_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
      CALL cl_set_combo_scc_part('prfcstus','17','N,Y')
 
      CALL cl_set_combo_scc('prfd003','6035') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprm501_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprm501.input" ver="1" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprm501_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prfdstus,prfd002,prfd003,prfd004,'',prfdunit FROM prfd_t WHERE prfdent=?  
       AND prfd001=? AND prfd002=? AND prfd003=? AND prfd004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aprm501_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT '','','','' FROM pmaa_t WHERE pmaaent=? AND pmaa001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aprm501_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprm501_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprm501_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcl003,g_prfc_m.prfcl004, 
       g_prfc_m.prfcstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="aprm501.input.body" ver="1" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prfd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prfd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprm501_b_fill()
            LET g_rec_b = g_prfd_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
                           CALL aprm501_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprm501_cl USING g_enterprise,g_prfc_m.prfc001
 
            IF STATUS THEN
               CALL cl_err("OPEN aprm501_cl:", STATUS, 1)
               CLOSE aprm501_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prfd_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prfd_d[l_ac].prfd002 IS NOT NULL
               AND g_prfd_d[l_ac].prfd003 IS NOT NULL
 
               AND g_prfd_d[l_ac].prfd004 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_prfd_d_t.* = g_prfd_d[l_ac].*  #BACKUP
               CALL aprm501_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprm501_set_no_entry_b(l_cmd)
               IF NOT aprm501_lock_b("prfd_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm501_bcl INTO g_prfd_d[l_ac].prfdstus,g_prfd_d[l_ac].prfd002,g_prfd_d[l_ac].prfd003, 
                      g_prfd_d[l_ac].prfd004,g_prfd_d[l_ac].prfd004_desc,g_prfd_d[l_ac].prfdunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prfd_d_t.prfd002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprm501_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prfd_d[l_ac].* TO NULL 
                  LET g_prfd_d[l_ac].prfdstus = "Y"
 
 
            LET g_prfd_d_t.* = g_prfd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm501_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprm501_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prfd_d[li_reproduce_target].* = g_prfd_d[li_reproduce].*
 
               LET g_prfd_d[li_reproduce_target].prfd002 = NULL
               LET g_prfd_d[li_reproduce_target].prfd003 = NULL
 
               LET g_prfd_d[li_reproduce_target].prfd004 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      #LET g_prfd2_d[l_ac].prfdownid = g_user
      #LET g_prfd2_d[l_ac].prfdowndp = g_dept
      #LET g_prfd2_d[l_ac].prfdcrtid = g_user
      #LET g_prfd2_d[l_ac].prfdcrtdp = g_dept 
      #LET g_prfd2_d[l_ac].prfdcrtdt = cl_get_current()
      #LET g_prfd2_d[l_ac].prfdmodid = ""
      #LET g_prfd2_d[l_ac].prfdmoddt = ""
      #LET g_prfd_d[l_ac].prfdstus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prfd_t 
             WHERE prfdent = g_enterprise AND prfd001 = g_prfc_m.prfc001
 
               AND prfd002 = g_prfd_d[l_ac].prfd002
               AND prfd003 = g_prfd_d[l_ac].prfd003
 
               AND prfd004 = g_prfd_d[l_ac].prfd004
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfc_m.prfc001
               LET gs_keys[2] = g_prfd_d[g_detail_idx].prfd002
               LET gs_keys[3] = g_prfd_d[g_detail_idx].prfd003
               LET gs_keys[4] = g_prfd_d[g_detail_idx].prfd004
               CALL aprm501_insert_b('prfd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prfd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prfd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm501_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prfd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prfd_d.deleteElement(l_ac)
               NEXT FIELD prfd002
            END IF
         
            IF g_prfd_d[l_ac].prfd002 IS NOT NULL
               AND g_prfd_d_t.prfd003 IS NOT NULL
 
               AND g_prfd_d_t.prfd004 IS NOT NULL
 
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prfd_t
                WHERE prfdent = g_enterprise AND prfd001 = g_prfc_m.prfc001 AND
 
                      prfd002 = g_prfd_d_t.prfd002
                  AND prfd003 = g_prfd_d_t.prfd003
 
                  AND prfd004 = g_prfd_d_t.prfd004
 
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm501_bcl
               LET l_count = g_prfd_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfc_m.prfc001
               LET gs_keys[2] = g_prfd_d[g_detail_idx].prfd002
               LET gs_keys[3] = g_prfd_d[g_detail_idx].prfd003
               LET gs_keys[4] = g_prfd_d[g_detail_idx].prfd004
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprm501_delete_b('prfd_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<prfdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfdstus
            #add-point:BEFORE FIELD prfdstus
            {<point name="input.b.page1.prfdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfdstus
            
            #add-point:AFTER FIELD prfdstus
            {<point name="input.a.page1.prfdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfdstus
            #add-point:ON CHANGE prfdstus
            {<point name="input.g.page1.prfdstus" />}
            #END add-point
 
         #----<<prfd002>>----
         #此段落由子樣板a02產生
         AFTER FIELD prfd002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfd_d[l_ac].prfd002,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfd002
            END IF
 
 
            #add-point:AFTER FIELD prfd002
            {<point name="input.a.page1.prfd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfd002
            #add-point:BEFORE FIELD prfd002
            {<point name="input.b.page1.prfd002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfd002
            #add-point:ON CHANGE prfd002
            {<point name="input.g.page1.prfd002" />}
            #END add-point
 
         #----<<prfd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfd003
            #add-point:BEFORE FIELD prfd003
            {<point name="input.b.page1.prfd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfd003
            
            #add-point:AFTER FIELD prfd003
            {<point name="input.a.page1.prfd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfd003
            #add-point:ON CHANGE prfd003
            {<point name="input.g.page1.prfd003" />}
            #END add-point
 
         #----<<prfd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfd004
            #add-point:BEFORE FIELD prfd004
            {<point name="input.b.page1.prfd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfd004
            
            #add-point:AFTER FIELD prfd004
            {<point name="input.a.page1.prfd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfd004
            #add-point:ON CHANGE prfd004
            {<point name="input.g.page1.prfd004" />}
            #END add-point
 
         #----<<prfdunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfdunit
            #add-point:BEFORE FIELD prfdunit
            {<point name="input.b.page1.prfdunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfdunit
            
            #add-point:AFTER FIELD prfdunit
            {<point name="input.a.page1.prfdunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfdunit
            #add-point:ON CHANGE prfdunit
            {<point name="input.g.page1.prfdunit" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<prfdstus>>----
         #Ctrlp:input.c.page1.prfdstus
         ON ACTION controlp INFIELD prfdstus
            #add-point:ON ACTION controlp INFIELD prfdstus
            {<point name="input.c.page1.prfdstus" />}
            #END add-point
 
         #----<<prfd002>>----
         #Ctrlp:input.c.page1.prfd002
         ON ACTION controlp INFIELD prfd002
            #add-point:ON ACTION controlp INFIELD prfd002
            {<point name="input.c.page1.prfd002" />}
            #END add-point
 
         #----<<prfd003>>----
         #Ctrlp:input.c.page1.prfd003
         ON ACTION controlp INFIELD prfd003
            #add-point:ON ACTION controlp INFIELD prfd003
            {<point name="input.c.page1.prfd003" />}
            #END add-point
 
         #----<<prfd004>>----
         #Ctrlp:input.c.page1.prfd004
         ON ACTION controlp INFIELD prfd004
            #add-point:ON ACTION controlp INFIELD prfd004
            {<point name="input.c.page1.prfd004" />}
            #END add-point
 
         #----<<prfdunit>>----
         #Ctrlp:input.c.page1.prfdunit
         ON ACTION controlp INFIELD prfdunit
            #add-point:ON ACTION controlp INFIELD prfdunit
            {<point name="input.c.page1.prfdunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prfd_d[l_ac].* = g_prfd_d_t.*
               CLOSE aprm501_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prfd_d[l_ac].prfd002,-263,1)
               LET g_prfd_d[l_ac].* = g_prfd_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               #LET g_prfd2_d[l_ac].prfdmodid = g_user 
#LET g_prfd2_d[l_ac].prfdmoddt = cl_get_current()
 
      
               UPDATE prfd_t SET (prfd001,prfdstus,prfd002,prfd003,prfd004,prfdunit) = (g_prfc_m.prfc001, 
                   g_prfd_d[l_ac].prfdstus,g_prfd_d[l_ac].prfd002,g_prfd_d[l_ac].prfd003,g_prfd_d[l_ac].prfd004, 
                   g_prfd_d[l_ac].prfdunit)
                WHERE prfdent = g_enterprise AND prfd001 = g_prfc_m.prfc001 
 
                  AND prfd002 = g_prfd_d_t.prfd002 #項次   
                  AND prfd003 = g_prfd_d_t.prfd003  
 
                  AND prfd004 = g_prfd_d_t.prfd004  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prfd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prfd_d[l_ac].* = g_prfd_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prfd_t",SQLCA.sqlcode,1)
                     LET g_prfd_d[l_ac].* = g_prfd_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfc_m.prfc001
               LET gs_keys_bak[1] = g_prfc001_t
               LET gs_keys[2] = g_prfd_d[g_detail_idx].prfd002
               LET gs_keys_bak[2] = g_prfd_d_t.prfd002
               LET gs_keys[3] = g_prfd_d[g_detail_idx].prfd003
               LET gs_keys_bak[3] = g_prfd_d_t.prfd003
               LET gs_keys[4] = g_prfd_d[g_detail_idx].prfd004
               LET gs_keys_bak[4] = g_prfd_d_t.prfd004
               CALL aprm501_update_b('prfd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprm501_unlock_b("prfd_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prfd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prfd_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
      DISPLAY ARRAY g_prfd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW 
            CALL aprm501_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx2 = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL aprm501_idx_chk()
            LET g_current_page = 2
      
         #自訂ACTION(detail_show,page_2)
         
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
 
      
]]>
  </section>
  <section id="aprm501.input.head" ver="1" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcl003,g_prfc_m.prfcl004, 
          g_prfc_m.prfcstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.prfcl001 = g_prfc_m.prfc001
LET g_master_multi_table_t.prfcl003 = g_prfc_m.prfcl003
LET g_master_multi_table_t.prfcl004 = g_prfc_m.prfcl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.prfcl001 = ''
LET g_master_multi_table_t.prfcl003 = ''
LET g_master_multi_table_t.prfcl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<prfc001>>----
         #此段落由子樣板a02產生
         AFTER FIELD prfc001
            
            #add-point:AFTER FIELD prfc001
            {<point name="input.a.prfc001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfc001
            #add-point:BEFORE FIELD prfc001
            {<point name="input.b.prfc001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfc001
            #add-point:ON CHANGE prfc001
            {<point name="input.g.prfc001" />}
            #END add-point
 
         #----<<prfc002>>----
         #此段落由子樣板a02產生
         AFTER FIELD prfc002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfc_m.prfc002,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfc002
            END IF
 
 
            #add-point:AFTER FIELD prfc002
            {<point name="input.a.prfc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfc002
            #add-point:BEFORE FIELD prfc002
            {<point name="input.b.prfc002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfc002
            #add-point:ON CHANGE prfc002
            {<point name="input.g.prfc002" />}
            #END add-point
 
         #----<<prfcunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcunit
            #add-point:BEFORE FIELD prfcunit
            {<point name="input.b.prfcunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcunit
            
            #add-point:AFTER FIELD prfcunit
            {<point name="input.a.prfcunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfcunit
            #add-point:ON CHANGE prfcunit
            {<point name="input.g.prfcunit" />}
            #END add-point
 
         #----<<prfcl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcl003
            #add-point:BEFORE FIELD prfcl003
            {<point name="input.b.prfcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcl003
            
            #add-point:AFTER FIELD prfcl003
            {<point name="input.a.prfcl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfcl003
            #add-point:ON CHANGE prfcl003
            {<point name="input.g.prfcl003" />}
            #END add-point
 
         #----<<prfcl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcl004
            #add-point:BEFORE FIELD prfcl004
            {<point name="input.b.prfcl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcl004
            
            #add-point:AFTER FIELD prfcl004
            {<point name="input.a.prfcl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfcl004
            #add-point:ON CHANGE prfcl004
            {<point name="input.g.prfcl004" />}
            #END add-point
 
         #----<<prfcstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prfcstus
            #add-point:BEFORE FIELD prfcstus
            {<point name="input.b.prfcstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfcstus
            
            #add-point:AFTER FIELD prfcstus
            {<point name="input.a.prfcstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfcstus
            #add-point:ON CHANGE prfcstus
            {<point name="input.g.prfcstus" />}
            #END add-point
 
         #----<<prfcownid>>----
         #----<<prfcowndp>>----
         #----<<prfccrtid>>----
         #----<<prfccrtdp>>----
         #----<<prfccrtdt>>----
         #----<<prfcmodid>>----
         #----<<prfcmoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<prfc001>>----
         #Ctrlp:input.c.prfc001
         ON ACTION controlp INFIELD prfc001
            #add-point:ON ACTION controlp INFIELD prfc001
            {<point name="input.c.prfc001" />}
            #END add-point
 
         #----<<prfc002>>----
         #Ctrlp:input.c.prfc002
         ON ACTION controlp INFIELD prfc002
            #add-point:ON ACTION controlp INFIELD prfc002
            {<point name="input.c.prfc002" />}
            #END add-point
 
         #----<<prfcunit>>----
         #Ctrlp:input.c.prfcunit
         ON ACTION controlp INFIELD prfcunit
            #add-point:ON ACTION controlp INFIELD prfcunit
            {<point name="input.c.prfcunit" />}
            #END add-point
 
         #----<<prfcl003>>----
         #Ctrlp:input.c.prfcl003
         ON ACTION controlp INFIELD prfcl003
            #add-point:ON ACTION controlp INFIELD prfcl003
            {<point name="input.c.prfcl003" />}
            #END add-point
 
         #----<<prfcl004>>----
         #Ctrlp:input.c.prfcl004
         ON ACTION controlp INFIELD prfcl004
            #add-point:ON ACTION controlp INFIELD prfcl004
            {<point name="input.c.prfcl004" />}
            #END add-point
 
         #----<<prfcstus>>----
         #Ctrlp:input.c.prfcstus
         ON ACTION controlp INFIELD prfcstus
            #add-point:ON ACTION controlp INFIELD prfcstus
            {<point name="input.c.prfcstus" />}
            #END add-point
 
         #----<<prfcownid>>----
         #----<<prfcowndp>>----
         #----<<prfccrtid>>----
         #----<<prfccrtdp>>----
         #----<<prfccrtdt>>----
         #----<<prfcmodid>>----
         #----<<prfcmoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prfc_m.prfc001             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prfc_t (prfcent,prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid, 
                   prfccrtdp,prfccrtdt,prfcmodid,prfcmoddt)
               VALUES (g_enterprise,g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcstus, 
                   g_prfc_m.prfcownid,g_prfc_m.prfcowndp,g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdt, 
                   g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prfc_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prfc_m.prfc001 = g_master_multi_table_t.prfcl001 AND
         g_prfc_m.prfcl003 = g_master_multi_table_t.prfcl003 AND 
         g_prfc_m.prfcl004 = g_master_multi_table_t.prfcl004  THEN
         ELSE 
            LET l_var_keys[01] = g_prfc_m.prfc001
            LET l_field_keys[01] = 'prfcl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prfcl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prfcl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prfc_m.prfcl003
            LET l_fields[01] = 'prfcl003'
            LET l_vars[02] = g_prfc_m.prfcl004
            LET l_fields[02] = 'prfcl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prfclent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prfcl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprm501_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prfc_t SET (prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid,prfccrtdp, 
                   prfccrtdt,prfcmodid,prfcmoddt) = (g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit, 
                   g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcowndp,g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp, 
                   g_prfc_m.prfccrtdt,g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt)
                WHERE prfcent = g_enterprise AND prfc001 = g_prfc001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfc_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prfc_m.prfc001 = g_master_multi_table_t.prfcl001 AND
         g_prfc_m.prfcl003 = g_master_multi_table_t.prfcl003 AND 
         g_prfc_m.prfcl004 = g_master_multi_table_t.prfcl004  THEN
         ELSE 
            LET l_var_keys[01] = g_prfc_m.prfc001
            LET l_field_keys[01] = 'prfcl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prfcl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prfcl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prfc_m.prfcl003
            LET l_fields[01] = 'prfcl003'
            LET l_vars[02] = g_prfc_m.prfcl004
            LET l_fields[02] = 'prfcl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prfclent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prfcl_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prfc001_t = g_prfc_m.prfc001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="aprm501.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prfc001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prfdstus
               WHEN "s_detail2"
                  NEXT FIELD pmaa001
 
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprm501_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prfd_d.clear()   
   CALL g_prfd2_d.clear()  
 
 
 
   INITIALIZE g_prfc_m.* LIKE prfc_t.*             #DEFAULT 設定
   
   LET g_prfc001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prfc_m.prfcownid = g_user
      LET g_prfc_m.prfcowndp = g_dept
      LET g_prfc_m.prfccrtid = g_user
      LET g_prfc_m.prfccrtdp = g_dept 
      LET g_prfc_m.prfccrtdt = cl_get_current()
      LET g_prfc_m.prfcmodid = ""
      LET g_prfc_m.prfcmoddt = ""
      #LET g_prfc_m.prfcstus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprm501_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfc_m.* = g_prfc_m_t.*
         CALL aprm501_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prfd_d.clear()
      CALL g_prfd2_d.clear()
 
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_prfc001_t = g_prfc_m.prfc001
 
   
   LET g_wc = g_wc,  
              " OR ( prfcent = '" ||g_enterprise|| "' AND",
              " prfc001 = '", g_prfc_m.prfc001 CLIPPED, "' "
 
              , ") "
   
   CLOSE aprm501_cl
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprm501_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prfd_t
                  (prfdent,
                   prfd001,
                   prfd002,prfd003,prfd004
                   ,prfdstus,prfdunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_prfd_d[g_detail_idx].prfdstus,g_prfd_d[g_detail_idx].prfdunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO pmaa_t
                  (pmaaent,
                   ,
                   pmaa001
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmaa_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprm501_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprm501_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prfd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm501_bcl USING g_enterprise,
                                       g_prfc_m.prfc001,g_prfd_d[g_detail_idx].prfd002,g_prfd_d[g_detail_idx].prfd003, 
                                           g_prfd_d[g_detail_idx].prfd004
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm501_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "pmaa_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm501_bcl2 USING g_enterprise,
                                             g_prfc_m.prfc001,g_prfd_d[g_detail_idx].prfd002,g_prfd_d[g_detail_idx].prfd003, 
                                                 g_prfd_d[g_detail_idx].prfd004,
                                             g_prfd2_d[g_detail_idx2].pmaa001
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm501_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT prfc001,prfc002,prfcunit,'','',prfcstus,prfcownid,'',prfcowndp,'',prfccrtid, 
       '',prfccrtdp,'',prfccrtdt,prfcmodid,'',prfcmoddt FROM prfc_t WHERE prfcent= ? AND prfc001=? FOR  
       UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aprm501_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprm501 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprm501_init()   
 
      #進入選單 Menu (="N")
      CALL aprm501_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprm501
      
   END IF 
   
   CLOSE aprm501_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aprm501.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprm501_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prfc_m.prfc001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid,prfccrtdp,prfccrtdt, 
        prfcmodid,prfcmoddt
 INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcowndp, 
     g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdt,g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt
 FROM prfc_t
 WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
 
   ERROR ""
  
   LET g_prfc001_t = g_prfc_m.prfc001
 
   CALL s_transaction_begin()
   
   OPEN aprm501_cl USING g_enterprise,g_prfc_m.prfc001
 
   IF STATUS THEN
      CALL cl_err("OPEN aprm501_cl:", STATUS, 1)
      CLOSE aprm501_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aprm501_cl INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcl003,g_prfc_m.prfcl004, 
       g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcownid_desc,g_prfc_m.prfcowndp,g_prfc_m.prfcowndp_desc, 
       g_prfc_m.prfccrtid,g_prfc_m.prfccrtid_desc,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdp_desc,g_prfc_m.prfccrtdt, 
       g_prfc_m.prfcmodid,g_prfc_m.prfcmodid_desc,g_prfc_m.prfcmoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfc_m.prfc001,SQLCA.sqlcode,0)
      CLOSE aprm501_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprm501_show()
   WHILE TRUE
      LET g_prfc001_t = g_prfc_m.prfc001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prfc_m.prfcmodid = g_user 
LET g_prfc_m.prfcmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aprm501_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfc_m.* = g_prfc_m_t.*
         CALL aprm501_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_prfc_m.prfc001 != g_prfc001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prfd_t SET prfd001 = g_prfc_m.prfc001
 
          WHERE prfdent = g_enterprise AND prfd001 = g_prfc001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prfd_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prfd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE pmaa_t
            SET  = g_prfc_m.prfc001
 
          WHERE pmaaent = g_enterprise AND
                 = g_prfc001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("pmaa_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("pmaa_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_prfc_m.prfc001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aprm501_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prfc_m.prfc001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aprm501.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aprm501.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="aprm501.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprm501_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prfd_d.clear()
   CALL g_prfd2_d.clear()
 
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprm501_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprm501_browser_fill("")
      CALL aprm501_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL aprm501_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprm501_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprm501_reproduce()
   DEFINE l_newno     LIKE prfc_t.prfc001 
   DEFINE l_oldno     LIKE prfc_t.prfc001 
 
   DEFINE l_master    RECORD LIKE prfc_t.*
   DEFINE l_detail    RECORD LIKE prfd_t.*
 
   DEFINE l_detail2    RECORD LIKE pmaa_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_prfc_m.prfc001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prfc001_t = g_prfc_m.prfc001
 
    
   LET g_prfc_m.prfc001 = ""
 
    
   CALL aprm501_set_entry('a')
   CALL aprm501_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prfc_m.prfcownid = g_user
      LET g_prfc_m.prfcowndp = g_dept
      LET g_prfc_m.prfccrtid = g_user
      LET g_prfc_m.prfccrtdp = g_dept 
      LET g_prfc_m.prfccrtdt = cl_get_current()
      LET g_prfc_m.prfcmodid = ""
      LET g_prfc_m.prfcmoddt = ""
      #LET g_prfc_m.prfcstus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprm501_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " prfc001 = '", g_prfc_m.prfc001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprm501_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prfc001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprm501_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprm501.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprm501_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("prfc001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprm501_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprm501.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprm501_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prfc_m_t.* = g_prfc_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprm501_b_fill() #單身填充
      CALL aprm501_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prfc_m.prfcownid_desc = cl_get_username(g_prfc_m.prfcownid)
      #LET g_prfc_m.prfcowndp_desc = cl_get_deptname(g_prfc_m.prfcowndp)
      #LET g_prfc_m.prfccrtid_desc = cl_get_username(g_prfc_m.prfccrtid)
      #LET g_prfc_m.prfccrtdp_desc = cl_get_deptname(g_prfc_m.prfccrtdp)
      #LET g_prfc_m.prfcmodid_desc = cl_get_username(g_prfc_m.prfcmodid)
      ##LET g_prfc_m.prfccnfid_desc = cl_get_deptname(g_prfc_m.prfccnfid)
      ##LET g_prfc_m.prfcpstid_desc = cl_get_deptname(g_prfc_m.prfcpstid)
      
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcl003,g_prfc_m.prfcl004, 
       g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcownid_desc,g_prfc_m.prfcowndp,g_prfc_m.prfcowndp_desc, 
       g_prfc_m.prfccrtid,g_prfc_m.prfccrtid_desc,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdp_desc,g_prfc_m.prfccrtdt, 
       g_prfc_m.prfcmodid,g_prfc_m.prfcmodid_desc,g_prfc_m.prfcmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prfc_m.prfcstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prfd_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_prfd2_d.getLength()
      #帶出公用欄位reference值
      #此段落由子樣板a12產生
      ##LET g_prfd2_d[l_ac].prfdownid_desc = cl_get_username(g_prfd2_d[l_ac].prfdownid)
      ##LET g_prfd2_d[l_ac].prfdowndp_desc = cl_get_deptname(g_prfd2_d[l_ac].prfdowndp)
      ##LET g_prfd2_d[l_ac].prfdcrtid_desc = cl_get_username(g_prfd2_d[l_ac].prfdcrtid)
      ##LET g_prfd2_d[l_ac].prfdcrtdp_desc = cl_get_deptname(g_prfd2_d[l_ac].prfdcrtdp)
      ##LET g_prfd2_d[l_ac].prfdmodid_desc = cl_get_username(g_prfd2_d[l_ac].prfdmodid)
      ##LET g_prfd2_d[l_ac].prfdcnfid_desc = cl_get_deptname(g_prfd2_d[l_ac].prfdcnfid)
      ##LET g_prfd2_d[l_ac].prfdpstid_desc = cl_get_deptname(g_prfd2_d[l_ac].prfdpstid)
      
 
 
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprm501_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprm501.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprm501_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prfc_m.prfc001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_prfc_m.prfcstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
 
 
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
 
 
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
 
 
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prfc_t SET prfcstus = lc_state 
    WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
      LET g_prfc_m.prfcstus = lc_state
      DISPLAY BY NAME g_prfc_m.prfcstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprm501.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprm501_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prfc001 = g_prfc_m.prfc001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprm501_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprm501_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprm501_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprm501_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prfc001 = g_prfc001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_prfd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprm501_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
                              CALL aprm501_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprm501_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_prfd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprm501_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL aprm501_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprm501_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprm501_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprm501_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prfd002
            END IF
        
         ON ACTION statechange
            CALL aprm501_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprm501_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprm501_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprm501_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #ACTION表單列
         
         ON ACTION first
            CALL aprm501_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm501_idx_chk()
            
         ON ACTION previous
            CALL aprm501_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm501_idx_chk()
            
         ON ACTION jump
            CALL aprm501_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm501_idx_chk()
            
         ON ACTION next
            CALL aprm501_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm501_idx_chk()
            
         ON ACTION last
            CALL aprm501_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprm501_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL aprm501_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL aprm501_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL aprm501_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL aprm501_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL aprm501_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL aprm501_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         ON ACTION related_document
            CALL cl_doc()
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprm501.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprm501_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prfc_m.prfc001 = g_browser[g_current_idx].b_prfc001   
 
    SELECT UNIQUE prfc001,prfc002,prfcunit,prfcstus,prfcownid,prfcowndp,prfccrtid,prfccrtdp,prfccrtdt, 
        prfcmodid,prfcmoddt
 INTO g_prfc_m.prfc001,g_prfc_m.prfc002,g_prfc_m.prfcunit,g_prfc_m.prfcstus,g_prfc_m.prfcownid,g_prfc_m.prfcowndp, 
     g_prfc_m.prfccrtid,g_prfc_m.prfccrtdp,g_prfc_m.prfccrtdt,g_prfc_m.prfcmodid,g_prfc_m.prfcmoddt
 FROM prfc_t
 WHERE prfcent = g_enterprise AND prfc001 = g_prfc_m.prfc001
   CALL aprm501_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprm501.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprm501_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm501_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprm501_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprm501.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprm501_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prfd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prfd_t 
         SET (prfd001,
              prfd002,prfd003,prfd004
              ,prfdstus,prfdunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_prfd_d[g_detail_idx].prfdstus,g_prfd_d[g_detail_idx].prfdunit) 
         WHERE prfdent = g_enterprise AND prfd001 = ps_keys_bak[1] AND prfd002 = ps_keys_bak[2] AND prfd003 = ps_keys_bak[3] AND prfd004 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prfd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prfd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmaa_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE pmaa_t 
         SET (,
              pmaa001
              ) 
              = 
             (ps_keys[1]
              ) 
         WHERE pmaaent = g_enterprise AND pmaa001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmaa_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmaa_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmaa_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE pmaa_t 
         SET () 
              = 
             () 
         WHERE pmaaent = g_enterprise AND 
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmaa_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmaa_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
