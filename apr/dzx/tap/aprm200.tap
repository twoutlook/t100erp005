<add_points prog="aprm200" std_prog="aprm200" erpver="1.0" module="APR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                  LET g_prcd2_d[l_ac].prcd001 = g_prcd_d[l_ac].prcd001

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdownid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcd2_d[l_ac].prcdownid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcd2_d[l_ac].prcdownid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdowndp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcd2_d[l_ac].prcdowndp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcd2_d[l_ac].prcdowndp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdcrtid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcd2_d[l_ac].prcdcrtid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcd2_d[l_ac].prcdcrtid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdcrtdp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcd2_d[l_ac].prcdcrtdp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcd2_d[l_ac].prcdcrtdp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdmodid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcd2_d[l_ac].prcdmodid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcd2_d[l_ac].prcdmodid_desc
            
      LET g_ref_fields[1] = g_prcd_d[l_ac].prcd001
      CALL ap_ref_array2(g_ref_fields," SELECT prcdl003,prcdl004 FROM prcdl_t WHERE prcdlent = '"
          ||g_enterprise||"'  AND prcdl001 = ? AND prcdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcd_d[l_ac].prcdl003 = g_rtn_fields[1]
      LET g_prcd_d[l_ac].prcdl004 = g_rtn_fields[2]
      DISPLAY BY NAME g_prcd_d[l_ac].prcdl003
      DISPLAY BY NAME g_prcd_d[l_ac].prcdl004
      
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd_d[l_ac].prcd002
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2100' AND oocql002 = ? AND oocql003 = '"||g_dlang||"' ","") RETURNING g_rtn_fields
      LET g_prcd_d[l_ac].prcd002_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_prcd_d[l_ac].prcd002_desc
      

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcd_d[l_ac].prcd003
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2101' AND oocql002 = ? AND oocql003 = '"||g_dlang||"' ","") RETURNING g_rtn_fields
      LET g_prcd_d[l_ac].prcd003_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_prcd_d[l_ac].prcd003_desc]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="construct.a.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.a.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.b.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcc001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prcc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcc001  #顯示到畫面上

            NEXT FIELD prcc001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcc002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prcc002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcc002  #顯示到畫面上

            NEXT FIELD prcc002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcc003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prcc003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcc003  #顯示到畫面上

            NEXT FIELD prcc003                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = "prcd098='",g_argv[1],"' "
            CALL q_prcd001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcd001  #顯示到畫面上

            NEXT FIELD prcd001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prcd002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcd002  #顯示到畫面上

            NEXT FIELD prcd002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prcd003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcd003  #顯示到畫面上

            NEXT FIELD prcd003                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page2.prcdcrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcdcrtdp  #顯示到畫面上
            NEXT FIELD prcdcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.prcdcrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcdcrtid  #顯示到畫面上
            NEXT FIELD prcdcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.prcdmodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcdmodid  #顯示到畫面上
            NEXT FIELD prcdmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.prcdowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcdowndp  #顯示到畫面上
            NEXT FIELD prcdowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.prcdownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcdownid  #顯示到畫面上
            NEXT FIELD prcdownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = "prce001 IN (SELECT prcd001 FROM prcd_t WHERE prcd098='",g_argv[1],"' )"
            CALL q_prce003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prce003  #顯示到畫面上

            NEXT FIELD prce003                     #返回原欄位

]]>
</point>
  <point name="construct.c.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="construct.c.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc=" 1=1"
   END IF   
   LET g_wc=g_wc," AND prcd098='",g_argv[1],"' "]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   #qiaozy
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " prcd098 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      LET g_wc = " 1=1"
   END IF
   RETURN   ]]>
</point>
  <point name="delete.after_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.after_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.before_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.before_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.m_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.m_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.after_body_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.after_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.after_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.before_body_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.before_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.before_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.m_body_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.body3.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcc_d[l_ac].prcc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocql001 = '2100' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcc_d[l_ac].prcc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcc_d[l_ac].prcc002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcc_d[l_ac].prcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocql001 = '2101' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcc_d[l_ac].prcc003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcc_d[l_ac].prcc003_desc

   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_prcc_d[l_ac].prcc001
   CALL ap_ref_array2(g_ref_fields," SELECT prccl003,prccl004 FROM prccl_t WHERE prcclent = '"||g_enterprise||"' AND prccl001 = ? AND prccl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_prcc_d[l_ac].prccl003 = g_rtn_fields[1] 
   LET g_prcc_d[l_ac].prccl004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_prcc_d[l_ac].prccl003,g_prcc_d[l_ac].prccl004]]>
</point>
  <point name="fetch.after_fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="fetch.before_fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_sql = "SELECT  UNIQUE prce002,prce003,'',prceacti,prcesite,prceunit FROM prce_t",
               " WHERE prceent=? AND prce001=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY prce_t.prce002,prce_t.prce003"    ]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN #qiaozy
      LET g_detail_idx=1
   END IF   ]]>
</point>
  <point name="fetch.fill2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF g_prcd3_d[l_ac].prce002 = '1' THEN
         SELECT rtaal003 INTO g_prcd3_d[l_ac].prce003_desc
           FROM rtaal_t
          WHERE rtaalent = g_enterprise
            AND rtaal001 = g_prcd3_d[l_ac].prce003
            AND rtaal002 = g_dlang
      ELSE
         SELECT ooefl003 INTO g_prcd3_d[l_ac].prce003_desc
           FROM ooefl_t
          WHERE ooeflent = g_enterprise
            AND ooefl001 = g_prcd3_d[l_ac].prce003
            AND ooefl002 = g_dlang
      END IF]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="init.init" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_argv[1]='2' THEN
      CALL cl_set_comp_visible("folder_2",false)
      CALL cl_set_comp_visible("lbl_dbegin,lbl_dsep,lbl_dend,idx,cnt",false)
   END IF   ]]>
</point>
  <point name="input.a.page1.prcc001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prcc_d[g_detail_idx].prcc001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcc_d[g_detail_idx].prcc001 != g_prcc_d_t.prcc001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcc_t WHERE "||"prccent = '" ||g_enterprise|| "' AND "||"prcc001 = '"||g_prcc_d[g_detail_idx].prcc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.prcc002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcc_d[l_ac].prcc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcc_d[l_ac].prcc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcc_d[l_ac].prcc002_desc
]]>
</point>
  <point name="input.a.page1.prcc003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcc_d[l_ac].prcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcc_d[l_ac].prcc003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcc_d[l_ac].prcc003_desc
]]>
</point>
  <point name="input.a.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a05產生
            IF  g_prcd_d[g_detail_idx].prcd001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcd_d[g_detail_idx].prcd001 != g_prcd_d_t.prcd001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcd_t WHERE "||"prcdent = '" ||g_enterprise|| "' AND "||"prcd001 = '"||g_prcd_d[g_detail_idx].prcd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd_d[l_ac].prcd002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd_d[l_ac].prcd002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd_d[l_ac].prcd002_desc
]]>
</point>
  <point name="input.a.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd_d[l_ac].prcd003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd_d[l_ac].prcd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd_d[l_ac].prcd003_desc
]]>
</point>
  <point name="input.a.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page2.prcc001_2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prcc2_d[g_detail_idx].prcc001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcc2_d[g_detail_idx].prcc001 != g_prcc2_d_t.prcc001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcc_t WHERE "||"prccent = '" ||g_enterprise|| "' AND "||"prcc001 = '"||g_prcc2_d[g_detail_idx].prcc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.prcd001_2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prcd2_d[g_detail_idx].prcd001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcd2_d[g_detail_idx].prcd001 != g_prcd2_d_t.prcd001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcd_t WHERE "||"prcdent = '" ||g_enterprise|| "' AND "||"prcd001 = '"||g_prcd2_d[g_detail_idx].prcd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a05產生
            IF  g_prcd_d[g_detail_idx].prcd001 IS NOT NULL AND g_prcd3_d[g_detail_idx2].prce002 IS NOT NULL AND g_prcd3_d[g_detail_idx2].prce003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcd_d[g_detail_idx].prcd001 != g_prcd_d[g_detail_idx].prcd001 OR g_prcd3_d[g_detail_idx2].prce002 != g_prcd3_d_t.prce002 OR g_prcd3_d[g_detail_idx2].prce003 != g_prcd3_d_t.prce003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prce_t WHERE "||"prceent = '" ||g_enterprise|| "' AND "||"prce001 = '"||g_prcd_d[g_detail_idx].prcd001 ||"' AND "|| "prce002 = '"||g_prcd3_d[g_detail_idx2].prce002 ||"' AND "|| "prce003 = '"||g_prcd3_d[g_detail_idx2].prce003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a05產生
            IF  g_prcd_d[g_detail_idx].prcd001 IS NOT NULL AND g_prcd3_d[g_detail_idx2].prce002 IS NOT NULL AND g_prcd3_d[g_detail_idx2].prce003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcd_d[g_detail_idx].prcd001 != g_prcd_d[g_detail_idx].prcd001 OR g_prcd3_d[g_detail_idx2].prce002 != g_prcd3_d_t.prce002 OR g_prcd3_d[g_detail_idx2].prce003 != g_prcd3_d_t.prce003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prce_t WHERE "||"prceent = '" ||g_enterprise|| "' AND "||"prce001 = '"||g_prcd_d[g_detail_idx].prcd001 ||"' AND "|| "prce002 = '"||g_prcd3_d[g_detail_idx2].prce002 ||"' AND "|| "prce003 = '"||g_prcd3_d[g_detail_idx2].prce003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.a.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.b.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.b.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.body3.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body3.a_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.a_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.after_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body3.after_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body3.after_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.b_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.b_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body3.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body3.before_row" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.body3.m_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.body3.m_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.c.page1.prcc001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcc002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcc003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.c.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.detail_input.page1.update_item" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.detail_input.page3.update_item" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcd098" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcdl003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcdl004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcdstus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page1.prcdunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page3.prce002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page3.prce003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page3.prcesite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.g.page3.prceunit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                        ]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="key_update_b.after_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="key_update_b.before_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="key_update_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="key_update_b.m_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="modify.after_modify" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.before_modify" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd_d[l_ac].prcd002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd_d[l_ac].prcd002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd_d[l_ac].prcd002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd_d[l_ac].prcd003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd_d[l_ac].prcd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd_d[l_ac].prcd003_desc

   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_prcd_d[l_ac].prcd001
   CALL ap_ref_array2(g_ref_fields," SELECT prcdl003,prcdl004 FROM prcdl_t WHERE prcdlent = '"||g_enterprise||"' AND prcdl001 = ? AND prcdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_prcd_d[l_ac].prcdl003 = g_rtn_fields[1] 
   LET g_prcd_d[l_ac].prcdl004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_prcd_d[l_ac].prcdl003,g_prcd_d[l_ac].prcdl004]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prcd2_d[l_ac].prcdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd2_d[l_ac].prcdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prcd2_d[l_ac].prcdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd2_d[l_ac].prcdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd2_d[l_ac].prcdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd2_d[l_ac].prcdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prcd2_d[l_ac].prcdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd2_d[l_ac].prcdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd2_d[l_ac].prcdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd2_d[l_ac].prcdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd2_d[l_ac].prcdcrtdp_desc
]]>
</point>
  <point name="show.body3.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcd3_d[l_ac].prce003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcd3_d[l_ac].prce003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcd3_d[l_ac].prce003_desc
]]>
</point>
  <point name="ui_dialog.after_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_while" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.prcdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.prcdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.prcdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.prcdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.prcdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.prcdcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.prceacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aprm200.b_fill" ver="8" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprm200_b_fill(p_wc2)
   DEFINE p_wc2           STRING
   DEFINE l_ac_t          LIKE type_t.num5
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE prcd001,'','',prcd002,'',prcd003,'',prcd004,prcd005,prcd006,prcd098,prcdunit, 
       prcdstus,prcd001,prcdmodid,'',prcdmoddt,prcdownid,'',prcdowndp,'',prcdcrtid,'',prcdcrtdp,'',prcdcrtdt FROM prcd_t", 

 
               " LEFT JOIN prce_t ON prceent = prcdent AND prcd001 = prce001",
 
 
               " LEFT JOIN prcdl_t ON prcd001 = prcdl001 AND prcdl002 = '",g_lang,"'",
               " WHERE prcdent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup')
                      " ORDER BY prcd_t.prcd001"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aprm200_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aprm200_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_prcd_d.clear()
   CALL g_prcd2_d.clear()   
   CALL g_prcd3_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_prcd_d[l_ac].prcd001,g_prcd_d[l_ac].prcdl003,g_prcd_d[l_ac].prcdl004,g_prcd_d[l_ac].prcd002, 
       g_prcd_d[l_ac].prcd002_desc,g_prcd_d[l_ac].prcd003,g_prcd_d[l_ac].prcd003_desc,g_prcd_d[l_ac].prcd004, 
       g_prcd_d[l_ac].prcd005,g_prcd_d[l_ac].prcd006,g_prcd_d[l_ac].prcd098,g_prcd_d[l_ac].prcdunit, 
       g_prcd_d[l_ac].prcdstus,g_prcd2_d[l_ac].prcd001,g_prcd2_d[l_ac].prcdmodid,g_prcd2_d[l_ac].prcdmodid_desc, 
       g_prcd2_d[l_ac].prcdmoddt,g_prcd2_d[l_ac].prcdownid,g_prcd2_d[l_ac].prcdownid_desc,g_prcd2_d[l_ac].prcdowndp, 
       g_prcd2_d[l_ac].prcdowndp_desc,g_prcd2_d[l_ac].prcdcrtid,g_prcd2_d[l_ac].prcdcrtid_desc,g_prcd2_d[l_ac].prcdcrtdp, 
       g_prcd2_d[l_ac].prcdcrtdp_desc,g_prcd2_d[l_ac].prcdcrtdt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aprm200_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
 
   CALL g_prcd_d.deleteElement(g_prcd_d.getLength())   
   CALL g_prcd2_d.deleteElement(g_prcd2_d.getLength())
   CALL g_prcd3_d.deleteElement(g_prcd3_d.getLength())
 
 
   #確定指標無超過上限, 超過則指到最後一筆
   IF g_detail_idx > g_prcd_d.getLength() THEN
      LET g_detail_idx = g_prcd_d.getLength()
   END IF
 
   #將key欄位填到每個page
   LET l_ac_t = g_detail_idx
   FOR g_detail_idx = 1 TO g_prcd_d.getLength()
      LET g_prcd2_d[g_detail_idx].prcd001 = g_prcd_d[g_detail_idx].prcd001 
      #LET g_prcd3_d[g_detail_idx2].prce002 = g_prcd_d[g_detail_idx].prcd001 
      #LET g_prcd3_d[g_detail_idx2].prce003 =  
 
   END FOR
   LET g_detail_idx = l_ac_t
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aprm200_pb
   
   LET l_ac = 1
   IF g_prcd_d.getLength() > 0 THEN
      CALL aprm200_fetch()
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprm200.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprm200_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " prcd001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      LET g_wc = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprm200.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprm200_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   IF NOT cl_ask_delete() THEN
      #不刪除
      RETURN
   END IF
   
   LET li_ac = ARR_CURR()
   LET g_prcd_d_t.* = g_prcd_d[li_ac].*
   
   CALL s_transaction_begin()  
   
   #add-point:delete段刪除前
   {<point name="delete.before_delete" mark="Y"/>}
   #end add-point 
   
   #刪除單頭
   DELETE FROM prcd_t 
         WHERE prcd001 = g_prcd_d_t.prcd001
 
           
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
           
   IF SQLCA.sqlcode THEN
      CALL cl_err("prcd_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段刪除後
   {<point name="delete.after_delete"/>}
   #end add-point 
   
   #刪除單頭
   #add-point:delete段刪除前
   {<point name="delete.before_delete2" mark="Y"/>}
   #end add-point 
   DELETE FROM prcd_t 
         WHERE prce001 = g_prcd_d_t.prcd001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete2"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("prcd_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.after_delete2"/>}
   #end add-point 
 
 
   
END FUNCTION
]]>
</section>
  <section id="aprm200.delete_b" ver="3" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprm200_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "prcd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM prcd_t
       WHERE prcdent = g_enterprise AND
         prcd001 = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "prce_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM prce_t
       WHERE prceent = g_enterprise AND
         prce001 = ps_keys_bak[1] AND prce002 = ps_keys_bak[2] AND prce003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("prce_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
   #單頭刪除, 連帶刪除單身
   LET ls_group = "prcd_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_body_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM prce_t
       WHERE prceent = g_enterprise AND
         prce001 = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_body_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("prce_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_body_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
</section>
  <section id="aprm200.description" ver="35" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000035
#+ 
#+ Filename...: aprm200
#+ Description: 促銷活動計劃維護作業
#+ Creator....: 02482(2014/03/04)
#+ Modifier...: 02296(2014/05/12)
#+ Buildtype..: 應用 t02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aprm200.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aprm200_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_prcd2_d[l_ac].prcdownid_desc = cl_get_username(g_prcd2_d[l_ac].prcdownid)
      #LET g_prcd2_d[l_ac].prcdowndp_desc = cl_get_deptname(g_prcd2_d[l_ac].prcdowndp)
      #LET g_prcd2_d[l_ac].prcdcrtid_desc = cl_get_username(g_prcd2_d[l_ac].prcdcrtid)
      #LET g_prcd2_d[l_ac].prcdcrtdp_desc = cl_get_deptname(g_prcd2_d[l_ac].prcdcrtdp)
      #LET g_prcd2_d[l_ac].prcdmodid_desc = cl_get_username(g_prcd2_d[l_ac].prcdmodid)
      ##LET .prcdcnfid_desc = cl_get_deptname(.prcdcnfid)
      ##LET .prcdpstid_desc = cl_get_deptname(.prcdpstid)
      
 
 
   #帶出公用欄位reference值page3
   
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.body.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
   #add-point:show段單身reference
   {<point name="detail_show.body3.reference"/>}
   #end add-point
 
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aprm200.fetch" ver="6" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprm200_fetch()
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
 
   IF g_detail_idx <= 0 OR g_prcd_d.getLength() = 0 THEN
      RETURN
   END IF
   
   #CALL g_prcd2_d.clear()
   CALL g_prcd3_d.clear()
 
   
   LET li_ac = l_ac 
   
   LET g_sql = "SELECT  UNIQUE prce002,prce003,'',prceacti,prcesite,prceunit FROM prce_t",    
               "",
               " WHERE prceent=? AND prce001=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY prce_t.prce002,prce_t.prce003" 
                      
   #add-point:單身填充前
   {<point name="fetch.before_fill" />}
   #end add-point
   
   PREPARE aprm200_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR aprm200_pb2
   
   OPEN b_fill_curs2 USING g_enterprise,g_prcd_d[g_detail_idx].prcd001
 
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_prcd3_d[l_ac].prce002,g_prcd3_d[l_ac].prce003,g_prcd3_d[l_ac].prce003_desc, 
       g_prcd3_d[l_ac].prceacti,g_prcd3_d[l_ac].prcesite,g_prcd3_d[l_ac].prceunit
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="fetch.fill2"/>}
      #end add-point
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
 
 
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point
   
   #CALL g_prcd2_d.deleteElement(g_prcd2_d.getLength())   
   CALL g_prcd3_d.deleteElement(g_prcd3_d.getLength())   
 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="aprm200.func_signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprm200.global" ver="8" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
    
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_prcd_d RECORD
       prcd001 LIKE prcd_t.prcd001, 
   prcdl003 LIKE prcdl_t.prcdl003, 
   prcdl004 LIKE prcdl_t.prcdl004, 
   prcd002 LIKE prcd_t.prcd002, 
   prcd002_desc LIKE type_t.chr500, 
   prcd003 LIKE prcd_t.prcd003, 
   prcd003_desc LIKE type_t.chr500, 
   prcd004 LIKE prcd_t.prcd004, 
   prcd005 LIKE prcd_t.prcd005, 
   prcd006 LIKE prcd_t.prcd006, 
   prcd098 LIKE prcd_t.prcd098, 
   prcdunit LIKE prcd_t.prcdunit, 
   prcdstus LIKE prcd_t.prcdstus
       END RECORD
PRIVATE TYPE type_g_prcd2_d RECORD
       prcd001 LIKE prcd_t.prcd001, 
   prcdmodid LIKE prcd_t.prcdmodid, 
   prcdmodid_desc LIKE type_t.chr500, 
   prcdmoddt DATETIME YEAR TO SECOND, 
   prcdownid LIKE prcd_t.prcdownid, 
   prcdownid_desc LIKE type_t.chr500, 
   prcdowndp LIKE prcd_t.prcdowndp, 
   prcdowndp_desc LIKE type_t.chr500, 
   prcdcrtid LIKE prcd_t.prcdcrtid, 
   prcdcrtid_desc LIKE type_t.chr500, 
   prcdcrtdp LIKE prcd_t.prcdcrtdp, 
   prcdcrtdp_desc LIKE type_t.chr500, 
   prcdcrtdt DATETIME YEAR TO SECOND
       END RECORD
PRIVATE TYPE type_g_prcd3_d RECORD
       prce002 LIKE prce_t.prce002, 
   prce003 LIKE prce_t.prce003, 
   prce003_desc LIKE type_t.chr500, 
   prceacti LIKE prce_t.prceacti, 
   prcesite LIKE prce_t.prcesite, 
   prceunit LIKE prce_t.prceunit
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      prcdl001 LIKE prcdl_t.prcdl001,
      prcdl002 LIKE prcdl_t.prcdl002,
      prcdl003 LIKE prcdl_t.prcdl003,
      prcdl004 LIKE prcdl_t.prcdl004
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_prcd_d
DEFINE g_master_t                   type_g_prcd_d
DEFINE g_prcd_d          DYNAMIC ARRAY OF type_g_prcd_d
DEFINE g_prcd_d_t        type_g_prcd_d
DEFINE g_prcd2_d   DYNAMIC ARRAY OF type_g_prcd2_d
DEFINE g_prcd2_d_t type_g_prcd2_d
DEFINE g_prcd3_d   DYNAMIC ARRAY OF type_g_prcd3_d
DEFINE g_prcd3_d_t type_g_prcd3_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_detail_idx         LIKE type_t.num5              #單身所在筆數(第一階單身)
DEFINE g_detail_idx2        LIKE type_t.num5              #單身所在筆數(第二階單身)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身總筆數 (第一階單身)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身總筆數 (第二階單身)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_current_page       LIKE type_t.num5              #判斷單身筆數用
DEFINE g_loc                LIKE type_t.chr5              #判斷游標所在位置
 
#多table用wc
DEFINE g_wc_table           STRING
 
DEFINE g_wc2_table2   STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aprm200.idx_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprm200_idx_chk(ps_loc)
   DEFINE ps_loc   LIKE type_t.chr10
   DEFINE li_idx   LIKE type_t.num5
   DEFINE li_cnt   LIKE type_t.num5
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prcd_d.getLength() THEN
         LET g_detail_idx = g_prcd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prcd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_prcd_d.getLength()
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_prcd2_d.getLength() THEN
         LET g_detail_idx = g_prcd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prcd2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_prcd2_d.getLength()
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_prcd3_d.getLength() THEN
         LET g_detail_idx2 = g_prcd3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_prcd3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      LET li_idx = g_detail_idx2
      LET li_cnt = g_prcd3_d.getLength()
   END IF
 
    
   IF ps_loc = 'm' THEN
      DISPLAY li_idx TO FORMONLY.h_index
      DISPLAY li_cnt TO FORMONLY.h_count
      IF g_prcd3_d.getLength() = 0 THEN
         DISPLAY '' TO FORMONLY.idx
         DISPLAY '' TO FORMONLY.cnt
      ELSE
         DISPLAY 1 TO FORMONLY.idx
         DISPLAY g_prcd3_d.getLength() TO FORMONLY.cnt
      END IF
 
   ELSE
      DISPLAY li_idx TO FORMONLY.idx
      DISPLAY li_cnt TO FORMONLY.cnt
   END IF
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprm200.init" ver="5" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aprm200_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
 
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1   
   LET g_error_show = 1
   
      CALL cl_set_combo_scc('prce002','6560') 
 
   LET l_ac = 1
   LET g_detail_multi_table_t.prcdl001 = g_prcd_d[l_ac].prcd001
LET g_detail_multi_table_t.prcdl002 = g_dlang
LET g_detail_multi_table_t.prcdl003 = g_prcd_d[l_ac].prcdl003
LET g_detail_multi_table_t.prcdl004 = g_prcd_d[l_ac].prcdl004
 
   
   
 
   #避免USER直接進入第二單身時無資料
   IF g_prcd_d.getLength() > 0 THEN
      LET g_master_t.* = g_prcd_d[1].*
      LET g_master.* = g_prcd_d[1].*
   END IF
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aprm200_default_search()
   
END FUNCTION
]]>
</section>
  <section id="aprm200.input" ver="8" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprm200_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prcd001,'','',prcd002,'',prcd003,'',prcd004,prcd005,prcd006,prcd098,prcdunit, 
       prcdstus,'',prcdmodid,'',prcdmoddt,prcdownid,'',prcdowndp,'',prcdcrtid,'',prcdcrtdp,'',prcdcrtdt  
       FROM prcd_t WHERE prcdent=? AND prcd001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aprm200_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prce002,prce003,'',prceacti,prcesite,prceunit FROM prce_t WHERE prceent=?  
       AND prce001=? AND prce002=? AND prce003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aprm200_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   LET lb_reproduce = FALSE
   
   #add-point:input段修改前
   {<point name="input.before_input"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_prcd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prcd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_current_page = 1
            IF p_cmd = 'u' THEN
               CALL aprm200_b_fill(g_wc)
            END IF
            LET g_detail_cnt = g_prcd_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
            
         BEFORE ROW
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_master_t.* = g_prcd_d[l_ac].*
            LET g_master.* = g_prcd_d[l_ac].*
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_detail_idx = l_ac
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_prcd_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_prcd_d[l_ac].prcd001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prcd_d_t.* = g_prcd_d[l_ac].*  #BACKUP
               IF NOT aprm200_lock_b("prcd_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm200_bcl INTO g_prcd_d[l_ac].prcd001,g_prcd_d[l_ac].prcdl003,g_prcd_d[l_ac].prcdl004, 
                      g_prcd_d[l_ac].prcd002,g_prcd_d[l_ac].prcd002_desc,g_prcd_d[l_ac].prcd003,g_prcd_d[l_ac].prcd003_desc, 
                      g_prcd_d[l_ac].prcd004,g_prcd_d[l_ac].prcd005,g_prcd_d[l_ac].prcd006,g_prcd_d[l_ac].prcd098, 
                      g_prcd_d[l_ac].prcdunit,g_prcd_d[l_ac].prcdstus,g_prcd2_d[l_ac].prcd001,g_prcd2_d[l_ac].prcdmodid, 
                      g_prcd2_d[l_ac].prcdmodid_desc,g_prcd2_d[l_ac].prcdmoddt,g_prcd2_d[l_ac].prcdownid, 
                      g_prcd2_d[l_ac].prcdownid_desc,g_prcd2_d[l_ac].prcdowndp,g_prcd2_d[l_ac].prcdowndp_desc, 
                      g_prcd2_d[l_ac].prcdcrtid,g_prcd2_d[l_ac].prcdcrtid_desc,g_prcd2_d[l_ac].prcdcrtdp, 
                      g_prcd2_d[l_ac].prcdcrtdp_desc,g_prcd2_d[l_ac].prcdcrtdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prcd_d_t.prcd001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aprm200_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL aprm200_set_entry_b(l_cmd)
            CALL aprm200_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.prcdl001 = g_prcd_d[l_ac].prcd001
LET g_detail_multi_table_t.prcdl002 = g_dlang
LET g_detail_multi_table_t.prcdl003 = g_prcd_d[l_ac].prcdl003
LET g_detail_multi_table_t.prcdl004 = g_prcd_d[l_ac].prcdl004
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'prcdl001'
            LET l_var_keys[01] = g_prcd_d[l_ac].prcd001
            LET l_field_keys[02] = 'prcdl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'prcdl_t') THEN
               RETURN 
            END IF 
 
            #讀取對應的單身資料
            CALL aprm200_fetch()
            CALL aprm200_idx_chk('m')
        
         BEFORE INSERT
            LET g_detail_multi_table_t.prcdl001 = g_prcd_d[l_ac].prcd001
LET g_detail_multi_table_t.prcdl002 = g_dlang
LET g_detail_multi_table_t.prcdl003 = g_prcd_d[l_ac].prcdl003
LET g_detail_multi_table_t.prcdl004 = g_prcd_d[l_ac].prcdl004
 
            #判斷能否在此頁面進行資料新增
            
            #清空下層單身
                        CALL g_prcd3_d.clear()
 
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prcd_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_prcd2_d[l_ac].prcdownid = g_user
      LET g_prcd2_d[l_ac].prcdowndp = g_dept
      LET g_prcd2_d[l_ac].prcdcrtid = g_user
      LET g_prcd2_d[l_ac].prcdcrtdp = g_dept 
      LET g_prcd2_d[l_ac].prcdcrtdt = cl_get_current()
      LET g_prcd2_d[l_ac].prcdmodid = ""
      LET g_prcd2_d[l_ac].prcdmoddt = ""
      LET g_prcd_d[l_ac].prcdstus = ""
 
 
                  LET g_prcd_d[l_ac].prcdstus = "Y"
 
 
            LET g_prcd_d_t.* = g_prcd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm200_set_entry_b("a")
            CALL aprm200_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prcd_d[li_reproduce_target].* = g_prcd_d[li_reproduce].*
               LET g_prcd2_d[li_reproduce_target].* = g_prcd2_d[li_reproduce].*
 
               LET g_prcd_d[g_prcd_d.getLength()].prcd001 = NULL
 
            END IF
            #add-point:input段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prcd_t 
             WHERE prcdent = g_enterprise AND prcd001 = g_prcd_d[l_ac].prcd001 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
               CALL aprm200_insert_b('prcd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prcd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prcd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm200_b_fill(g_wc)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_prcd_d[l_ac].prcd001 = g_detail_multi_table_t.prcdl001 AND
         g_prcd_d[l_ac].prcdl003 = g_detail_multi_table_t.prcdl003 AND
         g_prcd_d[l_ac].prcdl004 = g_detail_multi_table_t.prcdl004 THEN
         ELSE 
            LET l_var_keys[01] = g_prcd_d[l_ac].prcd001
            LET l_field_keys[01] = 'prcdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prcdl002'
            LET l_vars[01] = g_prcd_d[l_ac].prcdl003
            LET l_fields[01] = 'prcdl003'
            LET l_vars[02] = g_prcd_d[l_ac].prcdl004
            LET l_fields[02] = 'prcdl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prcdlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.prcdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.prcdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prcdl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               LET g_master.* = g_prcd_d[l_ac].*
            END IF
              
         BEFORE DELETE  #是否取消單身
            IF l_cmd = 'a' AND g_prcd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prcd_d.deleteElement(l_ac)
               NEXT FIELD prcd001
            END IF
            IF g_prcd_d[l_ac].prcd001 IS NOT NULL
 
               THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point
               
               DELETE FROM prcd_t
                WHERE prcdent = g_enterprise AND 
                      prcd001 = g_prcd_d_t.prcd001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'prcdl001'
                  LET l_field_keys[02] = 'prcdl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.prcdl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.prcdl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'prcdl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm200_bcl
               LET l_count = g_prcd_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprm200_delete_b('prcd_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<prcd001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd001
            #add-point:BEFORE FIELD prcd001
            {<point name="input.b.page1.prcd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd001
            
            #add-point:AFTER FIELD prcd001
            {<point name="input.a.page1.prcd001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcd001
            #add-point:ON CHANGE prcd001
            {<point name="input.g.page1.prcd001" />}
            #END add-point
 
         #----<<prcdl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdl003
            #add-point:BEFORE FIELD prcdl003
            {<point name="input.b.page1.prcdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdl003
            
            #add-point:AFTER FIELD prcdl003
            {<point name="input.a.page1.prcdl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcdl003
            #add-point:ON CHANGE prcdl003
            {<point name="input.g.page1.prcdl003" />}
            #END add-point
 
         #----<<prcdl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdl004
            #add-point:BEFORE FIELD prcdl004
            {<point name="input.b.page1.prcdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdl004
            
            #add-point:AFTER FIELD prcdl004
            {<point name="input.a.page1.prcdl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcdl004
            #add-point:ON CHANGE prcdl004
            {<point name="input.g.page1.prcdl004" />}
            #END add-point
 
         #----<<prcd002>>----
         #此段落由子樣板a02產生
         AFTER FIELD prcd002
            
            #add-point:AFTER FIELD prcd002
            {<point name="input.a.page1.prcd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcd002
            #add-point:BEFORE FIELD prcd002
            {<point name="input.b.page1.prcd002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcd002
            #add-point:ON CHANGE prcd002
            {<point name="input.g.page1.prcd002" />}
            #END add-point
 
         #----<<prcd002_desc>>----
         #----<<prcd003>>----
         #此段落由子樣板a02產生
         AFTER FIELD prcd003
            
            #add-point:AFTER FIELD prcd003
            {<point name="input.a.page1.prcd003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcd003
            #add-point:BEFORE FIELD prcd003
            {<point name="input.b.page1.prcd003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcd003
            #add-point:ON CHANGE prcd003
            {<point name="input.g.page1.prcd003" />}
            #END add-point
 
         #----<<prcd003_desc>>----
         #----<<prcd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd004
            #add-point:BEFORE FIELD prcd004
            {<point name="input.b.page1.prcd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd004
            
            #add-point:AFTER FIELD prcd004
            {<point name="input.a.page1.prcd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcd004
            #add-point:ON CHANGE prcd004
            {<point name="input.g.page1.prcd004" />}
            #END add-point
 
         #----<<prcd005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd005
            #add-point:BEFORE FIELD prcd005
            {<point name="input.b.page1.prcd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd005
            
            #add-point:AFTER FIELD prcd005
            {<point name="input.a.page1.prcd005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcd005
            #add-point:ON CHANGE prcd005
            {<point name="input.g.page1.prcd005" />}
            #END add-point
 
         #----<<prcd006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd006
            #add-point:BEFORE FIELD prcd006
            {<point name="input.b.page1.prcd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd006
            
            #add-point:AFTER FIELD prcd006
            {<point name="input.a.page1.prcd006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcd006
            #add-point:ON CHANGE prcd006
            {<point name="input.g.page1.prcd006" />}
            #END add-point
 
         #----<<prcd098>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd098
            #add-point:BEFORE FIELD prcd098
            {<point name="input.b.page1.prcd098" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd098
            
            #add-point:AFTER FIELD prcd098
            {<point name="input.a.page1.prcd098" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcd098
            #add-point:ON CHANGE prcd098
            {<point name="input.g.page1.prcd098" />}
            #END add-point
 
         #----<<prcdunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdunit
            #add-point:BEFORE FIELD prcdunit
            {<point name="input.b.page1.prcdunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdunit
            
            #add-point:AFTER FIELD prcdunit
            {<point name="input.a.page1.prcdunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcdunit
            #add-point:ON CHANGE prcdunit
            {<point name="input.g.page1.prcdunit" />}
            #END add-point
 
         #----<<prcdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdstus
            #add-point:BEFORE FIELD prcdstus
            {<point name="input.b.page1.prcdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdstus
            
            #add-point:AFTER FIELD prcdstus
            {<point name="input.a.page1.prcdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcdstus
            #add-point:ON CHANGE prcdstus
            {<point name="input.g.page1.prcdstus" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<prcd001>>----
         #Ctrlp:input.c.page1.prcd001
         ON ACTION controlp INFIELD prcd001
            #add-point:ON ACTION controlp INFIELD prcd001
            {<point name="input.c.page1.prcd001" />}
            #END add-point
 
         #----<<prcdl003>>----
         #Ctrlp:input.c.page1.prcdl003
         ON ACTION controlp INFIELD prcdl003
            #add-point:ON ACTION controlp INFIELD prcdl003
            {<point name="input.c.page1.prcdl003" />}
            #END add-point
 
         #----<<prcdl004>>----
         #Ctrlp:input.c.page1.prcdl004
         ON ACTION controlp INFIELD prcdl004
            #add-point:ON ACTION controlp INFIELD prcdl004
            {<point name="input.c.page1.prcdl004" />}
            #END add-point
 
         #----<<prcd002>>----
         #Ctrlp:input.c.page1.prcd002
         ON ACTION controlp INFIELD prcd002
            #add-point:ON ACTION controlp INFIELD prcd002
            {<point name="input.c.page1.prcd002" />}
            #END add-point
 
         #----<<prcd002_desc>>----
         #----<<prcd003>>----
         #Ctrlp:input.c.page1.prcd003
         ON ACTION controlp INFIELD prcd003
            #add-point:ON ACTION controlp INFIELD prcd003
            {<point name="input.c.page1.prcd003" />}
            #END add-point
 
         #----<<prcd003_desc>>----
         #----<<prcd004>>----
         #Ctrlp:input.c.page1.prcd004
         ON ACTION controlp INFIELD prcd004
            #add-point:ON ACTION controlp INFIELD prcd004
            {<point name="input.c.page1.prcd004" />}
            #END add-point
 
         #----<<prcd005>>----
         #Ctrlp:input.c.page1.prcd005
         ON ACTION controlp INFIELD prcd005
            #add-point:ON ACTION controlp INFIELD prcd005
            {<point name="input.c.page1.prcd005" />}
            #END add-point
 
         #----<<prcd006>>----
         #Ctrlp:input.c.page1.prcd006
         ON ACTION controlp INFIELD prcd006
            #add-point:ON ACTION controlp INFIELD prcd006
            {<point name="input.c.page1.prcd006" />}
            #END add-point
 
         #----<<prcd098>>----
         #Ctrlp:input.c.page1.prcd098
         ON ACTION controlp INFIELD prcd098
            #add-point:ON ACTION controlp INFIELD prcd098
            {<point name="input.c.page1.prcd098" />}
            #END add-point
 
         #----<<prcdunit>>----
         #Ctrlp:input.c.page1.prcdunit
         ON ACTION controlp INFIELD prcdunit
            #add-point:ON ACTION controlp INFIELD prcdunit
            {<point name="input.c.page1.prcdunit" />}
            #END add-point
 
         #----<<prcdstus>>----
         #Ctrlp:input.c.page1.prcdstus
         ON ACTION controlp INFIELD prcdstus
            #add-point:ON ACTION controlp INFIELD prcdstus
            {<point name="input.c.page1.prcdstus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prcd_d[l_ac].* = g_prcd_d_t.*
               CLOSE aprm200_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prcd_d[l_ac].prcd001,-263,1)
               LET g_prcd_d[l_ac].* = g_prcd_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_prcd2_d[l_ac].prcdmodid = g_user 
LET g_prcd2_d[l_ac].prcdmoddt = cl_get_current()
 
               
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prcd_t SET (prcd001,prcd002,prcd003,prcd004,prcd005,prcd006,prcd098,prcdunit,prcdstus, 
                   prcdmodid,prcdmoddt,prcdownid,prcdowndp,prcdcrtid,prcdcrtdp,prcdcrtdt) = (g_prcd_d[l_ac].prcd001, 
                   g_prcd_d[l_ac].prcd002,g_prcd_d[l_ac].prcd003,g_prcd_d[l_ac].prcd004,g_prcd_d[l_ac].prcd005, 
                   g_prcd_d[l_ac].prcd006,g_prcd_d[l_ac].prcd098,g_prcd_d[l_ac].prcdunit,g_prcd_d[l_ac].prcdstus, 
                   g_prcd2_d[l_ac].prcdmodid,g_prcd2_d[l_ac].prcdmoddt,g_prcd2_d[l_ac].prcdownid,g_prcd2_d[l_ac].prcdowndp, 
                   g_prcd2_d[l_ac].prcdcrtid,g_prcd2_d[l_ac].prcdcrtdp,g_prcd2_d[l_ac].prcdcrtdt)
                WHERE prcdent = g_enterprise AND
                  prcd001 = g_prcd_d_t.prcd001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prcd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prcd_d[l_ac].* = g_prcd_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prcd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prcd_d[l_ac].* = g_prcd_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
               LET gs_keys_bak[1] = g_prcd_d_t.prcd001
               CALL aprm200_update_b('prcd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_prcd_d[l_ac].prcd001 = g_detail_multi_table_t.prcdl001 AND
         g_prcd_d[l_ac].prcdl003 = g_detail_multi_table_t.prcdl003 AND
         g_prcd_d[l_ac].prcdl004 = g_detail_multi_table_t.prcdl004 THEN
         ELSE 
            LET l_var_keys[01] = g_prcd_d[l_ac].prcd001
            LET l_field_keys[01] = 'prcdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prcdl002'
            LET l_vars[01] = g_prcd_d[l_ac].prcdl003
            LET l_fields[01] = 'prcdl003'
            LET l_vars[02] = g_prcd_d[l_ac].prcdl004
            LET l_fields[02] = 'prcdl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prcdlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.prcdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.prcdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prcdl_t')
         END IF 
 
               END CASE
               
               #若Key欄位有變動
               LET g_master.* = g_prcd_d[l_ac].*
               CALL aprm200_key_update_b()
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aprm200_unlock_b("prcd_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_prcd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prcd_d.getLength()+1
              
      END INPUT
      
 
      
      #實際單身段落
      INPUT ARRAY g_prcd3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page3.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prcd3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_detail_cnt = g_prcd3_d.getLength()
            LET g_current_page = 3
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE INSERT
            IF g_prcd_d.getLength() = 0 THEN
               CALL cl_err('','std-00013',1)
               NEXT FIELD prcd001
            END IF 
            #判斷能否在此頁面進行資料新增
            
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prcd3_d[l_ac].* TO NULL 
            
            LET g_prcd3_d_t.* = g_prcd3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprm200_set_entry_b("a")
            CALL aprm200_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prcd3_d[li_reproduce_target].* = g_prcd3_d[li_reproduce].*
 
               LET g_prcd3_d[li_reproduce_target].prce002 = NULL
               LET g_prcd3_d[li_reproduce_target].prce003 = NULL
            END IF
            #add-point:input段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW 
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            CALL s_transaction_begin()
            LET g_detail_cnt = g_prcd3_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_prcd3_d[l_ac].prce002 IS NOT NULL
               AND g_prcd3_d[l_ac].prce003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prcd3_d_t.* = g_prcd3_d[l_ac].*  #BACKUP
               IF NOT aprm200_lock_b("prce_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprm200_bcl2 INTO g_prcd3_d[l_ac].prce002,g_prcd3_d[l_ac].prce003,g_prcd3_d[l_ac].prce003_desc, 
                      g_prcd3_d[l_ac].prceacti,g_prcd3_d[l_ac].prcesite,g_prcd3_d[l_ac].prceunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  CALL cl_show_fld_cont()
                  CALL aprm200_detail_show()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL aprm200_set_entry_b(l_cmd)
            CALL aprm200_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            CALL aprm200_idx_chk('d')
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prcd3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prcd3_d.deleteElement(l_ac)
               NEXT FIELD prce002
            END IF
            IF g_prcd3_d[l_ac].prce002 IS NOT NULL
               AND g_prcd3_d_t.prce003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point  
               
               DELETE FROM prce_t
                WHERE prceent = g_enterprise AND
                   prce001 = g_master.prcd001
                   AND prce002 = g_prcd3_d_t.prce002
                   AND prce003 = g_prcd3_d_t.prce003
                   
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point  
                   
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprm200_bcl
               LET l_count = g_prcd_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
               LET gs_keys[2] = g_prcd3_d[g_detail_idx2].prce002
               LET gs_keys[3] = g_prcd3_d[g_detail_idx2].prce003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL aprm200_delete_b('prce_t',gs_keys,"'3'")
 
         AFTER INSERT    
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prce_t 
             WHERE prceent = g_enterprise AND
                   prce001 = g_master.prcd001
                   AND prce002 = g_prcd3_d[g_detail_idx2].prce002
                   AND prce003 = g_prcd3_d[g_detail_idx2].prce003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
               LET gs_keys[2] = g_prcd3_d[g_detail_idx2].prce002
               LET gs_keys[3] = g_prcd3_d[g_detail_idx2].prce003
               CALL aprm200_insert_b('prce_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prcd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prce_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprm200_b_fill(g_wc)
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prcd3_d[l_ac].* = g_prcd3_d_t.*
               CLOSE aprm200_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prcd3_d[l_ac].* = g_prcd3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身3)
               
               
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prce_t SET (prce002,prce003,prceacti,prcesite,prceunit) = (g_prcd3_d[l_ac].prce002, 
                   g_prcd3_d[l_ac].prce003,g_prcd3_d[l_ac].prceacti,g_prcd3_d[l_ac].prcesite,g_prcd3_d[l_ac].prceunit)  
                   #自訂欄位頁簽
                WHERE prceent = g_enterprise AND
                   prce001 = g_master.prcd001
                   AND prce002 = g_prcd3_d_t.prce002
                   AND prce003 = g_prcd3_d_t.prce003
                   
               #add-point:單身修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                   
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prce_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prcd3_d[l_ac].* = g_prcd3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prce_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prcd3_d[l_ac].* = g_prcd3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcd_d[g_detail_idx].prcd001
               LET gs_keys_bak[1] = g_prcd_d[g_detail_idx].prcd001
               LET gs_keys[2] = g_prcd3_d[g_detail_idx2].prce002
               LET gs_keys_bak[2] = g_prcd3_d_t.prce002
               LET gs_keys[3] = g_prcd3_d[g_detail_idx2].prce003
               LET gs_keys_bak[3] = g_prcd3_d_t.prce003
               CALL aprm200_update_b('prce_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page3  >---------------------
         #----<<prce002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prce002
            #add-point:BEFORE FIELD prce002
            {<point name="input.b.page3.prce002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prce002
            
            #add-point:AFTER FIELD prce002
            {<point name="input.a.page3.prce002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prce002
            #add-point:ON CHANGE prce002
            {<point name="input.g.page3.prce002" />}
            #END add-point
 
         #----<<prce003>>----
         #此段落由子樣板a02產生
         AFTER FIELD prce003
            
            #add-point:AFTER FIELD prce003
            {<point name="input.a.page3.prce003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prce003
            #add-point:BEFORE FIELD prce003
            {<point name="input.b.page3.prce003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prce003
            #add-point:ON CHANGE prce003
            {<point name="input.g.page3.prce003" />}
            #END add-point
 
         #----<<prce003_desc>>----
         #----<<prceacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prceacti
            #add-point:BEFORE FIELD prceacti
            {<point name="input.b.page3.prceacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prceacti
            
            #add-point:AFTER FIELD prceacti
            {<point name="input.a.page3.prceacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prceacti
            #add-point:ON CHANGE prceacti
            {<point name="input.g.page3.prceacti" />}
            #END add-point
 
         #----<<prcesite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcesite
            #add-point:BEFORE FIELD prcesite
            {<point name="input.b.page3.prcesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcesite
            
            #add-point:AFTER FIELD prcesite
            {<point name="input.a.page3.prcesite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcesite
            #add-point:ON CHANGE prcesite
            {<point name="input.g.page3.prcesite" />}
            #END add-point
 
         #----<<prceunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prceunit
            #add-point:BEFORE FIELD prceunit
            {<point name="input.b.page3.prceunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prceunit
            
            #add-point:AFTER FIELD prceunit
            {<point name="input.a.page3.prceunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prceunit
            #add-point:ON CHANGE prceunit
            {<point name="input.g.page3.prceunit" />}
            #END add-point
 
 
         #---------------------<  Detail: page3  >---------------------
         #----<<prce002>>----
         #Ctrlp:input.c.page3.prce002
         ON ACTION controlp INFIELD prce002
            #add-point:ON ACTION controlp INFIELD prce002
            {<point name="input.c.page3.prce002" />}
            #END add-point
 
         #----<<prce003>>----
         #Ctrlp:input.c.page3.prce003
         ON ACTION controlp INFIELD prce003
            #add-point:ON ACTION controlp INFIELD prce003
            {<point name="input.c.page3.prce003" />}
            #END add-point
 
         #----<<prce003_desc>>----
         #----<<prceacti>>----
         #Ctrlp:input.c.page3.prceacti
         ON ACTION controlp INFIELD prceacti
            #add-point:ON ACTION controlp INFIELD prceacti
            {<point name="input.c.page3.prceacti" />}
            #END add-point
 
         #----<<prcesite>>----
         #Ctrlp:input.c.page3.prcesite
         ON ACTION controlp INFIELD prcesite
            #add-point:ON ACTION controlp INFIELD prcesite
            {<point name="input.c.page3.prcesite" />}
            #END add-point
 
         #----<<prceunit>>----
         #Ctrlp:input.c.page3.prceunit
         ON ACTION controlp INFIELD prceunit
            #add-point:ON ACTION controlp INFIELD prceunit
            {<point name="input.c.page3.prceunit" />}
            #END add-point
 
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prcd3_d[l_ac].* = g_prcd3_d_t.*
               END IF
               CLOSE aprm200_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
 
            CALL aprm200_unlock_b("prce_t")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_prcd3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prcd3_d.getLength()+1
 
      END INPUT
 
      
      DISPLAY ARRAY g_prcd2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            CALL aprm200_b_fill(g_wc)
            LET g_current_page = 2
        
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            CALL cl_show_fld_cont() 
            CALL aprm200_fetch()
            CALL aprm200_idx_chk('m')
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
    
 
      
      #add-point:input段input_array"
      {<point name="input.more_inputarray"/>}
      #end add-point
      
      BEFORE DIALOG 
         LET g_curr_diag = ui.DIALOG.getCurrent()
         IF g_detail_idx > 0 THEN
            IF g_detail_idx > g_prcd_d.getLength() THEN
               LET g_detail_idx = g_prcd_d.getLength()
            END IF
            CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
            LET l_ac = g_detail_idx
         END IF 
         LET g_detail_idx = l_ac
         #add-point:input段input_array"
         {<point name="input.before_dialog"/>}
         #end add-point
         #先確定單頭(第一單身)是否有資料
         IF g_prcd_d.getLength() > 0 THEN
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prcd001
               WHEN "s_detail2"
                  NEXT FIELD prcd001_2
               WHEN "s_detail3"
                  NEXT FIELD prce002
 
            END CASE
         ELSE
            NEXT FIELD prcd001
         END IF
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:input段修改後
   {<point name="input.after_input"/>}
   #end add-point
 
   CLOSE aprm200_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="aprm200.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aprm200_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point 
 
   #add-point:insert段新增前
   {<point name="insert.before_insert"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL g_prcd_d.clear() 
   CALL g_prcd2_d.clear() 
   CALL g_prcd3_d.clear() 
 
   CALL aprm200_input('a')
   
   CALL aprm200_b_fill(g_wc)
   
   #add-point:insert段新增後
   {<point name="insert.after_insert"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprm200.insert_b" ver="3" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprm200_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point
 
   #判斷是否是同一群組的table
   LET ls_group = "prcd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point
      INSERT INTO prcd_t
                  (prcdent,
                   prcd001
                   ,prcd002,prcd003,prcd004,prcd005,prcd006,prcd098,prcdunit,prcdstus,prcdmodid,prcdmoddt,prcdownid,prcdowndp,prcdcrtid,prcdcrtdp,prcdcrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_prcd_d[g_detail_idx].prcd002,g_prcd_d[g_detail_idx].prcd003,g_prcd_d[g_detail_idx].prcd004, 
                       g_prcd_d[g_detail_idx].prcd005,g_prcd_d[g_detail_idx].prcd006,g_prcd_d[g_detail_idx].prcd098, 
                       g_prcd_d[g_detail_idx].prcdunit,g_prcd_d[g_detail_idx].prcdstus,g_prcd2_d[g_detail_idx].prcdmodid, 
                       g_prcd2_d[g_detail_idx].prcdmoddt,g_prcd2_d[g_detail_idx].prcdownid,g_prcd2_d[g_detail_idx].prcdowndp, 
                       g_prcd2_d[g_detail_idx].prcdcrtid,g_prcd2_d[g_detail_idx].prcdcrtdp,g_prcd2_d[g_detail_idx].prcdcrtdt) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point
   END IF
   
 
   
   LET ls_group = "prce_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point
      INSERT INTO prce_t
                  (prceent,
                   prce001,prce002,prce003
                   ,prceacti,prcesite,prceunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_prcd3_d[g_detail_idx2].prceacti,g_prcd3_d[g_detail_idx2].prcesite,g_prcd3_d[g_detail_idx2].prceunit) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         RETURN
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
</section>
  <section id="aprm200.key_update_b" ver="2" status="" src="s">
<![CDATA[#+ 單頭key欄位變動後, 連帶修正其他單身table
PRIVATE FUNCTION aprm200_key_update_b()
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="key_update_b.define"/>}
   #end add-point
 
   #判斷key是否有改變
   LET lb_chk = TRUE
   
   IF g_master.prcd001 <> g_master_t.prcd001 THEN
      LET lb_chk = FALSE
   END IF
 
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #add-point:update_b段修改前
   {<point name="key_update_b.before_update2" mark="Y"/>}
   #end add-point
   
   UPDATE prce_t 
      SET (prce001) 
           = 
          (g_master.prcd001) 
      WHERE 
           prce001 = g_master_t.prcd001
 
           
   #add-point:update_b段修改中
   {<point name="key_update_b.m_update2"/>}
   #end add-point
           
   CASE
      #WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #   CALL cl_err("prce_t","std-00009",1)
      #   CALL s_transaction_end('N','0')
      WHEN SQLCA.sqlcode #其他錯誤
         CALL cl_err("prce_t",SQLCA.sqlcode,1)  
         CALL s_transaction_end('N','0')
      OTHERWISE
         #若有多語言table資料一同更新
         
   END CASE
   
   #add-point:update_b段修改後
   {<point name="key_update_b.after_update2"/>}
   #end add-point
 
 
   
END FUNCTION
]]>
</section>
  <section id="aprm200.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aprm200_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="aprm200.lock_b" ver="4" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprm200_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprm200_b_fill(g_wc)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "prcd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprm200_bcl USING g_enterprise,
                                       g_prcd_d[g_detail_idx].prcd001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm200_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "prce_t,"
   #僅鎖定自身table
   LET ls_group = "prce_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprm200_bcl2 USING g_enterprise,
                                             g_master.prcd001,
                                             g_prcd3_d[g_detail_idx2].prce002,g_prcd3_d[g_detail_idx2].prce003 

      IF SQLCA.sqlcode THEN
         CALL cl_err("aprm200_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprm200.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
 
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprm200 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprm200_init()   
 
      #進入選單 Menu (="N")
      CALL aprm200_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprm200
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aprm200.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aprm200_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
 
   #add-point:modify段新增前
   {<point name="modify.before_modify"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL aprm200_input('u')
   
   #add-point:modify段新增後
   {<point name="modify.after_modify"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprm200.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aprm200_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "prccstus"
      WHEN "s_detail2"
         LET ls_return = "prcc001_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="aprm200.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="aprm200.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aprm200.query" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprm200_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_prcd_d.clear()
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_detail_idx = l_ac
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON prcd001,prcdl003,prcdl004,prcd002,prcd003,prcd004,prcd005,prcd006,prcd098, 
          prcdunit,prcdstus,prcdmodid,prcdmoddt,prcdownid,prcdowndp,prcdcrtid,prcdcrtdp,prcdcrtdt
           FROM s_detail1[1].prcd001,s_detail1[1].prcdl003,s_detail1[1].prcdl004,s_detail1[1].prcd002, 
               s_detail1[1].prcd003,s_detail1[1].prcd004,s_detail1[1].prcd005,s_detail1[1].prcd006,s_detail1[1].prcd098, 
               s_detail1[1].prcdunit,s_detail1[1].prcdstus,s_detail2[1].prcdmodid,s_detail2[1].prcdmoddt, 
               s_detail2[1].prcdownid,s_detail2[1].prcdowndp,s_detail2[1].prcdcrtid,s_detail2[1].prcdcrtdp, 
               s_detail2[1].prcdcrtdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<prcdownid>>----
         #ON ACTION controlp INFIELD prcdownid
         #   CALL q_common('','prcdownid',TRUE,FALSE,g_prcd2_d[1].prcdownid) RETURNING ls_return
         #   DISPLAY ls_return TO prcdownid
         #   NEXT FIELD prcdownid  
         #
         ##----<<prcdowndp>>----
         #ON ACTION controlp INFIELD prcdowndp
         #   CALL q_common('','prcdowndp',TRUE,FALSE,g_prcd2_d[1].prcdowndp) RETURNING ls_return
         #   DISPLAY ls_return TO prcdowndp
         #   NEXT FIELD prcdowndp
         #
         ##----<<prcdcrtid>>----
         #ON ACTION controlp INFIELD prcdcrtid
         #   CALL q_common('','prcdcrtid',TRUE,FALSE,g_prcd2_d[1].prcdcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO prcdcrtid
         #   NEXT FIELD prcdcrtid
         #
         ##----<<prcdcrtdp>>----
         #ON ACTION controlp INFIELD prcdcrtdp
         #   CALL q_common('','prcdcrtdp',TRUE,FALSE,g_prcd2_d[1].prcdcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO prcdcrtdp
         #   NEXT FIELD prcdcrtdp
         #
         ##----<<prcdmodid>>----
         #ON ACTION controlp INFIELD prcdmodid
         #   CALL q_common('','prcdmodid',TRUE,FALSE,g_prcd2_d[1].prcdmodid) RETURNING ls_return
         #   DISPLAY ls_return TO prcdmodid
         #   NEXT FIELD prcdmodid
         #
         ##----<<prcdcnfid>>----
         ##ON ACTION controlp INFIELD prcdcnfid
         ##   CALL q_common('','prcdcnfid',TRUE,FALSE,.prcdcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO prcdcnfid
         ##   NEXT FIELD prcdcnfid
         #
         ##----<<prcdpstid>>----
         ##ON ACTION controlp INFIELD prcdpstid
         ##   CALL q_common('','prcdpstid',TRUE,FALSE,.prcdpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO prcdpstid
         ##   NEXT FIELD prcdpstid
         
         ##----<<prcdcrtdt>>----
         AFTER FIELD prcdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcdmoddt>>----
         AFTER FIELD prcdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcdcnfdt>>----
         #AFTER FIELD prcdcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcdpstdt>>----
         #AFTER FIELD prcdpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<prcd001>>----
         #Ctrlp:construct.c.page1.prcd001
         ON ACTION controlp INFIELD prcd001
            #add-point:ON ACTION controlp INFIELD prcd001
            {<point name="construct.c.page1.prcd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcd001
            #add-point:BEFORE FIELD prcd001
            {<point name="construct.b.page1.prcd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd001
            
            #add-point:AFTER FIELD prcd001
            {<point name="construct.a.page1.prcd001" />}
            #END add-point
            
 
         #----<<prcdl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdl003
            #add-point:BEFORE FIELD prcdl003
            {<point name="construct.b.page1.prcdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdl003
            
            #add-point:AFTER FIELD prcdl003
            {<point name="construct.a.page1.prcdl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcdl003
         ON ACTION controlp INFIELD prcdl003
            #add-point:ON ACTION controlp INFIELD prcdl003
            {<point name="construct.c.page1.prcdl003" />}
            #END add-point
 
         #----<<prcdl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdl004
            #add-point:BEFORE FIELD prcdl004
            {<point name="construct.b.page1.prcdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdl004
            
            #add-point:AFTER FIELD prcdl004
            {<point name="construct.a.page1.prcdl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcdl004
         ON ACTION controlp INFIELD prcdl004
            #add-point:ON ACTION controlp INFIELD prcdl004
            {<point name="construct.c.page1.prcdl004" />}
            #END add-point
 
         #----<<prcd002>>----
         #Ctrlp:construct.c.page1.prcd002
         ON ACTION controlp INFIELD prcd002
            #add-point:ON ACTION controlp INFIELD prcd002
            {<point name="construct.c.page1.prcd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcd002
            #add-point:BEFORE FIELD prcd002
            {<point name="construct.b.page1.prcd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd002
            
            #add-point:AFTER FIELD prcd002
            {<point name="construct.a.page1.prcd002" />}
            #END add-point
            
 
         #----<<prcd002_desc>>----
         #----<<prcd003>>----
         #Ctrlp:construct.c.page1.prcd003
         ON ACTION controlp INFIELD prcd003
            #add-point:ON ACTION controlp INFIELD prcd003
            {<point name="construct.c.page1.prcd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcd003
            #add-point:BEFORE FIELD prcd003
            {<point name="construct.b.page1.prcd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd003
            
            #add-point:AFTER FIELD prcd003
            {<point name="construct.a.page1.prcd003" />}
            #END add-point
            
 
         #----<<prcd003_desc>>----
         #----<<prcd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd004
            #add-point:BEFORE FIELD prcd004
            {<point name="construct.b.page1.prcd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd004
            
            #add-point:AFTER FIELD prcd004
            {<point name="construct.a.page1.prcd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcd004
         ON ACTION controlp INFIELD prcd004
            #add-point:ON ACTION controlp INFIELD prcd004
            {<point name="construct.c.page1.prcd004" />}
            #END add-point
 
         #----<<prcd005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd005
            #add-point:BEFORE FIELD prcd005
            {<point name="construct.b.page1.prcd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd005
            
            #add-point:AFTER FIELD prcd005
            {<point name="construct.a.page1.prcd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcd005
         ON ACTION controlp INFIELD prcd005
            #add-point:ON ACTION controlp INFIELD prcd005
            {<point name="construct.c.page1.prcd005" />}
            #END add-point
 
         #----<<prcd006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd006
            #add-point:BEFORE FIELD prcd006
            {<point name="construct.b.page1.prcd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd006
            
            #add-point:AFTER FIELD prcd006
            {<point name="construct.a.page1.prcd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcd006
         ON ACTION controlp INFIELD prcd006
            #add-point:ON ACTION controlp INFIELD prcd006
            {<point name="construct.c.page1.prcd006" />}
            #END add-point
 
         #----<<prcd098>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcd098
            #add-point:BEFORE FIELD prcd098
            {<point name="construct.b.page1.prcd098" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcd098
            
            #add-point:AFTER FIELD prcd098
            {<point name="construct.a.page1.prcd098" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcd098
         ON ACTION controlp INFIELD prcd098
            #add-point:ON ACTION controlp INFIELD prcd098
            {<point name="construct.c.page1.prcd098" />}
            #END add-point
 
         #----<<prcdunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdunit
            #add-point:BEFORE FIELD prcdunit
            {<point name="construct.b.page1.prcdunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdunit
            
            #add-point:AFTER FIELD prcdunit
            {<point name="construct.a.page1.prcdunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcdunit
         ON ACTION controlp INFIELD prcdunit
            #add-point:ON ACTION controlp INFIELD prcdunit
            {<point name="construct.c.page1.prcdunit" />}
            #END add-point
 
         #----<<prcdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdstus
            #add-point:BEFORE FIELD prcdstus
            {<point name="construct.b.page1.prcdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdstus
            
            #add-point:AFTER FIELD prcdstus
            {<point name="construct.a.page1.prcdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.prcdstus
         ON ACTION controlp INFIELD prcdstus
            #add-point:ON ACTION controlp INFIELD prcdstus
            {<point name="construct.c.page1.prcdstus" />}
            #END add-point
 
#---------------------<  Detail: page2  >---------------------
         #----<<prcdmodid>>----
         #Ctrlp:construct.c.page2.prcdmodid
         ON ACTION controlp INFIELD prcdmodid
            #add-point:ON ACTION controlp INFIELD prcdmodid
            {<point name="construct.c.page2.prcdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcdmodid
            #add-point:BEFORE FIELD prcdmodid
            {<point name="construct.b.page2.prcdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdmodid
            
            #add-point:AFTER FIELD prcdmodid
            {<point name="construct.a.page2.prcdmodid" />}
            #END add-point
            
 
         #----<<prcdmodid_desc>>----
         #----<<prcdmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdmoddt
            #add-point:BEFORE FIELD prcdmoddt
            {<point name="construct.b.page2.prcdmoddt" />}
            #END add-point
 
         #----<<prcdownid>>----
         #Ctrlp:construct.c.page2.prcdownid
         ON ACTION controlp INFIELD prcdownid
            #add-point:ON ACTION controlp INFIELD prcdownid
            {<point name="construct.c.page2.prcdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcdownid
            #add-point:BEFORE FIELD prcdownid
            {<point name="construct.b.page2.prcdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdownid
            
            #add-point:AFTER FIELD prcdownid
            {<point name="construct.a.page2.prcdownid" />}
            #END add-point
            
 
         #----<<prcdownid_desc>>----
         #----<<prcdowndp>>----
         #Ctrlp:construct.c.page2.prcdowndp
         ON ACTION controlp INFIELD prcdowndp
            #add-point:ON ACTION controlp INFIELD prcdowndp
            {<point name="construct.c.page2.prcdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcdowndp
            #add-point:BEFORE FIELD prcdowndp
            {<point name="construct.b.page2.prcdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdowndp
            
            #add-point:AFTER FIELD prcdowndp
            {<point name="construct.a.page2.prcdowndp" />}
            #END add-point
            
 
         #----<<prcdowndp_desc>>----
         #----<<prcdcrtid>>----
         #Ctrlp:construct.c.page2.prcdcrtid
         ON ACTION controlp INFIELD prcdcrtid
            #add-point:ON ACTION controlp INFIELD prcdcrtid
            {<point name="construct.c.page2.prcdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcdcrtid
            #add-point:BEFORE FIELD prcdcrtid
            {<point name="construct.b.page2.prcdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdcrtid
            
            #add-point:AFTER FIELD prcdcrtid
            {<point name="construct.a.page2.prcdcrtid" />}
            #END add-point
            
 
         #----<<prcdcrtid_desc>>----
         #----<<prcdcrtdp>>----
         #Ctrlp:construct.c.page2.prcdcrtdp
         ON ACTION controlp INFIELD prcdcrtdp
            #add-point:ON ACTION controlp INFIELD prcdcrtdp
            {<point name="construct.c.page2.prcdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcdcrtdp
            #add-point:BEFORE FIELD prcdcrtdp
            {<point name="construct.b.page2.prcdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcdcrtdp
            
            #add-point:AFTER FIELD prcdcrtdp
            {<point name="construct.a.page2.prcdcrtdp" />}
            #END add-point
            
 
         #----<<prcdcrtdp_desc>>----
         #----<<prcdcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcdcrtdt
            #add-point:BEFORE FIELD prcdcrtdt
            {<point name="construct.b.page2.prcdcrtdt" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON prce002,prce003,prceacti,prcesite,prceunit
           FROM s_detail3[1].prce002,s_detail3[1].prce003,s_detail3[1].prceacti,s_detail3[1].prcesite, 
               s_detail3[1].prceunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page3  >---------------------
         #----<<prce002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prce002
            #add-point:BEFORE FIELD prce002
            {<point name="construct.b.page3.prce002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prce002
            
            #add-point:AFTER FIELD prce002
            {<point name="construct.a.page3.prce002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.prce002
         ON ACTION controlp INFIELD prce002
            #add-point:ON ACTION controlp INFIELD prce002
            {<point name="construct.c.page3.prce002" />}
            #END add-point
 
         #----<<prce003>>----
         #Ctrlp:construct.c.page3.prce003
         ON ACTION controlp INFIELD prce003
            #add-point:ON ACTION controlp INFIELD prce003
            {<point name="construct.c.page3.prce003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prce003
            #add-point:BEFORE FIELD prce003
            {<point name="construct.b.page3.prce003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prce003
            
            #add-point:AFTER FIELD prce003
            {<point name="construct.a.page3.prce003" />}
            #END add-point
            
 
         #----<<prce003_desc>>----
         #----<<prceacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prceacti
            #add-point:BEFORE FIELD prceacti
            {<point name="construct.b.page3.prceacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prceacti
            
            #add-point:AFTER FIELD prceacti
            {<point name="construct.a.page3.prceacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.prceacti
         ON ACTION controlp INFIELD prceacti
            #add-point:ON ACTION controlp INFIELD prceacti
            {<point name="construct.c.page3.prceacti" />}
            #END add-point
 
         #----<<prcesite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prcesite
            #add-point:BEFORE FIELD prcesite
            {<point name="construct.b.page3.prcesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcesite
            
            #add-point:AFTER FIELD prcesite
            {<point name="construct.a.page3.prcesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.prcesite
         ON ACTION controlp INFIELD prcesite
            #add-point:ON ACTION controlp INFIELD prcesite
            {<point name="construct.c.page3.prcesite" />}
            #END add-point
 
         #----<<prceunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD prceunit
            #add-point:BEFORE FIELD prceunit
            {<point name="construct.b.page3.prceunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prceunit
            
            #add-point:AFTER FIELD prceunit
            {<point name="construct.a.page3.prceunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.prceunit
         ON ACTION controlp INFIELD prceunit
            #add-point:ON ACTION controlp INFIELD prceunit
            {<point name="construct.c.page3.prceunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="query.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_detail_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
              , " AND ", g_wc2_table2
 
 
        
   LET g_wc2 = " 1=1"
               , " AND ", g_wc2_table2
 
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL aprm200_b_fill(g_wc)
   LET l_ac = g_detail_idx
   CALL aprm200_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprm200.set_entry_b" ver="3" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprm200_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
                                                                     
END FUNCTION                                                                    
]]>
</section>
  <section id="aprm200.set_no_entry_b" ver="3" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprm200_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
                                                                          
END FUNCTION  
]]>
</section>
  <section id="aprm200.state_change" ver="2" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="aprm200.ui_dialog" ver="15" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION aprm200_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      #add-point:ui_dialog段before while
      {<point name="ui_dialog.before_while"/>}
      #end add-point
   
      CALL aprm200_b_fill(g_wc)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_prcd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 1
	  
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_master.* = g_prcd_d[g_detail_idx].*
               CALL cl_show_fld_cont()
               CALL aprm200_fetch()
               CALL aprm200_idx_chk('m')
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_prcd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 2
			   
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_master.* = g_prcd_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               CALL aprm200_fetch()
               CALL aprm200_idx_chk('m')
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
         
         DISPLAY ARRAY g_prcd3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET g_current_page = 3
         
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               CALL aprm200_idx_chk('d')
               LET g_master.* = g_prcd_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_3)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            IF g_detail_idx > 0 THEN
               IF g_detail_idx > g_prcd_d.getLength() THEN
                  LET g_detail_idx = g_prcd_d.getLength()
               END IF
               CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
               LET l_ac = g_detail_idx
            END IF 
            LET g_detail_idx = l_ac
            NEXT FIELD CURRENT
         
         AFTER DIALOG
            #add-point:ui_dialog段after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
         
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprm200_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
           
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="aprm200.unlock_b" ver="4" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprm200_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aprm200_bcl
   END IF
   
 
    
   LET ls_group = "prce_t,"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aprm200_bcl2
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="aprm200.update_b" ver="4" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprm200_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "prcd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "prcd_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
   
      UPDATE prcd_t 
         SET (prcd001
              ,prcd002,prcd003,prcd004,prcd005,prcd006,prcd098,prcdunit,prcdstus,prcdmodid,prcdmoddt,prcdownid,prcdowndp,prcdcrtid,prcdcrtdp,prcdcrtdt) 
              = 
             (ps_keys[1]
              ,g_prcd_d[g_detail_idx].prcd002,g_prcd_d[g_detail_idx].prcd003,g_prcd_d[g_detail_idx].prcd004, 
                  g_prcd_d[g_detail_idx].prcd005,g_prcd_d[g_detail_idx].prcd006,g_prcd_d[g_detail_idx].prcd098, 
                  g_prcd_d[g_detail_idx].prcdunit,g_prcd_d[g_detail_idx].prcdstus,g_prcd2_d[g_detail_idx].prcdmodid, 
                  g_prcd2_d[g_detail_idx].prcdmoddt,g_prcd2_d[g_detail_idx].prcdownid,g_prcd2_d[g_detail_idx].prcdowndp, 
                  g_prcd2_d[g_detail_idx].prcdcrtid,g_prcd2_d[g_detail_idx].prcdcrtdp,g_prcd2_d[g_detail_idx].prcdcrtdt)  

         WHERE prcd001 = ps_keys_bak[1]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prcd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prcd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'prcdl001'
LET l_new_key[02] = g_dlang 
LET l_old_key[02] = g_dlang 
LET l_field_key[02] = 'prcdl002'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'prcdl_t')
      END CASE
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
   LET ls_group = "prce_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "prce_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point    
      
      UPDATE prce_t 
         SET (prce001,prce002,prce003
              ,prceacti,prcesite,prceunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_prcd3_d[g_detail_idx2].prceacti,g_prcd3_d[g_detail_idx2].prcesite,g_prcd3_d[g_detail_idx2].prceunit)  

         WHERE prce001 = ps_keys_bak[1] AND prce002 = ps_keys_bak[2] AND prce003 = ps_keys_bak[3]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prce_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prce_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point 
      
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
</section>
</add_points>