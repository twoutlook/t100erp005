<add_points prog="aprt565" std_prog="aprt565" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aprt565_insert_prcn" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 新增單據時根據單頭信息自動帶出滿足條件的單身數據
# Memo...........:
# Usage..........: CALL aprt565_insert_prcn()
#                  RETURNING l_success
# Input parameter: 
# Return code....: r_success    TRUE/FALSE
# Date & Author..: 20140507 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aprt565_insert_prcn()
DEFINE r_success       LIKE type_t.num5
DEFINE l_count         LIKE type_t.num5
DEFINE l_sql           STRING
DEFINE l_prcn  RECORD  LIKE prcn_t.*
DEFINE l_prcl  RECORD  LIKE prcl_t.*

   LET r_success=TRUE
 
 
   IF NOT cl_null(g_prcm_m.prcm001) THEN
      LET l_sql="prck001='",g_prcm_m.prcm001,"'"
   ELSE
      LET l_sql=" 1=1"
   END IF

   LET l_sql="SELECT prcl_t.* FROM prck_t,prcl_t",
             " WHERE prckent=prclent",
             "   AND prckdocno=prcldocno",
             "   AND prckent='",g_enterprise,"'",
             "   AND prckstus='Y'",
             "   AND ",l_sql,
             "   AND prcl015='1'",
             "   AND prcksite IN",       
             "             (SELECT ooed004 FROM ooed_t", 
             "                 START WITH ooed005='",g_prcm_m.prcmsite,"' AND ooed001='2' AND ooed006<='",g_today,"' AND (ooed007>='",g_today,"' OR ooed007 IS NULL)",
             "                 CONNECT BY  nocycle PRIOR ooed004=ooed005 AND ooed001='2' AND ooed006<='",g_today,"' AND (ooed007>='",g_today,"' OR ooed007 IS NULL)",
             "             UNION SELECT ooed004 FROM ooed_t WHERE ooed004='",g_prcm_m.prcmsite,"'  )",
             " ORDER BY prcldocno,prclseq"             
   
   PREPARE aprt565_into_prcn_pre FROM l_sql
   DECLARE aprt565_into_prcn_cs CURSOR FOR aprt565_into_prcn_pre
   
   INITIALIZE l_prcl.* TO NULL
   FOREACH aprt565_into_prcn_cs INTO l_prcl.*
     INITIALIZE l_prcn.* TO NULL
     
     LET l_prcn.prcnent=l_prcl.prclent
     LET l_prcn.prcnunit=l_prcl.prclunit
     LET l_prcn.prcnsite=l_prcl.prclsite
     LET l_prcn.prcndocno=g_prcm_m.prcmdocno
     
     SELECT MAX(prcnseq)+1 INTO l_prcn.prcnseq
       FROM prcn_t
      WHERE prcnent=l_prcn.prcnent
        AND prcndocno=l_prcn.prcndocno
     IF cl_null(l_prcn.prcnseq) THEN LET l_prcn.prcnseq=1 END IF    
     
     LET l_prcn.prcn001=l_prcl.prcldocno
     LET l_prcn.prcn002=l_prcl.prclseq
     LET l_prcn.prcn003=l_prcl.prcl001
     LET l_prcn.prcn004=l_prcl.prcl002
     LET l_prcn.prcn005=l_prcl.prcl003
     LET l_prcn.prcn006=l_prcl.prcl004
     LET l_prcn.prcn007=l_prcl.prcl005
     LET l_prcn.prcn008=l_prcl.prcl006
     LET l_prcn.prcn009=l_prcl.prcl007
     LET l_prcn.prcn010=l_prcl.prcl008
     LET l_prcn.prcn011=l_prcl.prcl009
     LET l_prcn.prcn012=l_prcl.prcl010
     LET l_prcn.prcn013=l_prcl.prcl010
     LET l_prcn.prcn014=l_prcl.prcl012
     LET l_prcn.prcn015=l_prcl.prcl013
     LET l_prcn.prcn016=l_prcl.prcl014
   
     INSERT INTO prcn_t VALUES (l_prcn.*)    
     IF SQLCA.sqlcode THEN
        CALL cl_err("into prcn",SQLCA.sqlcode,1)
        LET r_success=FALSE
        RETURN r_success    
     END IF   
   
     UPDATE prcl_t SET prcl015='2'
      WHERE prclent= l_prcl.prclent
        AND prcldocno=l_prcl.prcldocno
        AND prclseq=l_prcl.prclseq
        
     IF SQLCA.sqlcode THEN
        CALL cl_err("upd prcl",SQLCA.sqlcode,1)
        LET r_success=FALSE
        RETURN r_success    
     END IF       
   
   END FOREACH

   IF cl_null(l_prcl.prcldocno) THEN
      CALL cl_err("",'apr-00290',1)
   END IF

   RETURN r_success

END FUNCTION]]>
</point>
  <point name="function.aprt565_prcn001_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 根據促銷產品申請帶出資料
# Memo...........:
# Usage..........: CALL aprt565_prcn001_ref()
# Input parameter: 
# Return code....: 
# Date & Author..: 20140507 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aprt565_prcn001_ref()
DEFINE l_sql           STRING
DEFINE l_prcl  RECORD  LIKE prcl_t.*

   IF NOT cl_null(g_prcm_m.prcm001) THEN
      LET l_sql="prck001='",g_prcm_m.prcm001,"'"
   ELSE
      LET l_sql=" 1=1"
   END IF

   LET l_sql="SELECT prcl_t.* FROM prck_t,prcl_t",
             " WHERE prckent=prclent",
             "   AND prckdocno=prcldocno",
             "   AND prckent='",g_enterprise,"'",
             "   AND prckstus='Y'",
             "   AND ",l_sql,
             "   AND prcl015='1'",
             "   AND prclseq='",g_prcn_d[l_ac].prcn002,"'",
             "   AND prcldocno='",g_prcn_d[l_ac].prcn001,"'"

   PREPARE aprt565_sel_prcn001_pre FROM l_sql
   
   INITIALIZE l_prcl.* TO NULL
   EXECUTE aprt565_sel_prcn001_pre INTO l_prcl.*
   
   LET g_prcn_d[l_ac].prcnunit=l_prcl.prclunit
   LET g_prcn_d[l_ac].prcnsite=l_prcl.prclsite   
   LET g_prcn_d[l_ac].prcn003=l_prcl.prcl001
   LET g_prcn_d[l_ac].prcn004=l_prcl.prcl002
   LET g_prcn_d[l_ac].prcn005=l_prcl.prcl003
   LET g_prcn_d[l_ac].prcn006=l_prcl.prcl004
   LET g_prcn_d[l_ac].prcn007=l_prcl.prcl005
   LET g_prcn_d[l_ac].prcn008=l_prcl.prcl006
   LET g_prcn_d[l_ac].prcn009=l_prcl.prcl007
   LET g_prcn_d[l_ac].prcn010=l_prcl.prcl008
   LET g_prcn_d[l_ac].prcn011=l_prcl.prcl009
   LET g_prcn_d[l_ac].prcn012=l_prcl.prcl010
   LET g_prcn_d[l_ac].prcn013=l_prcl.prcl010
   LET g_prcn_d[l_ac].prcn014=l_prcl.prcl012
   LET g_prcn_d[l_ac].prcn015=l_prcl.prcl013
   LET g_prcn_d[l_ac].prcn016=l_prcl.prcl014


   DISPLAY g_prcn_d[l_ac].prcnunit TO prcnunit
   DISPLAY g_prcn_d[l_ac].prcnsite TO prcnsite   
   DISPLAY g_prcn_d[l_ac].prcn003 TO prcn001
   DISPLAY g_prcn_d[l_ac].prcn004 TO prcn002
   DISPLAY g_prcn_d[l_ac].prcn005 TO prcn003
   DISPLAY g_prcn_d[l_ac].prcn006 TO prcn004
   DISPLAY g_prcn_d[l_ac].prcn007 TO prcn005
   DISPLAY g_prcn_d[l_ac].prcn008 TO prcn006
   DISPLAY g_prcn_d[l_ac].prcn009 TO prcn007
   DISPLAY g_prcn_d[l_ac].prcn010 TO prcn008
   DISPLAY g_prcn_d[l_ac].prcn011 TO prcn009
   DISPLAY g_prcn_d[l_ac].prcn012 TO prcn010
   DISPLAY g_prcn_d[l_ac].prcn013 TO prcn010
   DISPLAY g_prcn_d[l_ac].prcn014 TO prcn012
   DISPLAY g_prcn_d[l_ac].prcn015 TO prcn013
   DISPLAY g_prcn_d[l_ac].prcn016 TO prcn014
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn004
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn004_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn005
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn005_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn006
   CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn006_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn007
   CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn007_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn008_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn009
   CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn009_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn010
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn010_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcn_d[l_ac].prcn011
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcn_d[l_ac].prcn011_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prcn_d[l_ac].prcn011_desc
   
END FUNCTION]]>
</point>
  <point name="construct.c.page1.prcn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prckdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn001  #顯示到畫面上
            NEXT FIELD prcn001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_21()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn004  #顯示到畫面上
            NEXT FIELD prcn004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " pmaa002 = '2' AND pmaa230 = '2'"
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn005  #顯示到畫面上
            NEXT FIELD prcn005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn006  #顯示到畫面上
            NEXT FIELD prcn006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn007  #顯示到畫面上
            NEXT FIELD prcn007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'G'
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn008  #顯示到畫面上
            NEXT FIELD prcn008                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn009  #顯示到畫面上
            NEXT FIELD prcn009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn010  #顯示到畫面上
            NEXT FIELD prcn010                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcn011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcn011  #顯示到畫面上
            NEXT FIELD prcn011                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_prcf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcm001  #顯示到畫面上
            NEXT FIELD prcm001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2' 
            CALL q_prcd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcm002  #顯示到畫面上
            NEXT FIELD prcm002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcm003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcm003  #顯示到畫面上
            NEXT FIELD prcm003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcm004  #顯示到畫面上
            NEXT FIELD prcm004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmcnfid  #顯示到畫面上
            NEXT FIELD prcmcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmcrtdp  #顯示到畫面上
            NEXT FIELD prcmcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmcrtid  #顯示到畫面上
            NEXT FIELD prcmcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcmdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmdocno  #顯示到畫面上
            NEXT FIELD prcmdocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmmodid  #顯示到畫面上
            NEXT FIELD prcmmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmowndp  #顯示到畫面上
            NEXT FIELD prcmowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmownid  #顯示到畫面上
            NEXT FIELD prcmownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcmsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcmsite  #顯示到畫面上
            NEXT FIELD prcmsite                     #返回原欄位
    

]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DECLARE aprt565_del_upd_cs CURSOR FOR SELECT prcnent,prcn001,prcn002
                                                  FROM prcn_t
                                                 WHERE prcnent=g_enterprise
                                                   AND prcndocno=g_prcm_m.prcmdocno
                                                   
      FOREACH aprt565_del_upd_cs INTO l_prcnent,l_prcn001,l_prcn002
      
        UPDATE prcl_t SET prcl015='1'
         WHERE prclent=l_prcnent
           AND prcldocno=l_prcn001
           AND prclseq=l_prcn002
           
         IF SQLCA.sqlcode THEN
            CALL cl_err(g_prcm_m.prcmdocno,SQLCA.sqlcode,0)
            CALL s_transaction_end('N','0')
            RETURN   
         END IF               
      
      END FOREACH

]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_prcnent     LIKE prcn_t.prcnent
   DEFINE l_prcn001     LIKE prcn_t.prcn001
   DEFINE l_prcn002     LIKE prcn_t.prcn002]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   IF g_prcm_m.prcmstus != 'N' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   END IF]]>
</point>
  <point name="input.a.page1.prcn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_prcn_d[l_ac].prcn001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcn_d[l_ac].prcn001 != g_prcn_d_t.prcn001)) THEN 
                  #是否存在有效資料
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcn_d[l_ac].prcn001
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_prckdocno") THEN
                     LET g_prcn_d[l_ac].prcn001 = g_prcn_d_t.prcn001
                     NEXT FIELD CURRENT
                  END IF 
                  
                  #是否存在滿足促銷方案的有效資料
                  IF NOT cl_null(g_prcm_m.prcm001) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prcn_d[l_ac].prcn001
                     LET g_chkparam.arg2 = g_prcm_m.prcm001
                     #呼叫檢查存在並帶值的library
                     IF NOT cl_chk_exist("v_prckdocno_01") THEN
                        LET g_prcn_d[l_ac].prcn001 = g_prcn_d_t.prcn001
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  #是否存在未分配申請資料
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcn_d[l_ac].prcn001
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_prcldocno") THEN
                     LET g_prcn_d[l_ac].prcn001 = g_prcn_d_t.prcn001
                     NEXT FIELD CURRENT
                  END IF   
  
                  #申請資料的銷售組織為g_site或其下級
                  LET l_prcksite=''
                  SELECT prcksite INTO l_prcksite
                    FROM prck_t
                   WHERE prckent=g_enterprise
                     AND prckdocno=g_prcn_d[l_ac].prcn001
                     AND prckstus='Y'
                     
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_prcksite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_prcm_m.prcmsite
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooed004_3") THEN
                     CALL cl_err(g_prcn_d[l_ac].prcn001,'apr-00293',1)
                     LET g_prcn_d[l_ac].prcn001 = g_prcn_d_t.prcn001
                     NEXT FIELD CURRENT
                  END IF 

                  IF NOT cl_null(g_prcn_d[l_ac].prcn002) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prcn_d[l_ac].prcn001
                     LET g_chkparam.arg2 = g_prcn_d[l_ac].prcn002
                     #呼叫檢查存在並帶值的library
                     IF NOT cl_chk_exist("v_prclseq") THEN
                        LET g_prcn_d[l_ac].prcn001 = g_prcn_d_t.prcn001
                        NEXT FIELD CURRENT
                     END IF
                     
                     CALL aprt565_prcn001_ref()
                  END IF                  
                  
               END IF
            END IF




]]>
</point>
  <point name="input.a.page1.prcn002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcn_d[l_ac].prcn002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcn_d[l_ac].prcn002 != g_prcn_d_t.prcn002)) THEN
                   IF NOT cl_null(g_prcn_d[l_ac].prcn001) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prcn_d[l_ac].prcn001
                     LET g_chkparam.arg2 = g_prcn_d[l_ac].prcn002
                     #呼叫檢查存在並帶值的library
                     IF NOT cl_chk_exist("v_prclseq") THEN
                        LET g_prcn_d[l_ac].prcn002 = g_prcn_d_t.prcn002
                        NEXT FIELD CURRENT
                     END IF
                     CALL aprt565_prcn001_ref()
                  END IF               
         
               END IF            
            
            END IF 

]]>
</point>
  <point name="input.a.page1.prcn004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn004_desc

]]>
</point>
  <point name="input.a.page1.prcn005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn005
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn005_desc

]]>
</point>
  <point name="input.a.page1.prcn006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn006
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn006_desc

]]>
</point>
  <point name="input.a.page1.prcn007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn007
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn007_desc

]]>
</point>
  <point name="input.a.page1.prcn008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn008
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn008_desc

]]>
</point>
  <point name="input.a.page1.prcn009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn009
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn009_desc

]]>
</point>
  <point name="input.a.page1.prcn010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn010
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn010_desc

]]>
</point>
  <point name="input.a.page1.prcn011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcn_d[l_ac].prcn011
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcn_d[l_ac].prcn011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcn_d[l_ac].prcn011_desc

]]>
</point>
  <point name="input.a.page1.prcn013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcn_d[l_ac].prcn013) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.prcnseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prcm_m.prcmdocno IS NOT NULL AND g_prcn_d[g_detail_idx].prcnseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcm_m.prcmdocno != g_prcmdocno_t OR g_prcn_d[g_detail_idx].prcnseq != g_prcn_d_t.prcnseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcn_t WHERE "||"prcnent = '" ||g_enterprise|| "' AND "||"prcndocno = '"||g_prcm_m.prcmdocno ||"' AND "|| "prcnseq = '"||g_prcn_d[g_detail_idx].prcnseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.prcm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prcm_m.prcm001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prcm_m.prcm001 != g_prcm_m_t.prcm001 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prcm_m.prcm001
                   LET g_chkparam.arg2 = '2'                   
                   IF NOT cl_chk_exist("v_prcf001_1") THEN
                     LET g_prcm_m.prcm001 = g_prcm_m_t.prcm001                  
                     NEXT FIELD CURRENT
                   END IF 
                   
                   SELECT prcf002 INTO g_prcm_m.prcm002
                     FROM prcf_t
                    WHERE prcfent=g_enterprise
                      AND prcf001=g_prcm_m.prcm001
                   DISPLAY BY NAME g_prcm_m.prcm002 
                   
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_prcm_m.prcm002
                   CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                   LET g_prcm_m.prcm002_desc = '', g_rtn_fields[1] , ''
                   DISPLAY BY NAME g_prcm_m.prcm002_desc                                     
                END IF
            END IF                

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm001
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm001_desc

]]>
</point>
  <point name="input.a.prcm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm002
            CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm002_desc

]]>
</point>
  <point name="input.a.prcm003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prcm_m.prcm003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prcm_m.prcm003 != g_prcm_m_t.prcm003 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prcm_m.prcm003              
                   IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_prcm_m.prcm003 = g_prcm_m_t.prcm003                  
                     NEXT FIELD CURRENT
                   END IF                                    
                END IF
            END IF    

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm003
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm003_desc

]]>
</point>
  <point name="input.a.prcm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prcm_m.prcm004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prcm_m.prcm004 != g_prcm_m_t.prcm004 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prcm_m.prcm004              
                   IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_prcm_m.prcm004 = g_prcm_m_t.prcm004                  
                     NEXT FIELD CURRENT
                   END IF                                    
                END IF
            END IF     
           
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm004_desc

]]>
</point>
  <point name="input.a.prcmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_prcm_m.prcmdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prcm_m.prcmdocno != g_prcmdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcm_t WHERE "||"prcment = '" ||g_enterprise|| "' AND "||"prcmdocno = '"||g_prcm_m.prcmdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_aooi200_chk_slip(g_site,'',g_prcm_m.prcmdocno,g_prog) THEN
                     LET g_prcm_m.prcmdocno =  g_prcmdocno_t                    
                     NEXT FIELD CURRENT
                  END IF                   
               END IF
            END IF


]]>
</point>
  <point name="input.a.prcmsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcmsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcmsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcmsite_desc

]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DISPLAY BY NAME g_prcm_m.prcmsite,g_prcm_m.prcmsite_desc,g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001, 
       g_prcm_m.prcm001_desc,g_prcm_m.prcm002,g_prcm_m.prcm002_desc,g_prcm_m.prcm005,g_prcm_m.prcm003, 
       g_prcm_m.prcm003_desc,g_prcm_m.prcm004,g_prcm_m.prcm004_desc,g_prcm_m.prcmunit,g_prcm_m.prcmstus, 
       g_prcm_m.prcmownid,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtid_desc,g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid, 
       g_prcm_m.prcmmodid_desc,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid,g_prcm_m.prcmcnfid_desc,g_prcm_m.prcmcnfdt ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               UPDATE prcl_t SET prcl015='2'
                WHERE prclent= g_enterprise
                  AND prcldocno=g_prcn_d[l_ac].prcn001
                  AND prclseq=g_prcn_d[l_ac].prcn002
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("upd prcl",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF               
                  ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               UPDATE prcl_t SET prcl015='1'
                WHERE prclent= g_enterprise
                  AND prcldocno=g_prcn_d_t.prcn001
                  AND prclseq=g_prcn_d_t.prcn002
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("upd prcl",SQLCA.sqlcode,1) 
                  LET g_prcn_d[l_ac].* = g_prcn_d_t.*                  
                  CALL s_transaction_end('N','0')   
               END IF  
               UPDATE prcl_t SET prcl015='2'
                WHERE prclent= g_enterprise
                  AND prcldocno=g_prcn_d[l_ac].prcn001
                  AND prclseq=g_prcn_d[l_ac].prcn002
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("upd prcl",SQLCA.sqlcode,1) 
                  LET g_prcn_d[l_ac].* = g_prcn_d_t.*                  
                  CALL s_transaction_end('N','0')   
               END IF 
               ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               UPDATE prcl_t SET prcl015='1'
                WHERE prclent= g_enterprise
                  AND prcldocno=g_prcn_d_t.prcn001
                  AND prclseq=g_prcn_d_t.prcn002
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("upd prcl",SQLCA.sqlcode,1)                   
                  CALL s_transaction_end('N','0')   
                  CANCEL DELETE 
               END IF ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[ ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(prcnseq) INTO g_prcn_d[l_ac].prcnseq
              FROM prcn_t
             WHERE prcnent= g_enterprise
               AND prcndocno=  g_prcm_m.prcmdocno
            IF cl_null(g_prcn_d[l_ac].prcnseq) THEN
               LET g_prcn_d[l_ac].prcnseq=1
            ELSE
               LET  g_prcn_d[l_ac].prcnseq=g_prcn_d[l_ac].prcnseq+1
            END IF 
            DISPLAY g_prcn_d[l_ac].prcnseq TO prcnseq]]>
</point>
  <point name="input.c.page1.prcn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcn_d[l_ac].prcn001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prcm_m.prcmsite
            LET g_qryparam.arg2 = '2'

            IF NOT cl_null(g_prcm_m.prcm001) THEN
               LET g_qryparam.arg3 = g_prcm_m.prcm001
               CALL q_prckdocno_02() 
            ELSE
              CALL q_prckdocno_01()                                #呼叫開窗
            END IF

            LET g_prcn_d[l_ac].prcn001 = g_qryparam.return1              
            LET g_prcn_d[l_ac].prcn002 = g_qryparam.return2
            DISPLAY g_prcn_d[l_ac].prcn001 TO prcn001              #
            DISPLAY g_prcn_d[l_ac].prcn002 TO prcn002
            NEXT FIELD prcn001                          #返回原欄位

]]>
</point>
  <point name="input.c.prcm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcm_m.prcm001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '2' #
            CALL q_prcf001()                                #呼叫開窗

            LET g_prcm_m.prcm001 = g_qryparam.return1              

            DISPLAY g_prcm_m.prcm001 TO prcm001              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm001
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm001_desc
            NEXT FIELD prcm001                          #返回原欄位

]]>
</point>
  <point name="input.c.prcm003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcm_m.prcm003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_prcm_m.prcm003 = g_qryparam.return1              

            DISPLAY g_prcm_m.prcm003 TO prcm003              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm003
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm003_desc
            NEXT FIELD prcm003                          #返回原欄位

]]>
</point>
  <point name="input.c.prcm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcm_m.prcm004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prcm_m.prcm004 = g_qryparam.return1              

            DISPLAY g_prcm_m.prcm004 TO prcm004              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcm_m.prcm004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcm_m.prcm004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcm_m.prcm004_desc
            NEXT FIELD prcm004                          #返回原欄位

]]>
</point>
  <point name="input.c.prcmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcm_m.prcmdocno             #給予default值

            #給予arg

            LET l_ooef004 = ''            
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise            
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prcm_m.prcmdocno = g_qryparam.return1              

            DISPLAY g_prcm_m.prcmdocno TO prcmdocno              #

            NEXT FIELD prcmdocno                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_prcksite            LIKE prck_t.prcksite]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               #新增單頭后，自動帶出單身           
               IF l_cmd_t <>'r' AND p_cmd = 'a' THEN  
                  IF cl_ask_confirm('apr-00289') THEN               
                     CALL aprt565_insert_prcn() RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG                  
                     END IF    
                  END IF                  
               END IF]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_prcm_m.prcmdocno,g_prcm_m.prcmdocdt,g_prog) RETURNING l_success,g_prcm_m.prcmdocno
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err(g_prcm_m.prcmdocno,'apm-00003',1)
                  CONTINUE DIALOG                  
               END IF ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aprt565_set_entry(p_cmd)
            CALL aprt565_set_no_entry(p_cmd)]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_prcm_m_t.* = g_prcm_m.*
      LET g_prcm_m.prcmsite=g_site
      LET g_prcm_m.prcmdocdt=g_today
      LET g_prcm_m.prcm003=g_user
      LET g_prcm_m.prcm004=g_dept
      LET g_prcm_m.prcmstus='N'

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcm003
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcm_m.prcm003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcm003_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcm004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcm_m.prcm004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcm004_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcmownid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcm_m.prcmownid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcmownid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcmowndp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcm_m.prcmowndp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcmowndp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcmcrtid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prcm_m.prcmcrtid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcmcrtid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prcm_m.prcmcrtdp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prcm_m.prcmcrtdp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prcm_m.prcmcrtdp_desc

]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("prcm001",TRUE)]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("prcm001",FALSE)]]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[

]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_success = TRUE
   LET g_prcm_m.prcmcnfdt=cl_get_current()  
   LET g_prcm_m.prcmmoddt=cl_get_current()
    CALL cl_set_act_visible("open,valid",TRUE)
         CASE g_prcm_m.prcmstus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("open",FALSE)

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("valid",FALSE)

         END CASE]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success      LIKE type_t.num5
   DEFINE l_errno        LIKE type_t.chr100]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt565_conf_chk(g_prcm_m.prcmdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt565_conf_upd(g_prcm_m.prcmdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prcm_t SET prcmcnfid ='',prcmcnfdt='',prcmmodid=g_user,prcmmoddt=g_prcm_m.prcmmoddt
                    WHERE prcment = g_enterprise AND prcmdocno = g_prcm_m.prcmdocno               
               IF NOT l_success THEN
                  CALL cl_err(g_prcm_m.prcmdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                  
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prcm_m.prcmdocno,l_errno,1)
            RETURN            
         END IF ]]>
</point>
  <point name="statechange.valid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt565_conf_chk(g_prcm_m.prcmdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt565_conf_upd(g_prcm_m.prcmdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prcm_t SET prcmcnfid = g_user,prcmcnfdt=g_prcm_m.prcmcnfdt
                    WHERE prcment = g_enterprise AND prcmdocno = g_prcm_m.prcmdocno              
               IF NOT l_success THEN
                  CALL cl_err(g_prcm_m.prcmdocno,l_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prcm_m.prcmdocno,l_errno,1)
            RETURN            
         END IF  ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcmcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcmcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcmsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcmsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcmsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcm005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcmunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcnseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcnseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcn012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcn014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcn015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcn016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcnsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcnsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcnsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcnunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcnunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcnunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcnseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcnsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcnunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aprt565.b_fill" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt565_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prcn_d.clear()    #g_prcn_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt565_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prcnseq,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007,prcn008,prcn009, 
          prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite,prcnunit ,t1.pmaal004 , 
          t2.pmaal004 ,t3.dbbcl003 ,t4.oojdl003 ,t5.ooefl003 ,t6.dbbal003 ,t7.imaal003 ,t8.oocal003 FROM prcn_t", 
             
                  " INNER JOIN prcm_t ON prcmdocno = prcndocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=prcn004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=prcn005 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t3 ON t3.dbbclent='"||g_enterprise||"' AND t3.dbbcl001=prcn006 AND t3.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t4 ON t4.oojdlent='"||g_enterprise||"' AND t4.oojdl001=prcn007 AND t4.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prcn008 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t6 ON t6.dbbalent='"||g_enterprise||"' AND t6.dbbal001=prcn009 AND t6.dbbal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t7 ON t7.imaalent='"||g_enterprise||"' AND t7.imaal001=prcn010 AND t7.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent='"||g_enterprise||"' AND t8.oocal001=prcn011 AND t8.oocal002='"||g_dlang||"' ",
 
                  " WHERE prcnent=? AND prcndocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prcn_t.prcnseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt565_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt565_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prcm_m.prcmdocno
                                               
      FOREACH b_fill_cs INTO g_prcn_d[l_ac].prcnseq,g_prcn_d[l_ac].prcn001,g_prcn_d[l_ac].prcn002,g_prcn_d[l_ac].prcn004, 
          g_prcn_d[l_ac].prcn005,g_prcn_d[l_ac].prcn006,g_prcn_d[l_ac].prcn007,g_prcn_d[l_ac].prcn008, 
          g_prcn_d[l_ac].prcn009,g_prcn_d[l_ac].prcn010,g_prcn_d[l_ac].prcn011,g_prcn_d[l_ac].prcn012, 
          g_prcn_d[l_ac].prcn013,g_prcn_d[l_ac].prcn014,g_prcn_d[l_ac].prcn015,g_prcn_d[l_ac].prcn016, 
          g_prcn_d[l_ac].prcn003,g_prcn_d[l_ac].prcnsite,g_prcn_d[l_ac].prcnunit,g_prcn_d[l_ac].prcn004_desc, 
          g_prcn_d[l_ac].prcn005_desc,g_prcn_d[l_ac].prcn006_desc,g_prcn_d[l_ac].prcn007_desc,g_prcn_d[l_ac].prcn008_desc, 
          g_prcn_d[l_ac].prcn009_desc,g_prcn_d[l_ac].prcn010_desc,g_prcn_d[l_ac].prcn011_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prcn_d.deleteElement(g_prcn_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt565_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aprt565.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt565_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt565_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt565.browser_fill" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt565_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prcm_m.* TO NULL
   CALL g_prcn_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prcmdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prcmdocno ",
                      " FROM prcm_t ",
                      " ",
                      " LEFT JOIN prcn_t ON prcnent = prcment AND prcmdocno = prcndocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE prcment = '" ||g_enterprise|| "' AND prcnent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prcm_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prcmdocno ",
                      " FROM prcm_t ", 
                      "  ",
                      "  ",
                      " WHERE prcment = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prcm_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prcmsite,'',prcmdocdt,prcmdocno,prcm001,'',prcm002,'',prcm003,'',prcm004,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prcmstus,prcmsite,'',prcmdocdt,prcmdocno,prcm001,'',prcm002,'',prcm003, 
       '',prcm004,'',t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ",
               " FROM prcm_t ",
               "  ",
               "  LEFT JOIN prcn_t ON prcnent = prcment AND prcmdocno = prcndocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcmsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prcm001 AND t2.prcfl002='"||g_lang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prcm002 AND t3.prcdl002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prcm003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prcm004 AND t5.ooefl002='"||g_lang||"' ",
 
               " WHERE prcment = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prcm_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prcmsite,g_browser[g_cnt].b_prcmsite_desc, 
       g_browser[g_cnt].b_prcmdocdt,g_browser[g_cnt].b_prcmdocno,g_browser[g_cnt].b_prcm001,g_browser[g_cnt].b_prcm001_desc, 
       g_browser[g_cnt].b_prcm002,g_browser[g_cnt].b_prcm002_desc,g_browser[g_cnt].b_prcm003,g_browser[g_cnt].b_prcm003_desc, 
       g_browser[g_cnt].b_prcm004,g_browser[g_cnt].b_prcm004_desc,g_browser[g_cnt].b_prcmsite_desc,g_browser[g_cnt].b_prcm001_desc, 
       g_browser[g_cnt].b_prcm002_desc,g_browser[g_cnt].b_prcm003_desc,g_browser[g_cnt].b_prcm004_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprt565.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt565_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prcmdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt565_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt565.construct" ver="2" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt565_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prcm_m.* TO NULL
   CALL g_prcn_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prcmsite,prcmdocdt,prcmdocno,prcm001,prcm002,prcm005,prcm003,prcm004, 
          prcmunit,prcmstus,prcmownid,prcmowndp,prcmcrtid,prcmcrtdp,prcmcrtdt,prcmmodid,prcmmoddt,prcmcnfid, 
          prcmcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prcmcrtdt>>----
         AFTER FIELD prcmcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcmmoddt>>----
         AFTER FIELD prcmmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcmcnfdt>>----
         AFTER FIELD prcmcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcmpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prcmsite
         ON ACTION controlp INFIELD prcmsite
            #add-point:ON ACTION controlp INFIELD prcmsite
            {<point name="construct.c.prcmsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmsite
            #add-point:BEFORE FIELD prcmsite
            {<point name="construct.b.prcmsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmsite
            
            #add-point:AFTER FIELD prcmsite
            {<point name="construct.a.prcmsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmdocdt
            #add-point:BEFORE FIELD prcmdocdt
            {<point name="construct.b.prcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmdocdt
            
            #add-point:AFTER FIELD prcmdocdt
            {<point name="construct.a.prcmdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmdocdt
         ON ACTION controlp INFIELD prcmdocdt
            #add-point:ON ACTION controlp INFIELD prcmdocdt
            {<point name="construct.c.prcmdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcmdocno
         ON ACTION controlp INFIELD prcmdocno
            #add-point:ON ACTION controlp INFIELD prcmdocno
            {<point name="construct.c.prcmdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmdocno
            #add-point:BEFORE FIELD prcmdocno
            {<point name="construct.b.prcmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmdocno
            
            #add-point:AFTER FIELD prcmdocno
            {<point name="construct.a.prcmdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcm001
         ON ACTION controlp INFIELD prcm001
            #add-point:ON ACTION controlp INFIELD prcm001
            {<point name="construct.c.prcm001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm001
            #add-point:BEFORE FIELD prcm001
            {<point name="construct.b.prcm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm001
            
            #add-point:AFTER FIELD prcm001
            {<point name="construct.a.prcm001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcm002
         ON ACTION controlp INFIELD prcm002
            #add-point:ON ACTION controlp INFIELD prcm002
            {<point name="construct.c.prcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm002
            #add-point:BEFORE FIELD prcm002
            {<point name="construct.b.prcm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm002
            
            #add-point:AFTER FIELD prcm002
            {<point name="construct.a.prcm002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm005
            #add-point:BEFORE FIELD prcm005
            {<point name="construct.b.prcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm005
            
            #add-point:AFTER FIELD prcm005
            {<point name="construct.a.prcm005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcm005
         ON ACTION controlp INFIELD prcm005
            #add-point:ON ACTION controlp INFIELD prcm005
            {<point name="construct.c.prcm005" />}
            #END add-point
 
         #Ctrlp:construct.c.prcm003
         ON ACTION controlp INFIELD prcm003
            #add-point:ON ACTION controlp INFIELD prcm003
            {<point name="construct.c.prcm003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm003
            #add-point:BEFORE FIELD prcm003
            {<point name="construct.b.prcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm003
            
            #add-point:AFTER FIELD prcm003
            {<point name="construct.a.prcm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcm004
         ON ACTION controlp INFIELD prcm004
            #add-point:ON ACTION controlp INFIELD prcm004
            {<point name="construct.c.prcm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm004
            #add-point:BEFORE FIELD prcm004
            {<point name="construct.b.prcm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm004
            
            #add-point:AFTER FIELD prcm004
            {<point name="construct.a.prcm004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmunit
            #add-point:BEFORE FIELD prcmunit
            {<point name="construct.b.prcmunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmunit
            
            #add-point:AFTER FIELD prcmunit
            {<point name="construct.a.prcmunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmunit
         ON ACTION controlp INFIELD prcmunit
            #add-point:ON ACTION controlp INFIELD prcmunit
            {<point name="construct.c.prcmunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmstus
            #add-point:BEFORE FIELD prcmstus
            {<point name="construct.b.prcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmstus
            
            #add-point:AFTER FIELD prcmstus
            {<point name="construct.a.prcmstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmstus
         ON ACTION controlp INFIELD prcmstus
            #add-point:ON ACTION controlp INFIELD prcmstus
            {<point name="construct.c.prcmstus" />}
            #END add-point
 
         #Ctrlp:construct.c.prcmownid
         ON ACTION controlp INFIELD prcmownid
            #add-point:ON ACTION controlp INFIELD prcmownid
            {<point name="construct.c.prcmownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmownid
            #add-point:BEFORE FIELD prcmownid
            {<point name="construct.b.prcmownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmownid
            
            #add-point:AFTER FIELD prcmownid
            {<point name="construct.a.prcmownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmowndp
         ON ACTION controlp INFIELD prcmowndp
            #add-point:ON ACTION controlp INFIELD prcmowndp
            {<point name="construct.c.prcmowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmowndp
            #add-point:BEFORE FIELD prcmowndp
            {<point name="construct.b.prcmowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmowndp
            
            #add-point:AFTER FIELD prcmowndp
            {<point name="construct.a.prcmowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmcrtid
         ON ACTION controlp INFIELD prcmcrtid
            #add-point:ON ACTION controlp INFIELD prcmcrtid
            {<point name="construct.c.prcmcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmcrtid
            #add-point:BEFORE FIELD prcmcrtid
            {<point name="construct.b.prcmcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmcrtid
            
            #add-point:AFTER FIELD prcmcrtid
            {<point name="construct.a.prcmcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcmcrtdp
         ON ACTION controlp INFIELD prcmcrtdp
            #add-point:ON ACTION controlp INFIELD prcmcrtdp
            {<point name="construct.c.prcmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmcrtdp
            #add-point:BEFORE FIELD prcmcrtdp
            {<point name="construct.b.prcmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmcrtdp
            
            #add-point:AFTER FIELD prcmcrtdp
            {<point name="construct.a.prcmcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmcrtdt
            #add-point:BEFORE FIELD prcmcrtdt
            {<point name="construct.b.prcmcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcmmodid
         ON ACTION controlp INFIELD prcmmodid
            #add-point:ON ACTION controlp INFIELD prcmmodid
            {<point name="construct.c.prcmmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmmodid
            #add-point:BEFORE FIELD prcmmodid
            {<point name="construct.b.prcmmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmmodid
            
            #add-point:AFTER FIELD prcmmodid
            {<point name="construct.a.prcmmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmmoddt
            #add-point:BEFORE FIELD prcmmoddt
            {<point name="construct.b.prcmmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcmcnfid
         ON ACTION controlp INFIELD prcmcnfid
            #add-point:ON ACTION controlp INFIELD prcmcnfid
            {<point name="construct.c.prcmcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmcnfid
            #add-point:BEFORE FIELD prcmcnfid
            {<point name="construct.b.prcmcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmcnfid
            
            #add-point:AFTER FIELD prcmcnfid
            {<point name="construct.a.prcmcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmcnfdt
            #add-point:BEFORE FIELD prcmcnfdt
            {<point name="construct.b.prcmcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prcnseq,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007,prcn008,prcn009, 
          prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite,prcnunit
           FROM s_detail1[1].prcnseq,s_detail1[1].prcn001,s_detail1[1].prcn002,s_detail1[1].prcn004, 
               s_detail1[1].prcn005,s_detail1[1].prcn006,s_detail1[1].prcn007,s_detail1[1].prcn008,s_detail1[1].prcn009, 
               s_detail1[1].prcn010,s_detail1[1].prcn011,s_detail1[1].prcn012,s_detail1[1].prcn013,s_detail1[1].prcn014, 
               s_detail1[1].prcn015,s_detail1[1].prcn016,s_detail1[1].prcn003,s_detail1[1].prcnsite, 
               s_detail1[1].prcnunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt565.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt565_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prcmdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt565.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt565_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prcm_m.prcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
   
   
 
   CALL aprt565_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt565_cl USING g_enterprise,g_prcm_m.prcmdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt565_cl:", STATUS, 1)
      CLOSE aprt565_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prcm_m.prcmdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt565_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
 
      DELETE FROM prcm_t
       WHERE prcment = g_enterprise AND prcmdocno = g_prcm_m.prcmdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prcm_m.prcmdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prcn_t
       WHERE prcnent = g_enterprise AND prcndocno = g_prcm_m.prcmdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcn_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prcn_d.clear() 
 
     
      #CALL aprt565_ui_browser_refresh()  
      CALL aprt565_ui_headershow()  
      CALL aprt565_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt565_browser_fill("")
         CALL aprt565_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt565_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt565_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prcm_m.prcmdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aprt565.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt565_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prcn_t
       WHERE prcnent = g_enterprise AND
         prcndocno = ps_keys_bak[1] AND prcnseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt565.description" ver="40" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000042
#+ 
#+ Filename...: aprt565
#+ Description: 促銷產品數量分配作業
#+ Creator....: 01251(2014/05/07)
#+ Modifier...: 01251(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aprt565.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt565_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prcn_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt565_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt565_detail AS ",
                "SELECT * FROM prcn_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt565_detail SELECT * FROM prcn_t 
                                         WHERE prcnent = g_enterprise AND prcndocno = g_prcmdocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt565_detail 
      #更新key欄位
      SET prcndocno = g_prcm_m.prcmdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prcn_t SELECT * FROM aprt565_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt565_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
   
   DROP TABLE aprt565_detail
   
END FUNCTION
]]>
</section>
  <section id="aprt565.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt565_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt565.fetch" ver="2" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt565_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prcm_m.prcmdocno = g_browser[g_current_idx].b_prcmdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prcm_t",SQLCA.sqlcode,1)
      INITIALIZE g_prcm_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt565_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aprt565.fill_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt565_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aprt565.filter" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt565_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prcmsite,prcmdocdt,prcmdocno,prcm001,prcm002,prcm003,prcm004
                          FROM s_browse[1].b_prcmsite,s_browse[1].b_prcmdocdt,s_browse[1].b_prcmdocno, 
                              s_browse[1].b_prcm001,s_browse[1].b_prcm002,s_browse[1].b_prcm003,s_browse[1].b_prcm004 

 
         BEFORE CONSTRUCT
               DISPLAY aprt565_filter_parser('prcmsite') TO s_browse[1].b_prcmsite
            DISPLAY aprt565_filter_parser('prcmdocdt') TO s_browse[1].b_prcmdocdt
            DISPLAY aprt565_filter_parser('prcmdocno') TO s_browse[1].b_prcmdocno
            DISPLAY aprt565_filter_parser('prcm001') TO s_browse[1].b_prcm001
            DISPLAY aprt565_filter_parser('prcm002') TO s_browse[1].b_prcm002
            DISPLAY aprt565_filter_parser('prcm003') TO s_browse[1].b_prcm003
            DISPLAY aprt565_filter_parser('prcm004') TO s_browse[1].b_prcm004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt565_filter_show('prcmsite')
   CALL aprt565_filter_show('prcmdocdt')
   CALL aprt565_filter_show('prcmdocno')
   CALL aprt565_filter_show('prcm001')
   CALL aprt565_filter_show('prcm002')
   CALL aprt565_filter_show('prcm003')
   CALL aprt565_filter_show('prcm004')
 
END FUNCTION
]]>
</section>
  <section id="aprt565.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt565_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aprt565.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt565_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt565_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aprt565.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prcm_m        RECORD
       prcmsite LIKE prcm_t.prcmsite, 
   prcmsite_desc LIKE type_t.chr80, 
   prcmdocdt LIKE prcm_t.prcmdocdt, 
   prcmdocno LIKE prcm_t.prcmdocno, 
   prcm001 LIKE prcm_t.prcm001, 
   prcm001_desc LIKE type_t.chr80, 
   prcm002 LIKE prcm_t.prcm002, 
   prcm002_desc LIKE type_t.chr80, 
   prcm005 LIKE prcm_t.prcm005, 
   prcm003 LIKE prcm_t.prcm003, 
   prcm003_desc LIKE type_t.chr80, 
   prcm004 LIKE prcm_t.prcm004, 
   prcm004_desc LIKE type_t.chr80, 
   prcmunit LIKE prcm_t.prcmunit, 
   prcmstus LIKE prcm_t.prcmstus, 
   prcmownid LIKE prcm_t.prcmownid, 
   prcmownid_desc LIKE type_t.chr80, 
   prcmowndp LIKE prcm_t.prcmowndp, 
   prcmowndp_desc LIKE type_t.chr80, 
   prcmcrtid LIKE prcm_t.prcmcrtid, 
   prcmcrtid_desc LIKE type_t.chr80, 
   prcmcrtdp LIKE prcm_t.prcmcrtdp, 
   prcmcrtdp_desc LIKE type_t.chr80, 
   prcmcrtdt DATETIME YEAR TO SECOND, 
   prcmmodid LIKE prcm_t.prcmmodid, 
   prcmmodid_desc LIKE type_t.chr80, 
   prcmmoddt DATETIME YEAR TO SECOND, 
   prcmcnfid LIKE prcm_t.prcmcnfid, 
   prcmcnfid_desc LIKE type_t.chr80, 
   prcmcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prcn_d        RECORD
       prcnseq LIKE prcn_t.prcnseq, 
   prcn001 LIKE prcn_t.prcn001, 
   prcn002 LIKE prcn_t.prcn002, 
   prcn004 LIKE prcn_t.prcn004, 
   prcn004_desc LIKE type_t.chr500, 
   prcn005 LIKE prcn_t.prcn005, 
   prcn005_desc LIKE type_t.chr500, 
   prcn006 LIKE prcn_t.prcn006, 
   prcn006_desc LIKE type_t.chr500, 
   prcn007 LIKE prcn_t.prcn007, 
   prcn007_desc LIKE type_t.chr500, 
   prcn008 LIKE prcn_t.prcn008, 
   prcn008_desc LIKE type_t.chr500, 
   prcn009 LIKE prcn_t.prcn009, 
   prcn009_desc LIKE type_t.chr500, 
   prcn010 LIKE prcn_t.prcn010, 
   prcn010_desc LIKE type_t.chr500, 
   prcn011 LIKE prcn_t.prcn011, 
   prcn011_desc LIKE type_t.chr500, 
   prcn012 LIKE prcn_t.prcn012, 
   prcn013 LIKE prcn_t.prcn013, 
   prcn014 LIKE prcn_t.prcn014, 
   prcn015 LIKE prcn_t.prcn015, 
   prcn016 LIKE prcn_t.prcn016, 
   prcn003 LIKE prcn_t.prcn003, 
   prcnsite LIKE prcn_t.prcnsite, 
   prcnunit LIKE prcn_t.prcnunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prcm_m          type_g_prcm_m
DEFINE g_prcm_m_t        type_g_prcm_m
 
   DEFINE g_prcmdocno_t LIKE prcm_t.prcmdocno
 
 
DEFINE g_prcn_d          DYNAMIC ARRAY OF type_g_prcn_d
DEFINE g_prcn_d_t        type_g_prcn_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcmsite LIKE prcm_t.prcmsite,
   b_prcmsite_desc LIKE type_t.chr80,
      b_prcmdocdt LIKE prcm_t.prcmdocdt,
      b_prcmdocno LIKE prcm_t.prcmdocno,
      b_prcm001 LIKE prcm_t.prcm001,
   b_prcm001_desc LIKE type_t.chr80,
      b_prcm002 LIKE prcm_t.prcm002,
   b_prcm002_desc LIKE type_t.chr80,
      b_prcm003 LIKE prcm_t.prcm003,
   b_prcm003_desc LIKE type_t.chr80,
      b_prcm004 LIKE prcm_t.prcm004,
   b_prcm004_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcmsite LIKE prcm_t.prcmsite,
   b_prcmsite_desc LIKE type_t.chr80,
      b_prcmdocdt LIKE prcm_t.prcmdocdt,
      b_prcmdocno LIKE prcm_t.prcmdocno,
      b_prcm001 LIKE prcm_t.prcm001,
   b_prcm001_desc LIKE type_t.chr80,
      b_prcm002 LIKE prcm_t.prcm002,
   b_prcm002_desc LIKE type_t.chr80,
      b_prcm003 LIKE prcm_t.prcm003,
   b_prcm003_desc LIKE type_t.chr80,
      b_prcm004 LIKE prcm_t.prcm004,
   b_prcm004_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aprt565.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt565_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prcn_d.getLength() THEN
         LET g_detail_idx = g_prcn_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prcn_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prcn_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt565.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt565_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prcmstus','50','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt565_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aprt565.input" ver="2" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt565_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prcnseq,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007,prcn008,prcn009, 
       prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite,prcnunit FROM prcn_t  
       WHERE prcnent=? AND prcndocno=? AND prcnseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt565_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt565_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt565_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prcm_m.prcmsite,g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002, 
       g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004,g_prcm_m.prcmunit,g_prcm_m.prcmstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aprt565.input.body" ver="3" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prcn_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prcn_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt565_b_fill()
            LET g_rec_b = g_prcn_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt565_cl USING g_enterprise,g_prcm_m.prcmdocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt565_cl:", STATUS, 1)
               CLOSE aprt565_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prcn_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prcn_d[l_ac].prcnseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prcn_d_t.* = g_prcn_d[l_ac].*  #BACKUP
               CALL aprt565_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt565_set_no_entry_b(l_cmd)
               IF NOT aprt565_lock_b("prcn_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt565_bcl INTO g_prcn_d[l_ac].prcnseq,g_prcn_d[l_ac].prcn001,g_prcn_d[l_ac].prcn002, 
                      g_prcn_d[l_ac].prcn004,g_prcn_d[l_ac].prcn005,g_prcn_d[l_ac].prcn006,g_prcn_d[l_ac].prcn007, 
                      g_prcn_d[l_ac].prcn008,g_prcn_d[l_ac].prcn009,g_prcn_d[l_ac].prcn010,g_prcn_d[l_ac].prcn011, 
                      g_prcn_d[l_ac].prcn012,g_prcn_d[l_ac].prcn013,g_prcn_d[l_ac].prcn014,g_prcn_d[l_ac].prcn015, 
                      g_prcn_d[l_ac].prcn016,g_prcn_d[l_ac].prcn003,g_prcn_d[l_ac].prcnsite,g_prcn_d[l_ac].prcnunit 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prcn_d_t.prcnseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt565_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prcn_d[l_ac].* TO NULL 
            
            LET g_prcn_d_t.* = g_prcn_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt565_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt565_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prcn_d[li_reproduce_target].* = g_prcn_d[li_reproduce].*
 
               LET g_prcn_d[li_reproduce_target].prcnseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prcn_t 
             WHERE prcnent = g_enterprise AND prcndocno = g_prcm_m.prcmdocno
 
               AND prcnseq = g_prcn_d[l_ac].prcnseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcm_m.prcmdocno
               LET gs_keys[2] = g_prcn_d[g_detail_idx].prcnseq
               CALL aprt565_insert_b('prcn_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prcn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt565_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prcn_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prcn_d.deleteElement(l_ac)
               NEXT FIELD prcnseq
            END IF
         
            IF g_prcn_d[l_ac].prcnseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prcn_t
                WHERE prcnent = g_enterprise AND prcndocno = g_prcm_m.prcmdocno AND
 
                      prcnseq = g_prcn_d_t.prcnseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcn_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt565_bcl
               LET l_count = g_prcn_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcm_m.prcmdocno
               LET gs_keys[2] = g_prcn_d[g_detail_idx].prcnseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt565_delete_b('prcn_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD prcnseq
            #add-point:BEFORE FIELD prcnseq
            {<point name="input.b.page1.prcnseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcnseq
            
            #add-point:AFTER FIELD prcnseq
            {<point name="input.a.page1.prcnseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcnseq
            #add-point:ON CHANGE prcnseq
            {<point name="input.g.page1.prcnseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn001
            #add-point:BEFORE FIELD prcn001
            {<point name="input.b.page1.prcn001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn001
            
            #add-point:AFTER FIELD prcn001
            {<point name="input.a.page1.prcn001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn001
            #add-point:ON CHANGE prcn001
            {<point name="input.g.page1.prcn001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcn_d[l_ac].prcn002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD prcn002
            END IF
 
 
            #add-point:AFTER FIELD prcn002
            {<point name="input.a.page1.prcn002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn002
            #add-point:BEFORE FIELD prcn002
            {<point name="input.b.page1.prcn002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn002
            #add-point:ON CHANGE prcn002
            {<point name="input.g.page1.prcn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn004
            
            #add-point:AFTER FIELD prcn004
            {<point name="input.a.page1.prcn004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn004
            #add-point:BEFORE FIELD prcn004
            {<point name="input.b.page1.prcn004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn004
            #add-point:ON CHANGE prcn004
            {<point name="input.g.page1.prcn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn005
            
            #add-point:AFTER FIELD prcn005
            {<point name="input.a.page1.prcn005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn005
            #add-point:BEFORE FIELD prcn005
            {<point name="input.b.page1.prcn005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn005
            #add-point:ON CHANGE prcn005
            {<point name="input.g.page1.prcn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn006
            
            #add-point:AFTER FIELD prcn006
            {<point name="input.a.page1.prcn006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn006
            #add-point:BEFORE FIELD prcn006
            {<point name="input.b.page1.prcn006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn006
            #add-point:ON CHANGE prcn006
            {<point name="input.g.page1.prcn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn007
            
            #add-point:AFTER FIELD prcn007
            {<point name="input.a.page1.prcn007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn007
            #add-point:BEFORE FIELD prcn007
            {<point name="input.b.page1.prcn007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn007
            #add-point:ON CHANGE prcn007
            {<point name="input.g.page1.prcn007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn008
            
            #add-point:AFTER FIELD prcn008
            {<point name="input.a.page1.prcn008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn008
            #add-point:BEFORE FIELD prcn008
            {<point name="input.b.page1.prcn008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn008
            #add-point:ON CHANGE prcn008
            {<point name="input.g.page1.prcn008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn009
            
            #add-point:AFTER FIELD prcn009
            {<point name="input.a.page1.prcn009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn009
            #add-point:BEFORE FIELD prcn009
            {<point name="input.b.page1.prcn009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn009
            #add-point:ON CHANGE prcn009
            {<point name="input.g.page1.prcn009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn010
            
            #add-point:AFTER FIELD prcn010
            {<point name="input.a.page1.prcn010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn010
            #add-point:BEFORE FIELD prcn010
            {<point name="input.b.page1.prcn010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn010
            #add-point:ON CHANGE prcn010
            {<point name="input.g.page1.prcn010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn011
            
            #add-point:AFTER FIELD prcn011
            {<point name="input.a.page1.prcn011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn011
            #add-point:BEFORE FIELD prcn011
            {<point name="input.b.page1.prcn011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn011
            #add-point:ON CHANGE prcn011
            {<point name="input.g.page1.prcn011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn012
            #add-point:BEFORE FIELD prcn012
            {<point name="input.b.page1.prcn012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn012
            
            #add-point:AFTER FIELD prcn012
            {<point name="input.a.page1.prcn012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn012
            #add-point:ON CHANGE prcn012
            {<point name="input.g.page1.prcn012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn013
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcn_d[l_ac].prcn013,"0","1","","","azz-00079",1) THEN
               NEXT FIELD prcn013
            END IF
 
 
            #add-point:AFTER FIELD prcn013
            {<point name="input.a.page1.prcn013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn013
            #add-point:BEFORE FIELD prcn013
            {<point name="input.b.page1.prcn013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcn013
            #add-point:ON CHANGE prcn013
            {<point name="input.g.page1.prcn013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn014
            #add-point:BEFORE FIELD prcn014
            {<point name="input.b.page1.prcn014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn014
            
            #add-point:AFTER FIELD prcn014
            {<point name="input.a.page1.prcn014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn014
            #add-point:ON CHANGE prcn014
            {<point name="input.g.page1.prcn014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn015
            #add-point:BEFORE FIELD prcn015
            {<point name="input.b.page1.prcn015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn015
            
            #add-point:AFTER FIELD prcn015
            {<point name="input.a.page1.prcn015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn015
            #add-point:ON CHANGE prcn015
            {<point name="input.g.page1.prcn015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn016
            #add-point:BEFORE FIELD prcn016
            {<point name="input.b.page1.prcn016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn016
            
            #add-point:AFTER FIELD prcn016
            {<point name="input.a.page1.prcn016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn016
            #add-point:ON CHANGE prcn016
            {<point name="input.g.page1.prcn016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcn003
            #add-point:BEFORE FIELD prcn003
            {<point name="input.b.page1.prcn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcn003
            
            #add-point:AFTER FIELD prcn003
            {<point name="input.a.page1.prcn003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcn003
            #add-point:ON CHANGE prcn003
            {<point name="input.g.page1.prcn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcnsite
            #add-point:BEFORE FIELD prcnsite
            {<point name="input.b.page1.prcnsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcnsite
            
            #add-point:AFTER FIELD prcnsite
            {<point name="input.a.page1.prcnsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcnsite
            #add-point:ON CHANGE prcnsite
            {<point name="input.g.page1.prcnsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcnunit
            #add-point:BEFORE FIELD prcnunit
            {<point name="input.b.page1.prcnunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcnunit
            
            #add-point:AFTER FIELD prcnunit
            {<point name="input.a.page1.prcnunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcnunit
            #add-point:ON CHANGE prcnunit
            {<point name="input.g.page1.prcnunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prcnseq
         ON ACTION controlp INFIELD prcnseq
            #add-point:ON ACTION controlp INFIELD prcnseq
            {<point name="input.c.page1.prcnseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn001
         ON ACTION controlp INFIELD prcn001
            #add-point:ON ACTION controlp INFIELD prcn001
            {<point name="input.c.page1.prcn001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn002
         ON ACTION controlp INFIELD prcn002
            #add-point:ON ACTION controlp INFIELD prcn002
            {<point name="input.c.page1.prcn002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn004
         ON ACTION controlp INFIELD prcn004
            #add-point:ON ACTION controlp INFIELD prcn004
            {<point name="input.c.page1.prcn004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn005
         ON ACTION controlp INFIELD prcn005
            #add-point:ON ACTION controlp INFIELD prcn005
            {<point name="input.c.page1.prcn005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn006
         ON ACTION controlp INFIELD prcn006
            #add-point:ON ACTION controlp INFIELD prcn006
            {<point name="input.c.page1.prcn006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn007
         ON ACTION controlp INFIELD prcn007
            #add-point:ON ACTION controlp INFIELD prcn007
            {<point name="input.c.page1.prcn007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn008
         ON ACTION controlp INFIELD prcn008
            #add-point:ON ACTION controlp INFIELD prcn008
            {<point name="input.c.page1.prcn008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn009
         ON ACTION controlp INFIELD prcn009
            #add-point:ON ACTION controlp INFIELD prcn009
            {<point name="input.c.page1.prcn009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn010
         ON ACTION controlp INFIELD prcn010
            #add-point:ON ACTION controlp INFIELD prcn010
            {<point name="input.c.page1.prcn010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn011
         ON ACTION controlp INFIELD prcn011
            #add-point:ON ACTION controlp INFIELD prcn011
            {<point name="input.c.page1.prcn011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn012
         ON ACTION controlp INFIELD prcn012
            #add-point:ON ACTION controlp INFIELD prcn012
            {<point name="input.c.page1.prcn012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn013
         ON ACTION controlp INFIELD prcn013
            #add-point:ON ACTION controlp INFIELD prcn013
            {<point name="input.c.page1.prcn013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn014
         ON ACTION controlp INFIELD prcn014
            #add-point:ON ACTION controlp INFIELD prcn014
            {<point name="input.c.page1.prcn014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn015
         ON ACTION controlp INFIELD prcn015
            #add-point:ON ACTION controlp INFIELD prcn015
            {<point name="input.c.page1.prcn015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn016
         ON ACTION controlp INFIELD prcn016
            #add-point:ON ACTION controlp INFIELD prcn016
            {<point name="input.c.page1.prcn016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcn003
         ON ACTION controlp INFIELD prcn003
            #add-point:ON ACTION controlp INFIELD prcn003
            {<point name="input.c.page1.prcn003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcnsite
         ON ACTION controlp INFIELD prcnsite
            #add-point:ON ACTION controlp INFIELD prcnsite
            {<point name="input.c.page1.prcnsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcnunit
         ON ACTION controlp INFIELD prcnunit
            #add-point:ON ACTION controlp INFIELD prcnunit
            {<point name="input.c.page1.prcnunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prcn_d[l_ac].* = g_prcn_d_t.*
               CLOSE aprt565_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prcn_d[l_ac].prcnseq,-263,1)
               LET g_prcn_d[l_ac].* = g_prcn_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prcn_t SET (prcndocno,prcnseq,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007, 
                   prcn008,prcn009,prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite, 
                   prcnunit) = (g_prcm_m.prcmdocno,g_prcn_d[l_ac].prcnseq,g_prcn_d[l_ac].prcn001,g_prcn_d[l_ac].prcn002, 
                   g_prcn_d[l_ac].prcn004,g_prcn_d[l_ac].prcn005,g_prcn_d[l_ac].prcn006,g_prcn_d[l_ac].prcn007, 
                   g_prcn_d[l_ac].prcn008,g_prcn_d[l_ac].prcn009,g_prcn_d[l_ac].prcn010,g_prcn_d[l_ac].prcn011, 
                   g_prcn_d[l_ac].prcn012,g_prcn_d[l_ac].prcn013,g_prcn_d[l_ac].prcn014,g_prcn_d[l_ac].prcn015, 
                   g_prcn_d[l_ac].prcn016,g_prcn_d[l_ac].prcn003,g_prcn_d[l_ac].prcnsite,g_prcn_d[l_ac].prcnunit) 

                WHERE prcnent = g_enterprise AND prcndocno = g_prcm_m.prcmdocno 
 
                  AND prcnseq = g_prcn_d_t.prcnseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prcn_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prcn_d[l_ac].* = g_prcn_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prcn_t",SQLCA.sqlcode,1)
                     LET g_prcn_d[l_ac].* = g_prcn_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prcm_m.prcmdocno
               LET gs_keys_bak[1] = g_prcmdocno_t
               LET gs_keys[2] = g_prcn_d[g_detail_idx].prcnseq
               LET gs_keys_bak[2] = g_prcn_d_t.prcnseq
               CALL aprt565_update_b('prcn_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prcm_m),util.JSON.stringify(g_prcn_d_t)
               LET g_log2 = util.JSON.stringify(g_prcm_m),util.JSON.stringify(g_prcn_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt565_unlock_b("prcn_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prcn_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prcn_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aprt565.input.head" ver="3" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_prcm_m.prcmsite,g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002, 
          g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004,g_prcm_m.prcmunit,g_prcm_m.prcmstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prcmsite
            
            #add-point:AFTER FIELD prcmsite
            {<point name="input.a.prcmsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmsite
            #add-point:BEFORE FIELD prcmsite
            {<point name="input.b.prcmsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcmsite
            #add-point:ON CHANGE prcmsite
            {<point name="input.g.prcmsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmdocdt
            #add-point:BEFORE FIELD prcmdocdt
            {<point name="input.b.prcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmdocdt
            
            #add-point:AFTER FIELD prcmdocdt
            {<point name="input.a.prcmdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcmdocdt
            #add-point:ON CHANGE prcmdocdt
            {<point name="input.g.prcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmdocno
            #add-point:BEFORE FIELD prcmdocno
            {<point name="input.b.prcmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmdocno
            
            #add-point:AFTER FIELD prcmdocno
            {<point name="input.a.prcmdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcmdocno
            #add-point:ON CHANGE prcmdocno
            {<point name="input.g.prcmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm001
            
            #add-point:AFTER FIELD prcm001
            {<point name="input.a.prcm001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm001
            #add-point:BEFORE FIELD prcm001
            {<point name="input.b.prcm001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcm001
            #add-point:ON CHANGE prcm001
            {<point name="input.g.prcm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm002
            
            #add-point:AFTER FIELD prcm002
            {<point name="input.a.prcm002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm002
            #add-point:BEFORE FIELD prcm002
            {<point name="input.b.prcm002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcm002
            #add-point:ON CHANGE prcm002
            {<point name="input.g.prcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm005
            #add-point:BEFORE FIELD prcm005
            {<point name="input.b.prcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm005
            
            #add-point:AFTER FIELD prcm005
            {<point name="input.a.prcm005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcm005
            #add-point:ON CHANGE prcm005
            {<point name="input.g.prcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm003
            
            #add-point:AFTER FIELD prcm003
            {<point name="input.a.prcm003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm003
            #add-point:BEFORE FIELD prcm003
            {<point name="input.b.prcm003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcm003
            #add-point:ON CHANGE prcm003
            {<point name="input.g.prcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcm004
            
            #add-point:AFTER FIELD prcm004
            {<point name="input.a.prcm004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcm004
            #add-point:BEFORE FIELD prcm004
            {<point name="input.b.prcm004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcm004
            #add-point:ON CHANGE prcm004
            {<point name="input.g.prcm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmunit
            #add-point:BEFORE FIELD prcmunit
            {<point name="input.b.prcmunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmunit
            
            #add-point:AFTER FIELD prcmunit
            {<point name="input.a.prcmunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcmunit
            #add-point:ON CHANGE prcmunit
            {<point name="input.g.prcmunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcmstus
            #add-point:BEFORE FIELD prcmstus
            {<point name="input.b.prcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcmstus
            
            #add-point:AFTER FIELD prcmstus
            {<point name="input.a.prcmstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcmstus
            #add-point:ON CHANGE prcmstus
            {<point name="input.g.prcmstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prcmsite
         ON ACTION controlp INFIELD prcmsite
            #add-point:ON ACTION controlp INFIELD prcmsite
            {<point name="input.c.prcmsite" />}
            #END add-point
 
         #Ctrlp:input.c.prcmdocdt
         ON ACTION controlp INFIELD prcmdocdt
            #add-point:ON ACTION controlp INFIELD prcmdocdt
            {<point name="input.c.prcmdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prcmdocno
         ON ACTION controlp INFIELD prcmdocno
            #add-point:ON ACTION controlp INFIELD prcmdocno
            {<point name="input.c.prcmdocno" />}
            #END add-point
 
         #Ctrlp:input.c.prcm001
         ON ACTION controlp INFIELD prcm001
            #add-point:ON ACTION controlp INFIELD prcm001
            {<point name="input.c.prcm001" />}
            #END add-point
 
         #Ctrlp:input.c.prcm002
         ON ACTION controlp INFIELD prcm002
            #add-point:ON ACTION controlp INFIELD prcm002
            {<point name="input.c.prcm002" />}
            #END add-point
 
         #Ctrlp:input.c.prcm005
         ON ACTION controlp INFIELD prcm005
            #add-point:ON ACTION controlp INFIELD prcm005
            {<point name="input.c.prcm005" />}
            #END add-point
 
         #Ctrlp:input.c.prcm003
         ON ACTION controlp INFIELD prcm003
            #add-point:ON ACTION controlp INFIELD prcm003
            {<point name="input.c.prcm003" />}
            #END add-point
 
         #Ctrlp:input.c.prcm004
         ON ACTION controlp INFIELD prcm004
            #add-point:ON ACTION controlp INFIELD prcm004
            {<point name="input.c.prcm004" />}
            #END add-point
 
         #Ctrlp:input.c.prcmunit
         ON ACTION controlp INFIELD prcmunit
            #add-point:ON ACTION controlp INFIELD prcmunit
            {<point name="input.c.prcmunit" />}
            #END add-point
 
         #Ctrlp:input.c.prcmstus
         ON ACTION controlp INFIELD prcmstus
            #add-point:ON ACTION controlp INFIELD prcmstus
            {<point name="input.c.prcmstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prcm_m.prcmdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prcm_t (prcment,prcmsite,prcmdocdt,prcmdocno,prcm001,prcm002,prcm005,prcm003, 
                   prcm004,prcmunit,prcmstus,prcmownid,prcmowndp,prcmcrtid,prcmcrtdp,prcmcrtdt,prcmcnfid, 
                   prcmcnfdt)
               VALUES (g_enterprise,g_prcm_m.prcmsite,g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001, 
                   g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004,g_prcm_m.prcmunit, 
                   g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid,g_prcm_m.prcmcrtdp, 
                   g_prcm_m.prcmcrtdt,g_prcm_m.prcmcnfid,g_prcm_m.prcmcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prcm_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt565_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prcm_t SET (prcmsite,prcmdocdt,prcmdocno,prcm001,prcm002,prcm005,prcm003,prcm004, 
                   prcmunit,prcmstus,prcmownid,prcmowndp,prcmcrtid,prcmcrtdp,prcmcrtdt,prcmcnfid,prcmcnfdt) = (g_prcm_m.prcmsite, 
                   g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005, 
                   g_prcm_m.prcm003,g_prcm_m.prcm004,g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid, 
                   g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid,g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmcnfid, 
                   g_prcm_m.prcmcnfdt)
                WHERE prcment = g_enterprise AND prcmdocno = g_prcmdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcm_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prcm_m_t)
               LET g_log2 = util.JSON.stringify(g_prcm_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aprt565.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prcmdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prcnseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aprt565.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt565_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prcn_d.clear()   
 
 
   INITIALIZE g_prcm_m.* LIKE prcm_t.*             #DEFAULT 設定
   
   LET g_prcmdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prcm_m.prcmownid = g_user
      LET g_prcm_m.prcmowndp = g_dept
      LET g_prcm_m.prcmcrtid = g_user
      LET g_prcm_m.prcmcrtdp = g_dept 
      LET g_prcm_m.prcmcrtdt = cl_get_current()
      LET g_prcm_m.prcmmodid = ""
      LET g_prcm_m.prcmmoddt = ""
      LET g_prcm_m.prcmstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt565_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prcm_m.* = g_prcm_m_t.*
         CALL aprt565_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prcn_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
   
   LET g_wc = g_wc,  
              " OR ( prcment = '" ||g_enterprise|| "' AND",
              " prcmdocno = '", g_prcm_m.prcmdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt565_cl
   
END FUNCTION
]]>
</section>
  <section id="aprt565.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt565_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prcn_t
                  (prcnent,
                   prcndocno,
                   prcnseq
                   ,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007,prcn008,prcn009,prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite,prcnunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prcn_d[g_detail_idx].prcn001,g_prcn_d[g_detail_idx].prcn002,g_prcn_d[g_detail_idx].prcn004, 
                       g_prcn_d[g_detail_idx].prcn005,g_prcn_d[g_detail_idx].prcn006,g_prcn_d[g_detail_idx].prcn007, 
                       g_prcn_d[g_detail_idx].prcn008,g_prcn_d[g_detail_idx].prcn009,g_prcn_d[g_detail_idx].prcn010, 
                       g_prcn_d[g_detail_idx].prcn011,g_prcn_d[g_detail_idx].prcn012,g_prcn_d[g_detail_idx].prcn013, 
                       g_prcn_d[g_detail_idx].prcn014,g_prcn_d[g_detail_idx].prcn015,g_prcn_d[g_detail_idx].prcn016, 
                       g_prcn_d[g_detail_idx].prcn003,g_prcn_d[g_detail_idx].prcnsite,g_prcn_d[g_detail_idx].prcnunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aprt565.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt565_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt565_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prcn_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt565_bcl USING g_enterprise,
                                       g_prcm_m.prcmdocno,g_prcn_d[g_detail_idx].prcnseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt565_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt565.main" ver="2" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prcmsite,'',prcmdocdt,prcmdocno,prcm001,'',prcm002,'',prcm005,prcm003, 
       '',prcm004,'',prcmunit,prcmstus,prcmownid,'',prcmowndp,'',prcmcrtid,'',prcmcrtdp,'',prcmcrtdt, 
       prcmmodid,'',prcmmoddt,prcmcnfid,'',prcmcnfdt", 
                      " FROM prcm_t",
                      " WHERE prcment= ? AND prcmdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt565_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prcmsite,prcmdocdt,prcmdocno,prcm001,prcm002,prcm005,prcm003,prcm004, 
       prcmunit,prcmstus,prcmownid,prcmowndp,prcmcrtid,prcmcrtdp,prcmcrtdt,prcmmodid,prcmmoddt,prcmcnfid, 
       prcmcnfdt,t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 , 
       t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011",
               " FROM prcm_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcmsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prcm001 AND t2.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prcm002 AND t3.prcdl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prcm003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prcm004 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prcmownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prcmowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prcmcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prcmcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prcmmodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=prcmcnfid  ",
 
               " WHERE prcment = '" ||g_enterprise|| "' AND prcmdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt565_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt565 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt565_init()   
 
      #進入選單 Menu (="N")
      CALL aprt565_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt565
      
   END IF 
   
   CLOSE aprt565_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aprt565.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt565_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prcm_m.prcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
 
   ERROR ""
  
   LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
   CALL s_transaction_begin()
   
   OPEN aprt565_cl USING g_enterprise,g_prcm_m.prcmdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt565_cl:", STATUS, 1)
      CLOSE aprt565_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prcm_m.prcmdocno,SQLCA.sqlcode,0)
      CLOSE aprt565_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt565_show()
   WHILE TRUE
      LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prcm_m.prcmmodid = g_user 
LET g_prcm_m.prcmmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt565_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prcm_m.* = g_prcm_m_t.*
         CALL aprt565_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prcm_t SET (prcmmodid,prcmmoddt) = (g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt)
       WHERE prcment = g_enterprise AND prcmdocno = g_prcmdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prcm_m.prcmdocno != g_prcmdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prcn_t SET prcndocno = g_prcm_m.prcmdocno
 
          WHERE prcnent = g_enterprise AND prcndocno = g_prcmdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prcn_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prcm_m.prcmdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt565_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prcm_m.prcmdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aprt565.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt565.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aprt565.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt565_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prcn_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt565_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt565_browser_fill("")
      CALL aprt565_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt565_filter_show('prcmsite')
   CALL aprt565_filter_show('prcmdocdt')
   CALL aprt565_filter_show('prcmdocno')
   CALL aprt565_filter_show('prcm001')
   CALL aprt565_filter_show('prcm002')
   CALL aprt565_filter_show('prcm003')
   CALL aprt565_filter_show('prcm004')
   CALL aprt565_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt565_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt565.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt565_reproduce()
   DEFINE l_newno     LIKE prcm_t.prcmdocno 
   DEFINE l_oldno     LIKE prcm_t.prcmdocno 
 
   DEFINE l_master    RECORD LIKE prcm_t.*
   DEFINE l_detail    RECORD LIKE prcn_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prcm_m.prcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prcmdocno_t = g_prcm_m.prcmdocno
 
    
   LET g_prcm_m.prcmdocno = ""
 
    
   CALL aprt565_set_entry('a')
   CALL aprt565_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prcm_m.prcmownid = g_user
      LET g_prcm_m.prcmowndp = g_dept
      LET g_prcm_m.prcmcrtid = g_user
      LET g_prcm_m.prcmcrtdp = g_dept 
      LET g_prcm_m.prcmcrtdt = cl_get_current()
      LET g_prcm_m.prcmmodid = ""
      LET g_prcm_m.prcmmoddt = ""
      LET g_prcm_m.prcmstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt565_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prcmdocno = '", g_prcm_m.prcmdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt565.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt565_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prcmdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt565.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt565_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aprt565.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt565_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prcmdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt565.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt565_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aprt565.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt565_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prcm_m.prcmdocno
   LET g_pk_array[1].column = 'prcmdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aprt565.show" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt565_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prcm_m_t.* = g_prcm_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt565_b_fill() #單身填充
      CALL aprt565_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prcm_m.prcmownid_desc = cl_get_username(g_prcm_m.prcmownid)
      #LET g_prcm_m.prcmowndp_desc = cl_get_deptname(g_prcm_m.prcmowndp)
      #LET g_prcm_m.prcmcrtid_desc = cl_get_username(g_prcm_m.prcmcrtid)
      #LET g_prcm_m.prcmcrtdp_desc = cl_get_deptname(g_prcm_m.prcmcrtdp)
      #LET g_prcm_m.prcmmodid_desc = cl_get_username(g_prcm_m.prcmmodid)
      #LET g_prcm_m.prcmcnfid_desc = cl_get_deptname(g_prcm_m.prcmcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt565_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prcm_m.prcmsite,g_prcm_m.prcmsite_desc,g_prcm_m.prcmdocdt,g_prcm_m.prcmdocno,g_prcm_m.prcm001, 
       g_prcm_m.prcm001_desc,g_prcm_m.prcm002,g_prcm_m.prcm002_desc,g_prcm_m.prcm005,g_prcm_m.prcm003, 
       g_prcm_m.prcm003_desc,g_prcm_m.prcm004,g_prcm_m.prcm004_desc,g_prcm_m.prcmunit,g_prcm_m.prcmstus, 
       g_prcm_m.prcmownid,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtid_desc,g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid, 
       g_prcm_m.prcmmodid_desc,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid,g_prcm_m.prcmcnfid_desc,g_prcm_m.prcmcnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prcm_m.prcmstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prcn_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt565_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt565.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt565.state_change" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt565_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prcm_m.prcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prcm_m.prcmstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prcm_t SET prcmstus = lc_state 
    WHERE prcment = g_enterprise AND prcmdocno = g_prcm_m.prcmdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_prcm_m.prcmstus = lc_state
      DISPLAY BY NAME g_prcm_m.prcmstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aprt565.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt565_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prcmdocno = g_prcm_m.prcmdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aprt565.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt565_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aprt565.ui_dialog" ver="3" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt565_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt565_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt565_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prcmdocno = g_prcmdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt565_fetch('') # reload data
               LET l_ac = 1
               CALL aprt565_ui_detailshow() #Setting the current row 
      
               CALL aprt565_idx_chk()
               #NEXT FIELD prcnseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prcn_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt565_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt565_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt565_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt565_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt565_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt565_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt565_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt565_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt565_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt565_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt565_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt565_idx_chk()
            
         ON ACTION previous
            CALL aprt565_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt565_idx_chk()
            
         ON ACTION jump
            CALL aprt565_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt565_idx_chk()
            
         ON ACTION next
            CALL aprt565_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt565_idx_chk()
            
         ON ACTION last
            CALL aprt565_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt565_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prcnseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt565_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt565_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt565_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt565_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt565_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt565_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt565_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt565_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prcm_m.prcmdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aprt565.ui_headershow" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt565_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prcm_m.prcmdocno = g_browser[g_current_idx].b_prcmdocno   
 
   EXECUTE aprt565_master_referesh USING g_prcm_m.prcmdocno INTO g_prcm_m.prcmsite,g_prcm_m.prcmdocdt, 
       g_prcm_m.prcmdocno,g_prcm_m.prcm001,g_prcm_m.prcm002,g_prcm_m.prcm005,g_prcm_m.prcm003,g_prcm_m.prcm004, 
       g_prcm_m.prcmunit,g_prcm_m.prcmstus,g_prcm_m.prcmownid,g_prcm_m.prcmowndp,g_prcm_m.prcmcrtid, 
       g_prcm_m.prcmcrtdp,g_prcm_m.prcmcrtdt,g_prcm_m.prcmmodid,g_prcm_m.prcmmoddt,g_prcm_m.prcmcnfid, 
       g_prcm_m.prcmcnfdt,g_prcm_m.prcmsite_desc,g_prcm_m.prcm001_desc,g_prcm_m.prcm002_desc,g_prcm_m.prcm003_desc, 
       g_prcm_m.prcm004_desc,g_prcm_m.prcmownid_desc,g_prcm_m.prcmowndp_desc,g_prcm_m.prcmcrtid_desc, 
       g_prcm_m.prcmcrtdp_desc,g_prcm_m.prcmmodid_desc,g_prcm_m.prcmcnfid_desc
   CALL aprt565_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt565.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt565_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt565_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt565.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt565_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prcn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prcn_t 
         SET (prcndocno,
              prcnseq
              ,prcn001,prcn002,prcn004,prcn005,prcn006,prcn007,prcn008,prcn009,prcn010,prcn011,prcn012,prcn013,prcn014,prcn015,prcn016,prcn003,prcnsite,prcnunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prcn_d[g_detail_idx].prcn001,g_prcn_d[g_detail_idx].prcn002,g_prcn_d[g_detail_idx].prcn004, 
                  g_prcn_d[g_detail_idx].prcn005,g_prcn_d[g_detail_idx].prcn006,g_prcn_d[g_detail_idx].prcn007, 
                  g_prcn_d[g_detail_idx].prcn008,g_prcn_d[g_detail_idx].prcn009,g_prcn_d[g_detail_idx].prcn010, 
                  g_prcn_d[g_detail_idx].prcn011,g_prcn_d[g_detail_idx].prcn012,g_prcn_d[g_detail_idx].prcn013, 
                  g_prcn_d[g_detail_idx].prcn014,g_prcn_d[g_detail_idx].prcn015,g_prcn_d[g_detail_idx].prcn016, 
                  g_prcn_d[g_detail_idx].prcn003,g_prcn_d[g_detail_idx].prcnsite,g_prcn_d[g_detail_idx].prcnunit)  

         WHERE prcnent = g_enterprise AND prcndocno = ps_keys_bak[1] AND prcnseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prcn_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prcn_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>