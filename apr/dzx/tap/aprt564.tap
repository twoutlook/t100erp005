<add_points prog="aprt564" std_prog="aprt564" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1.prcl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_21()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl002  #顯示到畫面上
            NEXT FIELD prcl002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " pmaa002 = '2' AND pmaa230 = '2'"
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl003  #顯示到畫面上
            NEXT FIELD prcl003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl004  #顯示到畫面上
            NEXT FIELD prcl004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl005  #顯示到畫面上
            NEXT FIELD prcl005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'G'
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl006  #顯示到畫面上
            NEXT FIELD prcl006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl007  #顯示到畫面上
            NEXT FIELD prcl007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl008  #顯示到畫面上
            NEXT FIELD prcl008                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.prcl009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcl009  #顯示到畫面上
            NEXT FIELD prcl009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcf007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1='2100'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcf007  #顯示到畫面上
            NEXT FIELD prcf007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcf008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1='2101'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcf008  #顯示到畫面上
            NEXT FIELD prcf008                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_prcf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prck001  #顯示到畫面上
            NEXT FIELD prck001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_prcd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prck002  #顯示到畫面上
            NEXT FIELD prck002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prck003  #顯示到畫面上
            NEXT FIELD prck003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prck004  #顯示到畫面上
            NEXT FIELD prck004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckcnfid  #顯示到畫面上
            NEXT FIELD prckcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckcrtdp  #顯示到畫面上
            NEXT FIELD prckcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckcrtid  #顯示到畫面上
            NEXT FIELD prckcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prckdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckdocno  #顯示到畫面上
            NEXT FIELD prckdocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckmodid  #顯示到畫面上
            NEXT FIELD prckmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckowndp  #顯示到畫面上
            NEXT FIELD prckowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prckownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prckownid  #顯示到畫面上
            NEXT FIELD prckownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcksite  #顯示到畫面上
            NEXT FIELD prcksite                     #返回原欄位
    

]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   UPDATE prcl_t set prcl011='',prcl015='1'
    WHERE prclent=g_enterprise
      AND prcldocno=g_prck_m.prckdocno]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   IF g_prck_m.prckstus != 'N' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   END IF]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc('prcf005','6027')
   CALL cl_set_combo_scc('prcf006','6571')
   CALL cl_set_combo_scc('prcl015','6063')]]>
</point>
  <point name="input.a.page1.prcl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  g_prcl_d[l_ac].prcl002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcl_d[l_ac].prcl002 != g_prcl_d_t.prcl002)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcl_d[l_ac].prcl002

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pmaa001_17") THEN
                     LET g_prcl_d[l_ac].prcl002 = g_prcl_d_t.prcl002
                     NEXT FIELD CURRENT
                  END IF 
                  IF g_prcl_d[l_ac].prcl003 IS NOT NULL THEN 
                     LET l_count=0
                     SELECT count(*) INTO l_count
                       FROM pmaa_t
                      WHERE pmaaent=g_enterprise
                        AND pmaa001=g_prcl_d[l_ac].prcl003
                        AND pmaa006=g_prcl_d[l_ac].prcl002
                        AND pmaastus='Y'
                     IF cl_null(l_count) OR l_count=0 THEN
                        CALL cl_err(g_prcl_d[l_ac].prcl002,"apr-00281",1)
                        LET g_prcl_d[l_ac].prcl002 = g_prcl_d_t.prcl002
                        NEXT FIELD CURRENT                        
                     END IF
                  END IF
               END IF
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl002
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl002_desc

]]>
</point>
  <point name="input.a.page1.prcl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_prcl_d[l_ac].prcl003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcl_d[l_ac].prcl003 != g_prcl_d_t.prcl003)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcl_d[l_ac].prcl003

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pmaa001_14") THEN
                     LET g_prcl_d[l_ac].prcl003 = g_prcl_d_t.prcl003
                     NEXT FIELD CURRENT
                  END IF 
                                   
                  IF g_prcl_d[l_ac].prcl002 IS NOT NULL THEN 
                     LET l_count=0
                     SELECT count(*) INTO l_count
                       FROM pmaa_t
                      WHERE pmaaent=g_enterprise
                        AND pmaa001=g_prcl_d[l_ac].prcl003
                        AND pmaa006=g_prcl_d[l_ac].prcl002
                        AND pmaastus='Y'
                     IF cl_null(l_count) OR l_count=0 THEN
                        CALL cl_err(g_prcl_d[l_ac].prcl003,"apr-00281",1)
                        LET g_prcl_d[l_ac].prcl003 = g_prcl_d_t.prcl003
                        NEXT FIELD CURRENT                        
                     END IF
                  ELSE
                     SELECT pmaa006 INTO g_prcl_d[l_ac].prcl002
                       FROM pmaa_t
                      WHERE pmaaent=g_enterprise
                        AND pmaa001=g_prcl_d[l_ac].prcl003
                        AND pmaastus='Y'   
                     DISPLAY g_prcl_d[l_ac].prcl002 TO prcl002                        
                     INITIALIZE g_ref_fields TO NULL
                     LET g_ref_fields[1] = g_prcl_d[l_ac].prcl002
                     CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
                     LET g_prcl_d[l_ac].prcl002_desc = '', g_rtn_fields[1] , ''
                     DISPLAY BY NAME g_prcl_d[l_ac].prcl002_desc                  
                                   
                  END IF           

               END IF
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl003_desc

]]>
</point>
  <point name="input.a.page1.prcl004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  g_prcl_d[l_ac].prcl004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcl_d[l_ac].prcl004 != g_prcl_d_t.prcl004)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcl_d[l_ac].prcl004
                  LET g_chkparam.arg2 = g_prck_m.prcksite

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_dbbc001_1") THEN
                     LET g_prcl_d[l_ac].prcl004 = g_prcl_d_t.prcl004
                     NEXT FIELD CURRENT
                  END IF 
                  SELECT dbbc003,dbbc004,dbbc005 INTO g_prcl_d[l_ac].prcl005,g_prcl_d[l_ac].prcl007,g_prcl_d[l_ac].prcl006
                    FROM dbbc_t
                   WHERE dbbcent=g_enterprise
                     AND dbbc001=g_prcl_d[l_ac].prcl004
                     AND dbbcstus='Y'
                  DISPLAY g_prcl_d[l_ac].prcl005 TO prcl005
                  DISPLAY g_prcl_d[l_ac].prcl006 TO prcl006
                  DISPLAY g_prcl_d[l_ac].prcl007 TO prcl007                  

               END IF
            ELSE
               LET g_prcl_d[l_ac].prcl005=''
               LET g_prcl_d[l_ac].prcl006=''
               LET g_prcl_d[l_ac].prcl007=''
               DISPLAY g_prcl_d[l_ac].prcl005 TO prcl005
               DISPLAY g_prcl_d[l_ac].prcl006 TO prcl006
               DISPLAY g_prcl_d[l_ac].prcl007 TO prcl007 
           
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl004
            CALL ap_ref_array2(g_ref_fields," SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent = '"||g_enterprise||"' AND dbbcl001 = ? AND dbbcl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl004_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_prcl_d[l_ac].prcl004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl005
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl007
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl007_desc            ]]>
</point>
  <point name="input.a.page1.prcl005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl005
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl005_desc

]]>
</point>
  <point name="input.a.page1.prcl006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl006_desc

]]>
</point>
  <point name="input.a.page1.prcl007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl007
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl007_desc

]]>
</point>
  <point name="input.a.page1.prcl008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  g_prcl_d[l_ac].prcl008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prcl_d[l_ac].prcl008 != g_prcl_d_t.prcl008)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcl_d[l_ac].prcl008

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imaa001") THEN
                     LET g_prcl_d[l_ac].prcl008 = g_prcl_d_t.prcl008
                     NEXT FIELD CURRENT
                  END IF
                  
                  SELECT imaa106 INTO g_prcl_d[l_ac].prcl009
                    FROM imaa_t
                   WHERE imaaent=g_enterprise
                     AND imaa001=g_prcl_d[l_ac].prcl008
                  DISPLAY g_prcl_d[l_ac].prcl009 TO prcl009
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_prcl_d[l_ac].prcl009
                  CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_prcl_d[l_ac].prcl009_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_prcl_d[l_ac].prcl009_desc                  
               END IF
            END IF 

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl008
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl008_desc

]]>
</point>
  <point name="input.a.page1.prcl009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl009_desc

]]>
</point>
  <point name="input.a.page1.prcl010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcl_d[l_ac].prcl010) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.prcl012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcl_d[l_ac].prcl012) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.prcl013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcl_d[l_ac].prcl013) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.prcl014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prcl_d[l_ac].prcl014) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.prclseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prck_m.prckdocno IS NOT NULL AND g_prcl_d[g_detail_idx].prclseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prck_m.prckdocno != g_prckdocno_t OR g_prcl_d[g_detail_idx].prclseq != g_prcl_d_t.prclseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcl_t WHERE "||"prclent = '" ||g_enterprise|| "' AND "||"prcldocno = '"||g_prck_m.prckdocno ||"' AND "|| "prclseq = '"||g_prcl_d[g_detail_idx].prclseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.prcf007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prcf007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2100' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prcf007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prcf007_desc

]]>
</point>
  <point name="input.a.prcf008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prcf008
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2101' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prcf008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prcf008_desc

]]>
</point>
  <point name="input.a.prck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prck_m.prck001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prck_m.prck001 != g_prck_m_t.prck001 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prck_m.prck001 
                   LET g_chkparam.arg2 = '2'                   
                   IF NOT cl_chk_exist("v_prcf001_1") THEN
                     LET g_prck_m.prck001 = g_prck_m_t.prck001                  
                     NEXT FIELD CURRENT
                   END IF
                   
                   SELECT prcf002,prcf005,prcf006,prcf007,prcf008,prcf009,prcf010 
                    INTO g_prck_m.prck002,g_prck_m.prcf005,g_prck_m.prcf006,
                         g_prck_m.prcf007,g_prck_m.prcf008,g_prck_m.prcf009,g_prck_m.prcf010
                     FROM prcf_t
                    WHERE prcfent=g_enterprise
                      AND prcf001=g_prck_m.prck001
                   DISPLAY BY NAME g_prck_m.prck002 
                   
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_prck_m.prck002
                   CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                   LET g_prck_m.prck002_desc = '', g_rtn_fields[1] , ''
                   DISPLAY BY NAME g_prck_m.prck002_desc
  
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_prck_m.prcf007
                   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2100' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                   LET g_prck_m.prcf007_desc = '', g_rtn_fields[1] , ''
                   DISPLAY BY NAME g_prck_m.prcf007_desc
                  
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_prck_m.prcf008
                   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2101' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                   LET g_prck_m.prcf008_desc = '', g_rtn_fields[1] , ''
                   DISPLAY BY NAME g_prck_m.prcf008_desc


               END IF
            END IF  

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck001
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prck001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck001_desc

]]>
</point>
  <point name="input.a.prck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prck_m.prck002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prck_m.prck002 != g_prck_m_t.prck002 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prck_m.prck002
                   LET g_chkparam.arg2 = '2'
                   IF NOT cl_chk_exist("v_prcd001_1") THEN
                     LET g_prck_m.prck002 = g_prck_m_t.prck002                  
                     NEXT FIELD CURRENT
                   END IF
                   
               END IF
            END IF   

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck002
            CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prck002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck002_desc

]]>
</point>
  <point name="input.a.prck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prck_m.prck003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prck_m.prck003 != g_prck_m_t.prck003 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_prck_m.prck003              
                   IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_prck_m.prck003 = g_prck_m_t.prck003                  
                     NEXT FIELD CURRENT
                   END IF
                   
               END IF
            END IF 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck003
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prck_m.prck003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck003_desc

]]>
</point>
  <point name="input.a.prck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prck_m.prck004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prck_m.prck004 != g_prck_m_t.prck004 )) THEN 
                  
                  INITIALIZE g_chkparam.* TO NULL		      
                      #設定g_chkparam.*的參數                     
                   LET g_chkparam.arg1 = g_prck_m.prck004  
                   LET g_chkparam.arg2 = g_prck_m.prckdocdt
                   IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_prck_m.prck004 = g_prck_m_t.prck004                  
                     NEXT FIELD CURRENT
                   END IF
                   
               END IF
            END IF 

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prck004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck004_desc

]]>
</point>
  <point name="input.a.prckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_prck_m.prckdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prck_m.prckdocno != g_prckdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prck_t WHERE "||"prckent = '" ||g_enterprise|| "' AND "||"prckdocno = '"||g_prck_m.prckdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_aooi200_chk_slip(g_site,'',g_prck_m.prckdocno,g_prog) THEN
                     LET g_prck_m.prckdocno =  g_prckdocno_t                    
                     NEXT FIELD CURRENT
                  END IF                   
               END IF
            END IF


]]>
</point>
  <point name="input.a.prcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prcksite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prcksite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prcksite_desc

]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DISPLAY BY NAME g_prck_m.prcksite,g_prck_m.prcksite_desc,g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001, 
       g_prck_m.prck001_desc,g_prck_m.prck002,g_prck_m.prck002_desc,g_prck_m.prck005,g_prck_m.prck003, 
       g_prck_m.prck003_desc,g_prck_m.prck004,g_prck_m.prck004_desc,g_prck_m.prckunit,g_prck_m.prckstus, 
       g_prck_m.prcf005,g_prck_m.prcf006,g_prck_m.prcf007,g_prck_m.prcf007_desc,g_prck_m.prcf008,g_prck_m.prcf008_desc, 
       g_prck_m.prcf009,g_prck_m.prcf010,g_prck_m.prckownid,g_prck_m.prckownid_desc,g_prck_m.prckowndp, 
       g_prck_m.prckowndp_desc,g_prck_m.prckcrtid,g_prck_m.prckcrtid_desc,g_prck_m.prckcrtdp,g_prck_m.prckcrtdp_desc, 
       g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmodid_desc,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfid_desc,g_prck_m.prckcnfdt]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(prclseq) INTO g_prcl_d[l_ac].prclseq
              FROM prcl_t
             WHERE prclent= g_enterprise
               AND prcldocno=  g_prck_m.prckdocno
            IF cl_null(g_prcl_d[l_ac].prclseq) THEN
               LET g_prcl_d[l_ac].prclseq=1
            ELSE
               LET  g_prcl_d[l_ac].prclseq=g_prcl_d[l_ac].prclseq+1
            END IF 
            DISPLAY g_prcl_d[l_ac].prclseq TO prclseq]]>
</point>
  <point name="input.c.page1.prcl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcl_d[l_ac].prcl002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_21()                                #呼叫開窗

            LET g_prcl_d[l_ac].prcl002 = g_qryparam.return1              

            DISPLAY g_prcl_d[l_ac].prcl002 TO prcl002              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl002
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl002_desc
            NEXT FIELD prcl002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prcl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcl_d[l_ac].prcl003             #給予default值

            #給予arg
            IF NOT cl_null(g_prcl_d[l_ac].prcl002) THEN
               LET g_qryparam.where = "pmaa006='",g_prcl_d[l_ac].prcl002,"' "
            END IF
            
            CALL q_pmaa001_18()                                #呼叫開窗

            LET g_prcl_d[l_ac].prcl003 = g_qryparam.return1              

            DISPLAY g_prcl_d[l_ac].prcl003 TO prcl003              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl003_desc

            NEXT FIELD prcl003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prcl004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcl_d[l_ac].prcl004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            LET g_qryparam.where = " dbbc002='",g_prck_m.prcksite,"'"
            CALL q_dbbc001()                                #呼叫開窗

            LET g_prcl_d[l_ac].prcl004 = g_qryparam.return1              

            DISPLAY g_prcl_d[l_ac].prcl004 TO prcl004              #
            SELECT dbbc003,dbbc004,dbbc005 INTO g_prcl_d[l_ac].prcl005,g_prcl_d[l_ac].prcl007,g_prcl_d[l_ac].prcl006
              FROM dbbc_t
             WHERE dbbcent=g_enterprise
               AND dbbc001=g_prcl_d[l_ac].prcl004
               AND dbbcstus='Y'
            DISPLAY g_prcl_d[l_ac].prcl005 TO prcl005
            DISPLAY g_prcl_d[l_ac].prcl006 TO prcl006
            DISPLAY g_prcl_d[l_ac].prcl007 TO prcl007   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl004
            CALL ap_ref_array2(g_ref_fields," SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent = '"||g_enterprise||"' AND dbbcl001 = ? AND dbbcl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl004_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_prcl_d[l_ac].prcl004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl005
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl007
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl007_desc              
            
            NEXT FIELD prcl004                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prcl008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcl_d[l_ac].prcl008             #給予default值
            LET g_qryparam.default2 = "" #g_prcl_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_prcl_d[l_ac].imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_prcl_d[l_ac].prcl008 = g_qryparam.return1              
            #LET g_prcl_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_prcl_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_prcl_d[l_ac].prcl008 TO prcl008              #
            #DISPLAY g_prcl_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_prcl_d[l_ac].imaal004 TO imaal004 #規格
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcl_d[l_ac].prcl008
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcl_d[l_ac].prcl008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcl_d[l_ac].prcl008_desc            
            NEXT FIELD prcl008                          #返回原欄位

]]>
</point>
  <point name="input.c.prcf007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prcf007             #給予default值
            LET g_qryparam.default2 = "" #g_prck_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_prck_m.prcf007 = g_qryparam.return1              
            #LET g_prck_m.oocq002 = g_qryparam.return2 
            DISPLAY g_prck_m.prcf007 TO prcf007              #
            #DISPLAY g_prck_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD prcf007                          #返回原欄位

]]>
</point>
  <point name="input.c.prcf008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prcf008             #給予default值
            LET g_qryparam.default2 = "" #g_prck_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_prck_m.prcf008 = g_qryparam.return1              
            #LET g_prck_m.oocq002 = g_qryparam.return2 
            DISPLAY g_prck_m.prcf008 TO prcf008              #
            #DISPLAY g_prck_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD prcf008                          #返回原欄位

]]>
</point>
  <point name="input.c.prck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prck001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2" #

            
            CALL q_prcf001()                                #呼叫開窗

            LET g_prck_m.prck001 = g_qryparam.return1              

            DISPLAY g_prck_m.prck001 TO prck001              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck001
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prck001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck001_desc
            NEXT FIELD prck001                          #返回原欄位

]]>
</point>
  <point name="input.c.prck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prck002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2" #

            
            CALL q_prcd001_1()                                #呼叫開窗

            LET g_prck_m.prck002 = g_qryparam.return1              

            DISPLAY g_prck_m.prck002 TO prck002              #

            NEXT FIELD prck002                          #返回原欄位

]]>
</point>
  <point name="input.c.prck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prck003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_prck_m.prck003 = g_qryparam.return1              

            DISPLAY g_prck_m.prck003 TO prck003              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck003
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prck_m.prck003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck003_desc
            NEXT FIELD prck003                          #返回原欄位

]]>
</point>
  <point name="input.c.prck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prck004             #給予default值

            #給予arg
            LET g_qryparam.arg1 =g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prck_m.prck004 = g_qryparam.return1              

            DISPLAY g_prck_m.prck004 TO prck004              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prck004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prck004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prck004_desc
            NEXT FIELD prck004                          #返回原欄位

]]>
</point>
  <point name="input.c.prckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prck_m.prckdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''            
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise            
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prck_m.prckdocno = g_qryparam.return1              

            DISPLAY g_prck_m.prckdocno TO prckdocno              #

            NEXT FIELD prckdocno                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_prck_m.prckdocno,g_prck_m.prckdocdt,g_prog) RETURNING l_success,g_prck_m.prckdocno
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err(g_prck_m.prckdocno,'apm-00003',1)
                  CONTINUE DIALOG                  
               END IF ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aprt564_set_entry(p_cmd)
            CALL aprt564_set_no_entry(p_cmd)]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_prck_m_t.* = g_prck_m.*
      LET g_prck_m.prcksite=g_site
      LET g_prck_m.prckdocdt=g_today
      LET g_prck_m.prck003=g_user
      LET g_prck_m.prck004=g_dept
      LET g_prck_m.prckstus='N'
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prcksite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prcksite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prcksite_desc


      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prck003
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prck003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prck003_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prck004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prck004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prck004_desc


      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckownid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prckownid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckownid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckowndp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prckowndp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckowndp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckcrtid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prckcrtid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckcrtid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckcrtdp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prckcrtdp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckcrtdp_desc
 ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   IF g_prck_m.prcksite<>g_site THEN
      RETURN
   END IF
]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_prck_m_t.* = g_prck_m.*
      LET g_prck_m.prcksite=g_site
      LET g_prck_m.prckdocdt=g_today
      LET g_prck_m.prck003=g_user
      LET g_prck_m.prck004=g_dept
      LET g_prck_m.prckcnfid = ""
      LET g_prck_m.prckcnfdt = ""      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prcksite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prcksite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prcksite_desc


      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prck003
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prck003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prck003_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prck004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prck004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prck004_desc


      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckownid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prckownid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckownid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckowndp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prckowndp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckowndp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckcrtid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_prck_m.prckcrtid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckcrtid_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_prck_m.prckcrtdp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_prck_m.prckcrtdp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_prck_m.prckcrtdp_desc      ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[

            SELECT prcf005,prcf006,prcf007,prcf008,prcf009,prcf010 
             INTO g_prck_m.prcf005,g_prck_m.prcf006,
                  g_prck_m.prcf007,g_prck_m.prcf008,g_prck_m.prcf009,g_prck_m.prcf010
              FROM prcf_t
             WHERE prcfent=g_enterprise
               AND prcf001=g_prck_m.prck001
            DISPLAY BY NAME g_prck_m.prck002 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prcf007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2100' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prcf007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prcf007_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prck_m.prcf008
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2101' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prck_m.prcf008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prck_m.prcf008_desc

]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_prck_m.prckstus='X' THEN
      RETURN
   END IF ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_success = TRUE
   LET g_prck_m.prckcnfdt=cl_get_current()  
   LET g_prck_m.prckmoddt=cl_get_current()
    CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
         CASE g_prck_m.prckstus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("unconfirmed",FALSE)

            WHEN "X"
               #HIDE OPTION "invalid"
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("invalid,confirmed",FALSE)

         END CASE]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prck_t SET prckcnfid = g_user,prckcnfdt=g_prck_m.prckcnfdt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno              
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN            
         END IF  ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success      LIKE type_t.num5
   DEFINE l_errno        LIKE type_t.chr100]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prck_t SET prckmodid = g_user,prckmoddt=g_prck_m.prckmoddt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno                                
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN    
         END IF]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prck_t SET prckcnfid ='',prckcnfdt='',prckmodid =g_user,prckmoddt=g_prck_m.prckmoddt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno               
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                  
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN            
         END IF   ]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prck_t SET prckcnfid ='',prckcnfdt='',prckmodid=g_user,prckmoddt=g_prck_m.prckmoddt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno               
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                  
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN            
         END IF ]]>
</point>
  <point name="statechange.valid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
               UPDATE prck_t SET prckcnfid = g_user,prckcnfdt=g_prck_m.prckcnfdt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno              
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN            
         END IF    ]]>
</point>
  <point name="statechange.void" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[        CALL s_aprt564_conf_chk(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt564_conf_upd(g_prck_m.prckdocno,lc_state) RETURNING l_success,l_errno 
               UPDATE prck_t SET prckmodid =g_user,prckmoddt=g_prck_m.prckmoddt
                    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno                 
               IF NOT l_success THEN
                  CALL cl_err(g_prck_m.prckdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_prck_m.prckdocno,l_errno,1)
            RETURN            
         END IF  ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prckcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prckcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prckunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prcf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prclsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prclsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prclsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prclunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prclunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prclunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prclsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prclunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aprt564.b_fill" ver="5" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt564_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prcl_d.clear()    #g_prcl_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt564_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prclseq,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007,prcl008,prcl009, 
          prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001,prclunit ,t1.pmaal004 ,t2.pmaal004 , 
          t3.dbbcl003 ,t4.oojdl003 ,t5.ooefl003 ,t6.dbbal003 ,t7.imaal003 ,t8.oocal003 FROM prcl_t", 
             
                  " INNER JOIN prck_t ON prckdocno = prcldocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=prcl002 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=prcl003 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t3 ON t3.dbbclent='"||g_enterprise||"' AND t3.dbbcl001=prcl004 AND t3.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t4 ON t4.oojdlent='"||g_enterprise||"' AND t4.oojdl001=prcl005 AND t4.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prcl006 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t6 ON t6.dbbalent='"||g_enterprise||"' AND t6.dbbal001=prcl007 AND t6.dbbal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t7 ON t7.imaalent='"||g_enterprise||"' AND t7.imaal001=prcl008 AND t7.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent='"||g_enterprise||"' AND t8.oocal001=prcl009 AND t8.oocal002='"||g_dlang||"' ",
 
                  " WHERE prclent=? AND prcldocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prcl_t.prclseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt564_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt564_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prck_m.prckdocno
                                               
      FOREACH b_fill_cs INTO g_prcl_d[l_ac].prclseq,g_prcl_d[l_ac].prcl002,g_prcl_d[l_ac].prcl003,g_prcl_d[l_ac].prcl004, 
          g_prcl_d[l_ac].prcl005,g_prcl_d[l_ac].prcl006,g_prcl_d[l_ac].prcl007,g_prcl_d[l_ac].prcl008, 
          g_prcl_d[l_ac].prcl009,g_prcl_d[l_ac].prcl010,g_prcl_d[l_ac].prcl011,g_prcl_d[l_ac].prcl012, 
          g_prcl_d[l_ac].prcl013,g_prcl_d[l_ac].prcl014,g_prcl_d[l_ac].prcl015,g_prcl_d[l_ac].prclsite, 
          g_prcl_d[l_ac].prcl001,g_prcl_d[l_ac].prclunit,g_prcl_d[l_ac].prcl002_desc,g_prcl_d[l_ac].prcl003_desc, 
          g_prcl_d[l_ac].prcl004_desc,g_prcl_d[l_ac].prcl005_desc,g_prcl_d[l_ac].prcl006_desc,g_prcl_d[l_ac].prcl007_desc, 
          g_prcl_d[l_ac].prcl008_desc,g_prcl_d[l_ac].prcl009_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prcl_d.deleteElement(g_prcl_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt564_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aprt564.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt564_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt564_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt564.browser_fill" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt564_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prck_m.* TO NULL
   CALL g_prcl_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prckdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prckdocno ",
                      " FROM prck_t ",
                      " ",
                      " LEFT JOIN prcl_t ON prclent = prckent AND prckdocno = prcldocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE prckent = '" ||g_enterprise|| "' AND prclent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prck_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prckdocno ",
                      " FROM prck_t ", 
                      "  ",
                      "  ",
                      " WHERE prckent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prck_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prcksite,'',prckdocdt,prckdocno,prck001,'',prck002,'',prck003,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prckstus,prcksite,'',prckdocdt,prckdocno,prck001,'',prck002,'',prck003, 
       '',t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ",
               " FROM prck_t ",
               "  ",
               "  LEFT JOIN prcl_t ON prclent = prckent AND prckdocno = prcldocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcksite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prck001 AND t2.prcfl002='"||g_lang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prck002 AND t3.prcdl002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prck003  ",
 
               " WHERE prckent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prck_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prcksite,g_browser[g_cnt].b_prcksite_desc, 
       g_browser[g_cnt].b_prckdocdt,g_browser[g_cnt].b_prckdocno,g_browser[g_cnt].b_prck001,g_browser[g_cnt].b_prck001_desc, 
       g_browser[g_cnt].b_prck002,g_browser[g_cnt].b_prck002_desc,g_browser[g_cnt].b_prck003,g_browser[g_cnt].b_prck003_desc, 
       g_browser[g_cnt].b_prcksite_desc,g_browser[g_cnt].b_prck001_desc,g_browser[g_cnt].b_prck002_desc, 
       g_browser[g_cnt].b_prck003_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprt564.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt564_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prckdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt564_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt564.construct" ver="8" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt564_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prck_m.* TO NULL
   CALL g_prcl_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prcksite,prckdocdt,prckdocno,prck001,prck002,prck005,prck003,prck004, 
          prckunit,prckstus,prcf005,prcf006,prcf007,prcf008,prcf009,prcf010,prckownid,prckowndp,prckcrtid, 
          prckcrtdp,prckcrtdt,prckmodid,prckmoddt,prckcnfid,prckcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prckcrtdt>>----
         AFTER FIELD prckcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prckmoddt>>----
         AFTER FIELD prckmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prckcnfdt>>----
         AFTER FIELD prckcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prckpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prcksite
         ON ACTION controlp INFIELD prcksite
            #add-point:ON ACTION controlp INFIELD prcksite
            {<point name="construct.c.prcksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcksite
            #add-point:BEFORE FIELD prcksite
            {<point name="construct.b.prcksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcksite
            
            #add-point:AFTER FIELD prcksite
            {<point name="construct.a.prcksite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckdocdt
            #add-point:BEFORE FIELD prckdocdt
            {<point name="construct.b.prckdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckdocdt
            
            #add-point:AFTER FIELD prckdocdt
            {<point name="construct.a.prckdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckdocdt
         ON ACTION controlp INFIELD prckdocdt
            #add-point:ON ACTION controlp INFIELD prckdocdt
            {<point name="construct.c.prckdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prckdocno
         ON ACTION controlp INFIELD prckdocno
            #add-point:ON ACTION controlp INFIELD prckdocno
            {<point name="construct.c.prckdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckdocno
            #add-point:BEFORE FIELD prckdocno
            {<point name="construct.b.prckdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckdocno
            
            #add-point:AFTER FIELD prckdocno
            {<point name="construct.a.prckdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prck001
         ON ACTION controlp INFIELD prck001
            #add-point:ON ACTION controlp INFIELD prck001
            {<point name="construct.c.prck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck001
            #add-point:BEFORE FIELD prck001
            {<point name="construct.b.prck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck001
            
            #add-point:AFTER FIELD prck001
            {<point name="construct.a.prck001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prck002
         ON ACTION controlp INFIELD prck002
            #add-point:ON ACTION controlp INFIELD prck002
            {<point name="construct.c.prck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck002
            #add-point:BEFORE FIELD prck002
            {<point name="construct.b.prck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck002
            
            #add-point:AFTER FIELD prck002
            {<point name="construct.a.prck002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck005
            #add-point:BEFORE FIELD prck005
            {<point name="construct.b.prck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck005
            
            #add-point:AFTER FIELD prck005
            {<point name="construct.a.prck005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prck005
         ON ACTION controlp INFIELD prck005
            #add-point:ON ACTION controlp INFIELD prck005
            {<point name="construct.c.prck005" />}
            #END add-point
 
         #Ctrlp:construct.c.prck003
         ON ACTION controlp INFIELD prck003
            #add-point:ON ACTION controlp INFIELD prck003
            {<point name="construct.c.prck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck003
            #add-point:BEFORE FIELD prck003
            {<point name="construct.b.prck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck003
            
            #add-point:AFTER FIELD prck003
            {<point name="construct.a.prck003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prck004
         ON ACTION controlp INFIELD prck004
            #add-point:ON ACTION controlp INFIELD prck004
            {<point name="construct.c.prck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck004
            #add-point:BEFORE FIELD prck004
            {<point name="construct.b.prck004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck004
            
            #add-point:AFTER FIELD prck004
            {<point name="construct.a.prck004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckunit
            #add-point:BEFORE FIELD prckunit
            {<point name="construct.b.prckunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckunit
            
            #add-point:AFTER FIELD prckunit
            {<point name="construct.a.prckunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckunit
         ON ACTION controlp INFIELD prckunit
            #add-point:ON ACTION controlp INFIELD prckunit
            {<point name="construct.c.prckunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckstus
            #add-point:BEFORE FIELD prckstus
            {<point name="construct.b.prckstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckstus
            
            #add-point:AFTER FIELD prckstus
            {<point name="construct.a.prckstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckstus
         ON ACTION controlp INFIELD prckstus
            #add-point:ON ACTION controlp INFIELD prckstus
            {<point name="construct.c.prckstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf005
            #add-point:BEFORE FIELD prcf005
            {<point name="construct.b.prcf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf005
            
            #add-point:AFTER FIELD prcf005
            {<point name="construct.a.prcf005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcf005
         ON ACTION controlp INFIELD prcf005
            #add-point:ON ACTION controlp INFIELD prcf005
            {<point name="construct.c.prcf005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf006
            #add-point:BEFORE FIELD prcf006
            {<point name="construct.b.prcf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf006
            
            #add-point:AFTER FIELD prcf006
            {<point name="construct.a.prcf006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcf006
         ON ACTION controlp INFIELD prcf006
            #add-point:ON ACTION controlp INFIELD prcf006
            {<point name="construct.c.prcf006" />}
            #END add-point
 
         #Ctrlp:construct.c.prcf007
         ON ACTION controlp INFIELD prcf007
            #add-point:ON ACTION controlp INFIELD prcf007
            {<point name="construct.c.prcf007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf007
            #add-point:BEFORE FIELD prcf007
            {<point name="construct.b.prcf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf007
            
            #add-point:AFTER FIELD prcf007
            {<point name="construct.a.prcf007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcf008
         ON ACTION controlp INFIELD prcf008
            #add-point:ON ACTION controlp INFIELD prcf008
            {<point name="construct.c.prcf008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf008
            #add-point:BEFORE FIELD prcf008
            {<point name="construct.b.prcf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf008
            
            #add-point:AFTER FIELD prcf008
            {<point name="construct.a.prcf008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf009
            #add-point:BEFORE FIELD prcf009
            {<point name="construct.b.prcf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf009
            
            #add-point:AFTER FIELD prcf009
            {<point name="construct.a.prcf009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcf009
         ON ACTION controlp INFIELD prcf009
            #add-point:ON ACTION controlp INFIELD prcf009
            {<point name="construct.c.prcf009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf010
            #add-point:BEFORE FIELD prcf010
            {<point name="construct.b.prcf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf010
            
            #add-point:AFTER FIELD prcf010
            {<point name="construct.a.prcf010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcf010
         ON ACTION controlp INFIELD prcf010
            #add-point:ON ACTION controlp INFIELD prcf010
            {<point name="construct.c.prcf010" />}
            #END add-point
 
         #Ctrlp:construct.c.prckownid
         ON ACTION controlp INFIELD prckownid
            #add-point:ON ACTION controlp INFIELD prckownid
            {<point name="construct.c.prckownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckownid
            #add-point:BEFORE FIELD prckownid
            {<point name="construct.b.prckownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckownid
            
            #add-point:AFTER FIELD prckownid
            {<point name="construct.a.prckownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckowndp
         ON ACTION controlp INFIELD prckowndp
            #add-point:ON ACTION controlp INFIELD prckowndp
            {<point name="construct.c.prckowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckowndp
            #add-point:BEFORE FIELD prckowndp
            {<point name="construct.b.prckowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckowndp
            
            #add-point:AFTER FIELD prckowndp
            {<point name="construct.a.prckowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckcrtid
         ON ACTION controlp INFIELD prckcrtid
            #add-point:ON ACTION controlp INFIELD prckcrtid
            {<point name="construct.c.prckcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckcrtid
            #add-point:BEFORE FIELD prckcrtid
            {<point name="construct.b.prckcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckcrtid
            
            #add-point:AFTER FIELD prckcrtid
            {<point name="construct.a.prckcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prckcrtdp
         ON ACTION controlp INFIELD prckcrtdp
            #add-point:ON ACTION controlp INFIELD prckcrtdp
            {<point name="construct.c.prckcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckcrtdp
            #add-point:BEFORE FIELD prckcrtdp
            {<point name="construct.b.prckcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckcrtdp
            
            #add-point:AFTER FIELD prckcrtdp
            {<point name="construct.a.prckcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckcrtdt
            #add-point:BEFORE FIELD prckcrtdt
            {<point name="construct.b.prckcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prckmodid
         ON ACTION controlp INFIELD prckmodid
            #add-point:ON ACTION controlp INFIELD prckmodid
            {<point name="construct.c.prckmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckmodid
            #add-point:BEFORE FIELD prckmodid
            {<point name="construct.b.prckmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckmodid
            
            #add-point:AFTER FIELD prckmodid
            {<point name="construct.a.prckmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckmoddt
            #add-point:BEFORE FIELD prckmoddt
            {<point name="construct.b.prckmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prckcnfid
         ON ACTION controlp INFIELD prckcnfid
            #add-point:ON ACTION controlp INFIELD prckcnfid
            {<point name="construct.c.prckcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckcnfid
            #add-point:BEFORE FIELD prckcnfid
            {<point name="construct.b.prckcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckcnfid
            
            #add-point:AFTER FIELD prckcnfid
            {<point name="construct.a.prckcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckcnfdt
            #add-point:BEFORE FIELD prckcnfdt
            {<point name="construct.b.prckcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prclseq,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007,prcl008,prcl009, 
          prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001,prclunit
           FROM s_detail1[1].prclseq,s_detail1[1].prcl002,s_detail1[1].prcl003,s_detail1[1].prcl004, 
               s_detail1[1].prcl005,s_detail1[1].prcl006,s_detail1[1].prcl007,s_detail1[1].prcl008,s_detail1[1].prcl009, 
               s_detail1[1].prcl010,s_detail1[1].prcl011,s_detail1[1].prcl012,s_detail1[1].prcl013,s_detail1[1].prcl014, 
               s_detail1[1].prcl015,s_detail1[1].prclsite,s_detail1[1].prcl001,s_detail1[1].prclunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt564.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt564_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prckdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt564.delete" ver="4" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt564_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prck_m.prckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
   
   
 
   CALL aprt564_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt564_cl USING g_enterprise,g_prck_m.prckdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt564_cl:", STATUS, 1)
      CLOSE aprt564_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prck_m.prckdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt564_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prckdocno_t = g_prck_m.prckdocno
 
 
      DELETE FROM prck_t
       WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prck_m.prckdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prcl_t
       WHERE prclent = g_enterprise AND prcldocno = g_prck_m.prckdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prcl_d.clear() 
 
     
      #CALL aprt564_ui_browser_refresh()  
      CALL aprt564_ui_headershow()  
      CALL aprt564_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt564_browser_fill("")
         CALL aprt564_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt564_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt564_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prck_m.prckdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aprt564.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt564_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prcl_t
       WHERE prclent = g_enterprise AND
         prcldocno = ps_keys_bak[1] AND prclseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt564.description" ver="48" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000048
#+ 
#+ Filename...: aprt564
#+ Description: 促銷產品數量申請作業
#+ Creator....: 01251(2014/05/05)
#+ Modifier...: 01251(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aprt564.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt564_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prcl_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt564_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt564_detail AS ",
                "SELECT * FROM prcl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt564_detail SELECT * FROM prcl_t 
                                         WHERE prclent = g_enterprise AND prcldocno = g_prckdocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt564_detail 
      #更新key欄位
      SET prcldocno = g_prck_m.prckdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prcl_t SELECT * FROM aprt564_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt564_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prckdocno_t = g_prck_m.prckdocno
 
   
   DROP TABLE aprt564_detail
   
END FUNCTION
]]>
</section>
  <section id="aprt564.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt564_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt564.fetch" ver="3" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt564_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prck_m.prckdocno = g_browser[g_current_idx].b_prckdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prck_t",SQLCA.sqlcode,1)
      INITIALIZE g_prck_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt564_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aprt564.fill_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt564_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aprt564.filter" ver="2" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt564_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prcksite,prckdocdt,prckdocno,prck001,prck002,prck003
                          FROM s_browse[1].b_prcksite,s_browse[1].b_prckdocdt,s_browse[1].b_prckdocno, 
                              s_browse[1].b_prck001,s_browse[1].b_prck002,s_browse[1].b_prck003
 
         BEFORE CONSTRUCT
               DISPLAY aprt564_filter_parser('prcksite') TO s_browse[1].b_prcksite
            DISPLAY aprt564_filter_parser('prckdocdt') TO s_browse[1].b_prckdocdt
            DISPLAY aprt564_filter_parser('prckdocno') TO s_browse[1].b_prckdocno
            DISPLAY aprt564_filter_parser('prck001') TO s_browse[1].b_prck001
            DISPLAY aprt564_filter_parser('prck002') TO s_browse[1].b_prck002
            DISPLAY aprt564_filter_parser('prck003') TO s_browse[1].b_prck003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt564_filter_show('prcksite')
   CALL aprt564_filter_show('prckdocdt')
   CALL aprt564_filter_show('prckdocno')
   CALL aprt564_filter_show('prck001')
   CALL aprt564_filter_show('prck002')
   CALL aprt564_filter_show('prck003')
 
END FUNCTION
]]>
</section>
  <section id="aprt564.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt564_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aprt564.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt564_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt564_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aprt564.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prck_m        RECORD
       prcksite LIKE prck_t.prcksite, 
   prcksite_desc LIKE type_t.chr80, 
   prckdocdt LIKE prck_t.prckdocdt, 
   prckdocno LIKE prck_t.prckdocno, 
   prck001 LIKE prck_t.prck001, 
   prck001_desc LIKE type_t.chr80, 
   prck002 LIKE prck_t.prck002, 
   prck002_desc LIKE type_t.chr80, 
   prck005 LIKE prck_t.prck005, 
   prck003 LIKE prck_t.prck003, 
   prck003_desc LIKE type_t.chr80, 
   prck004 LIKE prck_t.prck004, 
   prck004_desc LIKE type_t.chr80, 
   prckunit LIKE prck_t.prckunit, 
   prckstus LIKE prck_t.prckstus, 
   prcf005 LIKE type_t.chr10, 
   prcf006 LIKE type_t.chr10, 
   prcf007 LIKE type_t.chr10, 
   prcf007_desc LIKE type_t.chr80, 
   prcf008 LIKE type_t.chr10, 
   prcf008_desc LIKE type_t.chr80, 
   prcf009 LIKE type_t.dat, 
   prcf010 LIKE type_t.dat, 
   prckownid LIKE prck_t.prckownid, 
   prckownid_desc LIKE type_t.chr80, 
   prckowndp LIKE prck_t.prckowndp, 
   prckowndp_desc LIKE type_t.chr80, 
   prckcrtid LIKE prck_t.prckcrtid, 
   prckcrtid_desc LIKE type_t.chr80, 
   prckcrtdp LIKE prck_t.prckcrtdp, 
   prckcrtdp_desc LIKE type_t.chr80, 
   prckcrtdt DATETIME YEAR TO SECOND, 
   prckmodid LIKE prck_t.prckmodid, 
   prckmodid_desc LIKE type_t.chr80, 
   prckmoddt DATETIME YEAR TO SECOND, 
   prckcnfid LIKE prck_t.prckcnfid, 
   prckcnfid_desc LIKE type_t.chr80, 
   prckcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prcl_d        RECORD
       prclseq LIKE prcl_t.prclseq, 
   prcl002 LIKE prcl_t.prcl002, 
   prcl002_desc LIKE type_t.chr500, 
   prcl003 LIKE prcl_t.prcl003, 
   prcl003_desc LIKE type_t.chr500, 
   prcl004 LIKE prcl_t.prcl004, 
   prcl004_desc LIKE type_t.chr500, 
   prcl005 LIKE prcl_t.prcl005, 
   prcl005_desc LIKE type_t.chr500, 
   prcl006 LIKE prcl_t.prcl006, 
   prcl006_desc LIKE type_t.chr500, 
   prcl007 LIKE prcl_t.prcl007, 
   prcl007_desc LIKE type_t.chr500, 
   prcl008 LIKE prcl_t.prcl008, 
   prcl008_desc LIKE type_t.chr500, 
   prcl009 LIKE prcl_t.prcl009, 
   prcl009_desc LIKE type_t.chr500, 
   prcl010 LIKE prcl_t.prcl010, 
   prcl011 LIKE prcl_t.prcl011, 
   prcl012 LIKE prcl_t.prcl012, 
   prcl013 LIKE prcl_t.prcl013, 
   prcl014 LIKE prcl_t.prcl014, 
   prcl015 LIKE prcl_t.prcl015, 
   prclsite LIKE prcl_t.prclsite, 
   prcl001 LIKE prcl_t.prcl001, 
   prclunit LIKE prcl_t.prclunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prck_m          type_g_prck_m
DEFINE g_prck_m_t        type_g_prck_m
 
   DEFINE g_prckdocno_t LIKE prck_t.prckdocno
 
 
DEFINE g_prcl_d          DYNAMIC ARRAY OF type_g_prcl_d
DEFINE g_prcl_d_t        type_g_prcl_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcksite LIKE prck_t.prcksite,
   b_prcksite_desc LIKE type_t.chr80,
      b_prckdocdt LIKE prck_t.prckdocdt,
      b_prckdocno LIKE prck_t.prckdocno,
      b_prck001 LIKE prck_t.prck001,
   b_prck001_desc LIKE type_t.chr80,
      b_prck002 LIKE prck_t.prck002,
   b_prck002_desc LIKE type_t.chr80,
      b_prck003 LIKE prck_t.prck003,
   b_prck003_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcksite LIKE prck_t.prcksite,
   b_prcksite_desc LIKE type_t.chr80,
      b_prckdocdt LIKE prck_t.prckdocdt,
      b_prckdocno LIKE prck_t.prckdocno,
      b_prck001 LIKE prck_t.prck001,
   b_prck001_desc LIKE type_t.chr80,
      b_prck002 LIKE prck_t.prck002,
   b_prck002_desc LIKE type_t.chr80,
      b_prck003 LIKE prck_t.prck003,
   b_prck003_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aprt564.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt564_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prcl_d.getLength() THEN
         LET g_detail_idx = g_prcl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prcl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prcl_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt564.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt564_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prckstus','13','N,X,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt564_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aprt564.input" ver="6" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt564_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prclseq,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007,prcl008,prcl009, 
       prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001,prclunit FROM prcl_t WHERE prclent=?  
       AND prcldocno=? AND prclseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt564_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt564_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt564_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prck_m.prcksite,g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002, 
       g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004,g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prcf005, 
       g_prck_m.prcf006,g_prck_m.prcf007,g_prck_m.prcf008,g_prck_m.prcf009,g_prck_m.prcf010
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aprt564.input.body" ver="8" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prcl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prcl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt564_b_fill()
            LET g_rec_b = g_prcl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt564_cl USING g_enterprise,g_prck_m.prckdocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt564_cl:", STATUS, 1)
               CLOSE aprt564_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prcl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prcl_d[l_ac].prclseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prcl_d_t.* = g_prcl_d[l_ac].*  #BACKUP
               CALL aprt564_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt564_set_no_entry_b(l_cmd)
               IF NOT aprt564_lock_b("prcl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt564_bcl INTO g_prcl_d[l_ac].prclseq,g_prcl_d[l_ac].prcl002,g_prcl_d[l_ac].prcl003, 
                      g_prcl_d[l_ac].prcl004,g_prcl_d[l_ac].prcl005,g_prcl_d[l_ac].prcl006,g_prcl_d[l_ac].prcl007, 
                      g_prcl_d[l_ac].prcl008,g_prcl_d[l_ac].prcl009,g_prcl_d[l_ac].prcl010,g_prcl_d[l_ac].prcl011, 
                      g_prcl_d[l_ac].prcl012,g_prcl_d[l_ac].prcl013,g_prcl_d[l_ac].prcl014,g_prcl_d[l_ac].prcl015, 
                      g_prcl_d[l_ac].prclsite,g_prcl_d[l_ac].prcl001,g_prcl_d[l_ac].prclunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prcl_d_t.prclseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt564_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prcl_d[l_ac].* TO NULL 
                  LET g_prcl_d[l_ac].prcl015 = "1"
 
            LET g_prcl_d_t.* = g_prcl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt564_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt564_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prcl_d[li_reproduce_target].* = g_prcl_d[li_reproduce].*
 
               LET g_prcl_d[li_reproduce_target].prclseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prcl_t 
             WHERE prclent = g_enterprise AND prcldocno = g_prck_m.prckdocno
 
               AND prclseq = g_prcl_d[l_ac].prclseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prck_m.prckdocno
               LET gs_keys[2] = g_prcl_d[g_detail_idx].prclseq
               CALL aprt564_insert_b('prcl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt564_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prcl_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prcl_d.deleteElement(l_ac)
               NEXT FIELD prclseq
            END IF
         
            IF g_prcl_d[l_ac].prclseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prcl_t
                WHERE prclent = g_enterprise AND prcldocno = g_prck_m.prckdocno AND
 
                      prclseq = g_prcl_d_t.prclseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt564_bcl
               LET l_count = g_prcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prck_m.prckdocno
               LET gs_keys[2] = g_prcl_d[g_detail_idx].prclseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt564_delete_b('prcl_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD prclseq
            #add-point:BEFORE FIELD prclseq
            {<point name="input.b.page1.prclseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prclseq
            
            #add-point:AFTER FIELD prclseq
            {<point name="input.a.page1.prclseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prclseq
            #add-point:ON CHANGE prclseq
            {<point name="input.g.page1.prclseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl002
            
            #add-point:AFTER FIELD prcl002
            {<point name="input.a.page1.prcl002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl002
            #add-point:BEFORE FIELD prcl002
            {<point name="input.b.page1.prcl002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl002
            #add-point:ON CHANGE prcl002
            {<point name="input.g.page1.prcl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl003
            
            #add-point:AFTER FIELD prcl003
            {<point name="input.a.page1.prcl003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl003
            #add-point:BEFORE FIELD prcl003
            {<point name="input.b.page1.prcl003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl003
            #add-point:ON CHANGE prcl003
            {<point name="input.g.page1.prcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl004
            
            #add-point:AFTER FIELD prcl004
            {<point name="input.a.page1.prcl004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl004
            #add-point:BEFORE FIELD prcl004
            {<point name="input.b.page1.prcl004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl004
            #add-point:ON CHANGE prcl004
            {<point name="input.g.page1.prcl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl005
            
            #add-point:AFTER FIELD prcl005
            {<point name="input.a.page1.prcl005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl005
            #add-point:BEFORE FIELD prcl005
            {<point name="input.b.page1.prcl005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl005
            #add-point:ON CHANGE prcl005
            {<point name="input.g.page1.prcl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl006
            
            #add-point:AFTER FIELD prcl006
            {<point name="input.a.page1.prcl006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl006
            #add-point:BEFORE FIELD prcl006
            {<point name="input.b.page1.prcl006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl006
            #add-point:ON CHANGE prcl006
            {<point name="input.g.page1.prcl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl007
            
            #add-point:AFTER FIELD prcl007
            {<point name="input.a.page1.prcl007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl007
            #add-point:BEFORE FIELD prcl007
            {<point name="input.b.page1.prcl007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl007
            #add-point:ON CHANGE prcl007
            {<point name="input.g.page1.prcl007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl008
            
            #add-point:AFTER FIELD prcl008
            {<point name="input.a.page1.prcl008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl008
            #add-point:BEFORE FIELD prcl008
            {<point name="input.b.page1.prcl008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl008
            #add-point:ON CHANGE prcl008
            {<point name="input.g.page1.prcl008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl009
            
            #add-point:AFTER FIELD prcl009
            {<point name="input.a.page1.prcl009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl009
            #add-point:BEFORE FIELD prcl009
            {<point name="input.b.page1.prcl009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl009
            #add-point:ON CHANGE prcl009
            {<point name="input.g.page1.prcl009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcl_d[l_ac].prcl010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prcl010
            END IF
 
 
            #add-point:AFTER FIELD prcl010
            {<point name="input.a.page1.prcl010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl010
            #add-point:BEFORE FIELD prcl010
            {<point name="input.b.page1.prcl010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl010
            #add-point:ON CHANGE prcl010
            {<point name="input.g.page1.prcl010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl011
            #add-point:BEFORE FIELD prcl011
            {<point name="input.b.page1.prcl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl011
            
            #add-point:AFTER FIELD prcl011
            {<point name="input.a.page1.prcl011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcl011
            #add-point:ON CHANGE prcl011
            {<point name="input.g.page1.prcl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcl_d[l_ac].prcl012,"0.000","1","100.000","1","azz-00087",1) THEN 

               NEXT FIELD prcl012
            END IF
 
 
            #add-point:AFTER FIELD prcl012
            {<point name="input.a.page1.prcl012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl012
            #add-point:BEFORE FIELD prcl012
            {<point name="input.b.page1.prcl012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl012
            #add-point:ON CHANGE prcl012
            {<point name="input.g.page1.prcl012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl013
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcl_d[l_ac].prcl013,"0.000","1","100.000","1","azz-00087",1) THEN 

               NEXT FIELD prcl013
            END IF
 
 
            #add-point:AFTER FIELD prcl013
            {<point name="input.a.page1.prcl013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl013
            #add-point:BEFORE FIELD prcl013
            {<point name="input.b.page1.prcl013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl013
            #add-point:ON CHANGE prcl013
            {<point name="input.g.page1.prcl013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl014
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcl_d[l_ac].prcl014,"0.000","1","100.000","1","azz-00087",1) THEN 

               NEXT FIELD prcl014
            END IF
 
 
            #add-point:AFTER FIELD prcl014
            {<point name="input.a.page1.prcl014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl014
            #add-point:BEFORE FIELD prcl014
            {<point name="input.b.page1.prcl014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcl014
            #add-point:ON CHANGE prcl014
            {<point name="input.g.page1.prcl014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl015
            #add-point:BEFORE FIELD prcl015
            {<point name="input.b.page1.prcl015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl015
            
            #add-point:AFTER FIELD prcl015
            {<point name="input.a.page1.prcl015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcl015
            #add-point:ON CHANGE prcl015
            {<point name="input.g.page1.prcl015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prclsite
            #add-point:BEFORE FIELD prclsite
            {<point name="input.b.page1.prclsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prclsite
            
            #add-point:AFTER FIELD prclsite
            {<point name="input.a.page1.prclsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prclsite
            #add-point:ON CHANGE prclsite
            {<point name="input.g.page1.prclsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcl001
            #add-point:BEFORE FIELD prcl001
            {<point name="input.b.page1.prcl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcl001
            
            #add-point:AFTER FIELD prcl001
            {<point name="input.a.page1.prcl001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcl001
            #add-point:ON CHANGE prcl001
            {<point name="input.g.page1.prcl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prclunit
            #add-point:BEFORE FIELD prclunit
            {<point name="input.b.page1.prclunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prclunit
            
            #add-point:AFTER FIELD prclunit
            {<point name="input.a.page1.prclunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prclunit
            #add-point:ON CHANGE prclunit
            {<point name="input.g.page1.prclunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prclseq
         ON ACTION controlp INFIELD prclseq
            #add-point:ON ACTION controlp INFIELD prclseq
            {<point name="input.c.page1.prclseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl002
         ON ACTION controlp INFIELD prcl002
            #add-point:ON ACTION controlp INFIELD prcl002
            {<point name="input.c.page1.prcl002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl003
         ON ACTION controlp INFIELD prcl003
            #add-point:ON ACTION controlp INFIELD prcl003
            {<point name="input.c.page1.prcl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl004
         ON ACTION controlp INFIELD prcl004
            #add-point:ON ACTION controlp INFIELD prcl004
            {<point name="input.c.page1.prcl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl005
         ON ACTION controlp INFIELD prcl005
            #add-point:ON ACTION controlp INFIELD prcl005
            {<point name="input.c.page1.prcl005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl006
         ON ACTION controlp INFIELD prcl006
            #add-point:ON ACTION controlp INFIELD prcl006
            {<point name="input.c.page1.prcl006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl007
         ON ACTION controlp INFIELD prcl007
            #add-point:ON ACTION controlp INFIELD prcl007
            {<point name="input.c.page1.prcl007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl008
         ON ACTION controlp INFIELD prcl008
            #add-point:ON ACTION controlp INFIELD prcl008
            {<point name="input.c.page1.prcl008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl009
         ON ACTION controlp INFIELD prcl009
            #add-point:ON ACTION controlp INFIELD prcl009
            {<point name="input.c.page1.prcl009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl010
         ON ACTION controlp INFIELD prcl010
            #add-point:ON ACTION controlp INFIELD prcl010
            {<point name="input.c.page1.prcl010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl011
         ON ACTION controlp INFIELD prcl011
            #add-point:ON ACTION controlp INFIELD prcl011
            {<point name="input.c.page1.prcl011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl012
         ON ACTION controlp INFIELD prcl012
            #add-point:ON ACTION controlp INFIELD prcl012
            {<point name="input.c.page1.prcl012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl013
         ON ACTION controlp INFIELD prcl013
            #add-point:ON ACTION controlp INFIELD prcl013
            {<point name="input.c.page1.prcl013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl014
         ON ACTION controlp INFIELD prcl014
            #add-point:ON ACTION controlp INFIELD prcl014
            {<point name="input.c.page1.prcl014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl015
         ON ACTION controlp INFIELD prcl015
            #add-point:ON ACTION controlp INFIELD prcl015
            {<point name="input.c.page1.prcl015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prclsite
         ON ACTION controlp INFIELD prclsite
            #add-point:ON ACTION controlp INFIELD prclsite
            {<point name="input.c.page1.prclsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcl001
         ON ACTION controlp INFIELD prcl001
            #add-point:ON ACTION controlp INFIELD prcl001
            {<point name="input.c.page1.prcl001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prclunit
         ON ACTION controlp INFIELD prclunit
            #add-point:ON ACTION controlp INFIELD prclunit
            {<point name="input.c.page1.prclunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prcl_d[l_ac].* = g_prcl_d_t.*
               CLOSE aprt564_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prcl_d[l_ac].prclseq,-263,1)
               LET g_prcl_d[l_ac].* = g_prcl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prcl_t SET (prcldocno,prclseq,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007, 
                   prcl008,prcl009,prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001, 
                   prclunit) = (g_prck_m.prckdocno,g_prcl_d[l_ac].prclseq,g_prcl_d[l_ac].prcl002,g_prcl_d[l_ac].prcl003, 
                   g_prcl_d[l_ac].prcl004,g_prcl_d[l_ac].prcl005,g_prcl_d[l_ac].prcl006,g_prcl_d[l_ac].prcl007, 
                   g_prcl_d[l_ac].prcl008,g_prcl_d[l_ac].prcl009,g_prcl_d[l_ac].prcl010,g_prcl_d[l_ac].prcl011, 
                   g_prcl_d[l_ac].prcl012,g_prcl_d[l_ac].prcl013,g_prcl_d[l_ac].prcl014,g_prcl_d[l_ac].prcl015, 
                   g_prcl_d[l_ac].prclsite,g_prcl_d[l_ac].prcl001,g_prcl_d[l_ac].prclunit)
                WHERE prclent = g_enterprise AND prcldocno = g_prck_m.prckdocno 
 
                  AND prclseq = g_prcl_d_t.prclseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prcl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prcl_d[l_ac].* = g_prcl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prcl_t",SQLCA.sqlcode,1)
                     LET g_prcl_d[l_ac].* = g_prcl_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prck_m.prckdocno
               LET gs_keys_bak[1] = g_prckdocno_t
               LET gs_keys[2] = g_prcl_d[g_detail_idx].prclseq
               LET gs_keys_bak[2] = g_prcl_d_t.prclseq
               CALL aprt564_update_b('prcl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prck_m),util.JSON.stringify(g_prcl_d_t)
               LET g_log2 = util.JSON.stringify(g_prck_m),util.JSON.stringify(g_prcl_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt564_unlock_b("prcl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prcl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prcl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aprt564.input.head" ver="5" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_prck_m.prcksite,g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002, 
          g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004,g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prcf005, 
          g_prck_m.prcf006,g_prck_m.prcf007,g_prck_m.prcf008,g_prck_m.prcf009,g_prck_m.prcf010 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prcksite
            
            #add-point:AFTER FIELD prcksite
            {<point name="input.a.prcksite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcksite
            #add-point:BEFORE FIELD prcksite
            {<point name="input.b.prcksite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcksite
            #add-point:ON CHANGE prcksite
            {<point name="input.g.prcksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckdocdt
            #add-point:BEFORE FIELD prckdocdt
            {<point name="input.b.prckdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckdocdt
            
            #add-point:AFTER FIELD prckdocdt
            {<point name="input.a.prckdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prckdocdt
            #add-point:ON CHANGE prckdocdt
            {<point name="input.g.prckdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckdocno
            #add-point:BEFORE FIELD prckdocno
            {<point name="input.b.prckdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckdocno
            
            #add-point:AFTER FIELD prckdocno
            {<point name="input.a.prckdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prckdocno
            #add-point:ON CHANGE prckdocno
            {<point name="input.g.prckdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck001
            
            #add-point:AFTER FIELD prck001
            {<point name="input.a.prck001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck001
            #add-point:BEFORE FIELD prck001
            {<point name="input.b.prck001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prck001
            #add-point:ON CHANGE prck001
            {<point name="input.g.prck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck002
            
            #add-point:AFTER FIELD prck002
            {<point name="input.a.prck002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck002
            #add-point:BEFORE FIELD prck002
            {<point name="input.b.prck002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prck002
            #add-point:ON CHANGE prck002
            {<point name="input.g.prck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck005
            #add-point:BEFORE FIELD prck005
            {<point name="input.b.prck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck005
            
            #add-point:AFTER FIELD prck005
            {<point name="input.a.prck005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prck005
            #add-point:ON CHANGE prck005
            {<point name="input.g.prck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck003
            
            #add-point:AFTER FIELD prck003
            {<point name="input.a.prck003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck003
            #add-point:BEFORE FIELD prck003
            {<point name="input.b.prck003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prck003
            #add-point:ON CHANGE prck003
            {<point name="input.g.prck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prck004
            
            #add-point:AFTER FIELD prck004
            {<point name="input.a.prck004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prck004
            #add-point:BEFORE FIELD prck004
            {<point name="input.b.prck004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prck004
            #add-point:ON CHANGE prck004
            {<point name="input.g.prck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckunit
            #add-point:BEFORE FIELD prckunit
            {<point name="input.b.prckunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckunit
            
            #add-point:AFTER FIELD prckunit
            {<point name="input.a.prckunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prckunit
            #add-point:ON CHANGE prckunit
            {<point name="input.g.prckunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prckstus
            #add-point:BEFORE FIELD prckstus
            {<point name="input.b.prckstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prckstus
            
            #add-point:AFTER FIELD prckstus
            {<point name="input.a.prckstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prckstus
            #add-point:ON CHANGE prckstus
            {<point name="input.g.prckstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf005
            #add-point:BEFORE FIELD prcf005
            {<point name="input.b.prcf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf005
            
            #add-point:AFTER FIELD prcf005
            {<point name="input.a.prcf005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcf005
            #add-point:ON CHANGE prcf005
            {<point name="input.g.prcf005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf006
            #add-point:BEFORE FIELD prcf006
            {<point name="input.b.prcf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf006
            
            #add-point:AFTER FIELD prcf006
            {<point name="input.a.prcf006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcf006
            #add-point:ON CHANGE prcf006
            {<point name="input.g.prcf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf007
            
            #add-point:AFTER FIELD prcf007
            {<point name="input.a.prcf007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf007
            #add-point:BEFORE FIELD prcf007
            {<point name="input.b.prcf007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcf007
            #add-point:ON CHANGE prcf007
            {<point name="input.g.prcf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf008
            
            #add-point:AFTER FIELD prcf008
            {<point name="input.a.prcf008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf008
            #add-point:BEFORE FIELD prcf008
            {<point name="input.b.prcf008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcf008
            #add-point:ON CHANGE prcf008
            {<point name="input.g.prcf008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf009
            #add-point:BEFORE FIELD prcf009
            {<point name="input.b.prcf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf009
            
            #add-point:AFTER FIELD prcf009
            {<point name="input.a.prcf009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcf009
            #add-point:ON CHANGE prcf009
            {<point name="input.g.prcf009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcf010
            #add-point:BEFORE FIELD prcf010
            {<point name="input.b.prcf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcf010
            
            #add-point:AFTER FIELD prcf010
            {<point name="input.a.prcf010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcf010
            #add-point:ON CHANGE prcf010
            {<point name="input.g.prcf010" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prcksite
         ON ACTION controlp INFIELD prcksite
            #add-point:ON ACTION controlp INFIELD prcksite
            {<point name="input.c.prcksite" />}
            #END add-point
 
         #Ctrlp:input.c.prckdocdt
         ON ACTION controlp INFIELD prckdocdt
            #add-point:ON ACTION controlp INFIELD prckdocdt
            {<point name="input.c.prckdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prckdocno
         ON ACTION controlp INFIELD prckdocno
            #add-point:ON ACTION controlp INFIELD prckdocno
            {<point name="input.c.prckdocno" />}
            #END add-point
 
         #Ctrlp:input.c.prck001
         ON ACTION controlp INFIELD prck001
            #add-point:ON ACTION controlp INFIELD prck001
            {<point name="input.c.prck001" />}
            #END add-point
 
         #Ctrlp:input.c.prck002
         ON ACTION controlp INFIELD prck002
            #add-point:ON ACTION controlp INFIELD prck002
            {<point name="input.c.prck002" />}
            #END add-point
 
         #Ctrlp:input.c.prck005
         ON ACTION controlp INFIELD prck005
            #add-point:ON ACTION controlp INFIELD prck005
            {<point name="input.c.prck005" />}
            #END add-point
 
         #Ctrlp:input.c.prck003
         ON ACTION controlp INFIELD prck003
            #add-point:ON ACTION controlp INFIELD prck003
            {<point name="input.c.prck003" />}
            #END add-point
 
         #Ctrlp:input.c.prck004
         ON ACTION controlp INFIELD prck004
            #add-point:ON ACTION controlp INFIELD prck004
            {<point name="input.c.prck004" />}
            #END add-point
 
         #Ctrlp:input.c.prckunit
         ON ACTION controlp INFIELD prckunit
            #add-point:ON ACTION controlp INFIELD prckunit
            {<point name="input.c.prckunit" />}
            #END add-point
 
         #Ctrlp:input.c.prckstus
         ON ACTION controlp INFIELD prckstus
            #add-point:ON ACTION controlp INFIELD prckstus
            {<point name="input.c.prckstus" />}
            #END add-point
 
         #Ctrlp:input.c.prcf005
         ON ACTION controlp INFIELD prcf005
            #add-point:ON ACTION controlp INFIELD prcf005
            {<point name="input.c.prcf005" />}
            #END add-point
 
         #Ctrlp:input.c.prcf006
         ON ACTION controlp INFIELD prcf006
            #add-point:ON ACTION controlp INFIELD prcf006
            {<point name="input.c.prcf006" />}
            #END add-point
 
         #Ctrlp:input.c.prcf007
         ON ACTION controlp INFIELD prcf007
            #add-point:ON ACTION controlp INFIELD prcf007
            {<point name="input.c.prcf007" />}
            #END add-point
 
         #Ctrlp:input.c.prcf008
         ON ACTION controlp INFIELD prcf008
            #add-point:ON ACTION controlp INFIELD prcf008
            {<point name="input.c.prcf008" />}
            #END add-point
 
         #Ctrlp:input.c.prcf009
         ON ACTION controlp INFIELD prcf009
            #add-point:ON ACTION controlp INFIELD prcf009
            {<point name="input.c.prcf009" />}
            #END add-point
 
         #Ctrlp:input.c.prcf010
         ON ACTION controlp INFIELD prcf010
            #add-point:ON ACTION controlp INFIELD prcf010
            {<point name="input.c.prcf010" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prck_m.prckdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prck_t (prckent,prcksite,prckdocdt,prckdocno,prck001,prck002,prck005,prck003, 
                   prck004,prckunit,prckstus,prckownid,prckowndp,prckcrtid,prckcrtdp,prckcrtdt,prckcnfid, 
                   prckcnfdt)
               VALUES (g_enterprise,g_prck_m.prcksite,g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001, 
                   g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004,g_prck_m.prckunit, 
                   g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid,g_prck_m.prckcrtdp, 
                   g_prck_m.prckcrtdt,g_prck_m.prckcnfid,g_prck_m.prckcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prck_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt564_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prck_t SET (prcksite,prckdocdt,prckdocno,prck001,prck002,prck005,prck003,prck004, 
                   prckunit,prckstus,prckownid,prckowndp,prckcrtid,prckcrtdp,prckcrtdt,prckcnfid,prckcnfdt) = (g_prck_m.prcksite, 
                   g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005, 
                   g_prck_m.prck003,g_prck_m.prck004,g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid, 
                   g_prck_m.prckowndp,g_prck_m.prckcrtid,g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckcnfid, 
                   g_prck_m.prckcnfdt)
                WHERE prckent = g_enterprise AND prckdocno = g_prckdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prck_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prck_m_t)
               LET g_log2 = util.JSON.stringify(g_prck_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prckdocno_t = g_prck_m.prckdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aprt564.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prckdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prclseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aprt564.insert" ver="6" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt564_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prcl_d.clear()   
 
 
   INITIALIZE g_prck_m.* LIKE prck_t.*             #DEFAULT 設定
   
   LET g_prckdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prck_m.prckownid = g_user
      LET g_prck_m.prckowndp = g_dept
      LET g_prck_m.prckcrtid = g_user
      LET g_prck_m.prckcrtdp = g_dept 
      LET g_prck_m.prckcrtdt = cl_get_current()
      LET g_prck_m.prckmodid = ""
      LET g_prck_m.prckmoddt = ""
      LET g_prck_m.prckstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt564_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prck_m.* = g_prck_m_t.*
         CALL aprt564_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prcl_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prckdocno_t = g_prck_m.prckdocno
 
   
   LET g_wc = g_wc,  
              " OR ( prckent = '" ||g_enterprise|| "' AND",
              " prckdocno = '", g_prck_m.prckdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt564_cl
   
END FUNCTION
]]>
</section>
  <section id="aprt564.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt564_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prcl_t
                  (prclent,
                   prcldocno,
                   prclseq
                   ,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007,prcl008,prcl009,prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001,prclunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prcl_d[g_detail_idx].prcl002,g_prcl_d[g_detail_idx].prcl003,g_prcl_d[g_detail_idx].prcl004, 
                       g_prcl_d[g_detail_idx].prcl005,g_prcl_d[g_detail_idx].prcl006,g_prcl_d[g_detail_idx].prcl007, 
                       g_prcl_d[g_detail_idx].prcl008,g_prcl_d[g_detail_idx].prcl009,g_prcl_d[g_detail_idx].prcl010, 
                       g_prcl_d[g_detail_idx].prcl011,g_prcl_d[g_detail_idx].prcl012,g_prcl_d[g_detail_idx].prcl013, 
                       g_prcl_d[g_detail_idx].prcl014,g_prcl_d[g_detail_idx].prcl015,g_prcl_d[g_detail_idx].prclsite, 
                       g_prcl_d[g_detail_idx].prcl001,g_prcl_d[g_detail_idx].prclunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aprt564.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt564_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt564_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prcl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt564_bcl USING g_enterprise,
                                       g_prck_m.prckdocno,g_prcl_d[g_detail_idx].prclseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt564_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt564.main" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prcksite,'',prckdocdt,prckdocno,prck001,'',prck002,'',prck005,prck003, 
       '',prck004,'',prckunit,prckstus,'','','','','','','','',prckownid,'',prckowndp,'',prckcrtid,'', 
       prckcrtdp,'',prckcrtdt,prckmodid,'',prckmoddt,prckcnfid,'',prckcnfdt", 
                      " FROM prck_t",
                      " WHERE prckent= ? AND prckdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt564_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prcksite,prckdocdt,prckdocno,prck001,prck002,prck005,prck003,prck004, 
       prckunit,prckstus,prckownid,prckowndp,prckcrtid,prckcrtdp,prckcrtdt,prckmodid,prckmoddt,prckcnfid, 
       prckcnfdt,t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 , 
       t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011",
               " FROM prck_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcksite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prck001 AND t2.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prck002 AND t3.prcdl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prck003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prck004 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prckownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prckowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prckcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prckcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prckmodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=prckcnfid  ",
 
               " WHERE prckent = '" ||g_enterprise|| "' AND prckdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt564_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt564 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt564_init()   
 
      #進入選單 Menu (="N")
      CALL aprt564_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt564
      
   END IF 
   
   CLOSE aprt564_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aprt564.modify" ver="4" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt564_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prck_m.prckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
 
   ERROR ""
  
   LET g_prckdocno_t = g_prck_m.prckdocno
 
   CALL s_transaction_begin()
   
   OPEN aprt564_cl USING g_enterprise,g_prck_m.prckdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt564_cl:", STATUS, 1)
      CLOSE aprt564_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prck_m.prckdocno,SQLCA.sqlcode,0)
      CLOSE aprt564_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt564_show()
   WHILE TRUE
      LET g_prckdocno_t = g_prck_m.prckdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prck_m.prckmodid = g_user 
LET g_prck_m.prckmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt564_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prck_m.* = g_prck_m_t.*
         CALL aprt564_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prck_t SET (prckmodid,prckmoddt) = (g_prck_m.prckmodid,g_prck_m.prckmoddt)
       WHERE prckent = g_enterprise AND prckdocno = g_prckdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prck_m.prckdocno != g_prckdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prcl_t SET prcldocno = g_prck_m.prckdocno
 
          WHERE prclent = g_enterprise AND prcldocno = g_prckdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prcl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prck_m.prckdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt564_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prck_m.prckdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aprt564.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt564.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aprt564.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt564_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prcl_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt564_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt564_browser_fill("")
      CALL aprt564_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt564_filter_show('prcksite')
   CALL aprt564_filter_show('prckdocdt')
   CALL aprt564_filter_show('prckdocno')
   CALL aprt564_filter_show('prck001')
   CALL aprt564_filter_show('prck002')
   CALL aprt564_filter_show('prck003')
   CALL aprt564_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt564_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt564.reproduce" ver="5" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt564_reproduce()
   DEFINE l_newno     LIKE prck_t.prckdocno 
   DEFINE l_oldno     LIKE prck_t.prckdocno 
 
   DEFINE l_master    RECORD LIKE prck_t.*
   DEFINE l_detail    RECORD LIKE prcl_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prck_m.prckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prckdocno_t = g_prck_m.prckdocno
 
    
   LET g_prck_m.prckdocno = ""
 
    
   CALL aprt564_set_entry('a')
   CALL aprt564_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prck_m.prckownid = g_user
      LET g_prck_m.prckowndp = g_dept
      LET g_prck_m.prckcrtid = g_user
      LET g_prck_m.prckcrtdp = g_dept 
      LET g_prck_m.prckcrtdt = cl_get_current()
      LET g_prck_m.prckmodid = ""
      LET g_prck_m.prckmoddt = ""
      LET g_prck_m.prckstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt564_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prckdocno = '", g_prck_m.prckdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt564.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt564_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prckdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt564.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt564_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aprt564.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt564_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prckdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt564.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt564_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aprt564.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt564_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prck_m.prckdocno
   LET g_pk_array[1].column = 'prckdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aprt564.show" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt564_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prck_m_t.* = g_prck_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt564_b_fill() #單身填充
      CALL aprt564_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prck_m.prckownid_desc = cl_get_username(g_prck_m.prckownid)
      #LET g_prck_m.prckowndp_desc = cl_get_deptname(g_prck_m.prckowndp)
      #LET g_prck_m.prckcrtid_desc = cl_get_username(g_prck_m.prckcrtid)
      #LET g_prck_m.prckcrtdp_desc = cl_get_deptname(g_prck_m.prckcrtdp)
      #LET g_prck_m.prckmodid_desc = cl_get_username(g_prck_m.prckmodid)
      #LET g_prck_m.prckcnfid_desc = cl_get_deptname(g_prck_m.prckcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt564_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prck_m.prcksite,g_prck_m.prcksite_desc,g_prck_m.prckdocdt,g_prck_m.prckdocno,g_prck_m.prck001, 
       g_prck_m.prck001_desc,g_prck_m.prck002,g_prck_m.prck002_desc,g_prck_m.prck005,g_prck_m.prck003, 
       g_prck_m.prck003_desc,g_prck_m.prck004,g_prck_m.prck004_desc,g_prck_m.prckunit,g_prck_m.prckstus, 
       g_prck_m.prcf005,g_prck_m.prcf006,g_prck_m.prcf007,g_prck_m.prcf007_desc,g_prck_m.prcf008,g_prck_m.prcf008_desc, 
       g_prck_m.prcf009,g_prck_m.prcf010,g_prck_m.prckownid,g_prck_m.prckownid_desc,g_prck_m.prckowndp, 
       g_prck_m.prckowndp_desc,g_prck_m.prckcrtid,g_prck_m.prckcrtid_desc,g_prck_m.prckcrtdp,g_prck_m.prckcrtdp_desc, 
       g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmodid_desc,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfid_desc,g_prck_m.prckcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prck_m.prckstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prcl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt564_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt564.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt564.state_change" ver="2" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt564_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prck_m.prckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prck_m.prckstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prck_t SET prckstus = lc_state 
    WHERE prckent = g_enterprise AND prckdocno = g_prck_m.prckdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_prck_m.prckstus = lc_state
      DISPLAY BY NAME g_prck_m.prckstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aprt564.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt564_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prckdocno = g_prck_m.prckdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aprt564.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt564_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aprt564.ui_dialog" ver="5" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt564_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt564_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt564_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prckdocno = g_prckdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt564_fetch('') # reload data
               LET l_ac = 1
               CALL aprt564_ui_detailshow() #Setting the current row 
      
               CALL aprt564_idx_chk()
               #NEXT FIELD prclseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prcl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt564_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt564_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt564_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt564_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt564_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt564_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt564_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt564_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt564_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt564_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt564_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt564_idx_chk()
            
         ON ACTION previous
            CALL aprt564_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt564_idx_chk()
            
         ON ACTION jump
            CALL aprt564_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt564_idx_chk()
            
         ON ACTION next
            CALL aprt564_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt564_idx_chk()
            
         ON ACTION last
            CALL aprt564_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt564_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prclseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt564_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt564_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt564_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt564_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aprt564_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt564_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt564_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt564_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt564_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prck_m.prckdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aprt564.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt564_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prck_m.prckdocno = g_browser[g_current_idx].b_prckdocno   
 
   EXECUTE aprt564_master_referesh USING g_prck_m.prckdocno INTO g_prck_m.prcksite,g_prck_m.prckdocdt, 
       g_prck_m.prckdocno,g_prck_m.prck001,g_prck_m.prck002,g_prck_m.prck005,g_prck_m.prck003,g_prck_m.prck004, 
       g_prck_m.prckunit,g_prck_m.prckstus,g_prck_m.prckownid,g_prck_m.prckowndp,g_prck_m.prckcrtid, 
       g_prck_m.prckcrtdp,g_prck_m.prckcrtdt,g_prck_m.prckmodid,g_prck_m.prckmoddt,g_prck_m.prckcnfid, 
       g_prck_m.prckcnfdt,g_prck_m.prcksite_desc,g_prck_m.prck001_desc,g_prck_m.prck002_desc,g_prck_m.prck003_desc, 
       g_prck_m.prck004_desc,g_prck_m.prckownid_desc,g_prck_m.prckowndp_desc,g_prck_m.prckcrtid_desc, 
       g_prck_m.prckcrtdp_desc,g_prck_m.prckmodid_desc,g_prck_m.prckcnfid_desc
   CALL aprt564_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt564.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt564_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt564_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt564.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt564_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prcl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prcl_t 
         SET (prcldocno,
              prclseq
              ,prcl002,prcl003,prcl004,prcl005,prcl006,prcl007,prcl008,prcl009,prcl010,prcl011,prcl012,prcl013,prcl014,prcl015,prclsite,prcl001,prclunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prcl_d[g_detail_idx].prcl002,g_prcl_d[g_detail_idx].prcl003,g_prcl_d[g_detail_idx].prcl004, 
                  g_prcl_d[g_detail_idx].prcl005,g_prcl_d[g_detail_idx].prcl006,g_prcl_d[g_detail_idx].prcl007, 
                  g_prcl_d[g_detail_idx].prcl008,g_prcl_d[g_detail_idx].prcl009,g_prcl_d[g_detail_idx].prcl010, 
                  g_prcl_d[g_detail_idx].prcl011,g_prcl_d[g_detail_idx].prcl012,g_prcl_d[g_detail_idx].prcl013, 
                  g_prcl_d[g_detail_idx].prcl014,g_prcl_d[g_detail_idx].prcl015,g_prcl_d[g_detail_idx].prclsite, 
                  g_prcl_d[g_detail_idx].prcl001,g_prcl_d[g_detail_idx].prclunit) 
         WHERE prclent = g_enterprise AND prcldocno = ps_keys_bak[1] AND prclseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prcl_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prcl_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>