<add_points prog="aprt101" std_prog="aprt101" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1.imaa009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上

            NEXT FIELD imaa009                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.imaa105" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa105  #顯示到畫面上

            NEXT FIELD imaa105                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbc001  #顯示到畫面上

            NEXT FIELD prbc001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbc002  #顯示到畫面上

            NEXT FIELD prbc002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbcunit  #顯示到畫面上

            NEXT FIELD prbcunit                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbb002  #顯示到畫面上

            NEXT FIELD prbb002                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prba002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbb003  #顯示到畫面上

            NEXT FIELD prbb003                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbb006  #顯示到畫面上

            NEXT FIELD prbb006                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbcnfid  #顯示到畫面上

            NEXT FIELD prbbcnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbcrtdp  #顯示到畫面上

            NEXT FIELD prbbcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbcrtid  #顯示到畫面上

            NEXT FIELD prbbcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prbbdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbdocno  #顯示到畫面上

            NEXT FIELD prbbdocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbmodid  #顯示到畫面上

            NEXT FIELD prbbmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbowndp  #顯示到畫面上

            NEXT FIELD prbbowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbbownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbownid  #顯示到畫面上

            NEXT FIELD prbbownid                     #返回原欄位

]]>
</point>
  <point name="input.a.page1.imaa009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbc_d[l_ac].imaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbc_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbc_d[l_ac].imaa009_desc
]]>
</point>
  <point name="input.a.page1.imaa105" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbc_d[l_ac].imaa105
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbc_d[l_ac].imaa105_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbc_d[l_ac].imaa105_desc
]]>
</point>
  <point name="input.a.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                             CALL aprt101_null_prbc001()
            IF NOT cl_null(g_prbc_d[l_ac].prbc001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbc_d[l_ac].prbc001 != g_prbc_d_t.prbc001 OR g_prbc_d_t.prbc001 IS NULL )) THEN
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#               
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_prbc_d[l_ac].prbc001
#                  LET g_chkparam.arg2 = g_prbb_m.prbb002 
#                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_rtdx001_1") THEN
#                  ELSE
#                     #檢查失敗時後續處理
#                     LET g_prbc_d[l_ac].prbc001 = g_prbc_d_t.prbc001
#                     CALL aprt101_prbc0011_ref()
#                     NEXT FIELD CURRENT
#                  END IF
                  CALL aprt101_chk_prbc001(g_prbc_d[l_ac].prbc001)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbc_d[l_ac].prbc001,g_errno,1)
                     LET g_prbc_d[l_ac].prbc001 = g_prbc_d_t.prbc001
                     NEXT FIELD prbc001
                  END IF
                  CALL aprt101_unique_prbc001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbc_d[l_ac].prbc001,g_errno,1)
                     LET g_prbc_d[l_ac].prbc001 = g_prbc_d_t.prbc001
                     CALL aprt101_prbc0011_ref()
                     NEXT FIELD prbc001
                  END IF
                  CALL aprt101_chk_prbc0012()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbc_d[l_ac].prbc001,g_errno,1)
                     LET g_prbc_d[l_ac].prbc001 = g_prbc_d_t.prbc001
                     CALL aprt101_prbc0011_ref()
                     NEXT FIELD prbc001
                  END IF
                  IF cl_null(g_prbc_d[l_ac].prbc002 ) THEN
                     CALL aprt101_prbc001_ref()
                  END IF   
               END IF 
            END IF   
            CALL aprt101_prbc0011_ref()
]]>
</point>
  <point name="input.a.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            IF NOT cl_null(g_prbc_d[l_ac].prbc002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbc_d[l_ac].prbc002 != g_prbc_d_t.prbc002 OR g_prbc_d_t.prbc002 IS NULL )) THEN
                  CALL aprt101_prbc002()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbc_d[l_ac].prbc002,g_errno,1)
                     LET g_prbc_d[l_ac].prbc002 = g_prbc_d_t.prbc002
                     NEXT FIELD prbc002
                  END IF 
                  IF cl_null( g_prbc_d[l_ac].prbc001) THEN
                     CALL aprt101_prbc002_ref()
                     CALL aprt101_unique_prbc001()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_prbc_d[l_ac].prbc002,g_errno,1)
                        LET g_prbc_d[l_ac].prbc002 = g_prbc_d_t.prbc002
                        LET g_prbc_d[l_ac].prbc001 = NULL
                        NEXT FIELD prbc002
                     END IF
                     CALL aprt101_prbc0011_ref()
                  END IF
                  CALL aprt101_chk_prbc0012()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbc_d[l_ac].prbc002,g_errno,1)
                     LET g_prbc_d[l_ac].prbc002 = g_prbc_d_t.prbc002
                     NEXT FIELD prbc002
                  END IF
               END IF 
            END IF   
            CALL aprt101_prbc0011_ref()]]>
</point>
  <point name="input.a.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    IF NOT cl_null(g_prbc_d[l_ac].prbcseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_prbb_m.prbbdocno IS NOT NULL AND g_prbc_d[g_detail_idx].prbcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prbb_m.prbbdocno != g_prbbdocno_t OR g_prbc_d[g_detail_idx].prbcseq != g_prbc_d_t.prbcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbc_t WHERE "||"prbcent = '" ||g_enterprise|| "' AND "||"prbcdocno = '"||g_prbb_m.prbbdocno ||"' AND "|| "prbcseq = '"||g_prbc_d[g_detail_idx].prbcseq ||"'",'std-00004',0) THEN 
                     LET g_prbc_d[l_ac].prbcseq = g_prbc_d_t.prbcseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                            IF NOT cl_null(g_prbc_d[l_ac].prbcunit) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbc_d[l_ac].prbcunit

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
</point>
  <point name="input.a.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    LET g_prbb_m.prbb002_desc = null
            DISPLAY BY NAME g_prbb_m.prbb002_desc
            IF NOT cl_null(g_prbb_m.prbb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbb_m.prbb002 != g_prbb_m_t.prbb002 or g_prbb_m_t.prbb002 is null )) THEN 
                  IF NOT cl_null(g_prbb_m.prbb002) THEN 
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prbb_m.prbb002
                     LET g_chkparam.arg2 = '2'
                     LET g_chkparam.arg3 = g_site
                     LET g_chkparam.arg4 = '2'
                     LET g_chkparam.arg5 = 'F'
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooed004_2") THEN

                     ELSE
                       #檢查失敗時後續處理
                        LET g_prbb_m.prbb002 = g_prbb_m_t.prbb002
                        CALL aprt101_prbb002_ref()
                        NEXT FIELD prbb002
                     END IF
           
                  END IF
                  IF NOT cl_null(g_prbb_m.prbb003) THEN 
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prbb_m.prbb003
                     LET g_chkparam.arg2 = g_prbb_m.prbb002
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_prba002") THEN

                     ELSE
                       #檢查失敗時後續處理
                        LET g_prbb_m.prbb002 = g_prbb_m_t.prbb002
                        CALL aprt101_prbb002_ref()
                        NEXT FIELD prbb002
                     END IF
           
                  END IF
               END IF
            END IF 
            CALL aprt101_prbb002_ref()
]]>
</point>
  <point name="input.a.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        LET g_prbb_m.prbb003_desc = null
            DISPLAY BY NAME g_prbb_m.prbb003_desc
            IF NOT cl_null(g_prbb_m.prbb003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbb_m.prbb003
               LET g_chkparam.arg2 = g_prbb_m.prbb002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_prba002") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbb_m.prbb003 = g_prbb_m_t.prbb003
                  CALL aprt101_prbb003_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF
            CALL aprt101_prbb003_ref()            
]]>
</point>
  <point name="input.a.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        LET g_prbb_m.prbb006_desc = null
            DISPLAY BY NAME g_prbb_m.prbb006_desc
            IF NOT cl_null(g_prbb_m.prbb006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL 
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbb_m.prbb006
   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbb_m.prbb006 = g_prbb_m_t.prbb006
                  CALL aprt101_prbb006_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aprt101_prbb006_ref()
            
]]>
</point>
  <point name="input.a.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a05產生
            IF  NOT cl_null(g_prbb_m.prbbdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbb_m.prbbdocno != g_prbbdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbb_t WHERE "||"prbbent = '" ||g_enterprise|| "' AND "||"prbbdocno = '"||g_prbb_m.prbbdocno ||"'",'std-00004',0) THEN 
                     LET g_prbb_m.prbbdocno = g_prbb_m_t.prbbdocno
                     NEXT FIELD CURRENT
                  END IF
#                  CALL aprt101_chk_prbbdocno()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_prbb_m.prbbdocno,g_errno,1)
#                     LET g_prbb_m.prbbdocno = g_prbb_m_t.prbbdocno
#                     NEXT FIELD prbbdocno
#                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prbb_m.prbbdocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_prbb_m.prbbdocno = g_prbb_m_t.prbbdocno
                     NEXT FIELD prbbdocno
                  END IF
               END IF
            END IF
]]>
</point>
  <point name="input.a.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    LET g_prbb_m.prbbunit_desc = null
            DISPLAY BY NAME g_prbb_m.prbbunit_desc
            IF NOT cl_null(g_prbb_m.prbbunit) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbb_m.prbbunit
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbb_m.prbbunit = g_prbb_m_t.prbbunit
                  CALL aprt101_prbbunit_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aprt101_prbbunit_ref()
]]>
</point>
  <point name="input.c.page1.imaa009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbc_d[l_ac].imaa009             #給予default值

            #給予arg

            CALL q_rtax001()                                #呼叫開窗

            LET g_prbc_d[l_ac].imaa009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbc_d[l_ac].imaa009 TO imaa009              #顯示到畫面上

            NEXT FIELD imaa009                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.imaa105" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbc_d[l_ac].imaa105             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_prbc_d[l_ac].imaa105 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbc_d[l_ac].imaa105 TO imaa105              #顯示到畫面上

            NEXT FIELD imaa105                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            IF l_cmd = 'u' THEN
               LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

               LET g_qryparam.default1 = g_prbc_d[l_ac].prbc001             #給予default值

               #給予arg
               LET g_qryparam.arg1= g_prbb_m.prbb002

               CALL q_rtdx001_3()                                #呼叫開窗

               LET g_prbc_d[l_ac].prbc001 = g_qryparam.return1              #將開窗取得的值回傳到變數
               IF cl_null(g_prbc_d[l_ac].prbc002) THEN
                  CALL aprt101_prbc001_ref()
               END IF   
               CALL aprt101_prbc0011_ref()
               DISPLAY g_prbc_d[l_ac].prbc001 TO prbc001              #顯示到畫面上

               NEXT FIELD prbc001                          #返回原欄位
            ELSE
               LET g_qryparam.state= 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_prbc_d[l_ac].prbc001             #給予default值
               LET g_qryparam.arg1= g_prbb_m.prbb002
               LET g_prbc_d[l_ac].prbcsite = g_prbb_m.prbbsite
               LET g_prbc_d[l_ac].prbcunit = g_prbb_m.prbbunit
               LET g_errno=null
               CALL q_rtdx001_3()
               LET tok = base.StringTokenizer.createExt(g_qryparam.return1,"|",'',TRUE)
                  LET l_detail_cnt = g_prbc_d.getLength()
                  LET l_ac_t = l_ac
                  LET l_count = 0
                  LET l_max=0
                  SELECT max(prbcseq) INTO l_max FROM prbc_t WHERE prbcdocno = g_prbb_m.prbbdocno
                     AND prbcent = g_enterprise
                  LET l_max = l_max+1
                  IF cl_null(l_max) THEN
                     LET l_max = 1
                  END IF 
                  WHILE tok.hasMoreTokens()
                     LET l_prbc001 = tok.nextToken()
                     IF cl_null(l_prbc001) THEN
                        CONTINUE WHILE
                     END IF
                     CALL aprt101_chk_prbc001(l_prbc001)
                     IF NOT cl_null(g_errno) THEN
                        CONTINUE WHILE
                     END IF
                     IF l_cmd='a' OR
                      (l_cmd='u' AND l_prbc001!=g_prbc_d_t.prbc001) THEN
                         SELECT COUNT(*) INTO l_count1 FROM prbc_t
                          WHERE prbcent= g_enterprise AND prbc001 = l_prbc001
                            AND prbcdocno = g_prbb_m.prbbdocno
                        IF l_count1>0 THEN
                           CONTINUE WHILE
                        END IF
                     END IF
                     IF l_cmd='u' AND l_prbc001=g_prbc_d_t.prbc001 THEN
                        CONTINUE WHILE
                     END IF
                     LET l_count = l_count + 1                                        
                     IF l_count > 1 THEN
                        LET l_ac = l_detail_cnt + l_count - 1
                        LET g_prbc_d[l_ac].prbc001 = l_prbc001
                        LET g_prbc_d[l_ac].prbcseq = l_max
                        LET l_prbc002 = NULL
                        
                        IF cl_null(l_prbc002) THEN
                           SELECT rtdx002 INTO l_prbc002 FROM rtdx_t WHERE rtdxent = g_enterprise
                              AND rtdx001 = l_prbc001 AND rtdxsite = g_prbb_m.prbb002 AND rownum=1
                        END IF
                        INSERT INTO prbc_t(prbcent,prbcdocno,prbcseq,prbc001,prbc002,prbcsite,prbcunit)
                        VALUES(g_enterprise,g_prbb_m.prbbdocno,l_max,l_prbc001,l_prbc002,g_prbb_m.prbbsite,g_prbb_m.prbbunit)
                        IF SQLCA.sqlcode THEN                       
                           LET l_count = l_count - 1 
                        ELSE
                           CALL aprt101_prbc001_ref()
                           CALL aprt101_prbc0011_ref()
                           let l_max=l_max+1
                        END IF
                     ELSE
                        LET g_prbc_d[l_ac].prbc001 = l_prbc001
                        DISPLAY BY NAME g_prbc_d[l_ac].prbc001
                        LET g_prbc_d_t.prbc001=g_prbc_d[l_ac].prbc001
                        CALL aprt101_prbc001_ref()
                        CALL aprt101_prbc0011_ref()
                        LET l_max=l_max+1
                     END IF
                     LET l_ac = l_ac_t
                  END WHILE
                  IF l_count = 0 THEN
                     CALL cl_err('',g_errno,1)
                  END IF
            END IF                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbc_d[l_ac].prbc002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prbb_m.prbb002 #
            IF NOT cl_null(g_prbc_d[l_ac].prbc001) THEN
               LET g_qryparam.where  = " rtdx001='",g_prbc_d[l_ac].prbc001,"' "
            END IF
            CALL q_rtdx002_1()                                #呼叫開窗

            LET g_prbc_d[l_ac].prbc002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            IF cl_null(g_prbc_d[l_ac].prbc001) THEN
               CALL aprt101_prbc002_ref()
               CALL aprt101_unique_prbc001()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_prbc_d[l_ac].prbc002,g_errno,1)
                  LET g_prbc_d[l_ac].prbc002 = g_prbc_d_t.prbc002
                  LET g_prbc_d[l_ac].prbc001 = NULL
                  NEXT FIELD prbc002
               END IF
               CALL aprt101_prbc0011_ref()
            END IF   
            
            DISPLAY g_prbc_d[l_ac].prbc002 TO prbc002              #顯示到畫面上

            NEXT FIELD prbc002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbc_d[l_ac].prbcunit             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_prbc_d[l_ac].prbcunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbc_d[l_ac].prbcunit TO prbcunit              #顯示到畫面上

            NEXT FIELD prbcunit                          #返回原欄位

]]>
</point>
  <point name="input.c.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = '2'
            LET g_qryparam.arg4 = 'F'
            CALL q_ooed004_4()                                #呼叫開窗

            LET g_prbb_m.prbb002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbb_m.prbb002 TO prbb002              #顯示到畫面上
            call aprt101_prbb002_ref()
            NEXT FIELD prbb002                          #返回原欄位

]]>
</point>
  <point name="input.c.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbb003             #給予default值
            LET g_qryparam.where = "prba001='",g_prbb_m.prbb002,"' "
            #給予arg

            CALL q_prba002()                                #呼叫開窗

            LET g_prbb_m.prbb003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbb_m.prbb003 TO prbb003              #顯示到畫面上
            call aprt101_prbb003_ref()
            NEXT FIELD prbb003                          #返回原欄位

]]>
</point>
  <point name="input.c.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbb006             #給予default值

            #給予arg

            CALL q_ooag001_6()                                #呼叫開窗

            LET g_prbb_m.prbb006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbb_m.prbb006 TO prbb006              #顯示到畫面上
            CALL aprt101_prbb006_ref()
            NEXT FIELD prbb006                          #返回原欄位

]]>
</point>
  <point name="input.c.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbbdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "aprt101" #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prbb_m.prbbdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbb_m.prbbdocno TO prbbdocno              #顯示到畫面上

            NEXT FIELD prbbdocno                          #返回原欄位

]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                  
      CALL aprt101_prbc0011_ref()  ]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 CALL aprt101_prbbunit_ref()
            CALL aprt101_prbb007_ref()         
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbb002
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbb002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbb002_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbb002
#            LET g_ref_fields[2] = g_prbb_m.prbb003
#            CALL ap_ref_array2(g_ref_fields,"SELECT prba003 FROM prba_t WHERE prbaent='"||g_enterprise||"' AND prba001=? AND prba002=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbb003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbb003_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbb006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbb006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbb006_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prbb_m.prbbcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prbb_m.prbbcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prbb_m.prbbcnfid_desc
]]>
</point>
  <point name="function.aprt101_prbbunit_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#display prbbunit
PRIVATE FUNCTION aprt101_prbbunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbbunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbb_m.prbbunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbb_m.prbbunit_desc
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbb002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#display prbb002
PRIVATE FUNCTION aprt101_prbb002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbb002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbb_m.prbb002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbb_m.prbb002_desc
END FUNCTION]]>
</point>
  <point name="function.aprt101_chk_prbbdocno" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#chk prbbdocno
PRIVATE FUNCTION aprt101_chk_prbbdocno()
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   define   p_prbbdocno like prbb_t.prbbdocno   
   LET l_cnt=0
   LET l_cnt1=0
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM ooba_t lEFT JOIN oobl_t ON ooba001=oobl001 AND ooba002=oobl002
    WHERE ooba001 = g_ooef004 AND ooba002=g_prbb_m.prbbdocno
      AND oobl003 = 'aprt101'
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooba_t lEFT JOIN oobl_t ON ooba001=oobl001 AND ooba002=oobl002
       WHERE oobl001 = g_ooef004 AND oobl002=g_prbb_m.prbbdocno
      AND oobl003 = 'aprt101' AND oobastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbb003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#display prbb003
PRIVATE FUNCTION aprt101_prbb003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbb002
   LET g_ref_fields[2] = g_prbb_m.prbb003
   CALL ap_ref_array2(g_ref_fields,"SELECT prba003 FROM prba_t WHERE prbaent='"||g_enterprise||"' AND prba001=? AND prba002=? ","") RETURNING g_rtn_fields
   LET g_prbb_m.prbb003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbb_m.prbb003_desc
END FUNCTION]]>
</point>
  <point name="function.aprt101_chk_prbb005" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[#chk prbb005
PRIVATE FUNCTION aprt101_chk_prbb005()
   LET g_errno=null
   IF NOT cl_null(g_prbb_m.prbb005) AND NOT cl_null(g_prbb_m.prbb004) THEN
      IF g_prbb_m.prbb005<g_prbb_m.prbb004 THEN
         LET g_errno="amm-00080"
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbb006_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[#display prbb006
PRIVATE FUNCTION aprt101_prbb006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbb006
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbb_m.prbb006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbb_m.prbb006_desc
   SELECT ooag003 INTO g_prbb_m.prbb007
     FROM ooag_t
    WHERE ooagent= g_enterprise
      AND ooag001= g_prbb_m.prbb006 
   CALL aprt101_prbb007_ref()
END FUNCTION]]>
</point>
  <point name="function.aprt101_create_prbcseq" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[#create prbcseq
PRIVATE FUNCTION aprt101_create_prbcseq()
   IF (cl_null(g_prbc_d[l_ac].prbcseq) OR g_prbc_d[l_ac].prbcseq=0) THEN
      SELECT MAX(prbcseq)+1 INTO g_prbc_d[l_ac].prbcseq FROM prbc_t
       WHERE prbcdocno = g_prbb_m.prbbdocno AND prbcent = g_enterprise
   END IF
   IF (cl_null(g_prbc_d[l_ac].prbcseq) OR g_prbc_d[l_ac].prbcseq=0) THEN
      LET g_prbc_d[l_ac].prbcseq = 1
   END IF
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbc001_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[#display prbc002
PRIVATE FUNCTION aprt101_prbc001_ref()
   SELECT rtdx002 INTO g_prbc_d[l_ac].prbc002 FROM rtdx_t,imay_t
    WHERE rtdx001=imay001 AND rtdx002 = imay003 AND rtdxent=imayent AND rtdx001 = g_prbc_d[l_ac].prbc001
      AND rtdxent = g_enterprise AND rtdxstus = 'Y' AND imaystus='Y'
   DISPLAY  g_prbc_d[l_ac].prbc002 TO s_detail1[l_ac].prbc002
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbc0011_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[#display 規格，品類等
PRIVATE FUNCTION aprt101_prbc0011_ref()
   SELECT imaal003,imaal004 INTO g_prbc_d[l_ac].prbc001_desc,g_prbc_d[l_ac].imaal004
     FROM imaal_t WHERE imaal001 = g_prbc_d[l_ac].prbc001
      AND imaal002 = g_dlang
   SELECT imaa009 INTO  g_prbc_d[l_ac].imaa009
     FROM imaa_t WHERE imaa001 = g_prbc_d[l_ac].prbc001
      AND imaaent = g_enterprise 
   SELECT rtdx033 INTO g_prbc_d[l_ac].imaa105
     FROM rtdx_t WHERE rtdx001 = g_prbc_d[l_ac].prbc001
      AND rtdxent = g_enterprise AND rtdxsite = g_prbb_m.prbb002
   IF cl_null( g_prbc_d[l_ac].imaa105) THEN
      SELECT imaa105 INTO  g_prbc_d[l_ac].imaa105
        FROM imaa_t WHERE imaa001 = g_prbc_d[l_ac].prbc001
         AND imaaent = g_enterprise 
   END IF 
   SELECT rtaxl003 INTO g_prbc_d[l_ac].imaa009_desc
     FROM rtaxl_t
    WHERE rtaxl001 =  g_prbc_d[l_ac].imaa009 AND rtaxlent = g_enterprise
      AND rtaxl002 = g_dlang
   SELECT oocal003 INTO g_prbc_d[l_ac].imaa105_desc
     FROM oocal_t
    WHERE oocal001 = g_prbc_d[l_ac].imaa105 AND oocalent = g_enterprise
      AND oocal002 = g_dlang
   DISPLAY g_prbc_d[l_ac].prbc001_desc,g_prbc_d[l_ac].imaal004,g_prbc_d[l_ac].imaa009,
           g_prbc_d[l_ac].imaa009_desc,g_prbc_d[l_ac].imaa105,g_prbc_d[l_ac].imaa105_desc 
        TO s_detail1[l_ac].prbc001_desc,s_detail1[l_ac].imaal004,s_detail1[l_ac].imaa009,
           s_detail1[l_ac].imaa009_desc,s_detail1[l_ac].imaa105,s_detail1[l_ac].imaa105_desc  
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbc002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[#display prbc001
PRIVATE FUNCTION aprt101_prbc002_ref()
   SELECT rtdx001 INTO g_prbc_d[l_ac].prbc001 FROM rtdx_t,imay_t
    WHERE rtdx001=imay001 AND imay003 = g_prbc_d[l_ac].prbc002 AND rownum = 1
      AND rtdxent = g_enterprise AND rtdxsite = g_prbb_m.prbb002 AND rtdxstus = 'Y' AND imaystus='Y'
   DISPLAY  g_prbc_d[l_ac].prbc001 TO s_detail1[l_ac].prbc001
END FUNCTION]]>
</point>
  <point name="function.aprt101_unique_prbc001" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[#unique prbc001
PRIVATE FUNCTION aprt101_unique_prbc001()
   DEFINE l_cnt LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   SELECT count(*) INTO l_cnt FROM prbc_t WHERE prbcdocno = g_prbb_m.prbbdocno
      AND prbcent = g_enterprise AND prbc001 = g_prbc_d[l_ac].prbc001
   IF l_cnt >0 THEN
      LET g_errno  = "art-00072"
   END IF
END FUNCTION]]>
</point>
  <point name="function.aprt101_null_prbc001" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[#null prbc001,prbc001_desc,imaal004等
PRIVATE FUNCTION aprt101_null_prbc001()
   LET g_prbc_d[l_ac].prbc001_desc = NULL
   LET g_prbc_d[l_ac].imaal004 = NULL
   LET g_prbc_d[l_ac].imaa009 = NULL
   LET g_prbc_d[l_ac].imaa009_desc = NULL
   LET g_prbc_d[l_ac].imaa105_desc = NULL
   LET g_prbc_d[l_ac].imaa105 = NULL
   DISPLAY g_prbc_d[l_ac].prbc001_desc,g_prbc_d[l_ac].imaal004,g_prbc_d[l_ac].imaa009,
           g_prbc_d[l_ac].imaa009_desc,g_prbc_d[l_ac].imaa105,g_prbc_d[l_ac].imaa105_desc 
        TO s_detail1[l_ac].prbc001_desc,s_detail1[l_ac].imaal004,s_detail1[l_ac].imaa009,
           s_detail1[l_ac].imaa009_desc,s_detail1[l_ac].imaa105,s_detail1[l_ac].imaa105_desc   
END FUNCTION]]>
</point>
  <point name="function.aprt101_chk_prbc001" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[#chk prbc001
PRIVATE FUNCTION aprt101_chk_prbc001(p_prbc001)
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   DEFINE   p_prbc001   LIKE prbc_t.prbc001   

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM rtdx_t WHERE  rtdx001= p_prbc001 AND rtdxent = g_enterprise
      AND rtdxsite = g_prbb_m.prbb002
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00151"
   ELSE
      LET l_cnt = 0
      SELECT count(*) INTO l_cnt FROM imaa_t WHERE imaa001=p_prbc001 AND imaaent=g_enterprise
      IF l_cnt<=0 THEN
         LET g_errno = "aim-00001"
      ELSE 
         LET l_cnt1 = 0      
         SELECT COUNT(*) INTO l_cnt1  FROM rtdx_t 
          WHERE rtdx001= p_prbc001
            AND rtdxent = g_enterprise AND rtdxstus='Y' AND rtdxsite = g_prbb_m.prbb002
         IF l_cnt1 <= 0 THEN
            LET g_errno = "art-00153"
         ELSE
            LET l_cnt1 = 0
            SELECT count(*) INTO l_cnt1 FROM imaa_t WHERE imaa001=p_prbc001 AND imaaent=g_enterprise
              AND imaastus='Y'
            IF l_cnt1<=0 THEN
               LET g_errno = "aim-00101"
            END IF               
         END IF
      END IF      
   END IF  
END FUNCTION]]>
</point>
  <point name="function.aprt101_chk_prbb002" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[#chk prbb002
PRIVATE FUNCTION aprt101_chk_prbb002()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0 
   SELECT count(*) INTO l_cnt FROM prba_t,ooef_t WHERE prbaent = g_enterprise
      AND prba001 = ooef001 AND ooefent=prbaent
      AND prba001 = g_prbb_m.prbb002
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00213"
   ELSE
      SELECT count(*) INTO l_cnt1 FROM prba_t,ooef_t WHERE prbaent = g_enterprise
         AND prba001 = ooef001 AND ooefent=prbaent
         AND prba001 = g_prbb_m.prbb002 AND prbastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "art-00214"
      ELSE
         LET l_cnt1=0
         SELECT count(*) INTO l_cnt1 FROM prba_t,ooef_t WHERE prbaent = g_enterprise
            AND prba001 = ooef001 AND ooefent=prbaent
            AND prba001 = g_prbb_m.prbb002 AND ooefstus='Y'
         IF l_cnt1<=0 THEN
            LET g_errno = "aoo-00095"
         END IF         
      END IF       
   END IF   
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbb007_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[#display prbb007
PRIVATE FUNCTION aprt101_prbb007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbb007
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbb_m.prbb007_desc = '',g_rtn_fields[1],''
   DISPLAY BY NAME g_prbb_m.prbb007_desc
END FUNCTION]]>
</point>
  <point name="function.aprt101_prbc002" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[#chk prbc002
PRIVATE FUNCTION aprt101_prbc002()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0 
   
   SELECT COUNT(*) INTO l_cnt
     FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                 LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
    WHERE imay003 = g_prbc_d[l_ac].prbc002 AND rtdxsite = g_prbb_m.prbb002
   IF l_cnt <=0 THEN
      LET g_errno="art-00152"
   ELSE
      SELECT COUNT(*) INTO l_cnt1
        FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                    LEFT JOIN imay_t ON imay001=rtdx001 AND imayent=rtdxent
       WHERE imay003 = g_prbc_d[l_ac].prbc002 AND rtdxsite = g_prbb_m.prbb002
         AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y'
      IF l_cnt1<=0 THEN
         LET g_errno="art-00153"
      END IF      
   END IF   

END FUNCTION]]>
</point>
  <point name="function.aprt101_chk_prbc0012" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[#chk prbc001,prbc002
PRIVATE FUNCTION aprt101_chk_prbc0012()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0 
   IF NOT cl_null(g_prbc_d[l_ac].prbc002) AND NOT cl_null(g_prbc_d[l_ac].prbc001) THEN
      SELECT COUNT(*) INTO l_cnt
        FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                    LEFT JOIN imay_t ON imay001=rtdx001 AND rtdxent=imayent 
       WHERE rtdx001 = g_prbc_d[l_ac].prbc001 
         AND imay003 = g_prbc_d[l_ac].prbc002 
         AND rtdxsite = g_prbb_m.prbb002
         
      IF l_cnt <=0 THEN
         LET g_errno="art-00286"
      ELSE
         SELECT COUNT(*) INTO l_cnt1
           FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent 
                       LEFT JOIN imay_t ON imay001=rtdx001 AND rtdxent=imayent
          WHERE rtdx001 = g_prbc_d[l_ac].prbc001 
            AND imay003 = g_prbc_d[l_ac].prbc002 
            AND rtdxsite = g_prbb_m.prbb002
            AND rtdxstus='Y' AND imaystus='Y' AND imaastus='Y'
         IF l_cnt1<=0 THEN
            LET g_errno="art-00153"
         END IF      
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="construct.a.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.a.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbcnfdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbcrtdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbmoddt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.b.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbb007  #顯示到畫面上

            NEXT FIELD prbb007                     #返回原欄位

]]>
</point>
  <point name="construct.c.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="construct.c.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbbunit  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD prbbunit                     #返回原欄位

]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            #      IF NOT s_aooi200_del_docno(g_prbb_m.prbbdocno,g_prbb_m.prbbdocdt) THEN CALL s_transaction_end('N','0') RETURN END IF]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   UPDATE prbc_t SET prbcunit=g_prbb_m.prbbunit,
                     prbcsite=g_prbb_m.prbbsite
    WHERE prbcdocno = g_prbb_m.prbbdocno
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF    ]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#                        IF g_prbb_m.prbbstus<>'N' THEN
#      CALL cl_set_act_visible("modify,delete", FALSE)
#   ELSE
#      CALL cl_set_act_visible("modify,delete", TRUE)
#   END IF
   IF g_prbb_m.prbbstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE l_cmd                 STRING
DEFINE l_cnt                 LIKE type_t.num5]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 CALL cl_set_combo_scc('b_prbb001','6017')]]>
</point>
  <point name="input.a.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        CALL aprt101_chk_prbb005()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_prbb_m.prbb004||'>'||g_prbb_m.prbb005,g_errno,1)
               LET g_prbb_m.prbb004 = g_prbb_m_t.prbb004
               NEXT FIELD prbb004
            END IF]]>
</point>
  <point name="input.a.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        CALL aprt101_chk_prbb005()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_prbb_m.prbb004||'>'||g_prbb_m.prbb005,g_errno,1)
               LET g_prbb_m.prbb005 = g_prbb_m_t.prbb005
               NEXT FIELD prbb005
            END IF ]]>
</point>
  <point name="input.a.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        LET g_prbb_m.prbb007_desc = null
            DISPLAY BY NAME g_prbb_m.prbb007_desc
            IF NOT cl_null(g_prbb_m.prbb007) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbb_m.prbb007
               LET g_chkparam.arg2 = g_today

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbb_m.prbb007 = g_prbb_m_t.prbb007
                  CALL aprt101_prbb007_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aprt101_prbb007_ref()
            
]]>
</point>
  <point name="input.a.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.a.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.b.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.b.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  select ooef004 into g_ooef004 from ooef_t where ooefent=g_enterprise and ooef001=g_site
   let g_errshow=1]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                                                    ]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                    CALL aprt101_create_prbcseq()
            LET g_prbc_d[l_ac].prbcunit = g_prbb_m.prbbunit
            LET g_prbc_d[l_ac].prbcsite = g_prbb_m.prbbsite]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.c.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbb007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prbb_m.prbb007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbb_m.prbb007 TO prbb007              #顯示到畫面上
            CALL aprt101_prbb007_ref()
            NEXT FIELD prbb007                          #返回原欄位

]]>
</point>
  <point name="input.c.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.c.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbb_m.prbbunit             #給予default值
            LET g_qryparam.default2 = "" #g_prbb_m.ooefl003 #說明(簡稱)

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_prbb_m.prbbunit = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_prbb_m.ooefl003 = g_qryparam.return2 #說明(簡稱)

            DISPLAY g_prbb_m.prbbunit TO prbbunit              #顯示到畫面上
            #DISPLAY g_prbb_m.ooefl003 TO ooefl003 #說明(簡稱)
            CALL aprt101_prbbunit_ref()
            NEXT FIELD prbbunit                          #返回原欄位

]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 DEFINE  l_count1         LIKE type_t.num5
   DEFINE  l_i1             LIKE type_t.num5
   DEFINE  l_prbc001        LIKE prbc_t.prbc001 
   DEFINE  l_prbc002        LIKE prbc_t.prbc002
   DEFINE  tok              base.stringtokenizer
   DEFINE  l_detail_cnt     LIKE type_t.num5
   DEFINE  l_max            LIKE type_t.num5
   DEFINE  l_success        LIKE type_t.num5 
   DEFINE  l_ac_t           LIKE type_t.num5]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="input.g.page1.prbc001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.page1.prbc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.page1.prbc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.page1.prbcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.page1.prbcsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.page1.prbcunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbbdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbbdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbbstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.g.prbbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                                        IF NOT cl_null(g_prbb_m.prbbdocno) THEN
                     CALL s_aooi200_gen_docno(g_prbb_m.prbbsite,g_prbb_m.prbbdocno,g_prbb_m.prbbdocdt,g_prog)
                     RETURNING  g_success,g_prbb_m.prbbdocno
                     IF g_success<>'1' THEN
                        call cl_err(g_prbb_m.prbbdocno,"amm-00001",1)
                        NEXT FIELD prbbdocno
                     ELSE
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbb_t WHERE "||"prbbent = '" ||g_enterprise|| "' AND "||"prbbdocno = '"||g_prbb_m.prbbdocno ||"'",'std-00004',1) THEN
                           let g_prbb_m.prbbdocno = g_prbbdocno_t
                           NEXT FIELD prbbdocno
                        END IF

                     END IF
                     LET g_prbb_m_t.prbbdocno = g_prbb_m.prbbdocno
                  END IF]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            IF l_cmd_t = 'r' THEN                                                                                                                        IF l_cmd_t = 'r' THEN
#            ELSE
               CALL aprt101_set_entry(p_cmd)
               CALL aprt101_set_no_entry(p_cmd)            
#            END IF
            ]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              LET g_prbb_m.prbbunit =g_site
      LET g_prbb_m.prbbsite = g_prbb_m.prbbunit
      CALL aprt101_prbbunit_ref()
      LET g_prbb_m.prbbdocdt = g_today
      LET g_prbb_m.prbb006 = g_user
      CALL aprt101_prbb006_ref()
      SELECT ooag003 INTO g_prbb_m.prbb007
        FROM ooag_t
       WHERE ooagent= g_enterprise
         AND ooag001= g_prbb_m.prbb006 
      CALL aprt101_prbb007_ref()         
      LET g_prbb_m_t.* = g_prbb_m.*]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise
      AND ooef001 = g_site]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.open_artt412" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               SELECT COUNT(*) INTO l_cnt FROM rted_t WHERE rted001=g_prbb_m.prbbdocno
                  AND rtedent = g_enterprise
               IF l_cnt >0 THEN   
                  LET l_cmd = "artt412 '' "||"'"||g_prbb_m.prbbdocno||"'"
                  CALL cl_cmdrun_wait(l_cmd)
               ELSE
                  CALL cl_err(g_prbb_m.prbbdocno,"art-00217",1)
               END IF               ]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_prbb_m.prbbstus MATCHES "[DR]" THEN 
         LET g_prbb_m.prbbstus = "N"
      END IF                                                      ]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   IF g_prbb_m.prbbstus MATCHES "[DR]" THEN 
      LET g_prbb_m.prbbstus = "N"
   END IF
   IF g_prbb_m.prbbstus<>'N' THEN
      RETURN
   END IF ]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 LET g_prbb_m.prbbstus = "N"
   LET g_prbb_m.prbbcnfid = ""
   LET g_prbb_m.prbbcnfdt = ""
   LET g_prbb_m.prbbunit =g_site
   LET g_prbb_m.prbbsite = g_prbb_m.prbbunit
   CALL aprt101_prbbunit_ref()
   LET g_prbb_m.prbbdocdt = g_today
   LET g_prbb_m.prbb006 = g_user
   CALL aprt101_prbb006_ref() 
   CALL aprt101_prbb007_ref()
   DISPLAY BY NAME g_prbb_m.prbbstus,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt]]>
</point>
  <point name="send.before_send" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_aprt101_conf_chk(g_prbb_m.prbbdocno,g_prbb_m.prbbstus) RETURNING l_success,g_errno
   IF l_success THEN
            
   ELSE
      CALL cl_err(g_prbb_m.prbbdocno,g_errno,1)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE           
   END IF]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("prbb002",TRUE)                           ]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                  CALL cl_set_comp_entry("prbbdocdt",TRUE)]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT count(*) INTO l_cnt 
     FROM prbc_t 
    WHERE prbcdocno=g_prbb_m.prbbdocno
      AND prbcent=g_enterprise
   IF l_cnt>0 THEN
      CALL cl_set_comp_entry("prbb002",FALSE)
   END IF   ]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_cnt   LIKE type_t.num5                            ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                  CALL cl_set_comp_entry("prbbdocdt",FALSE)  ]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 LET l_cnt = g_prbc_d.getLength()
   DISPLAY l_cnt TO FORMONLY.cnt   ]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 DEFINE l_cnt     like type_t.num5]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        SELECT prbbstus,prbbcnfid,prbbcnfdt,prbbmodid,prbbmoddt INTO g_prbb_m.prbbstus,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,
                                                                g_prbb_m.prbbmodid,g_prbb_m.prbbmoddt  
     FROM prbb_t
    WHERE prbbent = g_enterprise AND prbbdocno = g_prbb_m.prbbdocno
   DISPLAY BY NAME g_prbb_m.prbbstus,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbmodid,g_prbb_m.prbbmoddt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbbcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbb_m.prbbcnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbb_m.prbbcnfid_desc   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbb_m.prbbmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbb_m.prbbmodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbb_m.prbbmodid_desc
   IF g_prbb_m.prbbstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", TRUE)    
   END IF]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT prbbstus INTO g_prbb_m.prbbstus FROM prbb_t WHERE prbbdocno = g_prbb_m.prbbdocno
            AND prbbent = g_enterprise         
         CALL s_aprt101_conf_chk(g_prbb_m.prbbdocno,g_prbb_m.prbbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt101_conf_upd(g_prbb_m.prbbdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            CALL cl_err(g_prbb_m.prbbdocno,g_errno,1)
            RETURN            
         END IF
                
      WHEN 'X'
         SELECT prbbstus INTO g_prbb_m.prbbstus FROM prbb_t WHERE prbbdocno = g_prbb_m.prbbdocno
            AND prbbent = g_enterprise  
         CALL s_aprt101_void_chk(g_prbb_m.prbbdocno,g_prbb_m.prbbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt101_void_upd(g_prbb_m.prbbdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_prbb_m.prbbdocno,g_errno,1)
            RETURN    
         END IF
      WHEN 'N'
         SELECT prbbstus INTO g_prbb_m.prbbstus FROM prbb_t WHERE prbbdocno = g_prbb_m.prbbdocno
            AND prbbent = g_enterprise 
         CALL s_aprt101_unconf_chk(g_prbb_m.prbbdocno,g_prbb_m.prbbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt101_unconf_upd(g_prbb_m.prbbdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_prbb_m.prbbdocno,g_errno,1)
            RETURN    
         END IF   
   END CASE]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF g_prbb_m.prbbstus = 'X' THEN
      RETURN
   END IF
   IF g_prbb_m.prbbstus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#                                                CALL cl_set_act_visible("invalid,open,confirmed", true)
#      IF g_prbb_m.prbbstus <> 'N' THEN
#         CALL cl_set_act_visible("invalid", FALSE)
#      ELSE
#         CALL cl_set_act_visible("invalid", TRUE)
#         CALL cl_set_act_visible("open", FALSE)      
#      END IF
#      IF g_prbb_m.prbbstus = 'Y' THEN
#         CALL cl_set_act_visible("open", TRUE)
#         CALL cl_set_act_visible("confirmed", FALSE)      
#      END IF
#      if g_prbb_m.prbbstus = 'X' then
#         CALL cl_set_act_visible("invalid,open,confirmed", false)
#      end if 
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prbb_m.prbbstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE      ]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        DEFINE l_success like type_t.num5]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                          ]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                        ]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                                                                                                                      ]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                            ]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aprt101.b_fill" ver="4" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt101_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prbc_d.clear()    #g_prbc_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt101_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prbcseq,prbc001,prbc002,prbcsite,prbcunit,prbc003 ,t1.imaal003 FROM prbc_t", 
             
                  " INNER JOIN prbb_t ON prbbdocno = prbcdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=prbc001 AND t1.imaal002='"||g_dlang||"' ",
 
                  " WHERE prbcent=? AND prbcdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prbc_t.prbcseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt101_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt101_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prbb_m.prbbdocno
                                               
      FOREACH b_fill_cs INTO g_prbc_d[l_ac].prbcseq,g_prbc_d[l_ac].prbc001,g_prbc_d[l_ac].prbc002,g_prbc_d[l_ac].prbcsite, 
          g_prbc_d[l_ac].prbcunit,g_prbc_d[l_ac].prbc003,g_prbc_d[l_ac].prbc001_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prbc_d.deleteElement(g_prbc_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt101_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aprt101.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt101_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt101_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt101.browser_fill" ver="11" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt101_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prbb_m.* TO NULL
   CALL g_prbc_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prbbdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prbbdocno ",
                      " FROM prbb_t ",
                      " ",
                      " LEFT JOIN prbc_t ON prbcent = prbbent AND prbbdocno = prbcdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE prbbent = '" ||g_enterprise|| "' AND prbcent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prbb_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prbbdocno ",
                      " FROM prbb_t ", 
                      "  ",
                      "  ",
                      " WHERE prbbent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prbb_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prbbunit,'',prbbdocdt,prbbdocno,prbb002,'',prbb003,'',prbb001,prbb004,prbb005,prbb006,'',prbb007,'',prbb008,prbbsite Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prbbstus,prbbunit,'',prbbdocdt,prbbdocno,prbb002,'',prbb003,'',prbb001, 
       prbb004,prbb005,prbb006,'',prbb007,'',prbb008,prbbsite,t1.ooefl003 ,t2.ooefl003 ,t3.prba003 , 
       t4.oofa011 ,t5.ooefl003 ",
               " FROM prbb_t ",
               "  ",
               "  LEFT JOIN prbc_t ON prbcent = prbbent AND prbbdocno = prbcdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prbbunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=prbb002 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prba_t t3 ON t3.prbaent='"||g_enterprise||"' AND t3.prba001=prbb002 AND t3.prba002=prbb003  ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prbb006  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prbb007 AND t5.ooefl002='"||g_lang||"' ",
 
               " WHERE prbbent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prbb_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prbbunit,g_browser[g_cnt].b_prbbunit_desc, 
       g_browser[g_cnt].b_prbbdocdt,g_browser[g_cnt].b_prbbdocno,g_browser[g_cnt].b_prbb002,g_browser[g_cnt].b_prbb002_desc, 
       g_browser[g_cnt].b_prbb003,g_browser[g_cnt].b_prbb003_desc,g_browser[g_cnt].b_prbb001,g_browser[g_cnt].b_prbb004, 
       g_browser[g_cnt].b_prbb005,g_browser[g_cnt].b_prbb006,g_browser[g_cnt].b_prbb006_desc,g_browser[g_cnt].b_prbb007, 
       g_browser[g_cnt].b_prbb007_desc,g_browser[g_cnt].b_prbb008,g_browser[g_cnt].b_prbbsite,g_browser[g_cnt].b_prbbunit_desc, 
       g_browser[g_cnt].b_prbb002_desc,g_browser[g_cnt].b_prbb003_desc,g_browser[g_cnt].b_prbb006_desc, 
       g_browser[g_cnt].b_prbb007_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprt101.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt101_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prbbdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt101_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt101.construct" ver="10" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt101_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prbb_m.* TO NULL
   CALL g_prbc_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prbbunit,prbbdocdt,prbbdocno,prbb001,prbbsite,prbb002,prbb003,prbb004, 
          prbb005,prbb006,prbb007,prbb008,prbbstus,prbbownid,prbbowndp,prbbcrtid,prbbcrtdp,prbbcrtdt, 
          prbbmodid,prbbmoddt,prbbcnfid,prbbcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prbbcrtdt>>----
         AFTER FIELD prbbcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbbmoddt>>----
         AFTER FIELD prbbmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbbcnfdt>>----
         AFTER FIELD prbbcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbbpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prbbunit
         ON ACTION controlp INFIELD prbbunit
            #add-point:ON ACTION controlp INFIELD prbbunit
            {<point name="construct.c.prbbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbunit
            #add-point:BEFORE FIELD prbbunit
            {<point name="construct.b.prbbunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbunit
            
            #add-point:AFTER FIELD prbbunit
            {<point name="construct.a.prbbunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbdocdt
            #add-point:BEFORE FIELD prbbdocdt
            {<point name="construct.b.prbbdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbdocdt
            
            #add-point:AFTER FIELD prbbdocdt
            {<point name="construct.a.prbbdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbdocdt
         ON ACTION controlp INFIELD prbbdocdt
            #add-point:ON ACTION controlp INFIELD prbbdocdt
            {<point name="construct.c.prbbdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbbdocno
         ON ACTION controlp INFIELD prbbdocno
            #add-point:ON ACTION controlp INFIELD prbbdocno
            {<point name="construct.c.prbbdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbdocno
            #add-point:BEFORE FIELD prbbdocno
            {<point name="construct.b.prbbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbdocno
            
            #add-point:AFTER FIELD prbbdocno
            {<point name="construct.a.prbbdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb001
            #add-point:BEFORE FIELD prbb001
            {<point name="construct.b.prbb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb001
            
            #add-point:AFTER FIELD prbb001
            {<point name="construct.a.prbb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb001
         ON ACTION controlp INFIELD prbb001
            #add-point:ON ACTION controlp INFIELD prbb001
            {<point name="construct.c.prbb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbsite
            #add-point:BEFORE FIELD prbbsite
            {<point name="construct.b.prbbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbsite
            
            #add-point:AFTER FIELD prbbsite
            {<point name="construct.a.prbbsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbsite
         ON ACTION controlp INFIELD prbbsite
            #add-point:ON ACTION controlp INFIELD prbbsite
            {<point name="construct.c.prbbsite" />}
            #END add-point
 
         #Ctrlp:construct.c.prbb002
         ON ACTION controlp INFIELD prbb002
            #add-point:ON ACTION controlp INFIELD prbb002
            {<point name="construct.c.prbb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb002
            #add-point:BEFORE FIELD prbb002
            {<point name="construct.b.prbb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb002
            
            #add-point:AFTER FIELD prbb002
            {<point name="construct.a.prbb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb003
         ON ACTION controlp INFIELD prbb003
            #add-point:ON ACTION controlp INFIELD prbb003
            {<point name="construct.c.prbb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb003
            #add-point:BEFORE FIELD prbb003
            {<point name="construct.b.prbb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb003
            
            #add-point:AFTER FIELD prbb003
            {<point name="construct.a.prbb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb004
            #add-point:BEFORE FIELD prbb004
            {<point name="construct.b.prbb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb004
            
            #add-point:AFTER FIELD prbb004
            {<point name="construct.a.prbb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb004
         ON ACTION controlp INFIELD prbb004
            #add-point:ON ACTION controlp INFIELD prbb004
            {<point name="construct.c.prbb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb005
            #add-point:BEFORE FIELD prbb005
            {<point name="construct.b.prbb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb005
            
            #add-point:AFTER FIELD prbb005
            {<point name="construct.a.prbb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb005
         ON ACTION controlp INFIELD prbb005
            #add-point:ON ACTION controlp INFIELD prbb005
            {<point name="construct.c.prbb005" />}
            #END add-point
 
         #Ctrlp:construct.c.prbb006
         ON ACTION controlp INFIELD prbb006
            #add-point:ON ACTION controlp INFIELD prbb006
            {<point name="construct.c.prbb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb006
            #add-point:BEFORE FIELD prbb006
            {<point name="construct.b.prbb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb006
            
            #add-point:AFTER FIELD prbb006
            {<point name="construct.a.prbb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb007
         ON ACTION controlp INFIELD prbb007
            #add-point:ON ACTION controlp INFIELD prbb007
            {<point name="construct.c.prbb007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb007
            #add-point:BEFORE FIELD prbb007
            {<point name="construct.b.prbb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb007
            
            #add-point:AFTER FIELD prbb007
            {<point name="construct.a.prbb007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb008
            #add-point:BEFORE FIELD prbb008
            {<point name="construct.b.prbb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb008
            
            #add-point:AFTER FIELD prbb008
            {<point name="construct.a.prbb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbb008
         ON ACTION controlp INFIELD prbb008
            #add-point:ON ACTION controlp INFIELD prbb008
            {<point name="construct.c.prbb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbstus
            #add-point:BEFORE FIELD prbbstus
            {<point name="construct.b.prbbstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbstus
            
            #add-point:AFTER FIELD prbbstus
            {<point name="construct.a.prbbstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbstus
         ON ACTION controlp INFIELD prbbstus
            #add-point:ON ACTION controlp INFIELD prbbstus
            {<point name="construct.c.prbbstus" />}
            #END add-point
 
         #Ctrlp:construct.c.prbbownid
         ON ACTION controlp INFIELD prbbownid
            #add-point:ON ACTION controlp INFIELD prbbownid
            {<point name="construct.c.prbbownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbownid
            #add-point:BEFORE FIELD prbbownid
            {<point name="construct.b.prbbownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbownid
            
            #add-point:AFTER FIELD prbbownid
            {<point name="construct.a.prbbownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbowndp
         ON ACTION controlp INFIELD prbbowndp
            #add-point:ON ACTION controlp INFIELD prbbowndp
            {<point name="construct.c.prbbowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbowndp
            #add-point:BEFORE FIELD prbbowndp
            {<point name="construct.b.prbbowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbowndp
            
            #add-point:AFTER FIELD prbbowndp
            {<point name="construct.a.prbbowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbcrtid
         ON ACTION controlp INFIELD prbbcrtid
            #add-point:ON ACTION controlp INFIELD prbbcrtid
            {<point name="construct.c.prbbcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbcrtid
            #add-point:BEFORE FIELD prbbcrtid
            {<point name="construct.b.prbbcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbcrtid
            
            #add-point:AFTER FIELD prbbcrtid
            {<point name="construct.a.prbbcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbbcrtdp
         ON ACTION controlp INFIELD prbbcrtdp
            #add-point:ON ACTION controlp INFIELD prbbcrtdp
            {<point name="construct.c.prbbcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbcrtdp
            #add-point:BEFORE FIELD prbbcrtdp
            {<point name="construct.b.prbbcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbcrtdp
            
            #add-point:AFTER FIELD prbbcrtdp
            {<point name="construct.a.prbbcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbcrtdt
            #add-point:BEFORE FIELD prbbcrtdt
            {<point name="construct.b.prbbcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbbmodid
         ON ACTION controlp INFIELD prbbmodid
            #add-point:ON ACTION controlp INFIELD prbbmodid
            {<point name="construct.c.prbbmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbmodid
            #add-point:BEFORE FIELD prbbmodid
            {<point name="construct.b.prbbmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbmodid
            
            #add-point:AFTER FIELD prbbmodid
            {<point name="construct.a.prbbmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbmoddt
            #add-point:BEFORE FIELD prbbmoddt
            {<point name="construct.b.prbbmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbbcnfid
         ON ACTION controlp INFIELD prbbcnfid
            #add-point:ON ACTION controlp INFIELD prbbcnfid
            {<point name="construct.c.prbbcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbcnfid
            #add-point:BEFORE FIELD prbbcnfid
            {<point name="construct.b.prbbcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbcnfid
            
            #add-point:AFTER FIELD prbbcnfid
            {<point name="construct.a.prbbcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbcnfdt
            #add-point:BEFORE FIELD prbbcnfdt
            {<point name="construct.b.prbbcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prbcseq,prbc001,prbc002,prbcsite,prbcunit,prbc003
           FROM s_detail1[1].prbcseq,s_detail1[1].prbc001,s_detail1[1].prbc002,s_detail1[1].prbcsite, 
               s_detail1[1].prbcunit,s_detail1[1].prbc003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt101.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt101_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prbbdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt101.delete" ver="10" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt101_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

   
   
 
   CALL aprt101_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt101_cl USING g_enterprise,g_prbb_m.prbbdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt101_cl:", STATUS, 1)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbb_m.prbbdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt101_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
 
      DELETE FROM prbb_t
       WHERE prbbent = g_enterprise AND prbbdocno = g_prbb_m.prbbdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prbb_m.prbbdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prbc_t
       WHERE prbcent = g_enterprise AND prbcdocno = g_prbb_m.prbbdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prbc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prbc_d.clear() 
 
     
      #CALL aprt101_ui_browser_refresh()  
      CALL aprt101_ui_headershow()  
      CALL aprt101_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt101_browser_fill("")
         CALL aprt101_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt101_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt101_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prbb_m.prbbdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aprt101.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt101_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prbc_t
       WHERE prbcent = g_enterprise AND
         prbcdocno = ps_keys_bak[1] AND prbcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt101.description" ver="110" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000118
#+ 
#+ Filename...: aprt101
#+ Description: 市場調查計劃
#+ Creator....: 02296(2014/03/03)
#+ Modifier...: 02296(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aprt101.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt101_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prbc_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt101_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt101_detail AS ",
                "SELECT * FROM prbc_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt101_detail SELECT * FROM prbc_t 
                                         WHERE prbcent = g_enterprise AND prbcdocno = g_prbbdocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt101_detail 
      #更新key欄位
      SET prbcdocno = g_prbb_m.prbbdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prbc_t SELECT * FROM aprt101_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt101_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
   
   DROP TABLE aprt101_detail
   
END FUNCTION
]]>
</section>
  <section id="aprt101.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt101_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt101.fetch" ver="6" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt101_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prbb_m.prbbdocno = g_browser[g_current_idx].b_prbbdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("prbb_t",SQLCA.sqlcode,1)
      INITIALIZE g_prbb_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt101_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="aprt101.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt101_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aprt101.filter" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt101_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prbbunit,prbbdocdt,prbbdocno,prbb002,prbb003,prbb001,prbb004,prbb005, 
          prbb006,prbb007,prbb008,prbbsite
                          FROM s_browse[1].b_prbbunit,s_browse[1].b_prbbdocdt,s_browse[1].b_prbbdocno, 
                              s_browse[1].b_prbb002,s_browse[1].b_prbb003,s_browse[1].b_prbb001,s_browse[1].b_prbb004, 
                              s_browse[1].b_prbb005,s_browse[1].b_prbb006,s_browse[1].b_prbb007,s_browse[1].b_prbb008, 
                              s_browse[1].b_prbbsite
 
         BEFORE CONSTRUCT
               DISPLAY aprt101_filter_parser('prbbunit') TO s_browse[1].b_prbbunit
            DISPLAY aprt101_filter_parser('prbbdocdt') TO s_browse[1].b_prbbdocdt
            DISPLAY aprt101_filter_parser('prbbdocno') TO s_browse[1].b_prbbdocno
            DISPLAY aprt101_filter_parser('prbb002') TO s_browse[1].b_prbb002
            DISPLAY aprt101_filter_parser('prbb003') TO s_browse[1].b_prbb003
            DISPLAY aprt101_filter_parser('prbb001') TO s_browse[1].b_prbb001
            DISPLAY aprt101_filter_parser('prbb004') TO s_browse[1].b_prbb004
            DISPLAY aprt101_filter_parser('prbb005') TO s_browse[1].b_prbb005
            DISPLAY aprt101_filter_parser('prbb006') TO s_browse[1].b_prbb006
            DISPLAY aprt101_filter_parser('prbb007') TO s_browse[1].b_prbb007
            DISPLAY aprt101_filter_parser('prbb008') TO s_browse[1].b_prbb008
            DISPLAY aprt101_filter_parser('prbbsite') TO s_browse[1].b_prbbsite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt101_filter_show('prbbunit')
   CALL aprt101_filter_show('prbbdocdt')
   CALL aprt101_filter_show('prbbdocno')
   CALL aprt101_filter_show('prbb002')
   CALL aprt101_filter_show('prbb003')
   CALL aprt101_filter_show('prbb001')
   CALL aprt101_filter_show('prbb004')
   CALL aprt101_filter_show('prbb005')
   CALL aprt101_filter_show('prbb006')
   CALL aprt101_filter_show('prbb007')
   CALL aprt101_filter_show('prbb008')
   CALL aprt101_filter_show('prbbsite')
 
END FUNCTION
]]>
</section>
  <section id="aprt101.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt101_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aprt101.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt101_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt101_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aprt101.global" ver="7" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prbb_m        RECORD
       prbbunit LIKE prbb_t.prbbunit, 
   prbbunit_desc LIKE type_t.chr80, 
   prbbdocdt LIKE prbb_t.prbbdocdt, 
   prbbdocno LIKE prbb_t.prbbdocno, 
   prbb001 LIKE prbb_t.prbb001, 
   prbbsite LIKE prbb_t.prbbsite, 
   prbb002 LIKE prbb_t.prbb002, 
   prbb002_desc LIKE type_t.chr80, 
   prbb003 LIKE prbb_t.prbb003, 
   prbb003_desc LIKE type_t.chr80, 
   prbb004 LIKE prbb_t.prbb004, 
   prbb005 LIKE prbb_t.prbb005, 
   prbb006 LIKE prbb_t.prbb006, 
   prbb006_desc LIKE type_t.chr80, 
   prbb007 LIKE prbb_t.prbb007, 
   prbb007_desc LIKE type_t.chr80, 
   prbb008 LIKE prbb_t.prbb008, 
   prbbstus LIKE prbb_t.prbbstus, 
   prbbownid LIKE prbb_t.prbbownid, 
   prbbownid_desc LIKE type_t.chr80, 
   prbbowndp LIKE prbb_t.prbbowndp, 
   prbbowndp_desc LIKE type_t.chr80, 
   prbbcrtid LIKE prbb_t.prbbcrtid, 
   prbbcrtid_desc LIKE type_t.chr80, 
   prbbcrtdp LIKE prbb_t.prbbcrtdp, 
   prbbcrtdp_desc LIKE type_t.chr80, 
   prbbcrtdt DATETIME YEAR TO SECOND, 
   prbbmodid LIKE prbb_t.prbbmodid, 
   prbbmodid_desc LIKE type_t.chr80, 
   prbbmoddt DATETIME YEAR TO SECOND, 
   prbbcnfid LIKE prbb_t.prbbcnfid, 
   prbbcnfid_desc LIKE type_t.chr80, 
   prbbcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prbc_d        RECORD
       prbcseq LIKE prbc_t.prbcseq, 
   prbc001 LIKE prbc_t.prbc001, 
   prbc002 LIKE prbc_t.prbc002, 
   prbc001_desc LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   imaa009_desc LIKE type_t.chr500, 
   imaa105 LIKE type_t.chr10, 
   imaa105_desc LIKE type_t.chr500, 
   prbcsite LIKE prbc_t.prbcsite, 
   prbcunit LIKE prbc_t.prbcunit, 
   prbc003 LIKE prbc_t.prbc003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prbb_m          type_g_prbb_m
DEFINE g_prbb_m_t        type_g_prbb_m
 
   DEFINE g_prbbdocno_t LIKE prbb_t.prbbdocno
 
 
DEFINE g_prbc_d          DYNAMIC ARRAY OF type_g_prbc_d
DEFINE g_prbc_d_t        type_g_prbc_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prbbunit LIKE prbb_t.prbbunit,
   b_prbbunit_desc LIKE type_t.chr80,
      b_prbbdocdt LIKE prbb_t.prbbdocdt,
      b_prbbdocno LIKE prbb_t.prbbdocno,
      b_prbb002 LIKE prbb_t.prbb002,
   b_prbb002_desc LIKE type_t.chr80,
      b_prbb003 LIKE prbb_t.prbb003,
   b_prbb003_desc LIKE type_t.chr80,
      b_prbb001 LIKE prbb_t.prbb001,
      b_prbb004 LIKE prbb_t.prbb004,
      b_prbb005 LIKE prbb_t.prbb005,
      b_prbb006 LIKE prbb_t.prbb006,
   b_prbb006_desc LIKE type_t.chr80,
      b_prbb007 LIKE prbb_t.prbb007,
   b_prbb007_desc LIKE type_t.chr80,
      b_prbb008 LIKE prbb_t.prbb008,
      b_prbbsite LIKE prbb_t.prbbsite
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prbbunit LIKE prbb_t.prbbunit,
   b_prbbunit_desc LIKE type_t.chr80,
      b_prbbdocdt LIKE prbb_t.prbbdocdt,
      b_prbbdocno LIKE prbb_t.prbbdocno,
      b_prbb002 LIKE prbb_t.prbb002,
   b_prbb002_desc LIKE type_t.chr80,
      b_prbb003 LIKE prbb_t.prbb003,
   b_prbb003_desc LIKE type_t.chr80,
      b_prbb001 LIKE prbb_t.prbb001,
      b_prbb004 LIKE prbb_t.prbb004,
      b_prbb005 LIKE prbb_t.prbb005,
      b_prbb006 LIKE prbb_t.prbb006,
   b_prbb006_desc LIKE type_t.chr80,
      b_prbb007 LIKE prbb_t.prbb007,
   b_prbb007_desc LIKE type_t.chr80,
      b_prbb008 LIKE prbb_t.prbb008,
      b_prbbsite LIKE prbb_t.prbbsite
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aprt101.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt101_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prbc_d.getLength() THEN
         LET g_detail_idx = g_prbc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prbc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prbc_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt101.init" ver="5" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt101_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prbbstus','13','N,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('prbb001','6017') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt101_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aprt101.input" ver="5" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt101_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prbcseq,prbc001,prbc002,prbcsite,prbcunit,prbc003 FROM prbc_t WHERE prbcent=?  
       AND prbcdocno=? AND prbcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt101_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt101_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt101_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prbb_m.prbbunit,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite, 
       g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004,g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007, 
       g_prbb_m.prbb008,g_prbb_m.prbbstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aprt101.input.body" ver="5" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prbc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prbc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt101_b_fill()
            LET g_rec_b = g_prbc_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt101_cl USING g_enterprise,g_prbb_m.prbbdocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt101_cl:", STATUS, 1)
               CLOSE aprt101_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prbc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prbc_d[l_ac].prbcseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prbc_d_t.* = g_prbc_d[l_ac].*  #BACKUP
               CALL aprt101_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt101_set_no_entry_b(l_cmd)
               IF NOT aprt101_lock_b("prbc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt101_bcl INTO g_prbc_d[l_ac].prbcseq,g_prbc_d[l_ac].prbc001,g_prbc_d[l_ac].prbc002, 
                      g_prbc_d[l_ac].prbcsite,g_prbc_d[l_ac].prbcunit,g_prbc_d[l_ac].prbc003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prbc_d_t.prbcseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt101_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prbc_d[l_ac].* TO NULL 
            
            LET g_prbc_d_t.* = g_prbc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt101_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt101_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prbc_d[li_reproduce_target].* = g_prbc_d[li_reproduce].*
 
               LET g_prbc_d[li_reproduce_target].prbcseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prbc_t 
             WHERE prbcent = g_enterprise AND prbcdocno = g_prbb_m.prbbdocno
 
               AND prbcseq = g_prbc_d[l_ac].prbcseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbb_m.prbbdocno
               LET gs_keys[2] = g_prbc_d[g_detail_idx].prbcseq
               CALL aprt101_insert_b('prbc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prbc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prbc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt101_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prbc_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prbc_d.deleteElement(l_ac)
               NEXT FIELD prbcseq
            END IF
         
            IF g_prbc_d[l_ac].prbcseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prbc_t
                WHERE prbcent = g_enterprise AND prbcdocno = g_prbb_m.prbbdocno AND
 
                      prbcseq = g_prbc_d_t.prbcseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prbc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt101_bcl
               LET l_count = g_prbc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbb_m.prbbdocno
               LET gs_keys[2] = g_prbc_d[g_detail_idx].prbcseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt101_delete_b('prbc_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD prbcseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prbc_d[l_ac].prbcseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD prbcseq
            END IF
 
 
            #add-point:AFTER FIELD prbcseq
            {<point name="input.a.page1.prbcseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbcseq
            #add-point:BEFORE FIELD prbcseq
            {<point name="input.b.page1.prbcseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbcseq
            #add-point:ON CHANGE prbcseq
            {<point name="input.g.page1.prbcseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbc001
            
            #add-point:AFTER FIELD prbc001
            {<point name="input.a.page1.prbc001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbc001
            #add-point:BEFORE FIELD prbc001
            {<point name="input.b.page1.prbc001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbc001
            #add-point:ON CHANGE prbc001
            {<point name="input.g.page1.prbc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbc002
            #add-point:BEFORE FIELD prbc002
            {<point name="input.b.page1.prbc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbc002
            
            #add-point:AFTER FIELD prbc002
            {<point name="input.a.page1.prbc002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbc002
            #add-point:ON CHANGE prbc002
            {<point name="input.g.page1.prbc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbcsite
            #add-point:BEFORE FIELD prbcsite
            {<point name="input.b.page1.prbcsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbcsite
            
            #add-point:AFTER FIELD prbcsite
            {<point name="input.a.page1.prbcsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbcsite
            #add-point:ON CHANGE prbcsite
            {<point name="input.g.page1.prbcsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbcunit
            
            #add-point:AFTER FIELD prbcunit
            {<point name="input.a.page1.prbcunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbcunit
            #add-point:BEFORE FIELD prbcunit
            {<point name="input.b.page1.prbcunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbcunit
            #add-point:ON CHANGE prbcunit
            {<point name="input.g.page1.prbcunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbc003
            #add-point:BEFORE FIELD prbc003
            {<point name="input.b.page1.prbc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbc003
            
            #add-point:AFTER FIELD prbc003
            {<point name="input.a.page1.prbc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbc003
            #add-point:ON CHANGE prbc003
            {<point name="input.g.page1.prbc003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prbcseq
         ON ACTION controlp INFIELD prbcseq
            #add-point:ON ACTION controlp INFIELD prbcseq
            {<point name="input.c.page1.prbcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbc001
         ON ACTION controlp INFIELD prbc001
            #add-point:ON ACTION controlp INFIELD prbc001
            {<point name="input.c.page1.prbc001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbc002
         ON ACTION controlp INFIELD prbc002
            #add-point:ON ACTION controlp INFIELD prbc002
            {<point name="input.c.page1.prbc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbcsite
         ON ACTION controlp INFIELD prbcsite
            #add-point:ON ACTION controlp INFIELD prbcsite
            {<point name="input.c.page1.prbcsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbcunit
         ON ACTION controlp INFIELD prbcunit
            #add-point:ON ACTION controlp INFIELD prbcunit
            {<point name="input.c.page1.prbcunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbc003
         ON ACTION controlp INFIELD prbc003
            #add-point:ON ACTION controlp INFIELD prbc003
            {<point name="input.c.page1.prbc003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prbc_d[l_ac].* = g_prbc_d_t.*
               CLOSE aprt101_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prbc_d[l_ac].prbcseq,-263,1)
               LET g_prbc_d[l_ac].* = g_prbc_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prbc_t SET (prbcdocno,prbcseq,prbc001,prbc002,prbcsite,prbcunit,prbc003) = (g_prbb_m.prbbdocno, 
                   g_prbc_d[l_ac].prbcseq,g_prbc_d[l_ac].prbc001,g_prbc_d[l_ac].prbc002,g_prbc_d[l_ac].prbcsite, 
                   g_prbc_d[l_ac].prbcunit,g_prbc_d[l_ac].prbc003)
                WHERE prbcent = g_enterprise AND prbcdocno = g_prbb_m.prbbdocno 
 
                  AND prbcseq = g_prbc_d_t.prbcseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prbc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prbc_d[l_ac].* = g_prbc_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prbc_t",SQLCA.sqlcode,1)
                     LET g_prbc_d[l_ac].* = g_prbc_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbb_m.prbbdocno
               LET gs_keys_bak[1] = g_prbbdocno_t
               LET gs_keys[2] = g_prbc_d[g_detail_idx].prbcseq
               LET gs_keys_bak[2] = g_prbc_d_t.prbcseq
               CALL aprt101_update_b('prbc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prbb_m),util.JSON.stringify(g_prbc_d_t)
               LET g_log2 = util.JSON.stringify(g_prbb_m),util.JSON.stringify(g_prbc_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt101_unlock_b("prbc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prbc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prbc_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aprt101.input.head" ver="9" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_prbb_m.prbbunit,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite, 
          g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004,g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007, 
          g_prbb_m.prbb008,g_prbb_m.prbbstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prbbunit
            
            #add-point:AFTER FIELD prbbunit
            {<point name="input.a.prbbunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbunit
            #add-point:BEFORE FIELD prbbunit
            {<point name="input.b.prbbunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbbunit
            #add-point:ON CHANGE prbbunit
            {<point name="input.g.prbbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbdocdt
            #add-point:BEFORE FIELD prbbdocdt
            {<point name="input.b.prbbdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbdocdt
            
            #add-point:AFTER FIELD prbbdocdt
            {<point name="input.a.prbbdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbbdocdt
            #add-point:ON CHANGE prbbdocdt
            {<point name="input.g.prbbdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbdocno
            #add-point:BEFORE FIELD prbbdocno
            {<point name="input.b.prbbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbdocno
            
            #add-point:AFTER FIELD prbbdocno
            {<point name="input.a.prbbdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbbdocno
            #add-point:ON CHANGE prbbdocno
            {<point name="input.g.prbbdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb001
            #add-point:BEFORE FIELD prbb001
            {<point name="input.b.prbb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb001
            
            #add-point:AFTER FIELD prbb001
            {<point name="input.a.prbb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbb001
            #add-point:ON CHANGE prbb001
            {<point name="input.g.prbb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbsite
            #add-point:BEFORE FIELD prbbsite
            {<point name="input.b.prbbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbsite
            
            #add-point:AFTER FIELD prbbsite
            {<point name="input.a.prbbsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbbsite
            #add-point:ON CHANGE prbbsite
            {<point name="input.g.prbbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb002
            
            #add-point:AFTER FIELD prbb002
            {<point name="input.a.prbb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb002
            #add-point:BEFORE FIELD prbb002
            {<point name="input.b.prbb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbb002
            #add-point:ON CHANGE prbb002
            {<point name="input.g.prbb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb003
            
            #add-point:AFTER FIELD prbb003
            {<point name="input.a.prbb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb003
            #add-point:BEFORE FIELD prbb003
            {<point name="input.b.prbb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbb003
            #add-point:ON CHANGE prbb003
            {<point name="input.g.prbb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb004
            #add-point:BEFORE FIELD prbb004
            {<point name="input.b.prbb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb004
            
            #add-point:AFTER FIELD prbb004
            {<point name="input.a.prbb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbb004
            #add-point:ON CHANGE prbb004
            {<point name="input.g.prbb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb005
            #add-point:BEFORE FIELD prbb005
            {<point name="input.b.prbb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb005
            
            #add-point:AFTER FIELD prbb005
            {<point name="input.a.prbb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbb005
            #add-point:ON CHANGE prbb005
            {<point name="input.g.prbb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb006
            
            #add-point:AFTER FIELD prbb006
            {<point name="input.a.prbb006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb006
            #add-point:BEFORE FIELD prbb006
            {<point name="input.b.prbb006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbb006
            #add-point:ON CHANGE prbb006
            {<point name="input.g.prbb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb007
            
            #add-point:AFTER FIELD prbb007
            {<point name="input.a.prbb007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb007
            #add-point:BEFORE FIELD prbb007
            {<point name="input.b.prbb007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbb007
            #add-point:ON CHANGE prbb007
            {<point name="input.g.prbb007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbb008
            #add-point:BEFORE FIELD prbb008
            {<point name="input.b.prbb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbb008
            
            #add-point:AFTER FIELD prbb008
            {<point name="input.a.prbb008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbb008
            #add-point:ON CHANGE prbb008
            {<point name="input.g.prbb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbbstus
            #add-point:BEFORE FIELD prbbstus
            {<point name="input.b.prbbstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbbstus
            
            #add-point:AFTER FIELD prbbstus
            {<point name="input.a.prbbstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbbstus
            #add-point:ON CHANGE prbbstus
            {<point name="input.g.prbbstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prbbunit
         ON ACTION controlp INFIELD prbbunit
            #add-point:ON ACTION controlp INFIELD prbbunit
            {<point name="input.c.prbbunit" />}
            #END add-point
 
         #Ctrlp:input.c.prbbdocdt
         ON ACTION controlp INFIELD prbbdocdt
            #add-point:ON ACTION controlp INFIELD prbbdocdt
            {<point name="input.c.prbbdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prbbdocno
         ON ACTION controlp INFIELD prbbdocno
            #add-point:ON ACTION controlp INFIELD prbbdocno
            {<point name="input.c.prbbdocno" />}
            #END add-point
 
         #Ctrlp:input.c.prbb001
         ON ACTION controlp INFIELD prbb001
            #add-point:ON ACTION controlp INFIELD prbb001
            {<point name="input.c.prbb001" />}
            #END add-point
 
         #Ctrlp:input.c.prbbsite
         ON ACTION controlp INFIELD prbbsite
            #add-point:ON ACTION controlp INFIELD prbbsite
            {<point name="input.c.prbbsite" />}
            #END add-point
 
         #Ctrlp:input.c.prbb002
         ON ACTION controlp INFIELD prbb002
            #add-point:ON ACTION controlp INFIELD prbb002
            {<point name="input.c.prbb002" />}
            #END add-point
 
         #Ctrlp:input.c.prbb003
         ON ACTION controlp INFIELD prbb003
            #add-point:ON ACTION controlp INFIELD prbb003
            {<point name="input.c.prbb003" />}
            #END add-point
 
         #Ctrlp:input.c.prbb004
         ON ACTION controlp INFIELD prbb004
            #add-point:ON ACTION controlp INFIELD prbb004
            {<point name="input.c.prbb004" />}
            #END add-point
 
         #Ctrlp:input.c.prbb005
         ON ACTION controlp INFIELD prbb005
            #add-point:ON ACTION controlp INFIELD prbb005
            {<point name="input.c.prbb005" />}
            #END add-point
 
         #Ctrlp:input.c.prbb006
         ON ACTION controlp INFIELD prbb006
            #add-point:ON ACTION controlp INFIELD prbb006
            {<point name="input.c.prbb006" />}
            #END add-point
 
         #Ctrlp:input.c.prbb007
         ON ACTION controlp INFIELD prbb007
            #add-point:ON ACTION controlp INFIELD prbb007
            {<point name="input.c.prbb007" />}
            #END add-point
 
         #Ctrlp:input.c.prbb008
         ON ACTION controlp INFIELD prbb008
            #add-point:ON ACTION controlp INFIELD prbb008
            {<point name="input.c.prbb008" />}
            #END add-point
 
         #Ctrlp:input.c.prbbstus
         ON ACTION controlp INFIELD prbbstus
            #add-point:ON ACTION controlp INFIELD prbbstus
            {<point name="input.c.prbbstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prbb_m.prbbdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prbb_t (prbbent,prbbunit,prbbdocdt,prbbdocno,prbb001,prbbsite,prbb002,prbb003, 
                   prbb004,prbb005,prbb006,prbb007,prbb008,prbbstus,prbbownid,prbbowndp,prbbcrtid,prbbcrtdp, 
                   prbbcrtdt,prbbcnfid,prbbcnfdt)
               VALUES (g_enterprise,g_prbb_m.prbbunit,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno,g_prbb_m.prbb001, 
                   g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004,g_prbb_m.prbb005, 
                   g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
                   g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbcnfid, 
                   g_prbb_m.prbbcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prbb_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt101_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prbb_t SET (prbbunit,prbbdocdt,prbbdocno,prbb001,prbbsite,prbb002,prbb003,prbb004, 
                   prbb005,prbb006,prbb007,prbb008,prbbstus,prbbownid,prbbowndp,prbbcrtid,prbbcrtdp, 
                   prbbcrtdt,prbbcnfid,prbbcnfdt) = (g_prbb_m.prbbunit,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno, 
                   g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
                   g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus, 
                   g_prbb_m.prbbownid,g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt, 
                   g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt)
                WHERE prbbent = g_enterprise AND prbbdocno = g_prbbdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prbb_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prbb_m_t)
               LET g_log2 = util.JSON.stringify(g_prbb_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aprt101.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prbbdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prbcseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aprt101.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt101_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prbc_d.clear()   
 
 
   INITIALIZE g_prbb_m.* LIKE prbb_t.*             #DEFAULT 設定
   
   LET g_prbbdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prbb_m.prbbownid = g_user
      LET g_prbb_m.prbbowndp = g_dept
      LET g_prbb_m.prbbcrtid = g_user
      LET g_prbb_m.prbbcrtdp = g_dept 
      LET g_prbb_m.prbbcrtdt = cl_get_current()
      LET g_prbb_m.prbbmodid = ""
      LET g_prbb_m.prbbmoddt = ""
      LET g_prbb_m.prbbstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prbb_m.prbb001 = "2"
      LET g_prbb_m.prbbstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt101_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prbb_m.* = g_prbb_m_t.*
         CALL aprt101_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prbc_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
   
   LET g_wc = g_wc,  
              " OR ( prbbent = '" ||g_enterprise|| "' AND",
              " prbbdocno = '", g_prbb_m.prbbdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt101_cl
   
END FUNCTION
]]>
</section>
  <section id="aprt101.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt101_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prbc_t
                  (prbcent,
                   prbcdocno,
                   prbcseq
                   ,prbc001,prbc002,prbcsite,prbcunit,prbc003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prbc_d[g_detail_idx].prbc001,g_prbc_d[g_detail_idx].prbc002,g_prbc_d[g_detail_idx].prbcsite, 
                       g_prbc_d[g_detail_idx].prbcunit,g_prbc_d[g_detail_idx].prbc003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prbc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aprt101.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt101_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt101_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prbc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt101_bcl USING g_enterprise,
                                       g_prbb_m.prbbdocno,g_prbc_d[g_detail_idx].prbcseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt101_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt101.main" ver="10" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prbbunit,'',prbbdocdt,prbbdocno,prbb001,prbbsite,prbb002,'',prbb003,'', 
       prbb004,prbb005,prbb006,'',prbb007,'',prbb008,prbbstus,prbbownid,'',prbbowndp,'',prbbcrtid,'', 
       prbbcrtdp,'',prbbcrtdt,prbbmodid,'',prbbmoddt,prbbcnfid,'',prbbcnfdt", 
                      " FROM prbb_t",
                      " WHERE prbbent= ? AND prbbdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt101_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prbbunit,prbbdocdt,prbbdocno,prbb001,prbbsite,prbb002,prbb003,prbb004, 
       prbb005,prbb006,prbb007,prbb008,prbbstus,prbbownid,prbbowndp,prbbcrtid,prbbcrtdp,prbbcrtdt,prbbmodid, 
       prbbmoddt,prbbcnfid,prbbcnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.prba003 ,t4.oofa011 ,t5.ooefl003 , 
       t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011",
               " FROM prbb_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prbbunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=prbb002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prba_t t3 ON t3.prbaent='"||g_enterprise||"' AND t3.prba001=prbb002 AND t3.prba002=prbb003  ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prbb006  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prbb007 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prbbownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prbbowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prbbcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prbbcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prbbmodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=prbbcnfid  ",
 
               " WHERE prbbent = '" ||g_enterprise|| "' AND prbbdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt101_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt101 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt101_init()   
 
      #進入選單 Menu (="N")
      CALL aprt101_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt101
      
   END IF 
   
   CLOSE aprt101_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aprt101.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt101_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

 
   ERROR ""
  
   LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
   CALL s_transaction_begin()
   
   OPEN aprt101_cl USING g_enterprise,g_prbb_m.prbbdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt101_cl:", STATUS, 1)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbb_m.prbbdocno,SQLCA.sqlcode,0)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt101_show()
   WHILE TRUE
      LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prbb_m.prbbmodid = g_user 
LET g_prbb_m.prbbmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt101_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prbb_m.* = g_prbb_m_t.*
         CALL aprt101_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prbb_t SET (prbbmodid,prbbmoddt) = (g_prbb_m.prbbmodid,g_prbb_m.prbbmoddt)
       WHERE prbbent = g_enterprise AND prbbdocno = g_prbbdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prbb_m.prbbdocno != g_prbbdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prbc_t SET prbcdocno = g_prbb_m.prbbdocno
 
          WHERE prbcent = g_enterprise AND prbcdocno = g_prbbdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prbc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prbc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prbb_m.prbbdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt101_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prbb_m.prbbdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aprt101.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt101.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aprt101.query" ver="5" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt101_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prbc_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt101_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt101_browser_fill("")
      CALL aprt101_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt101_filter_show('prbbunit')
   CALL aprt101_filter_show('prbbdocdt')
   CALL aprt101_filter_show('prbbdocno')
   CALL aprt101_filter_show('prbb002')
   CALL aprt101_filter_show('prbb003')
   CALL aprt101_filter_show('prbb001')
   CALL aprt101_filter_show('prbb004')
   CALL aprt101_filter_show('prbb005')
   CALL aprt101_filter_show('prbb006')
   CALL aprt101_filter_show('prbb007')
   CALL aprt101_filter_show('prbb008')
   CALL aprt101_filter_show('prbbsite')
   CALL aprt101_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt101_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt101.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt101_reproduce()
   DEFINE l_newno     LIKE prbb_t.prbbdocno 
   DEFINE l_oldno     LIKE prbb_t.prbbdocno 
 
   DEFINE l_master    RECORD LIKE prbb_t.*
   DEFINE l_detail    RECORD LIKE prbc_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prbbdocno_t = g_prbb_m.prbbdocno
 
    
   LET g_prbb_m.prbbdocno = ""
 
    
   CALL aprt101_set_entry('a')
   CALL aprt101_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prbb_m.prbbownid = g_user
      LET g_prbb_m.prbbowndp = g_dept
      LET g_prbb_m.prbbcrtid = g_user
      LET g_prbb_m.prbbcrtdp = g_dept 
      LET g_prbb_m.prbbcrtdt = cl_get_current()
      LET g_prbb_m.prbbmodid = ""
      LET g_prbb_m.prbbmoddt = ""
      LET g_prbb_m.prbbstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt101_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prbbdocno = '", g_prbb_m.prbbdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt101.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt101_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prbbdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt101.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt101_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aprt101.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt101_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prbbdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt101.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt101_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aprt101.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt101_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prbb_m.prbbdocno
   LET g_pk_array[1].column = 'prbbdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aprt101.show" ver="10" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt101_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prbb_m_t.* = g_prbb_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt101_b_fill() #單身填充
      CALL aprt101_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prbb_m.prbbownid_desc = cl_get_username(g_prbb_m.prbbownid)
      #LET g_prbb_m.prbbowndp_desc = cl_get_deptname(g_prbb_m.prbbowndp)
      #LET g_prbb_m.prbbcrtid_desc = cl_get_username(g_prbb_m.prbbcrtid)
      #LET g_prbb_m.prbbcrtdp_desc = cl_get_deptname(g_prbb_m.prbbcrtdp)
      #LET g_prbb_m.prbbmodid_desc = cl_get_username(g_prbb_m.prbbmodid)
      #LET g_prbb_m.prbbcnfid_desc = cl_get_deptname(g_prbb_m.prbbcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt101_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prbb_m.prbbunit,g_prbb_m.prbbunit_desc,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno,g_prbb_m.prbb001, 
       g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb002_desc,g_prbb_m.prbb003,g_prbb_m.prbb003_desc, 
       g_prbb_m.prbb004,g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb006_desc,g_prbb_m.prbb007,g_prbb_m.prbb007_desc, 
       g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp, 
       g_prbb_m.prbbowndp_desc,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdp_desc, 
       g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid, 
       g_prbb_m.prbbcnfid_desc,g_prbb_m.prbbcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prbb_m.prbbstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prbc_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt101_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt101.signature" ver="4" status="" src="s">
<![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aprt101_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aprt101_cl USING g_enterprise,g_prbb_m.prbbdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt101_cl:", STATUS, 1)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt101_cl INTO g_prbb_m.prbbunit,g_prbb_m.prbbunit_desc,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno, 
       g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb002_desc,g_prbb_m.prbb003,g_prbb_m.prbb003_desc, 
       g_prbb_m.prbb004,g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb006_desc,g_prbb_m.prbb007,g_prbb_m.prbb007_desc, 
       g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp, 
       g_prbb_m.prbbowndp_desc,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdp_desc, 
       g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid, 
       g_prbb_m.prbbcnfid_desc,g_prbb_m.prbbcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbb_m.prbbdocno,SQLCA.sqlcode,0)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aprt101_show()
   CALL aprt101_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prbb_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prbc_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aprt101_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt101_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt101_ui_headershow()
   CALL aprt101_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aprt101_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aprt101_cl USING g_enterprise,g_prbb_m.prbbdocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt101_cl:", STATUS, 1)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt101_cl INTO g_prbb_m.prbbunit,g_prbb_m.prbbunit_desc,g_prbb_m.prbbdocdt,g_prbb_m.prbbdocno, 
       g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb002_desc,g_prbb_m.prbb003,g_prbb_m.prbb003_desc, 
       g_prbb_m.prbb004,g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb006_desc,g_prbb_m.prbb007,g_prbb_m.prbb007_desc, 
       g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp, 
       g_prbb_m.prbbowndp_desc,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdp_desc, 
       g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid, 
       g_prbb_m.prbbcnfid_desc,g_prbb_m.prbbcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbb_m.prbbdocno,SQLCA.sqlcode,0)
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aprt101_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aprt101_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt101_ui_headershow()  
   CALL aprt101_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
</section>
  <section id="aprt101.state_change" ver="9" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt101_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prbb_m.prbbdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prbb_m.prbbstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt101_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt101_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prbb_t SET prbbstus = lc_state 
    WHERE prbbent = g_enterprise AND prbbdocno = g_prbb_m.prbbdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_prbb_m.prbbstus = lc_state
      DISPLAY BY NAME g_prbb_m.prbbstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aprt101.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt101_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prbbdocno = g_prbb_m.prbbdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aprt101.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt101_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aprt101.ui_dialog" ver="37" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt101_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt101_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt101_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prbbdocno = g_prbbdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt101_fetch('') # reload data
               LET l_ac = 1
               CALL aprt101_ui_detailshow() #Setting the current row 
      
               CALL aprt101_idx_chk()
               #NEXT FIELD prbcseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prbc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt101_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt101_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt101_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt101_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt101_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt101_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt101_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt101_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt101_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt101_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt101_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt101_idx_chk()
            
         ON ACTION previous
            CALL aprt101_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt101_idx_chk()
            
         ON ACTION jump
            CALL aprt101_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt101_idx_chk()
            
         ON ACTION next
            CALL aprt101_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt101_idx_chk()
            
         ON ACTION last
            CALL aprt101_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt101_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prbcseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt101_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt101_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt101_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt101_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aprt101_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt101_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt101_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt101_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt101_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prbb_m.prbbdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aprt101.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt101_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prbb_m.prbbdocno = g_browser[g_current_idx].b_prbbdocno   
 
   EXECUTE aprt101_master_referesh USING g_prbb_m.prbbdocno INTO g_prbb_m.prbbunit,g_prbb_m.prbbdocdt, 
       g_prbb_m.prbbdocno,g_prbb_m.prbb001,g_prbb_m.prbbsite,g_prbb_m.prbb002,g_prbb_m.prbb003,g_prbb_m.prbb004, 
       g_prbb_m.prbb005,g_prbb_m.prbb006,g_prbb_m.prbb007,g_prbb_m.prbb008,g_prbb_m.prbbstus,g_prbb_m.prbbownid, 
       g_prbb_m.prbbowndp,g_prbb_m.prbbcrtid,g_prbb_m.prbbcrtdp,g_prbb_m.prbbcrtdt,g_prbb_m.prbbmodid, 
       g_prbb_m.prbbmoddt,g_prbb_m.prbbcnfid,g_prbb_m.prbbcnfdt,g_prbb_m.prbbunit_desc,g_prbb_m.prbb002_desc, 
       g_prbb_m.prbb003_desc,g_prbb_m.prbb006_desc,g_prbb_m.prbb007_desc,g_prbb_m.prbbownid_desc,g_prbb_m.prbbowndp_desc, 
       g_prbb_m.prbbcrtid_desc,g_prbb_m.prbbcrtdp_desc,g_prbb_m.prbbmodid_desc,g_prbb_m.prbbcnfid_desc 

   CALL aprt101_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt101.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt101_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt101_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt101.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt101_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prbc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prbc_t 
         SET (prbcdocno,
              prbcseq
              ,prbc001,prbc002,prbcsite,prbcunit,prbc003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prbc_d[g_detail_idx].prbc001,g_prbc_d[g_detail_idx].prbc002,g_prbc_d[g_detail_idx].prbcsite, 
                  g_prbc_d[g_detail_idx].prbcunit,g_prbc_d[g_detail_idx].prbc003) 
         WHERE prbcent = g_enterprise AND prbcdocno = ps_keys_bak[1] AND prbcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prbc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prbc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>