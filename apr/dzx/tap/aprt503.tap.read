<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprt503" std_prog="aprt503" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.aprt503_prfiunit_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfiunit
PRIVATE FUNCTION aprt503_prfiunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prfiunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfi_m.prfiunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfi_m.prfiunit_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfi003_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfi003
PRIVATE FUNCTION aprt503_prfi003_ref()
   DEFINE l_ooef019   LIKE ooef_t.ooef019
   SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_prfi_m.prfiunit 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooef019
   LET g_ref_fields[2] = g_prfi_m.prfi003
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001=? AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfi_m.prfi003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfi_m.prfi003_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfi002_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfi002
PRIVATE FUNCTION aprt503_prfi002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prfi002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfi_m.prfi002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfi_m.prfi002_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfi006_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfi006
PRIVATE FUNCTION aprt503_prfi006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prfi006
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfi_m.prfi006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfi_m.prfi006_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfi007_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfi007
PRIVATE FUNCTION aprt503_prfi007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prfi007
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfi_m.prfi007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfi_m.prfi007_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfi006_display" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfi006
PRIVATE FUNCTION aprt503_prfi006_display()
   SELECT ooag003 INTO g_prfi_m.prfi007
     FROM ooag_t
    WHERE ooagent= g_enterprise
      AND ooag001= g_prfi_m.prfi006 
   CALL aprt503_prfi007_ref()
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfj001_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfj001
PRIVATE FUNCTION aprt503_prfj001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfj_d[l_ac].prfj001
   CALL ap_ref_array2(g_ref_fields,"SELECT prfgl003 FROM prfgl_t WHERE prfglent='"||g_enterprise||"' AND prfgl001=? AND prfgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfj_d[l_ac].prfj001_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_prfj_d[l_ac].prfj001_desc TO s_detail1[l_ac].prfj001_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfj001" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prfj001
PRIVATE FUNCTION aprt503_prfj001()
   DEFINE l_cnt   LIKE type_t.num5
   DEFINE l_cnt1  LIKE type_t.num5
   
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT count(*) INTO l_cnt FROM  prfj_t WHERE prfjent = g_enterprise
      AND prfjdocno = g_prfi_m.prfidocno AND prfj001 = g_prfj_d[l_ac].prfj001
   IF l_cnt>=1 THEN
      LET g_errno = "apr-00212"
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt503_create_prfjseq" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prfjseq
PRIVATE FUNCTION aprt503_create_prfjseq()
   SELECT max(prfjseq)+1 INTO g_prfj_d[l_ac].prfjseq
     FROM prfj_t WHERE prfjent = g_enterprise AND prfjdocno = g_prfi_m.prfidocno
   IF cl_null(g_prfj_d[l_ac].prfjseq) THEN
      LET g_prfj_d[l_ac].prfjseq = 1
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.aprt503_create_prfkseq" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prfkseq
PRIVATE FUNCTION aprt503_create_prfkseq()
   SELECT max(prfkseq)+1 INTO g_prfj2_d[l_ac].prfkseq
     FROM prfk_t WHERE prfkent = g_enterprise AND prfkdocno = g_prfi_m.prfidocno
   IF cl_null(g_prfj2_d[l_ac].prfkseq) THEN
      LET g_prfj2_d[l_ac].prfkseq = 1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfk002" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prfk002
PRIVATE FUNCTION aprt503_prfk002()
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_cnt1    LIKE type_t.num5
   
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   CASE g_prfj2_d[l_ac].prfk001
      WHEN '1'
         SELECT count(*) INTO l_cnt FROM prfc_t WHERE prfcent = g_enterprise AND prfc001 = g_prfj2_d[l_ac].prfk002
         IF l_cnt<=0 THEN
            LET g_errno="apr-00153"
         ELSE
            SELECT count(*) INTO l_cnt1 FROM prfc_t WHERE prfcent = g_enterprise AND prfc001 = g_prfj2_d[l_ac].prfk002
               AND prfcstus='Y'
            IF l_cnt1<=0 THEN
               LET g_errno="apr-00154"
            END IF            
         END IF
      WHEN '2'
         SELECT count(*) INTO l_cnt FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_prfj2_d[l_ac].prfk002
            AND pmaa002 IN ('2','3')
         IF l_cnt<=0 THEN
            LET g_errno="apm-00026"
         ELSE
            SELECT count(*) INTO l_cnt1 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_prfj2_d[l_ac].prfk002
               AND pmaa002 IN ('2','3')
               AND pmaastus='Y'
            IF l_cnt1<=0 THEN
               LET g_errno="apm-00027"
            END IF            
         END IF
   END CASE
   IF cl_null(g_errno) THEN
      SELECT count(*) INTO l_cnt FROM prfk_t WHERE prfkent = g_enterprise
         AND prfkdocno = g_prfi_m.prfidocno AND prfk001 = g_prfj2_d[l_ac].prfk001
         AND prfk002 = g_prfj2_d[l_ac].prfk002
      IF l_cnt>=1 THEN
         LET g_errno = "apr-00213"
      END IF      
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfk002_ref" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prfk002
PRIVATE FUNCTION aprt503_prfk002_ref()
   IF g_prfj2_d[l_ac].prfk001 ='1' THEN
      SELECT prfcl003 INTO g_prfj2_d[l_ac].prfk002_desc
        FROM prfcl_t
       WHERE prfclent = g_enterprise AND prfcl001 =  g_prfj2_d[l_ac].prfk002 
         AND prfcl002 = g_dlang         
   END IF
   IF g_prfj2_d[l_ac].prfk001 ='2' THEN
      SELECT pmaal003 INTO g_prfj2_d[l_ac].prfk002_desc
        FROM pmaal_t
       WHERE pmaalent = g_enterprise AND pmaal001 =  g_prfj2_d[l_ac].prfk002 
         AND pmaal002 = g_dlang         
   END IF
   DISPLAY g_prfj2_d[l_ac].prfk002_desc TO s_detail2[l_ac].prfk002_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_create_prflseq" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prflseq
PRIVATE FUNCTION aprt503_create_prflseq()
   SELECT max(prflseq)+1 INTO g_prfj3_d[l_ac].prflseq
     FROM prfl_t WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno
   IF cl_null(g_prfj3_d[l_ac].prflseq) THEN
      LET g_prfj3_d[l_ac].prflseq = 1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfl001" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prfl001
PRIVATE FUNCTION aprt503_prfl001()
   DEFINE l_cnt  LIKE type_t.num5
   LET l_cnt = 0
   LET g_errno = NULL
   SELECT count(*) INTO l_cnt FROM prfl_t WHERE prflent = g_enterprise
      AND prfldocno = g_prfi_m.prfidocno AND prfl001 = g_prfj3_d[l_ac].prfl001
   IF l_cnt >0 THEN
      LET g_errno = "apr-00214"
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfl001_ref" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfl001
PRIVATE FUNCTION aprt503_prfl001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfj3_d[l_ac].prfl001_desc = '', g_rtn_fields[1] , ''
   LET g_prfj3_d[l_ac].imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY g_prfj3_d[l_ac].prfl001_desc TO s_detail3[l_ac].prfl001_desc
   DISPLAY g_prfj3_d[l_ac].imaal004 TO s_detail3[l_ac].imaal004
   SELECT imaa106 INTO g_prfj3_d[l_ac].prfl006 FROM imaa_t
    WHERE imaaent = g_enterprise AND imaa001 =  g_prfj3_d[l_ac].prfl001
   DISPLAY g_prfj3_d[l_ac].prfl006 TO s_detail3[l_ac].prfl006 
   CALL aprt503_prfl006_ref()  
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfl002_ref" order="16" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfl002
PRIVATE FUNCTION aprt503_prfl002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfj3_d[l_ac].prfl002_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prfj3_d[l_ac].prfl002_desc to s_detail3[l_ac].prfl002_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfl003_ref" order="17" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfl003
PRIVATE FUNCTION aprt503_prfl003_ref()
   DEFINE l_ooef019   LIKE ooef_t.ooef019
   SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_prfi_m.prfiunit 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooef019
   LET g_ref_fields[2] = g_prfj3_d[l_ac].prfl003
   
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001=? AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfj3_d[l_ac].prfl003_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_prfj3_d[l_ac].prfl003_desc  to s_detail3[l_ac].prfl003_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_prfl006_ref" order="18" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prfl006
PRIVATE FUNCTION aprt503_prfl006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfj3_d[l_ac].prfl006_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prfj3_d[l_ac].prfl006_desc TO s_detail3[l_ac].prfl006_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt503_count_prfl009" order="19" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#count prfl009
PRIVATE FUNCTION aprt503_count_prfl009()
   IF cl_null(g_prfj3_d[l_ac].prfl007) OR g_prfj3_d[l_ac].prfl007=0 THEN
      LET g_prfj3_d[l_ac].prfl009 =100
   END IF
   IF cl_null(g_prfj3_d[l_ac].prfl008) OR g_prfj3_d[l_ac].prfl008=0 THEN
      LET g_prfj3_d[l_ac].prfl009 =0
   ELSE
      IF NOT cl_null(g_prfj3_d[l_ac].prfl007) AND NOT cl_null(g_prfj3_d[l_ac].prfl008) THEN
         LET g_prfj3_d[l_ac].prfl009 = (g_prfj3_d[l_ac].prfl008-g_prfj3_d[l_ac].prfl007)/g_prfj3_d[l_ac].prfl008*100
      END IF
   END IF 
   DISPLAY  g_prfj3_d[l_ac].prfl009 TO s_detail3[l_ac].prfl009   
END FUNCTION]]>
  </point>
  <point name="function.aprt503_fill" order="20" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#fill prfl_t
PRIVATE FUNCTION aprt503_fill()
   DEFINE l_sql      STRING
   DEFINE l_sql1     STRING
   DEFINE l_sql2     STRING
   DEFINE l_sql3     STRING
   DEFINE l_sql4     STRING
   DEFINE l_sql_sum     STRING
   DEFINE l_prfj001  LIKE prfj_t.prfj001
   DEFINE l_prfh002  LIKE prfh_t.prfh002
   DEFINE l_prfh003  LIKE prfh_t.prfh003
   DEFINE l_prfh004  LIKE prfh_t.prfh004
   DEFINE l_success  LIKE type_t.num5
   
   LET l_success = TRUE
   
   CALL g_prfj3_d.clear()
   LET l_sql = " SELECT DISTINCT imaa001,imaa106 ",
               "   FROM imaa_t ",
               "  WHERE imaaent=",g_enterprise," AND imaastus='Y' "
#   LET l_sql2 = " SELECT DISTINCT prfh002,prfh003,prfh004 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? AND prfhstus='Y' " 
#   PREPARE l_sql2_prfh002_pre FROM l_sql2
#   DECLARE l_sql2_prfh002_cs CURSOR FOR  l_sql2_prfh002_pre
#   FOREACH  l_sql2_prfh002_cs using g_prfj_d[l_ac].prfj001 into   
   IF NOT cl_null(g_prfj_d_t.prfjseq) THEN
      LET l_sql1 = " SELECT DISTINCT prfj001 FROM prfj_t WHERE prfjent=",g_enterprise," AND prfjdocno='",g_prfi_m.prfidocno,"' ",
                   "    AND prfjseq = ",g_prfj_d_t.prfjseq
   ELSE
      LET l_sql1 = " SELECT DISTINCT prfj001 FROM prfj_t WHERE prfjent=",g_enterprise," AND prfjdocno='",g_prfi_m.prfidocno,"' ",
                   "    AND prfjseq = ",g_prfj_d[l_ac].prfjseq
   END IF   
   PREPARE l_sql1_prfj001_pre FROM l_sql1
   DECLARE l_sql1_prfj001_cs CURSOR FOR  l_sql1_prfj001_pre
   
   LET l_sql2 = " SELECT DISTINCT prfh002 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? AND prfhstus='Y' " 
   PREPARE l_sql2_prfh002_pre FROM l_sql2
   DECLARE l_sql2_prfh002_cs CURSOR FOR  l_sql2_prfh002_pre
   LET l_sql3 = " SELECT DISTINCT prfh003 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? AND prfhstus='Y' ", 
                "    AND prfh002=? "
   PREPARE l_sql3_prfh003_pre FROM l_sql3
   DECLARE l_sql3_prfh003_cs CURSOR FOR  l_sql3_prfh003_pre 
   LET l_sql4 = " SELECT DISTINCT prfh004 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? " ,
                "    AND prfh002=? AND prfh003=? AND prfhstus='Y' " 
   PREPARE l_sql4_prfh004_pre FROM l_sql4
   DECLARE l_sql4_prfh004_cs CURSOR FOR  l_sql4_prfh004_pre
   LET l_sql4="1<>1"
   LET l_sql3="1=1"
   LET l_sql2="1<>1"
   LET l_sql1="1<>1"
   FOREACH  l_sql1_prfj001_cs INTO l_prfj001
   FOREACH  l_sql2_prfh002_cs USING l_prfj001 INTO l_prfh002
      FOREACH l_sql3_prfh003_cs USING l_prfj001,l_prfh002 INTO l_prfh003
         FOREACH l_sql4_prfh004_cs USING l_prfj001,l_prfh002,l_prfh003 INTO l_prfh004
            CASE l_prfh003
               WHEN '4'
                  LET l_sql4 = l_sql4," OR imaa001='",l_prfh004,"' " 
               WHEN '5'
                  LET l_sql4 = l_sql4," OR imaa009='",l_prfh004,"' "
               WHEN '6'
                  LET l_sql4 = l_sql4," OR imaa122='",l_prfh004,"' "
               WHEN '7'
                  LET l_sql4 = l_sql4," OR imaa131='",l_prfh004,"' "
               WHEN '8'
                  LET l_sql4 = l_sql4," OR imaa126='",l_prfh004,"' "
               WHEN '9'
                  LET l_sql4 = l_sql4," OR imaa127='",l_prfh004,"' "
               WHEN 'A'
                  LET l_sql4 = l_sql4," OR imaa128='",l_prfh004,"' "
               WHEN 'B'
                  LET l_sql4 = l_sql4," OR imaa129='",l_prfh004,"' "
               WHEN 'C'
                  LET l_sql4 = l_sql4," OR imaa132='",l_prfh004,"' "
               WHEN 'D'
                  LET l_sql4 = l_sql4," OR imaa133='",l_prfh004,"' "
               WHEN 'E'
                  LET l_sql4 = l_sql4," OR imaa134='",l_prfh004,"' "
               WHEN 'F'
                  LET l_sql4 = l_sql4," OR imaa135='",l_prfh004,"' "
               WHEN 'G'
                  LET l_sql4 = l_sql4," OR imaa136='",l_prfh004,"' "
               WHEN 'H'
                  LET l_sql4 = l_sql4," OR imaa137='",l_prfh004,"' "
               WHEN 'I'
                  LET l_sql4 = l_sql4," OR imaa138='",l_prfh004,"' "
               WHEN 'J'
                  LET l_sql4 = l_sql4," OR imaa139='",l_prfh004,"' "
               WHEN 'K'
                  LET l_sql4 = l_sql4," OR imaa140='",l_prfh004,"' "
               WHEN 'L'
                  LET l_sql4 = l_sql4," OR imaa141='",l_prfh004,"' "
         
            END CASE
            LET l_prfh004=null
         END FOREACH
         LET l_sql3 = l_sql3," AND (",l_sql4,") "
         LET l_sql4="1<>1"
         LET l_prfh003=null
      END FOREACH
      LET l_sql2 = l_sql2," OR (",l_sql3,") "
      LET l_sql3="1=1"
      LET l_prfh003=null 
   END FOREACH
      LET l_sql1 = l_sql1," OR (",l_sql2,") "
      LET l_sql2="1<>1" 
   END FOREACH   
   LET l_sql = l_sql," AND ( ",l_sql1," )" 
#   LET l_sql_sum = " INSERT INTO prfl_t(prflent,prflunit,prflsite,prfldocno,prflseq,prfl001,",
#               "  prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013) ",
#               " SELECT ",g_enterprise,",'",g_prfi_m.prfiunit,"','",g_prfi_m.prfisite,"','",g_prfi_m.prfidocno,"',",
#               "       ROWNUM,imaa001,'",g_prfi_m.prfi002,"','",g_prfi_m.prfi003,"','",g_prfi_m.prfi004,"','",g_prfi_m.prfi005,"',",
#               "       imaa106,0,0,0,0,0,0,0 ",
#               "   FROM (",l_sql,") "               
#   PREPARE l_sql_pre FROM l_sql_sum
#   EXECUTE l_sql_pre
#   IF SQLCA.sqlcode THEN
#      CALL cl_err("",SQLCA.sqlcode,1)
#      LET l_success = FALSE
#      RETURN l_success
#   END IF   
#   RETURN l_success
   RETURN l_sql
END FUNCTION]]>
  </point>
  <point name="function.aprt503_insert_prfl" order="21" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#fill prfl_t
PRIVATE FUNCTION aprt503_insert_prfl(p_sql)
   DEFINE p_sql      STRING
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_sql_sum  STRING
   DEFINE l_max      LIKE type_t.num5
   DEFINE l_prflseq  LIKE prfl_t.prflseq
   DEFINE l_prfl001  LIKE prfl_t.prfl001
   DEFINE l_prfl006  LIKE prfl_t.prfl006
   
   LET l_success = TRUE
#   LET l_sql_sum = " INSERT INTO prfl_t(prflent,prflunit,prflsite,prfldocno,prflseq,prfl001,",
#               "  prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013) ",
#               " SELECT ",g_enterprise,",'",g_prfi_m.prfiunit,"','",g_prfi_m.prfisite,"','",g_prfi_m.prfidocno,"',",
#               "       ROWNUM,imaa001,'",g_prfi_m.prfi002,"','",g_prfi_m.prfi003,"','",g_prfi_m.prfi004,"','",g_prfi_m.prfi005,"',",
#               "       imaa106,0,0,0,0,0,0,0 ",
#               "   FROM (",p_sql,") a ",
#               "  WHERE a.imaa001 NOT IN ( SELECT prfl_t.prfl001 FROM prfl_t WHERE  prflent=",g_enterprise," AND prfldocno='",g_prfi_m.prfidocno,"' ) "               
#   PREPARE l_sql_pre FROM l_sql_sum
#   EXECUTE l_sql_pre
#   IF SQLCA.sqlcode THEN
#      CALL cl_err("",SQLCA.sqlcode,1)
#      LET l_success = FALSE
#      RETURN l_success
#   END IF
   LET l_sql_sum =  " SELECT imaa001,imaa106 ",
                    "   FROM (",p_sql,") a ",
                    "  WHERE a.imaa001 NOT IN ( SELECT prfl_t.prfl001 FROM prfl_t WHERE  prflent=",g_enterprise," AND prfldocno='",g_prfi_m.prfidocno,"' ) ",
                    "    ORDER BY imaa001 "                    
   PREPARE l_sql_pre1 FROM l_sql_sum
   DECLARE l_sql_cs1 CURSOR FOR l_sql_pre1
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,1)
      LET l_success = FALSE
      RETURN l_success
   END IF
   SELECT max(prflseq) INTO l_max FROM prfl_t WHERE prflent= g_enterprise AND prfldocno=g_prfi_m.prfidocno
   IF cl_null(l_max) THEN LET l_max=0 END IF
   LET l_prflseq = l_max
   FOREACH l_sql_cs1 INTO l_prfl001,l_prfl006
      LET l_prflseq=l_prflseq+1
      INSERT INTO prfl_t(prflent,prflunit,prflsite,prfldocno,prflseq,prfl001,
              prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013)
       VALUES (g_enterprise,g_prfi_m.prfiunit,g_prfi_m.prfisite,g_prfi_m.prfidocno,l_prflseq,l_prfl001,
              g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005,l_prfl006,0,0,0,0,0,0,0)
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,1)
         LET l_success = FALSE
         RETURN l_success
      END IF     
   END FOREACH   
   RETURN l_success   
END FUNCTION]]>
  </point>
  <point name="function.aprt503_b_fill3" order="22" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#fill
PRIVATE FUNCTION aprt503_b_fill3()
   DEFINE l_ac1  LIKE type_t.num5
   DEFINE l_ac_t LIKE type_t.num5
   LET l_ac_t = l_ac
   CALL g_prfj3_d.clear()
   IF aprt503_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE prflseq,prfl001,'','',prfl002,'',prfl003,'',prfl004,prfl005,prfl006,", 
          " '',prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit FROM prfl_t", 
             
                  " INNER JOIN prfi_t ON prfidocno = prfldocno ",
 
                  "",
                  
                  " WHERE prflent=? AND prfldocno=?"   
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prfl_t.prflseq"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE aprt503_pb3_1 FROM g_sql
      DECLARE b_fill_cs3_1 CURSOR FOR aprt503_pb3_1
      
      LET l_ac1 = 1
      
      OPEN b_fill_cs3_1 USING g_enterprise,g_prfi_m.prfidocno
 
                                               
      FOREACH b_fill_cs3_1 INTO g_prfj3_d[l_ac1].prflseq,g_prfj3_d[l_ac1].prfl001,g_prfj3_d[l_ac1].prfl001_desc, 
          g_prfj3_d[l_ac1].imaal004,g_prfj3_d[l_ac1].prfl002,g_prfj3_d[l_ac1].prfl002_desc,g_prfj3_d[l_ac1].prfl003, 
          g_prfj3_d[l_ac1].prfl003_desc,g_prfj3_d[l_ac1].prfl004,g_prfj3_d[l_ac1].prfl005,g_prfj3_d[l_ac1].prfl006, 
          g_prfj3_d[l_ac1].prfl006_desc,g_prfj3_d[l_ac1].prfl007,g_prfj3_d[l_ac1].prfl008,g_prfj3_d[l_ac1].prfl009, 
          g_prfj3_d[l_ac1].prfl010,g_prfj3_d[l_ac1].prfl011,g_prfj3_d[l_ac1].prfl012,g_prfj3_d[l_ac1].prfl013, 
          g_prfj3_d[l_ac1].prflsite,g_prfj3_d[l_ac1].prflunit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充

         #end add-point
      
         LET l_ac1 = l_ac1 + 1
         IF l_ac1 > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
   CALL g_prfj3_d.deleteElement(g_prfj3_d.getLength())
   
   FOR l_ac = 1 TO g_prfj3_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl001_desc = '', g_rtn_fields[1] , ''
            LET g_prfj3_d[l_ac].imaal004 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl001_desc
            DISPLAY BY NAME g_prfj3_d[l_ac].imaal004
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl003
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl006_desc

      #end add-point
   END FOR
   LET l_ac = l_ac_t
END FUNCTION]]>
  </point>
  <point name="function.aprt503_delete_prfl" order="23" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#delete prfl_t
PRIVATE FUNCTION aprt503_delete_prfl(p_sql)
   DEFINE p_sql   string
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_sql_sum  STRING
   
   LET l_success = TRUE
   
   LET l_sql_sum = " DELETE FROM prfl_t WHERE prflent=",g_enterprise,
                   "    AND prfldocno='",g_prfi_m.prfidocno,"' ",
                   "    AND prfl001 IN ( SELECT imaa001 FROM (",p_sql,") )"                   
   PREPARE l_sql_pre_delete FROM l_sql_sum
   EXECUTE l_sql_pre_delete
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,1)
      LET l_success = FALSE
      RETURN l_success
   END IF   
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.aprt503_delete_insert_prfl" order="24" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk
PRIVATE FUNCTION aprt503_delete_insert_prfl()
   DEFINE l_sql      STRING
   DEFINE l_sql1     STRING
   DEFINE l_sql2     STRING
   DEFINE l_sql3     STRING
   DEFINE l_sql4     STRING
   DEFINE l_sql_sum     STRING
   DEFINE l_prfj001  LIKE prfj_t.prfj001
   DEFINE l_prfh002  LIKE prfh_t.prfh002
   DEFINE l_prfh003  LIKE prfh_t.prfh003
   DEFINE l_prfh004  LIKE prfh_t.prfh004
   DEFINE l_success  LIKE type_t.num5
   
   LET l_success = TRUE
   
   CALL g_prfj3_d.clear()
   LET l_sql = " SELECT DISTINCT imaa001,imaa106 ",
               "   FROM imaa_t ",
               "  WHERE imaaent=",g_enterprise," AND imaastus='Y' "

   IF NOT cl_null(g_prfj_d_t.prfjseq) THEN
      LET l_sql1 = " SELECT DISTINCT prfj001 FROM prfj_t WHERE prfjent=",g_enterprise," AND prfjdocno='",g_prfi_m.prfidocno,"' ",
                   "    AND prfjseq = ",g_prfj_d_t.prfjseq
   ELSE
      LET l_sql1 = " SELECT DISTINCT prfj001 FROM prfj_t WHERE prfjent=",g_enterprise," AND prfjdocno='",g_prfi_m.prfidocno,"' ",
                   "    AND prfjseq = ",g_prfj_d[l_ac].prfjseq
   END IF   
   PREPARE l_sql1_prfj001_pre1 FROM l_sql1
   DECLARE l_sql1_prfj001_cs1 CURSOR FOR  l_sql1_prfj001_pre1
   
   LET l_sql2 = " SELECT DISTINCT prfh002 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? AND prfhstus='Y' " 
   PREPARE l_sql2_prfh002_pre1 FROM l_sql2
   DECLARE l_sql2_prfh002_cs1 CURSOR FOR  l_sql2_prfh002_pre1
   LET l_sql3 = " SELECT DISTINCT prfh003 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? AND prfhstus='Y' ", 
                "    AND prfh002=? "
   PREPARE l_sql3_prfh003_pre1 FROM l_sql3
   DECLARE l_sql3_prfh003_cs1 CURSOR FOR  l_sql3_prfh003_pre1 
   LET l_sql4 = " SELECT DISTINCT prfh004 FROM prfh_t WHERE prfhent=",g_enterprise," AND prfh001=? " ,
                "    AND prfh002=? AND prfh003=? AND prfhstus='Y' " 
   PREPARE l_sql4_prfh004_pre1 FROM l_sql4
   DECLARE l_sql4_prfh004_cs1 CURSOR FOR  l_sql4_prfh004_pre1
   LET l_sql4="1<>1"
   LET l_sql3="1=1"
   LET l_sql2="1<>1"
   LET l_sql1="1<>1"

   FOREACH  l_sql2_prfh002_cs1 USING g_prfj_d_t.prfj001 INTO l_prfh002
      FOREACH l_sql3_prfh003_cs1 USING g_prfj_d_t.prfj001,l_prfh002 INTO l_prfh003
         FOREACH l_sql4_prfh004_cs1 USING g_prfj_d_t.prfj001,l_prfh002,l_prfh003 INTO l_prfh004
            CASE l_prfh003
               WHEN '4'
                  LET l_sql4 = l_sql4," OR imaa001='",l_prfh004,"' " 
               WHEN '5'
                  LET l_sql4 = l_sql4," OR imaa009='",l_prfh004,"' "
               WHEN '6'
                  LET l_sql4 = l_sql4," OR imaa122='",l_prfh004,"' "
               WHEN '7'
                  LET l_sql4 = l_sql4," OR imaa131='",l_prfh004,"' "
               WHEN '8'
                  LET l_sql4 = l_sql4," OR imaa126='",l_prfh004,"' "
               WHEN '9'
                  LET l_sql4 = l_sql4," OR imaa127='",l_prfh004,"' "
               WHEN 'A'
                  LET l_sql4 = l_sql4," OR imaa128='",l_prfh004,"' "
               WHEN 'B'
                  LET l_sql4 = l_sql4," OR imaa129='",l_prfh004,"' "
               WHEN 'C'
                  LET l_sql4 = l_sql4," OR imaa132='",l_prfh004,"' "
               WHEN 'D'
                  LET l_sql4 = l_sql4," OR imaa133='",l_prfh004,"' "
               WHEN 'E'
                  LET l_sql4 = l_sql4," OR imaa134='",l_prfh004,"' "
               WHEN 'F'
                  LET l_sql4 = l_sql4," OR imaa135='",l_prfh004,"' "
               WHEN 'G'
                  LET l_sql4 = l_sql4," OR imaa136='",l_prfh004,"' "
               WHEN 'H'
                  LET l_sql4 = l_sql4," OR imaa137='",l_prfh004,"' "
               WHEN 'I'
                  LET l_sql4 = l_sql4," OR imaa138='",l_prfh004,"' "
               WHEN 'J'
                  LET l_sql4 = l_sql4," OR imaa139='",l_prfh004,"' "
               WHEN 'K'
                  LET l_sql4 = l_sql4," OR imaa140='",l_prfh004,"' "
               WHEN 'L'
                  LET l_sql4 = l_sql4," OR imaa141='",l_prfh004,"' "
         
            END CASE
            LET l_prfh004=null
         END FOREACH
         LET l_sql3 = l_sql3," AND (",l_sql4,") "
         LET l_sql4="1<>1"
         LET l_prfh003=null
      END FOREACH
      LET l_sql2 = l_sql2," OR (",l_sql3,") "
      LET l_sql3="1=1"
      LET l_prfh003=null 
   END FOREACH
         
   LET l_sql = l_sql," AND ( ",l_sql2," )" 

   RETURN l_sql
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#         INITIALIZE g_ref_fields TO NULL
#         LET g_ref_fields[1] = g_prfj_d[l_ac].prfj001
#         CALL ap_ref_array2(g_ref_fields,"SELECT prfgl003 FROM prfgl_t WHERE prfglent='"||g_enterprise||"' AND prfgl001=? AND prfgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#         LET g_prfj_d[l_ac].prfj001_desc = '', g_rtn_fields[1] , ''
#         DISPLAY BY NAME g_prfj_d[l_ac].prfj001_desc]]>
  </point>
  <point name="b_fill3.fill" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl001_desc = '', g_rtn_fields[1] , ''
            LET g_prfj3_d[l_ac].imaal004 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl001_desc
            DISPLAY BY NAME g_prfj3_d[l_ac].imaal004
            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl002
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfj3_d[l_ac].prfl002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfj3_d[l_ac].prfl002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl003
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl003_desc

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfj3_d[l_ac].prfl006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfj3_d[l_ac].prfl006_desc]]>
  </point>
  <point name="construct.c.page1.prfj001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prfg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfj001  #顯示到畫面上
            NEXT FIELD prfj001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.prfk002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prfk002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfk002  #顯示到畫面上
            NEXT FIELD prfk002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.prfl001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfl001  #顯示到畫面上
            NEXT FIELD prfl001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.prfl002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfl002  #顯示到畫面上
            NEXT FIELD prfl002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.prfl003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfl003  #顯示到畫面上
            NEXT FIELD prfl003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.prfl006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfl006  #顯示到畫面上
            NEXT FIELD prfl006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfi002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002_3()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfi002  #顯示到畫面上
            NEXT FIELD prfi002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfi003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfi003  #顯示到畫面上
            NEXT FIELD prfi003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfi006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfi006  #顯示到畫面上
            NEXT FIELD prfi006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfi007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfi007  #顯示到畫面上
            NEXT FIELD prfi007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prficnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prficnfid  #顯示到畫面上
            NEXT FIELD prficnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prficrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prficrtdp  #顯示到畫面上
            NEXT FIELD prficrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prficrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prficrtid  #顯示到畫面上
            NEXT FIELD prficrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfidocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prfidocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfidocno  #顯示到畫面上
            NEXT FIELD prfidocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfimodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfimodid  #顯示到畫面上
            NEXT FIELD prfimodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfiowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfiowndp  #顯示到畫面上
            NEXT FIELD prfiowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfiownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfiownid  #顯示到畫面上
            NEXT FIELD prfiownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prfiunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfiunit  #顯示到畫面上
            NEXT FIELD prfiunit                     #返回原欄位
    

]]>
  </point>
  <point name="detail_reproduce.body.table2.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table3.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prfi_m.prfi004<>g_prfi_m_t.prfi004 THEN
      UPDATE prfl_t SET prfl004=g_prfi_m.prfi004
       WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno
   END IF
   IF g_prfi_m.prfi005<>g_prfi_m_t.prfi005 THEN
      UPDATE prfl_t SET prfl005=g_prfi_m.prfi005
       WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno
   END IF   ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   IF g_prfi_m.prfistus <> "N" THEN
#      CALL cl_set_act_visible("delete,modify", FALSE)
#   ELSE
#      CALL cl_set_act_visible("delete,modify", true)    
#   END IF
   IF g_prfi_m.prfistus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   RETURN TRUE]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_prfi001','6042')]]>
  </point>
  <point name="input.a.page1.prfj001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfj_d[l_ac].prfj001_desc = NULL
            DISPLAY  g_prfj_d[l_ac].prfj001_desc TO s_detail1[l_ac].prfj001_desc
            IF NOT cl_null(g_prfj_d[l_ac].prfj001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj_d[l_ac].prfj001 != g_prfj_d_t.prfj001 OR g_prfj_d_t.prfj001 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfj_d[l_ac].prfj001
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prfg001") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfj_d[l_ac].prfj001 = g_prfj_d_t.prfj001
                     CALL aprt503_prfj001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt503_prfj001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prfj_d[l_ac].prfj001,g_errno,1)
                     LET g_prfj_d[l_ac].prfj001 = g_prfj_d_t.prfj001
                     CALL aprt503_prfj001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF
            CALL aprt503_prfj001_ref()            
]]>
  </point>
  <point name="input.a.page1.prfjseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj_d[l_ac].prfjseq) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_prfi_m.prfidocno IS NOT NULL AND g_prfj_d[g_detail_idx].prfjseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfi_m.prfidocno != g_prfidocno_t OR g_prfj_d[g_detail_idx].prfjseq != g_prfj_d_t.prfjseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfj_t WHERE "||"prfjent = '" ||g_enterprise|| "' AND "||"prfjdocno = '"||g_prfi_m.prfidocno ||"' AND "|| "prfjseq = '"||g_prfj_d[g_detail_idx].prfjseq ||"'",'std-00004',0) THEN 
                     LET g_prfj_d[l_ac].prfjseq = g_prfj_d_t.prfjseq
                     NEXT FIELD CURRENT 
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.prfk002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            LET g_prfj2_d[l_ac].prfk002_desc = NULL
            DISPLAY g_prfj2_d[l_ac].prfk002_desc TO s_detail2[l_ac].prfk002_desc
            IF NOT cl_null(g_prfj2_d[l_ac].prfk002) THEN 
            IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj2_d[l_ac].prfk002 != g_prfj2_d_t.prfk002 OR g_prfj2_d_t.prfk002 IS null)) THEN 
               CALL aprt503_prfk002()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_prfj2_d[l_ac].prfk002,g_errno,1)
                  LET g_prfj2_d[l_ac].prfk002 = g_prfj2_d_t.prfk002
                  CALL aprt503_prfk002_ref()
                  NEXT FIELD prfk002
               END IF
            END IF
            END IF
            CALL aprt503_prfk002_ref()

]]>
  </point>
  <point name="input.a.page2.prfkseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj2_d[l_ac].prfkseq) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_prfi_m.prfidocno IS NOT NULL AND g_prfj2_d[g_detail_idx].prfkseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfi_m.prfidocno != g_prfidocno_t OR g_prfj2_d[g_detail_idx].prfkseq != g_prfj2_d_t.prfkseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfk_t WHERE "||"prfkent = '" ||g_enterprise|| "' AND "||"prfkdocno = '"||g_prfi_m.prfidocno ||"' AND "|| "prfkseq = '"||g_prfj2_d[g_detail_idx].prfkseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.prfl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfj3_d[l_ac].prfl001_desc = null
            LET g_prfj3_d[l_ac].imaal004 = null
            LET g_prfj3_d[l_ac].prfl006 = null
            LET g_prfj3_d[l_ac].prfl006_desc = null
            DISPLAY  g_prfj3_d[l_ac].prfl001_desc to s_detail3[l_ac].prfl001_desc
            DISPLAY  g_prfj3_d[l_ac].imaal004 to s_detail3[l_ac].imaal004
            DISPLAY  g_prfj3_d[l_ac].prfl006 to s_detail3[l_ac].prfl006
            DISPLAY  g_prfj3_d[l_ac].prfl006_desc to s_detail3[l_ac].prfl006_desc
            IF NOT cl_null(g_prfj3_d[l_ac].prfl001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj3_d[l_ac].prfl001 != g_prfj3_d_t.prfl001 OR g_prfj3_d_t.prfl001 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfj3_d[l_ac].prfl001
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imaa001_5") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfj3_d[l_ac].prfl001 = g_prfj3_d_t.prfl001
                     call aprt503_prfl001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt503_prfl001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prfj3_d[l_ac].prfl001,g_errno,1)
                     LET g_prfj3_d[l_ac].prfl001 = g_prfj3_d_t.prfl001
                     CALL aprt503_prfl001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt503_prfl001_ref()

]]>
  </point>
  <point name="input.a.page3.prfl002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfj3_d[l_ac].prfl002_desc = NULL
            DISPLAY  g_prfj3_d[l_ac].prfl002_desc to s_detail3[l_ac].prfl002_desc
            IF NOT cl_null(g_prfj3_d[l_ac].prfl002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj3_d[l_ac].prfl002 != g_prfj3_d_t.prfl002 OR g_prfj3_d_t.prfl002 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfiunit
                  LET g_chkparam.arg2 = g_prfj3_d[l_ac].prfl002
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooaj002") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfj3_d[l_ac].prfl002 = g_prfj3_d_t.prfl002
                     CALL aprt503_prfl002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt503_prfl002_ref()

]]>
  </point>
  <point name="input.a.page3.prfl003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfj3_d[l_ac].prfl003_desc = NULL
            DISPLAY  g_prfj3_d[l_ac].prfl003_desc TO s_detail3[l_ac].prfl003_desc
            IF NOT cl_null(g_prfj3_d[l_ac].prfl003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj3_d[l_ac].prfl003 != g_prfj3_d_t.prfl003 OR g_prfj3_d_t.prfl003 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfiunit
                  LET g_chkparam.arg2 = g_prfj3_d[l_ac].prfl003
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oodb002") THEN 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfj3_d[l_ac].prfl003 = g_prfj3_d_t.prfl003
                     CALL aprt503_prfl003_ref()
                     NEXT FIELD CURRENT
                  END IF
            
               END IF
            END IF 
            CALL aprt503_prfl003_ref()
]]>
  </point>
  <point name="input.a.page3.prfl004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl004)  THEN
               IF g_prfj3_d[l_ac].prfl004<g_today THEN
                  CALL cl_err(g_prfj3_d[l_ac].prfl004,"axc-00066",1)
                  LET g_prfj3_d[l_ac].prfl004 = g_prfj3_d_t.prfl004
                  NEXT FIELD prfl004
               END IF
               IF NOT cl_null(g_prfj3_d[l_ac].prfl005) THEN
                  IF g_prfj3_d[l_ac].prfl004>g_prfj3_d[l_ac].prfl005 THEN
                     CALL cl_err(g_prfj3_d[l_ac].prfl004||'>'||g_prfj3_d[l_ac].prfl005,"ais-00047",1)
                     LET g_prfj3_d[l_ac].prfl004 = g_prfj3_d_t.prfl004
                     NEXT FIELD prfl004
                  END IF
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page3.prfl005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl005)  THEN
               IF g_prfj3_d[l_ac].prfl005<g_today THEN
                  CALL cl_err(g_prfj3_d[l_ac].prfl005,"axc-00066",1)
                  LET g_prfj3_d[l_ac].prfl005 = g_prfj3_d_t.prfl005
                  NEXT FIELD prfl005
               END IF
               IF NOT cl_null(g_prfj3_d[l_ac].prfl004) THEN
                  IF g_prfj3_d[l_ac].prfl004>g_prfj3_d[l_ac].prfl005 THEN
                     CALL cl_err(g_prfj3_d[l_ac].prfl004||'>'||g_prfj3_d[l_ac].prfl005,"ais-00047",1)
                     LET g_prfj3_d[l_ac].prfl005 = g_prfj3_d_t.prfl005
                     NEXT FIELD prfl005
                  END IF
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page3.prfl006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl006_desc

]]>
  </point>
  <point name="input.a.page3.prfl007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl007) THEN
               CALL aprt503_count_prfl009()           
            END IF 

]]>
  </point>
  <point name="input.a.page3.prfl008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl008) THEN
               CALL aprt503_count_prfl009()            
            END IF 
            IF cl_null(g_prfj3_d[l_ac].prfl010) or g_prfj3_d[l_ac].prfl010=0 THEN
               LET g_prfj3_d[l_ac].prfl010 = g_prfj3_d[l_ac].prfl008
            END IF
]]>
  </point>
  <point name="input.a.page3.prfl010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl010) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.prfl011" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl011) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.prfl012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl012) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.prfl013" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfj3_d[l_ac].prfl013) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.prflseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prfi_m.prfidocno IS NOT NULL AND g_prfj3_d[g_detail_idx].prflseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfi_m.prfidocno != g_prfidocno_t OR g_prfj3_d[g_detail_idx].prflseq != g_prfj3_d_t.prflseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfl_t WHERE "||"prflent = '" ||g_enterprise|| "' AND "||"prfldocno = '"||g_prfi_m.prfidocno ||"' AND "|| "prflseq = '"||g_prfj3_d[g_detail_idx].prflseq ||"'",'std-00004',0) THEN 
                     LET g_prfj3_d[l_ac].prflseq = g_prfj3_d_t.prflseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.prfi002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfi_m.prfi002_desc = null
            DISPLAY BY NAME g_prfi_m.prfi002_desc
            IF NOT cl_null(g_prfi_m.prfi002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfi002 != g_prfi_m_t.prfi002 or g_prfi_m_t.prfi002 is null )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfiunit
                  LET g_chkparam.arg2 = g_prfi_m.prfi002
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooaj002") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfi_m.prfi002 = g_prfi_m_t.prfi002
                     CALL aprt503_prfi002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt503_prfi002_ref()]]>
  </point>
  <point name="input.a.prfi003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfi_m.prfi003_desc = null
            DISPLAY BY NAME g_prfi_m.prfi003_desc
            IF NOT cl_null(g_prfi_m.prfi003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfi003 != g_prfi_m_t.prfi003 or g_prfi_m_t.prfi003 is null )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfiunit
                  LET g_chkparam.arg2 = g_prfi_m.prfi003
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oodb002") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfi_m.prfi003 = g_prfi_m_t.prfi003
                     CALL aprt503_prfi003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt503_prfi003_ref()]]>
  </point>
  <point name="input.a.prfi004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfi_m.prfi004)  THEN
               IF g_prfi_m.prfi004<g_today THEN
                  CALL cl_err(g_prfi_m.prfi004,"axc-00066",1)
                  LET g_prfi_m.prfi004 = g_prfi_m_t.prfi004
                  NEXT FIELD prfi004
               END IF
               IF NOT cl_null(g_prfi_m.prfi005) THEN
                  IF g_prfi_m.prfi004>g_prfi_m.prfi005 THEN
                     CALL cl_err(g_prfi_m.prfi004||'>'||g_prfi_m.prfi005,"ais-00047",1)
                     LET g_prfi_m.prfi004 = g_prfi_m_t.prfi004
                     NEXT FIELD prfi004
                  END IF
               END IF
            END IF            ]]>
  </point>
  <point name="input.a.prfi005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfi_m.prfi005)  THEN
               IF g_prfi_m.prfi005<g_today THEN
                  CALL cl_err(g_prfi_m.prfi005,"axc-00067",1)
                  LET g_prfi_m.prfi005 = g_prfi_m_t.prfi005
                  NEXT FIELD prfi005
               END IF
               IF NOT cl_null(g_prfi_m.prfi004) THEN
                  IF g_prfi_m.prfi004>g_prfi_m.prfi005 THEN
                     CALL cl_err(g_prfi_m.prfi004||'>'||g_prfi_m.prfi005,"ais-00047",1)
                     LET g_prfi_m.prfi005 = g_prfi_m_t.prfi005
                     NEXT FIELD prfi005
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.prfi006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfi_m.prfi006_desc = NULL
            DISPLAY BY NAME g_prfi_m.prfi006_desc
            IF NOT cl_null(g_prfi_m.prfi006) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfi006 != g_prfi_m_t.prfi006 OR g_prfi_m_t.prfi006 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfi006
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfi_m.prfi006 = g_prfi_m_t.prfi006
                     CALL aprt503_prfi006_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt503_prfi006_display()
               END IF

            END IF 
            CALL aprt503_prfi006_ref()]]>
  </point>
  <point name="input.a.prfi007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prfi_m.prfi007_desc = NULL
            DISPLAY BY NAME g_prfi_m.prfi007_desc
            IF NOT cl_null(g_prfi_m.prfi007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfi007 != g_prfi_m_t.prfi007 OR g_prfi_m_t.prfi007 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfi_m.prfi007
                  LET g_chkparam.arg2 = g_today
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001_3") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfi_m.prfi007 = g_prfi_m_t.prfi007
                     CALL aprt503_prfi007_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt503_prfi007_ref()
]]>
  </point>
  <point name="input.a.prfidocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prfi_m.prfidocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfidocno != g_prfidocno_t )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_ooef004
                  LET g_chkparam.arg2 = g_prfi_m.prfidocno
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooba002") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfi_m.prfidocno = g_prfi_m_t.prfidocno
                     NEXT FIELD CURRENT
                  END IF
            

               END IF 
               CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prfi_m.prfidocno,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET  g_prfi_m.prfidocno = g_prfi_m_t.prfidocno 
                  NEXT FIELD prfidocno
               END IF
               #此段落由子樣板a05產生
               IF  NOT cl_null(g_prfi_m.prfidocno) THEN 
                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfidocno != g_prfidocno_t )) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfi_t WHERE "||"prfient = '" ||g_enterprise|| "' AND "||"prfidocno = '"||g_prfi_m.prfidocno ||"'",'std-00004',0) THEN 
                        LET g_prfi_m.prfidocno = g_prfi_m_t.prfidocno
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.prfiunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfi_m.prfiunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfi_m.prfiunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfi_m.prfiunit_desc

]]>
  </point>
  <point name="input.b.page3.prfl010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_prfj3_d[l_ac].prfl010) THEN
               LET g_prfj3_d[l_ac].prfl010 = g_prfj3_d[l_ac].prfl008
            END IF            ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow=1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001= g_prfi_m.prfiunit
   ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_ask_confirm("apr-00216") THEN
                  
                  CALL aprt503_fill() RETURNING l_sql
                  CALL aprt503_insert_prfl(l_sql) RETURNING l_success
                  IF l_success=false THEN
                     CALL s_transaction_end('N','0')                    
                     CANCEL INSERT
                  END IF
               END IF]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_ask_confirm("apr-00216") THEN
                  CALL aprt503_fill() RETURNING l_sql
                  CALL aprt503_delete_prfl(l_sql) RETURNING l_success
                  IF l_success=false THEN
                     CALL s_transaction_end('N','0')                    
                     CANCEL DELETE
                  END IF
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt503_create_prfjseq()
            LET g_prfj_d[l_ac].prfjsite = g_prfi_m.prfisite
            LET g_prfj_d[l_ac].prfjunit = g_prfi_m.prfiunit]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt503_b_fill3()]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfj_t",SQLCA.sqlcode,1)
                  LET g_prfj_d[l_ac].* = g_prfj_d_t.*                     
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  LET SQLCA.sqlerrd[3] = NULL
                  LET SQLCA.sqlcode = NULL                  
               END IF
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj_d[l_ac].prfj001 != g_prfj_d_t.prfj001 OR g_prfj_d_t.prfj001 IS null)) THEN 
               IF cl_ask_confirm("apr-00216") THEN
                  CALL aprt503_delete_insert_prfl() RETURNING l_sql
                  CALL aprt503_delete_prfl(l_sql) RETURNING l_success
                  IF l_success=false THEN
                     LET g_prfj_d[l_ac].* = g_prfj_d_t.* 
                     CALL s_transaction_end('N','0')                    
                     RETURN
                  ELSE
                     CALL aprt503_fill() RETURNING l_sql
                     CALL aprt503_insert_prfl(l_sql) RETURNING l_success
                     IF l_success=false THEN
                        LET g_prfj_d[l_ac].* = g_prfj_d_t.* 
                        CALL s_transaction_end('N','0')                    
                        RETURN
                     ELSE
                        LET SQLCA.sqlerrd[3] = NULL
                        LET SQLCA.sqlcode = NULL
                     END IF                     
                  END IF
               END IF 
               END IF]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt503_create_prfkseq()
            LET g_prfj2_d[l_ac].prfksite = g_prfi_m.prfisite
            LET g_prfj2_d[l_ac].prfkunit = g_prfi_m.prfiunit]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt503_create_prflseq()
            LET g_prfj3_d[l_ac].prflunit = g_prfi_m.prfiunit
            LET g_prfj3_d[l_ac].prflsite = g_prfi_m.prfisite
            LET g_prfj3_d[l_ac].prfl002 = g_prfi_m.prfi002
            LET g_prfj3_d[l_ac].prfl003 = g_prfi_m.prfi003
            LET g_prfj3_d[l_ac].prfl004 = g_prfi_m.prfi004
            LET g_prfj3_d[l_ac].prfl005 = g_prfi_m.prfi005
            CALL aprt503_prfl002_ref()
            CALL aprt503_prfl003_ref()
            ]]>
  </point>
  <point name="input.c.page1.prfj001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj_d[l_ac].prfj001             #給予default值

            #給予arg
            
            CALL q_prfg001()                                #呼叫開窗

            LET g_prfj_d[l_ac].prfj001 = g_qryparam.return1              

            DISPLAY g_prfj_d[l_ac].prfj001 TO prfj001              #
            CALL aprt503_prfj001_ref()
            NEXT FIELD prfj001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.prfk002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj2_d[l_ac].prfk002             #給予default值

            #給予arg
            CASE g_prfj2_d[l_ac].prfk001
               WHEN '1' 
                  CALL q_prfc001()                                #呼叫開窗
               WHEN '2'
                  CALL q_pmaa001_13()              
            END CASE
            LET g_prfj2_d[l_ac].prfk002 = g_qryparam.return1              

            DISPLAY g_prfj2_d[l_ac].prfk002 TO prfk002              #
            CALL aprt503_prfk002_ref()
            NEXT FIELD prfk002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prfl001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj3_d[l_ac].prfl001             #給予default值

            #給予arg         
            CALL q_imaa001()                                #呼叫開窗

            LET g_prfj3_d[l_ac].prfl001 = g_qryparam.return1              

            DISPLAY g_prfj3_d[l_ac].prfl001 TO prfl001              #
            CALL aprt503_prfl001_ref() 
            NEXT FIELD prfl001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prfl002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj3_d[l_ac].prfl002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prfi_m.prfiunit 
            CALL q_ooaj002_3()                                #呼叫開窗

            LET g_prfj3_d[l_ac].prfl002 = g_qryparam.return1              

            DISPLAY g_prfj3_d[l_ac].prfl002 TO prfl002              #
            CALL aprt503_prfl002_ref()
            NEXT FIELD prfl002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prfl003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj3_d[l_ac].prfl003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prfi_m.prfiunit #

            
            CALL q_oodb002_8()                                #呼叫開窗

            LET g_prfj3_d[l_ac].prfl003 = g_qryparam.return1              

            DISPLAY g_prfj3_d[l_ac].prfl003 TO prfl003              #
            CALL aprt503_prfl003_ref()
            NEXT FIELD prfl003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.prfl006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfj3_d[l_ac].prfl006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_prfj3_d[l_ac].prfl006 = g_qryparam.return1              

            DISPLAY g_prfj3_d[l_ac].prfl006 TO prfl006              #

            NEXT FIELD prfl006                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfi002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfi002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prfi_m.prfiunit
            CALL q_ooaj002_3()                                #呼叫開窗

            LET g_prfi_m.prfi002 = g_qryparam.return1              

            DISPLAY g_prfi_m.prfi002 TO prfi002              #
            CALL aprt503_prfi002_ref()
            NEXT FIELD prfi002                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfi003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfi003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prfi_m.prfiunit
            CALL q_oodb002_8()                                #呼叫開窗

            LET g_prfi_m.prfi003 = g_qryparam.return1              

            DISPLAY g_prfi_m.prfi003 TO prfi003              #
            CALL aprt503_prfi003_ref()
            NEXT FIELD prfi003                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfi006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfi006             #給予default值

            #給予arg
          
            CALL q_ooag001()                                #呼叫開窗

            LET g_prfi_m.prfi006 = g_qryparam.return1              

            DISPLAY g_prfi_m.prfi006 TO prfi006              #
            CALL aprt503_prfi006_display()
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfi_m.prfi006 != g_prfi_m_t.prfi006 OR g_prfi_m_t.prfi006 IS NULL )) THEN 
               CALL aprt503_prfi006_ref()
            END IF
            NEXT FIELD prfi006                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfi007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfi007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prfi_m.prfi007 = g_qryparam.return1              

            DISPLAY g_prfi_m.prfi007 TO prfi007              #
            CALL aprt503_prfi007_ref() 
            NEXT FIELD prfi007                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfidocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfidocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "aprt503" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prfi_m.prfidocno = g_qryparam.return1              

            DISPLAY g_prfi_m.prfidocno TO prfidocno              #

            NEXT FIELD prfidocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.prfiunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfi_m.prfiunit             #給予default值
            LET g_qryparam.default2 = "" #g_prfi_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_prfi_m.prfiunit = g_qryparam.return1              
            #LET g_prfi_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_prfi_m.prfiunit TO prfiunit              #
            #DISPLAY g_prfi_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD prfiunit                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_sql                 STRING]]>
  </point>
  <point name="input.g.page2.prfk001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prfj2_d[l_ac].prfk001 != g_prfj2_d_t.prfk001 OR g_prfj2_d_t.prfk001 IS null)) THEN 
               LET g_prfj2_d[l_ac].prfk002 = NULL
               LET g_prfj2_d[l_ac].prfk002_desc = NULL
               DISPLAY g_prfj2_d[l_ac].prfk002 TO s_detail2[l_ac].prfk002
               DISPLAY g_prfj2_d[l_ac].prfk002_desc TO s_detail2[l_ac].prfk002_desc
            END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prfi_m.prfidocno) THEN 
               
                  CALL s_aooi200_gen_docno(g_prfi_m.prfiunit,g_prfi_m.prfidocno,g_prfi_m.prfidocdt,g_prog)
                     RETURNING  g_success,g_prfi_m.prfidocno
                  IF g_success<>'1' THEN
                     CALL cl_err(g_prfi_m.prfidocno,"amm-00001",1)
                     NEXT FIELD prfidocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfi_t WHERE "||"prfient = '" ||g_enterprise|| "' AND "||"prfidocno = '"||g_prfi_m.prfidocno ||"'",'std-00004',1) THEN
                        LET g_prfi_m.prfidocno = g_prfidocno_t
                        NEXT FIELD prfidocno
                     END IF

                  END IF
                  LET g_prfi_m_t.prfidocno = g_prfi_m.prfidocno
                     
               END IF]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt503_set_entry(p_cmd)
            CALL aprt503_set_no_entry(p_cmd)]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_prfi_m.prfistus = 'N'
      LET g_prfi_m.prfidocdt = g_today
      LET g_prfi_m.prfiunit = g_site
      LET g_prfi_m.prfisite = g_prfi_m.prfiunit
      LET g_prfi_m.prfi004 =g_today
      LET g_prfi_m.prfi005 =g_today
      CALL aprt503_prfiunit_ref()
      LET g_prfi_m.prfi006 = g_user
      CALL aprt503_prfi006_ref()
      CALL aprt503_prfi006_display()
      LET g_prfi_m_t.* = g_prfi_m.*]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_site]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_prfi_m.prfistus MATCHES "[DR]" THEN 
         LET g_prfi_m.prfistus = "N"
      END IF]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prfi_m.prfistus MATCHES "[DR]" THEN 
      LET g_prfi_m.prfistus = "N"
   END IF
   IF g_prfi_m.prfistus<>'N' THEN
      RETURN
   END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_prfi_m.prficnfid = ""
   LET g_prfi_m.prficnfdt = ""
   LET g_prfi_m.prfistus = "N"
   LET g_prfi_m.prfidocdt = g_today
   LET g_prfi_m.prfiunit = g_site
   LET g_prfi_m.prfisite = g_prfi_m.prfiunit
   CALL aprt503_prfiunit_ref()
   LET g_prfi_m.prfi006 = g_user
   CALL aprt503_prfi006_ref()
   CALL aprt503_prfi006_display()]]>
  </point>
  <point name="send.after_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_aprt503_conf_chk(g_prfi_m.prfidocno,g_prfi_m.prfistus) RETURNING l_success
   IF l_success THEN
            
   ELSE
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   define l_success  like type_t.num5]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfj_d[l_ac].prfj001
#            CALL ap_ref_array2(g_ref_fields,"SELECT prfgl003 FROM prfgl_t WHERE prfglent='"||g_enterprise||"' AND prfgl001=? AND prfgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfj_d[l_ac].prfj001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfj_d[l_ac].prfj001_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            call aprt503_prfk002_ref()
]]>
  </point>
  <point name="show.body3.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl001_desc = '', g_rtn_fields[1] , ''
            LET g_prfj3_d[l_ac].imaal004 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl001_desc
            DISPLAY BY NAME g_prfj3_d[l_ac].imaal004
            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl002
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfj3_d[l_ac].prfl002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfj3_d[l_ac].prfl002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl003
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfj3_d[l_ac].prfl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfj3_d[l_ac].prfl003_desc

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfj3_d[l_ac].prfl006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfj3_d[l_ac].prfl006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfj3_d[l_ac].prfl006_desc
]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfiunit
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfiunit_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfiunit_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfi002
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfi002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfi002_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfi003
#            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfi003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfi003_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfi006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfi006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfi006_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfi007
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfi007_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfi007_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfiownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfiownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfiownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfiowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfiowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfiowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prficrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfi_m.prficrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prficrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prficrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfi_m.prficrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prficrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prfimodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfi_m.prfimodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prfimodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfi_m.prficnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfi_m.prficnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfi_m.prficnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT prfistus,prficnfid,prficnfdt,prfimodid,prfimoddt INTO g_prfi_m.prfistus,g_prfi_m.prficnfid,g_prfi_m.prficnfdt,
                                                                g_prfi_m.prfimodid,g_prfi_m.prfimoddt  
     FROM prfi_t
    WHERE prfient = g_enterprise AND prfidocno = g_prfi_m.prfidocno
   DISPLAY BY NAME g_prfi_m.prfistus,g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prficnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfi_m.prficnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prfi_m.prficnfid_desc   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfi_m.prfimodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfi_m.prfimodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prfi_m.prfimodid_desc
   IF g_prfi_m.prfistus NOT MATCHES "[DNR]" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", true)    
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT prfistus INTO g_prfi_m.prfistus FROM prfi_t WHERE prfidocno = g_prfi_m.prfidocno
            AND prfient = g_enterprise         
         CALL s_aprt503_conf_chk(g_prfi_m.prfidocno,g_prfi_m.prfistus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt503_conf_upd(g_prfi_m.prfidocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  CALL cl_err(g_prfi_m.prfidocno,g_errno,1) 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            RETURN            
         END IF
                 
      WHEN 'X'
         SELECT prfistus INTO g_prfi_m.prfistus FROM prfi_t WHERE prfidocno = g_prfi_m.prfidocno
            AND prfient = g_enterprise  
         CALL s_aprt503_void_chk(g_prfi_m.prfidocno,g_prfi_m.prfistus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt503_void_upd(g_prfi_m.prfidocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  CALL cl_err(g_prfi_m.prfidocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE 
            RETURN    
         END IF        
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   IF g_prfi_m.prfistus = 'X' or  g_prfi_m.prfistus = 'Y' THEN
#      RETURN
#   END IF
   IF g_prfi_m.prfistus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("unconfirmed", FALSE)
#      CALL cl_set_act_visible("invalid,confirmed", true)
#      IF g_prfi_m.prfistus = 'N' THEN
#         CALL cl_set_act_visible("unconfirmed", FALSE)
#         CALL cl_set_act_visible("invalid,confirmed", true)            
#      END IF
#      IF g_prfi_m.prfistus = 'Y' or g_prfi_m.prfistus = 'X' THEN
#         CALL cl_set_act_visible("confirmed,invalid", FALSE)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prfi_m.prfistus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <section id="aprt503.b_fill" ver="6" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt503_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prfj_d.clear()    #g_prfj_d 單頭及單身 
   CALL g_prfj2_d.clear()
   CALL g_prfj3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt503_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prfjseq,prfj001,prfjsite,prfjunit ,t1.prfgl003 FROM prfj_t",   
                  " INNER JOIN prfi_t ON prfidocno = prfjdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN prfgl_t t1 ON t1.prfglent='"||g_enterprise||"' AND t1.prfgl001=prfj001 AND t1.prfgl002='"||g_dlang||"' ",
 
                  " WHERE prfjent=? AND prfjdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prfj_t.prfjseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt503_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt503_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prfi_m.prfidocno
                                               
      FOREACH b_fill_cs INTO g_prfj_d[l_ac].prfjseq,g_prfj_d[l_ac].prfj001,g_prfj_d[l_ac].prfjsite,g_prfj_d[l_ac].prfjunit, 
          g_prfj_d[l_ac].prfj001_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF aprt503_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE prfkseq,prfk001,prfk002,prfksite,prfkunit ,t2.prfcl003 FROM prfk_t", 
             
                  " INNER JOIN prfi_t ON prfidocno = prfkdocno ",
 
                  "",
                  
                                 " LEFT JOIN prfcl_t t2 ON t2.prfclent='"||g_enterprise||"' AND t2.prfcl001=prfk002 AND t2.prfcl002='"||g_dlang||"' ",
 
                  " WHERE prfkent=? AND prfkdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prfk_t.prfkseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt503_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR aprt503_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_prfi_m.prfidocno
                                               
      FOREACH b_fill_cs2 INTO g_prfj2_d[l_ac].prfkseq,g_prfj2_d[l_ac].prfk001,g_prfj2_d[l_ac].prfk002, 
          g_prfj2_d[l_ac].prfksite,g_prfj2_d[l_ac].prfkunit,g_prfj2_d[l_ac].prfk002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF aprt503_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE prflseq,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008, 
          prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit ,t3.imaal003 ,t4.ooail003 ,t5.oocal003 FROM prfl_t", 
             
                  " INNER JOIN prfi_t ON prfidocno = prfldocno ",
 
                  "",
                  
                                 " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=prfl001 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent='"||g_enterprise||"' AND t4.ooail001=prfl002 AND t4.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=prfl006 AND t5.oocal002='"||g_dlang||"' ",
 
                  " WHERE prflent=? AND prfldocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prfl_t.prflseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt503_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR aprt503_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_prfi_m.prfidocno
                                               
      FOREACH b_fill_cs3 INTO g_prfj3_d[l_ac].prflseq,g_prfj3_d[l_ac].prfl001,g_prfj3_d[l_ac].prfl002, 
          g_prfj3_d[l_ac].prfl003,g_prfj3_d[l_ac].prfl004,g_prfj3_d[l_ac].prfl005,g_prfj3_d[l_ac].prfl006, 
          g_prfj3_d[l_ac].prfl007,g_prfj3_d[l_ac].prfl008,g_prfj3_d[l_ac].prfl009,g_prfj3_d[l_ac].prfl010, 
          g_prfj3_d[l_ac].prfl011,g_prfj3_d[l_ac].prfl012,g_prfj3_d[l_ac].prfl013,g_prfj3_d[l_ac].prflsite, 
          g_prfj3_d[l_ac].prflunit,g_prfj3_d[l_ac].prfl001_desc,g_prfj3_d[l_ac].prfl002_desc,g_prfj3_d[l_ac].prfl006_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prfj_d.deleteElement(g_prfj_d.getLength())
   CALL g_prfj2_d.deleteElement(g_prfj2_d.getLength())
   CALL g_prfj3_d.deleteElement(g_prfj3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt503_pb
   FREE aprt503_pb2
 
   FREE aprt503_pb3
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt503_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt503_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.browser_fill" ver="10" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt503_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfi_m.* TO NULL
   CALL g_prfj_d.clear()        
   CALL g_prfj2_d.clear() 
   CALL g_prfj3_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prfidocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prfidocno ",
                      " FROM prfi_t ",
                      " ",
                      " LEFT JOIN prfj_t ON prfjent = prfient AND prfidocno = prfjdocno ",
                      " LEFT JOIN prfk_t ON prfkent = prfient AND prfidocno = prfkdocno", 
 
                      " LEFT JOIN prfl_t ON prflent = prfient AND prfidocno = prfldocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE prfient = '" ||g_enterprise|| "' AND prfjent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prfi_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prfidocno ",
                      " FROM prfi_t ", 
                      "  ",
                      "  ",
                      " WHERE prfient = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prfi_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prfiunit,'',prfidocdt,prfidocno,prfi001,prfi002,'',prfi003,'',prfi004,prfi005,prfi006,'',prfi007,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prfistus,prfiunit,'',prfidocdt,prfidocno,prfi001,prfi002,'',prfi003, 
       '',prfi004,prfi005,prfi006,'',prfi007,'',t1.ooefl003 ,t2.ooail003 ,t3.ooail003 ,t4.oofa011 ,t5.ooefl003 ", 

               " FROM prfi_t ",
               "  ",
               "  LEFT JOIN prfj_t ON prfjent = prfient AND prfidocno = prfjdocno ",
               "  LEFT JOIN prfk_t ON prfkent = prfient AND prfidocno = prfkdocno",
 
               "  LEFT JOIN prfl_t ON prflent = prfient AND prfidocno = prfldocno",
 
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prfiunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooail_t t2 ON t2.ooailent='"||g_enterprise||"' AND t2.ooail001=prfi002 AND t2.ooail002='"||g_lang||"' ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent='"||g_enterprise||"' AND t3.ooail001=prfi003 AND t3.ooail002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prfi006  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prfi007 AND t5.ooefl002='"||g_lang||"' ",
 
               " WHERE prfient = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prfi_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prfiunit,g_browser[g_cnt].b_prfiunit_desc, 
       g_browser[g_cnt].b_prfidocdt,g_browser[g_cnt].b_prfidocno,g_browser[g_cnt].b_prfi001,g_browser[g_cnt].b_prfi002, 
       g_browser[g_cnt].b_prfi002_desc,g_browser[g_cnt].b_prfi003,g_browser[g_cnt].b_prfi003_desc,g_browser[g_cnt].b_prfi004, 
       g_browser[g_cnt].b_prfi005,g_browser[g_cnt].b_prfi006,g_browser[g_cnt].b_prfi006_desc,g_browser[g_cnt].b_prfi007, 
       g_browser[g_cnt].b_prfi007_desc,g_browser[g_cnt].b_prfiunit_desc,g_browser[g_cnt].b_prfi002_desc, 
       g_browser[g_cnt].b_prfi003_desc,g_browser[g_cnt].b_prfi006_desc,g_browser[g_cnt].b_prfi007_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt503_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prfidocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt503_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.construct" ver="4" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt503_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfi_m.* TO NULL
   CALL g_prfj_d.clear()        
   CALL g_prfj2_d.clear() 
   CALL g_prfj3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prfiunit,prfidocdt,prfidocno,prfi001,prfi002,prfi003,prfi004,prfi005, 
          prfi006,prfi007,prfisite,prfistus,prfiownid,prfiowndp,prficrtid,prficrtdp,prficrtdt,prfimodid, 
          prfimoddt,prficnfid,prficnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prficrtdt>>----
         AFTER FIELD prficrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfimoddt>>----
         AFTER FIELD prfimoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prficnfdt>>----
         AFTER FIELD prficnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfipstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prfiunit
         ON ACTION controlp INFIELD prfiunit
            #add-point:ON ACTION controlp INFIELD prfiunit
            {<point name="construct.c.prfiunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfiunit
            #add-point:BEFORE FIELD prfiunit
            {<point name="construct.b.prfiunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfiunit
            
            #add-point:AFTER FIELD prfiunit
            {<point name="construct.a.prfiunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfidocdt
            #add-point:BEFORE FIELD prfidocdt
            {<point name="construct.b.prfidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfidocdt
            
            #add-point:AFTER FIELD prfidocdt
            {<point name="construct.a.prfidocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfidocdt
         ON ACTION controlp INFIELD prfidocdt
            #add-point:ON ACTION controlp INFIELD prfidocdt
            {<point name="construct.c.prfidocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prfidocno
         ON ACTION controlp INFIELD prfidocno
            #add-point:ON ACTION controlp INFIELD prfidocno
            {<point name="construct.c.prfidocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfidocno
            #add-point:BEFORE FIELD prfidocno
            {<point name="construct.b.prfidocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfidocno
            
            #add-point:AFTER FIELD prfidocno
            {<point name="construct.a.prfidocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi001
            #add-point:BEFORE FIELD prfi001
            {<point name="construct.b.prfi001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi001
            
            #add-point:AFTER FIELD prfi001
            {<point name="construct.a.prfi001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfi001
         ON ACTION controlp INFIELD prfi001
            #add-point:ON ACTION controlp INFIELD prfi001
            {<point name="construct.c.prfi001" />}
            #END add-point
 
         #Ctrlp:construct.c.prfi002
         ON ACTION controlp INFIELD prfi002
            #add-point:ON ACTION controlp INFIELD prfi002
            {<point name="construct.c.prfi002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi002
            #add-point:BEFORE FIELD prfi002
            {<point name="construct.b.prfi002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi002
            
            #add-point:AFTER FIELD prfi002
            {<point name="construct.a.prfi002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfi003
         ON ACTION controlp INFIELD prfi003
            #add-point:ON ACTION controlp INFIELD prfi003
            {<point name="construct.c.prfi003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi003
            #add-point:BEFORE FIELD prfi003
            {<point name="construct.b.prfi003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi003
            
            #add-point:AFTER FIELD prfi003
            {<point name="construct.a.prfi003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi004
            #add-point:BEFORE FIELD prfi004
            {<point name="construct.b.prfi004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi004
            
            #add-point:AFTER FIELD prfi004
            {<point name="construct.a.prfi004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfi004
         ON ACTION controlp INFIELD prfi004
            #add-point:ON ACTION controlp INFIELD prfi004
            {<point name="construct.c.prfi004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi005
            #add-point:BEFORE FIELD prfi005
            {<point name="construct.b.prfi005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi005
            
            #add-point:AFTER FIELD prfi005
            {<point name="construct.a.prfi005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfi005
         ON ACTION controlp INFIELD prfi005
            #add-point:ON ACTION controlp INFIELD prfi005
            {<point name="construct.c.prfi005" />}
            #END add-point
 
         #Ctrlp:construct.c.prfi006
         ON ACTION controlp INFIELD prfi006
            #add-point:ON ACTION controlp INFIELD prfi006
            {<point name="construct.c.prfi006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi006
            #add-point:BEFORE FIELD prfi006
            {<point name="construct.b.prfi006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi006
            
            #add-point:AFTER FIELD prfi006
            {<point name="construct.a.prfi006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfi007
         ON ACTION controlp INFIELD prfi007
            #add-point:ON ACTION controlp INFIELD prfi007
            {<point name="construct.c.prfi007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi007
            #add-point:BEFORE FIELD prfi007
            {<point name="construct.b.prfi007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi007
            
            #add-point:AFTER FIELD prfi007
            {<point name="construct.a.prfi007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfisite
            #add-point:BEFORE FIELD prfisite
            {<point name="construct.b.prfisite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfisite
            
            #add-point:AFTER FIELD prfisite
            {<point name="construct.a.prfisite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfisite
         ON ACTION controlp INFIELD prfisite
            #add-point:ON ACTION controlp INFIELD prfisite
            {<point name="construct.c.prfisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfistus
            #add-point:BEFORE FIELD prfistus
            {<point name="construct.b.prfistus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfistus
            
            #add-point:AFTER FIELD prfistus
            {<point name="construct.a.prfistus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfistus
         ON ACTION controlp INFIELD prfistus
            #add-point:ON ACTION controlp INFIELD prfistus
            {<point name="construct.c.prfistus" />}
            #END add-point
 
         #Ctrlp:construct.c.prfiownid
         ON ACTION controlp INFIELD prfiownid
            #add-point:ON ACTION controlp INFIELD prfiownid
            {<point name="construct.c.prfiownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfiownid
            #add-point:BEFORE FIELD prfiownid
            {<point name="construct.b.prfiownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfiownid
            
            #add-point:AFTER FIELD prfiownid
            {<point name="construct.a.prfiownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfiowndp
         ON ACTION controlp INFIELD prfiowndp
            #add-point:ON ACTION controlp INFIELD prfiowndp
            {<point name="construct.c.prfiowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfiowndp
            #add-point:BEFORE FIELD prfiowndp
            {<point name="construct.b.prfiowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfiowndp
            
            #add-point:AFTER FIELD prfiowndp
            {<point name="construct.a.prfiowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prficrtid
         ON ACTION controlp INFIELD prficrtid
            #add-point:ON ACTION controlp INFIELD prficrtid
            {<point name="construct.c.prficrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prficrtid
            #add-point:BEFORE FIELD prficrtid
            {<point name="construct.b.prficrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prficrtid
            
            #add-point:AFTER FIELD prficrtid
            {<point name="construct.a.prficrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prficrtdp
         ON ACTION controlp INFIELD prficrtdp
            #add-point:ON ACTION controlp INFIELD prficrtdp
            {<point name="construct.c.prficrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prficrtdp
            #add-point:BEFORE FIELD prficrtdp
            {<point name="construct.b.prficrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prficrtdp
            
            #add-point:AFTER FIELD prficrtdp
            {<point name="construct.a.prficrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prficrtdt
            #add-point:BEFORE FIELD prficrtdt
            {<point name="construct.b.prficrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prfimodid
         ON ACTION controlp INFIELD prfimodid
            #add-point:ON ACTION controlp INFIELD prfimodid
            {<point name="construct.c.prfimodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfimodid
            #add-point:BEFORE FIELD prfimodid
            {<point name="construct.b.prfimodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfimodid
            
            #add-point:AFTER FIELD prfimodid
            {<point name="construct.a.prfimodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfimoddt
            #add-point:BEFORE FIELD prfimoddt
            {<point name="construct.b.prfimoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prficnfid
         ON ACTION controlp INFIELD prficnfid
            #add-point:ON ACTION controlp INFIELD prficnfid
            {<point name="construct.c.prficnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prficnfid
            #add-point:BEFORE FIELD prficnfid
            {<point name="construct.b.prficnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prficnfid
            
            #add-point:AFTER FIELD prficnfid
            {<point name="construct.a.prficnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prficnfdt
            #add-point:BEFORE FIELD prficnfdt
            {<point name="construct.b.prficnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prfjseq,prfj001,prfjsite,prfjunit
           FROM s_detail1[1].prfjseq,s_detail1[1].prfj001,s_detail1[1].prfjsite,s_detail1[1].prfjunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON prfkseq,prfk001,prfk002,prfksite,prfkunit
           FROM s_detail2[1].prfkseq,s_detail2[1].prfk001,s_detail2[1].prfk002,s_detail2[1].prfksite, 
               s_detail2[1].prfkunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON prflseq,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008, 
          prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit
           FROM s_detail3[1].prflseq,s_detail3[1].prfl001,s_detail3[1].prfl002,s_detail3[1].prfl003, 
               s_detail3[1].prfl004,s_detail3[1].prfl005,s_detail3[1].prfl006,s_detail3[1].prfl007,s_detail3[1].prfl008, 
               s_detail3[1].prfl009,s_detail3[1].prfl010,s_detail3[1].prfl011,s_detail3[1].prfl012,s_detail3[1].prfl013, 
               s_detail3[1].prflsite,s_detail3[1].prflunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt503_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prfidocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt503_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
   
   
 
   CALL aprt503_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfi_m.prfidocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt503_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prfidocno_t = g_prfi_m.prfidocno
 
 
      DELETE FROM prfi_t
       WHERE prfient = g_enterprise AND prfidocno = g_prfi_m.prfidocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prfi_m.prfidocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prfj_t
       WHERE prfjent = g_enterprise AND prfjdocno = g_prfi_m.prfidocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfj_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM prfk_t
       WHERE prfkent = g_enterprise AND
             prfkdocno = g_prfi_m.prfidocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfk_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM prfl_t
       WHERE prflent = g_enterprise AND
             prfldocno = g_prfi_m.prfidocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_prfj_d.clear() 
      CALL g_prfj2_d.clear()       
      CALL g_prfj3_d.clear()       
 
     
      #CALL aprt503_ui_browser_refresh()  
      CALL aprt503_ui_headershow()  
      CALL aprt503_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt503_browser_fill("")
         CALL aprt503_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt503_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt503_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prfi_m.prfidocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aprt503.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt503_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prfj_t
       WHERE prfjent = g_enterprise AND
         prfjdocno = ps_keys_bak[1] AND prfjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM prfk_t
       WHERE prfkent = g_enterprise AND
         prfkdocno = ps_keys_bak[1] AND prfkseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM prfl_t
       WHERE prflent = g_enterprise AND
         prfldocno = ps_keys_bak[1] AND prflseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.description" ver="111" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000128
#+ 
#+ Filename...: aprt503
#+ Description: 客戶定價申請作業
#+ Creator....: 02296(2014/04/01)
#+ Modifier...: 02296(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprt503.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt503_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prfj_t.*
   DEFINE l_detail2    RECORD LIKE prfk_t.*
 
   DEFINE l_detail3    RECORD LIKE prfl_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt503_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt503_detail AS ",
                "SELECT * FROM prfj_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt503_detail SELECT * FROM prfj_t 
                                         WHERE prfjent = g_enterprise AND prfjdocno = g_prfidocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt503_detail 
      #更新key欄位
      SET prfjdocno = g_prfi_m.prfidocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prfj_t SELECT * FROM aprt503_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt503_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprt503_detail AS ",
      "SELECT * FROM prfk_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt503_detail SELECT * FROM prfk_t
                                         WHERE prfkent = g_enterprise AND prfkdocno = g_prfidocno_t
 
 
   #將key修正為調整後   
   UPDATE aprt503_detail SET prfkdocno = g_prfi_m.prfidocno
 
  
   #將資料塞回原table   
   INSERT INTO prfk_t SELECT * FROM aprt503_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt503_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aprt503_detail AS ",
      "SELECT * FROM prfl_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt503_detail SELECT * FROM prfl_t
                                         WHERE prflent = g_enterprise AND prfldocno = g_prfidocno_t
 
 
   #將key修正為調整後   
   UPDATE aprt503_detail SET prfldocno = g_prfi_m.prfidocno
 
  
   #將資料塞回原table   
   INSERT INTO prfl_t SELECT * FROM aprt503_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt503_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prfidocno_t = g_prfi_m.prfidocno
 
   
   DROP TABLE aprt503_detail
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt503_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt503_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prfi_m.prfidocno = g_browser[g_current_idx].b_prfidocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prfi_t",SQLCA.sqlcode,1)
      INITIALIZE g_prfi_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt503_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt503_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.filter" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt503_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prfiunit,prfidocdt,prfidocno,prfi001,prfi002,prfi003,prfi004,prfi005, 
          prfi006,prfi007
                          FROM s_browse[1].b_prfiunit,s_browse[1].b_prfidocdt,s_browse[1].b_prfidocno, 
                              s_browse[1].b_prfi001,s_browse[1].b_prfi002,s_browse[1].b_prfi003,s_browse[1].b_prfi004, 
                              s_browse[1].b_prfi005,s_browse[1].b_prfi006,s_browse[1].b_prfi007
 
         BEFORE CONSTRUCT
               DISPLAY aprt503_filter_parser('prfiunit') TO s_browse[1].b_prfiunit
            DISPLAY aprt503_filter_parser('prfidocdt') TO s_browse[1].b_prfidocdt
            DISPLAY aprt503_filter_parser('prfidocno') TO s_browse[1].b_prfidocno
            DISPLAY aprt503_filter_parser('prfi001') TO s_browse[1].b_prfi001
            DISPLAY aprt503_filter_parser('prfi002') TO s_browse[1].b_prfi002
            DISPLAY aprt503_filter_parser('prfi003') TO s_browse[1].b_prfi003
            DISPLAY aprt503_filter_parser('prfi004') TO s_browse[1].b_prfi004
            DISPLAY aprt503_filter_parser('prfi005') TO s_browse[1].b_prfi005
            DISPLAY aprt503_filter_parser('prfi006') TO s_browse[1].b_prfi006
            DISPLAY aprt503_filter_parser('prfi007') TO s_browse[1].b_prfi007
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt503_filter_show('prfiunit')
   CALL aprt503_filter_show('prfidocdt')
   CALL aprt503_filter_show('prfidocno')
   CALL aprt503_filter_show('prfi001')
   CALL aprt503_filter_show('prfi002')
   CALL aprt503_filter_show('prfi003')
   CALL aprt503_filter_show('prfi004')
   CALL aprt503_filter_show('prfi005')
   CALL aprt503_filter_show('prfi006')
   CALL aprt503_filter_show('prfi007')
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt503_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt503_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt503_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.global" ver="8" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prfi_m        RECORD
       prfiunit LIKE prfi_t.prfiunit, 
   prfiunit_desc LIKE type_t.chr80, 
   prfidocdt LIKE prfi_t.prfidocdt, 
   prfidocno LIKE prfi_t.prfidocno, 
   prfi001 LIKE prfi_t.prfi001, 
   prfi002 LIKE prfi_t.prfi002, 
   prfi002_desc LIKE type_t.chr80, 
   prfi003 LIKE prfi_t.prfi003, 
   prfi003_desc LIKE type_t.chr80, 
   prfi004 LIKE prfi_t.prfi004, 
   prfi005 LIKE prfi_t.prfi005, 
   prfi006 LIKE prfi_t.prfi006, 
   prfi006_desc LIKE type_t.chr80, 
   prfi007 LIKE prfi_t.prfi007, 
   prfi007_desc LIKE type_t.chr80, 
   prfisite LIKE prfi_t.prfisite, 
   prfistus LIKE prfi_t.prfistus, 
   prfiownid LIKE prfi_t.prfiownid, 
   prfiownid_desc LIKE type_t.chr80, 
   prfiowndp LIKE prfi_t.prfiowndp, 
   prfiowndp_desc LIKE type_t.chr80, 
   prficrtid LIKE prfi_t.prficrtid, 
   prficrtid_desc LIKE type_t.chr80, 
   prficrtdp LIKE prfi_t.prficrtdp, 
   prficrtdp_desc LIKE type_t.chr80, 
   prficrtdt DATETIME YEAR TO SECOND, 
   prfimodid LIKE prfi_t.prfimodid, 
   prfimodid_desc LIKE type_t.chr80, 
   prfimoddt DATETIME YEAR TO SECOND, 
   prficnfid LIKE prfi_t.prficnfid, 
   prficnfid_desc LIKE type_t.chr80, 
   prficnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prfj_d        RECORD
       prfjseq LIKE prfj_t.prfjseq, 
   prfj001 LIKE prfj_t.prfj001, 
   prfj001_desc LIKE type_t.chr500, 
   prfjsite LIKE prfj_t.prfjsite, 
   prfjunit LIKE prfj_t.prfjunit
       END RECORD
PRIVATE TYPE type_g_prfj2_d RECORD
       prfkseq LIKE prfk_t.prfkseq, 
   prfk001 LIKE prfk_t.prfk001, 
   prfk002 LIKE prfk_t.prfk002, 
   prfk002_desc LIKE type_t.chr500, 
   prfksite LIKE prfk_t.prfksite, 
   prfkunit LIKE prfk_t.prfkunit
       END RECORD
PRIVATE TYPE type_g_prfj3_d RECORD
       prflseq LIKE prfl_t.prflseq, 
   prfl001 LIKE prfl_t.prfl001, 
   prfl001_desc LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   prfl002 LIKE prfl_t.prfl002, 
   prfl002_desc LIKE type_t.chr500, 
   prfl003 LIKE prfl_t.prfl003, 
   prfl003_desc LIKE type_t.chr500, 
   prfl004 LIKE prfl_t.prfl004, 
   prfl005 LIKE prfl_t.prfl005, 
   prfl006 LIKE prfl_t.prfl006, 
   prfl006_desc LIKE type_t.chr500, 
   prfl007 LIKE prfl_t.prfl007, 
   prfl008 LIKE prfl_t.prfl008, 
   prfl009 LIKE prfl_t.prfl009, 
   prfl010 LIKE prfl_t.prfl010, 
   prfl011 LIKE prfl_t.prfl011, 
   prfl012 LIKE prfl_t.prfl012, 
   prfl013 LIKE prfl_t.prfl013, 
   prflsite LIKE prfl_t.prflsite, 
   prflunit LIKE prfl_t.prflunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prfi_m          type_g_prfi_m
DEFINE g_prfi_m_t        type_g_prfi_m
 
   DEFINE g_prfidocno_t LIKE prfi_t.prfidocno
 
 
DEFINE g_prfj_d          DYNAMIC ARRAY OF type_g_prfj_d
DEFINE g_prfj_d_t        type_g_prfj_d
DEFINE g_prfj2_d   DYNAMIC ARRAY OF type_g_prfj2_d
DEFINE g_prfj2_d_t type_g_prfj2_d
DEFINE g_prfj3_d   DYNAMIC ARRAY OF type_g_prfj3_d
DEFINE g_prfj3_d_t type_g_prfj3_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfiunit LIKE prfi_t.prfiunit,
   b_prfiunit_desc LIKE type_t.chr80,
      b_prfidocdt LIKE prfi_t.prfidocdt,
      b_prfidocno LIKE prfi_t.prfidocno,
      b_prfi001 LIKE prfi_t.prfi001,
      b_prfi002 LIKE prfi_t.prfi002,
   b_prfi002_desc LIKE type_t.chr80,
      b_prfi003 LIKE prfi_t.prfi003,
   b_prfi003_desc LIKE type_t.chr80,
      b_prfi004 LIKE prfi_t.prfi004,
      b_prfi005 LIKE prfi_t.prfi005,
      b_prfi006 LIKE prfi_t.prfi006,
   b_prfi006_desc LIKE type_t.chr80,
      b_prfi007 LIKE prfi_t.prfi007,
   b_prfi007_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfiunit LIKE prfi_t.prfiunit,
   b_prfiunit_desc LIKE type_t.chr80,
      b_prfidocdt LIKE prfi_t.prfidocdt,
      b_prfidocno LIKE prfi_t.prfidocno,
      b_prfi001 LIKE prfi_t.prfi001,
      b_prfi002 LIKE prfi_t.prfi002,
   b_prfi002_desc LIKE type_t.chr80,
      b_prfi003 LIKE prfi_t.prfi003,
   b_prfi003_desc LIKE type_t.chr80,
      b_prfi004 LIKE prfi_t.prfi004,
      b_prfi005 LIKE prfi_t.prfi005,
      b_prfi006 LIKE prfi_t.prfi006,
   b_prfi006_desc LIKE type_t.chr80,
      b_prfi007 LIKE prfi_t.prfi007,
   b_prfi007_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprt503.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt503_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prfj_d.getLength() THEN
         LET g_detail_idx = g_prfj_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prfj_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prfj_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_prfj2_d.getLength() THEN
         LET g_detail_idx = g_prfj2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prfj2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prfj2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_prfj3_d.getLength() THEN
         LET g_detail_idx = g_prfj3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prfj3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prfj3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt503_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prfistus','13','N,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('prfi001','6042') 
   CALL cl_set_combo_scc('prfk001','6043') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt503_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprt503.input" ver="3" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt503_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prfjseq,prfj001,prfjsite,prfjunit FROM prfj_t WHERE prfjent=? AND prfjdocno=?  
       AND prfjseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt503_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT prfkseq,prfk001,prfk002,prfksite,prfkunit FROM prfk_t WHERE prfkent=?  
       AND prfkdocno=? AND prfkseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt503_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT prflseq,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008, 
       prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit FROM prfl_t WHERE prflent=? AND prfldocno=?  
       AND prflseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt503_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt503_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt503_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prfi_m.prfiunit,g_prfi_m.prfidocdt,g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002, 
       g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite, 
       g_prfi_m.prfistus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="aprt503.input.body" ver="6" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prfj_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prfj_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt503_b_fill()
            LET g_rec_b = g_prfj_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
               CLOSE aprt503_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prfj_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prfj_d[l_ac].prfjseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prfj_d_t.* = g_prfj_d[l_ac].*  #BACKUP
               CALL aprt503_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt503_set_no_entry_b(l_cmd)
               IF NOT aprt503_lock_b("prfj_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt503_bcl INTO g_prfj_d[l_ac].prfjseq,g_prfj_d[l_ac].prfj001,g_prfj_d[l_ac].prfjsite, 
                      g_prfj_d[l_ac].prfjunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prfj_d_t.prfjseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt503_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prfj_d[l_ac].* TO NULL 
            
            LET g_prfj_d_t.* = g_prfj_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt503_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt503_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prfj_d[li_reproduce_target].* = g_prfj_d[li_reproduce].*
 
               LET g_prfj_d[li_reproduce_target].prfjseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prfj_t 
             WHERE prfjent = g_enterprise AND prfjdocno = g_prfi_m.prfidocno
 
               AND prfjseq = g_prfj_d[l_ac].prfjseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj_d[g_detail_idx].prfjseq
               CALL aprt503_insert_b('prfj_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prfj_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prfj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt503_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prfj_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prfj_d.deleteElement(l_ac)
               NEXT FIELD prfjseq
            END IF
         
            IF g_prfj_d[l_ac].prfjseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prfj_t
                WHERE prfjent = g_enterprise AND prfjdocno = g_prfi_m.prfidocno AND
 
                      prfjseq = g_prfj_d_t.prfjseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfj_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt503_bcl
               LET l_count = g_prfj_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj_d[g_detail_idx].prfjseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt503_delete_b('prfj_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD prfjseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj_d[l_ac].prfjseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD prfjseq
            END IF
 
 
            #add-point:AFTER FIELD prfjseq
            {<point name="input.a.page1.prfjseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfjseq
            #add-point:BEFORE FIELD prfjseq
            {<point name="input.b.page1.prfjseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfjseq
            #add-point:ON CHANGE prfjseq
            {<point name="input.g.page1.prfjseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfj001
            
            #add-point:AFTER FIELD prfj001
            {<point name="input.a.page1.prfj001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfj001
            #add-point:BEFORE FIELD prfj001
            {<point name="input.b.page1.prfj001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfj001
            #add-point:ON CHANGE prfj001
            {<point name="input.g.page1.prfj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfjsite
            #add-point:BEFORE FIELD prfjsite
            {<point name="input.b.page1.prfjsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfjsite
            
            #add-point:AFTER FIELD prfjsite
            {<point name="input.a.page1.prfjsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfjsite
            #add-point:ON CHANGE prfjsite
            {<point name="input.g.page1.prfjsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfjunit
            #add-point:BEFORE FIELD prfjunit
            {<point name="input.b.page1.prfjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfjunit
            
            #add-point:AFTER FIELD prfjunit
            {<point name="input.a.page1.prfjunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfjunit
            #add-point:ON CHANGE prfjunit
            {<point name="input.g.page1.prfjunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prfjseq
         ON ACTION controlp INFIELD prfjseq
            #add-point:ON ACTION controlp INFIELD prfjseq
            {<point name="input.c.page1.prfjseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prfj001
         ON ACTION controlp INFIELD prfj001
            #add-point:ON ACTION controlp INFIELD prfj001
            {<point name="input.c.page1.prfj001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prfjsite
         ON ACTION controlp INFIELD prfjsite
            #add-point:ON ACTION controlp INFIELD prfjsite
            {<point name="input.c.page1.prfjsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prfjunit
         ON ACTION controlp INFIELD prfjunit
            #add-point:ON ACTION controlp INFIELD prfjunit
            {<point name="input.c.page1.prfjunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prfj_d[l_ac].* = g_prfj_d_t.*
               CLOSE aprt503_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prfj_d[l_ac].prfjseq,-263,1)
               LET g_prfj_d[l_ac].* = g_prfj_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prfj_t SET (prfjdocno,prfjseq,prfj001,prfjsite,prfjunit) = (g_prfi_m.prfidocno, 
                   g_prfj_d[l_ac].prfjseq,g_prfj_d[l_ac].prfj001,g_prfj_d[l_ac].prfjsite,g_prfj_d[l_ac].prfjunit) 

                WHERE prfjent = g_enterprise AND prfjdocno = g_prfi_m.prfidocno 
 
                  AND prfjseq = g_prfj_d_t.prfjseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prfj_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prfj_d[l_ac].* = g_prfj_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prfj_t",SQLCA.sqlcode,1)
                     LET g_prfj_d[l_ac].* = g_prfj_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys_bak[1] = g_prfidocno_t
               LET gs_keys[2] = g_prfj_d[g_detail_idx].prfjseq
               LET gs_keys_bak[2] = g_prfj_d_t.prfjseq
               CALL aprt503_update_b('prfj_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj_d_t)
               LET g_log2 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt503_unlock_b("prfj_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prfj_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prfj_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_prfj2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prfj2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt503_b_fill()
            LET g_rec_b = g_prfj2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prfj2_d[l_ac].* TO NULL 
                  LET g_prfj2_d[l_ac].prfk001 = "1"
 
            LET g_prfj2_d_t.* = g_prfj2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt503_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt503_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prfj2_d[li_reproduce_target].* = g_prfj2_d[li_reproduce].*
 
               LET g_prfj2_d[li_reproduce_target].prfkseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
               CLOSE aprt503_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prfj2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prfj2_d[l_ac].prfkseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prfj2_d_t.* = g_prfj2_d[l_ac].*  #BACKUP
               CALL aprt503_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aprt503_set_no_entry_b(l_cmd)
               IF NOT aprt503_lock_b("prfk_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt503_bcl2 INTO g_prfj2_d[l_ac].prfkseq,g_prfj2_d[l_ac].prfk001,g_prfj2_d[l_ac].prfk002, 
                      g_prfj2_d[l_ac].prfksite,g_prfj2_d[l_ac].prfkunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt503_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prfj2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prfj2_d.deleteElement(l_ac)
               NEXT FIELD prfkseq
            END IF
         
            IF g_prfj2_d[l_ac].prfkseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM prfk_t
                WHERE prfkent = g_enterprise AND prfkdocno = g_prfi_m.prfidocno AND
                      prfkseq = g_prfj2_d_t.prfkseq
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfj_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt503_bcl
               LET l_count = g_prfj_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj2_d[g_detail_idx].prfkseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL aprt503_delete_b('prfk_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prfk_t 
             WHERE prfkent = g_enterprise AND prfkdocno = g_prfi_m.prfidocno
               AND prfkseq = g_prfj2_d[l_ac].prfkseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj2_d[g_detail_idx].prfkseq
               CALL aprt503_insert_b('prfk_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prfj_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prfk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt503_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prfj2_d[l_ac].* = g_prfj2_d_t.*
               CLOSE aprt503_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prfj2_d[l_ac].* = g_prfj2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE prfk_t SET (prfkdocno,prfkseq,prfk001,prfk002,prfksite,prfkunit) = (g_prfi_m.prfidocno, 
                   g_prfj2_d[l_ac].prfkseq,g_prfj2_d[l_ac].prfk001,g_prfj2_d[l_ac].prfk002,g_prfj2_d[l_ac].prfksite, 
                   g_prfj2_d[l_ac].prfkunit) #自訂欄位頁簽
                WHERE prfkent = g_enterprise AND prfkdocno = g_prfi_m.prfidocno
                  AND prfkseq = g_prfj2_d_t.prfkseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prfk_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prfj2_d[l_ac].* = g_prfj2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prfk_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prfj2_d[l_ac].* = g_prfj2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys_bak[1] = g_prfidocno_t
               LET gs_keys[2] = g_prfj2_d[g_detail_idx].prfkseq
               LET gs_keys_bak[2] = g_prfj2_d_t.prfkseq
               CALL aprt503_update_b('prfk_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj2_d_t)
               LET g_log2 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD prfkseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj2_d[l_ac].prfkseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD prfkseq
            END IF
 
 
            #add-point:AFTER FIELD prfkseq
            {<point name="input.a.page2.prfkseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfkseq
            #add-point:BEFORE FIELD prfkseq
            {<point name="input.b.page2.prfkseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfkseq
            #add-point:ON CHANGE prfkseq
            {<point name="input.g.page2.prfkseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfk001
            #add-point:BEFORE FIELD prfk001
            {<point name="input.b.page2.prfk001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfk001
            
            #add-point:AFTER FIELD prfk001
            {<point name="input.a.page2.prfk001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfk001
            #add-point:ON CHANGE prfk001
            {<point name="input.g.page2.prfk001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfk002
            
            #add-point:AFTER FIELD prfk002
            {<point name="input.a.page2.prfk002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfk002
            #add-point:BEFORE FIELD prfk002
            {<point name="input.b.page2.prfk002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfk002
            #add-point:ON CHANGE prfk002
            {<point name="input.g.page2.prfk002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfksite
            #add-point:BEFORE FIELD prfksite
            {<point name="input.b.page2.prfksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfksite
            
            #add-point:AFTER FIELD prfksite
            {<point name="input.a.page2.prfksite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfksite
            #add-point:ON CHANGE prfksite
            {<point name="input.g.page2.prfksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfkunit
            #add-point:BEFORE FIELD prfkunit
            {<point name="input.b.page2.prfkunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfkunit
            
            #add-point:AFTER FIELD prfkunit
            {<point name="input.a.page2.prfkunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfkunit
            #add-point:ON CHANGE prfkunit
            {<point name="input.g.page2.prfkunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.prfkseq
         ON ACTION controlp INFIELD prfkseq
            #add-point:ON ACTION controlp INFIELD prfkseq
            {<point name="input.c.page2.prfkseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prfk001
         ON ACTION controlp INFIELD prfk001
            #add-point:ON ACTION controlp INFIELD prfk001
            {<point name="input.c.page2.prfk001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prfk002
         ON ACTION controlp INFIELD prfk002
            #add-point:ON ACTION controlp INFIELD prfk002
            {<point name="input.c.page2.prfk002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prfksite
         ON ACTION controlp INFIELD prfksite
            #add-point:ON ACTION controlp INFIELD prfksite
            {<point name="input.c.page2.prfksite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.prfkunit
         ON ACTION controlp INFIELD prfkunit
            #add-point:ON ACTION controlp INFIELD prfkunit
            {<point name="input.c.page2.prfkunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prfj2_d[l_ac].* = g_prfj2_d_t.*
               END IF
               CLOSE aprt503_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aprt503_unlock_b("prfk_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_prfj2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prfj2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_prfj3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prfj3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt503_b_fill()
            LET g_rec_b = g_prfj3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prfj3_d[l_ac].* TO NULL 
            
            LET g_prfj3_d_t.* = g_prfj3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt503_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt503_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prfj3_d[li_reproduce_target].* = g_prfj3_d[li_reproduce].*
 
               LET g_prfj3_d[li_reproduce_target].prflseq = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
               CLOSE aprt503_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prfj3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prfj3_d[l_ac].prflseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_prfj3_d_t.* = g_prfj3_d[l_ac].*  #BACKUP
               CALL aprt503_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL aprt503_set_no_entry_b(l_cmd)
               IF NOT aprt503_lock_b("prfl_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt503_bcl3 INTO g_prfj3_d[l_ac].prflseq,g_prfj3_d[l_ac].prfl001,g_prfj3_d[l_ac].prfl002, 
                      g_prfj3_d[l_ac].prfl003,g_prfj3_d[l_ac].prfl004,g_prfj3_d[l_ac].prfl005,g_prfj3_d[l_ac].prfl006, 
                      g_prfj3_d[l_ac].prfl007,g_prfj3_d[l_ac].prfl008,g_prfj3_d[l_ac].prfl009,g_prfj3_d[l_ac].prfl010, 
                      g_prfj3_d[l_ac].prfl011,g_prfj3_d[l_ac].prfl012,g_prfj3_d[l_ac].prfl013,g_prfj3_d[l_ac].prflsite, 
                      g_prfj3_d[l_ac].prflunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt503_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prfj3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prfj3_d.deleteElement(l_ac)
               NEXT FIELD prflseq
            END IF
         
            IF g_prfj3_d[l_ac].prflseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM prfl_t
                WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno AND
                      prflseq = g_prfj3_d_t.prflseq
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfj_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt503_bcl
               LET l_count = g_prfj_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj3_d[g_detail_idx].prflseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL aprt503_delete_b('prfl_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prfl_t 
             WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno
               AND prflseq = g_prfj3_d[l_ac].prflseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys[2] = g_prfj3_d[g_detail_idx].prflseq
               CALL aprt503_insert_b('prfl_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prfj_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prfl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt503_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prfj3_d[l_ac].* = g_prfj3_d_t.*
               CLOSE aprt503_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_prfj3_d[l_ac].* = g_prfj3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE prfl_t SET (prfldocno,prflseq,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006, 
                   prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit) = (g_prfi_m.prfidocno, 
                   g_prfj3_d[l_ac].prflseq,g_prfj3_d[l_ac].prfl001,g_prfj3_d[l_ac].prfl002,g_prfj3_d[l_ac].prfl003, 
                   g_prfj3_d[l_ac].prfl004,g_prfj3_d[l_ac].prfl005,g_prfj3_d[l_ac].prfl006,g_prfj3_d[l_ac].prfl007, 
                   g_prfj3_d[l_ac].prfl008,g_prfj3_d[l_ac].prfl009,g_prfj3_d[l_ac].prfl010,g_prfj3_d[l_ac].prfl011, 
                   g_prfj3_d[l_ac].prfl012,g_prfj3_d[l_ac].prfl013,g_prfj3_d[l_ac].prflsite,g_prfj3_d[l_ac].prflunit)  
                   #自訂欄位頁簽
                WHERE prflent = g_enterprise AND prfldocno = g_prfi_m.prfidocno
                  AND prflseq = g_prfj3_d_t.prflseq #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prfl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prfj3_d[l_ac].* = g_prfj3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prfl_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_prfj3_d[l_ac].* = g_prfj3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfi_m.prfidocno
               LET gs_keys_bak[1] = g_prfidocno_t
               LET gs_keys[2] = g_prfj3_d[g_detail_idx].prflseq
               LET gs_keys_bak[2] = g_prfj3_d_t.prflseq
               CALL aprt503_update_b('prfl_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj3_d_t)
               LET g_log2 = util.JSON.stringify(g_prfi_m),util.JSON.stringify(g_prfj3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD prflseq
            #add-point:BEFORE FIELD prflseq
            {<point name="input.b.page3.prflseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prflseq
            
            #add-point:AFTER FIELD prflseq
            {<point name="input.a.page3.prflseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prflseq
            #add-point:ON CHANGE prflseq
            {<point name="input.g.page3.prflseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl001
            
            #add-point:AFTER FIELD prfl001
            {<point name="input.a.page3.prfl001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl001
            #add-point:BEFORE FIELD prfl001
            {<point name="input.b.page3.prfl001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl001
            #add-point:ON CHANGE prfl001
            {<point name="input.g.page3.prfl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl002
            
            #add-point:AFTER FIELD prfl002
            {<point name="input.a.page3.prfl002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl002
            #add-point:BEFORE FIELD prfl002
            {<point name="input.b.page3.prfl002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl002
            #add-point:ON CHANGE prfl002
            {<point name="input.g.page3.prfl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl003
            
            #add-point:AFTER FIELD prfl003
            {<point name="input.a.page3.prfl003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl003
            #add-point:BEFORE FIELD prfl003
            {<point name="input.b.page3.prfl003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl003
            #add-point:ON CHANGE prfl003
            {<point name="input.g.page3.prfl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl004
            #add-point:BEFORE FIELD prfl004
            {<point name="input.b.page3.prfl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl004
            
            #add-point:AFTER FIELD prfl004
            {<point name="input.a.page3.prfl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfl004
            #add-point:ON CHANGE prfl004
            {<point name="input.g.page3.prfl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl005
            #add-point:BEFORE FIELD prfl005
            {<point name="input.b.page3.prfl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl005
            
            #add-point:AFTER FIELD prfl005
            {<point name="input.a.page3.prfl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfl005
            #add-point:ON CHANGE prfl005
            {<point name="input.g.page3.prfl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl006
            
            #add-point:AFTER FIELD prfl006
            {<point name="input.a.page3.prfl006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl006
            #add-point:BEFORE FIELD prfl006
            {<point name="input.b.page3.prfl006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl006
            #add-point:ON CHANGE prfl006
            {<point name="input.g.page3.prfl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl007
            END IF
 
 
            #add-point:AFTER FIELD prfl007
            {<point name="input.a.page3.prfl007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl007
            #add-point:BEFORE FIELD prfl007
            {<point name="input.b.page3.prfl007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl007
            #add-point:ON CHANGE prfl007
            {<point name="input.g.page3.prfl007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl008,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl008
            END IF
 
 
            #add-point:AFTER FIELD prfl008
            {<point name="input.a.page3.prfl008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl008
            #add-point:BEFORE FIELD prfl008
            {<point name="input.b.page3.prfl008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl008
            #add-point:ON CHANGE prfl008
            {<point name="input.g.page3.prfl008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl009
            #add-point:BEFORE FIELD prfl009
            {<point name="input.b.page3.prfl009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl009
            
            #add-point:AFTER FIELD prfl009
            {<point name="input.a.page3.prfl009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfl009
            #add-point:ON CHANGE prfl009
            {<point name="input.g.page3.prfl009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl010
            END IF
 
 
            #add-point:AFTER FIELD prfl010
            {<point name="input.a.page3.prfl010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl010
            #add-point:BEFORE FIELD prfl010
            {<point name="input.b.page3.prfl010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl010
            #add-point:ON CHANGE prfl010
            {<point name="input.g.page3.prfl010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl011
            END IF
 
 
            #add-point:AFTER FIELD prfl011
            {<point name="input.a.page3.prfl011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl011
            #add-point:BEFORE FIELD prfl011
            {<point name="input.b.page3.prfl011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl011
            #add-point:ON CHANGE prfl011
            {<point name="input.g.page3.prfl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl012
            END IF
 
 
            #add-point:AFTER FIELD prfl012
            {<point name="input.a.page3.prfl012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl012
            #add-point:BEFORE FIELD prfl012
            {<point name="input.b.page3.prfl012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl012
            #add-point:ON CHANGE prfl012
            {<point name="input.g.page3.prfl012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfl013
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfj3_d[l_ac].prfl013,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfl013
            END IF
 
 
            #add-point:AFTER FIELD prfl013
            {<point name="input.a.page3.prfl013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfl013
            #add-point:BEFORE FIELD prfl013
            {<point name="input.b.page3.prfl013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfl013
            #add-point:ON CHANGE prfl013
            {<point name="input.g.page3.prfl013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prflsite
            #add-point:BEFORE FIELD prflsite
            {<point name="input.b.page3.prflsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prflsite
            
            #add-point:AFTER FIELD prflsite
            {<point name="input.a.page3.prflsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prflsite
            #add-point:ON CHANGE prflsite
            {<point name="input.g.page3.prflsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prflunit
            #add-point:BEFORE FIELD prflunit
            {<point name="input.b.page3.prflunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prflunit
            
            #add-point:AFTER FIELD prflunit
            {<point name="input.a.page3.prflunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prflunit
            #add-point:ON CHANGE prflunit
            {<point name="input.g.page3.prflunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.prflseq
         ON ACTION controlp INFIELD prflseq
            #add-point:ON ACTION controlp INFIELD prflseq
            {<point name="input.c.page3.prflseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl001
         ON ACTION controlp INFIELD prfl001
            #add-point:ON ACTION controlp INFIELD prfl001
            {<point name="input.c.page3.prfl001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl002
         ON ACTION controlp INFIELD prfl002
            #add-point:ON ACTION controlp INFIELD prfl002
            {<point name="input.c.page3.prfl002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl003
         ON ACTION controlp INFIELD prfl003
            #add-point:ON ACTION controlp INFIELD prfl003
            {<point name="input.c.page3.prfl003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl004
         ON ACTION controlp INFIELD prfl004
            #add-point:ON ACTION controlp INFIELD prfl004
            {<point name="input.c.page3.prfl004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl005
         ON ACTION controlp INFIELD prfl005
            #add-point:ON ACTION controlp INFIELD prfl005
            {<point name="input.c.page3.prfl005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl006
         ON ACTION controlp INFIELD prfl006
            #add-point:ON ACTION controlp INFIELD prfl006
            {<point name="input.c.page3.prfl006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl007
         ON ACTION controlp INFIELD prfl007
            #add-point:ON ACTION controlp INFIELD prfl007
            {<point name="input.c.page3.prfl007" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl008
         ON ACTION controlp INFIELD prfl008
            #add-point:ON ACTION controlp INFIELD prfl008
            {<point name="input.c.page3.prfl008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl009
         ON ACTION controlp INFIELD prfl009
            #add-point:ON ACTION controlp INFIELD prfl009
            {<point name="input.c.page3.prfl009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl010
         ON ACTION controlp INFIELD prfl010
            #add-point:ON ACTION controlp INFIELD prfl010
            {<point name="input.c.page3.prfl010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl011
         ON ACTION controlp INFIELD prfl011
            #add-point:ON ACTION controlp INFIELD prfl011
            {<point name="input.c.page3.prfl011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl012
         ON ACTION controlp INFIELD prfl012
            #add-point:ON ACTION controlp INFIELD prfl012
            {<point name="input.c.page3.prfl012" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prfl013
         ON ACTION controlp INFIELD prfl013
            #add-point:ON ACTION controlp INFIELD prfl013
            {<point name="input.c.page3.prfl013" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prflsite
         ON ACTION controlp INFIELD prflsite
            #add-point:ON ACTION controlp INFIELD prflsite
            {<point name="input.c.page3.prflsite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.prflunit
         ON ACTION controlp INFIELD prflunit
            #add-point:ON ACTION controlp INFIELD prflunit
            {<point name="input.c.page3.prflunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_prfj3_d[l_ac].* = g_prfj3_d_t.*
               END IF
               CLOSE aprt503_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aprt503_unlock_b("prfl_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_prfj3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prfj3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="aprt503.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prfi_m.prfiunit,g_prfi_m.prfidocdt,g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002, 
          g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite, 
          g_prfi_m.prfistus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prfiunit
            
            #add-point:AFTER FIELD prfiunit
            {<point name="input.a.prfiunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfiunit
            #add-point:BEFORE FIELD prfiunit
            {<point name="input.b.prfiunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfiunit
            #add-point:ON CHANGE prfiunit
            {<point name="input.g.prfiunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfidocdt
            #add-point:BEFORE FIELD prfidocdt
            {<point name="input.b.prfidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfidocdt
            
            #add-point:AFTER FIELD prfidocdt
            {<point name="input.a.prfidocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfidocdt
            #add-point:ON CHANGE prfidocdt
            {<point name="input.g.prfidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfidocno
            
            #add-point:AFTER FIELD prfidocno
            {<point name="input.a.prfidocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfidocno
            #add-point:BEFORE FIELD prfidocno
            {<point name="input.b.prfidocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfidocno
            #add-point:ON CHANGE prfidocno
            {<point name="input.g.prfidocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi001
            #add-point:BEFORE FIELD prfi001
            {<point name="input.b.prfi001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi001
            
            #add-point:AFTER FIELD prfi001
            {<point name="input.a.prfi001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfi001
            #add-point:ON CHANGE prfi001
            {<point name="input.g.prfi001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi002
            
            #add-point:AFTER FIELD prfi002
            {<point name="input.a.prfi002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi002
            #add-point:BEFORE FIELD prfi002
            {<point name="input.b.prfi002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfi002
            #add-point:ON CHANGE prfi002
            {<point name="input.g.prfi002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi003
            
            #add-point:AFTER FIELD prfi003
            {<point name="input.a.prfi003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi003
            #add-point:BEFORE FIELD prfi003
            {<point name="input.b.prfi003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfi003
            #add-point:ON CHANGE prfi003
            {<point name="input.g.prfi003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi004
            #add-point:BEFORE FIELD prfi004
            {<point name="input.b.prfi004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi004
            
            #add-point:AFTER FIELD prfi004
            {<point name="input.a.prfi004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfi004
            #add-point:ON CHANGE prfi004
            {<point name="input.g.prfi004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi005
            #add-point:BEFORE FIELD prfi005
            {<point name="input.b.prfi005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi005
            
            #add-point:AFTER FIELD prfi005
            {<point name="input.a.prfi005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfi005
            #add-point:ON CHANGE prfi005
            {<point name="input.g.prfi005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi006
            
            #add-point:AFTER FIELD prfi006
            {<point name="input.a.prfi006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi006
            #add-point:BEFORE FIELD prfi006
            {<point name="input.b.prfi006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfi006
            #add-point:ON CHANGE prfi006
            {<point name="input.g.prfi006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfi007
            
            #add-point:AFTER FIELD prfi007
            {<point name="input.a.prfi007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfi007
            #add-point:BEFORE FIELD prfi007
            {<point name="input.b.prfi007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfi007
            #add-point:ON CHANGE prfi007
            {<point name="input.g.prfi007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfisite
            #add-point:BEFORE FIELD prfisite
            {<point name="input.b.prfisite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfisite
            
            #add-point:AFTER FIELD prfisite
            {<point name="input.a.prfisite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfisite
            #add-point:ON CHANGE prfisite
            {<point name="input.g.prfisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfistus
            #add-point:BEFORE FIELD prfistus
            {<point name="input.b.prfistus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfistus
            
            #add-point:AFTER FIELD prfistus
            {<point name="input.a.prfistus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfistus
            #add-point:ON CHANGE prfistus
            {<point name="input.g.prfistus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prfiunit
         ON ACTION controlp INFIELD prfiunit
            #add-point:ON ACTION controlp INFIELD prfiunit
            {<point name="input.c.prfiunit" />}
            #END add-point
 
         #Ctrlp:input.c.prfidocdt
         ON ACTION controlp INFIELD prfidocdt
            #add-point:ON ACTION controlp INFIELD prfidocdt
            {<point name="input.c.prfidocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prfidocno
         ON ACTION controlp INFIELD prfidocno
            #add-point:ON ACTION controlp INFIELD prfidocno
            {<point name="input.c.prfidocno" />}
            #END add-point
 
         #Ctrlp:input.c.prfi001
         ON ACTION controlp INFIELD prfi001
            #add-point:ON ACTION controlp INFIELD prfi001
            {<point name="input.c.prfi001" />}
            #END add-point
 
         #Ctrlp:input.c.prfi002
         ON ACTION controlp INFIELD prfi002
            #add-point:ON ACTION controlp INFIELD prfi002
            {<point name="input.c.prfi002" />}
            #END add-point
 
         #Ctrlp:input.c.prfi003
         ON ACTION controlp INFIELD prfi003
            #add-point:ON ACTION controlp INFIELD prfi003
            {<point name="input.c.prfi003" />}
            #END add-point
 
         #Ctrlp:input.c.prfi004
         ON ACTION controlp INFIELD prfi004
            #add-point:ON ACTION controlp INFIELD prfi004
            {<point name="input.c.prfi004" />}
            #END add-point
 
         #Ctrlp:input.c.prfi005
         ON ACTION controlp INFIELD prfi005
            #add-point:ON ACTION controlp INFIELD prfi005
            {<point name="input.c.prfi005" />}
            #END add-point
 
         #Ctrlp:input.c.prfi006
         ON ACTION controlp INFIELD prfi006
            #add-point:ON ACTION controlp INFIELD prfi006
            {<point name="input.c.prfi006" />}
            #END add-point
 
         #Ctrlp:input.c.prfi007
         ON ACTION controlp INFIELD prfi007
            #add-point:ON ACTION controlp INFIELD prfi007
            {<point name="input.c.prfi007" />}
            #END add-point
 
         #Ctrlp:input.c.prfisite
         ON ACTION controlp INFIELD prfisite
            #add-point:ON ACTION controlp INFIELD prfisite
            {<point name="input.c.prfisite" />}
            #END add-point
 
         #Ctrlp:input.c.prfistus
         ON ACTION controlp INFIELD prfistus
            #add-point:ON ACTION controlp INFIELD prfistus
            {<point name="input.c.prfistus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prfi_m.prfidocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prfi_t (prfient,prfiunit,prfidocdt,prfidocno,prfi001,prfi002,prfi003,prfi004, 
                   prfi005,prfi006,prfi007,prfisite,prfistus,prfiownid,prfiowndp,prficrtid,prficrtdp, 
                   prficrtdt,prficnfid,prficnfdt)
               VALUES (g_enterprise,g_prfi_m.prfiunit,g_prfi_m.prfidocdt,g_prfi_m.prfidocno,g_prfi_m.prfi001, 
                   g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006, 
                   g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
                   g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prficnfid,g_prfi_m.prficnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prfi_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt503_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prfi_t SET (prfiunit,prfidocdt,prfidocno,prfi001,prfi002,prfi003,prfi004,prfi005, 
                   prfi006,prfi007,prfisite,prfistus,prfiownid,prfiowndp,prficrtid,prficrtdp,prficrtdt, 
                   prficnfid,prficnfdt) = (g_prfi_m.prfiunit,g_prfi_m.prfidocdt,g_prfi_m.prfidocno,g_prfi_m.prfi001, 
                   g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006, 
                   g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
                   g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prficnfid,g_prfi_m.prficnfdt) 

                WHERE prfient = g_enterprise AND prfidocno = g_prfidocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfi_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prfi_m_t)
               LET g_log2 = util.JSON.stringify(g_prfi_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prfidocno_t = g_prfi_m.prfidocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="aprt503.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prfidocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prfjseq
               WHEN "s_detail2"
                  NEXT FIELD prfkseq
               WHEN "s_detail3"
                  NEXT FIELD prflseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt503_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prfj_d.clear()   
   CALL g_prfj2_d.clear()  
   CALL g_prfj3_d.clear()  
 
 
   INITIALIZE g_prfi_m.* LIKE prfi_t.*             #DEFAULT 設定
   
   LET g_prfidocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prfi_m.prfiownid = g_user
      LET g_prfi_m.prfiowndp = g_dept
      LET g_prfi_m.prficrtid = g_user
      LET g_prfi_m.prficrtdp = g_dept 
      LET g_prfi_m.prficrtdt = cl_get_current()
      LET g_prfi_m.prfimodid = ""
      LET g_prfi_m.prfimoddt = ""
      LET g_prfi_m.prfistus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prfi_m.prfi001 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt503_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfi_m.* = g_prfi_m_t.*
         CALL aprt503_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prfj_d.clear()
      CALL g_prfj2_d.clear()
      CALL g_prfj3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prfidocno_t = g_prfi_m.prfidocno
 
   
   LET g_wc = g_wc,  
              " OR ( prfient = '" ||g_enterprise|| "' AND",
              " prfidocno = '", g_prfi_m.prfidocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt503_cl
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt503_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prfj_t
                  (prfjent,
                   prfjdocno,
                   prfjseq
                   ,prfj001,prfjsite,prfjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prfj_d[g_detail_idx].prfj001,g_prfj_d[g_detail_idx].prfjsite,g_prfj_d[g_detail_idx].prfjunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO prfk_t
                  (prfkent,
                   prfkdocno,
                   prfkseq
                   ,prfk001,prfk002,prfksite,prfkunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prfj2_d[g_detail_idx].prfk001,g_prfj2_d[g_detail_idx].prfk002,g_prfj2_d[g_detail_idx].prfksite, 
                       g_prfj2_d[g_detail_idx].prfkunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO prfl_t
                  (prflent,
                   prfldocno,
                   prflseq
                   ,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prfj3_d[g_detail_idx].prfl001,g_prfj3_d[g_detail_idx].prfl002,g_prfj3_d[g_detail_idx].prfl003, 
                       g_prfj3_d[g_detail_idx].prfl004,g_prfj3_d[g_detail_idx].prfl005,g_prfj3_d[g_detail_idx].prfl006, 
                       g_prfj3_d[g_detail_idx].prfl007,g_prfj3_d[g_detail_idx].prfl008,g_prfj3_d[g_detail_idx].prfl009, 
                       g_prfj3_d[g_detail_idx].prfl010,g_prfj3_d[g_detail_idx].prfl011,g_prfj3_d[g_detail_idx].prfl012, 
                       g_prfj3_d[g_detail_idx].prfl013,g_prfj3_d[g_detail_idx].prflsite,g_prfj3_d[g_detail_idx].prflunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("prfl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt503_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt503_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prfj_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt503_bcl USING g_enterprise,
                                       g_prfi_m.prfidocno,g_prfj_d[g_detail_idx].prfjseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt503_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "prfk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprt503_bcl2 USING g_enterprise,
                                             g_prfi_m.prfidocno,g_prfj2_d[g_detail_idx].prfkseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt503_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "prfl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aprt503_bcl3 USING g_enterprise,
                                             g_prfi_m.prfidocno,g_prfj3_d[g_detail_idx].prflseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt503_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.main" ver="8" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prfiunit,'',prfidocdt,prfidocno,prfi001,prfi002,'',prfi003,'',prfi004, 
       prfi005,prfi006,'',prfi007,'',prfisite,prfistus,prfiownid,'',prfiowndp,'',prficrtid,'',prficrtdp, 
       '',prficrtdt,prfimodid,'',prfimoddt,prficnfid,'',prficnfdt", 
                      " FROM prfi_t",
                      " WHERE prfient= ? AND prfidocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt503_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prfiunit,prfidocdt,prfidocno,prfi001,prfi002,prfi003,prfi004,prfi005, 
       prfi006,prfi007,prfisite,prfistus,prfiownid,prfiowndp,prficrtid,prficrtdp,prficrtdt,prfimodid, 
       prfimoddt,prficnfid,prficnfdt,t1.ooefl003 ,t2.ooail003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 , 
       t6.ooefl003 ,t7.oofa011 ,t8.ooefl003 ,t9.oofa011 ,t10.oofa011",
               " FROM prfi_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prfiunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t2 ON t2.ooailent='"||g_enterprise||"' AND t2.ooail001=prfi002 AND t2.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=prfi006  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=prfi007 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=prfiownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=prfiowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=prficrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=prficrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=prfimodid  ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prficnfid  ",
 
               " WHERE prfient = '" ||g_enterprise|| "' AND prfidocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt503_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt503 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt503_init()   
 
      #進入選單 Menu (="N")
      CALL aprt503_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt503
      
   END IF 
   
   CLOSE aprt503_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aprt503.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt503_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
 
   ERROR ""
  
   LET g_prfidocno_t = g_prfi_m.prfidocno
 
   CALL s_transaction_begin()
   
   OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfi_m.prfidocno,SQLCA.sqlcode,0)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt503_show()
   WHILE TRUE
      LET g_prfidocno_t = g_prfi_m.prfidocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prfi_m.prfimodid = g_user 
LET g_prfi_m.prfimoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt503_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfi_m.* = g_prfi_m_t.*
         CALL aprt503_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prfi_t SET (prfimodid,prfimoddt) = (g_prfi_m.prfimodid,g_prfi_m.prfimoddt)
       WHERE prfient = g_enterprise AND prfidocno = g_prfidocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prfi_m.prfidocno != g_prfidocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prfj_t SET prfjdocno = g_prfi_m.prfidocno
 
          WHERE prfjent = g_enterprise AND prfjdocno = g_prfidocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prfj_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prfj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE prfk_t
            SET prfkdocno = g_prfi_m.prfidocno
 
          WHERE prfkent = g_enterprise AND
                prfkdocno = g_prfidocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prfk_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prfk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE prfl_t
            SET prfldocno = g_prfi_m.prfidocno
 
          WHERE prflent = g_enterprise AND
                prfldocno = g_prfidocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prfl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prfl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prfi_m.prfidocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt503_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prfi_m.prfidocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aprt503.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprt503.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aprt503.query" ver="3" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt503_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prfj_d.clear()
   CALL g_prfj2_d.clear()
   CALL g_prfj3_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt503_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt503_browser_fill("")
      CALL aprt503_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt503_filter_show('prfiunit')
   CALL aprt503_filter_show('prfidocdt')
   CALL aprt503_filter_show('prfidocno')
   CALL aprt503_filter_show('prfi001')
   CALL aprt503_filter_show('prfi002')
   CALL aprt503_filter_show('prfi003')
   CALL aprt503_filter_show('prfi004')
   CALL aprt503_filter_show('prfi005')
   CALL aprt503_filter_show('prfi006')
   CALL aprt503_filter_show('prfi007')
   CALL aprt503_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt503_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt503_reproduce()
   DEFINE l_newno     LIKE prfi_t.prfidocno 
   DEFINE l_oldno     LIKE prfi_t.prfidocno 
 
   DEFINE l_master    RECORD LIKE prfi_t.*
   DEFINE l_detail    RECORD LIKE prfj_t.*
   DEFINE l_detail2    RECORD LIKE prfk_t.*
 
   DEFINE l_detail3    RECORD LIKE prfl_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prfidocno_t = g_prfi_m.prfidocno
 
    
   LET g_prfi_m.prfidocno = ""
 
    
   CALL aprt503_set_entry('a')
   CALL aprt503_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prfi_m.prfiownid = g_user
      LET g_prfi_m.prfiowndp = g_dept
      LET g_prfi_m.prficrtid = g_user
      LET g_prfi_m.prficrtdp = g_dept 
      LET g_prfi_m.prficrtdt = cl_get_current()
      LET g_prfi_m.prfimodid = ""
      LET g_prfi_m.prfimoddt = ""
      LET g_prfi_m.prfistus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt503_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prfidocno = '", g_prfi_m.prfidocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt503_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prfidocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt503_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprt503.set_no_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt503_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prfidocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt503_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprt503.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt503_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prfi_m.prfidocno
   LET g_pk_array[1].column = 'prfidocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt503.show" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt503_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prfi_m_t.* = g_prfi_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt503_b_fill() #單身填充
      CALL aprt503_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prfi_m.prfiownid_desc = cl_get_username(g_prfi_m.prfiownid)
      #LET g_prfi_m.prfiowndp_desc = cl_get_deptname(g_prfi_m.prfiowndp)
      #LET g_prfi_m.prficrtid_desc = cl_get_username(g_prfi_m.prficrtid)
      #LET g_prfi_m.prficrtdp_desc = cl_get_deptname(g_prfi_m.prficrtdp)
      #LET g_prfi_m.prfimodid_desc = cl_get_username(g_prfi_m.prfimodid)
      #LET g_prfi_m.prficnfid_desc = cl_get_deptname(g_prfi_m.prficnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt503_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prfi_m.prfiunit,g_prfi_m.prfiunit_desc,g_prfi_m.prfidocdt,g_prfi_m.prfidocno,g_prfi_m.prfi001, 
       g_prfi_m.prfi002,g_prfi_m.prfi002_desc,g_prfi_m.prfi003,g_prfi_m.prfi003_desc,g_prfi_m.prfi004, 
       g_prfi_m.prfi005,g_prfi_m.prfi006,g_prfi_m.prfi006_desc,g_prfi_m.prfi007,g_prfi_m.prfi007_desc, 
       g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp, 
       g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid,g_prfi_m.prficrtid_desc,g_prfi_m.prficrtdp,g_prfi_m.prficrtdp_desc, 
       g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimodid_desc,g_prfi_m.prfimoddt,g_prfi_m.prficnfid, 
       g_prfi_m.prficnfid_desc,g_prfi_m.prficnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prfi_m.prfistus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prfj_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_prfj2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_prfj3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt503_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.signature" ver="5" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aprt503_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt503_cl INTO g_prfi_m.prfiunit,g_prfi_m.prfiunit_desc,g_prfi_m.prfidocdt,g_prfi_m.prfidocno, 
       g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi002_desc,g_prfi_m.prfi003,g_prfi_m.prfi003_desc, 
       g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006,g_prfi_m.prfi006_desc,g_prfi_m.prfi007,g_prfi_m.prfi007_desc, 
       g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp, 
       g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid,g_prfi_m.prficrtid_desc,g_prfi_m.prficrtdp,g_prfi_m.prficrtdp_desc, 
       g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimodid_desc,g_prfi_m.prfimoddt,g_prfi_m.prficnfid, 
       g_prfi_m.prficnfid_desc,g_prfi_m.prficnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfi_m.prfidocno,SQLCA.sqlcode,0)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
 
 
   CALL aprt503_show()
   CALL aprt503_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prfi_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prfj_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_prfj2_d))   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_prfj3_d))
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aprt503_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt503_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt503_ui_headershow()
   CALL aprt503_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aprt503_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aprt503_cl USING g_enterprise,g_prfi_m.prfidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt503_cl:", STATUS, 1)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt503_cl INTO g_prfi_m.prfiunit,g_prfi_m.prfiunit_desc,g_prfi_m.prfidocdt,g_prfi_m.prfidocno, 
       g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi002_desc,g_prfi_m.prfi003,g_prfi_m.prfi003_desc, 
       g_prfi_m.prfi004,g_prfi_m.prfi005,g_prfi_m.prfi006,g_prfi_m.prfi006_desc,g_prfi_m.prfi007,g_prfi_m.prfi007_desc, 
       g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp, 
       g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid,g_prfi_m.prficrtid_desc,g_prfi_m.prficrtdp,g_prfi_m.prficrtdp_desc, 
       g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimodid_desc,g_prfi_m.prfimoddt,g_prfi_m.prficnfid, 
       g_prfi_m.prficnfid_desc,g_prfi_m.prficnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfi_m.prfidocno,SQLCA.sqlcode,0)
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aprt503_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aprt503_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt503_ui_headershow()  
   CALL aprt503_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aprt503.state_change" ver="7" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt503_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prfi_m.prfidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prfi_m.prfistus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt503_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt503_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prfi_t SET prfistus = lc_state 
    WHERE prfient = g_enterprise AND prfidocno = g_prfi_m.prfidocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_prfi_m.prfistus = lc_state
      DISPLAY BY NAME g_prfi_m.prfistus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt503.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt503_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prfidocno = g_prfi_m.prfidocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt503_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.ui_dialog" ver="34" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt503_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt503_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt503_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prfidocno = g_prfidocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt503_fetch('') # reload data
               LET l_ac = 1
               CALL aprt503_ui_detailshow() #Setting the current row 
      
               CALL aprt503_idx_chk()
               #NEXT FIELD prfjseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prfj_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt503_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt503_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_prfj2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprt503_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL aprt503_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_prfj3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL aprt503_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL aprt503_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt503_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt503_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt503_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt503_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt503_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt503_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt503_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt503_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt503_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt503_idx_chk()
            
         ON ACTION previous
            CALL aprt503_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt503_idx_chk()
            
         ON ACTION jump
            CALL aprt503_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt503_idx_chk()
            
         ON ACTION next
            CALL aprt503_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt503_idx_chk()
            
         ON ACTION last
            CALL aprt503_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt503_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prfjseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt503_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt503_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt503_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt503_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aprt503_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt503_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt503_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt503_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt503_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prfi_m.prfidocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprt503.ui_headershow" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt503_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prfi_m.prfidocno = g_browser[g_current_idx].b_prfidocno   
 
   EXECUTE aprt503_master_referesh USING g_prfi_m.prfidocno INTO g_prfi_m.prfiunit,g_prfi_m.prfidocdt, 
       g_prfi_m.prfidocno,g_prfi_m.prfi001,g_prfi_m.prfi002,g_prfi_m.prfi003,g_prfi_m.prfi004,g_prfi_m.prfi005, 
       g_prfi_m.prfi006,g_prfi_m.prfi007,g_prfi_m.prfisite,g_prfi_m.prfistus,g_prfi_m.prfiownid,g_prfi_m.prfiowndp, 
       g_prfi_m.prficrtid,g_prfi_m.prficrtdp,g_prfi_m.prficrtdt,g_prfi_m.prfimodid,g_prfi_m.prfimoddt, 
       g_prfi_m.prficnfid,g_prfi_m.prficnfdt,g_prfi_m.prfiunit_desc,g_prfi_m.prfi002_desc,g_prfi_m.prfi006_desc, 
       g_prfi_m.prfi007_desc,g_prfi_m.prfiownid_desc,g_prfi_m.prfiowndp_desc,g_prfi_m.prficrtid_desc, 
       g_prfi_m.prficrtdp_desc,g_prfi_m.prfimodid_desc,g_prfi_m.prficnfid_desc
   CALL aprt503_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt503.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt503_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt503_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt503_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt503_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt503.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt503_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prfj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prfj_t 
         SET (prfjdocno,
              prfjseq
              ,prfj001,prfjsite,prfjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prfj_d[g_detail_idx].prfj001,g_prfj_d[g_detail_idx].prfjsite,g_prfj_d[g_detail_idx].prfjunit)  

         WHERE prfjent = g_enterprise AND prfjdocno = ps_keys_bak[1] AND prfjseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prfj_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prfj_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prfk_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE prfk_t 
         SET (prfkdocno,
              prfkseq
              ,prfk001,prfk002,prfksite,prfkunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prfj2_d[g_detail_idx].prfk001,g_prfj2_d[g_detail_idx].prfk002,g_prfj2_d[g_detail_idx].prfksite, 
                  g_prfj2_d[g_detail_idx].prfkunit) 
         WHERE prfkent = g_enterprise AND prfkdocno = ps_keys_bak[1] AND prfkseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prfk_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prfk_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prfl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE prfl_t 
         SET (prfldocno,
              prflseq
              ,prfl001,prfl002,prfl003,prfl004,prfl005,prfl006,prfl007,prfl008,prfl009,prfl010,prfl011,prfl012,prfl013,prflsite,prflunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prfj3_d[g_detail_idx].prfl001,g_prfj3_d[g_detail_idx].prfl002,g_prfj3_d[g_detail_idx].prfl003, 
                  g_prfj3_d[g_detail_idx].prfl004,g_prfj3_d[g_detail_idx].prfl005,g_prfj3_d[g_detail_idx].prfl006, 
                  g_prfj3_d[g_detail_idx].prfl007,g_prfj3_d[g_detail_idx].prfl008,g_prfj3_d[g_detail_idx].prfl009, 
                  g_prfj3_d[g_detail_idx].prfl010,g_prfj3_d[g_detail_idx].prfl011,g_prfj3_d[g_detail_idx].prfl012, 
                  g_prfj3_d[g_detail_idx].prfl013,g_prfj3_d[g_detail_idx].prflsite,g_prfj3_d[g_detail_idx].prflunit)  

         WHERE prflent = g_enterprise AND prfldocno = ps_keys_bak[1] AND prflseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prfl_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prfl_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
