<add_points prog="aprt502" std_prog="aprt502" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aprt502_prfeunit_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
#display prfeunit
PRIVATE FUNCTION aprt502_prfeunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfeunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfe_m.prfeunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfe_m.prfeunit_desc
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
#display prfe004
PRIVATE FUNCTION aprt502_prfe004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfe004
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfe_m.prfe004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfe_m.prfe004_desc
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
#display prfe005
PRIVATE FUNCTION aprt502_prfe005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfe005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prfe_m.prfe005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prfe_m.prfe005_desc
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe004_display" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
#display prfe004,prfe005
PRIVATE FUNCTION aprt502_prfe004_display()
   SELECT ooag003 INTO g_prfe_m.prfe005
     FROM ooag_t
    WHERE ooagent= g_enterprise
      AND ooag001= g_prfe_m.prfe004 
   CALL aprt502_prfe005_ref()
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe001_init" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
#init
PRIVATE FUNCTION aprt502_prfe001_init()
   IF cl_null(g_prfe_m.prfe002) THEN
      RETURN
   END IF
   INITIALIZE g_prfe_m.prfel002,g_prfe_m.prfel003 TO NULL
   INITIALIZE g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004,
              g_prfe_m.prfe004_desc,g_prfe_m.prfe005,g_prfe_m.prfe005_desc
           TO NULL
   LET g_prfe_m.prfe004 = g_user
   LET g_prfe_m.prfeacti = 'Y'
   CALL aprt502_prfe004_ref()
   CALL aprt502_prfe004_display()
   DISPLAY BY NAME g_prfe_m.prfel002,g_prfe_m.prfel003,
                   g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004,
                   g_prfe_m.prfe004_desc,g_prfe_m.prfe005,g_prfe_m.prfe005_desc
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe002" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
#chk prfe002
PRIVATE FUNCTION aprt502_prfe002()
   DEFINE l_cnt   like type_t.num5
   DEFINE l_cnt2  LIKE type_t.num5
   DEFINE l_success LIKE type_t.num5
   DEFINE l_errno   STRING
   
   LET l_cnt = 0
   LET l_cnt2 = 0
   LET l_success = TRUE
   LET l_errno = NULL
   IF g_prfe_m.prfe001='U' THEN
      SELECT count(*) INTO l_cnt FROM prfg_t WHERE prfgent=g_enterprise
         AND prfg001=g_prfe_m.prfe002
      IF l_cnt<=0 THEN
         LET l_success = FALSE
         LET l_errno = "apr-00199"
         RETURN l_success,l_errno            
      END IF 
               
   END IF
   IF g_prfe_m.prfe001='I' THEN
      SELECT count(*) INTO l_cnt FROM prfg_t WHERE prfgent=g_enterprise
         AND prfg001=g_prfe_m.prfe002
      IF l_cnt>0 THEN
         LET l_success = FALSE
         LET l_errno = "apr-00200"
         RETURN l_success,l_errno           
      END IF
           
   END IF
   LET l_cnt=0
   SELECT count(*) INTO l_cnt FROM prfe_t
    WHERE prfeent = g_enterprise AND prfe002 = g_prfe_m.prfe002
      AND prfestus='N'
   IF l_cnt>0 THEN
      LET l_success = FALSE
      LET l_errno = "apr-00201"
      RETURN l_success,l_errno         
   END IF
   RETURN l_success,l_errno
END FUNCTION]]>
</point>
  <point name="function.aprt502_prfe002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
#display prfe003
PRIVATE FUNCTION aprt502_prfe002_ref()
   IF g_prfe_m.prfe001='U' THEN
      SELECT to_char(to_number(max(prfg002))+1) INTO g_prfe_m.prfe003
        FROM prfg_t
       WHERE prfgent = g_enterprise AND prfg001= g_prfe_m.prfe002
      SELECT prfgl003,prfgl004 INTO g_prfe_m.prfel002,g_prfe_m.prfel003
        FROM prfgl_t
       WHERE prfglent = g_enterprise AND prfgl001 = g_prfe_m.prfe002
         AND prfgl002 = g_dlang
      SELECT prfgstus INTO g_prfe_m.prfeacti
        FROM prfg_t
       WHERE prfgent = g_enterprise AND prfg001 = g_prfe_m.prfe002  
      DISPLAY BY NAME g_prfe_m.prfeacti          
   END IF
   IF g_prfe_m.prfe001='I' THEN
      LET  g_prfe_m.prfe003=1 
   END IF
   DISPLAY BY NAME  g_prfe_m.prfe003
END FUNCTION]]>
</point>
  <point name="function.aprt502_create_prff001" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
#create prff001
PRIVATE FUNCTION aprt502_create_prff001()
   SELECT max(prff001)+1 INTO g_prff_d[l_ac].prff001
     FROM prff_t
    WHERE prffent = g_enterprise AND prffdocno=g_prfe_m.prfedocno
   IF cl_null(g_prff_d[l_ac].prff001) THEN
      LET g_prff_d[l_ac].prff001=1
   END IF
END FUNCTION]]>
</point>
  <point name="function.aprt502_prff003" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
##chk prff003
PRIVATE FUNCTION aprt502_prff003()
   DEFINE l_rtax005   LIKE rtax_t.rtax005
   DEFINE l_stus      LIKE type_t.chr1
   DEFINE l_oocq001   LIKE oocq_t.oocq001
   DEFINE l_success   LIKE type_t.num5

   INITIALIZE g_errno TO NULL
   LET l_success = TRUE
   IF cl_null(g_prff_d[l_ac].prff002) THEN
      RETURN l_success
   END IF
   CASE g_prff_d[l_ac].prff002
      WHEN '4'
         SELECT imaastus INTO l_stus
           FROM imaa_t
          WHERE  imaaent = g_enterprise  AND imaa001 = g_prff_d[l_ac].prff003
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'aim-00001' #该商品不存在或在当前组织不可使用
            WHEN l_stus <> 'Y'       LET g_errno = 'aim-00101' #该商品在当前组织已无效
         END CASE
      WHEN '5'
         SELECT rtax005,rtaxstus INTO l_rtax005,l_stus
           FROM rtax_t
          WHERE rtaxent = g_enterprise AND rtax001 = g_prff_d[l_ac].prff003
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'agc-00027' #该品类编号不存在
            WHEN l_stus <> 'Y'       LET g_errno = 'agc-00028' #该品类编号已无效
            WHEN l_rtax005 <> 0      LET g_errno = 'agc-00029' #该品类编号存在下级品类
         END CASE
      WHEN '6'
         LET l_oocq001 = '2000'
      WHEN '7'
         LET l_oocq001 = '2001'
      WHEN '8'
         LET l_oocq001 = '2002'
      WHEN '9'
         LET l_oocq001 = '2003'
      WHEN 'A'
         LET l_oocq001 = '2004'
      WHEN 'B'
         LET l_oocq001 = '2005'
      WHEN 'C'
         LET l_oocq001 = '2006'
      WHEN 'D'
         LET l_oocq001 = '2007'
      WHEN 'E'
         LET l_oocq001 = '2008'
      WHEN 'F'
         LET l_oocq001 = '2009'
      WHEN 'G'
         LET l_oocq001 = '2010'
      WHEN 'H'
         LET l_oocq001 = '2011'
      WHEN 'I'
         LET l_oocq001 = '2012'
      WHEN 'J'
         LET l_oocq001 = '2013'
      WHEN 'K'
         LET l_oocq001 = '2014'
      WHEN 'L'
         LET l_oocq001 = '2015'
   END CASE
   CASE g_prff_d[l_ac].prff002
      WHEN '4'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_prff_d[l_ac].prff003,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      WHEN '5'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_prff_d[l_ac].prff003,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      OTHERWISE
         SELECT oocqstus INTO l_stus
           FROM oocq_t
          WHERE oocqent = g_enterprise AND oocq001 = l_oocq001 AND oocq002 = g_prff_d[l_ac].prff003
         CASE
            WHEN SQLCA.sqlcode = 100
               CASE g_prff_d[l_ac].prff002                 
                  WHEN '6'
                     LET g_errno="aim-00178"
                  WHEN '7'
                     LET g_errno="apr-00217"
                  WHEN '8'
                     LET g_errno="apr-00218"
                  WHEN '9'
                     LET g_errno="apr-00219"
                  WHEN 'A'
                     LET g_errno="apr-00220"
                  WHEN 'B'
                     LET g_errno="apr-00221"
                  WHEN 'C'
                     LET g_errno="apr-00222"
                  WHEN 'D'
                     LET g_errno="apr-00223"
                  WHEN 'E'
                     LET g_errno="apr-00224"
                  WHEN 'F'
                     LET g_errno="apr-00225"
                  WHEN 'G'
                     LET g_errno="apr-00226"
                  WHEN 'H'
                     LET g_errno="apr-00227"
                  WHEN 'I'
                     LET g_errno="apr-00228"
                  WHEN 'J'
                     LET g_errno="apr-00229"
                  WHEN 'K'
                     LET g_errno="apr-00230"
                  WHEN 'L'
                     LET g_errno="apr-00231"
               END CASE            
               CALL cl_err(g_prff_d[l_ac].prff003,g_errno,1)
               LET l_success = FALSE
               RETURN l_success
            WHEN l_stus <> 'Y'
               CASE g_prff_d[l_ac].prff002                 
                  WHEN '6'
                     LET g_errno="aim-00179"
                  WHEN '7'
                     LET g_errno="apr-00232"
                  WHEN '8'
                     LET g_errno="apr-00233"
                  WHEN '9'
                     LET g_errno="apr-00234"
                  WHEN 'A'
                     LET g_errno="apr-00235"
                  WHEN 'B'
                     LET g_errno="apr-00236"
                  WHEN 'C'
                     LET g_errno="apr-00237"
                  WHEN 'D'
                     LET g_errno="apr-00238"
                  WHEN 'E'
                     LET g_errno="apr-00239"
                  WHEN 'F'
                     LET g_errno="apr-00240"
                  WHEN 'G'
                     LET g_errno="apr-00241"
                  WHEN 'H'
                     LET g_errno="apr-00242"
                  WHEN 'I'
                     LET g_errno="apr-00243"
                  WHEN 'J'
                     LET g_errno="apr-00244"
                  WHEN 'K'
                     LET g_errno="apr-00245"
                  WHEN 'L'
                     LET g_errno="apr-00246"
               END CASE
               CALL cl_err(g_prff_d[l_ac].prff003,g_errno,1)
               LET l_success = FALSE
               RETURN l_success
         END CASE
   END CASE
   RETURN l_success
END FUNCTION]]>
</point>
  <point name="function.aprt502_prff003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
#display prff003
PRIVATE FUNCTION aprt502_prff003_ref()
   DEFINE l_oocq001   LIKE oocq_t.oocq001
   IF cl_null(g_prff_d[l_ac].prff002) THEN
      RETURN
   END IF
   CASE g_prff_d[l_ac].prff002
      WHEN '6'
         LET l_oocq001 = '2000'
      WHEN '7'
         LET l_oocq001 = '2001'
      WHEN '8'
         LET l_oocq001 = '2002'
      WHEN '9'
         LET l_oocq001 = '2003'
      WHEN 'A'
         LET l_oocq001 = '2004'
      WHEN 'B'
         LET l_oocq001 = '2005'
      WHEN 'C'
         LET l_oocq001 = '2006'
      WHEN 'D'
         LET l_oocq001 = '2007'
      WHEN 'E'
         LET l_oocq001 = '2008'
      WHEN 'F'
         LET l_oocq001 = '2009'
      WHEN 'G'
         LET l_oocq001 = '2010'
      WHEN 'H'
         LET l_oocq001 = '2011'
      WHEN 'I'
         LET l_oocq001 = '2012'
      WHEN 'J'
         LET l_oocq001 = '2013'
      WHEN 'K'
         LET l_oocq001 = '2014'
      WHEN 'L'
         LET l_oocq001 = '2015'
   END CASE
   CASE g_prff_d[l_ac].prff002
      WHEN '4'
         SELECT imaal003 INTO g_prff_d[l_ac].prff003_desc
           FROM imaal_t
          WHERE imaalent = g_enterprise AND imaal001 = g_prff_d[l_ac].prff003 AND imaal002 = g_dlang
      WHEN '5'
         SELECT rtaxl003 INTO g_prff_d[l_ac].prff003_desc
           FROM rtaxl_t
          WHERE rtaxlent = g_enterprise AND rtaxl001 = g_prff_d[l_ac].prff003 AND rtaxl002 = g_dlang
      OTHERWISE
         SELECT oocql004 INTO g_prff_d[l_ac].prff003_desc
           FROM oocql_t
          WHERE oocqlent = g_enterprise AND oocql001 = l_oocq001 AND oocql002 = g_prff_d[l_ac].prff003 AND oocql003 = g_dlang
   END CASE
END FUNCTION]]>
</point>
  <point name="function.aprt502_prff003_ctp" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[
#controlp prff003
PRIVATE FUNCTION aprt502_prff003_ctp()
   CASE g_prff_d[l_ac].prff002
      WHEN '4'
         LET g_qryparam.arg1 = null
      WHEN '6'
         LET g_qryparam.arg1 = '2000'
      WHEN '7'
         LET g_qryparam.arg1 = '2001'
      WHEN '8'
         LET g_qryparam.arg1 = '2002'
      WHEN '9'
         LET g_qryparam.arg1 = '2003'
      WHEN 'A'
         LET g_qryparam.arg1 = '2004'
      WHEN 'B'
         LET g_qryparam.arg1 = '2005'
      WHEN 'C'
         LET g_qryparam.arg1 = '2006'
      WHEN 'D'
         LET g_qryparam.arg1 = '2007'
      WHEN 'E'
         LET g_qryparam.arg1 = '2008'
      WHEN 'F'
         LET g_qryparam.arg1 = '2009'
      WHEN 'G'
         LET g_qryparam.arg1 = '2010'
      WHEN 'H'
         LET g_qryparam.arg1 = '2011'
      WHEN 'I'
         LET g_qryparam.arg1 = '2012'
      WHEN 'J'
         LET g_qryparam.arg1 = '2013'
      WHEN 'K'
         LET g_qryparam.arg1 = '2014'
      WHEN 'L'
         LET g_qryparam.arg1 = '2015'
   END CASE
   CASE g_prff_d[l_ac].prff002
      WHEN '4'
         CALL q_imaa001()
      WHEN '5'
         CALL q_rtax001()
      OTHERWISE
         CALL q_oocq002()
   END CASE
END FUNCTION]]>
</point>
  <point name="function.aprt502_set_combo" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
#combox
PRIVATE FUNCTION aprt502_set_combo()
   DEFINE l_values   STRING
   DEFINE l_items    STRING
   DEFINE l_gzcb002  LIKE gzcb_t.gzcb002
   DEFINE l_gzcbl004 LIKE gzcbl_t.gzcbl004
   LET l_values = NULL
   LET l_items = NULL
   LET l_gzcb002 = NULL
   LET l_gzcbl004 = NULL
   
   DECLARE aprt502_gzcb_cs1 CURSOR FOR
    SELECT gzcb002,gzcbl004 FROM gzcb_t,gzcbl_t
     WHERE gzcb001 = gzcbl001 AND gzcb002 = gzcbl002
       AND gzcb001 = '6517'   AND gzcbl003 = g_dlang
       AND gzcb002 IN ('4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L')
     ORDER BY gzcb001
   FOREACH aprt502_gzcb_cs1 INTO l_gzcb002,l_gzcbl004
      LET l_values = l_values CLIPPED ,",",l_gzcb002
      LET l_items  = l_items CLIPPED ,",",l_gzcb002 CLIPPED,':',l_gzcbl004
   END FOREACH
   CALL cl_set_combo_items("prff002",l_values,l_items)
END FUNCTION]]>
</point>
  <point name="function.aprt502_ins_prff" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
#insert prff_t
PRIVATE FUNCTION aprt502_ins_prff()
   DEFINE l_sql      STRING
   DEFINE l_success  LIKE type_t.num5
   LET l_success= TRUE
   IF g_prfe_m.prfe001='U' AND (NOT cl_null(g_prfe_m.prfe002)) THEN
      DELETE FROM prff_t WHERE prffent=g_enterprise AND prffdocno=g_prfe_m.prfedocno
      IF SQLCA.sqlcode THEN
         CALL cl_err("del prff_t",SQLCA.sqlcode,1)
         LET l_success= FALSE
         RETURN l_success
      END IF
      LET l_sql=" INSERT INTO prff_t (prffent,prffunit,prffsite,prffdocno,prff001,prff002,prff003,prffacti) ",
                " SELECT ",g_enterprise,",'",g_prfe_m.prfeunit,"','",g_prfe_m.prfesite,"','",g_prfe_m.prfedocno,"',",
                "         prfh002,prfh003,prfh004,prfhstus ",
                "   FROM prfh_t ",
                "  WHERE prfhent=",g_enterprise," AND prfh001='",g_prfe_m.prfe002,"' "
      PREPARE l_sql_prff_pre FROM l_sql
      EXECUTE l_sql_prff_pre
      IF SQLCA.sqlcode THEN
         CALL cl_err("ins prff_t",SQLCA.sqlcode,1)
         LET l_success=false
         RETURN l_success
      END IF      
   END IF
   RETURN l_success
END FUNCTION]]>
</point>
  <point name="function.aprt502_fill" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[
#fill imaa_t
PRIVATE FUNCTION aprt502_fill()
   DEFINE l_sql      STRING
   DEFINE l_sql2     STRING
   DEFINE l_sql3     STRING
   DEFINE l_sql4     STRING
   DEFINE l_prff001  LIKE prff_t.prff001
   DEFINE l_prff002  LIKE prff_t.prff002
   DEFINE l_prff003  LIKE prff_t.prff003                    
                        
   
   CALL g_imaa_d.clear()
   LET l_sql = " SELECT distinct imaa001,imaal003,imaal004,imaa009 ",
               "   FROM imaa_t LEFT JOIN imaal_t ON imaa001=imaal001 AND imaaent=imaalent AND imaal002='",g_dlang,"' ",
               "  WHERE imaaent=",g_enterprise," AND imaastus='Y' "
   let l_sql2 = " SELECT DISTINCT prff001 FROM prff_t WHERE prffent=",g_enterprise," AND prffdocno='",g_prfe_m.prfedocno,"' AND prffacti='Y' " 

 
   PREPARE l_sql2_prff001_pre FROM l_sql2
   DECLARE l_sql2_prff001_cs CURSOR FOR  l_sql2_prff001_pre
   let l_sql3 = " SELECT DISTINCT prff002 FROM prff_t WHERE prffent=",g_enterprise," AND prffdocno='",g_prfe_m.prfedocno,"' ",
                "    AND prff001=? AND prffacti='Y' "
   PREPARE l_sql3_prff002_pre FROM l_sql3
   DECLARE l_sql3_prff002_cs CURSOR FOR  l_sql3_prff002_pre 
   let l_sql4 = " SELECT DISTINCT prff003 FROM prff_t WHERE prffent=",g_enterprise," AND prffdocno='",g_prfe_m.prfedocno,"' ",
                "    AND prff001=? AND prff002=? AND prffacti='Y' " 
   PREPARE l_sql4_prff003_pre FROM l_sql4
   DECLARE l_sql4_prff003_cs CURSOR FOR  l_sql4_prff003_pre
   LET l_sql4="1<>1"
   LET l_sql3="1=1"
   LET l_sql2="1<>1"
   FOREACH  l_sql2_prff001_cs INTO l_prff001
      FOREACH l_sql3_prff002_cs USING l_prff001 INTO l_prff002
         FOREACH l_sql4_prff003_cs USING l_prff001,l_prff002 INTO l_prff003
            CASE l_prff002
               WHEN '4'
                  LET l_sql4 = l_sql4," OR imaa001='",l_prff003,"' " 
               WHEN '5'
                  LET l_sql4 = l_sql4," OR imaa009='",l_prff003,"' "
               WHEN '6'
                  LET l_sql4 = l_sql4," OR imaa122='",l_prff003,"' "
               WHEN '7'
                  LET l_sql4 = l_sql4," OR imaa131='",l_prff003,"' "
               WHEN '8'
                  LET l_sql4 = l_sql4," OR imaa126='",l_prff003,"' "
               WHEN '9'
                  LET l_sql4 = l_sql4," OR imaa127='",l_prff003,"' "
               WHEN 'A'
                  LET l_sql4 = l_sql4," OR imaa128='",l_prff003,"' "
               WHEN 'B'
                  LET l_sql4 = l_sql4," OR imaa129='",l_prff003,"' "
               WHEN 'C'
                  LET l_sql4 = l_sql4," OR imaa132='",l_prff003,"' "
               WHEN 'D'
                  LET l_sql4 = l_sql4," OR imaa133='",l_prff003,"' "
               WHEN 'E'
                  LET l_sql4 = l_sql4," OR imaa134='",l_prff003,"' "
               WHEN 'F'
                  LET l_sql4 = l_sql4," OR imaa135='",l_prff003,"' "
               WHEN 'G'
                  LET l_sql4 = l_sql4," OR imaa136='",l_prff003,"' "
               WHEN 'H'
                  LET l_sql4 = l_sql4," OR imaa137='",l_prff003,"' "
               WHEN 'I'
                  LET l_sql4 = l_sql4," OR imaa138='",l_prff003,"' "
               WHEN 'J'
                  LET l_sql4 = l_sql4," OR imaa139='",l_prff003,"' "
               WHEN 'K'
                  LET l_sql4 = l_sql4," OR imaa140='",l_prff003,"' "
               WHEN 'L'
                  LET l_sql4 = l_sql4," OR imaa141='",l_prff003,"' "
         
            END CASE
            LET l_prff003=null
         END FOREACH
         LET l_sql3 = l_sql3," AND (",l_sql4,") "
         LET l_sql4="1<>1"
         LET l_prff002=null
      END FOREACH
      LET l_sql2 = l_sql2," OR (",l_sql3,") "
      LET l_sql3="1=1"
      LET l_prff002=null 
   END FOREACH
      
   LET l_sql = l_sql," AND ( ",l_sql2," )"  
   LET l_sql = l_sql,"  ORDER BY imaa001 "    
   PREPARE l_sql_pre FROM l_sql
   DECLARE l_sql_cs CURSOR FOR l_sql_pre
   LET g_cnt = l_ac
   LET l_ac = 1
   FOREACH l_sql_cs INTO g_imaa_d[l_ac].imaa001,g_imaa_d[l_ac].imaal003,g_imaa_d[l_ac].imaal004,g_imaa_d[l_ac].imaa009
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
   END FOREACH
   LET g_error_show = 0
   
   CALL g_imaa_d.deleteElement(g_imaa_d.getLength())
 
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE l_sql_cs
END FUNCTION]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_prfedocno
      CALL ap_ref_array2(g_ref_fields,"SELECT prfel003 FROM prfel_t WHERE prfelent='"||g_enterprise||"' AND prfeldocno=? AND prfel001='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_prfel003_2 = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_prfel003_2]]>
</point>
  <point name="construct.a.page1.prff003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.prff003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prff003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prff003  #顯示到畫面上
            NEXT FIELD prff003  ]]>
</point>
  <point name="construct.c.prfe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prfe002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfe002  #顯示到畫面上
            NEXT FIELD prfe002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfe004  #顯示到畫面上
            NEXT FIELD prfe004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfe005  #顯示到畫面上
            NEXT FIELD prfe005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfecnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfecnfid  #顯示到畫面上
            NEXT FIELD prfecnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfecrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfecrtdp  #顯示到畫面上
            NEXT FIELD prfecrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfecrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfecrtid  #顯示到畫面上
            NEXT FIELD prfecrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfedocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prfedocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfedocno  #顯示到畫面上
            NEXT FIELD prfedocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfemodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfemodid  #顯示到畫面上
            NEXT FIELD prfemodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfeowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfeowndp  #顯示到畫面上
            NEXT FIELD prfeowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfeownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfeownid  #顯示到畫面上
            NEXT FIELD prfeownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.prfeunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prfeunit  #顯示到畫面上
            NEXT FIELD prfeunit                     #返回原欄位
    

]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#   IF g_prfe_m.prfestus <> "N" THEN
#      CALL cl_set_act_visible("delete,modify", FALSE)
#   ELSE
#      CALL cl_set_act_visible("delete,modify", true)    
#   END IF
   IF g_prfe_m.prfestus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_imaa_d       DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         imaa001      LIKE imaa_t.imaa001,
         imaal003     LIKE imaal_t.imaal003,
         imaal004     LIKE imaal_t.imaal004,
         imaa009      LIKE imaa_t.imaa009          
      END RECORD]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL aprt502_set_combo()
   CALL cl_set_combo_scc('b_prfe001','32')   ]]>
</point>
  <point name="input.a.page1.prff001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prff_d[l_ac].prff001) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_prfe_m.prfedocno IS NOT NULL AND g_prff_d[g_detail_idx].prff001 IS NOT NULL AND g_prff_d[g_detail_idx].prff002 IS NOT NULL AND g_prff_d[g_detail_idx].prff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfe_m.prfedocno != g_prfedocno_t OR g_prff_d[g_detail_idx].prff001 != g_prff_d_t.prff001 OR g_prff_d[g_detail_idx].prff002 != g_prff_d_t.prff002 OR g_prff_d[g_detail_idx].prff003 != g_prff_d_t.prff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prff_t WHERE "||"prffent = '" ||g_enterprise|| "' AND "||"prffdocno = '"||g_prfe_m.prfedocno ||"' AND "|| "prff001 = '"||g_prff_d[g_detail_idx].prff001 ||"' AND "|| "prff002 = '"||g_prff_d[g_detail_idx].prff002 ||"' AND "|| "prff003 = '"||g_prff_d[g_detail_idx].prff003 ||"'",'std-00004',0) THEN 
                     LET g_prff_d[l_ac].prff001 = g_prff_d_t.prff001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.prff002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_prfe_m.prfedocno IS NOT NULL AND g_prff_d[g_detail_idx].prff001 IS NOT NULL AND g_prff_d[g_detail_idx].prff002 IS NOT NULL AND g_prff_d[g_detail_idx].prff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfe_m.prfedocno != g_prfedocno_t OR g_prff_d[g_detail_idx].prff001 != g_prff_d_t.prff001 OR g_prff_d[g_detail_idx].prff002 != g_prff_d_t.prff002 OR g_prff_d[g_detail_idx].prff003 != g_prff_d_t.prff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prff_t WHERE "||"prffent = '" ||g_enterprise|| "' AND "||"prffdocno = '"||g_prfe_m.prfedocno ||"' AND "|| "prff001 = '"||g_prff_d[g_detail_idx].prff001 ||"' AND "|| "prff002 = '"||g_prff_d[g_detail_idx].prff002 ||"' AND "|| "prff003 = '"||g_prff_d[g_detail_idx].prff003 ||"'",'std-00004',0) THEN 
                     LET g_prff_d[l_ac].prff002 = g_prff_d_t.prff002
                     NEXT FIELD CURRENT
                  END IF
#                  LET g_prff_d[l_ac].prff003=null
#                  LET g_prff_d[l_ac].prff003_desc = NULL
#                  DISPLAY g_prff_d[l_ac].prff003 TO s_detail1[l_ac].prff003
#                  DISPLAY g_prff_d[l_ac].prff003_desc TO s_detail1[l_ac].prff003_desc
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.prff003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            LET g_prff_d[l_ac].prff003_desc = NULL
            DISPLAY g_prff_d[l_ac].prff003_desc TO s_detail1[l_ac].prff003_desc
            IF  g_prfe_m.prfedocno IS NOT NULL AND g_prff_d[g_detail_idx].prff001 IS NOT NULL AND g_prff_d[g_detail_idx].prff002 IS NOT NULL AND g_prff_d[g_detail_idx].prff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfe_m.prfedocno != g_prfedocno_t OR g_prff_d[g_detail_idx].prff001 != g_prff_d_t.prff001 OR g_prff_d[g_detail_idx].prff002 != g_prff_d_t.prff002 OR g_prff_d[g_detail_idx].prff003 != g_prff_d_t.prff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prff_t WHERE "||"prffent = '" ||g_enterprise|| "' AND "||"prffdocno = '"||g_prfe_m.prfedocno ||"' AND "|| "prff001 = '"||g_prff_d[g_detail_idx].prff001 ||"' AND "|| "prff002 = '"||g_prff_d[g_detail_idx].prff002 ||"' AND "|| "prff003 = '"||g_prff_d[g_detail_idx].prff003 ||"'",'std-00004',0) THEN 
                     LET g_prff_d[l_ac].prff003 = g_prff_d_t.prff003
                     CALL aprt502_prff003_ref()                     
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt502_prff003() RETURNING l_success
                  IF l_success=false THEN
                     LET g_prff_d[l_ac].prff003 = g_prff_d_t.prff003
                     CALL aprt502_prff003_ref()                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL aprt502_prff003_ref()
]]>
</point>
  <point name="input.a.prfe001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prfe_m.prfe001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe001 != g_prfe_m_t.prfe001 OR g_prfe_m_t.prfe001 IS NULL )) THEN
                  CALL aprt502_prfe001_init()
               END IF
            END IF
            CALL aprt502_set_entry(p_cmd)
            CALL aprt502_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.prfe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  NOT cl_null(g_prfe_m.prfe002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe002 != g_prfe_m_t.prfe002 OR g_prfe_m_t.prfe002 IS NULL )) THEN
                  CALL aprt502_prfe002() RETURNING l_success,g_errno
                  IF l_success= FALSE THEN
                     CALL cl_err(g_prfe_m.prfe002,g_errno,1)
                     LET g_prfe_m.prfe002 = g_prfe_m_t.prfe002
                     CALL aprt502_prfe002_ref()
                     NEXT FIELD prfe002
                  END IF
               END IF
            END IF
            CALL aprt502_prfe002_ref()]]>
</point>
  <point name="input.a.prfe003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prfe_m.prfe003) THEN 
            END IF 

]]>
</point>
  <point name="input.a.prfe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_prfe_m.prfe004_desc = NULL
            DISPLAY BY NAME g_prfe_m.prfe004_desc
            IF NOT cl_null(g_prfe_m.prfe004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe004 != g_prfe_m_t.prfe004 OR g_prfe_m_t.prfe004 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfe_m.prfe004
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfe_m.prfe004 = g_prfe_m_t.prfe004
                     CALL aprt502_prfe004_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt502_prfe004_display()

               END IF 
            END IF   
            CALL aprt502_prfe004_ref()

]]>
</point>
  <point name="input.a.prfe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_prfe_m.prfe005_desc = NULL
            DISPLAY BY NAME g_prfe_m.prfe005_desc
            IF NOT cl_null(g_prfe_m.prfe005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe005 != g_prfe_m_t.prfe005 OR g_prfe_m_t.prfe005 IS null)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prfe_m.prfe005 
                  LET g_chkparam.arg2 = g_today
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001_3") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prfe_m.prfe005 = g_prfe_m_t.prfe005
                     CALL aprt502_prfe005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt502_prfe005_ref()]]>
</point>
  <point name="input.a.prfedocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_prfe_m.prfedocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfedocno != g_prfedocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfe_t WHERE "||"prfeent = '" ||g_enterprise|| "' AND "||"prfedocno = '"||g_prfe_m.prfedocno ||"'",'std-00004',0) THEN 
                     LET g_prfe_m.prfedocno = g_prfe_m_t.prfedocno
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prfe_m.prfedocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET  g_prfe_m.prfedocno = g_prfe_m_t.prfedocno 
                     NEXT FIELD prfedocno
                  END IF
                  IF NOT cl_null(g_prfe_m.prfedocno) THEN 
                    #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
               
                    #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_ooef004
                     LET g_chkparam.arg2 = g_prfe_m.prfedocno
                  
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooba002") THEN

                     ELSE
                        #檢查失敗時後續處理
                        LET  g_prfe_m.prfedocno = g_prfe_m_t.prfedocno 
                        NEXT FIELD prfedocno
                     END IF
           
                  END IF 
               END IF
            END IF


]]>
</point>
  <point name="input.a.prfeunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prfe_m.prfeunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prfe_m.prfeunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prfe_m.prfeunit_desc

]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_prfe_m.prfesite]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL g_imaa_d.clear()
            CALL aprt502_fill()
            LET g_prff_d[l_ac].prffunit = g_prfe_m.prfeunit
            LET g_prff_d[l_ac].prffsite = g_prfe_m.prfesite
            CALL aprt502_create_prff001()]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(l_ac) AND l_ac<>0 THEN
               CALL aprt502_fill()
            END IF   ]]>
</point>
  <point name="input.c.page1.prff003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prff_d[l_ac].prff003             #給予default值

            #給予arg

            CALL aprt502_prff003_ctp()

            LET g_prff_d[l_ac].prff003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prff_d[l_ac].prff003 TO s_detail1[l_ac].prff003              #顯示到畫面上           
            CALL aprt502_prff003_ref()
            NEXT FIELD prff003  ]]>
</point>
  <point name="input.c.prfe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfe_m.prfe002             #給予default值

            #給予arg
            IF g_prfe_m.prfe001='U' THEN
               CALL q_prfg001()                                #呼叫開窗
            END IF
            LET g_prfe_m.prfe002 = g_qryparam.return1              

            DISPLAY g_prfe_m.prfe002 TO prfe002              #

            NEXT FIELD prfe002                          #返回原欄位

]]>
</point>
  <point name="input.c.prfe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfe_m.prfe004             #給予default值

            #給予arg
            
            CALL q_ooag001()                                #呼叫開窗

            LET g_prfe_m.prfe004 = g_qryparam.return1              

            DISPLAY g_prfe_m.prfe004 TO prfe004              #
            CALL aprt502_prfe004_ref()
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe004 != g_prfe_m_t.prfe004 OR g_prfe_m_t.prfe004 IS null)) THEN
               CALL aprt502_prfe004_display()
            END IF            
            NEXT FIELD prfe004                          #返回原欄位

]]>
</point>
  <point name="input.c.prfe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfe_m.prfe005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prfe_m.prfe005 = g_qryparam.return1              

            DISPLAY g_prfe_m.prfe005 TO prfe005              #
            CALL aprt502_prfe005_ref()
            NEXT FIELD prfe005                          #返回原欄位

]]>
</point>
  <point name="input.c.prfedocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfe_m.prfedocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004#
            LET g_qryparam.arg2 = "aprt502" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prfe_m.prfedocno = g_qryparam.return1              

            DISPLAY g_prfe_m.prfedocno TO prfedocno              #

            NEXT FIELD prfedocno                          #返回原欄位

]]>
</point>
  <point name="input.c.prfeunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prfe_m.prfeunit             #給予default值
            LET g_qryparam.default2 = "" #g_prfe_m.ooefl003 #說明(簡稱)
            #給予arg
            
            CALL q_ooef001()                                #呼叫開窗

            LET g_prfe_m.prfeunit = g_qryparam.return1              
            #LET g_prfe_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_prfe_m.prfeunit TO prfeunit              #
            #DISPLAY g_prfe_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD prfeunit                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5 ]]>
</point>
  <point name="input.g.page1.prff002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF  g_prfe_m.prfedocno IS NOT NULL AND g_prff_d[g_detail_idx].prff001 IS NOT NULL AND g_prff_d[g_detail_idx].prff002 IS NOT NULL AND g_prff_d[g_detail_idx].prff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prfe_m.prfedocno != g_prfedocno_t OR g_prff_d[g_detail_idx].prff001 != g_prff_d_t.prff001 OR g_prff_d[g_detail_idx].prff002 != g_prff_d_t.prff002 OR g_prff_d[g_detail_idx].prff003 != g_prff_d_t.prff003)) THEN 
                  
                  LET g_prff_d[l_ac].prff003=null
                  LET g_prff_d[l_ac].prff003_desc = NULL
                  DISPLAY g_prff_d[l_ac].prff003 TO s_detail1[l_ac].prff003
                  DISPLAY g_prff_d[l_ac].prff003_desc TO s_detail1[l_ac].prff003_desc
               END IF
            END IF]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prfe_m.prfe002 != g_prfe_m_t.prfe002 OR g_prfe_m_t.prfe002 IS NULL )) THEN
                  CALL aprt502_ins_prff() RETURNING l_success
                  IF l_success=false THEN
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               END IF]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_prfe_m.prfedocno) THEN 
               
                  CALL s_aooi200_gen_docno(g_prfe_m.prfeunit,g_prfe_m.prfedocno,g_prfe_m.prfedocdt,g_prog)
                     RETURNING  g_success,g_prfe_m.prfedocno
                  IF g_success<>'1' THEN
                     CALL cl_err(g_prfe_m.prfedocno,"amm-00001",1)
                     NEXT FIELD prfedocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prfe_t WHERE "||"prfeent = '" ||g_enterprise|| "' AND "||"prfedocno = '"||g_prfe_m.prfedocno ||"'",'std-00004',1) THEN
                        LET g_prfe_m.prfedocno = g_prfedocno_t
                        NEXT FIELD prfedocno
                     END IF

                  END IF
                  LET g_prfe_m_t.prfedocno = g_prfe_m.prfedocno
                     
               END IF]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aprt502_set_entry(p_cmd)
            CALL aprt502_set_no_entry(p_cmd)]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_prfe_m.prfedocno) THEN
               CALL n_prfal(g_prfe_m.prfedocno)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_prfe_m.prfedocno
               CALL ap_ref_array2(g_ref_fields," SELECT prfel002,prfel003 FROM prfel_t WHERE prfeldocno = ? AND prfel001 = '"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_prfe_m.prfel002 = g_rtn_fields[1]
               LET g_prfe_m.prfel003 = g_rtn_fields[2]
               DISPLAY BY NAME g_prfe_m.prfel002
               DISPLAY BY NAME g_prfe_m.prfel003
            END IF]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DISPLAY ARRAY g_imaa_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
               
      END DISPLAY]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_prfe_m.prfestus = "N"
      CALL g_imaa_d.clear()
      LET g_prfe_m.prfeunit = g_site
      LET g_prfe_m.prfesite = g_prfe_m.prfeunit
      CALL aprt502_prfeunit_ref()
      LET g_prfe_m.prfedocdt = g_today
      LET g_prfe_m.prfe004 = g_user
      CALL aprt502_prfe004_ref()
      CALL aprt502_prfe004_display()
      LET g_prfe_m_t.* = g_prfe_m.*]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_prfe_m.prfestus MATCHES "[DR]" THEN 
         LET g_prfe_m.prfestus = "N"
      END IF]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_prfe_m.prfestus MATCHES "[DR]" THEN 
      LET g_prfe_m.prfestus = "N"
   END IF
   IF g_prfe_m.prfestus<>'N' THEN
      RETURN
   END IF]]>
</point>
  <point name="send.before_send" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_aprt502_conf_chk(g_prfe_m.prfedocno,g_prfe_m.prfestus) RETURNING l_success
   IF l_success THEN
            
   ELSE
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   define  l_success   like type_t.num5]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("prfeacti",TRUE)]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("prfe001,prfe002",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_prfe_m.prfe001='I' THEN
      CALL cl_set_comp_entry("prfeacti",FALSE)
   ELSE
      CALL cl_set_comp_entry("prfeacti",TRUE)     
   END IF]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_cnt   LIKE type_t.num5]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      SELECT count(*) INTO l_cnt FROM prff_t WHERE prffent=g_enterprise AND prffdocno = g_prfe_m.prfedocno
      IF l_cnt>0 THEN  
         CALL cl_set_comp_entry("prfe001,prfe002",FALSE)
      ELSE
         CALL cl_set_comp_entry("prfe001,prfe002",TRUE)      
      END IF]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT cl_null(l_ac) AND l_ac<>0 THEN
      CALL aprt502_fill()
   END IF]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL aprt502_prff003_ref()]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfedocno
   CALL ap_ref_array2(g_ref_fields," SELECT prfel002,prfel003 FROM prfel_t WHERE prfelent = '"||g_enterprise||"' AND prfeldocno = ? AND prfel001 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_prfe_m.prfel002 = g_rtn_fields[1] 
   LET g_prfe_m.prfel003 = g_rtn_fields[2] 
   DISPLAY g_prfe_m.prfel002,g_prfe_m.prfel003 TO prfel002,prfel003
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfeunit
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfeunit_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfeunit_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfe004
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfe004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfe004_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfe005
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfe005_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfe005_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfeownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfeownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfeownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfeowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfeowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfeowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfecrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfecrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfecrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfecrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfecrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfecrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfemodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfemodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfemodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_prfe_m.prfecnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_prfe_m.prfecnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_prfe_m.prfecnfid_desc
]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT prfestus,prfecnfid,prfecnfdt,prfemodid,prfemoddt INTO g_prfe_m.prfestus,g_prfe_m.prfecnfid,g_prfe_m.prfecnfdt,
                                                                g_prfe_m.prfemodid,g_prfe_m.prfemoddt  
     FROM prfe_t
    WHERE prfeent = g_enterprise AND prfedocno = g_prfe_m.prfedocno
   DISPLAY BY NAME g_prfe_m.prfestus,g_prfe_m.prfecnfid,g_prfe_m.prfecnfdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfecnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfe_m.prfecnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prfe_m.prfecnfid_desc   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prfe_m.prfemodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prfe_m.prfemodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prfe_m.prfemodid_desc
   IF g_prfe_m.prfestus NOT MATCHES "[DNR]" THEN
      CALL cl_set_act_visible("delete,modify,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify,modify_detail", true)    
   END IF]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT prfestus INTO g_prfe_m.prfestus FROM prfe_t WHERE prfedocno = g_prfe_m.prfedocno
            AND prfeent = g_enterprise         
         CALL s_aprt502_conf_chk(g_prfe_m.prfedocno,g_prfe_m.prfestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt502_conf_upd(g_prfe_m.prfedocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  CALL cl_err(g_prfe_m.prfedocno,g_errno,1) 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            RETURN            
         END IF
                 
      WHEN 'X'
         SELECT prfestus INTO g_prfe_m.prfestus FROM prfe_t WHERE prfedocno = g_prfe_m.prfedocno
            AND prfeent = g_enterprise  
         CALL s_aprt502_void_chk(g_prfe_m.prfedocno,g_prfe_m.prfestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt502_void_upd(g_prfe_m.prfedocno) RETURNING l_success,g_errno
               IF NOT l_success THEN
                  CALL cl_err(g_prfe_m.prfedocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE 
            RETURN    
         END IF        
   END CASE]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#   IF g_prfe_m.prfestus = 'X'  THEN
#      RETURN
#   END IF
   IF g_prfe_m.prfestus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#      CALL cl_set_act_visible("unconfirmed", FALSE)
#      CALL cl_set_act_visible("invalid,confirmed", true)
#      IF g_prfe_m.prfestus = 'N' THEN
#         CALL cl_set_act_visible("unconfirmed", FALSE)
#         CALL cl_set_act_visible("invalid,confirmed", true)            
#      END IF
#      IF g_prfe_m.prfestus = 'Y' THEN
#         CALL cl_set_act_visible("confirmed,invalid", FALSE)      
#      END IF
#      IF g_prfe_m.prfestus = 'X' THEN
#         CALL cl_set_act_visible("confirmed,invalid", FALSE)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prfe_m.prfestus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success LIKE type_t.num5]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_imaa_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               
            BEFORE DISPLAY
                              
         END DISPLAY]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfeunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfeunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfedocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfedocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfeownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfeownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfeowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfeowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfecrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfecrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfecrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfecrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfecrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfemodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfemodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfemoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfecnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.prfecnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.prfecnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfeunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfeunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfedocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfedocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfedocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfeacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfel002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfel003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.prfestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prffacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prffacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prffacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prff003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prffsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prffsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prffsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.prffunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.prffunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.prffunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prffacti" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prff001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prff002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prffsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.prffunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aprt502.b_fill" ver="4" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt502_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prff_d.clear()    #g_prff_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt502_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prffacti,prff001,prff002,prff003,prffsite,prffunit  FROM prff_t",  
            
                  " INNER JOIN prfe_t ON prfedocno = prffdocno ",
 
                  #"",
                  
                  "",
                  
                  " WHERE prffent=? AND prffdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prff_t.prff001,prff_t.prff002,prff_t.prff003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt502_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt502_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prfe_m.prfedocno
                                               
      FOREACH b_fill_cs INTO g_prff_d[l_ac].prffacti,g_prff_d[l_ac].prff001,g_prff_d[l_ac].prff002,g_prff_d[l_ac].prff003, 
          g_prff_d[l_ac].prffsite,g_prff_d[l_ac].prffunit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prff_d.deleteElement(g_prff_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt502_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aprt502.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt502_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt502_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt502.browser_fill" ver="8" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt502_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfe_m.* TO NULL
   CALL g_prff_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prfedocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prfedocno ",
                      " FROM prfe_t ",
                      " ",
                      " LEFT JOIN prff_t ON prffent = prfeent AND prfedocno = prffdocno ",
 
 
                      " LEFT JOIN prfel_t ON prfedocno = prfeldocno AND prfel001 = '",g_lang,"' ", 
                      " ", 
                      " WHERE prfeent = '" ||g_enterprise|| "' AND prffent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prfe_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prfedocno ",
                      " FROM prfe_t ", 
                      "  ",
                      "  LEFT JOIN prfel_t ON prfedocno = prfeldocno AND prfel001 = '",g_lang,"' ",
                      " WHERE prfeent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prfe_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prfeunit,'',prfedocdt,prfedocno,prfe001,prfe002,prfe003,'','',prfeacti,prfe004,'',prfe005,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prfestus,prfeunit,'',prfedocdt,prfedocno,prfe001,prfe002,prfe003,'', 
       '',prfeacti,prfe004,'',prfe005,'',t1.ooefl003 ,t2.prfel002 ,t3.oofa011 ,t4.ooefl003 ",
               " FROM prfe_t ",
               "  ",
               "  LEFT JOIN prff_t ON prffent = prfeent AND prfedocno = prffdocno ",
 
 
               "  LEFT JOIN prfel_t ON prfedocno = prfeldocno AND prfel001 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prfeunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prfel_t t2 ON t2.prfelent='"||g_enterprise||"' AND t2.prfeldocno=prfedocno AND t2.prfel001='"||g_lang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=prfe004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=prfe005 AND t4.ooefl002='"||g_lang||"' ",
 
               " WHERE prfeent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prfe_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prfeunit,g_browser[g_cnt].b_prfeunit_desc, 
       g_browser[g_cnt].b_prfedocdt,g_browser[g_cnt].b_prfedocno,g_browser[g_cnt].b_prfe001,g_browser[g_cnt].b_prfe002, 
       g_browser[g_cnt].b_prfe003,g_browser[g_cnt].b_prfedocno_desc,g_browser[g_cnt].b_prfel003_2,g_browser[g_cnt].b_prfeacti, 
       g_browser[g_cnt].b_prfe004,g_browser[g_cnt].b_prfe004_desc,g_browser[g_cnt].b_prfe005,g_browser[g_cnt].b_prfe005_desc, 
       g_browser[g_cnt].b_prfeunit_desc,g_browser[g_cnt].b_prfedocno_desc,g_browser[g_cnt].b_prfe004_desc, 
       g_browser[g_cnt].b_prfe005_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aprt502.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt502_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prfedocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt502_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt502.construct" ver="4" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt502_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prfe_m.* TO NULL
   CALL g_prff_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prfeunit,prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti,prfel002, 
          prfel003,prfe004,prfe005,prfesite,prfestus,prfeownid,prfeowndp,prfecrtid,prfecrtdp,prfecrtdt, 
          prfemodid,prfemoddt,prfecnfid,prfecnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prfecrtdt>>----
         AFTER FIELD prfecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfemoddt>>----
         AFTER FIELD prfemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfecnfdt>>----
         AFTER FIELD prfecnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prfepstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prfeunit
         ON ACTION controlp INFIELD prfeunit
            #add-point:ON ACTION controlp INFIELD prfeunit
            {<point name="construct.c.prfeunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeunit
            #add-point:BEFORE FIELD prfeunit
            {<point name="construct.b.prfeunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfeunit
            
            #add-point:AFTER FIELD prfeunit
            {<point name="construct.a.prfeunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfedocdt
            #add-point:BEFORE FIELD prfedocdt
            {<point name="construct.b.prfedocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfedocdt
            
            #add-point:AFTER FIELD prfedocdt
            {<point name="construct.a.prfedocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfedocdt
         ON ACTION controlp INFIELD prfedocdt
            #add-point:ON ACTION controlp INFIELD prfedocdt
            {<point name="construct.c.prfedocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prfedocno
         ON ACTION controlp INFIELD prfedocno
            #add-point:ON ACTION controlp INFIELD prfedocno
            {<point name="construct.c.prfedocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfedocno
            #add-point:BEFORE FIELD prfedocno
            {<point name="construct.b.prfedocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfedocno
            
            #add-point:AFTER FIELD prfedocno
            {<point name="construct.a.prfedocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe001
            #add-point:BEFORE FIELD prfe001
            {<point name="construct.b.prfe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe001
            
            #add-point:AFTER FIELD prfe001
            {<point name="construct.a.prfe001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfe001
         ON ACTION controlp INFIELD prfe001
            #add-point:ON ACTION controlp INFIELD prfe001
            {<point name="construct.c.prfe001" />}
            #END add-point
 
         #Ctrlp:construct.c.prfe002
         ON ACTION controlp INFIELD prfe002
            #add-point:ON ACTION controlp INFIELD prfe002
            {<point name="construct.c.prfe002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe002
            #add-point:BEFORE FIELD prfe002
            {<point name="construct.b.prfe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe002
            
            #add-point:AFTER FIELD prfe002
            {<point name="construct.a.prfe002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe003
            #add-point:BEFORE FIELD prfe003
            {<point name="construct.b.prfe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe003
            
            #add-point:AFTER FIELD prfe003
            {<point name="construct.a.prfe003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfe003
         ON ACTION controlp INFIELD prfe003
            #add-point:ON ACTION controlp INFIELD prfe003
            {<point name="construct.c.prfe003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeacti
            #add-point:BEFORE FIELD prfeacti
            {<point name="construct.b.prfeacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfeacti
            
            #add-point:AFTER FIELD prfeacti
            {<point name="construct.a.prfeacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfeacti
         ON ACTION controlp INFIELD prfeacti
            #add-point:ON ACTION controlp INFIELD prfeacti
            {<point name="construct.c.prfeacti" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfel002
            #add-point:BEFORE FIELD prfel002
            {<point name="construct.b.prfel002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfel002
            
            #add-point:AFTER FIELD prfel002
            {<point name="construct.a.prfel002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfel002
         ON ACTION controlp INFIELD prfel002
            #add-point:ON ACTION controlp INFIELD prfel002
            {<point name="construct.c.prfel002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfel003
            #add-point:BEFORE FIELD prfel003
            {<point name="construct.b.prfel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfel003
            
            #add-point:AFTER FIELD prfel003
            {<point name="construct.a.prfel003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfel003
         ON ACTION controlp INFIELD prfel003
            #add-point:ON ACTION controlp INFIELD prfel003
            {<point name="construct.c.prfel003" />}
            #END add-point
 
         #Ctrlp:construct.c.prfe004
         ON ACTION controlp INFIELD prfe004
            #add-point:ON ACTION controlp INFIELD prfe004
            {<point name="construct.c.prfe004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe004
            #add-point:BEFORE FIELD prfe004
            {<point name="construct.b.prfe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe004
            
            #add-point:AFTER FIELD prfe004
            {<point name="construct.a.prfe004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfe005
         ON ACTION controlp INFIELD prfe005
            #add-point:ON ACTION controlp INFIELD prfe005
            {<point name="construct.c.prfe005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe005
            #add-point:BEFORE FIELD prfe005
            {<point name="construct.b.prfe005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe005
            
            #add-point:AFTER FIELD prfe005
            {<point name="construct.a.prfe005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfesite
            #add-point:BEFORE FIELD prfesite
            {<point name="construct.b.prfesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfesite
            
            #add-point:AFTER FIELD prfesite
            {<point name="construct.a.prfesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfesite
         ON ACTION controlp INFIELD prfesite
            #add-point:ON ACTION controlp INFIELD prfesite
            {<point name="construct.c.prfesite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfestus
            #add-point:BEFORE FIELD prfestus
            {<point name="construct.b.prfestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfestus
            
            #add-point:AFTER FIELD prfestus
            {<point name="construct.a.prfestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfestus
         ON ACTION controlp INFIELD prfestus
            #add-point:ON ACTION controlp INFIELD prfestus
            {<point name="construct.c.prfestus" />}
            #END add-point
 
         #Ctrlp:construct.c.prfeownid
         ON ACTION controlp INFIELD prfeownid
            #add-point:ON ACTION controlp INFIELD prfeownid
            {<point name="construct.c.prfeownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeownid
            #add-point:BEFORE FIELD prfeownid
            {<point name="construct.b.prfeownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfeownid
            
            #add-point:AFTER FIELD prfeownid
            {<point name="construct.a.prfeownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfeowndp
         ON ACTION controlp INFIELD prfeowndp
            #add-point:ON ACTION controlp INFIELD prfeowndp
            {<point name="construct.c.prfeowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeowndp
            #add-point:BEFORE FIELD prfeowndp
            {<point name="construct.b.prfeowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfeowndp
            
            #add-point:AFTER FIELD prfeowndp
            {<point name="construct.a.prfeowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfecrtid
         ON ACTION controlp INFIELD prfecrtid
            #add-point:ON ACTION controlp INFIELD prfecrtid
            {<point name="construct.c.prfecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfecrtid
            #add-point:BEFORE FIELD prfecrtid
            {<point name="construct.b.prfecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfecrtid
            
            #add-point:AFTER FIELD prfecrtid
            {<point name="construct.a.prfecrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prfecrtdp
         ON ACTION controlp INFIELD prfecrtdp
            #add-point:ON ACTION controlp INFIELD prfecrtdp
            {<point name="construct.c.prfecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfecrtdp
            #add-point:BEFORE FIELD prfecrtdp
            {<point name="construct.b.prfecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfecrtdp
            
            #add-point:AFTER FIELD prfecrtdp
            {<point name="construct.a.prfecrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfecrtdt
            #add-point:BEFORE FIELD prfecrtdt
            {<point name="construct.b.prfecrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prfemodid
         ON ACTION controlp INFIELD prfemodid
            #add-point:ON ACTION controlp INFIELD prfemodid
            {<point name="construct.c.prfemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfemodid
            #add-point:BEFORE FIELD prfemodid
            {<point name="construct.b.prfemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfemodid
            
            #add-point:AFTER FIELD prfemodid
            {<point name="construct.a.prfemodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfemoddt
            #add-point:BEFORE FIELD prfemoddt
            {<point name="construct.b.prfemoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prfecnfid
         ON ACTION controlp INFIELD prfecnfid
            #add-point:ON ACTION controlp INFIELD prfecnfid
            {<point name="construct.c.prfecnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfecnfid
            #add-point:BEFORE FIELD prfecnfid
            {<point name="construct.b.prfecnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfecnfid
            
            #add-point:AFTER FIELD prfecnfid
            {<point name="construct.a.prfecnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfecnfdt
            #add-point:BEFORE FIELD prfecnfdt
            {<point name="construct.b.prfecnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prffacti,prff001,prff002,prff003,prffsite,prffunit
           FROM s_detail1[1].prffacti,s_detail1[1].prff001,s_detail1[1].prff002,s_detail1[1].prff003, 
               s_detail1[1].prffsite,s_detail1[1].prffunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt502.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt502_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prfedocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt502.delete" ver="6" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt502_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
   
   LET g_master_multi_table_t.prfeldocno = g_prfe_m.prfedocno
LET g_master_multi_table_t.prfel002 = g_prfe_m.prfel002
LET g_master_multi_table_t.prfel003 = g_prfe_m.prfel003
 
 
   CALL aprt502_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt502_cl USING g_enterprise,g_prfe_m.prfedocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt502_cl:", STATUS, 1)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfe_m.prfedocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt502_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prfedocno_t = g_prfe_m.prfedocno
 
 
      DELETE FROM prfe_t
       WHERE prfeent = g_enterprise AND prfedocno = g_prfe_m.prfedocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prfe_m.prfedocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prff_t
       WHERE prffent = g_enterprise AND prffdocno = g_prfe_m.prfedocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prff_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prff_d.clear() 
 
     
      #CALL aprt502_ui_browser_refresh()  
      CALL aprt502_ui_headershow()  
      CALL aprt502_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt502_browser_fill("")
         CALL aprt502_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt502_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.prfeldocno
   LET l_field_keys[01] = 'prfeldocno'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'prfel001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'prfel_t')
 
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt502_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prfe_m.prfedocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aprt502.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt502_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prff_t
       WHERE prffent = g_enterprise AND
         prffdocno = ps_keys_bak[1] AND prff001 = ps_keys_bak[2] AND prff002 = ps_keys_bak[3] AND prff003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt502.description" ver="69" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000075
#+ 
#+ Filename...: aprt502
#+ Description: 產品組申請維護作業
#+ Creator....: 02296(2014/03/26)
#+ Modifier...: 02296(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aprt502.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt502_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prff_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt502_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt502_detail AS ",
                "SELECT * FROM prff_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt502_detail SELECT * FROM prff_t 
                                         WHERE prffent = g_enterprise AND prffdocno = g_prfedocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt502_detail 
      #更新key欄位
      SET prffdocno = g_prfe_m.prfedocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prff_t SELECT * FROM aprt502_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt502_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prfedocno_t = g_prfe_m.prfedocno
 
   
   DROP TABLE aprt502_detail
   
END FUNCTION
]]>
</section>
  <section id="aprt502.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt502_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt502.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt502_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prfe_m.prfedocno = g_browser[g_current_idx].b_prfedocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prfe_t",SQLCA.sqlcode,1)
      INITIALIZE g_prfe_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt502_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="aprt502.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt502_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aprt502.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt502_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prfeunit,prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti,prfe004, 
          prfe005
                          FROM s_browse[1].b_prfeunit,s_browse[1].b_prfedocdt,s_browse[1].b_prfedocno, 
                              s_browse[1].b_prfe001,s_browse[1].b_prfe002,s_browse[1].b_prfe003,s_browse[1].b_prfeacti, 
                              s_browse[1].b_prfe004,s_browse[1].b_prfe005
 
         BEFORE CONSTRUCT
               DISPLAY aprt502_filter_parser('prfeunit') TO s_browse[1].b_prfeunit
            DISPLAY aprt502_filter_parser('prfedocdt') TO s_browse[1].b_prfedocdt
            DISPLAY aprt502_filter_parser('prfedocno') TO s_browse[1].b_prfedocno
            DISPLAY aprt502_filter_parser('prfe001') TO s_browse[1].b_prfe001
            DISPLAY aprt502_filter_parser('prfe002') TO s_browse[1].b_prfe002
            DISPLAY aprt502_filter_parser('prfe003') TO s_browse[1].b_prfe003
            DISPLAY aprt502_filter_parser('prfeacti') TO s_browse[1].b_prfeacti
            DISPLAY aprt502_filter_parser('prfe004') TO s_browse[1].b_prfe004
            DISPLAY aprt502_filter_parser('prfe005') TO s_browse[1].b_prfe005
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt502_filter_show('prfeunit')
   CALL aprt502_filter_show('prfedocdt')
   CALL aprt502_filter_show('prfedocno')
   CALL aprt502_filter_show('prfe001')
   CALL aprt502_filter_show('prfe002')
   CALL aprt502_filter_show('prfe003')
   CALL aprt502_filter_show('prfeacti')
   CALL aprt502_filter_show('prfe004')
   CALL aprt502_filter_show('prfe005')
 
END FUNCTION
]]>
</section>
  <section id="aprt502.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt502_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aprt502.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt502_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt502_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aprt502.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prfe_m        RECORD
       prfeunit LIKE prfe_t.prfeunit, 
   prfeunit_desc LIKE type_t.chr80, 
   prfedocdt LIKE prfe_t.prfedocdt, 
   prfedocno LIKE prfe_t.prfedocno, 
   prfe001 LIKE prfe_t.prfe001, 
   prfe002 LIKE prfe_t.prfe002, 
   prfe003 LIKE prfe_t.prfe003, 
   prfeacti LIKE prfe_t.prfeacti, 
   prfel002 LIKE prfel_t.prfel002, 
   prfel003 LIKE prfel_t.prfel003, 
   prfe004 LIKE prfe_t.prfe004, 
   prfe004_desc LIKE type_t.chr80, 
   prfe005 LIKE prfe_t.prfe005, 
   prfe005_desc LIKE type_t.chr80, 
   prfesite LIKE prfe_t.prfesite, 
   prfestus LIKE prfe_t.prfestus, 
   prfeownid LIKE prfe_t.prfeownid, 
   prfeownid_desc LIKE type_t.chr80, 
   prfeowndp LIKE prfe_t.prfeowndp, 
   prfeowndp_desc LIKE type_t.chr80, 
   prfecrtid LIKE prfe_t.prfecrtid, 
   prfecrtid_desc LIKE type_t.chr80, 
   prfecrtdp LIKE prfe_t.prfecrtdp, 
   prfecrtdp_desc LIKE type_t.chr80, 
   prfecrtdt DATETIME YEAR TO SECOND, 
   prfemodid LIKE prfe_t.prfemodid, 
   prfemodid_desc LIKE type_t.chr80, 
   prfemoddt DATETIME YEAR TO SECOND, 
   prfecnfid LIKE prfe_t.prfecnfid, 
   prfecnfid_desc LIKE type_t.chr80, 
   prfecnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prff_d        RECORD
       prffacti LIKE prff_t.prffacti, 
   prff001 LIKE prff_t.prff001, 
   prff002 LIKE prff_t.prff002, 
   prff003 LIKE prff_t.prff003, 
   prff003_desc LIKE type_t.chr500, 
   prffsite LIKE prff_t.prffsite, 
   prffunit LIKE prff_t.prffunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prfe_m          type_g_prfe_m
DEFINE g_prfe_m_t        type_g_prfe_m
 
   DEFINE g_prfedocno_t LIKE prfe_t.prfedocno
 
 
DEFINE g_prff_d          DYNAMIC ARRAY OF type_g_prff_d
DEFINE g_prff_d_t        type_g_prff_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfeunit LIKE prfe_t.prfeunit,
   b_prfeunit_desc LIKE type_t.chr80,
      b_prfedocdt LIKE prfe_t.prfedocdt,
      b_prfedocno LIKE prfe_t.prfedocno,
      b_prfe001 LIKE prfe_t.prfe001,
      b_prfe002 LIKE prfe_t.prfe002,
      b_prfe003 LIKE prfe_t.prfe003,
   b_prfedocno_desc LIKE type_t.chr80,
   b_prfel003_2 LIKE type_t.chr80,
      b_prfeacti LIKE prfe_t.prfeacti,
      b_prfe004 LIKE prfe_t.prfe004,
   b_prfe004_desc LIKE type_t.chr80,
      b_prfe005 LIKE prfe_t.prfe005,
   b_prfe005_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prfeunit LIKE prfe_t.prfeunit,
   b_prfeunit_desc LIKE type_t.chr80,
      b_prfedocdt LIKE prfe_t.prfedocdt,
      b_prfedocno LIKE prfe_t.prfedocno,
      b_prfe001 LIKE prfe_t.prfe001,
      b_prfe002 LIKE prfe_t.prfe002,
      b_prfe003 LIKE prfe_t.prfe003,
   b_prfedocno_desc LIKE type_t.chr80,
   b_prfel003_2 LIKE type_t.chr80,
      b_prfeacti LIKE prfe_t.prfeacti,
      b_prfe004 LIKE prfe_t.prfe004,
   b_prfe004_desc LIKE type_t.chr80,
      b_prfe005 LIKE prfe_t.prfe005,
   b_prfe005_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      prfeldocno LIKE prfel_t.prfeldocno,
      prfel002 LIKE prfel_t.prfel002,
      prfel003 LIKE prfel_t.prfel003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aprt502.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt502_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prff_d.getLength() THEN
         LET g_detail_idx = g_prff_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prff_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prff_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aprt502.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt502_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prfestus','13','N,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('prfe001','32') 
   CALL cl_set_combo_scc('prff002','6517') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt502_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aprt502.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt502_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prffacti,prff001,prff002,prff003,prffsite,prffunit FROM prff_t WHERE prffent=?  
       AND prffdocno=? AND prff001=? AND prff002=? AND prff003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt502_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt502_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt502_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prfe_m.prfeunit,g_prfe_m.prfedocdt,g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002, 
       g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfel002,g_prfe_m.prfel003,g_prfe_m.prfe004,g_prfe_m.prfe005, 
       g_prfe_m.prfesite,g_prfe_m.prfestus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aprt502.input.body" ver="6" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prff_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prff_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt502_b_fill()
            LET g_rec_b = g_prff_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt502_cl USING g_enterprise,g_prfe_m.prfedocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt502_cl:", STATUS, 1)
               CLOSE aprt502_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prff_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prff_d[l_ac].prff001 IS NOT NULL
               AND g_prff_d[l_ac].prff002 IS NOT NULL
               AND g_prff_d[l_ac].prff003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prff_d_t.* = g_prff_d[l_ac].*  #BACKUP
               CALL aprt502_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt502_set_no_entry_b(l_cmd)
               IF NOT aprt502_lock_b("prff_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt502_bcl INTO g_prff_d[l_ac].prffacti,g_prff_d[l_ac].prff001,g_prff_d[l_ac].prff002, 
                      g_prff_d[l_ac].prff003,g_prff_d[l_ac].prffsite,g_prff_d[l_ac].prffunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prff_d_t.prff001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt502_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prff_d[l_ac].* TO NULL 
                  LET g_prff_d[l_ac].prffacti = "Y"
      LET g_prff_d[l_ac].prff002 = "4"
 
            LET g_prff_d_t.* = g_prff_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt502_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt502_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prff_d[li_reproduce_target].* = g_prff_d[li_reproduce].*
 
               LET g_prff_d[li_reproduce_target].prff001 = NULL
               LET g_prff_d[li_reproduce_target].prff002 = NULL
               LET g_prff_d[li_reproduce_target].prff003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prff_t 
             WHERE prffent = g_enterprise AND prffdocno = g_prfe_m.prfedocno
 
               AND prff001 = g_prff_d[l_ac].prff001
               AND prff002 = g_prff_d[l_ac].prff002
               AND prff003 = g_prff_d[l_ac].prff003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfe_m.prfedocno
               LET gs_keys[2] = g_prff_d[g_detail_idx].prff001
               LET gs_keys[3] = g_prff_d[g_detail_idx].prff002
               LET gs_keys[4] = g_prff_d[g_detail_idx].prff003
               CALL aprt502_insert_b('prff_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prff_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prff_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt502_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prff_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prff_d.deleteElement(l_ac)
               NEXT FIELD prff001
            END IF
         
            IF g_prff_d[l_ac].prff001 IS NOT NULL
               AND g_prff_d_t.prff002 IS NOT NULL
               AND g_prff_d_t.prff003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prff_t
                WHERE prffent = g_enterprise AND prffdocno = g_prfe_m.prfedocno AND
 
                      prff001 = g_prff_d_t.prff001
                  AND prff002 = g_prff_d_t.prff002
                  AND prff003 = g_prff_d_t.prff003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prff_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt502_bcl
               LET l_count = g_prff_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfe_m.prfedocno
               LET gs_keys[2] = g_prff_d[g_detail_idx].prff001
               LET gs_keys[3] = g_prff_d[g_detail_idx].prff002
               LET gs_keys[4] = g_prff_d[g_detail_idx].prff003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt502_delete_b('prff_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD prffacti
            #add-point:BEFORE FIELD prffacti
            {<point name="input.b.page1.prffacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prffacti
            
            #add-point:AFTER FIELD prffacti
            {<point name="input.a.page1.prffacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prffacti
            #add-point:ON CHANGE prffacti
            {<point name="input.g.page1.prffacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prff001
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prff_d[l_ac].prff001,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prff001
            END IF
 
 
            #add-point:AFTER FIELD prff001
            {<point name="input.a.page1.prff001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prff001
            #add-point:BEFORE FIELD prff001
            {<point name="input.b.page1.prff001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prff001
            #add-point:ON CHANGE prff001
            {<point name="input.g.page1.prff001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prff002
            #add-point:BEFORE FIELD prff002
            {<point name="input.b.page1.prff002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prff002
            
            #add-point:AFTER FIELD prff002
            {<point name="input.a.page1.prff002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prff002
            #add-point:ON CHANGE prff002
            {<point name="input.g.page1.prff002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prff003
            #add-point:BEFORE FIELD prff003
            {<point name="input.b.page1.prff003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prff003
            
            #add-point:AFTER FIELD prff003
            {<point name="input.a.page1.prff003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prff003
            #add-point:ON CHANGE prff003
            {<point name="input.g.page1.prff003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prffsite
            #add-point:BEFORE FIELD prffsite
            {<point name="input.b.page1.prffsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prffsite
            
            #add-point:AFTER FIELD prffsite
            {<point name="input.a.page1.prffsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prffsite
            #add-point:ON CHANGE prffsite
            {<point name="input.g.page1.prffsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prffunit
            #add-point:BEFORE FIELD prffunit
            {<point name="input.b.page1.prffunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prffunit
            
            #add-point:AFTER FIELD prffunit
            {<point name="input.a.page1.prffunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prffunit
            #add-point:ON CHANGE prffunit
            {<point name="input.g.page1.prffunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prffacti
         ON ACTION controlp INFIELD prffacti
            #add-point:ON ACTION controlp INFIELD prffacti
            {<point name="input.c.page1.prffacti" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prff001
         ON ACTION controlp INFIELD prff001
            #add-point:ON ACTION controlp INFIELD prff001
            {<point name="input.c.page1.prff001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prff002
         ON ACTION controlp INFIELD prff002
            #add-point:ON ACTION controlp INFIELD prff002
            {<point name="input.c.page1.prff002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prff003
         ON ACTION controlp INFIELD prff003
            #add-point:ON ACTION controlp INFIELD prff003
            {<point name="input.c.page1.prff003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prffsite
         ON ACTION controlp INFIELD prffsite
            #add-point:ON ACTION controlp INFIELD prffsite
            {<point name="input.c.page1.prffsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prffunit
         ON ACTION controlp INFIELD prffunit
            #add-point:ON ACTION controlp INFIELD prffunit
            {<point name="input.c.page1.prffunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prff_d[l_ac].* = g_prff_d_t.*
               CLOSE aprt502_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prff_d[l_ac].prff001,-263,1)
               LET g_prff_d[l_ac].* = g_prff_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prff_t SET (prffdocno,prffacti,prff001,prff002,prff003,prffsite,prffunit) = (g_prfe_m.prfedocno, 
                   g_prff_d[l_ac].prffacti,g_prff_d[l_ac].prff001,g_prff_d[l_ac].prff002,g_prff_d[l_ac].prff003, 
                   g_prff_d[l_ac].prffsite,g_prff_d[l_ac].prffunit)
                WHERE prffent = g_enterprise AND prffdocno = g_prfe_m.prfedocno 
 
                  AND prff001 = g_prff_d_t.prff001 #項次   
                  AND prff002 = g_prff_d_t.prff002  
                  AND prff003 = g_prff_d_t.prff003  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prff_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prff_d[l_ac].* = g_prff_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prff_t",SQLCA.sqlcode,1)
                     LET g_prff_d[l_ac].* = g_prff_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prfe_m.prfedocno
               LET gs_keys_bak[1] = g_prfedocno_t
               LET gs_keys[2] = g_prff_d[g_detail_idx].prff001
               LET gs_keys_bak[2] = g_prff_d_t.prff001
               LET gs_keys[3] = g_prff_d[g_detail_idx].prff002
               LET gs_keys_bak[3] = g_prff_d_t.prff002
               LET gs_keys[4] = g_prff_d[g_detail_idx].prff003
               LET gs_keys_bak[4] = g_prff_d_t.prff003
               CALL aprt502_update_b('prff_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prfe_m),util.JSON.stringify(g_prff_d_t)
               LET g_log2 = util.JSON.stringify(g_prfe_m),util.JSON.stringify(g_prff_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt502_unlock_b("prff_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prff_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prff_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aprt502.input.head" ver="7" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_prfe_m.prfeunit,g_prfe_m.prfedocdt,g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002, 
          g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfel002,g_prfe_m.prfel003,g_prfe_m.prfe004,g_prfe_m.prfe005, 
          g_prfe_m.prfesite,g_prfe_m.prfestus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.prfeldocno = g_prfe_m.prfedocno
LET g_master_multi_table_t.prfel002 = g_prfe_m.prfel002
LET g_master_multi_table_t.prfel003 = g_prfe_m.prfel003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.prfeldocno = ''
LET g_master_multi_table_t.prfel002 = ''
LET g_master_multi_table_t.prfel003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prfeunit
            
            #add-point:AFTER FIELD prfeunit
            {<point name="input.a.prfeunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeunit
            #add-point:BEFORE FIELD prfeunit
            {<point name="input.b.prfeunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfeunit
            #add-point:ON CHANGE prfeunit
            {<point name="input.g.prfeunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfedocdt
            #add-point:BEFORE FIELD prfedocdt
            {<point name="input.b.prfedocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfedocdt
            
            #add-point:AFTER FIELD prfedocdt
            {<point name="input.a.prfedocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfedocdt
            #add-point:ON CHANGE prfedocdt
            {<point name="input.g.prfedocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfedocno
            #add-point:BEFORE FIELD prfedocno
            {<point name="input.b.prfedocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfedocno
            
            #add-point:AFTER FIELD prfedocno
            {<point name="input.a.prfedocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfedocno
            #add-point:ON CHANGE prfedocno
            {<point name="input.g.prfedocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe001
            #add-point:BEFORE FIELD prfe001
            {<point name="input.b.prfe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe001
            
            #add-point:AFTER FIELD prfe001
            {<point name="input.a.prfe001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfe001
            #add-point:ON CHANGE prfe001
            {<point name="input.g.prfe001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe002
            #add-point:BEFORE FIELD prfe002
            {<point name="input.b.prfe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe002
            
            #add-point:AFTER FIELD prfe002
            {<point name="input.a.prfe002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfe002
            #add-point:ON CHANGE prfe002
            {<point name="input.g.prfe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prfe_m.prfe003,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prfe003
            END IF
 
 
            #add-point:AFTER FIELD prfe003
            {<point name="input.a.prfe003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe003
            #add-point:BEFORE FIELD prfe003
            {<point name="input.b.prfe003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfe003
            #add-point:ON CHANGE prfe003
            {<point name="input.g.prfe003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfeacti
            #add-point:BEFORE FIELD prfeacti
            {<point name="input.b.prfeacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfeacti
            
            #add-point:AFTER FIELD prfeacti
            {<point name="input.a.prfeacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfeacti
            #add-point:ON CHANGE prfeacti
            {<point name="input.g.prfeacti" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfel002
            #add-point:BEFORE FIELD prfel002
            {<point name="input.b.prfel002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfel002
            
            #add-point:AFTER FIELD prfel002
            {<point name="input.a.prfel002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfel002
            #add-point:ON CHANGE prfel002
            {<point name="input.g.prfel002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfel003
            #add-point:BEFORE FIELD prfel003
            {<point name="input.b.prfel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfel003
            
            #add-point:AFTER FIELD prfel003
            {<point name="input.a.prfel003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfel003
            #add-point:ON CHANGE prfel003
            {<point name="input.g.prfel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe004
            
            #add-point:AFTER FIELD prfe004
            {<point name="input.a.prfe004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe004
            #add-point:BEFORE FIELD prfe004
            {<point name="input.b.prfe004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfe004
            #add-point:ON CHANGE prfe004
            {<point name="input.g.prfe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfe005
            
            #add-point:AFTER FIELD prfe005
            {<point name="input.a.prfe005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfe005
            #add-point:BEFORE FIELD prfe005
            {<point name="input.b.prfe005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prfe005
            #add-point:ON CHANGE prfe005
            {<point name="input.g.prfe005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfesite
            #add-point:BEFORE FIELD prfesite
            {<point name="input.b.prfesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfesite
            
            #add-point:AFTER FIELD prfesite
            {<point name="input.a.prfesite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfesite
            #add-point:ON CHANGE prfesite
            {<point name="input.g.prfesite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prfestus
            #add-point:BEFORE FIELD prfestus
            {<point name="input.b.prfestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prfestus
            
            #add-point:AFTER FIELD prfestus
            {<point name="input.a.prfestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prfestus
            #add-point:ON CHANGE prfestus
            {<point name="input.g.prfestus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prfeunit
         ON ACTION controlp INFIELD prfeunit
            #add-point:ON ACTION controlp INFIELD prfeunit
            {<point name="input.c.prfeunit" />}
            #END add-point
 
         #Ctrlp:input.c.prfedocdt
         ON ACTION controlp INFIELD prfedocdt
            #add-point:ON ACTION controlp INFIELD prfedocdt
            {<point name="input.c.prfedocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prfedocno
         ON ACTION controlp INFIELD prfedocno
            #add-point:ON ACTION controlp INFIELD prfedocno
            {<point name="input.c.prfedocno" />}
            #END add-point
 
         #Ctrlp:input.c.prfe001
         ON ACTION controlp INFIELD prfe001
            #add-point:ON ACTION controlp INFIELD prfe001
            {<point name="input.c.prfe001" />}
            #END add-point
 
         #Ctrlp:input.c.prfe002
         ON ACTION controlp INFIELD prfe002
            #add-point:ON ACTION controlp INFIELD prfe002
            {<point name="input.c.prfe002" />}
            #END add-point
 
         #Ctrlp:input.c.prfe003
         ON ACTION controlp INFIELD prfe003
            #add-point:ON ACTION controlp INFIELD prfe003
            {<point name="input.c.prfe003" />}
            #END add-point
 
         #Ctrlp:input.c.prfeacti
         ON ACTION controlp INFIELD prfeacti
            #add-point:ON ACTION controlp INFIELD prfeacti
            {<point name="input.c.prfeacti" />}
            #END add-point
 
         #Ctrlp:input.c.prfel002
         ON ACTION controlp INFIELD prfel002
            #add-point:ON ACTION controlp INFIELD prfel002
            {<point name="input.c.prfel002" />}
            #END add-point
 
         #Ctrlp:input.c.prfel003
         ON ACTION controlp INFIELD prfel003
            #add-point:ON ACTION controlp INFIELD prfel003
            {<point name="input.c.prfel003" />}
            #END add-point
 
         #Ctrlp:input.c.prfe004
         ON ACTION controlp INFIELD prfe004
            #add-point:ON ACTION controlp INFIELD prfe004
            {<point name="input.c.prfe004" />}
            #END add-point
 
         #Ctrlp:input.c.prfe005
         ON ACTION controlp INFIELD prfe005
            #add-point:ON ACTION controlp INFIELD prfe005
            {<point name="input.c.prfe005" />}
            #END add-point
 
         #Ctrlp:input.c.prfesite
         ON ACTION controlp INFIELD prfesite
            #add-point:ON ACTION controlp INFIELD prfesite
            {<point name="input.c.prfesite" />}
            #END add-point
 
         #Ctrlp:input.c.prfestus
         ON ACTION controlp INFIELD prfestus
            #add-point:ON ACTION controlp INFIELD prfestus
            {<point name="input.c.prfestus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prfe_m.prfedocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prfe_t (prfeent,prfeunit,prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti, 
                   prfe004,prfe005,prfesite,prfestus,prfeownid,prfeowndp,prfecrtid,prfecrtdp,prfecrtdt, 
                   prfecnfid,prfecnfdt)
               VALUES (g_enterprise,g_prfe_m.prfeunit,g_prfe_m.prfedocdt,g_prfe_m.prfedocno,g_prfe_m.prfe001, 
                   g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004,g_prfe_m.prfe005, 
                   g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
                   g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfecnfid,g_prfe_m.prfecnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prfe_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prfe_m.prfedocno = g_master_multi_table_t.prfeldocno AND
         g_prfe_m.prfel002 = g_master_multi_table_t.prfel002 AND 
         g_prfe_m.prfel003 = g_master_multi_table_t.prfel003  THEN
         ELSE 
            LET l_var_keys[01] = g_prfe_m.prfedocno
            LET l_field_keys[01] = 'prfeldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prfeldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prfel001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prfe_m.prfel002
            LET l_fields[01] = 'prfel002'
            LET l_vars[02] = g_prfe_m.prfel003
            LET l_fields[02] = 'prfel003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prfelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prfel_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt502_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prfe_t SET (prfeunit,prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti,prfe004, 
                   prfe005,prfesite,prfestus,prfeownid,prfeowndp,prfecrtid,prfecrtdp,prfecrtdt,prfecnfid, 
                   prfecnfdt) = (g_prfe_m.prfeunit,g_prfe_m.prfedocdt,g_prfe_m.prfedocno,g_prfe_m.prfe001, 
                   g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004,g_prfe_m.prfe005, 
                   g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
                   g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfecnfid,g_prfe_m.prfecnfdt)
                WHERE prfeent = g_enterprise AND prfedocno = g_prfedocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prfe_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_prfe_m.prfedocno = g_master_multi_table_t.prfeldocno AND
         g_prfe_m.prfel002 = g_master_multi_table_t.prfel002 AND 
         g_prfe_m.prfel003 = g_master_multi_table_t.prfel003  THEN
         ELSE 
            LET l_var_keys[01] = g_prfe_m.prfedocno
            LET l_field_keys[01] = 'prfeldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.prfeldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'prfel001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_prfe_m.prfel002
            LET l_fields[01] = 'prfel002'
            LET l_vars[02] = g_prfe_m.prfel003
            LET l_fields[02] = 'prfel003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'prfelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'prfel_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_prfe_m_t)
               LET g_log2 = util.JSON.stringify(g_prfe_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prfedocno_t = g_prfe_m.prfedocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aprt502.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prfedocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prffacti
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aprt502.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt502_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prff_d.clear()   
 
 
   INITIALIZE g_prfe_m.* LIKE prfe_t.*             #DEFAULT 設定
   
   LET g_prfedocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prfe_m.prfeownid = g_user
      LET g_prfe_m.prfeowndp = g_dept
      LET g_prfe_m.prfecrtid = g_user
      LET g_prfe_m.prfecrtdp = g_dept 
      LET g_prfe_m.prfecrtdt = cl_get_current()
      LET g_prfe_m.prfemodid = ""
      LET g_prfe_m.prfemoddt = ""
      LET g_prfe_m.prfestus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prfe_m.prfe001 = "I"
      LET g_prfe_m.prfeacti = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt502_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfe_m.* = g_prfe_m_t.*
         CALL aprt502_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prff_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prfedocno_t = g_prfe_m.prfedocno
 
   
   LET g_wc = g_wc,  
              " OR ( prfeent = '" ||g_enterprise|| "' AND",
              " prfedocno = '", g_prfe_m.prfedocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt502_cl
   
END FUNCTION
]]>
</section>
  <section id="aprt502.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt502_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prff_t
                  (prffent,
                   prffdocno,
                   prff001,prff002,prff003
                   ,prffacti,prffsite,prffunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_prff_d[g_detail_idx].prffacti,g_prff_d[g_detail_idx].prffsite,g_prff_d[g_detail_idx].prffunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prff_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aprt502.lock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt502_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt502_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prff_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt502_bcl USING g_enterprise,
                                       g_prfe_m.prfedocno,g_prff_d[g_detail_idx].prff001,g_prff_d[g_detail_idx].prff002, 
                                           g_prff_d[g_detail_idx].prff003     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt502_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aprt502.main" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prfeunit,'',prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti,'','', 
       prfe004,'',prfe005,'',prfesite,prfestus,prfeownid,'',prfeowndp,'',prfecrtid,'',prfecrtdp,'',prfecrtdt, 
       prfemodid,'',prfemoddt,prfecnfid,'',prfecnfdt", 
                      " FROM prfe_t",
                      " WHERE prfeent= ? AND prfedocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt502_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prfeunit,prfedocdt,prfedocno,prfe001,prfe002,prfe003,prfeacti,prfe004, 
       prfe005,prfesite,prfestus,prfeownid,prfeowndp,prfecrtid,prfecrtdp,prfecrtdt,prfemodid,prfemoddt, 
       prfecnfid,prfecnfdt,t1.ooefl003 ,t2.oofa011 ,t3.ooefl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 , 
       t7.ooefl003 ,t8.oofa011 ,t9.oofa011",
               " FROM prfe_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prfeunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=prfe004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=prfe005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prfeownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prfeowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prfecrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prfecrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prfemodid  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=prfecnfid  ",
 
               " WHERE prfeent = '" ||g_enterprise|| "' AND prfedocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt502_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt502 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt502_init()   
 
      #進入選單 Menu (="N")
      CALL aprt502_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt502
      
   END IF 
   
   CLOSE aprt502_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aprt502.modify" ver="5" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt502_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
 
   ERROR ""
  
   LET g_prfedocno_t = g_prfe_m.prfedocno
 
   CALL s_transaction_begin()
   
   OPEN aprt502_cl USING g_enterprise,g_prfe_m.prfedocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt502_cl:", STATUS, 1)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfe_m.prfedocno,SQLCA.sqlcode,0)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt502_show()
   WHILE TRUE
      LET g_prfedocno_t = g_prfe_m.prfedocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prfe_m.prfemodid = g_user 
LET g_prfe_m.prfemoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt502_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prfe_m.* = g_prfe_m_t.*
         CALL aprt502_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prfe_t SET (prfemodid,prfemoddt) = (g_prfe_m.prfemodid,g_prfe_m.prfemoddt)
       WHERE prfeent = g_enterprise AND prfedocno = g_prfedocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prfe_m.prfedocno != g_prfedocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prff_t SET prffdocno = g_prfe_m.prfedocno
 
          WHERE prffent = g_enterprise AND prffdocno = g_prfedocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prff_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prff_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prfe_m.prfedocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt502_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prfe_m.prfedocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aprt502.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aprt502.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aprt502.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt502_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prff_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt502_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt502_browser_fill("")
      CALL aprt502_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt502_filter_show('prfeunit')
   CALL aprt502_filter_show('prfedocdt')
   CALL aprt502_filter_show('prfedocno')
   CALL aprt502_filter_show('prfe001')
   CALL aprt502_filter_show('prfe002')
   CALL aprt502_filter_show('prfe003')
   CALL aprt502_filter_show('prfeacti')
   CALL aprt502_filter_show('prfe004')
   CALL aprt502_filter_show('prfe005')
   CALL aprt502_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt502_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aprt502.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt502_reproduce()
   DEFINE l_newno     LIKE prfe_t.prfedocno 
   DEFINE l_oldno     LIKE prfe_t.prfedocno 
 
   DEFINE l_master    RECORD LIKE prfe_t.*
   DEFINE l_detail    RECORD LIKE prff_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prfedocno_t = g_prfe_m.prfedocno
 
    
   LET g_prfe_m.prfedocno = ""
 
    
   CALL aprt502_set_entry('a')
   CALL aprt502_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prfe_m.prfeownid = g_user
      LET g_prfe_m.prfeowndp = g_dept
      LET g_prfe_m.prfecrtid = g_user
      LET g_prfe_m.prfecrtdp = g_dept 
      LET g_prfe_m.prfecrtdt = cl_get_current()
      LET g_prfe_m.prfemodid = ""
      LET g_prfe_m.prfemoddt = ""
      LET g_prfe_m.prfestus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt502_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prfedocno = '", g_prfe_m.prfedocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt502.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt502_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prfedocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt502.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt502_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aprt502.set_no_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt502_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prfedocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aprt502.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt502_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aprt502.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt502_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prfe_m.prfedocno
   LET g_pk_array[1].column = 'prfedocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aprt502.show" ver="6" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt502_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prfe_m_t.* = g_prfe_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt502_b_fill() #單身填充
      CALL aprt502_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prfe_m.prfeownid_desc = cl_get_username(g_prfe_m.prfeownid)
      #LET g_prfe_m.prfeowndp_desc = cl_get_deptname(g_prfe_m.prfeowndp)
      #LET g_prfe_m.prfecrtid_desc = cl_get_username(g_prfe_m.prfecrtid)
      #LET g_prfe_m.prfecrtdp_desc = cl_get_deptname(g_prfe_m.prfecrtdp)
      #LET g_prfe_m.prfemodid_desc = cl_get_username(g_prfe_m.prfemodid)
      #LET g_prfe_m.prfecnfid_desc = cl_get_deptname(g_prfe_m.prfecnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt502_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prfe_m.prfeunit,g_prfe_m.prfeunit_desc,g_prfe_m.prfedocdt,g_prfe_m.prfedocno,g_prfe_m.prfe001, 
       g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfel002,g_prfe_m.prfel003,g_prfe_m.prfe004, 
       g_prfe_m.prfe004_desc,g_prfe_m.prfe005,g_prfe_m.prfe005_desc,g_prfe_m.prfesite,g_prfe_m.prfestus, 
       g_prfe_m.prfeownid,g_prfe_m.prfeownid_desc,g_prfe_m.prfeowndp,g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid, 
       g_prfe_m.prfemodid_desc,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid,g_prfe_m.prfecnfid_desc,g_prfe_m.prfecnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prfe_m.prfestus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prff_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt502_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aprt502.signature" ver="4" status="" src="s">
<![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aprt502_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aprt502_cl USING g_enterprise,g_prfe_m.prfedocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt502_cl:", STATUS, 1)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt502_cl INTO g_prfe_m.prfeunit,g_prfe_m.prfeunit_desc,g_prfe_m.prfedocdt,g_prfe_m.prfedocno, 
       g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfel002,g_prfe_m.prfel003, 
       g_prfe_m.prfe004,g_prfe_m.prfe004_desc,g_prfe_m.prfe005,g_prfe_m.prfe005_desc,g_prfe_m.prfesite, 
       g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeownid_desc,g_prfe_m.prfeowndp,g_prfe_m.prfeowndp_desc, 
       g_prfe_m.prfecrtid,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfecrtdt, 
       g_prfe_m.prfemodid,g_prfe_m.prfemodid_desc,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid,g_prfe_m.prfecnfid_desc, 
       g_prfe_m.prfecnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfe_m.prfedocno,SQLCA.sqlcode,0)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aprt502_show()
   CALL aprt502_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prfe_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prff_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aprt502_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt502_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt502_ui_headershow()
   CALL aprt502_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aprt502_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aprt502_cl USING g_enterprise,g_prfe_m.prfedocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt502_cl:", STATUS, 1)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt502_cl INTO g_prfe_m.prfeunit,g_prfe_m.prfeunit_desc,g_prfe_m.prfedocdt,g_prfe_m.prfedocno, 
       g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfel002,g_prfe_m.prfel003, 
       g_prfe_m.prfe004,g_prfe_m.prfe004_desc,g_prfe_m.prfe005,g_prfe_m.prfe005_desc,g_prfe_m.prfesite, 
       g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeownid_desc,g_prfe_m.prfeowndp,g_prfe_m.prfeowndp_desc, 
       g_prfe_m.prfecrtid,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfecrtdt, 
       g_prfe_m.prfemodid,g_prfe_m.prfemodid_desc,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid,g_prfe_m.prfecnfid_desc, 
       g_prfe_m.prfecnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prfe_m.prfedocno,SQLCA.sqlcode,0)
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aprt502_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aprt502_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt502_ui_headershow()  
   CALL aprt502_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
</section>
  <section id="aprt502.state_change" ver="7" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt502_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prfe_m.prfedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prfe_m.prfestus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt502_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt502_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prfe_t SET prfestus = lc_state 
    WHERE prfeent = g_enterprise AND prfedocno = g_prfe_m.prfedocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_prfe_m.prfestus = lc_state
      DISPLAY BY NAME g_prfe_m.prfestus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aprt502.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt502_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prfedocno = g_prfe_m.prfedocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aprt502.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt502_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aprt502.ui_dialog" ver="24" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt502_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt502_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt502_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prfedocno = g_prfedocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt502_fetch('') # reload data
               LET l_ac = 1
               CALL aprt502_ui_detailshow() #Setting the current row 
      
               CALL aprt502_idx_chk()
               #NEXT FIELD prff001
         
         END DISPLAY
        
         DISPLAY ARRAY g_prff_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt502_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt502_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt502_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt502_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt502_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt502_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt502_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt502_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt502_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt502_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt502_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt502_idx_chk()
            
         ON ACTION previous
            CALL aprt502_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt502_idx_chk()
            
         ON ACTION jump
            CALL aprt502_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt502_idx_chk()
            
         ON ACTION next
            CALL aprt502_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt502_idx_chk()
            
         ON ACTION last
            CALL aprt502_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt502_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prff001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt502_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt502_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt502_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt502_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt502_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt502_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt502_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt502_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prfe_m.prfedocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aprt502.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt502_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prfe_m.prfedocno = g_browser[g_current_idx].b_prfedocno   
 
   EXECUTE aprt502_master_referesh USING g_prfe_m.prfedocno INTO g_prfe_m.prfeunit,g_prfe_m.prfedocdt, 
       g_prfe_m.prfedocno,g_prfe_m.prfe001,g_prfe_m.prfe002,g_prfe_m.prfe003,g_prfe_m.prfeacti,g_prfe_m.prfe004, 
       g_prfe_m.prfe005,g_prfe_m.prfesite,g_prfe_m.prfestus,g_prfe_m.prfeownid,g_prfe_m.prfeowndp,g_prfe_m.prfecrtid, 
       g_prfe_m.prfecrtdp,g_prfe_m.prfecrtdt,g_prfe_m.prfemodid,g_prfe_m.prfemoddt,g_prfe_m.prfecnfid, 
       g_prfe_m.prfecnfdt,g_prfe_m.prfeunit_desc,g_prfe_m.prfe004_desc,g_prfe_m.prfe005_desc,g_prfe_m.prfeownid_desc, 
       g_prfe_m.prfeowndp_desc,g_prfe_m.prfecrtid_desc,g_prfe_m.prfecrtdp_desc,g_prfe_m.prfemodid_desc, 
       g_prfe_m.prfecnfid_desc
   CALL aprt502_show()
   
END FUNCTION
]]>
</section>
  <section id="aprt502.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt502_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt502_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aprt502.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt502_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prff_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prff_t 
         SET (prffdocno,
              prff001,prff002,prff003
              ,prffacti,prffsite,prffunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_prff_d[g_detail_idx].prffacti,g_prff_d[g_detail_idx].prffsite,g_prff_d[g_detail_idx].prffunit)  

         WHERE prffent = g_enterprise AND prffdocno = ps_keys_bak[1] AND prff001 = ps_keys_bak[2] AND prff002 = ps_keys_bak[3] AND prff003 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prff_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prff_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>