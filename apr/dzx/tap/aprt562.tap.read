<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprt562" std_prog="aprt562" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.aprt562_prcisite_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##display prcisite
PRIVATE FUNCTION aprt562_prcisite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prcisite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prci_m.prcisite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prci_m.prcisite_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prci003_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prci003
PRIVATE FUNCTION aprt562_prci003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prci003
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prci_m.prci003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prci_m.prci003_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prci004_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prci004
PRIVATE FUNCTION aprt562_prci004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prci004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prci_m.prci004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prci_m.prci004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_create_prci004" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prci004
PRIVATE FUNCTION aprt562_create_prci004()
   SELECT ooag003 INTO g_prci_m.prci004 
     FROM ooag_t
    WHERE ooagent = g_enterprise AND ooag001 = g_prci_m.prci003
   DISPLAY BY NAME g_prci_m.prci004  
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prci002_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prci002
PRIVATE FUNCTION aprt562_prci002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prci002
   CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prci_m.prci002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prci_m.prci002_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prci001_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prci001
PRIVATE FUNCTION aprt562_prci001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prci001
   CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prci_m.prci001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prci_m.prci001_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_create_prci002" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prci002
PRIVATE FUNCTION aprt562_create_prci002()
   IF NOT cl_null(g_prci_m.prci001) THEN
      SELECT prcf002 INTO g_prci_m.prci002
        FROM prcf_t
       WHERE prcfent = g_enterprise AND prcf001 = g_prci_m.prci001 
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt562_ins_prcj" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#insert into prcj_t
PRIVATE FUNCTION aprt562_ins_prcj()
   DEFINE l_sql  STRING
   DEFINE l_prcj RECORD LIKE prcj_t.*
   DEFINE l_cnt  LIKE prcj_t.prcjseq
   LET g_errno = NULL
#   LET l_sql = " INSERT INTO prcj_t(prcjent,prcjunit,prcjsite,prcjdocno,prcjseq,prcj001,prcj002,prcj003,",
#               "       prcj004,prcj005,prcj006,prcj007,prcj008,prcj009,prcj010,prcj011,",
#               "       prcj012,prcj013,prcj014) ",
   LET l_sql = " SELECT ",g_enterprise,",'",g_prci_m.prciunit,"','",g_prci_m.prcisite,"','",g_prci_m.prcidocno,"',prchdocno,prchseq,prch001,",
               "        prch002,prch003,prch004,prch005,prch006,prch007,prch008,prch008,",
               "        prch010,prch011,prch012 ",
               "   FROM prcg_t,prch_t",
               "  WHERE prchent = prcgent AND prchdocno=prcgdocno AND prcg001 = '",g_prci_m.prci001,"'",
               "    AND prch013 = '1' AND prcgstus='Y' AND prchent = ",g_enterprise,
               "    AND prcgsite IN (SELECT ooed004 FROM aprt562_tmp) ORDER BY prchdocno,prchseq "              
   PREPARE l_sql_prcj_pre FROM l_sql
   DECLARE l_sql_prcj_cs CURSOR FOR l_sql_prcj_pre
#   EXECUTE l_sql_prcj_pre
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
   LET l_cnt = 1
   FOREACH l_sql_prcj_cs INTO l_prcj.prcjent,l_prcj.prcjunit,l_prcj.prcjsite,l_prcj.prcjdocno,l_prcj.prcj001,l_prcj.prcj002,l_prcj.prcj003,
           l_prcj.prcj004,l_prcj.prcj005,l_prcj.prcj006,l_prcj.prcj007,l_prcj.prcj008,l_prcj.prcj009,l_prcj.prcj010,l_prcj.prcj011,
           l_prcj.prcj012,l_prcj.prcj013,l_prcj.prcj014
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF
      LET l_prcj.prcjseq = l_cnt
      INSERT INTO prcj_t(prcjent,prcjunit,prcjsite,prcjdocno,prcjseq,prcj001,prcj002,prcj003,
                      prcj004,prcj005,prcj006,prcj007,prcj008,prcj009,prcj010,prcj011,
                      prcj012,prcj013,prcj014)
       VALUES (l_prcj.prcjent,l_prcj.prcjunit,l_prcj.prcjsite,l_prcj.prcjdocno,l_prcj.prcjseq,l_prcj.prcj001,l_prcj.prcj002,l_prcj.prcj003,
           l_prcj.prcj004,l_prcj.prcj005,l_prcj.prcj006,l_prcj.prcj007,l_prcj.prcj008,l_prcj.prcj009,l_prcj.prcj010,l_prcj.prcj011,
           l_prcj.prcj012,l_prcj.prcj013,l_prcj.prcj014) 
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF
      LET l_cnt = l_cnt+1
      INITIALIZE l_prcj.* TO NULL      
   END FOREACH        
   UPDATE prch_t SET prch013='2' 
    WHERE prch013='1' AND prchent = g_enterprise
      AND prchdocno IN ( SELECT prcgdocno 
                          FROM prcg_t 
                         WHERE prcg001=g_prci_m.prci001 
                           AND prcgstus='Y' 
                           AND prcgent = g_enterprise
                           AND prcgsite IN (SELECT ooed004 FROM aprt562_tmp)) 
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF      
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcidocno_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcidocno
PRIVATE FUNCTION aprt562_prcidocno_ref(p_cmd)
   DEFINE  l_ooba002   LIKE ooba_t.ooba002
   DEFINE  p_cmd       LIKE type_t.chr1
   DEFINE  l_success   LIKE type_t.num5
   
   IF p_cmd='a' THEN
      SELECT oobxl003 INTO g_prci_m.prcidocno_desc
        FROM oobxl_t
       WHERE oobxlent = g_enterprise
         AND oobxl001 = g_prci_m.prcidocno  AND oobxl002=g_dlang     
   ELSE
      CALL s_aooi200_get_slip(g_prci_m.prcidocno) RETURNING l_success,l_ooba002
      IF l_success=false THEN
      ELSE
         SELECT oobxl003 INTO g_prci_m.prcidocno_desc
           FROM oobxl_t
          WHERE oobxlent = g_enterprise
            AND oobxl001 = l_ooba002 AND oobxl002=g_dlang
      END IF
   END IF
   DISPLAY BY NAME g_prci_m.prcidocno_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_create_prcjseq" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prcjseq
PRIVATE FUNCTION aprt562_create_prcjseq()
   SELECT max(prcjseq)+1 INTO g_prcj_d[l_ac].prcjseq
     FROM prcj_t
    WHERE prcjent = g_enterprise AND prcjdocno = g_prci_m.prcidocno
   IF cl_null(g_prcj_d[l_ac].prcjseq) THEN
      LET g_prcj_d[l_ac].prcjseq = 1
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt562_null_prcj002" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##null prcj004.....
PRIVATE FUNCTION aprt562_null_prcj002()
   LET g_prcj_d[l_ac].prcj004 = NULL
   LET g_prcj_d[l_ac].prcj004_desc = NULL
   LET g_prcj_d[l_ac].prcj005 = NULL
   LET g_prcj_d[l_ac].prcj005_desc = NULL
   LET g_prcj_d[l_ac].prcj006 = NULL
   LET g_prcj_d[l_ac].prcj006_desc = NULL
   LET g_prcj_d[l_ac].prcj007 = NULL
   LET g_prcj_d[l_ac].prcj007_desc = NULL
   LET g_prcj_d[l_ac].prcj008 = NULL
   LET g_prcj_d[l_ac].prcj008_desc = NULL
   LET g_prcj_d[l_ac].prcj009 = NULL
   LET g_prcj_d[l_ac].prcj009_desc = NULL
   LET g_prcj_d[l_ac].prcj010 = NULL
   LET g_prcj_d[l_ac].prcj012 = NULL
   LET g_prcj_d[l_ac].prcj013 = NULL
   LET g_prcj_d[l_ac].prcj014 = NULL
   DISPLAY g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj004_desc,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj005_desc,g_prcj_d[l_ac].prcj006,
           g_prcj_d[l_ac].prcj006_desc,g_prcj_d[l_ac].prcj007,g_prcj_d[l_ac].prcj007_desc,g_prcj_d[l_ac].prcj008,g_prcj_d[l_ac].prcj008_desc,
           g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj009_desc,g_prcj_d[l_ac].prcj010,g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014
        TO s_detail1[l_ac].prcj004,s_detail1[l_ac].prcj004_desc,s_detail1[l_ac].prcj005,s_detail1[l_ac].prcj005_desc,s_detail1[l_ac].prcj006,
           s_detail1[l_ac].prcj006_desc,s_detail1[l_ac].prcj007,s_detail1[l_ac].prcj007_desc,s_detail1[l_ac].prcj008,s_detail1[l_ac].prcj008_desc,
           s_detail1[l_ac].prcj009,s_detail1[l_ac].prcj009_desc,s_detail1[l_ac].prcj010,s_detail1[l_ac].prcj012,s_detail1[l_ac].prcj013,s_detail1[l_ac].prcj014           
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj002_ref" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj004,prcj005....
PRIVATE FUNCTION aprt562_prcj002_ref()
   SELECT prch002,prch003,prch004,prch005,prch006,prch007,prch008,prch010,prch011,prch012
     INTO g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj006,g_prcj_d[l_ac].prcj007,g_prcj_d[l_ac].prcj008,
          g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj010,g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014
     FROM prch_t
    WHERE prchent = g_enterprise AND prchdocno = g_prcj_d[l_ac].prcj001
      AND prchseq = g_prcj_d[l_ac].prcj002
   DISPLAY g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj004_desc,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj005_desc,g_prcj_d[l_ac].prcj006,
           g_prcj_d[l_ac].prcj006_desc,g_prcj_d[l_ac].prcj007,g_prcj_d[l_ac].prcj007_desc,g_prcj_d[l_ac].prcj008,g_prcj_d[l_ac].prcj008_desc,
           g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj010,g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014
        TO s_detail1[l_ac].prcj004,s_detail1[l_ac].prcj004_desc,s_detail1[l_ac].prcj005,s_detail1[l_ac].prcj005_desc,s_detail1[l_ac].prcj006,
           s_detail1[l_ac].prcj006_desc,s_detail1[l_ac].prcj007,s_detail1[l_ac].prcj007_desc,s_detail1[l_ac].prcj008,s_detail1[l_ac].prcj008_desc,
           s_detail1[l_ac].prcj009,s_detail1[l_ac].prcj010,s_detail1[l_ac].prcj012,s_detail1[l_ac].prcj013,s_detail1[l_ac].prcj014 
   CALL aprt562_prcj004_ref()
   CALL aprt562_prcj005_ref()
   CALL aprt562_prcj006_ref()
   CALL aprt562_prcj007_ref()
   CALL aprt562_prcj008_ref() 
   CALL aprt562_prcj009_ref()   
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj004_ref" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj004
PRIVATE FUNCTION aprt562_prcj004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj004
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj004_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prcj_d[l_ac].prcj004_desc to s_detail1[l_ac].prcj004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj005_ref" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj005
PRIVATE FUNCTION aprt562_prcj005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj005
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj005_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_prcj_d[l_ac].prcj005_desc to s_detail1[l_ac].prcj005_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj006_ref" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj006
PRIVATE FUNCTION aprt562_prcj006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj006
   CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj006_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_prcj_d[l_ac].prcj006_desc to s_detail1[l_ac].prcj006_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj007_ref" order="16" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj007
PRIVATE FUNCTION aprt562_prcj007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj007
   CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj007_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_prcj_d[l_ac].prcj007_desc to s_detail1[l_ac].prcj007_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj008_ref" order="17" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj008
PRIVATE FUNCTION aprt562_prcj008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj008_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prcj_d[l_ac].prcj008_desc to s_detail1[l_ac].prcj008_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prcj009_ref" order="18" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display prcj009
PRIVATE FUNCTION aprt562_prcj009_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prcj_d[l_ac].prcj009
   CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prcj_d[l_ac].prcj009_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prcj_d[l_ac].prcj009_desc to s_detail1[l_ac].prcj009_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt562_create_prcj011" order="19" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create prcj011
PRIVATE FUNCTION aprt562_create_prcj011()
   
   SELECT prch008
     INTO g_prcj_d[l_ac].prcj011
     FROM prch_t
    WHERE prchent = g_enterprise AND prchdocno = g_prcj_d[l_ac].prcj001
      AND prchseq = g_prcj_d[l_ac].prcj002 
   DISPLAY g_prcj_d[l_ac].prcj004 TO s_detail1[l_ac].prcj004   
END FUNCTION]]>
  </point>
  <point name="function.aprt562_chk_prcj001" order="20" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#check prcj001
PRIVATE FUNCTION aprt562_chk_prcj001()
   DEFINE l_cnt LIKE type_t.num5
   LET l_cnt = 0
   LET g_errno  =null
   SELECT count(*) INTO l_cnt FROM prcg_t WHERE prcgent = g_enterprise
      AND prcgdocno = g_prcj_d[l_ac].prcj001 AND prcgsite IN ( SELECT ooed004 FROM aprt562_tmp)
   IF l_cnt<=0 THEN
      LET g_errno = "apr-00288"
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aprt562_prci003_chk" order="21" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk prci003,prci004
PRIVATE FUNCTION aprt562_prci003_chk()
   DEFINE  l_cnt   LIKE type_t.num5
   LET l_cnt = 0
   LET g_errno = NULL
   IF NOT cl_null(g_prci_m.prci003) AND NOT cl_null(g_prci_m.prci004) THEN
      SELECT count(*) INTO l_cnt FROM ooag_t
       WHERE ooagent = g_enterprise AND ooag001 = g_prci_m.prci003
         AND ooag003 = g_prci_m.prci004
      IF l_cnt<=0 THEN
         LET g_errno = "apr-00307"
      END IF      
   END IF
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.prcj001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcgdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj001  #顯示到畫面上
            NEXT FIELD prcj001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prchseq()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj002  #顯示到畫面上
            NEXT FIELD prcj002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1" #客戶性質
            LET g_qryparam.arg2 = "2" #客戶經營類別
            CALL q_pmaa001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj004  #顯示到畫面上
            NEXT FIELD prcj004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_18()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj005  #顯示到畫面上
            NEXT FIELD prcj005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj006  #顯示到畫面上
            NEXT FIELD prcj006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj007  #顯示到畫面上
            NEXT FIELD prcj007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'G'
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj008  #顯示到畫面上
            NEXT FIELD prcj008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.prcj009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcj009  #顯示到畫面上
            NEXT FIELD prcj009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prci001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_prcf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prci001  #顯示到畫面上
            NEXT FIELD prci001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prci002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_prcd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prci002  #顯示到畫面上
            NEXT FIELD prci002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prci003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prci003  #顯示到畫面上
            NEXT FIELD prci003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prci004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prci004  #顯示到畫面上
            NEXT FIELD prci004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcicnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcicnfid  #顯示到畫面上
            NEXT FIELD prcicnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcicrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcicrtdp  #顯示到畫面上
            NEXT FIELD prcicrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcicrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcicrtid  #顯示到畫面上
            NEXT FIELD prcicrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcidocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcidocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcidocno  #顯示到畫面上
            NEXT FIELD prcidocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcimodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcimodid  #顯示到畫面上
            NEXT FIELD prcimodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prciowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prciowndp  #顯示到畫面上
            NEXT FIELD prciowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prciownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prciownid  #顯示到畫面上
            NEXT FIELD prciownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.prcisite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prcisite  #顯示到畫面上
            NEXT FIELD prcisite                     #返回原欄位
    

]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET l_sql = " SELECT prcj001,prcj002 FROM prcj_t WHERE prcjent=",g_enterprise," AND prcjdocno='",g_prci_m.prcidocno,"' "
      PREPARE l_sql_prcj_pre2 FROM l_sql
      DECLARE l_sql_prcj_cs2 CURSOR FOR l_sql_prcj_pre2
      LET l_prcj001 = NULL
      LET l_prcj002 = NULL
      FOREACH l_sql_prcj_cs2 INTO l_prcj001,l_prcj002
         UPDATE prch_t SET prch013='1'
          WHERE prchent = g_enterprise AND prchdocno = l_prcj001 AND prchseq=l_prcj002    
         IF SQLCA.sqlcode THEN
            CALL cl_err("prcj_t",SQLCA.sqlcode,0) 
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         LET l_prcj001 = NULL
         LET l_prcj002 = NULL         
      END FOREACH]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_sql           STRING
   DEFINE  l_prcj001       LIKE prcj_t.prcj001
   DEFINE  l_prcj002       LIKE prcj_t.prcj002]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   IF g_prci_m.prcistus = 'Y' THEN
#      CALL cl_set_act_visible("modify,delete", FALSE)
#   ELSE
#      CALL cl_set_act_visible("modify,delete", TRUE)  
#   END IF
   IF g_prci_m.prcistus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004]]>
  </point>
  <point name="input.a.page1.prcj001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prcj_d[l_ac].prcj001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prcj_d[l_ac].prcj001 != g_prcj_d_t.prcj001 OR g_prcj_d_t.prcj001 IS null)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcj_d[l_ac].prcj001
                  LET g_chkparam.arg2 = g_prci_m.prci001
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prcgdocno") THEN
                     #檢查成功時後續處理 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prcj_d[l_ac].prcj001 = g_prcj_d_t.prcj001
                     NEXT FIELD prcj001
                  END IF
                  CALL aprt562_chk_prcj001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prcj_d[l_ac].prcj001,g_errno,1)
                     LET g_prcj_d[l_ac].prcj001 = g_prcj_d_t.prcj001
                     NEXT FIELD prcj001
                  END IF
                  IF NOT cl_null(g_prcj_d[l_ac].prcj002) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     CALL aprt562_null_prcj002()
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_prcj_d[l_ac].prcj002
                     LET g_chkparam.arg2 = g_prcj_d[l_ac].prcj001
                  
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_prchseq") THEN
                     #檢查成功時後續處理 
                     ELSE
                        #檢查失敗時後續處理
                        LET g_prcj_d[l_ac].prcj001 = g_prcj_d_t.prcj001
                        CALL aprt562_prcj002_ref()
                        NEXT FIELD prcj001
                     END IF
                     CALL aprt562_create_prcj011()
                     CALL aprt562_prcj002_ref()
                  END IF
               END IF

            END IF 

]]>
  </point>
  <point name="input.a.page1.prcj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_prcj_d[l_ac].prcj002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prcj_d[l_ac].prcj002 != g_prcj_d_t.prcj002 OR g_prcj_d_t.prcj002 IS null)) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  CALL aprt562_null_prcj002()
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prcj_d[l_ac].prcj002
                  LET g_chkparam.arg2 = g_prcj_d[l_ac].prcj001
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prchseq") THEN
                  #檢查成功時後續處理 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prcj_d[l_ac].prcj002 = g_prcj_d_t.prcj002
                     CALL aprt562_prcj002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt562_create_prcj011()
                  CALL aprt562_prcj002_ref()
               END IF

            END IF 

]]>
  </point>
  <point name="input.a.page1.prcj004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj004_desc

]]>
  </point>
  <point name="input.a.page1.prcj005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj005
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj005_desc

]]>
  </point>
  <point name="input.a.page1.prcj006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj006
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj006_desc

]]>
  </point>
  <point name="input.a.page1.prcj007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj007
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj007_desc

]]>
  </point>
  <point name="input.a.page1.prcj008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj008
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj008_desc

]]>
  </point>
  <point name="input.a.page1.prcj009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj009
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj009_desc

]]>
  </point>
  <point name="input.a.page1.prcj011" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prcj_d[l_ac].prcj011) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.prcjseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_prci_m.prcidocno IS NOT NULL AND g_prcj_d[g_detail_idx].prcjseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prci_m.prcidocno != g_prcidocno_t OR g_prcj_d[g_detail_idx].prcjseq != g_prcj_d_t.prcjseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prcj_t WHERE "||"prcjent = '" ||g_enterprise|| "' AND "||"prcjdocno = '"||g_prci_m.prcidocno ||"' AND "|| "prcjseq = '"||g_prcj_d[g_detail_idx].prcjseq ||"'",'std-00004',0) THEN 
                     LET g_prcj_d[l_ac].prcjseq = g_prcj_d_t.prcjseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.prci001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prci_m.prci001_desc = NULL
            DISPLAY BY NAME g_prci_m.prci001_desc
            IF NOT cl_null(g_prci_m.prci001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prci001 != g_prci_m_t.prci001 OR g_prci_m_t.prci001 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_prci_m.prci001
                  LET g_chkparam.arg2='2'
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prcf001_1") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prci_m.prci001=g_prci_m_t.prci001
                     CALL aprt562_prci001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt562_create_prci002()
                  CALL aprt562_prci002_ref()
               END IF
            END IF 
            CALL aprt562_prci001_ref()

]]>
  </point>
  <point name="input.a.prci002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prci002
            CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prci002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prci002_desc

]]>
  </point>
  <point name="input.a.prci003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prci_m.prci003_desc = NULL
            DISPLAY BY NAME g_prci_m.prci003_desc
            IF NOT cl_null(g_prci_m.prci003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prci003 != g_prci_m_t.prci003 OR g_prci_m_t.prci003 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_prci_m.prci003
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_prci_m.prci003 = g_prci_m_t.prci003
                     CALL aprt562_prci003_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt562_create_prci004()
                  CALL aprt562_prci004_ref()
               END IF

            END IF 
            CALL aprt562_prci003_ref()

]]>
  </point>
  <point name="input.a.prci004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prci_m.prci004_desc = null
            DISPLAY BY NAME g_prci_m.prci004_desc
            IF NOT cl_null(g_prci_m.prci004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prci004 != g_prci_m_t.prci004 OR g_prci_m_t.prci004 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prci_m.prci004
                  LET g_chkparam.arg2 = g_today
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理 
                  ELSE
                  #檢查失敗時後續處理
                     LET g_prci_m.prci004 = g_prci_m_t.prci004
                     CALL aprt562_prci004_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL aprt562_prci003_chk()
                  IF not cl_null(g_errno) THEN
                     CALL cl_err(g_prci_m.prci004,g_errno,1)
                     LET g_prci_m.prci004 = g_prci_m_t.prci004
                     CALL aprt562_prci004_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt562_prci004_ref()
]]>
  </point>
  <point name="input.a.prcidocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_prci_m.prcidocno_desc = NULL
            DISPLAY BY NAME g_prci_m.prcidocno_desc
            IF  NOT cl_null(g_prci_m.prcidocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prcidocno != g_prcidocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prci_t WHERE "||"prcient = '" ||g_enterprise|| "' AND "||"prcidocno = '"||g_prci_m.prcidocno ||"'",'std-00004',1) THEN 
                     LET g_prci_m.prcidocno = g_prci_m_t.prcidocno
                     CALL aprt562_prcidocno_ref(p_cmd)
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prci_m.prcidocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_prci_m.prcidocno = g_prci_m_t.prcidocno
                     CALL aprt562_prcidocno_ref(p_cmd)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL aprt562_prcidocno_ref(p_cmd) 


]]>
  </point>
  <point name="input.a.prcisite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcisite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prcisite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcisite_desc

]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001=g_site]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
                  UPDATE prch_t SET prch013='1'
                   WHERE prchent = g_enterprise AND prchdocno = g_prcj_d_t.prcj001
                     AND prchseq = g_prcj_d_t.prcj002
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("prcj_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF            ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF g_prcj_d[l_ac].prcj001<>g_prcj_d_t.prcj001 OR g_prcj_d[l_ac].prcj002<>g_prcj_d_t.prcj002 THEN
                  UPDATE prch_t SET prch013='1'
                   WHERE prchent = g_enterprise AND prchdocno = g_prcj_d_t.prcj001
                     AND prchseq = g_prcj_d_t.prcj002
                  IF SQLCA.sqlcode THEN #其他錯誤
                     CALL cl_err("prcj_t",SQLCA.sqlcode,1)
                     LET g_prcj_d[l_ac].* = g_prcj_d_t.*                     
                     CALL s_transaction_end('N','0') 
                     RETURN
                  END IF
                  UPDATE prch_t SET prch013='2'
                   WHERE prchent = g_enterprise AND prchdocno = g_prcj_d[l_ac].prcj001
                     AND prchseq = g_prcj_d[l_ac].prcj002
                  IF SQLCA.sqlcode THEN #其他錯誤
                     CALL cl_err("prcj_t",SQLCA.sqlcode,1)
                     LET g_prcj_d[l_ac].* = g_prcj_d_t.*                     
                     CALL s_transaction_end('N','0') 
                     RETURN
                  END IF                  
               END IF               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_prcj_d[l_ac].prcjsite = g_prci_m.prcisite
            LET g_prcj_d[l_ac].prcjunit = g_prci_m.prciunit
            CALL aprt562_create_prcjseq()]]>
  </point>
  <point name="input.c.page1.prcj001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcj_d[l_ac].prcj001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "prcg001='",g_prci_m.prci001,"' AND prcgsite IN (SELECT ooed004 FROM aprt562_tmp )" #
            
            CALL q_prcgdocno()                                #呼叫開窗

            LET g_prcj_d[l_ac].prcj001 = g_qryparam.return1              

            DISPLAY g_prcj_d[l_ac].prcj001 TO prcj001              #
            
            NEXT FIELD prcj001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prcj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prcj_d[l_ac].prcj002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "prchdocno='",g_prcj_d[l_ac].prcj001,"' "
            
            CALL q_prchseq()                                #呼叫開窗

            LET g_prcj_d[l_ac].prcj002 = g_qryparam.return1              

            DISPLAY g_prcj_d[l_ac].prcj002 TO prcj002              #
            
            NEXT FIELD prcj002                          #返回原欄位

]]>
  </point>
  <point name="input.c.prci001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prci_m.prci001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2" #
#            LET g_qryparam.where = "prcf009<='",g_today,"' AND (prcf010 IS NULL OR prcf010>='",g_today,"' )"
            
            CALL q_prcf001()                                #呼叫開窗

            LET g_prci_m.prci001 = g_qryparam.return1              

            DISPLAY g_prci_m.prci001 TO prci001              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prci001 != g_prci_m_t.prci001 OR g_prci_m_t.prci001 IS NULL )) THEN
               CALL aprt562_create_prci002()
               CALL aprt562_prci002_ref()
            END IF
            CALL aprt562_prci001_ref()
            NEXT FIELD prci001                          #返回原欄位

]]>
  </point>
  <point name="input.c.prci003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prci_m.prci003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001_4()                                #呼叫開窗

            LET g_prci_m.prci003 = g_qryparam.return1              

            DISPLAY g_prci_m.prci003 TO prci003              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prci_m.prci003 != g_prci_m_t.prci003 OR g_prci_m_t.prci003 IS NULL )) THEN
               CALL aprt562_create_prci004()
               CALL aprt562_prci004_ref()
            END IF
            CALL aprt562_prci003_ref()
            NEXT FIELD prci003                          #返回原欄位

]]>
  </point>
  <point name="input.c.prci004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prci_m.prci004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today#

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prci_m.prci004 = g_qryparam.return1              

            DISPLAY g_prci_m.prci004 TO prci004              #
            CALL aprt562_prci004_ref()
            NEXT FIELD prci004                          #返回原欄位

]]>
  </point>
  <point name="input.c.prcidocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prci_m.prcidocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "aprt562" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prci_m.prcidocno = g_qryparam.return1              

            DISPLAY g_prci_m.prcidocno TO prcidocno              #
            CALL aprt562_prcidocno_ref(p_cmd)
            NEXT FIELD prcidocno                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_sql                 STRING]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF p_cmd='a' THEN
                  IF cl_ask_confirm("apr-00282") THEN
                     CALL aprt562_ins_prcj()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err("g_prci_m",g_errno,1)  
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG
                     END IF
                  END IF   
               END IF ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prci_m.prcidocno) THEN
                  CALL s_aooi200_gen_docno(g_prci_m.prcisite,g_prci_m.prcidocno,g_prci_m.prcidocdt,g_prog) 
                  RETURNING  g_success,g_prci_m.prcidocno
                  IF g_success<>'1' THEN
                     CALL cl_err(g_prci_m.prcidocno,"amm-00001",1)
                     LET g_prci_m.prcidocno = g_prci_m_t.prcidocno
                     NEXT FIELD prcidocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prci_t WHERE "||"prcient = '" ||g_enterprise|| "' AND "||"prcidocno = '"||g_prci_m.prcidocno ||"'",'std-00004',1) THEN 
                        LET g_prci_m.prcidocno = g_prci_m_t.prcidocno
                        NEXT FIELD prcidocno
                     END IF    
                                      
                  END IF
               END IF
               CALL cl_set_comp_entry("prcidocno",FALSE)]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aprt562_set_entry(p_cmd)
            CALL aprt562_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DELETE FROM aprt562_tmp
   LET l_sql = " INSERT INTO aprt562_tmp(ooed004) ",
               " SELECT ooed004  FROM ooed_t WHERE  ooed001='2' ",
               "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' OR ooed007 IS null) ",
               "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_prci_m.prcisite,"' AND ooed001='2' ",
               "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' OR ooed007 IS null) ",
               "  CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
               "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' OR ooed007 IS null))",
               "          UNION ",
               "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_prci_m.prcisite,"'))"
   PREPARE l_sql_ooed004_pre FROM l_sql
   EXECUTE l_sql_ooed004_pre
   IF sqlca.sqlcode THEN
      CALL cl_err('',sqlca.sqlcode,1)
      RETURN
   END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_prci_m.prcidocdt = g_today
      LET g_prci_m.prcisite = g_site
      LET g_prci_m.prciunit = g_site
      CALL aprt562_prcisite_ref()
      LET g_prci_m.prci003 = g_user
      CALL aprt562_create_prci004()
      CALL aprt562_prci003_ref()
      CALL aprt562_prci004_ref()
      LET g_prci_m_t.* = g_prci_m.*]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF SQLCA.sqlcode THEN
      ELSE
         UPDATE prch_t SET prch013='2'
          WHERE prchent = g_enterprise AND prchdocno = g_prcj_d[g_detail_idx].prcj001
            AND prchseq = g_prcj_d[g_detail_idx].prcj002
         IF SQLCA.sqlcode THEN
            CALL cl_err("prcj_t",SQLCA.sqlcode,0)
         END IF            
      END IF]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   DROP TEMP TABLE aprt562_tmp
   CREATE TEMP TABLE aprt562_tmp(
    ooed004 LIKE ooed_t.ooed004
    );
      ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_prci_m.prcistus MATCHES "[DR]" THEN 
         LET g_prci_m.prcistus = "N"
      END IF]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prci_m.prcistus MATCHES "[DR]" THEN 
      LET g_prci_m.prcistus = "N"
   END IF
   IF g_prci_m.prcistus<>'N' THEN
      RETURN
   END IF]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_aprt562_conf_chk(g_prci_m.prcidocno,g_prci_m.prcistus) RETURNING l_success
   IF l_success THEN
            
   ELSE
      CALL cl_err(g_prci_m.prcidocno,g_errno,1)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   define l_success   like type_t.num5]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("prci001",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd='u' THEN
      CALL cl_set_comp_entry("prci001",FALSE)
   END IF   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj005
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj006
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj007
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj007_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj008
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj008_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prcj_d[l_ac].prcj009
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prcj_d[l_ac].prcj009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prcj_d[l_ac].prcj009_desc
]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL aprt562_prcidocno_ref('u')
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcisite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prcisite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcisite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prci001
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prci001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prci001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prci002
            CALL ap_ref_array2(g_ref_fields,"SELECT prcdl003 FROM prcdl_t WHERE prcdlent='"||g_enterprise||"' AND prcdl001=? AND prcdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prci002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prci002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prci003
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prci_m.prci003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prci003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prci004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prci004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prci004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prciownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prci_m.prciownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prciownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prciowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prciowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prciowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcicrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prci_m.prcicrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcicrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcicrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prci_m.prcicrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcicrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcimodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prci_m.prcimodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcimodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prci_m.prcicnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prci_m.prcicnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prci_m.prcicnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT prcistus,prcicnfid,prcicnfdt,prcipstid,prcipstdt
     INTO g_prci_m.prcistus,g_prci_m.prcicnfid,g_prci_m.prcicnfdt
     FROM prci_t
    WHERE prcient = g_enterprise AND prcidocno = g_prci_m.prcidocno
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prci_m.prcicnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prci_m.prcicnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prci_m.prcicnfid_desc
      
   IF g_prci_m.prcistus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF
   ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   SELECT prcistus INTO  g_prci_m.prcistus FROM prci_t WHERE prcidocno = g_prci_m.prcidocno
      AND prcient = g_enterprise
   CASE 
      WHEN lc_state = 'Y' AND g_prci_m.prcistus = 'N'            
         CALL s_aprt562_conf_chk(g_prci_m.prcidocno,g_prci_m.prcistus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt562_conf_upd(g_prci_m.prcidocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')               
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            RETURN            
         END IF
                
      WHEN lc_state = 'N' AND g_prci_m.prcistus = 'Y' 
         SELECT prcistus INTO  g_prci_m.prcistus FROM prci_t WHERE prcidocno = g_prci_m.prcidocno
            AND prcient = g_enterprise
         CALL s_aprt562_unconf_chk(g_prci_m.prcidocno,g_prci_m.prcistus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt562_unconf_upd(g_prci_m.prcidocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            RETURN    
         END IF
            
      
      OTHERWISE 
         RETURN     
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prci_m.prcistus = 'X' THEN
      RETURN
   END IF
   IF g_prci_m.prcistus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("invalid", FALSE)
#      CALL cl_set_act_visible("unconfirmed,confirmed", true)
#      IF g_prci_m.prcistus = 'N' THEN
#         CALL cl_set_act_visible("confirmed", true)
#         CALL cl_set_act_visible("unconfirmed", FALSE)      
#      END IF
#      IF g_prci_m.prcistus = 'Y' THEN
#         CALL cl_set_act_visible("unconfirmed", TRUE)
#         CALL cl_set_act_visible("confirmed", FALSE)      
#      END IF
#      IF g_prci_m.prcistus = 'X' THEN
#         CALL cl_set_act_visible("unconfirmed,confirmed", FALSE)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prci_m.prcistus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <section id="aprt562.b_fill" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt562_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prcj_d.clear()    #g_prcj_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt562_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prcjseq,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006,prcj007,prcj008, 
          prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit ,t1.pmaal003 ,t2.pmaal003 , 
          t3.dbbcl003 ,t4.oojdl003 ,t5.ooefl003 ,t6.dbbal003 FROM prcj_t",   
                  " INNER JOIN prci_t ON prcidocno = prcjdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=prcj004 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=prcj005 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t3 ON t3.dbbclent='"||g_enterprise||"' AND t3.dbbcl001=prcj006 AND t3.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t4 ON t4.oojdlent='"||g_enterprise||"' AND t4.oojdl001=prcj007 AND t4.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prcj008 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t6 ON t6.dbbalent='"||g_enterprise||"' AND t6.dbbal001=prcj009 AND t6.dbbal002='"||g_dlang||"' ",
 
                  " WHERE prcjent=? AND prcjdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prcj_t.prcjseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt562_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt562_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prci_m.prcidocno
                                               
      FOREACH b_fill_cs INTO g_prcj_d[l_ac].prcjseq,g_prcj_d[l_ac].prcj001,g_prcj_d[l_ac].prcj002,g_prcj_d[l_ac].prcj003, 
          g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj006,g_prcj_d[l_ac].prcj007, 
          g_prcj_d[l_ac].prcj008,g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj010,g_prcj_d[l_ac].prcj011, 
          g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014,g_prcj_d[l_ac].prcjsite, 
          g_prcj_d[l_ac].prcjunit,g_prcj_d[l_ac].prcj004_desc,g_prcj_d[l_ac].prcj005_desc,g_prcj_d[l_ac].prcj006_desc, 
          g_prcj_d[l_ac].prcj007_desc,g_prcj_d[l_ac].prcj008_desc,g_prcj_d[l_ac].prcj009_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prcj_d.deleteElement(g_prcj_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt562_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt562_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt562_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt562_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prci_m.* TO NULL
   CALL g_prcj_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prcidocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prcidocno ",
                      " FROM prci_t ",
                      " ",
                      " LEFT JOIN prcj_t ON prcjent = prcient AND prcidocno = prcjdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE prcient = '" ||g_enterprise|| "' AND prcjent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prci_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prcidocno ",
                      " FROM prci_t ", 
                      "  ",
                      "  ",
                      " WHERE prcient = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prci_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prcisite,'',prcidocdt,prcidocno,prci001,'',prci002,'',prci003,'',prci004,'',prci005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prcistus,prcisite,'',prcidocdt,prcidocno,prci001,'',prci002,'',prci003, 
       '',prci004,'',prci005,t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ",
               " FROM prci_t ",
               "  ",
               "  LEFT JOIN prcj_t ON prcjent = prcient AND prcidocno = prcjdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcisite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prci001 AND t2.prcfl002='"||g_lang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prci002 AND t3.prcdl002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prci003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prci004 AND t5.ooefl002='"||g_lang||"' ",
 
               " WHERE prcient = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prci_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prcisite,g_browser[g_cnt].b_prcisite_desc, 
       g_browser[g_cnt].b_prcidocdt,g_browser[g_cnt].b_prcidocno,g_browser[g_cnt].b_prci001,g_browser[g_cnt].b_prci001_desc, 
       g_browser[g_cnt].b_prci002,g_browser[g_cnt].b_prci002_desc,g_browser[g_cnt].b_prci003,g_browser[g_cnt].b_prci003_desc, 
       g_browser[g_cnt].b_prci004,g_browser[g_cnt].b_prci004_desc,g_browser[g_cnt].b_prci005,g_browser[g_cnt].b_prcisite_desc, 
       g_browser[g_cnt].b_prci001_desc,g_browser[g_cnt].b_prci002_desc,g_browser[g_cnt].b_prci003_desc, 
       g_browser[g_cnt].b_prci004_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt562_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prcidocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt562_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.construct" ver="6" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt562_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prci_m.* TO NULL
   CALL g_prcj_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prcisite,prcidocdt,prcidocno,prcidocno_desc,prci001,prci002,prci005, 
          prci003,prci004,prciunit,prcistus,prciownid,prciowndp,prcicrtid,prcicrtdp,prcicrtdt,prcimodid, 
          prcimoddt,prcicnfid,prcicnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prcicrtdt>>----
         AFTER FIELD prcicrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcimoddt>>----
         AFTER FIELD prcimoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcicnfdt>>----
         AFTER FIELD prcicnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prcipstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prcisite
         ON ACTION controlp INFIELD prcisite
            #add-point:ON ACTION controlp INFIELD prcisite
            {<point name="construct.c.prcisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcisite
            #add-point:BEFORE FIELD prcisite
            {<point name="construct.b.prcisite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcisite
            
            #add-point:AFTER FIELD prcisite
            {<point name="construct.a.prcisite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcidocdt
            #add-point:BEFORE FIELD prcidocdt
            {<point name="construct.b.prcidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcidocdt
            
            #add-point:AFTER FIELD prcidocdt
            {<point name="construct.a.prcidocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcidocdt
         ON ACTION controlp INFIELD prcidocdt
            #add-point:ON ACTION controlp INFIELD prcidocdt
            {<point name="construct.c.prcidocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcidocno
         ON ACTION controlp INFIELD prcidocno
            #add-point:ON ACTION controlp INFIELD prcidocno
            {<point name="construct.c.prcidocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcidocno
            #add-point:BEFORE FIELD prcidocno
            {<point name="construct.b.prcidocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcidocno
            
            #add-point:AFTER FIELD prcidocno
            {<point name="construct.a.prcidocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcidocno_desc
            #add-point:BEFORE FIELD prcidocno_desc
            {<point name="construct.b.prcidocno_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcidocno_desc
            
            #add-point:AFTER FIELD prcidocno_desc
            {<point name="construct.a.prcidocno_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcidocno_desc
         ON ACTION controlp INFIELD prcidocno_desc
            #add-point:ON ACTION controlp INFIELD prcidocno_desc
            {<point name="construct.c.prcidocno_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.prci001
         ON ACTION controlp INFIELD prci001
            #add-point:ON ACTION controlp INFIELD prci001
            {<point name="construct.c.prci001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci001
            #add-point:BEFORE FIELD prci001
            {<point name="construct.b.prci001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci001
            
            #add-point:AFTER FIELD prci001
            {<point name="construct.a.prci001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prci002
         ON ACTION controlp INFIELD prci002
            #add-point:ON ACTION controlp INFIELD prci002
            {<point name="construct.c.prci002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci002
            #add-point:BEFORE FIELD prci002
            {<point name="construct.b.prci002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci002
            
            #add-point:AFTER FIELD prci002
            {<point name="construct.a.prci002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci005
            #add-point:BEFORE FIELD prci005
            {<point name="construct.b.prci005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci005
            
            #add-point:AFTER FIELD prci005
            {<point name="construct.a.prci005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prci005
         ON ACTION controlp INFIELD prci005
            #add-point:ON ACTION controlp INFIELD prci005
            {<point name="construct.c.prci005" />}
            #END add-point
 
         #Ctrlp:construct.c.prci003
         ON ACTION controlp INFIELD prci003
            #add-point:ON ACTION controlp INFIELD prci003
            {<point name="construct.c.prci003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci003
            #add-point:BEFORE FIELD prci003
            {<point name="construct.b.prci003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci003
            
            #add-point:AFTER FIELD prci003
            {<point name="construct.a.prci003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prci004
         ON ACTION controlp INFIELD prci004
            #add-point:ON ACTION controlp INFIELD prci004
            {<point name="construct.c.prci004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci004
            #add-point:BEFORE FIELD prci004
            {<point name="construct.b.prci004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci004
            
            #add-point:AFTER FIELD prci004
            {<point name="construct.a.prci004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prciunit
            #add-point:BEFORE FIELD prciunit
            {<point name="construct.b.prciunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prciunit
            
            #add-point:AFTER FIELD prciunit
            {<point name="construct.a.prciunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prciunit
         ON ACTION controlp INFIELD prciunit
            #add-point:ON ACTION controlp INFIELD prciunit
            {<point name="construct.c.prciunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcistus
            #add-point:BEFORE FIELD prcistus
            {<point name="construct.b.prcistus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcistus
            
            #add-point:AFTER FIELD prcistus
            {<point name="construct.a.prcistus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcistus
         ON ACTION controlp INFIELD prcistus
            #add-point:ON ACTION controlp INFIELD prcistus
            {<point name="construct.c.prcistus" />}
            #END add-point
 
         #Ctrlp:construct.c.prciownid
         ON ACTION controlp INFIELD prciownid
            #add-point:ON ACTION controlp INFIELD prciownid
            {<point name="construct.c.prciownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prciownid
            #add-point:BEFORE FIELD prciownid
            {<point name="construct.b.prciownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prciownid
            
            #add-point:AFTER FIELD prciownid
            {<point name="construct.a.prciownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prciowndp
         ON ACTION controlp INFIELD prciowndp
            #add-point:ON ACTION controlp INFIELD prciowndp
            {<point name="construct.c.prciowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prciowndp
            #add-point:BEFORE FIELD prciowndp
            {<point name="construct.b.prciowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prciowndp
            
            #add-point:AFTER FIELD prciowndp
            {<point name="construct.a.prciowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcicrtid
         ON ACTION controlp INFIELD prcicrtid
            #add-point:ON ACTION controlp INFIELD prcicrtid
            {<point name="construct.c.prcicrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcicrtid
            #add-point:BEFORE FIELD prcicrtid
            {<point name="construct.b.prcicrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcicrtid
            
            #add-point:AFTER FIELD prcicrtid
            {<point name="construct.a.prcicrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prcicrtdp
         ON ACTION controlp INFIELD prcicrtdp
            #add-point:ON ACTION controlp INFIELD prcicrtdp
            {<point name="construct.c.prcicrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcicrtdp
            #add-point:BEFORE FIELD prcicrtdp
            {<point name="construct.b.prcicrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcicrtdp
            
            #add-point:AFTER FIELD prcicrtdp
            {<point name="construct.a.prcicrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcicrtdt
            #add-point:BEFORE FIELD prcicrtdt
            {<point name="construct.b.prcicrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcimodid
         ON ACTION controlp INFIELD prcimodid
            #add-point:ON ACTION controlp INFIELD prcimodid
            {<point name="construct.c.prcimodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcimodid
            #add-point:BEFORE FIELD prcimodid
            {<point name="construct.b.prcimodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcimodid
            
            #add-point:AFTER FIELD prcimodid
            {<point name="construct.a.prcimodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcimoddt
            #add-point:BEFORE FIELD prcimoddt
            {<point name="construct.b.prcimoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prcicnfid
         ON ACTION controlp INFIELD prcicnfid
            #add-point:ON ACTION controlp INFIELD prcicnfid
            {<point name="construct.c.prcicnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcicnfid
            #add-point:BEFORE FIELD prcicnfid
            {<point name="construct.b.prcicnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcicnfid
            
            #add-point:AFTER FIELD prcicnfid
            {<point name="construct.a.prcicnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcicnfdt
            #add-point:BEFORE FIELD prcicnfdt
            {<point name="construct.b.prcicnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prcjseq,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006,prcj007,prcj008, 
          prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit
           FROM s_detail1[1].prcjseq,s_detail1[1].prcj001,s_detail1[1].prcj002,s_detail1[1].prcj003, 
               s_detail1[1].prcj004,s_detail1[1].prcj005,s_detail1[1].prcj006,s_detail1[1].prcj007,s_detail1[1].prcj008, 
               s_detail1[1].prcj009,s_detail1[1].prcj010,s_detail1[1].prcj011,s_detail1[1].prcj012,s_detail1[1].prcj013, 
               s_detail1[1].prcj014,s_detail1[1].prcjsite,s_detail1[1].prcjunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt562_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prcidocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.delete" ver="6" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt562_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
   
   
 
   CALL aprt562_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt562_cl USING g_enterprise,g_prci_m.prcidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt562_cl:", STATUS, 1)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prci_m.prcidocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt562_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prcidocno_t = g_prci_m.prcidocno
 
 
      DELETE FROM prci_t
       WHERE prcient = g_enterprise AND prcidocno = g_prci_m.prcidocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prci_m.prcidocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prcj_t
       WHERE prcjent = g_enterprise AND prcjdocno = g_prci_m.prcidocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcj_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prcj_d.clear() 
 
     
      #CALL aprt562_ui_browser_refresh()  
      CALL aprt562_ui_headershow()  
      CALL aprt562_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt562_browser_fill("")
         CALL aprt562_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt562_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt562_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prci_m.prcidocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aprt562.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt562_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prcj_t
       WHERE prcjent = g_enterprise AND
         prcjdocno = ps_keys_bak[1] AND prcjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.description" ver="54" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000063
#+ 
#+ Filename...: aprt562
#+ Description: 促銷任務量分配作業
#+ Creator....: 02296(2014/05/06)
#+ Modifier...: 02296(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprt562.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt562_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prcj_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt562_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt562_detail AS ",
                "SELECT * FROM prcj_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt562_detail SELECT * FROM prcj_t 
                                         WHERE prcjent = g_enterprise AND prcjdocno = g_prcidocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt562_detail 
      #更新key欄位
      SET prcjdocno = g_prci_m.prcidocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prcj_t SELECT * FROM aprt562_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt562_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prcidocno_t = g_prci_m.prcidocno
 
   
   DROP TABLE aprt562_detail
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt562_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt562_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prci_m.prcidocno = g_browser[g_current_idx].b_prcidocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prci_t",SQLCA.sqlcode,1)
      INITIALIZE g_prci_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt562_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.fill_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt562_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt562_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prcisite,prcidocdt,prcidocno,prci001,prci002,prci003,prci004,prci005
                          FROM s_browse[1].b_prcisite,s_browse[1].b_prcidocdt,s_browse[1].b_prcidocno, 
                              s_browse[1].b_prci001,s_browse[1].b_prci002,s_browse[1].b_prci003,s_browse[1].b_prci004, 
                              s_browse[1].b_prci005
 
         BEFORE CONSTRUCT
               DISPLAY aprt562_filter_parser('prcisite') TO s_browse[1].b_prcisite
            DISPLAY aprt562_filter_parser('prcidocdt') TO s_browse[1].b_prcidocdt
            DISPLAY aprt562_filter_parser('prcidocno') TO s_browse[1].b_prcidocno
            DISPLAY aprt562_filter_parser('prci001') TO s_browse[1].b_prci001
            DISPLAY aprt562_filter_parser('prci002') TO s_browse[1].b_prci002
            DISPLAY aprt562_filter_parser('prci003') TO s_browse[1].b_prci003
            DISPLAY aprt562_filter_parser('prci004') TO s_browse[1].b_prci004
            DISPLAY aprt562_filter_parser('prci005') TO s_browse[1].b_prci005
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt562_filter_show('prcisite')
   CALL aprt562_filter_show('prcidocdt')
   CALL aprt562_filter_show('prcidocno')
   CALL aprt562_filter_show('prci001')
   CALL aprt562_filter_show('prci002')
   CALL aprt562_filter_show('prci003')
   CALL aprt562_filter_show('prci004')
   CALL aprt562_filter_show('prci005')
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt562_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt562_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt562_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prci_m        RECORD
       prcisite LIKE prci_t.prcisite, 
   prcisite_desc LIKE type_t.chr80, 
   prcidocdt LIKE prci_t.prcidocdt, 
   prcidocno LIKE prci_t.prcidocno, 
   prcidocno_desc LIKE type_t.chr80, 
   prci001 LIKE prci_t.prci001, 
   prci001_desc LIKE type_t.chr80, 
   prci002 LIKE prci_t.prci002, 
   prci002_desc LIKE type_t.chr80, 
   prci005 LIKE prci_t.prci005, 
   prci003 LIKE prci_t.prci003, 
   prci003_desc LIKE type_t.chr80, 
   prci004 LIKE prci_t.prci004, 
   prci004_desc LIKE type_t.chr80, 
   prciunit LIKE prci_t.prciunit, 
   prcistus LIKE prci_t.prcistus, 
   prciownid LIKE prci_t.prciownid, 
   prciownid_desc LIKE type_t.chr80, 
   prciowndp LIKE prci_t.prciowndp, 
   prciowndp_desc LIKE type_t.chr80, 
   prcicrtid LIKE prci_t.prcicrtid, 
   prcicrtid_desc LIKE type_t.chr80, 
   prcicrtdp LIKE prci_t.prcicrtdp, 
   prcicrtdp_desc LIKE type_t.chr80, 
   prcicrtdt DATETIME YEAR TO SECOND, 
   prcimodid LIKE prci_t.prcimodid, 
   prcimodid_desc LIKE type_t.chr80, 
   prcimoddt DATETIME YEAR TO SECOND, 
   prcicnfid LIKE prci_t.prcicnfid, 
   prcicnfid_desc LIKE type_t.chr80, 
   prcicnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prcj_d        RECORD
       prcjseq LIKE prcj_t.prcjseq, 
   prcj001 LIKE prcj_t.prcj001, 
   prcj002 LIKE prcj_t.prcj002, 
   prcj003 LIKE prcj_t.prcj003, 
   prcj004 LIKE prcj_t.prcj004, 
   prcj004_desc LIKE type_t.chr500, 
   prcj005 LIKE prcj_t.prcj005, 
   prcj005_desc LIKE type_t.chr500, 
   prcj006 LIKE prcj_t.prcj006, 
   prcj006_desc LIKE type_t.chr500, 
   prcj007 LIKE prcj_t.prcj007, 
   prcj007_desc LIKE type_t.chr500, 
   prcj008 LIKE prcj_t.prcj008, 
   prcj008_desc LIKE type_t.chr500, 
   prcj009 LIKE prcj_t.prcj009, 
   prcj009_desc LIKE type_t.chr500, 
   prcj010 LIKE prcj_t.prcj010, 
   prcj011 LIKE prcj_t.prcj011, 
   prcj012 LIKE prcj_t.prcj012, 
   prcj013 LIKE prcj_t.prcj013, 
   prcj014 LIKE prcj_t.prcj014, 
   prcjsite LIKE prcj_t.prcjsite, 
   prcjunit LIKE prcj_t.prcjunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prci_m          type_g_prci_m
DEFINE g_prci_m_t        type_g_prci_m
 
   DEFINE g_prcidocno_t LIKE prci_t.prcidocno
 
 
DEFINE g_prcj_d          DYNAMIC ARRAY OF type_g_prcj_d
DEFINE g_prcj_d_t        type_g_prcj_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcisite LIKE prci_t.prcisite,
   b_prcisite_desc LIKE type_t.chr80,
      b_prcidocdt LIKE prci_t.prcidocdt,
      b_prcidocno LIKE prci_t.prcidocno,
      b_prci001 LIKE prci_t.prci001,
   b_prci001_desc LIKE type_t.chr80,
      b_prci002 LIKE prci_t.prci002,
   b_prci002_desc LIKE type_t.chr80,
      b_prci003 LIKE prci_t.prci003,
   b_prci003_desc LIKE type_t.chr80,
      b_prci004 LIKE prci_t.prci004,
   b_prci004_desc LIKE type_t.chr80,
      b_prci005 LIKE prci_t.prci005
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prcisite LIKE prci_t.prcisite,
   b_prcisite_desc LIKE type_t.chr80,
      b_prcidocdt LIKE prci_t.prcidocdt,
      b_prcidocno LIKE prci_t.prcidocno,
      b_prci001 LIKE prci_t.prci001,
   b_prci001_desc LIKE type_t.chr80,
      b_prci002 LIKE prci_t.prci002,
   b_prci002_desc LIKE type_t.chr80,
      b_prci003 LIKE prci_t.prci003,
   b_prci003_desc LIKE type_t.chr80,
      b_prci004 LIKE prci_t.prci004,
   b_prci004_desc LIKE type_t.chr80,
      b_prci005 LIKE prci_t.prci005
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprt562.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt562_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prcj_d.getLength() THEN
         LET g_detail_idx = g_prcj_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prcj_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prcj_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt562_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prcistus','13','N,X,Y,A,D,R,W')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt562_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprt562.input" ver="3" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt562_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prcjseq,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006,prcj007,prcj008, 
       prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit FROM prcj_t WHERE prcjent=?  
       AND prcjdocno=? AND prcjseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt562_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt562_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt562_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prci_m.prcisite,g_prci_m.prcidocdt,g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002, 
       g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004,g_prci_m.prciunit,g_prci_m.prcistus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="aprt562.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prcj_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prcj_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt562_b_fill()
            LET g_rec_b = g_prcj_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt562_cl USING g_enterprise,g_prci_m.prcidocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt562_cl:", STATUS, 1)
               CLOSE aprt562_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prcj_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prcj_d[l_ac].prcjseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prcj_d_t.* = g_prcj_d[l_ac].*  #BACKUP
               CALL aprt562_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt562_set_no_entry_b(l_cmd)
               IF NOT aprt562_lock_b("prcj_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt562_bcl INTO g_prcj_d[l_ac].prcjseq,g_prcj_d[l_ac].prcj001,g_prcj_d[l_ac].prcj002, 
                      g_prcj_d[l_ac].prcj003,g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj006, 
                      g_prcj_d[l_ac].prcj007,g_prcj_d[l_ac].prcj008,g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj010, 
                      g_prcj_d[l_ac].prcj011,g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014, 
                      g_prcj_d[l_ac].prcjsite,g_prcj_d[l_ac].prcjunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prcj_d_t.prcjseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt562_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prcj_d[l_ac].* TO NULL 
            
            LET g_prcj_d_t.* = g_prcj_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt562_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt562_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prcj_d[li_reproduce_target].* = g_prcj_d[li_reproduce].*
 
               LET g_prcj_d[li_reproduce_target].prcjseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prcj_t 
             WHERE prcjent = g_enterprise AND prcjdocno = g_prci_m.prcidocno
 
               AND prcjseq = g_prcj_d[l_ac].prcjseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prci_m.prcidocno
               LET gs_keys[2] = g_prcj_d[g_detail_idx].prcjseq
               CALL aprt562_insert_b('prcj_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prcj_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prcj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt562_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prcj_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prcj_d.deleteElement(l_ac)
               NEXT FIELD prcjseq
            END IF
         
            IF g_prcj_d[l_ac].prcjseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prcj_t
                WHERE prcjent = g_enterprise AND prcjdocno = g_prci_m.prcidocno AND
 
                      prcjseq = g_prcj_d_t.prcjseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prcj_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt562_bcl
               LET l_count = g_prcj_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prci_m.prcidocno
               LET gs_keys[2] = g_prcj_d[g_detail_idx].prcjseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt562_delete_b('prcj_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD prcjseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcj_d[l_ac].prcjseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD prcjseq
            END IF
 
 
            #add-point:AFTER FIELD prcjseq
            {<point name="input.a.page1.prcjseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcjseq
            #add-point:BEFORE FIELD prcjseq
            {<point name="input.b.page1.prcjseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcjseq
            #add-point:ON CHANGE prcjseq
            {<point name="input.g.page1.prcjseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj001
            
            #add-point:AFTER FIELD prcj001
            {<point name="input.a.page1.prcj001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj001
            #add-point:BEFORE FIELD prcj001
            {<point name="input.b.page1.prcj001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj001
            #add-point:ON CHANGE prcj001
            {<point name="input.g.page1.prcj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcj_d[l_ac].prcj002,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prcj002
            END IF
 
 
            #add-point:AFTER FIELD prcj002
            {<point name="input.a.page1.prcj002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj002
            #add-point:BEFORE FIELD prcj002
            {<point name="input.b.page1.prcj002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj002
            #add-point:ON CHANGE prcj002
            {<point name="input.g.page1.prcj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj003
            #add-point:BEFORE FIELD prcj003
            {<point name="input.b.page1.prcj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj003
            
            #add-point:AFTER FIELD prcj003
            {<point name="input.a.page1.prcj003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcj003
            #add-point:ON CHANGE prcj003
            {<point name="input.g.page1.prcj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj004
            
            #add-point:AFTER FIELD prcj004
            {<point name="input.a.page1.prcj004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj004
            #add-point:BEFORE FIELD prcj004
            {<point name="input.b.page1.prcj004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj004
            #add-point:ON CHANGE prcj004
            {<point name="input.g.page1.prcj004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj005
            
            #add-point:AFTER FIELD prcj005
            {<point name="input.a.page1.prcj005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj005
            #add-point:BEFORE FIELD prcj005
            {<point name="input.b.page1.prcj005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj005
            #add-point:ON CHANGE prcj005
            {<point name="input.g.page1.prcj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj006
            
            #add-point:AFTER FIELD prcj006
            {<point name="input.a.page1.prcj006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj006
            #add-point:BEFORE FIELD prcj006
            {<point name="input.b.page1.prcj006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj006
            #add-point:ON CHANGE prcj006
            {<point name="input.g.page1.prcj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj007
            
            #add-point:AFTER FIELD prcj007
            {<point name="input.a.page1.prcj007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj007
            #add-point:BEFORE FIELD prcj007
            {<point name="input.b.page1.prcj007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj007
            #add-point:ON CHANGE prcj007
            {<point name="input.g.page1.prcj007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj008
            
            #add-point:AFTER FIELD prcj008
            {<point name="input.a.page1.prcj008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj008
            #add-point:BEFORE FIELD prcj008
            {<point name="input.b.page1.prcj008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj008
            #add-point:ON CHANGE prcj008
            {<point name="input.g.page1.prcj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj009
            
            #add-point:AFTER FIELD prcj009
            {<point name="input.a.page1.prcj009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj009
            #add-point:BEFORE FIELD prcj009
            {<point name="input.b.page1.prcj009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj009
            #add-point:ON CHANGE prcj009
            {<point name="input.g.page1.prcj009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj010
            #add-point:BEFORE FIELD prcj010
            {<point name="input.b.page1.prcj010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj010
            
            #add-point:AFTER FIELD prcj010
            {<point name="input.a.page1.prcj010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcj010
            #add-point:ON CHANGE prcj010
            {<point name="input.g.page1.prcj010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prcj_d[l_ac].prcj011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prcj011
            END IF
 
 
            #add-point:AFTER FIELD prcj011
            {<point name="input.a.page1.prcj011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj011
            #add-point:BEFORE FIELD prcj011
            {<point name="input.b.page1.prcj011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcj011
            #add-point:ON CHANGE prcj011
            {<point name="input.g.page1.prcj011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj012
            #add-point:BEFORE FIELD prcj012
            {<point name="input.b.page1.prcj012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj012
            
            #add-point:AFTER FIELD prcj012
            {<point name="input.a.page1.prcj012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcj012
            #add-point:ON CHANGE prcj012
            {<point name="input.g.page1.prcj012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj013
            #add-point:BEFORE FIELD prcj013
            {<point name="input.b.page1.prcj013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj013
            
            #add-point:AFTER FIELD prcj013
            {<point name="input.a.page1.prcj013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcj013
            #add-point:ON CHANGE prcj013
            {<point name="input.g.page1.prcj013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcj014
            #add-point:BEFORE FIELD prcj014
            {<point name="input.b.page1.prcj014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcj014
            
            #add-point:AFTER FIELD prcj014
            {<point name="input.a.page1.prcj014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcj014
            #add-point:ON CHANGE prcj014
            {<point name="input.g.page1.prcj014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcjsite
            #add-point:BEFORE FIELD prcjsite
            {<point name="input.b.page1.prcjsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcjsite
            
            #add-point:AFTER FIELD prcjsite
            {<point name="input.a.page1.prcjsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcjsite
            #add-point:ON CHANGE prcjsite
            {<point name="input.g.page1.prcjsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcjunit
            #add-point:BEFORE FIELD prcjunit
            {<point name="input.b.page1.prcjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcjunit
            
            #add-point:AFTER FIELD prcjunit
            {<point name="input.a.page1.prcjunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcjunit
            #add-point:ON CHANGE prcjunit
            {<point name="input.g.page1.prcjunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prcjseq
         ON ACTION controlp INFIELD prcjseq
            #add-point:ON ACTION controlp INFIELD prcjseq
            {<point name="input.c.page1.prcjseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj001
         ON ACTION controlp INFIELD prcj001
            #add-point:ON ACTION controlp INFIELD prcj001
            {<point name="input.c.page1.prcj001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj002
         ON ACTION controlp INFIELD prcj002
            #add-point:ON ACTION controlp INFIELD prcj002
            {<point name="input.c.page1.prcj002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj003
         ON ACTION controlp INFIELD prcj003
            #add-point:ON ACTION controlp INFIELD prcj003
            {<point name="input.c.page1.prcj003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj004
         ON ACTION controlp INFIELD prcj004
            #add-point:ON ACTION controlp INFIELD prcj004
            {<point name="input.c.page1.prcj004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj005
         ON ACTION controlp INFIELD prcj005
            #add-point:ON ACTION controlp INFIELD prcj005
            {<point name="input.c.page1.prcj005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj006
         ON ACTION controlp INFIELD prcj006
            #add-point:ON ACTION controlp INFIELD prcj006
            {<point name="input.c.page1.prcj006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj007
         ON ACTION controlp INFIELD prcj007
            #add-point:ON ACTION controlp INFIELD prcj007
            {<point name="input.c.page1.prcj007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj008
         ON ACTION controlp INFIELD prcj008
            #add-point:ON ACTION controlp INFIELD prcj008
            {<point name="input.c.page1.prcj008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj009
         ON ACTION controlp INFIELD prcj009
            #add-point:ON ACTION controlp INFIELD prcj009
            {<point name="input.c.page1.prcj009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj010
         ON ACTION controlp INFIELD prcj010
            #add-point:ON ACTION controlp INFIELD prcj010
            {<point name="input.c.page1.prcj010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj011
         ON ACTION controlp INFIELD prcj011
            #add-point:ON ACTION controlp INFIELD prcj011
            {<point name="input.c.page1.prcj011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj012
         ON ACTION controlp INFIELD prcj012
            #add-point:ON ACTION controlp INFIELD prcj012
            {<point name="input.c.page1.prcj012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj013
         ON ACTION controlp INFIELD prcj013
            #add-point:ON ACTION controlp INFIELD prcj013
            {<point name="input.c.page1.prcj013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcj014
         ON ACTION controlp INFIELD prcj014
            #add-point:ON ACTION controlp INFIELD prcj014
            {<point name="input.c.page1.prcj014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcjsite
         ON ACTION controlp INFIELD prcjsite
            #add-point:ON ACTION controlp INFIELD prcjsite
            {<point name="input.c.page1.prcjsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prcjunit
         ON ACTION controlp INFIELD prcjunit
            #add-point:ON ACTION controlp INFIELD prcjunit
            {<point name="input.c.page1.prcjunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prcj_d[l_ac].* = g_prcj_d_t.*
               CLOSE aprt562_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prcj_d[l_ac].prcjseq,-263,1)
               LET g_prcj_d[l_ac].* = g_prcj_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prcj_t SET (prcjdocno,prcjseq,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006, 
                   prcj007,prcj008,prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit) = (g_prci_m.prcidocno, 
                   g_prcj_d[l_ac].prcjseq,g_prcj_d[l_ac].prcj001,g_prcj_d[l_ac].prcj002,g_prcj_d[l_ac].prcj003, 
                   g_prcj_d[l_ac].prcj004,g_prcj_d[l_ac].prcj005,g_prcj_d[l_ac].prcj006,g_prcj_d[l_ac].prcj007, 
                   g_prcj_d[l_ac].prcj008,g_prcj_d[l_ac].prcj009,g_prcj_d[l_ac].prcj010,g_prcj_d[l_ac].prcj011, 
                   g_prcj_d[l_ac].prcj012,g_prcj_d[l_ac].prcj013,g_prcj_d[l_ac].prcj014,g_prcj_d[l_ac].prcjsite, 
                   g_prcj_d[l_ac].prcjunit)
                WHERE prcjent = g_enterprise AND prcjdocno = g_prci_m.prcidocno 
 
                  AND prcjseq = g_prcj_d_t.prcjseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prcj_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prcj_d[l_ac].* = g_prcj_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prcj_t",SQLCA.sqlcode,1)
                     LET g_prcj_d[l_ac].* = g_prcj_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prci_m.prcidocno
               LET gs_keys_bak[1] = g_prcidocno_t
               LET gs_keys[2] = g_prcj_d[g_detail_idx].prcjseq
               LET gs_keys_bak[2] = g_prcj_d_t.prcjseq
               CALL aprt562_update_b('prcj_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prci_m),util.JSON.stringify(g_prcj_d_t)
               LET g_log2 = util.JSON.stringify(g_prci_m),util.JSON.stringify(g_prcj_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt562_unlock_b("prcj_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prcj_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prcj_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="aprt562.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prci_m.prcisite,g_prci_m.prcidocdt,g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002, 
          g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004,g_prci_m.prciunit,g_prci_m.prcistus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prcisite
            
            #add-point:AFTER FIELD prcisite
            {<point name="input.a.prcisite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcisite
            #add-point:BEFORE FIELD prcisite
            {<point name="input.b.prcisite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcisite
            #add-point:ON CHANGE prcisite
            {<point name="input.g.prcisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcidocdt
            #add-point:BEFORE FIELD prcidocdt
            {<point name="input.b.prcidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcidocdt
            
            #add-point:AFTER FIELD prcidocdt
            {<point name="input.a.prcidocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcidocdt
            #add-point:ON CHANGE prcidocdt
            {<point name="input.g.prcidocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcidocno
            
            #add-point:AFTER FIELD prcidocno
            {<point name="input.a.prcidocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcidocno
            #add-point:BEFORE FIELD prcidocno
            {<point name="input.b.prcidocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prcidocno
            #add-point:ON CHANGE prcidocno
            {<point name="input.g.prcidocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci001
            
            #add-point:AFTER FIELD prci001
            {<point name="input.a.prci001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci001
            #add-point:BEFORE FIELD prci001
            {<point name="input.b.prci001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prci001
            #add-point:ON CHANGE prci001
            {<point name="input.g.prci001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci002
            
            #add-point:AFTER FIELD prci002
            {<point name="input.a.prci002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci002
            #add-point:BEFORE FIELD prci002
            {<point name="input.b.prci002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prci002
            #add-point:ON CHANGE prci002
            {<point name="input.g.prci002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci005
            #add-point:BEFORE FIELD prci005
            {<point name="input.b.prci005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci005
            
            #add-point:AFTER FIELD prci005
            {<point name="input.a.prci005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prci005
            #add-point:ON CHANGE prci005
            {<point name="input.g.prci005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci003
            
            #add-point:AFTER FIELD prci003
            {<point name="input.a.prci003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci003
            #add-point:BEFORE FIELD prci003
            {<point name="input.b.prci003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prci003
            #add-point:ON CHANGE prci003
            {<point name="input.g.prci003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prci004
            
            #add-point:AFTER FIELD prci004
            {<point name="input.a.prci004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prci004
            #add-point:BEFORE FIELD prci004
            {<point name="input.b.prci004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prci004
            #add-point:ON CHANGE prci004
            {<point name="input.g.prci004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prciunit
            #add-point:BEFORE FIELD prciunit
            {<point name="input.b.prciunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prciunit
            
            #add-point:AFTER FIELD prciunit
            {<point name="input.a.prciunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prciunit
            #add-point:ON CHANGE prciunit
            {<point name="input.g.prciunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prcistus
            #add-point:BEFORE FIELD prcistus
            {<point name="input.b.prcistus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prcistus
            
            #add-point:AFTER FIELD prcistus
            {<point name="input.a.prcistus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prcistus
            #add-point:ON CHANGE prcistus
            {<point name="input.g.prcistus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prcisite
         ON ACTION controlp INFIELD prcisite
            #add-point:ON ACTION controlp INFIELD prcisite
            {<point name="input.c.prcisite" />}
            #END add-point
 
         #Ctrlp:input.c.prcidocdt
         ON ACTION controlp INFIELD prcidocdt
            #add-point:ON ACTION controlp INFIELD prcidocdt
            {<point name="input.c.prcidocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prcidocno
         ON ACTION controlp INFIELD prcidocno
            #add-point:ON ACTION controlp INFIELD prcidocno
            {<point name="input.c.prcidocno" />}
            #END add-point
 
         #Ctrlp:input.c.prci001
         ON ACTION controlp INFIELD prci001
            #add-point:ON ACTION controlp INFIELD prci001
            {<point name="input.c.prci001" />}
            #END add-point
 
         #Ctrlp:input.c.prci002
         ON ACTION controlp INFIELD prci002
            #add-point:ON ACTION controlp INFIELD prci002
            {<point name="input.c.prci002" />}
            #END add-point
 
         #Ctrlp:input.c.prci005
         ON ACTION controlp INFIELD prci005
            #add-point:ON ACTION controlp INFIELD prci005
            {<point name="input.c.prci005" />}
            #END add-point
 
         #Ctrlp:input.c.prci003
         ON ACTION controlp INFIELD prci003
            #add-point:ON ACTION controlp INFIELD prci003
            {<point name="input.c.prci003" />}
            #END add-point
 
         #Ctrlp:input.c.prci004
         ON ACTION controlp INFIELD prci004
            #add-point:ON ACTION controlp INFIELD prci004
            {<point name="input.c.prci004" />}
            #END add-point
 
         #Ctrlp:input.c.prciunit
         ON ACTION controlp INFIELD prciunit
            #add-point:ON ACTION controlp INFIELD prciunit
            {<point name="input.c.prciunit" />}
            #END add-point
 
         #Ctrlp:input.c.prcistus
         ON ACTION controlp INFIELD prcistus
            #add-point:ON ACTION controlp INFIELD prcistus
            {<point name="input.c.prcistus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prci_m.prcidocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prci_t (prcient,prcisite,prcidocdt,prcidocno,prci001,prci002,prci005,prci003, 
                   prci004,prciunit,prcistus,prciownid,prciowndp,prcicrtid,prcicrtdp,prcicrtdt,prcicnfid, 
                   prcicnfdt)
               VALUES (g_enterprise,g_prci_m.prcisite,g_prci_m.prcidocdt,g_prci_m.prcidocno,g_prci_m.prci001, 
                   g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004,g_prci_m.prciunit, 
                   g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid,g_prci_m.prcicrtdp, 
                   g_prci_m.prcicrtdt,g_prci_m.prcicnfid,g_prci_m.prcicnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prci_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt562_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prci_t SET (prcisite,prcidocdt,prcidocno,prci001,prci002,prci005,prci003,prci004, 
                   prciunit,prcistus,prciownid,prciowndp,prcicrtid,prcicrtdp,prcicrtdt,prcicnfid,prcicnfdt) = (g_prci_m.prcisite, 
                   g_prci_m.prcidocdt,g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005, 
                   g_prci_m.prci003,g_prci_m.prci004,g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid, 
                   g_prci_m.prciowndp,g_prci_m.prcicrtid,g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcicnfid, 
                   g_prci_m.prcicnfdt)
                WHERE prcient = g_enterprise AND prcidocno = g_prcidocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prci_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prci_m_t)
               LET g_log2 = util.JSON.stringify(g_prci_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prcidocno_t = g_prci_m.prcidocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="aprt562.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prcidocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prcjseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt562_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prcj_d.clear()   
 
 
   INITIALIZE g_prci_m.* LIKE prci_t.*             #DEFAULT 設定
   
   LET g_prcidocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prci_m.prciownid = g_user
      LET g_prci_m.prciowndp = g_dept
      LET g_prci_m.prcicrtid = g_user
      LET g_prci_m.prcicrtdp = g_dept 
      LET g_prci_m.prcicrtdt = cl_get_current()
      LET g_prci_m.prcimodid = ""
      LET g_prci_m.prcimoddt = ""
      LET g_prci_m.prcistus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prci_m.prcistus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt562_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prci_m.* = g_prci_m_t.*
         CALL aprt562_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prcj_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prcidocno_t = g_prci_m.prcidocno
 
   
   LET g_wc = g_wc,  
              " OR ( prcient = '" ||g_enterprise|| "' AND",
              " prcidocno = '", g_prci_m.prcidocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt562_cl
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt562_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prcj_t
                  (prcjent,
                   prcjdocno,
                   prcjseq
                   ,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006,prcj007,prcj008,prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prcj_d[g_detail_idx].prcj001,g_prcj_d[g_detail_idx].prcj002,g_prcj_d[g_detail_idx].prcj003, 
                       g_prcj_d[g_detail_idx].prcj004,g_prcj_d[g_detail_idx].prcj005,g_prcj_d[g_detail_idx].prcj006, 
                       g_prcj_d[g_detail_idx].prcj007,g_prcj_d[g_detail_idx].prcj008,g_prcj_d[g_detail_idx].prcj009, 
                       g_prcj_d[g_detail_idx].prcj010,g_prcj_d[g_detail_idx].prcj011,g_prcj_d[g_detail_idx].prcj012, 
                       g_prcj_d[g_detail_idx].prcj013,g_prcj_d[g_detail_idx].prcj014,g_prcj_d[g_detail_idx].prcjsite, 
                       g_prcj_d[g_detail_idx].prcjunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prcj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt562_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt562_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prcj_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt562_bcl USING g_enterprise,
                                       g_prci_m.prcidocno,g_prcj_d[g_detail_idx].prcjseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt562_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.main" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prcisite,'',prcidocdt,prcidocno,'',prci001,'',prci002,'',prci005,prci003, 
       '',prci004,'',prciunit,prcistus,prciownid,'',prciowndp,'',prcicrtid,'',prcicrtdp,'',prcicrtdt, 
       prcimodid,'',prcimoddt,prcicnfid,'',prcicnfdt", 
                      " FROM prci_t",
                      " WHERE prcient= ? AND prcidocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt562_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prcisite,prcidocdt,prcidocno,prci001,prci002,prci005,prci003,prci004, 
       prciunit,prcistus,prciownid,prciowndp,prcicrtid,prcicrtdp,prcicrtdt,prcimodid,prcimoddt,prcicnfid, 
       prcicnfdt,t1.ooefl003 ,t2.prcfl003 ,t3.prcdl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 , 
       t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011",
               " FROM prci_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prcisite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent='"||g_enterprise||"' AND t2.prcfl001=prci001 AND t2.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN prcdl_t t3 ON t3.prcdlent='"||g_enterprise||"' AND t3.prcdl001=prci002 AND t3.prcdl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prci003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prci004 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prciownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prciowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prcicrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prcicrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prcimodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=prcicnfid  ",
 
               " WHERE prcient = '" ||g_enterprise|| "' AND prcidocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt562_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt562 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt562_init()   
 
      #進入選單 Menu (="N")
      CALL aprt562_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt562
      
   END IF 
   
   CLOSE aprt562_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aprt562.modify" ver="5" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt562_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
 
   ERROR ""
  
   LET g_prcidocno_t = g_prci_m.prcidocno
 
   CALL s_transaction_begin()
   
   OPEN aprt562_cl USING g_enterprise,g_prci_m.prcidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt562_cl:", STATUS, 1)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prci_m.prcidocno,SQLCA.sqlcode,0)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt562_show()
   WHILE TRUE
      LET g_prcidocno_t = g_prci_m.prcidocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prci_m.prcimodid = g_user 
LET g_prci_m.prcimoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt562_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prci_m.* = g_prci_m_t.*
         CALL aprt562_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prci_t SET (prcimodid,prcimoddt) = (g_prci_m.prcimodid,g_prci_m.prcimoddt)
       WHERE prcient = g_enterprise AND prcidocno = g_prcidocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prci_m.prcidocno != g_prcidocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prcj_t SET prcjdocno = g_prci_m.prcidocno
 
          WHERE prcjent = g_enterprise AND prcjdocno = g_prcidocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prcj_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prcj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prci_m.prcidocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt562_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prci_m.prcidocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aprt562.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprt562.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aprt562.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt562_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prcj_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt562_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt562_browser_fill("")
      CALL aprt562_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt562_filter_show('prcisite')
   CALL aprt562_filter_show('prcidocdt')
   CALL aprt562_filter_show('prcidocno')
   CALL aprt562_filter_show('prci001')
   CALL aprt562_filter_show('prci002')
   CALL aprt562_filter_show('prci003')
   CALL aprt562_filter_show('prci004')
   CALL aprt562_filter_show('prci005')
   CALL aprt562_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt562_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.reproduce" ver="6" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt562_reproduce()
   DEFINE l_newno     LIKE prci_t.prcidocno 
   DEFINE l_oldno     LIKE prci_t.prcidocno 
 
   DEFINE l_master    RECORD LIKE prci_t.*
   DEFINE l_detail    RECORD LIKE prcj_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prcidocno_t = g_prci_m.prcidocno
 
    
   LET g_prci_m.prcidocno = ""
 
    
   CALL aprt562_set_entry('a')
   CALL aprt562_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prci_m.prciownid = g_user
      LET g_prci_m.prciowndp = g_dept
      LET g_prci_m.prcicrtid = g_user
      LET g_prci_m.prcicrtdp = g_dept 
      LET g_prci_m.prcicrtdt = cl_get_current()
      LET g_prci_m.prcimodid = ""
      LET g_prci_m.prcimoddt = ""
      LET g_prci_m.prcistus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt562_input("r")
   
      LET g_prci_m.prcidocno_desc = ''
   DISPLAY BY NAME g_prci_m.prcidocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prcidocno = '", g_prci_m.prcidocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt562_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prcidocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt562_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprt562.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt562_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prcidocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt562_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprt562.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt562_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prci_m.prcidocno
   LET g_pk_array[1].column = 'prcidocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt562.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt562_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prci_m_t.* = g_prci_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt562_b_fill() #單身填充
      CALL aprt562_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prci_m.prciownid_desc = cl_get_username(g_prci_m.prciownid)
      #LET g_prci_m.prciowndp_desc = cl_get_deptname(g_prci_m.prciowndp)
      #LET g_prci_m.prcicrtid_desc = cl_get_username(g_prci_m.prcicrtid)
      #LET g_prci_m.prcicrtdp_desc = cl_get_deptname(g_prci_m.prcicrtdp)
      #LET g_prci_m.prcimodid_desc = cl_get_username(g_prci_m.prcimodid)
      #LET g_prci_m.prcicnfid_desc = cl_get_deptname(g_prci_m.prcicnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt562_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prci_m.prcisite,g_prci_m.prcisite_desc,g_prci_m.prcidocdt,g_prci_m.prcidocno,g_prci_m.prcidocno_desc, 
       g_prci_m.prci001,g_prci_m.prci001_desc,g_prci_m.prci002,g_prci_m.prci002_desc,g_prci_m.prci005, 
       g_prci_m.prci003,g_prci_m.prci003_desc,g_prci_m.prci004,g_prci_m.prci004_desc,g_prci_m.prciunit, 
       g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciownid_desc,g_prci_m.prciowndp,g_prci_m.prciowndp_desc, 
       g_prci_m.prcicrtid,g_prci_m.prcicrtid_desc,g_prci_m.prcicrtdp,g_prci_m.prcicrtdp_desc,g_prci_m.prcicrtdt, 
       g_prci_m.prcimodid,g_prci_m.prcimodid_desc,g_prci_m.prcimoddt,g_prci_m.prcicnfid,g_prci_m.prcicnfid_desc, 
       g_prci_m.prcicnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prci_m.prcistus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prcj_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt562_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.signature" ver="4" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aprt562_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aprt562_cl USING g_enterprise,g_prci_m.prcidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt562_cl:", STATUS, 1)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt562_cl INTO g_prci_m.prcisite,g_prci_m.prcisite_desc,g_prci_m.prcidocdt,g_prci_m.prcidocno, 
       g_prci_m.prcidocno_desc,g_prci_m.prci001,g_prci_m.prci001_desc,g_prci_m.prci002,g_prci_m.prci002_desc, 
       g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci003_desc,g_prci_m.prci004,g_prci_m.prci004_desc, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciownid_desc,g_prci_m.prciowndp, 
       g_prci_m.prciowndp_desc,g_prci_m.prcicrtid,g_prci_m.prcicrtid_desc,g_prci_m.prcicrtdp,g_prci_m.prcicrtdp_desc, 
       g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimodid_desc,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfid_desc,g_prci_m.prcicnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prci_m.prcidocno,SQLCA.sqlcode,0)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aprt562_show()
   CALL aprt562_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prci_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prcj_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aprt562_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt562_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt562_ui_headershow()
   CALL aprt562_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aprt562_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aprt562_cl USING g_enterprise,g_prci_m.prcidocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt562_cl:", STATUS, 1)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt562_cl INTO g_prci_m.prcisite,g_prci_m.prcisite_desc,g_prci_m.prcidocdt,g_prci_m.prcidocno, 
       g_prci_m.prcidocno_desc,g_prci_m.prci001,g_prci_m.prci001_desc,g_prci_m.prci002,g_prci_m.prci002_desc, 
       g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci003_desc,g_prci_m.prci004,g_prci_m.prci004_desc, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciownid_desc,g_prci_m.prciowndp, 
       g_prci_m.prciowndp_desc,g_prci_m.prcicrtid,g_prci_m.prcicrtid_desc,g_prci_m.prcicrtdp,g_prci_m.prcicrtdp_desc, 
       g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimodid_desc,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfid_desc,g_prci_m.prcicnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prci_m.prcidocno,SQLCA.sqlcode,0)
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aprt562_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aprt562_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt562_ui_headershow()  
   CALL aprt562_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aprt562.state_change" ver="5" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt562_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prci_m.prcidocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prci_m.prcistus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt562_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt562_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prci_t SET prcistus = lc_state 
    WHERE prcient = g_enterprise AND prcidocno = g_prci_m.prcidocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_prci_m.prcistus = lc_state
      DISPLAY BY NAME g_prci_m.prcistus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt562.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt562_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prcidocno = g_prci_m.prcidocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt562_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.ui_dialog" ver="5" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt562_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt562_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt562_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prcidocno = g_prcidocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt562_fetch('') # reload data
               LET l_ac = 1
               CALL aprt562_ui_detailshow() #Setting the current row 
      
               CALL aprt562_idx_chk()
               #NEXT FIELD prcjseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prcj_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt562_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt562_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt562_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt562_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt562_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt562_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt562_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt562_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt562_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt562_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt562_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt562_idx_chk()
            
         ON ACTION previous
            CALL aprt562_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt562_idx_chk()
            
         ON ACTION jump
            CALL aprt562_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt562_idx_chk()
            
         ON ACTION next
            CALL aprt562_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt562_idx_chk()
            
         ON ACTION last
            CALL aprt562_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt562_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prcjseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt562_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt562_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt562_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt562_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt562_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt562_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt562_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt562_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prci_m.prcidocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprt562.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt562_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prci_m.prcidocno = g_browser[g_current_idx].b_prcidocno   
 
   EXECUTE aprt562_master_referesh USING g_prci_m.prcidocno INTO g_prci_m.prcisite,g_prci_m.prcidocdt, 
       g_prci_m.prcidocno,g_prci_m.prci001,g_prci_m.prci002,g_prci_m.prci005,g_prci_m.prci003,g_prci_m.prci004, 
       g_prci_m.prciunit,g_prci_m.prcistus,g_prci_m.prciownid,g_prci_m.prciowndp,g_prci_m.prcicrtid, 
       g_prci_m.prcicrtdp,g_prci_m.prcicrtdt,g_prci_m.prcimodid,g_prci_m.prcimoddt,g_prci_m.prcicnfid, 
       g_prci_m.prcicnfdt,g_prci_m.prcisite_desc,g_prci_m.prci001_desc,g_prci_m.prci002_desc,g_prci_m.prci003_desc, 
       g_prci_m.prci004_desc,g_prci_m.prciownid_desc,g_prci_m.prciowndp_desc,g_prci_m.prcicrtid_desc, 
       g_prci_m.prcicrtdp_desc,g_prci_m.prcimodid_desc,g_prci_m.prcicnfid_desc
   CALL aprt562_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt562.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt562_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt562_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt562.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt562_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prcj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prcj_t 
         SET (prcjdocno,
              prcjseq
              ,prcj001,prcj002,prcj003,prcj004,prcj005,prcj006,prcj007,prcj008,prcj009,prcj010,prcj011,prcj012,prcj013,prcj014,prcjsite,prcjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prcj_d[g_detail_idx].prcj001,g_prcj_d[g_detail_idx].prcj002,g_prcj_d[g_detail_idx].prcj003, 
                  g_prcj_d[g_detail_idx].prcj004,g_prcj_d[g_detail_idx].prcj005,g_prcj_d[g_detail_idx].prcj006, 
                  g_prcj_d[g_detail_idx].prcj007,g_prcj_d[g_detail_idx].prcj008,g_prcj_d[g_detail_idx].prcj009, 
                  g_prcj_d[g_detail_idx].prcj010,g_prcj_d[g_detail_idx].prcj011,g_prcj_d[g_detail_idx].prcj012, 
                  g_prcj_d[g_detail_idx].prcj013,g_prcj_d[g_detail_idx].prcj014,g_prcj_d[g_detail_idx].prcjsite, 
                  g_prcj_d[g_detail_idx].prcjunit) 
         WHERE prcjent = g_enterprise AND prcjdocno = ps_keys_bak[1] AND prcjseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prcj_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prcj_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
