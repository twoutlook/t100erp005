<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprp127" std_prog="aprp127" erpver="1.0" module="APR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="global.parameter" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ TYPE type_g_prbn_d   RECORD
   prbn001 LIKE prbn_t.prbn001,
   prbn002 LIKE prbn_t.prbn002,
   prbnsite LIKE prbn_t.prbnsite,
   prbn003 LIKE prbn_t.prbn003,
   prbn004 LIKE prbn_t.prbn004,
   prbn005 LIKE prbn_t.prbn005,
   prbn006 LIKE prbn_t.prbn006,
   prbn007 LIKE prbn_t.prbn007,
   prbn008 LIKE prbn_t.prbn008
      END RECORD
DEFINE g_prbn_d   DYNAMIC ARRAY OF type_g_prbn_d      

DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_detail_idx          LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc("prbl003","6036")]]>
  </point>
  <point name="ui_dialog.more_construct" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CONSTRUCT BY NAME lc_param.wc ON prblunit,prbl001,prbl003
            BEFORE CONSTRUCT
               CALL cl_qbe_init()
		   
            ON ACTION controlp INFIELD prblunit
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "c"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               LET g_qryparam.arg2 = '2'
               CALL q_ooed004_3()                     #呼叫開窗
               DISPLAY g_qryparam.return1 TO prblunit  #顯示到畫面上
               NEXT FIELD prblunit                    #返回原欄位
               
            ON ACTION controlp INFIELD prbl001
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "c"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " prblstus = 'Y' "
               CALL q_prbl001()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO prbl001  #顯示到畫面上
               LET g_qryparam.where = ""
               NEXT FIELD prbl001                     #返回原欄位  
               
         END CONSTRUCT]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_prbn_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
         END DISPLAY]]>
  </point>
  <section id="aprp127.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: aprp127
#+ Description: 電子秤文件導出
#+ Creator....: 03247(2014/03/26)
#+ Modifier...: 03247(2014/03/26)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprp127.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprp127.init" ver="1" status="" src="s">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION aprp127_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprp127.main" ver="1" status="" src="s">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aprp127_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprp127 WITH FORM cl_ap_formpath("apr",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aprp127_init()
 
      #進入選單 Menu (="N")
      CALL aprp127_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aprp127
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="aprp127.other_function" ver="1" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="aprp127.process" ver="1" status="" src="s">
    <![CDATA[#+ 資料處理
PRIVATE FUNCTION aprp127_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aprp127_process_cs CURSOR FROM ls_sql
#  FOREACH aprp127_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm("std-00012") RETURNING li_stus
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
  </section>
  <section id="aprp127.transfer_argv" ver="1" status="" src="s">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aprp127_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="aprp127.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aprp127_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
#saki       CALL cl_qbe_select()
 
         ON ACTION qbe_save
#saki       CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION batch_qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.*  TO NULL
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION CLOSE 
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #交談指令共用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         &include "common_action.4gl"
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = g_prog,TODAY USING "yyyymmdd",CURRENT HOUR TO SECOND 
         LET g_jobid = cl_schedule_trim_colon(g_jobid)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aprp127_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
                 CALL cl_schedule_update_data(g_jobid)
                 LET ls_js = aprp127_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
