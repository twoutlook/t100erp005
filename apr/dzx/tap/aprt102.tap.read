<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aprt102" std_prog="aprt102" erpver="1.0" module="APR" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.page1.imaa009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上

            NEXT FIELD imaa009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imaa105" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa105  #顯示到畫面上

            NEXT FIELD imaa105                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbe001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbe001  #顯示到畫面上

            NEXT FIELD prbe001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbe002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtdx002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbe002  #顯示到畫面上

            NEXT FIELD prbe002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbe014" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2075'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbe014  #顯示到畫面上

            NEXT FIELD prbe014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.prbeunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbeunit  #顯示到畫面上

            NEXT FIELD prbeunit                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prbbdocno_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd001  #顯示到畫面上

            NEXT FIELD prbd001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbd003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd003  #顯示到畫面上

            NEXT FIELD prbd003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbd004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prba002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd004  #顯示到畫面上

            NEXT FIELD prbd004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbd007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd007  #顯示到畫面上

            NEXT FIELD prbd007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdcnfid  #顯示到畫面上

            NEXT FIELD prbdcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdcrtdp  #顯示到畫面上

            NEXT FIELD prbdcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdcrtid  #顯示到畫面上

            NEXT FIELD prbdcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbddocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prbddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbddocno  #顯示到畫面上

            NEXT FIELD prbddocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdmodid  #顯示到畫面上

            NEXT FIELD prbdmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdowndp  #顯示到畫面上

            NEXT FIELD prbdowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdownid  #顯示到畫面上

            NEXT FIELD prbdownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbdunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbdunit  #顯示到畫面上

            NEXT FIELD prbdunit                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1.imaa009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].imaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].imaa009_desc
]]>
  </point>
  <point name="input.a.page1.imaa105" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].imaa105
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].imaa105_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].imaa105_desc
]]>
  </point>
  <point name="input.a.page1.prbe001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbe001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbe_d[l_ac].prbe001
               LET g_chkparam.arg2 = g_prbd_m.prbd003

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtdx001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].prbe001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].prbe001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].prbe001_desc
]]>
  </point>
  <point name="input.a.page1.prbe002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbe002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbe_d[l_ac].prbe002
               LET g_chkparam.arg2 = g_site

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtdx002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page1.prbe007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbe007) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.prbe012" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbe012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.prbe014" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    LET g_prbe_d[l_ac].prbe014_desc = null
            DISPLAY BY NAME g_prbe_d[l_ac].prbe014_desc
            IF NOT cl_null(g_prbe_d[l_ac].prbe014) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbe_d[l_ac].prbe014 != g_prbe_d_t.prbe014 OR g_prbe_d_t.prbe014 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_prbe_d[l_ac].prbe014
  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_2075") THEN
                     #檢查成功時後續處理

                  ELSE
                     #檢查失敗時後續處理
                     LET g_prbe_d[l_ac].prbe014 = g_prbe_d_t.prbe014
                     CALL aprt102_prbe014_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL aprt102_prbe014_ref()
]]>
  </point>
  <point name="input.a.page1.prbeseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbeseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_prbd_m.prbddocno IS NOT NULL AND g_prbe_d[g_detail_idx].prbeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_prbd_m.prbddocno != g_prbddocno_t OR g_prbe_d[g_detail_idx].prbeseq != g_prbe_d_t.prbeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbe_t WHERE "||"prbeent = '" ||g_enterprise|| "' AND "||"prbedocno = '"||g_prbd_m.prbddocno ||"' AND "|| "prbeseq = '"||g_prbe_d[g_detail_idx].prbeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.prbesite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].prbesite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].prbesite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].prbesite_desc
]]>
  </point>
  <point name="input.a.page1.prbeunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbeunit) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbe_d[l_ac].prbeunit

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.prbd003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbd003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbd003_desc
]]>
  </point>
  <point name="input.a.prbd004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbd_m.prbd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbd_m.prbd004
               LET g_chkparam.arg2 = '參數2'

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtea002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbd003
            LET g_ref_fields[2] = g_prbd_m.prbd004
            CALL ap_ref_array2(g_ref_fields,"SELECT prba003 FROM prba_t WHERE prbaent='"||g_enterprise||"' AND prba001=? AND prba002=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbd004_desc
]]>
  </point>
  <point name="input.a.prbd007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    LET g_prbd_m.prbd007_desc = null
            DISPLAY BY NAME g_prbd_m.prbd007_desc
            IF NOT cl_null(g_prbd_m.prbd007) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbd_m.prbd007
   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbd_m.prbd007 = g_prbd_m_t.prbd007
                  CALL aprt102_prbd007_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aprt102_prbd007_ref()
]]>
  </point>
  <point name="input.a.prbddocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a05產生
            IF  NOT cl_null(g_prbd_m.prbddocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbd_m.prbddocno != g_prbddocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbd_t WHERE "||"prbdent = '" ||g_enterprise|| "' AND "||"prbddocno = '"||g_prbd_m.prbddocno ||"'",'std-00004',0) THEN 
                     LET g_prbd_m.prbddocno = g_prbd_m_t.prbddocno
                     NEXT FIELD CURRENT
                  END IF
                  
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_prbd_m.prbddocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_prbd_m.prbddocno = g_prbd_m_t.prbddocno
                     NEXT FIELD prbddocno
                  END IF
                     
               END IF
            END IF
            CALL aprt102_set_entry(p_cmd)
            CALL aprt102_set_no_entry(p_cmd)

]]>
  </point>
  <point name="input.a.prbdunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbd_m.prbdunit) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbd_m.prbdunit

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdunit_desc
]]>
  </point>
  <point name="input.c.page1.imaa009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].imaa009             #給予default值

            #給予arg

            CALL q_rtax001()                                #呼叫開窗

            LET g_prbe_d[l_ac].imaa009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].imaa009 TO imaa009              #顯示到畫面上

            NEXT FIELD imaa009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.imaa105" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].imaa105             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_prbe_d[l_ac].imaa105 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].imaa105 TO imaa105              #顯示到畫面上

            NEXT FIELD imaa105                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbe001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].prbe001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prbd_m.prbdsite #

            CALL q_rtdx001_3()                                #呼叫開窗

            LET g_prbe_d[l_ac].prbe001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].prbe001 TO prbe001              #顯示到畫面上

            NEXT FIELD prbe001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbe002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].prbe002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_prbd_m.prbdsite #

            CALL q_rtdx002()                                #呼叫開窗

            LET g_prbe_d[l_ac].prbe002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].prbe002 TO prbe002              #顯示到畫面上

            NEXT FIELD prbe002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbe014" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].prbe014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2075" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_prbe_d[l_ac].prbe014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].prbe014 TO prbe014              #顯示到畫面上
            CALL aprt102_prbe014_ref()
            NEXT FIELD prbe014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.prbeunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbe_d[l_ac].prbeunit             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_prbe_d[l_ac].prbeunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbe_d[l_ac].prbeunit TO prbeunit              #顯示到畫面上

            NEXT FIELD prbeunit                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbd001             #給予default值
            LET g_qryparam.where = "prbbsite='",g_prbd_m.prbdsite,"' AND prbbdocno not in (select prbd001 from prbd_t where prbdent=",g_enterprise," AND prbdstus='Y')"
            #給予arg

            CALL q_prbbdocno_1()                                #呼叫開窗

            LET g_prbd_m.prbd001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbd001 TO prbd001              #顯示到畫面上

            NEXT FIELD prbd001                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbd003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbd003             #給予default值

            #給予arg

            CALL q_prba001()                                #呼叫開窗

            LET g_prbd_m.prbd003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbd003 TO prbd003              #顯示到畫面上

            NEXT FIELD prbd003                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbd004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbd004             #給予default值

            #給予arg

            CALL q_prba002()                                #呼叫開窗

            LET g_prbd_m.prbd004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbd004 TO prbd004              #顯示到畫面上

            NEXT FIELD prbd004                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbd007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbd007             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_prbd_m.prbd007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbd007 TO prbd007              #顯示到畫面上
            CALL aprt102_prbd007_ref() 
            NEXT FIELD prbd007                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbddocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbddocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "aprt102"#

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_prbd_m.prbddocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbddocno TO prbddocno              #顯示到畫面上

            NEXT FIELD prbddocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbdunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbdunit             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_prbd_m.prbdunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbdunit TO prbdunit              #顯示到畫面上
       
            NEXT FIELD prbdunit                          #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        CALL aprt102_prbe001_ref()

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].prbe014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2075' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].prbe014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].prbe014_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbe_d[l_ac].prbesite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbe_d[l_ac].prbesite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbe_d[l_ac].prbesite_desc
]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdunit_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbd003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbd003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbd003
            LET g_ref_fields[2] = g_prbd_m.prbd004
            CALL ap_ref_array2(g_ref_fields,"SELECT prba003 FROM prba_t WHERE prbaent='"||g_enterprise||"' AND prba001=? AND prba002=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbd004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbd007
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbd007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbd007_desc
            
            CALL aprt102_prbd008_ref()

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_prbd_m.prbdcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_prbd_m.prbdcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_prbd_m.prbdcnfid_desc
]]>
  </point>
  <point name="function.aprt102_prbdunit_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display prbdunit
PRIVATE FUNCTION aprt102_prbdunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbdunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbd_m.prbdunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbd_m.prbdunit_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_chk_prbd001" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#chk prbd001
PRIVATE FUNCTION aprt102_chk_prbd001()
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5 
   DEFINE   l_cnt3      LIKE type_t.num5   
   LET l_cnt=0
   LET l_cnt1=0
   LET g_errno = NULL
   SELECT count(*) INTO l_cnt FROM prbb_t WHERE prbbdocno = g_prbd_m.prbd001
      AND prbbent = g_enterprise AND prbbsite=g_prbd_m.prbdsite
   IF l_cnt<=0 THEN
      LET g_errno = "art-00134"
   ELSE
      SELECT count(*) INTO l_cnt1 FROM prbb_t WHERE prbbdocno = g_prbd_m.prbd001
         AND prbbent = g_enterprise AND prbbsite=g_prbd_m.prbdsite AND prbbstus = 'Y'
      IF l_cnt1<=0 THEN
         LET g_errno="art-00135"
      END IF      
   END IF
   IF cl_null(g_errno) THEN
      SELECT count(*) INTO l_cnt3 FROM prbd_t WHERE prbd001 = g_prbd_m.prbd001
         AND prbdent = g_enterprise AND prbdstus = 'Y' 
      IF l_cnt3 > 0 THEN
         LET g_errno = "art-00136"
      END IF      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd001_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display prbd001
PRIVATE FUNCTION aprt102_prbd001_ref()
   SELECT prbb001,prbb002,prbb003,prbb004,prbb005
     INTO g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd005,g_prbd_m.prbd006
     FROM prbb_t
    WHERE prbbdocno = g_prbd_m.prbd001 AND prbbent = g_enterprise 
   DISPLAY BY NAME  g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd002,g_prbd_m.prbd005,g_prbd_m.prbd006
   CALL aprt102_prbd003_ref()
   CALL aprt102_prbd004_ref()
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd001_null" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#null prbd003,prbd004等
PRIVATE FUNCTION aprt102_prbd001_null()
   LET g_prbd_m.prbd003 = null
   LET g_prbd_m.prbd004 = null
   LET g_prbd_m.prbd002 = null
   LET g_prbd_m.prbd005 = null
   LET g_prbd_m.prbd006 = null
   LET g_prbd_m.prbd003_desc = null
   LET g_prbd_m.prbd004_desc = null
   DISPLAY BY NAME  g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd002,g_prbd_m.prbd005,
                    g_prbd_m.prbd006,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd003_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display prbd003
PRIVATE FUNCTION aprt102_prbd003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbd003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbd_m.prbd003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbd_m.prbd003_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd004_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[##display prbd004
PRIVATE FUNCTION aprt102_prbd004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbd003
   LET g_ref_fields[2] = g_prbd_m.prbd004
   CALL ap_ref_array2(g_ref_fields,"SELECT prba003 FROM prba_t WHERE prbaent='"||g_enterprise||"' AND prba001=? AND prba002=? ","") RETURNING g_rtn_fields
   LET g_prbd_m.prbd004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbd_m.prbd004_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd007_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display prbd007
PRIVATE FUNCTION aprt102_prbd007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbd007
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbd_m.prbd007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbd_m.prbd007_desc
   
   SELECT ooag003 INTO g_prbd_m.prbd008
     FROM ooag_t
    WHERE ooagent= g_enterprise
      AND ooag001= g_prbd_m.prbd007 
   CALL aprt102_prbd008_ref()
END FUNCTION]]>
  </point>
  <point name="function.aprt102_insert_prbe" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#insert prbe_t
PRIVATE FUNCTION aprt102_insert_prbe()
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_prbc001  LIKE prbc_t.prbc001
   DEFINE l_prbc002  LIKE prbc_t.prbc002
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_sql      STRING
   DEFINE l_prbe004  LIKE prbe_t.prbe004
   DEFINE l_prbe005  LIKE prbe_t.prbe005
   DEFINE l_prbe006  LIKE prbe_t.prbe006
   DEFINE l_prbe010  LIKE prbe_t.prbe010
   DEFINE l_prbe007  LIKE prbe_t.prbe007
   
   LET l_success = TRUE
   LET l_cnt = 1 
   LET l_prbc001 = NULL
   LET l_prbc002 = NULL
   let l_prbe007 = 0
   let l_prbe010 = 'N'
   LET l_sql = " SELECT prbc001,prbc002 FROM prbc_t WHERE prbcdocno = '",g_prbd_m.prbd001,"'",
               "    AND prbcent=",g_enterprise
   PREPARE l_sql_prbc_pre FROM l_sql
   DECLARE l_sql_prbe_cs CURSOR WITH HOLD FOR l_sql_prbc_pre
   FOREACH l_sql_prbe_cs INTO l_prbc001,l_prbc002
      IF SQLCA.sqlcode THEN
         CALL cl_err("g_prbd_m",SQLCA.sqlcode,1)
         LET l_success = FALSE
         RETURN l_success
      END IF
      SELECT rtdx016,rtdx034 INTO l_prbe005,l_prbe004 FROM rtdx_t WHERE rtdxent=g_enterprise
         AND rtdx001 = l_prbc001 AND rtdxsite=g_prbd_m.prbd003
      IF cl_null(l_prbe005) THEN
         LET l_prbe005 = 0
      END IF      
      IF cl_null(l_prbe004) THEN
         LET l_prbe004 = 0
      END IF
      IF l_prbe005 > l_prbe007 THEN
         LET l_prbe010 = 'Y'
      END IF
      LET l_prbe006 = (l_prbe005-l_prbe004)/l_prbe005*100
      INSERT INTO prbe_t(prbeent,prbedocno,prbeseq,prbe001,prbe002,prbesite,prbeunit,
                         prbe004,prbe005,prbe006,prbe007,prbe008,prbe010,prbe011,prbe012)
       VALUES (g_enterprise,g_prbd_m.prbddocno,l_cnt,l_prbc001,l_prbc002,g_site,g_site,
                         l_prbe004,l_prbe005,l_prbe006,l_prbe007,'N',l_prbe010,'N',0)
      IF SQLCA.sqlcode THEN
         CALL cl_err("g_prbd_m",SQLCA.sqlcode,1)
         LET l_success = FALSE
         RETURN l_success
      END IF
      LET l_prbc001 = NULL
      LET l_prbc002 = NULL 
      LET l_cnt = l_cnt+1      
   END FOREACH
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbe001_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display 规格，品类
PRIVATE FUNCTION aprt102_prbe001_ref()
   SELECT imaal003,imaal004 INTO g_prbe_d[l_ac].prbe001_desc,g_prbe_d[l_ac].imaal004
     FROM imaal_t WHERE imaal001 = g_prbe_d[l_ac].prbe001
      AND imaal002 = g_dlang
   SELECT imaa009 INTO  g_prbe_d[l_ac].imaa009
     FROM imaa_t WHERE imaa001 = g_prbe_d[l_ac].prbe001
      AND imaaent = g_enterprise 
   SELECT rtdx033 INTO g_prbe_d[l_ac].imaa105
     FROM rtdx_t WHERE rtdx001 = g_prbe_d[l_ac].prbe001
      AND rtdxent = g_enterprise AND rtdxsite = g_prbd_m.prbd003
   IF cl_null( g_prbe_d[l_ac].imaa105) THEN
      SELECT imaa105 INTO  g_prbe_d[l_ac].imaa105
        FROM imaa_t WHERE imaa001 = g_prbe_d[l_ac].prbe001
         AND imaaent = g_enterprise 
   END IF
      
   SELECT rtaxl003 INTO g_prbe_d[l_ac].imaa009_desc
     FROM rtaxl_t
    WHERE rtaxl001 =  g_prbe_d[l_ac].imaa009 AND rtaxlent = g_enterprise
      AND rtaxl002 = g_dlang
   SELECT oocal003 INTO g_prbe_d[l_ac].imaa105_desc
     FROM oocal_t
    WHERE oocal001 = g_prbe_d[l_ac].imaa105 AND oocalent = g_enterprise
      AND oocal002 = g_dlang
   DISPLAY g_prbe_d[l_ac].prbe001_desc,g_prbe_d[l_ac].imaal004,g_prbe_d[l_ac].imaa009,
           g_prbe_d[l_ac].imaa009_desc,g_prbe_d[l_ac].imaa105,g_prbe_d[l_ac].imaa105_desc 
        TO s_detail1[l_ac].prbe001_desc,s_detail1[l_ac].imaal004,s_detail1[l_ac].imaa009,
           s_detail1[l_ac].imaa009_desc,s_detail1[l_ac].imaa105,s_detail1[l_ac].imaa105_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbe014_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display prbe014
PRIVATE FUNCTION aprt102_prbe014_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbe_d[l_ac].prbe014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2075' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbe_d[l_ac].prbe014_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_prbe_d[l_ac].prbe014_desc to s_detail1[l_ac].prbe014_desc
END FUNCTION]]>
  </point>
  <point name="function.aprt102_prbd008_ref" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#chk prbd008
PRIVATE FUNCTION aprt102_prbd008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbd008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_prbd_m.prbd008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_prbd_m.prbd008_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc," AND prbd001= '",g_argv[02],"' "
   END IF]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="construct.a.page1.prbe001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbe014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.page1.prbeunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbddocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.prbdunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbe014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.page1.prbeunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdcnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdcrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbddocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdmoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.b.prbdunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd008  #顯示到畫面上

            NEXT FIELD prbd008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_prbfdocno_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO prbd010  #顯示到畫面上

            NEXT FIELD prbd010                     #返回原欄位            ]]>
  </point>
  <point name="construct.c.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.c.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbd001) THEN
               DISPLAY g_prbd001 TO prbd001
            END IF]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   UPDATE prbe_t  SET prbeunit=g_prbd_m.prbdunit,
                      prbesite=g_prbd_m.prbdsite
    WHERE prbedocno = g_prbd_m.prbddocno 
      AND prbeent = g_enterprise 
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF      ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   IF g_prbd_m.prbdstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_prbd001             LIKE prbd_t.prbd001
DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_flag                LIKE type_t.num5
DEFINE l_cmd                 STRING
DEFINE l_cnt                 LIKE type_t.num5]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_prbd002','6017')   ]]>
  </point>
  <point name="input.a.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF NOT cl_null(g_prbe_d[l_ac].prbe009) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_prbe_d[l_ac].prbe009 != g_prbe_d_t.prbe009 OR g_prbe_d_t.prbe009 IS null)) THEN
                  IF g_prbe_d[l_ac].prbe009< g_today THEN
                     CALL cl_err(g_prbe_d[l_ac].prbe009,"art-00157",1)
                     LET g_prbe_d[l_ac].prbe009 = g_prbe_d_t.prbe009 
                     NEXT FIELD prbe009
                  END IF
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_prbe_d[l_ac].prbe013) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbe_d[l_ac].prbe013 != g_prbe_d_t.prbe013 OR g_prbe_d_t.prbe013 IS NULL )) THEN
                  IF g_prbe_d[l_ac].prbe013 < g_today THEN
                     CALL cl_err(g_prbe_d[l_ac].prbe013,"art-00137",1)
                     LET g_prbe_d[l_ac].prbe013 = g_prbe_d_t.prbe013
                     NEXT FIELD prbe013
                  END IF
                  IF g_prbe_d[l_ac].prbe011='Y' THEN
                     
                      SELECT count(*) INTO l_cnt FROM prbe_t
                      WHERE prbeent=g_enterprise AND prbedocno=g_prbd_m.prbddocno
                        AND prbe011='Y' AND prbeseq<>g_prbe_d_t.prbeseq
                     IF l_cnt>0 THEN
                        LET l_cnt=0                     
                        SELECT count(*) INTO l_cnt FROM prbe_t
                         WHERE prbeent=g_enterprise AND prbedocno=g_prbd_m.prbddocno
                           AND prbe013=g_prbe_d[l_ac].prbe013 AND prbe013 IS NOT NULL
                           AND prbe011='Y' AND prbeseq<>g_prbe_d_t.prbeseq
                        IF l_cnt<=0 THEN                        
                           IF cl_ask_confirm('apr-00057') THEN
                              LET l_type='Y'
                           ELSE
                              LET l_type='N'
                              LET g_prbe_d[l_ac].prbe013 = g_prbe_d_t.prbe013
                              NEXT FIELD prbe013                        
                           END IF
                        END IF
                     END IF                        
                  END IF
               END IF
            END IF
            DISPLAY g_prbe_d[l_ac].prbe013 TO s_detail1[l_ac].prbe013]]>
  </point>
  <point name="input.a.prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    CALL aprt102_prbd001_null()
            IF  NOT cl_null(g_prbd_m.prbd001) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_prbd_m.prbd001 != g_prbd_m_t.prbd001 OR g_prbd_m_t.prbd001 IS NULL )) THEN
                  CALL aprt102_chk_prbd001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_prbd_m.prbd001,g_errno,1)
                     LET g_prbd_m.prbd001 = g_prbd_m_t.prbd001
                     CALL aprt102_prbd001_ref()
                     NEXT FIELD prbd001
                  END IF
                  CALL g_prbe_d.clear()
               END IF
            END IF
            CALL aprt102_prbd001_ref()]]>
  </point>
  <point name="input.a.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        
            IF NOT cl_null(g_prbd_m.prbd008) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_prbd_m.prbd008
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_2") THEN 

               ELSE
                  #檢查失敗時後續處理
                  LET g_prbd_m.prbd008 = g_prbd_m_t.prbd008
                  CALL aprt102_prbd008_ref()
                  NEXT FIELD CURRENT
               END IF
           
            END IF 
            CALL aprt102_prbd008_ref()
]]>
  </point>
  <point name="input.a.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #            IF cl_null(g_prbd_m.prbddocdt) THEN  
#               NEXT FIELD prbddocdt
#            END IF   ]]>
  </point>
  <point name="input.a.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.b.page1.prbe001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbe014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.page1.prbeunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbddocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.prbdunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET g_flag=FALSE
         LET l_type='N']]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF l_type='Y' THEN
                  UPDATE prbe_t SET prbe013=g_prbe_d[l_ac].prbe013
                   WHERE prbeent = g_enterprise AND prbedocno = g_prbd_m.prbddocno
                     AND prbe011 = 'Y'   
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("prbe_t",SQLCA.sqlcode,1)
                     LET g_prbe_d[l_ac].* = g_prbe_d_t.*                     
                     CALL s_transaction_end('N','0')
                     RETURN
                  END IF                    
               END IF               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_type='Y' THEN
               CALL aprt102_show()
            END IF   
            LET l_type='N'            ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                             ]]>
  </point>
  <point name="input.c.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_prbd_m.prbd008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today #

            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_prbd_m.prbd008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_prbd_m.prbd008 TO prbd008              #顯示到畫面上
            CALL aprt102_prbd008_ref()
            NEXT FIELD prbd008                          #返回原欄位

]]>
  </point>
  <point name="input.c.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.c.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_cnt3          LIKE type_t.num5
   DEFINE  l_type          LIKE type_t.chr1]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_site
   LET g_errshow=1   ]]>
  </point>
  <point name="input.g.page1.prbe001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_prbe_d[l_ac].prbe007) THEN
               IF g_prbe_d[l_ac].prbe005>g_prbe_d[l_ac].prbe007 THEN
                  LET g_prbe_d[l_ac].prbe010 = 'Y'
               ELSE
                  LET g_prbe_d[l_ac].prbe010 = 'N'                
                  
               END IF
            END IF
            DISPLAY g_prbe_d[l_ac].prbe010 TO s_detail1[l_ac].prbe010]]>
  </point>
  <point name="input.g.page1.prbe008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    CALL aprt102_set_entry_b(l_cmd)
            call aprt102_set_no_entry_b(l_cmd)
            IF g_prbe_d[l_ac].prbe008='N' THEN
               LET g_prbe_d[l_ac].prbe009 = NULL
            END IF]]>
  </point>
  <point name="input.g.page1.prbe009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.prbe010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    CALL aprt102_set_entry_b(l_cmd)
            CALL aprt102_set_no_entry_b(l_cmd)
            IF g_prbe_d[l_ac].prbe011='N' THEN
               LET g_prbe_d[l_ac].prbe013 = NULL
               LET g_prbe_d[l_ac].prbe012 = 0
               LET l_type='N'
            END IF
            IF g_prbe_d[l_ac].prbe011='Y' THEN
               LET g_prbe_d[l_ac].prbe012 = g_prbe_d[l_ac].prbe007
               SELECT prbe013 INTO g_prbe_d[l_ac].prbe013 
                 FROM prbe_t
                WHERE prbeent=g_enterprise AND prbedocno=g_prbd_m.prbddocno
                  AND prbe013 IS NOT NULL AND rownum=1 ORDER BY prbeseq                
               LET g_prbe_d[l_ac].prbe014 = null
               LET g_prbe_d[l_ac].prbe014_desc = null
               DISPLAY g_prbe_d[l_ac].prbe014,g_prbe_d[l_ac].prbe014_desc
                    TO s_detail1[l_ac].prbe014,s_detail1[l_ac].prbe014_desc
               
            END IF ]]>
  </point>
  <point name="input.g.page1.prbe012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbe014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.page1.prbeunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbddocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbddocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbdsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.prbdunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                   IF NOT cl_null(g_prbd_m.prbd001) THEN
                        IF g_prbd_m.prbd001 <> g_prbd_m_t.prbd001 OR g_prbd_m_t.prbd001 THEN
                           DELETE FROM prbe_t WHERE prbeent = g_enterprise  AND prbedocno = g_prbd_m.prbddocno
                           IF SQLCA.sqlcode THEN
                              CALL cl_err("prbd_t",SQLCA.sqlcode,1)  
                              CALL s_transaction_end('N','0')
                              RETURN
                           ELSE
                              IF NOT cl_null(g_prbd_m.prbd001) THEN
                                 CALL aprt102_insert_prbe() RETURNING l_success
                                 IF l_success=false THEN
                                    CALL s_transaction_end('N','0')
                                    RETURN
                                 ELSE
                                    CALL  g_prbe_d.clear()
                                 END IF
                        
                              END IF
                           END IF
                        END IF
                     END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                SELECT count(*) INTO l_cnt3 FROM prbd_t WHERE prbd001 = g_prbd_m.prbd001
                     AND prbdent = g_enterprise AND prbdstus = 'Y' 
                  IF l_cnt3 > 0 THEN
                     CALL cl_err(g_prbd_m.prbd001,"art-00136",1)
                     NEXT FIELD prbd001
                  END IF
               IF NOT cl_null(g_prbd_m.prbddocno) THEN 
               
                  CALL s_aooi200_gen_docno(g_prbd_m.prbdsite,g_prbd_m.prbddocno,g_prbd_m.prbddocdt,g_prog)
                     RETURNING  g_success,g_prbd_m.prbddocno
                  IF g_success<>'1' THEN
                     call cl_err(g_prbd_m.prbddocno,"amm-00001",1)
                     NEXT FIELD prbddocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM prbd_t WHERE "||"prbdent = '" ||g_enterprise|| "' AND "||"prbddocno = '"||g_prbd_m.prbddocno ||"'",'std-00004',1) THEN
                        let g_prbd_m.prbddocno = g_prbddocno_t
                        NEXT FIELD prbddocno
                     END IF

                  END IF
                  LET g_prbd_m_t.prbddocno = g_prbd_m.prbddocno
                     
               END IF   ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                IF SQLCA.sqlcode THEN
                  ELSE
                     IF NOT cl_null(g_prbd_m.prbd001) THEN
                        CALL aprt102_insert_prbe() RETURNING l_success
                        IF l_success=false THEN
                           CONTINUE DIALOG
                        END IF
                        
                     END IF
                  END IF]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    IF l_cmd_t = 'r' THEN
            ELSE
               CALL aprt102_set_entry(p_cmd)
               CALL aprt102_set_no_entry(p_cmd)            
            END IF
            ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  LET g_prbd_m.prbdunit = g_site
      LET g_prbd_m.prbdsite = g_site
      CALL aprt102_prbdunit_ref()
      LET g_prbd_m.prbddocdt = g_today
      LET g_prbd_m.prbd007 = g_user
      CALL aprt102_prbd007_ref()
       
      LET g_prbd_m_t.* = g_prbd_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_null(g_argv[02]) THEN
      LET g_prbd001 = g_argv[02]
   END IF
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent=g_enterprise AND ooef001=g_site]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.open_Market" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               
               IF NOT cl_null(g_prbd_m.prbd001) THEN
                  LET la_param.prog = 'aprt101'
                  LET la_param.param[1] = g_prbd_m.prbd001
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               ELSE
                  LET l_cmd = "aprt101"
                  CALL cl_cmdrun_wait(l_cmd)
               END IF               ]]>
  </point>
  <point name="menu.open_Prprice" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prbd_m.prbd010) THEN
                  LET la_param.prog = 'aprt113'
                  LET la_param.param[1] = g_prbd_m.prbd010
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               ELSE
                  LET l_cmd = "aprt113"
                  CALL cl_cmdrun_wait(l_cmd)
               END IF               ]]>
  </point>
  <point name="menu.open_aprt101" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               SELECT COUNT(*) INTO l_cnt FROM prbb_t WHERE prbbdocno=g_prbd_m.prbd001
                  AND prbbent = g_enterprise
               IF l_cnt >0 THEN
                  LET l_cmd = "aprt101 "||"'"||g_prbd_m.prbd001||"'"
                  CALL cl_cmdrun_wait(l_cmd)
               ELSE
                  CALL cl_err(g_prbd_m.prbd001,"art-00217",1)
               END IF]]>
  </point>
  <point name="menu.open_aprt113" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               
               IF cl_null(g_prbd_m.prbd010) THEN
                  LET l_cmd = "aprt113 "
                  CALL cl_cmdrun_wait(l_cmd)
               ELSE
                  LET l_cmd = "aprt113 "||"'"||g_prbd_m.prbd010||"' "
                  CALL cl_cmdrun_wait(l_cmd)
               END IF]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.prog_prbd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prbd_m.prbd001) THEN
                  LET la_param.prog = 'aprt101'
                  LET la_param.param[1] = g_prbd_m.prbd001
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               ELSE
                  LET l_cmd = "aprt101"
                  CALL cl_cmdrun_wait(l_cmd)
               END IF]]>
  </point>
  <point name="menu.prog_prbd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_prbd_m.prbd010) THEN
                  LET la_param.prog = 'aprt113'
                  LET la_param.param[1] = g_prbd_m.prbd010
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               ELSE
                  LET l_cmd = "aprt113"
                  CALL cl_cmdrun_wait(l_cmd)
               END IF]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_prbd_m.prbdstus MATCHES "[DR]" THEN 
         LET g_prbd_m.prbdstus = "N"
      END IF      ]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_prbd_m.prbdstus MATCHES "[DR]" THEN 
      LET g_prbd_m.prbdstus = "N"
   END IF
   IF g_prbd_m.prbdstus<>'N' THEN
      RETURN
   END IF   ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_prbd_m.prbdstus = "N"
   LET g_prbd_m.prbdunit = g_site
   LET g_prbd_m.prbdsite = g_site
   CALL aprt102_prbdunit_ref()
   LET g_prbd_m.prbddocdt = g_today
   LET g_prbd_m.prbd007 = g_user
   CALL aprt102_prbd007_ref()]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_aprt102_conf_chk(g_prbd_m.prbddocno,g_prbd_m.prbdstus) RETURNING l_success,g_errno
   IF l_success THEN
            
   ELSE
      CALL cl_err(g_prbd_m.prbddocno,g_errno,1)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE           
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL cl_set_comp_entry("prbddocno,prbddocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CALL cl_set_comp_entry("prbe009",TRUE) 
   CALL cl_set_comp_entry("prbe012,prbe013,prbe014",true)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF g_flag THEN
      CALL cl_set_comp_entry("prbddocno,prbddocdt",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF g_prbe_d[l_ac].prbe008='N' THEN
      CALL cl_set_comp_entry("prbe009",FALSE) 
   END IF
   IF g_prbe_d[l_ac].prbe011='N' THEN
      CALL cl_set_comp_entry("prbe012,prbe013",FALSE)
   ELSE
      CALL cl_set_comp_entry("prbe014",FALSE)   
   END IF]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET l_cnt = g_prbe_d.getLength()
   DISPLAY l_cnt TO FORMONLY.cnt]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DEFINE l_cnt     LIKE type_t.num5]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         SELECT prbdstus,prbdcnfid,prbdcnfdt,prbdmodid,prbdmoddt INTO g_prbd_m.prbdstus,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt,
                                                                g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt  
     FROM prbd_t
    WHERE prbdent = g_enterprise AND prbddocno = g_prbd_m.prbddocno
   DISPLAY BY NAME g_prbd_m.prbdstus,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbdcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbd_m.prbdcnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbd_m.prbdcnfid_desc   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_prbd_m.prbdmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_prbd_m.prbdmodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_prbd_m.prbdmodid_desc
   IF g_prbd_m.prbdstus NOT MATCHES "[DNR]" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", true)    
   END IF]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT prbdstus INTO g_prbd_m.prbdstus FROM prbd_t WHERE prbddocno = g_prbd_m.prbddocno
            AND prbdent = g_enterprise         
         CALL s_aprt102_conf_chk(g_prbd_m.prbddocno,g_prbd_m.prbdstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aprt102_conf_upd(g_prbd_m.prbddocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            CALL cl_err(g_prbd_m.prbddocno,g_errno,1)
            RETURN            
         END IF
                
      WHEN 'N'
         SELECT prbdstus INTO g_prbd_m.prbdstus FROM prbd_t WHERE prbddocno = g_prbd_m.prbddocno
            AND prbdent = g_enterprise 
         CALL s_aprt102_unconf_chk(g_prbd_m.prbddocno,g_prbd_m.prbdstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aprt102_unconf_upd(g_prbd_m.prbddocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_prbd_m.prbddocno,g_errno,1)
            RETURN    
         END IF 
      WHEN 'X'
         SELECT prbdstus INTO g_prbd_m.prbdstus FROM prbd_t WHERE prbddocno = g_prbd_m.prbddocno
            AND prbdent = g_enterprise  
         CALL s_aprt102_void_chk(g_prbd_m.prbddocno,g_prbd_m.prbdstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aprt102_void_upd(g_prbd_m.prbddocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_prbd_m.prbddocno,g_errno,1)
            RETURN    
         END IF        
   END CASE ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF g_prbd_m.prbdstus = 'X' THEN
      RETURN
   END IF
   IF g_prbd_m.prbdstus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#                  CALL cl_set_act_visible("invalid,open,confirmed", true)
#      IF g_prbd_m.prbdstus <> 'N' THEN
#         CALL cl_set_act_visible("open", true)
#      ELSE
#         CALL cl_set_act_visible("open", FALSE)
#         CALL cl_set_act_visible("invalid,confirmed", true)            
#      END IF
#      IF g_prbd_m.prbdstus = 'Y' THEN
#         CALL cl_set_act_visible("open", TRUE)
#         CALL cl_set_act_visible("confirmed,invalid", FALSE)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_prbd_m.prbdstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE
      ]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DEFINE l_success like type_t.num5]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="statechange.verify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <section id="aprt102.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aprt102_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_prbe_d.clear()    #g_prbe_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aprt102_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE prbeseq,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007,prbe008,prbe009, 
          prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003 ,t1.imaal003 ,t2.oocql004 , 
          t3.ooefl003 FROM prbe_t",   
                  " INNER JOIN prbd_t ON prbddocno = prbedocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=prbe001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2075' AND t2.oocql002=prbe014 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=prbesite AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE prbeent=? AND prbedocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY prbe_t.prbeseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aprt102_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aprt102_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_prbd_m.prbddocno
                                               
      FOREACH b_fill_cs INTO g_prbe_d[l_ac].prbeseq,g_prbe_d[l_ac].prbe001,g_prbe_d[l_ac].prbe002,g_prbe_d[l_ac].prbe004, 
          g_prbe_d[l_ac].prbe005,g_prbe_d[l_ac].prbe006,g_prbe_d[l_ac].prbe007,g_prbe_d[l_ac].prbe008, 
          g_prbe_d[l_ac].prbe009,g_prbe_d[l_ac].prbe010,g_prbe_d[l_ac].prbe011,g_prbe_d[l_ac].prbe012, 
          g_prbe_d[l_ac].prbe013,g_prbe_d[l_ac].prbe014,g_prbe_d[l_ac].prbesite,g_prbe_d[l_ac].prbeunit, 
          g_prbe_d[l_ac].prbe003,g_prbe_d[l_ac].prbe001_desc,g_prbe_d[l_ac].prbe014_desc,g_prbe_d[l_ac].prbesite_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_prbe_d.deleteElement(g_prbe_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aprt102_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aprt102_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aprt102_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.browser_fill" ver="14" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aprt102_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prbd_m.* TO NULL
   CALL g_prbe_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "prbddocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE prbddocno ",
                      " FROM prbd_t ",
                      " ",
                      " LEFT JOIN prbe_t ON prbeent = prbdent AND prbddocno = prbedocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE prbdent = '" ||g_enterprise|| "' AND prbeent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("prbd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE prbddocno ",
                      " FROM prbd_t ", 
                      "  ",
                      "  ",
                      " WHERE prbdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("prbd_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照prbdunit,'',prbddocdt,prbddocno,prbd001,prbd002,prbd003,'',prbd004,'',prbd005,prbd006,prbd007,'',prbd008,'',prbd009,prbdsite Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT prbdstus,prbdunit,'',prbddocdt,prbddocno,prbd001,prbd002,prbd003,'', 
       prbd004,'',prbd005,prbd006,prbd007,'',prbd008,'',prbd009,prbdsite,t1.ooefl003 ,t2.ooefl003 ,t3.prba003 , 
       t4.oofa011 ,t5.ooefl003 ",
               " FROM prbd_t ",
               "  ",
               "  LEFT JOIN prbe_t ON prbeent = prbdent AND prbddocno = prbedocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prbdunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=prbd003 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN prba_t t3 ON t3.prbaent='"||g_enterprise||"' AND t3.prba001=prbd003 AND t3.prba002=prbd004  ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prbd007  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prbd008 AND t5.ooefl002='"||g_lang||"' ",
 
               " WHERE prbdent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("prbd_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_prbdunit,g_browser[g_cnt].b_prbdunit_desc, 
       g_browser[g_cnt].b_prbddocdt,g_browser[g_cnt].b_prbddocno,g_browser[g_cnt].b_prbd001,g_browser[g_cnt].b_prbd002, 
       g_browser[g_cnt].b_prbd003,g_browser[g_cnt].b_prbd003_desc,g_browser[g_cnt].b_prbd004,g_browser[g_cnt].b_prbd004_desc, 
       g_browser[g_cnt].b_prbd005,g_browser[g_cnt].b_prbd006,g_browser[g_cnt].b_prbd007,g_browser[g_cnt].b_prbd007_desc, 
       g_browser[g_cnt].b_prbd008,g_browser[g_cnt].b_prbd008_desc,g_browser[g_cnt].b_prbd009,g_browser[g_cnt].b_prbdsite, 
       g_browser[g_cnt].b_prbdunit_desc,g_browser[g_cnt].b_prbd003_desc,g_browser[g_cnt].b_prbd004_desc, 
       g_browser[g_cnt].b_prbd007_desc,g_browser[g_cnt].b_prbd008_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aprt102_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY prbddocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aprt102_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.construct" ver="7" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aprt102_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_prbd_m.* TO NULL
   CALL g_prbe_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON prbdunit,prbddocdt,prbddocno,prbd001,prbdsite,prbd002,prbd003,prbd004, 
          prbd005,prbd006,prbd007,prbd008,prbd009,prbd010,prbdstus,prbdownid,prbdowndp,prbdcrtid,prbdcrtdp, 
          prbdcrtdt,prbdmodid,prbdmoddt,prbdcnfid,prbdcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<prbdcrtdt>>----
         AFTER FIELD prbdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbdmoddt>>----
         AFTER FIELD prbdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbdcnfdt>>----
         AFTER FIELD prbdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<prbdpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.prbdunit
         ON ACTION controlp INFIELD prbdunit
            #add-point:ON ACTION controlp INFIELD prbdunit
            {<point name="construct.c.prbdunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdunit
            #add-point:BEFORE FIELD prbdunit
            {<point name="construct.b.prbdunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdunit
            
            #add-point:AFTER FIELD prbdunit
            {<point name="construct.a.prbdunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbddocdt
            #add-point:BEFORE FIELD prbddocdt
            {<point name="construct.b.prbddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbddocdt
            
            #add-point:AFTER FIELD prbddocdt
            {<point name="construct.a.prbddocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbddocdt
         ON ACTION controlp INFIELD prbddocdt
            #add-point:ON ACTION controlp INFIELD prbddocdt
            {<point name="construct.c.prbddocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbddocno
         ON ACTION controlp INFIELD prbddocno
            #add-point:ON ACTION controlp INFIELD prbddocno
            {<point name="construct.c.prbddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbddocno
            #add-point:BEFORE FIELD prbddocno
            {<point name="construct.b.prbddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbddocno
            
            #add-point:AFTER FIELD prbddocno
            {<point name="construct.a.prbddocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd001
         ON ACTION controlp INFIELD prbd001
            #add-point:ON ACTION controlp INFIELD prbd001
            {<point name="construct.c.prbd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd001
            #add-point:BEFORE FIELD prbd001
            {<point name="construct.b.prbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd001
            
            #add-point:AFTER FIELD prbd001
            {<point name="construct.a.prbd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdsite
            #add-point:BEFORE FIELD prbdsite
            {<point name="construct.b.prbdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdsite
            
            #add-point:AFTER FIELD prbdsite
            {<point name="construct.a.prbdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbdsite
         ON ACTION controlp INFIELD prbdsite
            #add-point:ON ACTION controlp INFIELD prbdsite
            {<point name="construct.c.prbdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd002
            #add-point:BEFORE FIELD prbd002
            {<point name="construct.b.prbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd002
            
            #add-point:AFTER FIELD prbd002
            {<point name="construct.a.prbd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd002
         ON ACTION controlp INFIELD prbd002
            #add-point:ON ACTION controlp INFIELD prbd002
            {<point name="construct.c.prbd002" />}
            #END add-point
 
         #Ctrlp:construct.c.prbd003
         ON ACTION controlp INFIELD prbd003
            #add-point:ON ACTION controlp INFIELD prbd003
            {<point name="construct.c.prbd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd003
            #add-point:BEFORE FIELD prbd003
            {<point name="construct.b.prbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd003
            
            #add-point:AFTER FIELD prbd003
            {<point name="construct.a.prbd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd004
         ON ACTION controlp INFIELD prbd004
            #add-point:ON ACTION controlp INFIELD prbd004
            {<point name="construct.c.prbd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd004
            #add-point:BEFORE FIELD prbd004
            {<point name="construct.b.prbd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd004
            
            #add-point:AFTER FIELD prbd004
            {<point name="construct.a.prbd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd005
            #add-point:BEFORE FIELD prbd005
            {<point name="construct.b.prbd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd005
            
            #add-point:AFTER FIELD prbd005
            {<point name="construct.a.prbd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd005
         ON ACTION controlp INFIELD prbd005
            #add-point:ON ACTION controlp INFIELD prbd005
            {<point name="construct.c.prbd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd006
            #add-point:BEFORE FIELD prbd006
            {<point name="construct.b.prbd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd006
            
            #add-point:AFTER FIELD prbd006
            {<point name="construct.a.prbd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd006
         ON ACTION controlp INFIELD prbd006
            #add-point:ON ACTION controlp INFIELD prbd006
            {<point name="construct.c.prbd006" />}
            #END add-point
 
         #Ctrlp:construct.c.prbd007
         ON ACTION controlp INFIELD prbd007
            #add-point:ON ACTION controlp INFIELD prbd007
            {<point name="construct.c.prbd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd007
            #add-point:BEFORE FIELD prbd007
            {<point name="construct.b.prbd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd007
            
            #add-point:AFTER FIELD prbd007
            {<point name="construct.a.prbd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd008
         ON ACTION controlp INFIELD prbd008
            #add-point:ON ACTION controlp INFIELD prbd008
            {<point name="construct.c.prbd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd008
            #add-point:BEFORE FIELD prbd008
            {<point name="construct.b.prbd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd008
            
            #add-point:AFTER FIELD prbd008
            {<point name="construct.a.prbd008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd009
            #add-point:BEFORE FIELD prbd009
            {<point name="construct.b.prbd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd009
            
            #add-point:AFTER FIELD prbd009
            {<point name="construct.a.prbd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbd009
         ON ACTION controlp INFIELD prbd009
            #add-point:ON ACTION controlp INFIELD prbd009
            {<point name="construct.c.prbd009" />}
            #END add-point
 
         #Ctrlp:construct.c.prbd010
         ON ACTION controlp INFIELD prbd010
            #add-point:ON ACTION controlp INFIELD prbd010
            {<point name="construct.c.prbd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd010
            #add-point:BEFORE FIELD prbd010
            {<point name="construct.b.prbd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd010
            
            #add-point:AFTER FIELD prbd010
            {<point name="construct.a.prbd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdstus
            #add-point:BEFORE FIELD prbdstus
            {<point name="construct.b.prbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdstus
            
            #add-point:AFTER FIELD prbdstus
            {<point name="construct.a.prbdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbdstus
         ON ACTION controlp INFIELD prbdstus
            #add-point:ON ACTION controlp INFIELD prbdstus
            {<point name="construct.c.prbdstus" />}
            #END add-point
 
         #Ctrlp:construct.c.prbdownid
         ON ACTION controlp INFIELD prbdownid
            #add-point:ON ACTION controlp INFIELD prbdownid
            {<point name="construct.c.prbdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdownid
            #add-point:BEFORE FIELD prbdownid
            {<point name="construct.b.prbdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdownid
            
            #add-point:AFTER FIELD prbdownid
            {<point name="construct.a.prbdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbdowndp
         ON ACTION controlp INFIELD prbdowndp
            #add-point:ON ACTION controlp INFIELD prbdowndp
            {<point name="construct.c.prbdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdowndp
            #add-point:BEFORE FIELD prbdowndp
            {<point name="construct.b.prbdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdowndp
            
            #add-point:AFTER FIELD prbdowndp
            {<point name="construct.a.prbdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbdcrtid
         ON ACTION controlp INFIELD prbdcrtid
            #add-point:ON ACTION controlp INFIELD prbdcrtid
            {<point name="construct.c.prbdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdcrtid
            #add-point:BEFORE FIELD prbdcrtid
            {<point name="construct.b.prbdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdcrtid
            
            #add-point:AFTER FIELD prbdcrtid
            {<point name="construct.a.prbdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.prbdcrtdp
         ON ACTION controlp INFIELD prbdcrtdp
            #add-point:ON ACTION controlp INFIELD prbdcrtdp
            {<point name="construct.c.prbdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdcrtdp
            #add-point:BEFORE FIELD prbdcrtdp
            {<point name="construct.b.prbdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdcrtdp
            
            #add-point:AFTER FIELD prbdcrtdp
            {<point name="construct.a.prbdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdcrtdt
            #add-point:BEFORE FIELD prbdcrtdt
            {<point name="construct.b.prbdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbdmodid
         ON ACTION controlp INFIELD prbdmodid
            #add-point:ON ACTION controlp INFIELD prbdmodid
            {<point name="construct.c.prbdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdmodid
            #add-point:BEFORE FIELD prbdmodid
            {<point name="construct.b.prbdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdmodid
            
            #add-point:AFTER FIELD prbdmodid
            {<point name="construct.a.prbdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdmoddt
            #add-point:BEFORE FIELD prbdmoddt
            {<point name="construct.b.prbdmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.prbdcnfid
         ON ACTION controlp INFIELD prbdcnfid
            #add-point:ON ACTION controlp INFIELD prbdcnfid
            {<point name="construct.c.prbdcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdcnfid
            #add-point:BEFORE FIELD prbdcnfid
            {<point name="construct.b.prbdcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdcnfid
            
            #add-point:AFTER FIELD prbdcnfid
            {<point name="construct.a.prbdcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdcnfdt
            #add-point:BEFORE FIELD prbdcnfdt
            {<point name="construct.b.prbdcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON prbeseq,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007,prbe008,prbe009, 
          prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003
           FROM s_detail1[1].prbeseq,s_detail1[1].prbe001,s_detail1[1].prbe002,s_detail1[1].prbe004, 
               s_detail1[1].prbe005,s_detail1[1].prbe006,s_detail1[1].prbe007,s_detail1[1].prbe008,s_detail1[1].prbe009, 
               s_detail1[1].prbe010,s_detail1[1].prbe011,s_detail1[1].prbe012,s_detail1[1].prbe013,s_detail1[1].prbe014, 
               s_detail1[1].prbesite,s_detail1[1].prbeunit,s_detail1[1].prbe003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aprt102_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " prbddocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aprt102_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
   
   
 
   CALL aprt102_show()
   
   CALL s_transaction_begin()
 
   OPEN aprt102_cl USING g_enterprise,g_prbd_m.prbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt102_cl:", STATUS, 1)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbd_m.prbddocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aprt102_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_prbddocno_t = g_prbd_m.prbddocno
 
 
      DELETE FROM prbd_t
       WHERE prbdent = g_enterprise AND prbddocno = g_prbd_m.prbddocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_prbd_m.prbddocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM prbe_t
       WHERE prbeent = g_enterprise AND prbedocno = g_prbd_m.prbddocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("prbe_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_prbe_d.clear() 
 
     
      #CALL aprt102_ui_browser_refresh()  
      CALL aprt102_ui_headershow()  
      CALL aprt102_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aprt102_browser_fill("")
         CALL aprt102_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aprt102_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aprt102_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_prbd_m.prbddocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aprt102.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aprt102_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM prbe_t
       WHERE prbeent = g_enterprise AND
         prbedocno = ps_keys_bak[1] AND prbeseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.description" ver="110" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000116
#+ 
#+ Filename...: aprt102
#+ Description: 市場調查結果維護作業
#+ Creator....: 02296(2014/03/06)
#+ Modifier...: 02296(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aprt102.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aprt102_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE prbe_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aprt102_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aprt102_detail AS ",
                "SELECT * FROM prbe_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aprt102_detail SELECT * FROM prbe_t 
                                         WHERE prbeent = g_enterprise AND prbedocno = g_prbddocno_t
 
   
   #將key修正為調整後   
   UPDATE aprt102_detail 
      #更新key欄位
      SET prbedocno = g_prbd_m.prbddocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO prbe_t SELECT * FROM aprt102_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aprt102_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_prbddocno_t = g_prbd_m.prbddocno
 
   
   DROP TABLE aprt102_detail
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aprt102_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.fetch" ver="6" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aprt102_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_prbd_m.prbddocno = g_browser[g_current_idx].b_prbddocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("prbd_t",SQLCA.sqlcode,1)
      INITIALIZE g_prbd_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aprt102_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aprt102_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.filter" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aprt102_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON prbdunit,prbddocdt,prbddocno,prbd001,prbd002,prbd003,prbd004,prbd005, 
          prbd006,prbd007,prbd008,prbd009,prbdsite
                          FROM s_browse[1].b_prbdunit,s_browse[1].b_prbddocdt,s_browse[1].b_prbddocno, 
                              s_browse[1].b_prbd001,s_browse[1].b_prbd002,s_browse[1].b_prbd003,s_browse[1].b_prbd004, 
                              s_browse[1].b_prbd005,s_browse[1].b_prbd006,s_browse[1].b_prbd007,s_browse[1].b_prbd008, 
                              s_browse[1].b_prbd009,s_browse[1].b_prbdsite
 
         BEFORE CONSTRUCT
               DISPLAY aprt102_filter_parser('prbdunit') TO s_browse[1].b_prbdunit
            DISPLAY aprt102_filter_parser('prbddocdt') TO s_browse[1].b_prbddocdt
            DISPLAY aprt102_filter_parser('prbddocno') TO s_browse[1].b_prbddocno
            DISPLAY aprt102_filter_parser('prbd001') TO s_browse[1].b_prbd001
            DISPLAY aprt102_filter_parser('prbd002') TO s_browse[1].b_prbd002
            DISPLAY aprt102_filter_parser('prbd003') TO s_browse[1].b_prbd003
            DISPLAY aprt102_filter_parser('prbd004') TO s_browse[1].b_prbd004
            DISPLAY aprt102_filter_parser('prbd005') TO s_browse[1].b_prbd005
            DISPLAY aprt102_filter_parser('prbd006') TO s_browse[1].b_prbd006
            DISPLAY aprt102_filter_parser('prbd007') TO s_browse[1].b_prbd007
            DISPLAY aprt102_filter_parser('prbd008') TO s_browse[1].b_prbd008
            DISPLAY aprt102_filter_parser('prbd009') TO s_browse[1].b_prbd009
            DISPLAY aprt102_filter_parser('prbdsite') TO s_browse[1].b_prbdsite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aprt102_filter_show('prbdunit')
   CALL aprt102_filter_show('prbddocdt')
   CALL aprt102_filter_show('prbddocno')
   CALL aprt102_filter_show('prbd001')
   CALL aprt102_filter_show('prbd002')
   CALL aprt102_filter_show('prbd003')
   CALL aprt102_filter_show('prbd004')
   CALL aprt102_filter_show('prbd005')
   CALL aprt102_filter_show('prbd006')
   CALL aprt102_filter_show('prbd007')
   CALL aprt102_filter_show('prbd008')
   CALL aprt102_filter_show('prbd009')
   CALL aprt102_filter_show('prbdsite')
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aprt102_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aprt102_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aprt102_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.global" ver="9" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_prbd_m        RECORD
       prbdunit LIKE prbd_t.prbdunit, 
   prbdunit_desc LIKE type_t.chr80, 
   prbddocdt LIKE prbd_t.prbddocdt, 
   prbddocno LIKE prbd_t.prbddocno, 
   prbd001 LIKE prbd_t.prbd001, 
   prbdsite LIKE prbd_t.prbdsite, 
   prbd002 LIKE prbd_t.prbd002, 
   prbd003 LIKE prbd_t.prbd003, 
   prbd003_desc LIKE type_t.chr80, 
   prbd004 LIKE prbd_t.prbd004, 
   prbd004_desc LIKE type_t.chr80, 
   prbd005 LIKE prbd_t.prbd005, 
   prbd006 LIKE prbd_t.prbd006, 
   prbd007 LIKE prbd_t.prbd007, 
   prbd007_desc LIKE type_t.chr80, 
   prbd008 LIKE prbd_t.prbd008, 
   prbd008_desc LIKE type_t.chr80, 
   prbd009 LIKE prbd_t.prbd009, 
   prbd010 LIKE prbd_t.prbd010, 
   prbdstus LIKE prbd_t.prbdstus, 
   prbdownid LIKE prbd_t.prbdownid, 
   prbdownid_desc LIKE type_t.chr80, 
   prbdowndp LIKE prbd_t.prbdowndp, 
   prbdowndp_desc LIKE type_t.chr80, 
   prbdcrtid LIKE prbd_t.prbdcrtid, 
   prbdcrtid_desc LIKE type_t.chr80, 
   prbdcrtdp LIKE prbd_t.prbdcrtdp, 
   prbdcrtdp_desc LIKE type_t.chr80, 
   prbdcrtdt DATETIME YEAR TO SECOND, 
   prbdmodid LIKE prbd_t.prbdmodid, 
   prbdmodid_desc LIKE type_t.chr80, 
   prbdmoddt DATETIME YEAR TO SECOND, 
   prbdcnfid LIKE prbd_t.prbdcnfid, 
   prbdcnfid_desc LIKE type_t.chr80, 
   prbdcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_prbe_d        RECORD
       prbeseq LIKE prbe_t.prbeseq, 
   prbe001 LIKE prbe_t.prbe001, 
   prbe002 LIKE prbe_t.prbe002, 
   prbe001_desc LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   imaa009_desc LIKE type_t.chr500, 
   imaa105 LIKE type_t.chr10, 
   imaa105_desc LIKE type_t.chr500, 
   prbe004 LIKE prbe_t.prbe004, 
   prbe005 LIKE prbe_t.prbe005, 
   prbe006 LIKE prbe_t.prbe006, 
   prbe007 LIKE prbe_t.prbe007, 
   prbe008 LIKE prbe_t.prbe008, 
   prbe009 LIKE prbe_t.prbe009, 
   prbe010 LIKE prbe_t.prbe010, 
   prbe011 LIKE prbe_t.prbe011, 
   prbe012 LIKE prbe_t.prbe012, 
   prbe013 LIKE prbe_t.prbe013, 
   prbe014 LIKE prbe_t.prbe014, 
   prbe014_desc LIKE type_t.chr500, 
   prbesite LIKE prbe_t.prbesite, 
   prbesite_desc LIKE type_t.chr500, 
   prbeunit LIKE prbe_t.prbeunit, 
   prbe003 LIKE prbe_t.prbe003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_prbd_m          type_g_prbd_m
DEFINE g_prbd_m_t        type_g_prbd_m
 
   DEFINE g_prbddocno_t LIKE prbd_t.prbddocno
 
 
DEFINE g_prbe_d          DYNAMIC ARRAY OF type_g_prbe_d
DEFINE g_prbe_d_t        type_g_prbe_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prbdunit LIKE prbd_t.prbdunit,
   b_prbdunit_desc LIKE type_t.chr80,
      b_prbddocdt LIKE prbd_t.prbddocdt,
      b_prbddocno LIKE prbd_t.prbddocno,
      b_prbd001 LIKE prbd_t.prbd001,
      b_prbd002 LIKE prbd_t.prbd002,
      b_prbd003 LIKE prbd_t.prbd003,
   b_prbd003_desc LIKE type_t.chr80,
      b_prbd004 LIKE prbd_t.prbd004,
   b_prbd004_desc LIKE type_t.chr80,
      b_prbd005 LIKE prbd_t.prbd005,
      b_prbd006 LIKE prbd_t.prbd006,
      b_prbd007 LIKE prbd_t.prbd007,
   b_prbd007_desc LIKE type_t.chr80,
      b_prbd008 LIKE prbd_t.prbd008,
   b_prbd008_desc LIKE type_t.chr80,
      b_prbd009 LIKE prbd_t.prbd009,
      b_prbdsite LIKE prbd_t.prbdsite
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_prbdunit LIKE prbd_t.prbdunit,
   b_prbdunit_desc LIKE type_t.chr80,
      b_prbddocdt LIKE prbd_t.prbddocdt,
      b_prbddocno LIKE prbd_t.prbddocno,
      b_prbd001 LIKE prbd_t.prbd001,
      b_prbd002 LIKE prbd_t.prbd002,
      b_prbd003 LIKE prbd_t.prbd003,
   b_prbd003_desc LIKE type_t.chr80,
      b_prbd004 LIKE prbd_t.prbd004,
   b_prbd004_desc LIKE type_t.chr80,
      b_prbd005 LIKE prbd_t.prbd005,
      b_prbd006 LIKE prbd_t.prbd006,
      b_prbd007 LIKE prbd_t.prbd007,
   b_prbd007_desc LIKE type_t.chr80,
      b_prbd008 LIKE prbd_t.prbd008,
   b_prbd008_desc LIKE type_t.chr80,
      b_prbd009 LIKE prbd_t.prbd009,
      b_prbdsite LIKE prbd_t.prbdsite
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aprt102.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aprt102_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_prbe_d.getLength() THEN
         LET g_detail_idx = g_prbe_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_prbe_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_prbe_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.init" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aprt102_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('prbdstus','13','N,Y,X,A,D,R,W')
 
      CALL cl_set_combo_scc('prbd002','6017') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aprt102_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aprt102.input" ver="5" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aprt102_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT prbeseq,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007,prbe008,prbe009, 
       prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003 FROM prbe_t WHERE prbeent=?  
       AND prbedocno=? AND prbeseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt102_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aprt102_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aprt102_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_prbd_m.prbdunit,g_prbd_m.prbddocdt,g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite, 
       g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007, 
       g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="aprt102.input.body" ver="4" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_prbe_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_prbe_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aprt102_b_fill()
            LET g_rec_b = g_prbe_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aprt102_cl USING g_enterprise,g_prbd_m.prbddocno
            IF STATUS THEN
               CALL cl_err("OPEN aprt102_cl:", STATUS, 1)
               CLOSE aprt102_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_prbe_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_prbe_d[l_ac].prbeseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_prbe_d_t.* = g_prbe_d[l_ac].*  #BACKUP
               CALL aprt102_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aprt102_set_no_entry_b(l_cmd)
               IF NOT aprt102_lock_b("prbe_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aprt102_bcl INTO g_prbe_d[l_ac].prbeseq,g_prbe_d[l_ac].prbe001,g_prbe_d[l_ac].prbe002, 
                      g_prbe_d[l_ac].prbe004,g_prbe_d[l_ac].prbe005,g_prbe_d[l_ac].prbe006,g_prbe_d[l_ac].prbe007, 
                      g_prbe_d[l_ac].prbe008,g_prbe_d[l_ac].prbe009,g_prbe_d[l_ac].prbe010,g_prbe_d[l_ac].prbe011, 
                      g_prbe_d[l_ac].prbe012,g_prbe_d[l_ac].prbe013,g_prbe_d[l_ac].prbe014,g_prbe_d[l_ac].prbesite, 
                      g_prbe_d[l_ac].prbeunit,g_prbe_d[l_ac].prbe003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_prbe_d_t.prbeseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aprt102_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_prbe_d[l_ac].* TO NULL 
                  LET g_prbe_d[l_ac].prbe007 = "0"
      LET g_prbe_d[l_ac].prbe008 = "N"
      LET g_prbe_d[l_ac].prbe010 = "N"
      LET g_prbe_d[l_ac].prbe011 = "N"
      LET g_prbe_d[l_ac].prbe012 = "0"
 
            LET g_prbe_d_t.* = g_prbe_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aprt102_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aprt102_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_prbe_d[li_reproduce_target].* = g_prbe_d[li_reproduce].*
 
               LET g_prbe_d[li_reproduce_target].prbeseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM prbe_t 
             WHERE prbeent = g_enterprise AND prbedocno = g_prbd_m.prbddocno
 
               AND prbeseq = g_prbe_d[l_ac].prbeseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbd_m.prbddocno
               LET gs_keys[2] = g_prbe_d[g_detail_idx].prbeseq
               CALL aprt102_insert_b('prbe_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_prbe_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("prbe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aprt102_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_prbe_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_prbe_d.deleteElement(l_ac)
               NEXT FIELD prbeseq
            END IF
         
            IF g_prbe_d[l_ac].prbeseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM prbe_t
                WHERE prbeent = g_enterprise AND prbedocno = g_prbd_m.prbddocno AND
 
                      prbeseq = g_prbe_d_t.prbeseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prbe_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aprt102_bcl
               LET l_count = g_prbe_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbd_m.prbddocno
               LET gs_keys[2] = g_prbe_d[g_detail_idx].prbeseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aprt102_delete_b('prbe_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD prbeseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prbe_d[l_ac].prbeseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD prbeseq
            END IF
 
 
            #add-point:AFTER FIELD prbeseq
            {<point name="input.a.page1.prbeseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbeseq
            #add-point:BEFORE FIELD prbeseq
            {<point name="input.b.page1.prbeseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbeseq
            #add-point:ON CHANGE prbeseq
            {<point name="input.g.page1.prbeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe001
            
            #add-point:AFTER FIELD prbe001
            {<point name="input.a.page1.prbe001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe001
            #add-point:BEFORE FIELD prbe001
            {<point name="input.b.page1.prbe001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbe001
            #add-point:ON CHANGE prbe001
            {<point name="input.g.page1.prbe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe002
            
            #add-point:AFTER FIELD prbe002
            {<point name="input.a.page1.prbe002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe002
            #add-point:BEFORE FIELD prbe002
            {<point name="input.b.page1.prbe002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbe002
            #add-point:ON CHANGE prbe002
            {<point name="input.g.page1.prbe002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe004
            #add-point:BEFORE FIELD prbe004
            {<point name="input.b.page1.prbe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe004
            
            #add-point:AFTER FIELD prbe004
            {<point name="input.a.page1.prbe004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe004
            #add-point:ON CHANGE prbe004
            {<point name="input.g.page1.prbe004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe005
            #add-point:BEFORE FIELD prbe005
            {<point name="input.b.page1.prbe005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe005
            
            #add-point:AFTER FIELD prbe005
            {<point name="input.a.page1.prbe005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe005
            #add-point:ON CHANGE prbe005
            {<point name="input.g.page1.prbe005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe006
            #add-point:BEFORE FIELD prbe006
            {<point name="input.b.page1.prbe006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe006
            
            #add-point:AFTER FIELD prbe006
            {<point name="input.a.page1.prbe006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe006
            #add-point:ON CHANGE prbe006
            {<point name="input.g.page1.prbe006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prbe_d[l_ac].prbe007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbe007
            END IF
 
 
            #add-point:AFTER FIELD prbe007
            {<point name="input.a.page1.prbe007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe007
            #add-point:BEFORE FIELD prbe007
            {<point name="input.b.page1.prbe007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbe007
            #add-point:ON CHANGE prbe007
            {<point name="input.g.page1.prbe007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe008
            #add-point:BEFORE FIELD prbe008
            {<point name="input.b.page1.prbe008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe008
            
            #add-point:AFTER FIELD prbe008
            {<point name="input.a.page1.prbe008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe008
            #add-point:ON CHANGE prbe008
            {<point name="input.g.page1.prbe008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe009
            #add-point:BEFORE FIELD prbe009
            {<point name="input.b.page1.prbe009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe009
            
            #add-point:AFTER FIELD prbe009
            {<point name="input.a.page1.prbe009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe009
            #add-point:ON CHANGE prbe009
            {<point name="input.g.page1.prbe009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe010
            #add-point:BEFORE FIELD prbe010
            {<point name="input.b.page1.prbe010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe010
            
            #add-point:AFTER FIELD prbe010
            {<point name="input.a.page1.prbe010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe010
            #add-point:ON CHANGE prbe010
            {<point name="input.g.page1.prbe010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe011
            #add-point:BEFORE FIELD prbe011
            {<point name="input.b.page1.prbe011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe011
            
            #add-point:AFTER FIELD prbe011
            {<point name="input.a.page1.prbe011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe011
            #add-point:ON CHANGE prbe011
            {<point name="input.g.page1.prbe011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_prbe_d[l_ac].prbe012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD prbe012
            END IF
 
 
            #add-point:AFTER FIELD prbe012
            {<point name="input.a.page1.prbe012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe012
            #add-point:BEFORE FIELD prbe012
            {<point name="input.b.page1.prbe012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbe012
            #add-point:ON CHANGE prbe012
            {<point name="input.g.page1.prbe012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe013
            #add-point:BEFORE FIELD prbe013
            {<point name="input.b.page1.prbe013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe013
            
            #add-point:AFTER FIELD prbe013
            {<point name="input.a.page1.prbe013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe013
            #add-point:ON CHANGE prbe013
            {<point name="input.g.page1.prbe013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe014
            
            #add-point:AFTER FIELD prbe014
            {<point name="input.a.page1.prbe014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe014
            #add-point:BEFORE FIELD prbe014
            {<point name="input.b.page1.prbe014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbe014
            #add-point:ON CHANGE prbe014
            {<point name="input.g.page1.prbe014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbesite
            
            #add-point:AFTER FIELD prbesite
            {<point name="input.a.page1.prbesite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbesite
            #add-point:BEFORE FIELD prbesite
            {<point name="input.b.page1.prbesite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbesite
            #add-point:ON CHANGE prbesite
            {<point name="input.g.page1.prbesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbeunit
            
            #add-point:AFTER FIELD prbeunit
            {<point name="input.a.page1.prbeunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbeunit
            #add-point:BEFORE FIELD prbeunit
            {<point name="input.b.page1.prbeunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbeunit
            #add-point:ON CHANGE prbeunit
            {<point name="input.g.page1.prbeunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbe003
            #add-point:BEFORE FIELD prbe003
            {<point name="input.b.page1.prbe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbe003
            
            #add-point:AFTER FIELD prbe003
            {<point name="input.a.page1.prbe003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbe003
            #add-point:ON CHANGE prbe003
            {<point name="input.g.page1.prbe003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.prbeseq
         ON ACTION controlp INFIELD prbeseq
            #add-point:ON ACTION controlp INFIELD prbeseq
            {<point name="input.c.page1.prbeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe001
         ON ACTION controlp INFIELD prbe001
            #add-point:ON ACTION controlp INFIELD prbe001
            {<point name="input.c.page1.prbe001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe002
         ON ACTION controlp INFIELD prbe002
            #add-point:ON ACTION controlp INFIELD prbe002
            {<point name="input.c.page1.prbe002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe004
         ON ACTION controlp INFIELD prbe004
            #add-point:ON ACTION controlp INFIELD prbe004
            {<point name="input.c.page1.prbe004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe005
         ON ACTION controlp INFIELD prbe005
            #add-point:ON ACTION controlp INFIELD prbe005
            {<point name="input.c.page1.prbe005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe006
         ON ACTION controlp INFIELD prbe006
            #add-point:ON ACTION controlp INFIELD prbe006
            {<point name="input.c.page1.prbe006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe007
         ON ACTION controlp INFIELD prbe007
            #add-point:ON ACTION controlp INFIELD prbe007
            {<point name="input.c.page1.prbe007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe008
         ON ACTION controlp INFIELD prbe008
            #add-point:ON ACTION controlp INFIELD prbe008
            {<point name="input.c.page1.prbe008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe009
         ON ACTION controlp INFIELD prbe009
            #add-point:ON ACTION controlp INFIELD prbe009
            {<point name="input.c.page1.prbe009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe010
         ON ACTION controlp INFIELD prbe010
            #add-point:ON ACTION controlp INFIELD prbe010
            {<point name="input.c.page1.prbe010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe011
         ON ACTION controlp INFIELD prbe011
            #add-point:ON ACTION controlp INFIELD prbe011
            {<point name="input.c.page1.prbe011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe012
         ON ACTION controlp INFIELD prbe012
            #add-point:ON ACTION controlp INFIELD prbe012
            {<point name="input.c.page1.prbe012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe013
         ON ACTION controlp INFIELD prbe013
            #add-point:ON ACTION controlp INFIELD prbe013
            {<point name="input.c.page1.prbe013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe014
         ON ACTION controlp INFIELD prbe014
            #add-point:ON ACTION controlp INFIELD prbe014
            {<point name="input.c.page1.prbe014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbesite
         ON ACTION controlp INFIELD prbesite
            #add-point:ON ACTION controlp INFIELD prbesite
            {<point name="input.c.page1.prbesite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbeunit
         ON ACTION controlp INFIELD prbeunit
            #add-point:ON ACTION controlp INFIELD prbeunit
            {<point name="input.c.page1.prbeunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.prbe003
         ON ACTION controlp INFIELD prbe003
            #add-point:ON ACTION controlp INFIELD prbe003
            {<point name="input.c.page1.prbe003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_prbe_d[l_ac].* = g_prbe_d_t.*
               CLOSE aprt102_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_prbe_d[l_ac].prbeseq,-263,1)
               LET g_prbe_d[l_ac].* = g_prbe_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE prbe_t SET (prbedocno,prbeseq,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007, 
                   prbe008,prbe009,prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003) = (g_prbd_m.prbddocno, 
                   g_prbe_d[l_ac].prbeseq,g_prbe_d[l_ac].prbe001,g_prbe_d[l_ac].prbe002,g_prbe_d[l_ac].prbe004, 
                   g_prbe_d[l_ac].prbe005,g_prbe_d[l_ac].prbe006,g_prbe_d[l_ac].prbe007,g_prbe_d[l_ac].prbe008, 
                   g_prbe_d[l_ac].prbe009,g_prbe_d[l_ac].prbe010,g_prbe_d[l_ac].prbe011,g_prbe_d[l_ac].prbe012, 
                   g_prbe_d[l_ac].prbe013,g_prbe_d[l_ac].prbe014,g_prbe_d[l_ac].prbesite,g_prbe_d[l_ac].prbeunit, 
                   g_prbe_d[l_ac].prbe003)
                WHERE prbeent = g_enterprise AND prbedocno = g_prbd_m.prbddocno 
 
                  AND prbeseq = g_prbe_d_t.prbeseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("prbe_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_prbe_d[l_ac].* = g_prbe_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("prbe_t",SQLCA.sqlcode,1)
                     LET g_prbe_d[l_ac].* = g_prbe_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_prbd_m.prbddocno
               LET gs_keys_bak[1] = g_prbddocno_t
               LET gs_keys[2] = g_prbe_d[g_detail_idx].prbeseq
               LET gs_keys_bak[2] = g_prbe_d_t.prbeseq
               CALL aprt102_update_b('prbe_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_prbd_m),util.JSON.stringify(g_prbe_d_t)
               LET g_log2 = util.JSON.stringify(g_prbd_m),util.JSON.stringify(g_prbe_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aprt102_unlock_b("prbe_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_prbe_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_prbe_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="aprt102.input.head" ver="7" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_prbd_m.prbdunit,g_prbd_m.prbddocdt,g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite, 
          g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007, 
          g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD prbdunit
            
            #add-point:AFTER FIELD prbdunit
            {<point name="input.a.prbdunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdunit
            #add-point:BEFORE FIELD prbdunit
            {<point name="input.b.prbdunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbdunit
            #add-point:ON CHANGE prbdunit
            {<point name="input.g.prbdunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbddocdt
            #add-point:BEFORE FIELD prbddocdt
            {<point name="input.b.prbddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbddocdt
            
            #add-point:AFTER FIELD prbddocdt
            {<point name="input.a.prbddocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbddocdt
            #add-point:ON CHANGE prbddocdt
            {<point name="input.g.prbddocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbddocno
            #add-point:BEFORE FIELD prbddocno
            {<point name="input.b.prbddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbddocno
            
            #add-point:AFTER FIELD prbddocno
            {<point name="input.a.prbddocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbddocno
            #add-point:ON CHANGE prbddocno
            {<point name="input.g.prbddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd001
            #add-point:BEFORE FIELD prbd001
            {<point name="input.b.prbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd001
            
            #add-point:AFTER FIELD prbd001
            {<point name="input.a.prbd001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd001
            #add-point:ON CHANGE prbd001
            {<point name="input.g.prbd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdsite
            #add-point:BEFORE FIELD prbdsite
            {<point name="input.b.prbdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdsite
            
            #add-point:AFTER FIELD prbdsite
            {<point name="input.a.prbdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbdsite
            #add-point:ON CHANGE prbdsite
            {<point name="input.g.prbdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd002
            #add-point:BEFORE FIELD prbd002
            {<point name="input.b.prbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd002
            
            #add-point:AFTER FIELD prbd002
            {<point name="input.a.prbd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd002
            #add-point:ON CHANGE prbd002
            {<point name="input.g.prbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd003
            
            #add-point:AFTER FIELD prbd003
            {<point name="input.a.prbd003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd003
            #add-point:BEFORE FIELD prbd003
            {<point name="input.b.prbd003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbd003
            #add-point:ON CHANGE prbd003
            {<point name="input.g.prbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd004
            
            #add-point:AFTER FIELD prbd004
            {<point name="input.a.prbd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd004
            #add-point:BEFORE FIELD prbd004
            {<point name="input.b.prbd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbd004
            #add-point:ON CHANGE prbd004
            {<point name="input.g.prbd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd005
            #add-point:BEFORE FIELD prbd005
            {<point name="input.b.prbd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd005
            
            #add-point:AFTER FIELD prbd005
            {<point name="input.a.prbd005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd005
            #add-point:ON CHANGE prbd005
            {<point name="input.g.prbd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd006
            #add-point:BEFORE FIELD prbd006
            {<point name="input.b.prbd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd006
            
            #add-point:AFTER FIELD prbd006
            {<point name="input.a.prbd006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd006
            #add-point:ON CHANGE prbd006
            {<point name="input.g.prbd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd007
            
            #add-point:AFTER FIELD prbd007
            {<point name="input.a.prbd007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd007
            #add-point:BEFORE FIELD prbd007
            {<point name="input.b.prbd007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbd007
            #add-point:ON CHANGE prbd007
            {<point name="input.g.prbd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd008
            
            #add-point:AFTER FIELD prbd008
            {<point name="input.a.prbd008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd008
            #add-point:BEFORE FIELD prbd008
            {<point name="input.b.prbd008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE prbd008
            #add-point:ON CHANGE prbd008
            {<point name="input.g.prbd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd009
            #add-point:BEFORE FIELD prbd009
            {<point name="input.b.prbd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd009
            
            #add-point:AFTER FIELD prbd009
            {<point name="input.a.prbd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd009
            #add-point:ON CHANGE prbd009
            {<point name="input.g.prbd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbd010
            #add-point:BEFORE FIELD prbd010
            {<point name="input.b.prbd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbd010
            
            #add-point:AFTER FIELD prbd010
            {<point name="input.a.prbd010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbd010
            #add-point:ON CHANGE prbd010
            {<point name="input.g.prbd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD prbdstus
            #add-point:BEFORE FIELD prbdstus
            {<point name="input.b.prbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD prbdstus
            
            #add-point:AFTER FIELD prbdstus
            {<point name="input.a.prbdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE prbdstus
            #add-point:ON CHANGE prbdstus
            {<point name="input.g.prbdstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.prbdunit
         ON ACTION controlp INFIELD prbdunit
            #add-point:ON ACTION controlp INFIELD prbdunit
            {<point name="input.c.prbdunit" />}
            #END add-point
 
         #Ctrlp:input.c.prbddocdt
         ON ACTION controlp INFIELD prbddocdt
            #add-point:ON ACTION controlp INFIELD prbddocdt
            {<point name="input.c.prbddocdt" />}
            #END add-point
 
         #Ctrlp:input.c.prbddocno
         ON ACTION controlp INFIELD prbddocno
            #add-point:ON ACTION controlp INFIELD prbddocno
            {<point name="input.c.prbddocno" />}
            #END add-point
 
         #Ctrlp:input.c.prbd001
         ON ACTION controlp INFIELD prbd001
            #add-point:ON ACTION controlp INFIELD prbd001
            {<point name="input.c.prbd001" />}
            #END add-point
 
         #Ctrlp:input.c.prbdsite
         ON ACTION controlp INFIELD prbdsite
            #add-point:ON ACTION controlp INFIELD prbdsite
            {<point name="input.c.prbdsite" />}
            #END add-point
 
         #Ctrlp:input.c.prbd002
         ON ACTION controlp INFIELD prbd002
            #add-point:ON ACTION controlp INFIELD prbd002
            {<point name="input.c.prbd002" />}
            #END add-point
 
         #Ctrlp:input.c.prbd003
         ON ACTION controlp INFIELD prbd003
            #add-point:ON ACTION controlp INFIELD prbd003
            {<point name="input.c.prbd003" />}
            #END add-point
 
         #Ctrlp:input.c.prbd004
         ON ACTION controlp INFIELD prbd004
            #add-point:ON ACTION controlp INFIELD prbd004
            {<point name="input.c.prbd004" />}
            #END add-point
 
         #Ctrlp:input.c.prbd005
         ON ACTION controlp INFIELD prbd005
            #add-point:ON ACTION controlp INFIELD prbd005
            {<point name="input.c.prbd005" />}
            #END add-point
 
         #Ctrlp:input.c.prbd006
         ON ACTION controlp INFIELD prbd006
            #add-point:ON ACTION controlp INFIELD prbd006
            {<point name="input.c.prbd006" />}
            #END add-point
 
         #Ctrlp:input.c.prbd007
         ON ACTION controlp INFIELD prbd007
            #add-point:ON ACTION controlp INFIELD prbd007
            {<point name="input.c.prbd007" />}
            #END add-point
 
         #Ctrlp:input.c.prbd008
         ON ACTION controlp INFIELD prbd008
            #add-point:ON ACTION controlp INFIELD prbd008
            {<point name="input.c.prbd008" />}
            #END add-point
 
         #Ctrlp:input.c.prbd009
         ON ACTION controlp INFIELD prbd009
            #add-point:ON ACTION controlp INFIELD prbd009
            {<point name="input.c.prbd009" />}
            #END add-point
 
         #Ctrlp:input.c.prbd010
         ON ACTION controlp INFIELD prbd010
            #add-point:ON ACTION controlp INFIELD prbd010
            {<point name="input.c.prbd010" />}
            #END add-point
 
         #Ctrlp:input.c.prbdstus
         ON ACTION controlp INFIELD prbdstus
            #add-point:ON ACTION controlp INFIELD prbdstus
            {<point name="input.c.prbdstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_prbd_m.prbddocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO prbd_t (prbdent,prbdunit,prbddocdt,prbddocno,prbd001,prbdsite,prbd002,prbd003, 
                   prbd004,prbd005,prbd006,prbd007,prbd008,prbd009,prbd010,prbdstus,prbdownid,prbdowndp, 
                   prbdcrtid,prbdcrtdp,prbdcrtdt,prbdcnfid,prbdcnfdt)
               VALUES (g_enterprise,g_prbd_m.prbdunit,g_prbd_m.prbddocdt,g_prbd_m.prbddocno,g_prbd_m.prbd001, 
                   g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004,g_prbd_m.prbd005, 
                   g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
                   g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
                   g_prbd_m.prbdcrtdt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_prbd_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aprt102_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE prbd_t SET (prbdunit,prbddocdt,prbddocno,prbd001,prbdsite,prbd002,prbd003,prbd004, 
                   prbd005,prbd006,prbd007,prbd008,prbd009,prbd010,prbdstus,prbdownid,prbdowndp,prbdcrtid, 
                   prbdcrtdp,prbdcrtdt,prbdcnfid,prbdcnfdt) = (g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
                   g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003, 
                   g_prbd_m.prbd004,g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008, 
                   g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp, 
                   g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp,g_prbd_m.prbdcrtdt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt) 

                WHERE prbdent = g_enterprise AND prbddocno = g_prbddocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("prbd_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_prbd_m_t)
               LET g_log2 = util.JSON.stringify(g_prbd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_prbddocno_t = g_prbd_m.prbddocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="aprt102.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD prbddocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD prbeseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aprt102_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_prbe_d.clear()   
 
 
   INITIALIZE g_prbd_m.* LIKE prbd_t.*             #DEFAULT 設定
   
   LET g_prbddocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_prbd_m.prbdownid = g_user
      LET g_prbd_m.prbdowndp = g_dept
      LET g_prbd_m.prbdcrtid = g_user
      LET g_prbd_m.prbdcrtdp = g_dept 
      LET g_prbd_m.prbdcrtdt = cl_get_current()
      LET g_prbd_m.prbdmodid = ""
      LET g_prbd_m.prbdmoddt = ""
      LET g_prbd_m.prbdstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_prbd_m.prbd002 = "2"
      LET g_prbd_m.prbdstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aprt102_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prbd_m.* = g_prbd_m_t.*
         CALL aprt102_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_prbe_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_prbddocno_t = g_prbd_m.prbddocno
 
   
   LET g_wc = g_wc,  
              " OR ( prbdent = '" ||g_enterprise|| "' AND",
              " prbddocno = '", g_prbd_m.prbddocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aprt102_cl
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aprt102_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO prbe_t
                  (prbeent,
                   prbedocno,
                   prbeseq
                   ,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007,prbe008,prbe009,prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_prbe_d[g_detail_idx].prbe001,g_prbe_d[g_detail_idx].prbe002,g_prbe_d[g_detail_idx].prbe004, 
                       g_prbe_d[g_detail_idx].prbe005,g_prbe_d[g_detail_idx].prbe006,g_prbe_d[g_detail_idx].prbe007, 
                       g_prbe_d[g_detail_idx].prbe008,g_prbe_d[g_detail_idx].prbe009,g_prbe_d[g_detail_idx].prbe010, 
                       g_prbe_d[g_detail_idx].prbe011,g_prbe_d[g_detail_idx].prbe012,g_prbe_d[g_detail_idx].prbe013, 
                       g_prbe_d[g_detail_idx].prbe014,g_prbe_d[g_detail_idx].prbesite,g_prbe_d[g_detail_idx].prbeunit, 
                       g_prbe_d[g_detail_idx].prbe003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("prbe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aprt102_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aprt102_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "prbe_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aprt102_bcl USING g_enterprise,
                                       g_prbd_m.prbddocno,g_prbe_d[g_detail_idx].prbeseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aprt102_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.main" ver="11" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT prbdunit,'',prbddocdt,prbddocno,prbd001,prbdsite,prbd002,prbd003,'',prbd004, 
       '',prbd005,prbd006,prbd007,'',prbd008,'',prbd009,prbd010,prbdstus,prbdownid,'',prbdowndp,'',prbdcrtid, 
       '',prbdcrtdp,'',prbdcrtdt,prbdmodid,'',prbdmoddt,prbdcnfid,'',prbdcnfdt", 
                      " FROM prbd_t",
                      " WHERE prbdent= ? AND prbddocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aprt102_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE prbdunit,prbddocdt,prbddocno,prbd001,prbdsite,prbd002,prbd003,prbd004, 
       prbd005,prbd006,prbd007,prbd008,prbd009,prbd010,prbdstus,prbdownid,prbdowndp,prbdcrtid,prbdcrtdp, 
       prbdcrtdt,prbdmodid,prbdmoddt,prbdcnfid,prbdcnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.prba003 ,t4.oofa011 , 
       t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011",
               " FROM prbd_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=prbdunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=prbd003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prba_t t3 ON t3.prbaent='"||g_enterprise||"' AND t3.prba001=prbd003 AND t3.prba002=prbd004  ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=prbd007  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=prbd008 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=prbdownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=prbdowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=prbdcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=prbdcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=prbdmodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=prbdcnfid  ",
 
               " WHERE prbdent = '" ||g_enterprise|| "' AND prbddocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aprt102_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aprt102 WITH FORM cl_ap_formpath("apr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aprt102_init()   
 
      #進入選單 Menu (="N")
      CALL aprt102_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aprt102
      
   END IF 
   
   CLOSE aprt102_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aprt102.modify" ver="8" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aprt102_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
 
   ERROR ""
  
   LET g_prbddocno_t = g_prbd_m.prbddocno
 
   CALL s_transaction_begin()
   
   OPEN aprt102_cl USING g_enterprise,g_prbd_m.prbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt102_cl:", STATUS, 1)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbd_m.prbddocno,SQLCA.sqlcode,0)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aprt102_show()
   WHILE TRUE
      LET g_prbddocno_t = g_prbd_m.prbddocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_prbd_m.prbdmodid = g_user 
LET g_prbd_m.prbdmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aprt102_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_prbd_m.* = g_prbd_m_t.*
         CALL aprt102_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE prbd_t SET (prbdmodid,prbdmoddt) = (g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt)
       WHERE prbdent = g_enterprise AND prbddocno = g_prbddocno_t
 
                  
      #若單頭key欄位有變更
      IF g_prbd_m.prbddocno != g_prbddocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE prbe_t SET prbedocno = g_prbd_m.prbddocno
 
          WHERE prbeent = g_enterprise AND prbedocno = g_prbddocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("prbe_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("prbe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_prbd_m.prbddocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aprt102_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_prbd_m.prbddocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aprt102.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aprt102.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aprt102.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aprt102_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_prbe_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aprt102_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aprt102_browser_fill("")
      CALL aprt102_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aprt102_filter_show('prbdunit')
   CALL aprt102_filter_show('prbddocdt')
   CALL aprt102_filter_show('prbddocno')
   CALL aprt102_filter_show('prbd001')
   CALL aprt102_filter_show('prbd002')
   CALL aprt102_filter_show('prbd003')
   CALL aprt102_filter_show('prbd004')
   CALL aprt102_filter_show('prbd005')
   CALL aprt102_filter_show('prbd006')
   CALL aprt102_filter_show('prbd007')
   CALL aprt102_filter_show('prbd008')
   CALL aprt102_filter_show('prbd009')
   CALL aprt102_filter_show('prbdsite')
   CALL aprt102_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aprt102_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aprt102_reproduce()
   DEFINE l_newno     LIKE prbd_t.prbddocno 
   DEFINE l_oldno     LIKE prbd_t.prbddocno 
 
   DEFINE l_master    RECORD LIKE prbd_t.*
   DEFINE l_detail    RECORD LIKE prbe_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_prbddocno_t = g_prbd_m.prbddocno
 
    
   LET g_prbd_m.prbddocno = ""
 
    
   CALL aprt102_set_entry('a')
   CALL aprt102_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_prbd_m.prbdownid = g_user
      LET g_prbd_m.prbdowndp = g_dept
      LET g_prbd_m.prbdcrtid = g_user
      LET g_prbd_m.prbdcrtdp = g_dept 
      LET g_prbd_m.prbdcrtdt = cl_get_current()
      LET g_prbd_m.prbdmodid = ""
      LET g_prbd_m.prbdmoddt = ""
      LET g_prbd_m.prbdstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aprt102_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " prbddocno = '", g_prbd_m.prbddocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aprt102_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("prbddocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aprt102_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aprt102.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aprt102_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("prbddocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aprt102_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aprt102.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aprt102_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_prbd_m.prbddocno
   LET g_pk_array[1].column = 'prbddocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt102.show" ver="10" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aprt102_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_prbd_m_t.* = g_prbd_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aprt102_b_fill() #單身填充
      CALL aprt102_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_prbd_m.prbdownid_desc = cl_get_username(g_prbd_m.prbdownid)
      #LET g_prbd_m.prbdowndp_desc = cl_get_deptname(g_prbd_m.prbdowndp)
      #LET g_prbd_m.prbdcrtid_desc = cl_get_username(g_prbd_m.prbdcrtid)
      #LET g_prbd_m.prbdcrtdp_desc = cl_get_deptname(g_prbd_m.prbdcrtdp)
      #LET g_prbd_m.prbdmodid_desc = cl_get_username(g_prbd_m.prbdmodid)
      #LET g_prbd_m.prbdcnfid_desc = cl_get_deptname(g_prbd_m.prbdcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aprt102_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_prbd_m.prbdunit,g_prbd_m.prbdunit_desc,g_prbd_m.prbddocdt,g_prbd_m.prbddocno,g_prbd_m.prbd001, 
       g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd003_desc,g_prbd_m.prbd004,g_prbd_m.prbd004_desc, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd007_desc,g_prbd_m.prbd008,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdownid_desc, 
       g_prbd_m.prbdowndp,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdp_desc,g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmodid_desc,g_prbd_m.prbdmoddt, 
       g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfid_desc,g_prbd_m.prbdcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_prbd_m.prbdstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_prbe_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aprt102_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.signature" ver="4" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aprt102_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aprt102_cl USING g_enterprise,g_prbd_m.prbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt102_cl:", STATUS, 1)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt102_cl INTO g_prbd_m.prbdunit,g_prbd_m.prbdunit_desc,g_prbd_m.prbddocdt,g_prbd_m.prbddocno, 
       g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd003_desc,g_prbd_m.prbd004, 
       g_prbd_m.prbd004_desc,g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd007_desc, 
       g_prbd_m.prbd008,g_prbd_m.prbd008_desc,g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus,g_prbd_m.prbdownid, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtid_desc, 
       g_prbd_m.prbdcrtdp,g_prbd_m.prbdcrtdp_desc,g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmodid_desc, 
       g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfid_desc,g_prbd_m.prbdcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbd_m.prbddocno,SQLCA.sqlcode,0)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aprt102_show()
   CALL aprt102_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_prbd_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_prbe_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aprt102_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aprt102_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt102_ui_headershow()
   CALL aprt102_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aprt102_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aprt102_cl USING g_enterprise,g_prbd_m.prbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aprt102_cl:", STATUS, 1)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aprt102_cl INTO g_prbd_m.prbdunit,g_prbd_m.prbdunit_desc,g_prbd_m.prbddocdt,g_prbd_m.prbddocno, 
       g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd003_desc,g_prbd_m.prbd004, 
       g_prbd_m.prbd004_desc,g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd007_desc, 
       g_prbd_m.prbd008,g_prbd_m.prbd008_desc,g_prbd_m.prbd009,g_prbd_m.prbd010,g_prbd_m.prbdstus,g_prbd_m.prbdownid, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtid_desc, 
       g_prbd_m.prbdcrtdp,g_prbd_m.prbdcrtdp_desc,g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmodid_desc, 
       g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfid_desc,g_prbd_m.prbdcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_prbd_m.prbddocno,SQLCA.sqlcode,0)
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aprt102_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aprt102_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aprt102_ui_headershow()  
   CALL aprt102_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aprt102.state_change" ver="10" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aprt102_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_prbd_m.prbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_prbd_m.prbdstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aprt102_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aprt102_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE prbd_t SET prbdstus = lc_state 
    WHERE prbdent = g_enterprise AND prbddocno = g_prbd_m.prbddocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_prbd_m.prbdstus = lc_state
      DISPLAY BY NAME g_prbd_m.prbdstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aprt102.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aprt102_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_prbddocno = g_prbd_m.prbddocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aprt102_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.ui_dialog" ver="43" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aprt102_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aprt102_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aprt102_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_prbddocno = g_prbddocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aprt102_fetch('') # reload data
               LET l_ac = 1
               CALL aprt102_ui_detailshow() #Setting the current row 
      
               CALL aprt102_idx_chk()
               #NEXT FIELD prbeseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_prbe_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aprt102_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aprt102_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aprt102_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aprt102_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aprt102_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aprt102_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aprt102_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aprt102_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aprt102_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aprt102_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aprt102_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt102_idx_chk()
            
         ON ACTION previous
            CALL aprt102_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt102_idx_chk()
            
         ON ACTION jump
            CALL aprt102_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt102_idx_chk()
            
         ON ACTION next
            CALL aprt102_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt102_idx_chk()
            
         ON ACTION last
            CALL aprt102_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aprt102_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD prbeseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aprt102_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aprt102_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_Prprice
            LET g_action_choice="open_Prprice"
            IF cl_auth_chk_act("open_Prprice") THEN
               
               #add-point:ON ACTION open_Prprice
               {<point name="menu.open_Prprice" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aprt102_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aprt102_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aprt102_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_Market
            LET g_action_choice="open_Market"
            IF cl_auth_chk_act("open_Market") THEN
               
               #add-point:ON ACTION open_Market
               {<point name="menu.open_Market" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION prog_prbd001
            LET g_action_choice="prog_prbd001"
            IF cl_auth_chk_act("prog_prbd001") THEN
               
               #add-point:ON ACTION prog_prbd001
               {<point name="menu.prog_prbd001" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION prog_prbd010
            LET g_action_choice="prog_prbd010"
            IF cl_auth_chk_act("prog_prbd010") THEN
               
               #add-point:ON ACTION prog_prbd010
               {<point name="menu.prog_prbd010" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aprt102_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aprt102_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aprt102_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_prbd_m.prbddocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aprt102.ui_headershow" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aprt102_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_prbd_m.prbddocno = g_browser[g_current_idx].b_prbddocno   
 
   EXECUTE aprt102_master_referesh USING g_prbd_m.prbddocno INTO g_prbd_m.prbdunit,g_prbd_m.prbddocdt, 
       g_prbd_m.prbddocno,g_prbd_m.prbd001,g_prbd_m.prbdsite,g_prbd_m.prbd002,g_prbd_m.prbd003,g_prbd_m.prbd004, 
       g_prbd_m.prbd005,g_prbd_m.prbd006,g_prbd_m.prbd007,g_prbd_m.prbd008,g_prbd_m.prbd009,g_prbd_m.prbd010, 
       g_prbd_m.prbdstus,g_prbd_m.prbdownid,g_prbd_m.prbdowndp,g_prbd_m.prbdcrtid,g_prbd_m.prbdcrtdp, 
       g_prbd_m.prbdcrtdt,g_prbd_m.prbdmodid,g_prbd_m.prbdmoddt,g_prbd_m.prbdcnfid,g_prbd_m.prbdcnfdt, 
       g_prbd_m.prbdunit_desc,g_prbd_m.prbd003_desc,g_prbd_m.prbd004_desc,g_prbd_m.prbd007_desc,g_prbd_m.prbd008_desc, 
       g_prbd_m.prbdownid_desc,g_prbd_m.prbdowndp_desc,g_prbd_m.prbdcrtid_desc,g_prbd_m.prbdcrtdp_desc, 
       g_prbd_m.prbdmodid_desc,g_prbd_m.prbdcnfid_desc
   CALL aprt102_show()
   
END FUNCTION
]]>
  </section>
  <section id="aprt102.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aprt102_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aprt102_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aprt102.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aprt102_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prbe_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE prbe_t 
         SET (prbedocno,
              prbeseq
              ,prbe001,prbe002,prbe004,prbe005,prbe006,prbe007,prbe008,prbe009,prbe010,prbe011,prbe012,prbe013,prbe014,prbesite,prbeunit,prbe003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_prbe_d[g_detail_idx].prbe001,g_prbe_d[g_detail_idx].prbe002,g_prbe_d[g_detail_idx].prbe004, 
                  g_prbe_d[g_detail_idx].prbe005,g_prbe_d[g_detail_idx].prbe006,g_prbe_d[g_detail_idx].prbe007, 
                  g_prbe_d[g_detail_idx].prbe008,g_prbe_d[g_detail_idx].prbe009,g_prbe_d[g_detail_idx].prbe010, 
                  g_prbe_d[g_detail_idx].prbe011,g_prbe_d[g_detail_idx].prbe012,g_prbe_d[g_detail_idx].prbe013, 
                  g_prbe_d[g_detail_idx].prbe014,g_prbe_d[g_detail_idx].prbesite,g_prbe_d[g_detail_idx].prbeunit, 
                  g_prbe_d[g_detail_idx].prbe003) 
         WHERE prbeent = g_enterprise AND prbedocno = ps_keys_bak[1] AND prbeseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("prbe_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("prbe_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
