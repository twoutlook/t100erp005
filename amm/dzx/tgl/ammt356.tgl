#該程式已解開Section, 不再透過樣板產出!
{<section id="ammt356.description" >}
#+ Version..: T100-ERP-1.00.00(版次:1) Build-000061
#+ 
#+ Filename...: ammt356
#+ Description: 會員卡折扣規則申請維護作業
#+ Creator....: 03247(2014/04/03)
#+ Modifier...: 03247(2014/04/10)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="ammt356.global" >}
{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbo_m        RECORD
       mmbo000 LIKE mmbo_t.mmbo000, 
   mmbodocno LIKE mmbo_t.mmbodocno, 
   mmbodocdt LIKE mmbo_t.mmbodocdt, 
   mmbo004 LIKE mmbo_t.mmbo004, 
   mmbo006 LIKE mmbo_t.mmbo006, 
   mmbo003 LIKE mmbo_t.mmbo003, 
   mmbo001 LIKE mmbo_t.mmbo001, 
   mmbo002 LIKE mmbo_t.mmbo002, 
   mmbol002 LIKE mmbol_t.mmbol002, 
   mmbol003 LIKE mmbol_t.mmbol003, 
   mmbo005 LIKE mmbo_t.mmbo005, 
   mmbo005_desc LIKE type_t.chr80, 
   mmbo007 LIKE mmbo_t.mmbo007, 
   mmbo008 LIKE mmbo_t.mmbo008, 
   mmbo014 LIKE mmbo_t.mmbo014, 
   mmbo015 LIKE mmbo_t.mmbo015, 
   mmbo017 LIKE mmbo_t.mmbo017,  
   mmbo018 LIKE mmbo_t.mmbo018,   
   mmbosite LIKE mmbo_t.mmbosite, 
   mmbosite_desc LIKE type_t.chr80, 
   mmboacti LIKE mmbo_t.mmboacti, 
   mmbounit LIKE mmbo_t.mmbounit, 
   mmbostus LIKE mmbo_t.mmbostus, 
   mmboownid LIKE mmbo_t.mmboownid, 
   mmboownid_desc LIKE type_t.chr80, 
   mmboowndp LIKE mmbo_t.mmboowndp, 
   mmboowndp_desc LIKE type_t.chr80, 
   mmbocrtid LIKE mmbo_t.mmbocrtid, 
   mmbocrtid_desc LIKE type_t.chr80, 
   mmbocrtdp LIKE mmbo_t.mmbocrtdp, 
   mmbocrtdp_desc LIKE type_t.chr80, 
   mmbocrtdt DATETIME YEAR TO SECOND, 
   mmbomodid LIKE mmbo_t.mmbomodid, 
   mmbomodid_desc LIKE type_t.chr80, 
   mmbomoddt DATETIME YEAR TO SECOND, 
   mmbocnfid LIKE mmbo_t.mmbocnfid, 
   mmbocnfid_desc LIKE type_t.chr80, 
   mmbocnfdt DATETIME YEAR TO SECOND, 
   mmcp004_1 LIKE type_t.chr80, 
   mmcp011_1 LIKE type_t.chr80, 
   mmcp013_1 LIKE type_t.chr80, 
   mmcp015_1 LIKE type_t.chr80, 
   mmcp004_1_desc LIKE type_t.chr80, 
   mmcp012_1 LIKE type_t.chr80, 
   mmcp014_1 LIKE type_t.chr80, 
   mmcp016_1 LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmco_d        RECORD
       mmcounit LIKE mmco_t.mmcounit, 
   mmcosite LIKE mmco_t.mmcosite, 
   mmco001 LIKE mmco_t.mmco001, 
   mmco002 LIKE mmco_t.mmco002, 
   mmco003 LIKE mmco_t.mmco003, 
   mmco004 LIKE mmco_t.mmco004, 
   mmco004_desc LIKE type_t.chr80, 
   mmco005 LIKE mmco_t.mmco005, 
   mmcoacti LIKE mmco_t.mmcoacti
       END RECORD
PRIVATE TYPE type_g_mmco2_d RECORD
       mmbsunit LIKE mmbs_t.mmbsunit, 
   mmbssite LIKE mmbs_t.mmbssite, 
   mmbs001 LIKE mmbs_t.mmbs001, 
   mmbs002 LIKE mmbs_t.mmbs002, 
   mmbs003 LIKE mmbs_t.mmbs003, 
   mmbs004 LIKE mmbs_t.mmbs004, 
   mmbs004_desc LIKE type_t.chr500, 
   mmbs005 LIKE mmbs_t.mmbs005, 
   mmbsacti LIKE mmbs_t.mmbsacti
       END RECORD
PRIVATE TYPE type_g_mmco3_d RECORD
       mmcpunit LIKE mmcp_t.mmcpunit, 
   mmcpsite LIKE mmcp_t.mmcpsite, 
   mmcp001 LIKE mmcp_t.mmcp001, 
   mmcp002 LIKE mmcp_t.mmcp002, 
   mmcp003 LIKE mmcp_t.mmcp003, 
   mmcp004 LIKE mmcp_t.mmcp004, 
   mmcp004_desc LIKE type_t.chr80, 
   mmcp005 LIKE mmcp_t.mmcp005, 
   mmcp006 LIKE mmcp_t.mmcp006, 
   mmcp007 LIKE mmcp_t.mmcp007, 
   mmcp008 LIKE mmcp_t.mmcp008, 
   mmcp009 LIKE mmcp_t.mmcp009, 
   mmcp010 LIKE mmcp_t.mmcp010, 
   mmcp011 LIKE mmcp_t.mmcp011, 
   mmcp012 LIKE mmcp_t.mmcp012, 
   mmcp013 LIKE mmcp_t.mmcp013, 
   mmcp014 LIKE mmcp_t.mmcp014, 
   mmcp015 LIKE mmcp_t.mmcp015, 
   mmcp016 LIKE mmcp_t.mmcp016, 
   mmcpacti LIKE mmcp_t.mmcpacti
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmbo_m          type_g_mmbo_m
DEFINE g_mmbo_m_t        type_g_mmbo_m
 
   DEFINE g_mmbodocno_t LIKE mmbo_t.mmbodocno
 
 
DEFINE g_mmco_d          DYNAMIC ARRAY OF type_g_mmco_d
DEFINE g_mmco_d_t        type_g_mmco_d
DEFINE g_mmco2_d   DYNAMIC ARRAY OF type_g_mmco2_d
DEFINE g_mmco2_d_t type_g_mmco2_d
DEFINE g_mmco3_d   DYNAMIC ARRAY OF type_g_mmco3_d
DEFINE g_mmco3_d_t type_g_mmco3_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
      b_statepic     LIKE type_t.chr50,
     #b_mmbounit LIKE mmbo_t.mmbounit, #sakura mark
      b_mmbosite LIKE mmbo_t.mmbosite, #sakura add
     #b_mmbounit_desc LIKE type_t.chr80, #sakura mark
      b_mmbosite_desc LIKE type_t.chr80, #sakura add
      b_mmbodocdt LIKE mmbo_t.mmbodocdt,      
      b_mmbodocno LIKE mmbo_t.mmbodocno,
      b_mmbo000 LIKE mmbo_t.mmbo000,
      b_mmbo004 LIKE mmbo_t.mmbo004,
      b_mmbo006 LIKE mmbo_t.mmbo006,      
      b_mmbo001 LIKE mmbo_t.mmbo001,
      b_mmbo002 LIKE mmbo_t.mmbo002,
      b_mmbo005 LIKE mmbo_t.mmbo005,
      b_mmbo005_desc LIKE type_t.chr80,
      b_mmbo007 LIKE mmbo_t.mmbo007,
      b_mmbo008 LIKE mmbo_t.mmbo008,
      b_mmbo014 LIKE mmbo_t.mmbo014,
      b_mmbo015 LIKE mmbo_t.mmbo015,
      b_mmboacti LIKE mmbo_t.mmboacti
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
      b_statepic     LIKE type_t.chr50,
     #b_mmbounit LIKE mmbo_t.mmbounit, #sakura mark
      b_mmbosite LIKE mmbo_t.mmbosite, #sakura add
     #b_mmbounit_desc LIKE type_t.chr80, #sakura mark
      b_mmbosite_desc LIKE type_t.chr80, #sakura add
      b_mmbodocdt LIKE mmbo_t.mmbodocdt,      
      b_mmbodocno LIKE mmbo_t.mmbodocno,
      b_mmbo000 LIKE mmbo_t.mmbo000,
      b_mmbo004 LIKE mmbo_t.mmbo004,
      b_mmbo006 LIKE mmbo_t.mmbo006,      
      b_mmbo001 LIKE mmbo_t.mmbo001,
      b_mmbo002 LIKE mmbo_t.mmbo002,
      b_mmbo005 LIKE mmbo_t.mmbo005,
      b_mmbo005_desc LIKE type_t.chr80,
      b_mmbo007 LIKE mmbo_t.mmbo007,
      b_mmbo008 LIKE mmbo_t.mmbo008,
      b_mmbo014 LIKE mmbo_t.mmbo014,
      b_mmbo015 LIKE mmbo_t.mmbo015,
      b_mmboacti LIKE mmbo_t.mmboacti
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      mmboldocno LIKE mmbol_t.mmboldocno,
      mmbol002 LIKE mmbol_t.mmbol002,
      mmbol003 LIKE mmbol_t.mmbol003
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
#DEFINE g_rec_b               LIKE type_t.num5             #單身筆數   #161108-00016#1   2016/11/09  by 08742 mark                      
DEFINE g_rec_b               LIKE type_t.num10             #單身筆數    #161108-00016#1   2016/11/09  by 08742 add           
#DEFINE l_ac                  LIKE type_t.num5             #161108-00016#1   2016/11/09  by 08742 mark       
DEFINE l_ac                  LIKE type_t.num10             #161108-00016#1   2016/11/09  by 08742 add      
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
#DEFINE g_pagestart           LIKE type_t.num5             #161108-00016#1   2016/11/09  by 08742 mark 
DEFINE g_pagestart           LIKE type_t.num10             #161108-00016#1   2016/11/09  by 08742 add            
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
#161108-00016#1   2016/11/09  by 08742 -S
#DEFINE g_detail_cnt          LIKE type_t.num5             #單身總筆數 
#DEFINE g_detail_idx          LIKE type_t.num5             #單身目前所在筆數
#DEFINE g_detail_idx2         LIKE type_t.num5             #單身2目前所在筆數
#DEFINE g_browser_cnt         LIKE type_t.num5             #Browser總筆數
#DEFINE g_browser_idx         LIKE type_t.num5             #Browser目前所在筆數
#DEFINE g_temp_idx            LIKE type_t.num5             #Browser目前所在筆數(暫存用)
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數  
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
#161108-00016#1   2016/11/09  by 08742 -E
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
#DEFINE g_current_row         LIKE type_t.num5             #Browser 所在筆數(暫存用) #161108-00016#1   2016/11/09  by 08742 mark
DEFINE g_current_row         LIKE type_t.num10             #Browser 所在筆數(暫存用) #161108-00016#1   2016/11/09  by 08742 add
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
#DEFINE g_current_page        LIKE type_t.num5             #目前所在頁數 #161108-00016#1   2016/11/09  by 08742 mark
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數 #161108-00016#1   2016/11/09  by 08742 add
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="ammt356.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo006,mmbo003,mmbo001,mmbo002,'', 
       '',mmbo005,'',mmbo007,mmbo008,mmbo014,mmbo015,mmbo017,mmbosite,'',mmboacti,mmbounit,mmbostus,mmboownid, 
       '',mmboowndp,'',mmbocrtid,'',mmbocrtdp,'',mmbocrtdt,mmbomodid,'',mmbomoddt,mmbocnfid,'',mmbocnfdt, 
       '','','','','','','','' FROM mmbo_t WHERE mmboent= ? AND mmbodocno=? FOR UPDATE"
   #add-point:SQL_define
{<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE ammt356_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo006,mmbo003,mmbo001,mmbo002,mmbo005, 
       mmbo007,mmbo008,mmbo014,mmbo015,mmbo017,mmbosite,mmboacti,mmbounit,mmbostus,mmboownid,mmboowndp,mmbocrtid, 
       mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid,mmbocnfdt",
               " FROM mmbo_t",
               " WHERE mmboent = '" ||g_enterprise|| "' AND mmbodocno = ?"
   #add-point:SQL_define
{<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt356_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt356 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt356_init()   
 
      #進入選單 Menu (="N")
      CALL ammt356_ui_dialog() 
      
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt356
      
   END IF 
   
   CLOSE ammt356_cl
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="ammt356.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt356_init()
   #add-point:init段define
{<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx3 = 1       #160613-00031#4 Add By Ken 160617
   LET g_detail_idx4 = 1       #160613-00031#4 Add By Ken 160617
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmbostus','13','N,X,Y')
 
      CALL cl_set_combo_scc('mmbo000','32') 
   CALL cl_set_combo_scc('mmbo004','6516') 
   CALL cl_set_combo_scc('mmbo007','6517') 
   CALL cl_set_combo_scc('mmbo008','6517') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
{<point name="init.init"/>}
   #end add-point
   
   CALL ammt356_default_search()
    
END FUNCTION

{</section>}

{<section id="ammt356.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION ammt356_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt356_insert()
            #add-point:ON ACTION insert
{<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
{<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt356_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmbodocno = g_mmbodocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt356_fetch('') # reload data
               LET l_ac = 1
               CALL ammt356_ui_detailshow() #Setting the current row 
      
               CALL ammt356_idx_chk()
               #NEXT FIELD mmco003
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmco_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt356_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmco2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammt356_idx_chk()
               #add-point:page2自定義行為
{<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmco3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               #LET g_detail_idx = l_ac       #160613-00031#4 Mark By Ken 160617
               LET g_detail_idx3 = l_ac       #160613-00031#4 Add By Ken 160617
               #add-point:page3, before row動作
{<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #CALL FGL_SET_ARR_CURR(g_detail_idx)    #160613-00031#4 Mark By Ken 160617
               CALL FGL_SET_ARR_CURR(g_detail_idx3)    #160613-00031#4 Add By Ken 160617
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL ammt356_idx_chk()
               #add-point:page3自定義行為
{<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
{<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt356_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt356_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt356_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmco003
            END IF
        
         ON ACTION statechange
            CALL ammt356_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt356_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt356_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "-100"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLEAR FORM
               ELSE
                  CALL ammt356_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
{<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt356_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt356_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt356_idx_chk()
            
         ON ACTION previous
            CALL ammt356_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt356_idx_chk()
            
         ON ACTION jump
            CALL ammt356_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt356_idx_chk()
            
         ON ACTION next
            CALL ammt356_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt356_idx_chk()
            
         ON ACTION last
            CALL ammt356_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt356_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL ammt356_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION exclude
 
            LET g_action_choice="exclude"
            IF cl_auth_chk_act("exclude") THEN 
               #add-point:ON ACTION exclude
{<point name="menu.exclude" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL ammt356_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL ammt356_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL ammt356_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL ammt356_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION remarks
 
            LET g_action_choice="remarks"
            IF cl_auth_chk_act("remarks") THEN 
               #add-point:ON ACTION remarks
{<point name="menu.remarks" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL ammt356_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt356_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt356_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt356_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmbo_m.mmbodocdt)
 
       #sakura---add---str---150107-00009#10
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmco_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_mmco2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_mmco3_d)
                  LET g_export_id[3]   = "s_detail3" 
                  #160613-00031#4 Add By Ken 160617(S)
                  LET g_export_node[4] = base.typeInfo.create(g_mmco4_d)
                  LET g_export_id[4]   = "s_detail4"
                  #160613-00031#4 Add By Ken 160617(E)                  
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF                  
       #sakura---add---end---150107-00009#10  
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="ammt356.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt356_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbo_m.* TO NULL
   CALL g_mmco_d.clear()        
   CALL g_mmco2_d.clear() 
   CALL g_mmco3_d.clear() 
   CALL g_mmco4_d.clear()     #160613-00031#4 Add By Ken 160617
   
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmbodocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
{<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmbodocno ",
 
                        " FROM mmbo_t ",
                              " ",
                              " LEFT JOIN mmco_t ON mmcoent = mmboent AND mmbodocno = mmcodocno ",
                              " LEFT JOIN mmbs_t ON mmbsent = mmboent AND mmbodocno = mmbsdocno", 
 
                              " LEFT JOIN mmcp_t ON mmcpent = mmboent AND mmbodocno = mmcpdocno", 
 
 
 
                              " LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ", 
                              " ", 
                       " WHERE mmboent = '" ||g_enterprise|| "' AND mmcoent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbo_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmbodocno ",
 
                        " FROM mmbo_t ", 
                              " ",
                              " LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ",
                        "WHERE mmboent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmbo_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照mmbodocno,mmbodocdt,mmbo000,mmbo001,mmbo002,mmbo004,mmbo005,'',mmbo006,mmbo007,mmbo008,mmbo014,mmbo015,mmbounit,'',mmboacti Browser欄位定義(取代原本bs_sql功能)
     #skaura---mark---str 
     #LET l_sql_rank = "SELECT DISTINCT mmbostus,mmbodocno,mmbodocdt,mmbo000,mmbo001,mmbo002,mmbo004, 
     #    mmbo005,'',mmbo006,mmbo007,mmbo008,mmbo014,mmbo015,mmbounit,'',mmboacti,DENSE_RANK() OVER(ORDER BY mmbodocno ", 
     #    g_order,") AS RANK ",
     #sakura---mark---end
      LET l_sql_rank = "SELECT DISTINCT mmbostus,mmbosite,'',mmbodocdt,mmbodocno,mmbo000,mmbo004,mmbo006,mmbo001,mmbo002, 
          mmbo005,'',mmbo007,mmbo008,mmbo014,mmbo015,mmboacti,DENSE_RANK() OVER(ORDER BY mmbodocno ", 
          g_order,") AS RANK ",     
                        " FROM mmbo_t ",
                              " ",
                              " LEFT JOIN mmco_t ON mmcoent = mmboent AND mmbodocno = mmcodocno ",
                              " LEFT JOIN mmbs_t ON mmbsent = mmboent AND mmbodocno = mmbsdocno",
 
                              " LEFT JOIN mmcp_t ON mmcpent = mmboent AND mmbodocno = mmcpdocno",
 
 
 
                              " LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE mmboent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("mmbo_t")
   ELSE
      #單身無輸入資料
     #sakura---mark---str
     #LET l_sql_rank = "SELECT DISTINCT mmbostus,mmbodocno,mmbodocdt,mmbo000,mmbo001,mmbo002,mmbo004, 
     #    mmbo005,'',mmbo006,mmbo007,mmbo008,mmbo014,mmbo015,mmbounit,'',mmboacti,DENSE_RANK() OVER(ORDER BY mmbodocno ", 
     #    g_order,") AS RANK ",
     #sakura---mark---end
      LET l_sql_rank = "SELECT DISTINCT mmbostus,mmbosite,'',mmbodocdt,mmbodocno,mmbo000,mmbo004,mmbo006,mmbo001,mmbo002, 
          mmbo005,'',mmbo007,mmbo008,mmbo014,mmbo015,mmboacti,DENSE_RANK() OVER(ORDER BY mmbodocno ", 
          g_order,") AS RANK ",     
                       " FROM mmbo_t ",
                            "  ",
                            "  LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ",
                       " WHERE mmboent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("mmbo_t")
   END IF
   
   #定義翻頁CURSOR
  #sakura---mark---str
  #LET g_sql= "SELECT mmbostus,mmbodocno,mmbodocdt,mmbo000,mmbo001,mmbo002,mmbo004,mmbo005,'',mmbo006, 
  #    mmbo007,mmbo008,mmbo014,mmbo015,mmbounit,'',mmboacti FROM (",l_sql_rank,") WHERE ",
  #sakura---mark---end
   LET g_sql= "SELECT DISTINCT mmbostus,mmbosite,'',mmbodocdt,mmbodocno,mmbo000,mmbo004,mmbo006,mmbo001,mmbo002,
       mmbo005,'',mmbo007,mmbo008,mmbo014,mmbo015,mmboacti FROM (",l_sql_rank,") WHERE ",  
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
{<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
{<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
  #sakura---mark---str
  #FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbodocno,g_browser[g_cnt].b_mmbodocdt, 
  #    g_browser[g_cnt].b_mmbo000,g_browser[g_cnt].b_mmbo001,g_browser[g_cnt].b_mmbo002,g_browser[g_cnt].b_mmbo004, 
  #    g_browser[g_cnt].b_mmbo005,g_browser[g_cnt].b_mmbo005_desc,g_browser[g_cnt].b_mmbo006,g_browser[g_cnt].b_mmbo007, 
  #    g_browser[g_cnt].b_mmbo008,g_browser[g_cnt].b_mmbo014,g_browser[g_cnt].b_mmbo015,g_browser[g_cnt].b_mmbounit, 
  #    g_browser[g_cnt].b_mmbounit_desc,g_browser[g_cnt].b_mmboacti
  #sakura---mark---str       
  #sakura---add---str    
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbosite,g_browser[g_cnt].b_mmbosite_desc,
       g_browser[g_cnt].b_mmbodocdt,g_browser[g_cnt].b_mmbodocno,g_browser[g_cnt].b_mmbo000,g_browser[g_cnt].b_mmbo004, 
       g_browser[g_cnt].b_mmbo006,g_browser[g_cnt].b_mmbo001,g_browser[g_cnt].b_mmbo002,g_browser[g_cnt].b_mmbo005, 
       g_browser[g_cnt].b_mmbo005_desc,g_browser[g_cnt].b_mmbo007,g_browser[g_cnt].b_mmbo008,g_browser[g_cnt].b_mmbo014, 
       g_browser[g_cnt].b_mmbo015,g_browser[g_cnt].b_mmboacti 
  #sakura---add---end       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmbo005
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmbo005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmbo005_desc
 
      INITIALIZE g_ref_fields TO NULL
     #LET g_ref_fields[1] = g_browser[g_cnt].b_mmbounit #sakura mark
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmbosite #sakura add
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
     #LET g_browser[g_cnt].b_mmbounit_desc = '', g_rtn_fields[1] , '' #sakura mark
      LET g_browser[g_cnt].b_mmbosite_desc = '', g_rtn_fields[1] , '' #sakura add
     #DISPLAY BY NAME g_browser[g_cnt].b_mmbounit_desc #sakura mark
      DISPLAY BY NAME g_browser[g_cnt].b_mmbosite_desc #sakura add
 
  
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION

{</section>}

{<section id="ammt356.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt356_ui_headershow()
   #add-point:ui_headershow段define
{<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmbo_m.mmbodocno = g_browser[g_current_idx].b_mmbodocno   
 
   EXECUTE ammt356_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006,g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002, 
       g_mmbo_m.mmbo005,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid, 
       g_mmbo_m.mmbocnfdt
   CALL ammt356_show()
   
END FUNCTION

{</section>}

{<section id="ammt356.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION ammt356_ui_detailshow()
   #add-point:ui_detailshow段define
{<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
{<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      #CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      #160613-00031#4 Add By Ken 160617(S)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx3)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx4)
      #160613-00031#4 Add By Ken 160617(E)
   END IF
   
   #add-point:ui_detailshow段after
{<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="ammt356.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt356_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbodocno = g_mmbo_m.mmbodocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="ammt356.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION ammt356_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbo_m.* TO NULL
   CALL g_mmco_d.clear()        
   CALL g_mmco2_d.clear() 
 
   CALL g_mmco3_d.clear() 
   CALL g_mmco4_d.clear()    #160613-00031#4 Add By Ken 160617
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
{<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbo000,mmbodocno,mmbodocdt,mmbo006,mmbo003,mmbo001,mmbo002,mmbol002, 
          mmbol003,mmbo005,mmbo007,mmbo008,mmbo014,mmbo015,mmbosite,mmboacti,mmbo017,mmbounit,mmbostus,mmboownid, 
          mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid,mmbocnfdt 
          
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmboownid>>----
         #ON ACTION controlp INFIELD mmboownid
         #   CALL q_common('mmbo_t','mmboownid',TRUE,FALSE,g_mmbo_m.mmboownid) RETURNING ls_return
         #   DISPLAY ls_return TO mmboownid
         #   NEXT FIELD mmboownid  
         #
         ##----<<mmboowndp>>----
         #ON ACTION controlp INFIELD mmboowndp
         #   CALL q_common('mmbo_t','mmboowndp',TRUE,FALSE,g_mmbo_m.mmboowndp) RETURNING ls_return
         #   DISPLAY ls_return TO mmboowndp
         #   NEXT FIELD mmboowndp
         #
         ##----<<mmbocrtid>>----
         #ON ACTION controlp INFIELD mmbocrtid
         #   CALL q_common('mmbo_t','mmbocrtid',TRUE,FALSE,g_mmbo_m.mmbocrtid) RETURNING ls_return
         #   DISPLAY ls_return TO mmbocrtid
         #   NEXT FIELD mmbocrtid
         #
         ##----<<mmbocrtdp>>----
         #ON ACTION controlp INFIELD mmbocrtdp
         #   CALL q_common('mmbo_t','mmbocrtdp',TRUE,FALSE,g_mmbo_m.mmbocrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO mmbocrtdp
         #   NEXT FIELD mmbocrtdp
         #
         ##----<<mmbomodid>>----
         #ON ACTION controlp INFIELD mmbomodid
         #   CALL q_common('mmbo_t','mmbomodid',TRUE,FALSE,g_mmbo_m.mmbomodid) RETURNING ls_return
         #   DISPLAY ls_return TO mmbomodid
         #   NEXT FIELD mmbomodid
         #
         ##----<<mmbocnfid>>----
         #ON ACTION controlp INFIELD mmbocnfid
         #   CALL q_common('mmbo_t','mmbocnfid',TRUE,FALSE,g_mmbo_m.mmbocnfid) RETURNING ls_return
         #   DISPLAY ls_return TO mmbocnfid
         #   NEXT FIELD mmbocnfid
         #
         ##----<<mmbopstid>>----
         ##ON ACTION controlp INFIELD mmbopstid
         ##   CALL q_common('mmbo_t','mmbopstid',TRUE,FALSE,g_mmbo_m.mmbopstid) RETURNING ls_return
         ##   DISPLAY ls_return TO mmbopstid
         ##   NEXT FIELD mmbopstid
         
         ##----<<mmbocrtdt>>----
         AFTER FIELD mmbocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbomoddt>>----
         AFTER FIELD mmbomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbocnfdt>>----
         AFTER FIELD mmbocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbopstdt>>----
         #AFTER FIELD mmbopstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<mmbo000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo000
            #add-point:BEFORE FIELD mmbo000
{<point name="construct.b.mmbo000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo000
            
            #add-point:AFTER FIELD mmbo000
{<point name="construct.a.mmbo000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo000
         ON ACTION controlp INFIELD mmbo000
            #add-point:ON ACTION controlp INFIELD mmbo000
{<point name="construct.c.mmbo000" />}
            #END add-point
 
         #----<<mmbodocno>>----
         #Ctrlp:construct.c.mmbodocno
         ON ACTION controlp INFIELD mmbodocno
            #add-point:ON ACTION controlp INFIELD mmbodocno
{<point name="construct.c.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocno
            #add-point:BEFORE FIELD mmbodocno
{<point name="construct.b.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocno
            
            #add-point:AFTER FIELD mmbodocno
{<point name="construct.a.mmbodocno" />}
            #END add-point
            
 
         #----<<mmbodocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocdt
            #add-point:BEFORE FIELD mmbodocdt
{<point name="construct.b.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocdt
            
            #add-point:AFTER FIELD mmbodocdt
{<point name="construct.a.mmbodocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbodocdt
         ON ACTION controlp INFIELD mmbodocdt
            #add-point:ON ACTION controlp INFIELD mmbodocdt
{<point name="construct.c.mmbodocdt" />}
            #END add-point
 
         #----<<mmbo004>>----
         #此段落由子樣板a01產生
       # BEFORE FIELD mmbo004
       #    #add-point:BEFORE FIELD mmbo004
{<point name="construct.b.mmbo004" />}
       #    #END add-point
       #
       # #此段落由子樣板a02產生
       # AFTER FIELD mmbo004
       #    
       #    #add-point:AFTER FIELD mmbo004
{<point name="construct.a.mmbo004" />}
       #    #END add-point
       #    
       #
       # #Ctrlp:construct.c.mmbo004
       # ON ACTION controlp INFIELD mmbo004
            #add-point:ON ACTION controlp INFIELD mmbo004
{<point name="construct.c.mmbo004" />}
            #END add-point
 
         #----<<mmbo006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo006
            #add-point:BEFORE FIELD mmbo006
{<point name="construct.b.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo006
            
            #add-point:AFTER FIELD mmbo006
{<point name="construct.a.mmbo006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo006
         ON ACTION controlp INFIELD mmbo006
            #add-point:ON ACTION controlp INFIELD mmbo006
{<point name="construct.c.mmbo006" />}
            #END add-point
 
         #----<<mmbo001>>----
         #Ctrlp:construct.c.mmbo001
         ON ACTION controlp INFIELD mmbo001
            #add-point:ON ACTION controlp INFIELD mmbo001
{<point name="construct.c.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo001
            #add-point:BEFORE FIELD mmbo001
{<point name="construct.b.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo001
            
            #add-point:AFTER FIELD mmbo001
{<point name="construct.a.mmbo001" />}
            #END add-point
            
 
         #----<<mmbo002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo002
            #add-point:BEFORE FIELD mmbo002
{<point name="construct.b.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo002
            
            #add-point:AFTER FIELD mmbo002
{<point name="construct.a.mmbo002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo002
         ON ACTION controlp INFIELD mmbo002
            #add-point:ON ACTION controlp INFIELD mmbo002
{<point name="construct.c.mmbo002" />}
            #END add-point
 
         #----<<mmbol002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol002
            #add-point:BEFORE FIELD mmbol002
{<point name="construct.b.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol002
            
            #add-point:AFTER FIELD mmbol002
{<point name="construct.a.mmbol002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbol002
         ON ACTION controlp INFIELD mmbol002
            #add-point:ON ACTION controlp INFIELD mmbol002
{<point name="construct.c.mmbol002" />}
            #END add-point
 
         #----<<mmbol003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol003
            #add-point:BEFORE FIELD mmbol003
{<point name="construct.b.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol003
            
            #add-point:AFTER FIELD mmbol003
{<point name="construct.a.mmbol003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbol003
         ON ACTION controlp INFIELD mmbol003
            #add-point:ON ACTION controlp INFIELD mmbol003
{<point name="construct.c.mmbol003" />}
            #END add-point
 
         #----<<mmbo005>>----
         #Ctrlp:construct.c.mmbo005
         ON ACTION controlp INFIELD mmbo005
            #add-point:ON ACTION controlp INFIELD mmbo005
{<point name="construct.c.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo005
            #add-point:BEFORE FIELD mmbo005
{<point name="construct.b.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo005
            
            #add-point:AFTER FIELD mmbo005
{<point name="construct.a.mmbo005" />}
            #END add-point
            
 
         #----<<mmbo007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo007
            #add-point:BEFORE FIELD mmbo007
{<point name="construct.b.mmbo007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo007
            
            #add-point:AFTER FIELD mmbo007
{<point name="construct.a.mmbo007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo007
         ON ACTION controlp INFIELD mmbo007
            #add-point:ON ACTION controlp INFIELD mmbo007
{<point name="construct.c.mmbo007" />}
            #END add-point
 
         #----<<mmbo008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo008
            #add-point:BEFORE FIELD mmbo008
{<point name="construct.b.mmbo008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo008
            
            #add-point:AFTER FIELD mmbo008
{<point name="construct.a.mmbo008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo008
         ON ACTION controlp INFIELD mmbo008
            #add-point:ON ACTION controlp INFIELD mmbo008
{<point name="construct.c.mmbo008" />}
            #END add-point
 
         #----<<mmbo014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo014
            #add-point:BEFORE FIELD mmbo014
{<point name="construct.b.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo014
            
            #add-point:AFTER FIELD mmbo014
{<point name="construct.a.mmbo014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo014
         ON ACTION controlp INFIELD mmbo014
            #add-point:ON ACTION controlp INFIELD mmbo014
{<point name="construct.c.mmbo014" />}
            #END add-point
 
         #----<<mmbo015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo015
            #add-point:BEFORE FIELD mmbo015
{<point name="construct.b.mmbo015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo015
            
            #add-point:AFTER FIELD mmbo015
{<point name="construct.a.mmbo015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo015
         ON ACTION controlp INFIELD mmbo015
            #add-point:ON ACTION controlp INFIELD mmbo015
{<point name="construct.c.mmbo015" />}
            #END add-point
 
         #----<<mmbosite>>----
         #Ctrlp:construct.c.mmbosite
         ON ACTION controlp INFIELD mmbosite
            #add-point:ON ACTION controlp INFIELD mmbosite
{<point name="construct.c.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbosite
            #add-point:BEFORE FIELD mmbosite
{<point name="construct.b.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbosite
            
            #add-point:AFTER FIELD mmbosite
{<point name="construct.a.mmbosite" />}
            #END add-point
            
 
         #----<<mmboacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmboacti
            #add-point:BEFORE FIELD mmboacti
{<point name="construct.b.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboacti
            
            #add-point:AFTER FIELD mmboacti
{<point name="construct.a.mmboacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmboacti
         ON ACTION controlp INFIELD mmboacti
            #add-point:ON ACTION controlp INFIELD mmboacti
{<point name="construct.c.mmboacti" />}
            #END add-point
 
         #----<<mmbounit>>----
         #Ctrlp:construct.c.mmbounit
         ON ACTION controlp INFIELD mmbounit
            #add-point:ON ACTION controlp INFIELD mmbounit
{<point name="construct.c.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbounit
            #add-point:BEFORE FIELD mmbounit
{<point name="construct.b.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbounit
            
            #add-point:AFTER FIELD mmbounit
{<point name="construct.a.mmbounit" />}
            #END add-point
            
 
         #----<<mmbostus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbostus
            #add-point:BEFORE FIELD mmbostus
{<point name="construct.b.mmbostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbostus
            
            #add-point:AFTER FIELD mmbostus
{<point name="construct.a.mmbostus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbostus
         ON ACTION controlp INFIELD mmbostus
            #add-point:ON ACTION controlp INFIELD mmbostus
{<point name="construct.c.mmbostus" />}
            #END add-point
 
         #----<<mmboownid>>----
         #Ctrlp:construct.c.mmboownid
         ON ACTION controlp INFIELD mmboownid
            #add-point:ON ACTION controlp INFIELD mmboownid
{<point name="construct.c.mmboownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboownid
            #add-point:BEFORE FIELD mmboownid
{<point name="construct.b.mmboownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboownid
            
            #add-point:AFTER FIELD mmboownid
{<point name="construct.a.mmboownid" />}
            #END add-point
            
 
         #----<<mmboowndp>>----
         #Ctrlp:construct.c.mmboowndp
         ON ACTION controlp INFIELD mmboowndp
            #add-point:ON ACTION controlp INFIELD mmboowndp
{<point name="construct.c.mmboowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboowndp
            #add-point:BEFORE FIELD mmboowndp
{<point name="construct.b.mmboowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboowndp
            
            #add-point:AFTER FIELD mmboowndp
{<point name="construct.a.mmboowndp" />}
            #END add-point
            
 
         #----<<mmbocrtid>>----
         #Ctrlp:construct.c.mmbocrtid
         ON ACTION controlp INFIELD mmbocrtid
            #add-point:ON ACTION controlp INFIELD mmbocrtid
{<point name="construct.c.mmbocrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtid
            #add-point:BEFORE FIELD mmbocrtid
{<point name="construct.b.mmbocrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocrtid
            
            #add-point:AFTER FIELD mmbocrtid
{<point name="construct.a.mmbocrtid" />}
            #END add-point
            
 
         #----<<mmbocrtdp>>----
         #Ctrlp:construct.c.mmbocrtdp
         ON ACTION controlp INFIELD mmbocrtdp
            #add-point:ON ACTION controlp INFIELD mmbocrtdp
{<point name="construct.c.mmbocrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtdp
            #add-point:BEFORE FIELD mmbocrtdp
{<point name="construct.b.mmbocrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocrtdp
            
            #add-point:AFTER FIELD mmbocrtdp
{<point name="construct.a.mmbocrtdp" />}
            #END add-point
            
 
         #----<<mmbocrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtdt
            #add-point:BEFORE FIELD mmbocrtdt
{<point name="construct.b.mmbocrtdt" />}
            #END add-point
 
         #----<<mmbomodid>>----
         #Ctrlp:construct.c.mmbomodid
         ON ACTION controlp INFIELD mmbomodid
            #add-point:ON ACTION controlp INFIELD mmbomodid
{<point name="construct.c.mmbomodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbomodid
            #add-point:BEFORE FIELD mmbomodid
{<point name="construct.b.mmbomodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbomodid
            
            #add-point:AFTER FIELD mmbomodid
{<point name="construct.a.mmbomodid" />}
            #END add-point
            
 
         #----<<mmbomoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbomoddt
            #add-point:BEFORE FIELD mmbomoddt
{<point name="construct.b.mmbomoddt" />}
            #END add-point
 
         #----<<mmbocnfid>>----
         #Ctrlp:construct.c.mmbocnfid
         ON ACTION controlp INFIELD mmbocnfid
            #add-point:ON ACTION controlp INFIELD mmbocnfid
{<point name="construct.c.mmbocnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocnfid
            #add-point:BEFORE FIELD mmbocnfid
{<point name="construct.b.mmbocnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocnfid
            
            #add-point:AFTER FIELD mmbocnfid
{<point name="construct.a.mmbocnfid" />}
            #END add-point
            
 
         #----<<mmbocnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocnfdt
            #add-point:BEFORE FIELD mmbocnfdt
{<point name="construct.b.mmbocnfdt" />}
            #END add-point
 
         #----<<mmcp013_1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp013_1
            #add-point:BEFORE FIELD mmcp013_1
{<point name="construct.b.mmcp013_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp013_1
            
            #add-point:AFTER FIELD mmcp013_1
{<point name="construct.a.mmcp013_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcp013_1
         ON ACTION controlp INFIELD mmcp013_1
            #add-point:ON ACTION controlp INFIELD mmcp013_1
{<point name="construct.c.mmcp013_1" />}
            #END add-point
 
         #----<<mmcp014_1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp014_1
            #add-point:BEFORE FIELD mmcp014_1
{<point name="construct.b.mmcp014_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp014_1
            
            #add-point:AFTER FIELD mmcp014_1
{<point name="construct.a.mmcp014_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcp014_1
         ON ACTION controlp INFIELD mmcp014_1
            #add-point:ON ACTION controlp INFIELD mmcp014_1
{<point name="construct.c.mmcp014_1" />}
            #END add-point


         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcounit,mmcosite,mmco001,mmco003,mmco004,mmco005,mmcoacti
           FROM s_detail1[1].mmcounit,s_detail1[1].mmcosite,s_detail1[1].mmco001,s_detail1[1].mmco003, 
               s_detail1[1].mmco004,s_detail1[1].mmco005,s_detail1[1].mmcoacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<mmcounit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcounit
            #add-point:BEFORE FIELD mmcounit
{<point name="construct.b.page1.mmcounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcounit
            
            #add-point:AFTER FIELD mmcounit
{<point name="construct.a.page1.mmcounit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcounit
         ON ACTION controlp INFIELD mmcounit
            #add-point:ON ACTION controlp INFIELD mmcounit
{<point name="construct.c.page1.mmcounit" />}
            #END add-point
 
         #----<<mmcosite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcosite
            #add-point:BEFORE FIELD mmcosite
{<point name="construct.b.page1.mmcosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcosite
            
            #add-point:AFTER FIELD mmcosite
{<point name="construct.a.page1.mmcosite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcosite
         ON ACTION controlp INFIELD mmcosite
            #add-point:ON ACTION controlp INFIELD mmcosite
{<point name="construct.c.page1.mmcosite" />}
            #END add-point
 
         #----<<mmco001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco001
            #add-point:BEFORE FIELD mmco001
{<point name="construct.b.page1.mmco001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco001
            
            #add-point:AFTER FIELD mmco001
{<point name="construct.a.page1.mmco001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmco001
         ON ACTION controlp INFIELD mmco001
            #add-point:ON ACTION controlp INFIELD mmco001
{<point name="construct.c.page1.mmco001" />}
            #END add-point
 
         #----<<mmco003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco003
            #add-point:BEFORE FIELD mmco003
{<point name="construct.b.page1.mmco003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco003
            
            #add-point:AFTER FIELD mmco003
{<point name="construct.a.page1.mmco003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmco003
         ON ACTION controlp INFIELD mmco003
            #add-point:ON ACTION controlp INFIELD mmco003
{<point name="construct.c.page1.mmco003" />}
            #END add-point
 
         #----<<mmco004>>----
         #Ctrlp:construct.c.page1.mmco004
         ON ACTION controlp INFIELD mmco004
            #add-point:ON ACTION controlp INFIELD mmco004
{<point name="construct.c.page1.mmco004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmco004
            #add-point:BEFORE FIELD mmco004
{<point name="construct.b.page1.mmco004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco004
            
            #add-point:AFTER FIELD mmco004
{<point name="construct.a.page1.mmco004" />}
            #END add-point
            
 
         #----<<mmbp005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbp005
            #add-point:BEFORE FIELD mmbp005
{<point name="construct.b.page1.mmbp005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbp005
            
            #add-point:AFTER FIELD mmbp005
{<point name="construct.a.page1.mmbp005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbp005
         ON ACTION controlp INFIELD mmbp005
            #add-point:ON ACTION controlp INFIELD mmbp005
{<point name="construct.c.page1.mmbp005" />}
            #END add-point
 
         #----<<mmbp006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbp006
            #add-point:BEFORE FIELD mmbp006
{<point name="construct.b.page1.mmbp006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbp006
            
            #add-point:AFTER FIELD mmbp006
{<point name="construct.a.page1.mmbp006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbp006
         ON ACTION controlp INFIELD mmbp006
            #add-point:ON ACTION controlp INFIELD mmbp006
{<point name="construct.c.page1.mmbp006" />}
            #END add-point
 
         #----<<mmbp007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbp007
            #add-point:BEFORE FIELD mmbp007
{<point name="construct.b.page1.mmbp007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbp007
            
            #add-point:AFTER FIELD mmbp007
{<point name="construct.a.page1.mmbp007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbp007
         ON ACTION controlp INFIELD mmbp007
            #add-point:ON ACTION controlp INFIELD mmbp007
{<point name="construct.c.page1.mmbp007" />}
            #END add-point
 
         #----<<mmbp008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbp008
            #add-point:BEFORE FIELD mmbp008
{<point name="construct.b.page1.mmbp008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbp008
            
            #add-point:AFTER FIELD mmbp008
{<point name="construct.a.page1.mmbp008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbp008
         ON ACTION controlp INFIELD mmbp008
            #add-point:ON ACTION controlp INFIELD mmbp008
{<point name="construct.c.page1.mmbp008" />}
            #END add-point
 
         #----<<mmcoacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcoacti
            #add-point:BEFORE FIELD mmcoacti
{<point name="construct.b.page1.mmcoacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcoacti
            
            #add-point:AFTER FIELD mmcoacti
{<point name="construct.a.page1.mmcoacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcoacti
         ON ACTION controlp INFIELD mmcoacti
            #add-point:ON ACTION controlp INFIELD mmcoacti
{<point name="construct.c.page1.mmcoacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005,mmbsacti
           FROM s_detail2[1].mmbsunit,s_detail2[1].mmbssite,s_detail2[1].mmbs001,s_detail2[1].mmbs002, 
               s_detail2[1].mmbs003,s_detail2[1].mmbs004,s_detail2[1].mmbs005,s_detail2[1].mmbsacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page2  >---------------------
         #----<<mmbsunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsunit
            #add-point:BEFORE FIELD mmbsunit
{<point name="construct.b.page2.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsunit
            
            #add-point:AFTER FIELD mmbsunit
{<point name="construct.a.page2.mmbsunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbsunit
         ON ACTION controlp INFIELD mmbsunit
            #add-point:ON ACTION controlp INFIELD mmbsunit
{<point name="construct.c.page2.mmbsunit" />}
            #END add-point
 
         #----<<mmbssite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbssite
            #add-point:BEFORE FIELD mmbssite
{<point name="construct.b.page2.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbssite
            
            #add-point:AFTER FIELD mmbssite
{<point name="construct.a.page2.mmbssite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbssite
         ON ACTION controlp INFIELD mmbssite
            #add-point:ON ACTION controlp INFIELD mmbssite
{<point name="construct.c.page2.mmbssite" />}
            #END add-point
 
         #----<<mmbs001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs001
            #add-point:BEFORE FIELD mmbs001
{<point name="construct.b.page2.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs001
            
            #add-point:AFTER FIELD mmbs001
{<point name="construct.a.page2.mmbs001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbs001
         ON ACTION controlp INFIELD mmbs001
            #add-point:ON ACTION controlp INFIELD mmbs001
{<point name="construct.c.page2.mmbs001" />}
            #END add-point
 
         #----<<mmbs002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs002
            #add-point:BEFORE FIELD mmbs002
{<point name="construct.b.page2.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs002
            
            #add-point:AFTER FIELD mmbs002
{<point name="construct.a.page2.mmbs002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbs002
         ON ACTION controlp INFIELD mmbs002
            #add-point:ON ACTION controlp INFIELD mmbs002
{<point name="construct.c.page2.mmbs002" />}
            #END add-point
 
         #----<<mmbs003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs003
            #add-point:BEFORE FIELD mmbs003
{<point name="construct.b.page2.mmbs003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs003
            
            #add-point:AFTER FIELD mmbs003
{<point name="construct.a.page2.mmbs003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbs003
         ON ACTION controlp INFIELD mmbs003
            #add-point:ON ACTION controlp INFIELD mmbs003
{<point name="construct.c.page2.mmbs003" />}
            #END add-point
 
         #----<<mmbs004>>----
         #Ctrlp:construct.c.page2.mmbs004
         ON ACTION controlp INFIELD mmbs004
            #add-point:ON ACTION controlp INFIELD mmbs004
{<point name="construct.c.page2.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs004
            #add-point:BEFORE FIELD mmbs004
{<point name="construct.b.page2.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs004
            
            #add-point:AFTER FIELD mmbs004
{<point name="construct.a.page2.mmbs004" />}
            #END add-point
            
 
         #----<<mmbs005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs005
            #add-point:BEFORE FIELD mmbs005
{<point name="construct.b.page2.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs005
            
            #add-point:AFTER FIELD mmbs005
{<point name="construct.a.page2.mmbs005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbs005
         ON ACTION controlp INFIELD mmbs005
            #add-point:ON ACTION controlp INFIELD mmbs005
{<point name="construct.c.page2.mmbs005" />}
            #END add-point
 
         #----<<mmbsacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsacti
            #add-point:BEFORE FIELD mmbsacti
{<point name="construct.b.page2.mmbsacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsacti
            
            #add-point:AFTER FIELD mmbsacti
{<point name="construct.a.page2.mmbsacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmbsacti
         ON ACTION controlp INFIELD mmbsacti
            #add-point:ON ACTION controlp INFIELD mmbsacti
{<point name="construct.c.page2.mmbsacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp003,mmcp004,mmcp005,mmcp006,mmcp007, 
          mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016,mmcpacti
           FROM s_detail3[1].mmcpunit,s_detail3[1].mmcpsite,s_detail3[1].mmcp001,s_detail3[1].mmcp002, 
               s_detail3[1].mmcp003,s_detail3[1].mmcp004,s_detail3[1].mmcp005,s_detail3[1].mmcp006,s_detail3[1].mmcp007, 
               s_detail3[1].mmcp008,s_detail3[1].mmcp009,s_detail3[1].mmcp010,s_detail3[1].mmcp011,s_detail3[1].mmcp012,
               s_detail3[1].mmcp013,s_detail3[1].mmcp014,s_detail3[1].mmcp015,s_detail3[1].mmcp016,s_detail3[1].mmcpacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page3  >---------------------
         #----<<mmcpunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpunit
            #add-point:BEFORE FIELD mmcpunit
{<point name="construct.b.page3.mmcpunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpunit
            
            #add-point:AFTER FIELD mmcpunit
{<point name="construct.a.page3.mmcpunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcpunit
         ON ACTION controlp INFIELD mmcpunit
            #add-point:ON ACTION controlp INFIELD mmcpunit
{<point name="construct.c.page3.mmcpunit" />}
            #END add-point
 
         #----<<mmcpsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpsite
            #add-point:BEFORE FIELD mmcpsite
{<point name="construct.b.page3.mmcpsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpsite
            
            #add-point:AFTER FIELD mmcpsite
{<point name="construct.a.page3.mmcpsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcpsite
         ON ACTION controlp INFIELD mmcpsite
            #add-point:ON ACTION controlp INFIELD mmcpsite
{<point name="construct.c.page3.mmcpsite" />}
            #END add-point
 
         #----<<mmcp001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp001
            #add-point:BEFORE FIELD mmcp001
{<point name="construct.b.page3.mmcp001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp001
            
            #add-point:AFTER FIELD mmcp001
{<point name="construct.a.page3.mmcp001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp001
         ON ACTION controlp INFIELD mmcp001
            #add-point:ON ACTION controlp INFIELD mmcp001
{<point name="construct.c.page3.mmcp001" />}
            #END add-point
 
         #----<<mmcp002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp002
            #add-point:BEFORE FIELD mmcp002
{<point name="construct.b.page3.mmcp002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp002
            
            #add-point:AFTER FIELD mmcp002
{<point name="construct.a.page3.mmcp002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp002
         ON ACTION controlp INFIELD mmcp002
            #add-point:ON ACTION controlp INFIELD mmcp002
{<point name="construct.c.page3.mmcp002" />}
            #END add-point
 
         #----<<mmcp003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp003
            #add-point:BEFORE FIELD mmcp003
{<point name="construct.b.page3.mmcp003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp003
            
            #add-point:AFTER FIELD mmcp003
{<point name="construct.a.page3.mmcp003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp003
         ON ACTION controlp INFIELD mmcp003
            #add-point:ON ACTION controlp INFIELD mmcp003
{<point name="construct.c.page3.mmcp003" />}
            #END add-point
 
         #----<<mmcp004>>----
         #Ctrlp:construct.c.page3.mmcp004
         ON ACTION controlp INFIELD mmcp004
            #add-point:ON ACTION controlp INFIELD mmcp004
{<point name="construct.c.page3.mmcp004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp004
            #add-point:BEFORE FIELD mmcp004
{<point name="construct.b.page3.mmcp004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp004
            
            #add-point:AFTER FIELD mmcp004
{<point name="construct.a.page3.mmcp004" />}
            #END add-point
            
 
         #----<<mmcp005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp005
            #add-point:BEFORE FIELD mmcp005
{<point name="construct.b.page3.mmcp005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp005
            
            #add-point:AFTER FIELD mmcp005
{<point name="construct.a.page3.mmcp005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp005
         ON ACTION controlp INFIELD mmcp005
            #add-point:ON ACTION controlp INFIELD mmcp005
{<point name="construct.c.page3.mmcp005" />}
            #END add-point
 
         #----<<mmcp006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp006
            #add-point:BEFORE FIELD mmcp006
{<point name="construct.b.page3.mmcp006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp006
            
            #add-point:AFTER FIELD mmcp006
{<point name="construct.a.page3.mmcp006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp006
         ON ACTION controlp INFIELD mmcp006
            #add-point:ON ACTION controlp INFIELD mmcp006
{<point name="construct.c.page3.mmcp006" />}
            #END add-point
 
         #----<<mmcp007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp007
            #add-point:BEFORE FIELD mmcp007
{<point name="construct.b.page3.mmcp007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp007
            
            #add-point:AFTER FIELD mmcp007
{<point name="construct.a.page3.mmcp007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp007
         ON ACTION controlp INFIELD mmcp007
            #add-point:ON ACTION controlp INFIELD mmcp007
{<point name="construct.c.page3.mmcp007" />}
            #END add-point
 
         #----<<mmcp008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp008
            #add-point:BEFORE FIELD mmcp008
{<point name="construct.b.page3.mmcp008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp008
            
            #add-point:AFTER FIELD mmcp008
{<point name="construct.a.page3.mmcp008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp008
         ON ACTION controlp INFIELD mmcp008
            #add-point:ON ACTION controlp INFIELD mmcp008
{<point name="construct.c.page3.mmcp008" />}
            #END add-point
 
         #----<<mmcp009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp009
            #add-point:BEFORE FIELD mmcp009
{<point name="construct.b.page3.mmcp009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp009
            
            #add-point:AFTER FIELD mmcp009
{<point name="construct.a.page3.mmcp009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp009
         ON ACTION controlp INFIELD mmcp009
            #add-point:ON ACTION controlp INFIELD mmcp009
{<point name="construct.c.page3.mmcp009" />}
            #END add-point
 
         #----<<mmbr010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbr010
            #add-point:BEFORE FIELD mmbr010
{<point name="construct.b.page3.mmbr010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbr010
            
            #add-point:AFTER FIELD mmbr010
{<point name="construct.a.page3.mmbr010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbr010
         ON ACTION controlp INFIELD mmbr010
            #add-point:ON ACTION controlp INFIELD mmbr010
{<point name="construct.c.page3.mmbr010" />}
            #END add-point
 
         #----<<mmbr011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbr011
            #add-point:BEFORE FIELD mmbr011
{<point name="construct.b.page3.mmbr011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbr011
            
            #add-point:AFTER FIELD mmbr011
{<point name="construct.a.page3.mmbr011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbr011
         ON ACTION controlp INFIELD mmbr011
            #add-point:ON ACTION controlp INFIELD mmbr011
{<point name="construct.c.page3.mmbr011" />}
            #END add-point
 
         #----<<mmbr012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbr012
            #add-point:BEFORE FIELD mmbr012
{<point name="construct.b.page3.mmbr012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbr012
            
            #add-point:AFTER FIELD mmbr012
{<point name="construct.a.page3.mmbr012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbr012
         ON ACTION controlp INFIELD mmbr012
            #add-point:ON ACTION controlp INFIELD mmbr012
{<point name="construct.c.page3.mmbr012" />}
            #END add-point
 
         #----<<mmbr013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbr013
            #add-point:BEFORE FIELD mmbr013
{<point name="construct.b.page3.mmbr013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbr013
            
            #add-point:AFTER FIELD mmbr013
{<point name="construct.a.page3.mmbr013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbr013
         ON ACTION controlp INFIELD mmbr013
            #add-point:ON ACTION controlp INFIELD mmbr013
{<point name="construct.c.page3.mmbr013" />}
            #END add-point
 
         #----<<mmcp011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp011
            #add-point:BEFORE FIELD mmcp011
{<point name="construct.b.page3.mmcp011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp011
            
            #add-point:AFTER FIELD mmcp011
{<point name="construct.a.page3.mmcp011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp011
         ON ACTION controlp INFIELD mmcp011
            #add-point:ON ACTION controlp INFIELD mmcp011
{<point name="construct.c.page3.mmcp011" />}
            #END add-point
 
         #----<<mmcp012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp012
            #add-point:BEFORE FIELD mmcp012
{<point name="construct.b.page3.mmcp012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp012
            
            #add-point:AFTER FIELD mmcp012
{<point name="construct.a.page3.mmcp012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp012
         ON ACTION controlp INFIELD mmcp012
            #add-point:ON ACTION controlp INFIELD mmcp012
{<point name="construct.c.page3.mmcp012" />}
            #END add-point
 
         #----<<mmcp013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp013
            #add-point:BEFORE FIELD mmcp013
{<point name="construct.b.page3.mmcp013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp013
            
            #add-point:AFTER FIELD mmcp013
{<point name="construct.a.page3.mmcp013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp013
         ON ACTION controlp INFIELD mmcp013
            #add-point:ON ACTION controlp INFIELD mmcp013
{<point name="construct.c.page3.mmcp013" />}
            #END add-point
 
         #----<<mmcp014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp014
            #add-point:BEFORE FIELD mmcp014
{<point name="construct.b.page3.mmcp014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp014
            
            #add-point:AFTER FIELD mmcp014
{<point name="construct.a.page3.mmcp014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp014
         ON ACTION controlp INFIELD mmcp014
            #add-point:ON ACTION controlp INFIELD mmcp014
{<point name="construct.c.page3.mmcp014" />}
            #END add-point
 
         #----<<mmcp015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp015
            #add-point:BEFORE FIELD mmcp015
{<point name="construct.b.page3.mmcp015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp015
            
            #add-point:AFTER FIELD mmcp015
{<point name="construct.a.page3.mmcp015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp015
         ON ACTION controlp INFIELD mmcp015
            #add-point:ON ACTION controlp INFIELD mmcp015
{<point name="construct.c.page3.mmcp015" />}
            #END add-point
 
         #----<<mmcp016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp016
            #add-point:BEFORE FIELD mmcp016
{<point name="construct.b.page3.mmcp016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp016
            
            #add-point:AFTER FIELD mmcp016
{<point name="construct.a.page3.mmcp016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcp016
         ON ACTION controlp INFIELD mmcp016
            #add-point:ON ACTION controlp INFIELD mmcp016
{<point name="construct.c.page3.mmcp016" />}
            #END add-point
 
         #----<<mmcpacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpacti
            #add-point:BEFORE FIELD mmcpacti
{<point name="construct.b.page3.mmcpacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpacti
            
            #add-point:AFTER FIELD mmcpacti
{<point name="construct.a.page3.mmcpacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmcpacti
         ON ACTION controlp INFIELD mmcpacti
            #add-point:ON ACTION controlp INFIELD mmcpacti
{<point name="construct.c.page3.mmcpacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
{<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
{<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
{<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="ammt356.filter" >}
#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt356_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmbodocno,mmbodocdt,mmbo000,mmbo001,mmbo002,mmbo004,mmbo005,mmbo006,mmbo007, 
          mmbo008,mmbo014,mmbo015,mmbounit,mmboacti
                          FROM s_browse[1].b_mmbodocno,s_browse[1].b_mmbodocdt,s_browse[1].b_mmbo000, 
                              s_browse[1].b_mmbo001,s_browse[1].b_mmbo002,s_browse[1].b_mmbo004,s_browse[1].b_mmbo005, 
                              s_browse[1].b_mmbo006,s_browse[1].b_mmbo007,s_browse[1].b_mmbo008,s_browse[1].b_mmbo014, 
                              s_browse[1].b_mmbo015,s_browse[1].b_mmbounit,s_browse[1].b_mmboacti
 
         BEFORE CONSTRUCT
               DISPLAY ammt356_filter_parser('mmbodocno') TO s_browse[1].b_mmbodocno
            DISPLAY ammt356_filter_parser('mmbodocdt') TO s_browse[1].b_mmbodocdt
            DISPLAY ammt356_filter_parser('mmbo000') TO s_browse[1].b_mmbo000
            DISPLAY ammt356_filter_parser('mmbo001') TO s_browse[1].b_mmbo001
            DISPLAY ammt356_filter_parser('mmbo002') TO s_browse[1].b_mmbo002
            DISPLAY ammt356_filter_parser('mmbo004') TO s_browse[1].b_mmbo004
            DISPLAY ammt356_filter_parser('mmbo005') TO s_browse[1].b_mmbo005
            DISPLAY ammt356_filter_parser('mmbo006') TO s_browse[1].b_mmbo006
            DISPLAY ammt356_filter_parser('mmbo007') TO s_browse[1].b_mmbo007
            DISPLAY ammt356_filter_parser('mmbo008') TO s_browse[1].b_mmbo008
            DISPLAY ammt356_filter_parser('mmbo014') TO s_browse[1].b_mmbo014
            DISPLAY ammt356_filter_parser('mmbo015') TO s_browse[1].b_mmbo015
            DISPLAY ammt356_filter_parser('mmbounit') TO s_browse[1].b_mmbounit
            DISPLAY ammt356_filter_parser('mmboacti') TO s_browse[1].b_mmboacti
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt356_filter_show('mmbodocno')
   CALL ammt356_filter_show('mmbodocdt')
   CALL ammt356_filter_show('mmbo000')
   CALL ammt356_filter_show('mmbo001')
   CALL ammt356_filter_show('mmbo002')
   CALL ammt356_filter_show('mmbo004')
   CALL ammt356_filter_show('mmbo005')
   CALL ammt356_filter_show('mmbo006')
   CALL ammt356_filter_show('mmbo007')
   CALL ammt356_filter_show('mmbo008')
   CALL ammt356_filter_show('mmbo014')
   CALL ammt356_filter_show('mmbo015')
   CALL ammt356_filter_show('mmbounit')
   CALL ammt356_filter_show('mmboacti')
 
END FUNCTION

{</section>}

{<section id="ammt356.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION ammt356_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="ammt356.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION ammt356_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt356_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="ammt356.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt356_query()
   DEFINE ls_wc STRING
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmco_d.clear()
   CALL g_mmco2_d.clear()
   CALL g_mmco3_d.clear()
 
   
   #add-point:query段other
{<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt356_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt356_browser_fill("")
      CALL ammt356_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   #160613-00031#4 Add By Ken 160617(S)
   LET g_detail_idx3 = 1
   LET g_detail_idx4 = 1
   #160613-00031#4 Add By Ken 160617(E)
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt356_filter_show('mmbodocno')
   CALL ammt356_filter_show('mmbodocdt')
   CALL ammt356_filter_show('mmbo000')
   CALL ammt356_filter_show('mmbo001')
   CALL ammt356_filter_show('mmbo002')
   CALL ammt356_filter_show('mmbo004')
   CALL ammt356_filter_show('mmbo005')
   CALL ammt356_filter_show('mmbo006')
   CALL ammt356_filter_show('mmbo007')
   CALL ammt356_filter_show('mmbo008')
   CALL ammt356_filter_show('mmbo014')
   CALL ammt356_filter_show('mmbo015')
   CALL ammt356_filter_show('mmbounit')
   CALL ammt356_filter_show('mmboacti')
   CALL ammt356_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

   ELSE
      CALL ammt356_fetch("F") 
   END IF
 
END FUNCTION

{</section>}

{<section id="ammt356.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt356_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbo_m.mmbodocno = g_browser[g_current_idx].b_mmbodocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt356_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006,g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002, 
       g_mmbo_m.mmbo005,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid, 
       g_mmbo_m.mmbocnfdt
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "mmbo_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_mmbo_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
{<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
{<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammt356_show()
 
END FUNCTION

{</section>}

{<section id="ammt356.insert" >}
#+ 資料新增
PRIVATE FUNCTION ammt356_insert()
   #add-point:insert段define
{<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmco_d.clear()   
   CALL g_mmco2_d.clear()  
   CALL g_mmco3_d.clear()  
   CALL g_mmco4_d.clear()   #160613-00031#4 Add By Ken 160617
 
   INITIALIZE g_mmbo_m.* LIKE mmbo_t.*             #DEFAULT 設定
   
   LET g_mmbodocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmbo_m.mmboownid = g_user
      LET g_mmbo_m.mmboowndp = g_dept
      LET g_mmbo_m.mmbocrtid = g_user
      LET g_mmbo_m.mmbocrtdp = g_dept 
      LET g_mmbo_m.mmbocrtdt = cl_get_current()
      LET g_mmbo_m.mmbomodid = ""
      LET g_mmbo_m.mmbomoddt = ""
      #LET g_mmbo_m.mmbostus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmbo_m.mmbo000 = "I"
      LET g_mmbo_m.mmbo004 = "3"
      LET g_mmbo_m.mmbo003 = "1"
     #LET g_mmbo_m.mmbo002 = "1" #sakura mark
      LET g_mmbo_m.mmbo002 = "0" #sakura add      
      LET g_mmbo_m.mmbo007 = "0"
      LET g_mmbo_m.mmbo008 = "0"
      LET g_mmbo_m.mmboacti = "Y"
      LET g_mmbo_m.mmbostus = "N"
 
  
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt356_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbo_m.* = g_mmbo_m_t.*
         CALL ammt356_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmco_d.clear()
      CALL g_mmco2_d.clear()
      CALL g_mmco3_d.clear()
      CALL g_mmco4_d.clear()    #160613-00031#4 Add By Ken 160617
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmboent = '" ||g_enterprise|| "' AND",
              " mmbodocno = '", g_mmbo_m.mmbodocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt356_cl
   
END FUNCTION

{</section>}

{<section id="ammt356.modify" >}
#+ 資料修改
PRIVATE FUNCTION ammt356_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   EXECUTE ammt356_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006,g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002, 
       g_mmbo_m.mmbo005,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid, 
       g_mmbo_m.mmbocnfdt
 
   ERROR ""
  
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   CALL s_transaction_begin()
   
   OPEN ammt356_cl USING g_enterprise,g_mmbo_m.mmbodocno
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN ammt356_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE ammt356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH ammt356_cl INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006, 
       g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmbosite_desc,g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmcp004_1, 
       g_mmbo_m.mmcp011_1,g_mmbo_m.mmcp013_1,g_mmbo_m.mmcp015_1,g_mmbo_m.mmcp004_1_desc,g_mmbo_m.mmcp012_1, 
       g_mmbo_m.mmcp014_1,g_mmbo_m.mmcp016_1
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_mmbo_m.mmbodocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE ammt356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
{<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt356_show()
   WHILE TRUE
      LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbo_m.mmbomodid = g_user 
LET g_mmbo_m.mmbomoddt = cl_get_current()
 
      
      #add-point:modify段修改前
{<point name="modify.before_input"/>}
      #end add-point
      
      CALL ammt356_input("u")     #欄位更改
 
      #add-point:modify段修改後
{<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbo_m.* = g_mmbo_m_t.*
         CALL ammt356_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_mmbo_m.mmbodocno != g_mmbodocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmco_t SET mmcodocno = g_mmbo_m.mmbodocno
 
          WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbodocno_t
 
            
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmbs_t
            SET mmbsdocno = g_mmbo_m.mmbodocno
 
          WHERE mmbsent = g_enterprise AND
                mmbsdocno = g_mmbodocno_t
 
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "mmbs_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmbs_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE mmcp_t
            SET mmcpdocno = g_mmbo_m.mmbodocno
 
          WHERE mmcpent = g_enterprise AND
                mmcpdocno = g_mmbodocno_t
 
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "mmcp_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmcp_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_mmbo_m.mmbodocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE ammt356_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmbo_m.mmbodocno,'U')
 
END FUNCTION   

{</section>}

{<section id="ammt356.input" >}
#+ 資料輸入
PRIVATE FUNCTION ammt356_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmcounit,mmcosite,mmco001,mmco002,mmco003,mmco004,'',mmco005,mmcoacti  
       FROM mmco_t WHERE mmcoent=? AND mmcodocno=? AND mmco003=? AND mmco004=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE ammt356_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
{<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs004,'',mmbs005,mmbsacti  
       FROM mmbs_t WHERE mmbsent=? AND mmbsdocno=? AND mmbs004=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE ammt356_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
{<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp003,mmcp004,'',mmcp005,mmcp006,mmcp007, 
       mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016,mmcpacti FROM mmcp_t  
       WHERE mmcpent=? AND mmcpdocno=? AND mmcp003=? AND mmcp004=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE ammt356_bcl3 CURSOR FROM g_forupd_sql
   

 
 
   #add-point:input段define_sql
{<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt356_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt356_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006, 
       g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite,g_mmbo_m.mmboacti, 
       g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmcp013_1,g_mmbo_m.mmcp014_1
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   

{</section>}

{<section id="ammt356.input.head" >}
      #單頭段
      INPUT BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006, 
          g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbo005, 
          g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite,g_mmbo_m.mmboacti, 
          g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmcp013_1,g_mmbo_m.mmcp014_1 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
{<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.mmboldocno = g_mmbo_m.mmbodocno
LET g_master_multi_table_t.mmbol002 = g_mmbo_m.mmbol002
LET g_master_multi_table_t.mmbol003 = g_mmbo_m.mmbol003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.mmboldocno = ''
LET g_master_multi_table_t.mmbol002 = ''
LET g_master_multi_table_t.mmbol003 = ''
 
            END IF
            #add-point:資料輸入前
{<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<mmbo000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo000
            #add-point:BEFORE FIELD mmbo000
{<point name="input.b.mmbo000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo000
            
            #add-point:AFTER FIELD mmbo000
{<point name="input.a.mmbo000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo000
            #add-point:ON CHANGE mmbo000
{<point name="input.g.mmbo000" />}
            #END add-point
 
         #----<<mmbodocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocno
            #add-point:BEFORE FIELD mmbodocno
{<point name="input.b.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocno
            
            #add-point:AFTER FIELD mmbodocno
{<point name="input.a.mmbodocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbodocno
            #add-point:ON CHANGE mmbodocno
{<point name="input.g.mmbodocno" />}
            #END add-point
 
         #----<<mmbodocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocdt
            #add-point:BEFORE FIELD mmbodocdt
{<point name="input.b.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocdt
            
            #add-point:AFTER FIELD mmbodocdt
{<point name="input.a.mmbodocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbodocdt
            #add-point:ON CHANGE mmbodocdt
{<point name="input.g.mmbodocdt" />}
            #END add-point
 
         #----<<mmbo004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo004
            #add-point:BEFORE FIELD mmbo004
{<point name="input.b.mmbo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo004
            
            #add-point:AFTER FIELD mmbo004
{<point name="input.a.mmbo004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo004
            #add-point:ON CHANGE mmbo004
{<point name="input.g.mmbo004" />}
            #END add-point
 
         #----<<mmbo006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo006
            #add-point:BEFORE FIELD mmbo006
{<point name="input.b.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo006
            
            #add-point:AFTER FIELD mmbo006
{<point name="input.a.mmbo006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo006
            #add-point:ON CHANGE mmbo006
{<point name="input.g.mmbo006" />}
            #END add-point
 
         #----<<mmbo003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo003
            #add-point:BEFORE FIELD mmbo003
{<point name="input.b.mmbo003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo003
            
            #add-point:AFTER FIELD mmbo003
{<point name="input.a.mmbo003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo003
            #add-point:ON CHANGE mmbo003
{<point name="input.g.mmbo003" />}
            #END add-point
 
         #----<<mmbo001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo001
            #add-point:BEFORE FIELD mmbo001
{<point name="input.b.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo001
            
            #add-point:AFTER FIELD mmbo001
{<point name="input.a.mmbo001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo001
            #add-point:ON CHANGE mmbo001
{<point name="input.g.mmbo001" />}
            #END add-point
 
         #----<<mmbo002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo002
            #add-point:BEFORE FIELD mmbo002
{<point name="input.b.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo002
            
            #add-point:AFTER FIELD mmbo002
{<point name="input.a.mmbo002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo002
            #add-point:ON CHANGE mmbo002
{<point name="input.g.mmbo002" />}
            #END add-point
 
         #----<<mmbol002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol002
            #add-point:BEFORE FIELD mmbol002
{<point name="input.b.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol002
            
            #add-point:AFTER FIELD mmbol002
{<point name="input.a.mmbol002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbol002
            #add-point:ON CHANGE mmbol002
{<point name="input.g.mmbol002" />}
            #END add-point
 
         #----<<mmbol003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol003
            #add-point:BEFORE FIELD mmbol003
{<point name="input.b.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol003
            
            #add-point:AFTER FIELD mmbol003
{<point name="input.a.mmbol003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbol003
            #add-point:ON CHANGE mmbol003
{<point name="input.g.mmbol003" />}
            #END add-point
 
         #----<<mmbo005>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmbo005
            
            #add-point:AFTER FIELD mmbo005
{<point name="input.a.mmbo005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo005
            #add-point:BEFORE FIELD mmbo005
{<point name="input.b.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo005
            #add-point:ON CHANGE mmbo005
{<point name="input.g.mmbo005" />}
            #END add-point
 
         #----<<mmbo005_desc>>----
         #----<<mmbo007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo007
            #add-point:BEFORE FIELD mmbo007
{<point name="input.b.mmbo007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo007
            
            #add-point:AFTER FIELD mmbo007
{<point name="input.a.mmbo007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo007
            #add-point:ON CHANGE mmbo007
{<point name="input.g.mmbo007" />}
            #END add-point
 
         #----<<mmbo008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo008
            #add-point:BEFORE FIELD mmbo008
{<point name="input.b.mmbo008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo008
            
            #add-point:AFTER FIELD mmbo008
{<point name="input.a.mmbo008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo008
            #add-point:ON CHANGE mmbo008
{<point name="input.g.mmbo008" />}
            #END add-point
 
         #----<<mmbo014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo014
            #add-point:BEFORE FIELD mmbo014
{<point name="input.b.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo014
            
            #add-point:AFTER FIELD mmbo014
{<point name="input.a.mmbo014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo014
            #add-point:ON CHANGE mmbo014
{<point name="input.g.mmbo014" />}
            #END add-point
 
         #----<<mmbo015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo015
            #add-point:BEFORE FIELD mmbo015
{<point name="input.b.mmbo015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo015
            
            #add-point:AFTER FIELD mmbo015
{<point name="input.a.mmbo015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo015
            #add-point:ON CHANGE mmbo015
{<point name="input.g.mmbo015" />}
            #END add-point
 
         #----<<mmbosite>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmbosite
            
            #add-point:AFTER FIELD mmbosite
{<point name="input.a.mmbosite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbosite
            #add-point:BEFORE FIELD mmbosite
{<point name="input.b.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbosite
            #add-point:ON CHANGE mmbosite
{<point name="input.g.mmbosite" />}
            #END add-point
 
         #----<<mmbosite_desc>>----
         #----<<mmboacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmboacti
            #add-point:BEFORE FIELD mmboacti
{<point name="input.b.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboacti
            
            #add-point:AFTER FIELD mmboacti
{<point name="input.a.mmboacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmboacti
            #add-point:ON CHANGE mmboacti
{<point name="input.g.mmboacti" />}
            #END add-point
 
         #----<<mmbounit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbounit
            #add-point:BEFORE FIELD mmbounit
{<point name="input.b.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbounit
            
            #add-point:AFTER FIELD mmbounit
{<point name="input.a.mmbounit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbounit
            #add-point:ON CHANGE mmbounit
{<point name="input.g.mmbounit" />}
            #END add-point
 
         #----<<mmbostus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbostus
            #add-point:BEFORE FIELD mmbostus
{<point name="input.b.mmbostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbostus
            
            #add-point:AFTER FIELD mmbostus
{<point name="input.a.mmbostus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbostus
            #add-point:ON CHANGE mmbostus
{<point name="input.g.mmbostus" />}
            #END add-point
 
         #----<<mmboownid>>----
         #----<<mmboownid_desc>>----
         #----<<mmboowndp>>----
         #----<<mmboowndp_desc>>----
         #----<<mmbocrtid>>----
         #----<<mmbocrtid_desc>>----
         #----<<mmbocrtdp>>----
         #----<<mmbocrtdp_desc>>----
         #----<<mmbocrtdt>>----
         #----<<mmbomodid>>----
         #----<<mmbomodid_desc>>----
         #----<<mmbomoddt>>----
         #----<<mmbocnfid>>----
         #----<<mmbocnfid_desc>>----
         #----<<mmbocnfdt>>----
         #----<<mmcp004_1>>----
         #----<<mmcp011_1>>----
         #----<<mmcp013_1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp013_1
            #add-point:BEFORE FIELD mmcp013_1
{<point name="input.b.mmcp013_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp013_1
            
            #add-point:AFTER FIELD mmcp013_1
{<point name="input.a.mmcp013_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp013_1
            #add-point:ON CHANGE mmcp013_1
{<point name="input.g.mmcp013_1" />}
            #END add-point
 
         #----<<mmcp015_1>>----
         #----<<mmcp004_1_desc>>----
         #----<<mmcp012_1>>----
         #----<<mmcp014_1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp014_1
            #add-point:BEFORE FIELD mmcp014_1
{<point name="input.b.mmcp014_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp014_1
            
            #add-point:AFTER FIELD mmcp014_1
{<point name="input.a.mmcp014_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp014_1
            #add-point:ON CHANGE mmcp014_1
{<point name="input.g.mmcp014_1" />}
            #END add-point

         BEFORE FIELD mmbo017

         AFTER FIELD mmbo017


         ON CHANGE mmbo017
            IF NOT cl_null(g_mmbo_m.mmbo017) THEN
               LET g_mmbo_m.mmbo005=''
               LET g_mmbo_m.mmbo005_desc=''    
               DISPLAY BY NAME g_mmbo_m.mmbo005,g_mmbo_m.mmbo005_desc   #160729-00077#7 20160818 add by beckxie
            END IF
          
         #----<<mmcp016_1>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<mmbo000>>----
         #Ctrlp:input.c.mmbo000
         ON ACTION controlp INFIELD mmbo000
            #add-point:ON ACTION controlp INFIELD mmbo000
{<point name="input.c.mmbo000" />}
            #END add-point
 
         #----<<mmbodocno>>----
         #Ctrlp:input.c.mmbodocno
         ON ACTION controlp INFIELD mmbodocno
            #add-point:ON ACTION controlp INFIELD mmbodocno
{<point name="input.c.mmbodocno" />}
            #END add-point
 
         #----<<mmbodocdt>>----
         #Ctrlp:input.c.mmbodocdt
         ON ACTION controlp INFIELD mmbodocdt
            #add-point:ON ACTION controlp INFIELD mmbodocdt
{<point name="input.c.mmbodocdt" />}
            #END add-point
 
         #----<<mmbo004>>----
         #Ctrlp:input.c.mmbo004
         ON ACTION controlp INFIELD mmbo004
            #add-point:ON ACTION controlp INFIELD mmbo004
{<point name="input.c.mmbo004" />}
            #END add-point
 
         #----<<mmbo006>>----
         #Ctrlp:input.c.mmbo006
         ON ACTION controlp INFIELD mmbo006
            #add-point:ON ACTION controlp INFIELD mmbo006
{<point name="input.c.mmbo006" />}
            #END add-point
 
         #----<<mmbo003>>----
         #Ctrlp:input.c.mmbo003
         ON ACTION controlp INFIELD mmbo003
            #add-point:ON ACTION controlp INFIELD mmbo003
{<point name="input.c.mmbo003" />}
            #END add-point
 
         #----<<mmbo001>>----
         #Ctrlp:input.c.mmbo001
         ON ACTION controlp INFIELD mmbo001
            #add-point:ON ACTION controlp INFIELD mmbo001
{<point name="input.c.mmbo001" />}
            #END add-point
 
         #----<<mmbo002>>----
         #Ctrlp:input.c.mmbo002
         ON ACTION controlp INFIELD mmbo002
            #add-point:ON ACTION controlp INFIELD mmbo002
{<point name="input.c.mmbo002" />}
            #END add-point
 
         #----<<mmbol002>>----
         #Ctrlp:input.c.mmbol002
         ON ACTION controlp INFIELD mmbol002
            #add-point:ON ACTION controlp INFIELD mmbol002
{<point name="input.c.mmbol002" />}
            #END add-point
 
         #----<<mmbol003>>----
         #Ctrlp:input.c.mmbol003
         ON ACTION controlp INFIELD mmbol003
            #add-point:ON ACTION controlp INFIELD mmbol003
{<point name="input.c.mmbol003" />}
            #END add-point
 
         #----<<mmbo005>>----
         #Ctrlp:input.c.mmbo005
         ON ACTION controlp INFIELD mmbo005
            #add-point:ON ACTION controlp INFIELD mmbo005
{<point name="input.c.mmbo005" />}
            #END add-point
 
         #----<<mmbo005_desc>>----
         #----<<mmbo007>>----
         #Ctrlp:input.c.mmbo007
         ON ACTION controlp INFIELD mmbo007
            #add-point:ON ACTION controlp INFIELD mmbo007
{<point name="input.c.mmbo007" />}
            #END add-point
 
         #----<<mmbo008>>----
         #Ctrlp:input.c.mmbo008
         ON ACTION controlp INFIELD mmbo008
            #add-point:ON ACTION controlp INFIELD mmbo008
{<point name="input.c.mmbo008" />}
            #END add-point
 
         #----<<mmbo014>>----
         #Ctrlp:input.c.mmbo014
         ON ACTION controlp INFIELD mmbo014
            #add-point:ON ACTION controlp INFIELD mmbo014
{<point name="input.c.mmbo014" />}
            #END add-point
 
         #----<<mmbo015>>----
         #Ctrlp:input.c.mmbo015
         ON ACTION controlp INFIELD mmbo015
            #add-point:ON ACTION controlp INFIELD mmbo015
{<point name="input.c.mmbo015" />}
            #END add-point
 
         #----<<mmbosite>>----
         #Ctrlp:input.c.mmbosite
         ON ACTION controlp INFIELD mmbosite
            #add-point:ON ACTION controlp INFIELD mmbosite
{<point name="input.c.mmbosite" />}
            #END add-point
 
         #----<<mmbosite_desc>>----
         #----<<mmboacti>>----
         #Ctrlp:input.c.mmboacti
         ON ACTION controlp INFIELD mmboacti
            #add-point:ON ACTION controlp INFIELD mmboacti
{<point name="input.c.mmboacti" />}
            #END add-point
 
         #----<<mmbounit>>----
         #Ctrlp:input.c.mmbounit
         ON ACTION controlp INFIELD mmbounit
            #add-point:ON ACTION controlp INFIELD mmbounit
{<point name="input.c.mmbounit" />}
            #END add-point
 
         #----<<mmbostus>>----
         #Ctrlp:input.c.mmbostus
         ON ACTION controlp INFIELD mmbostus
            #add-point:ON ACTION controlp INFIELD mmbostus
{<point name="input.c.mmbostus" />}
            #END add-point
 
         #----<<mmboownid>>----
         #----<<mmboownid_desc>>----
         #----<<mmboowndp>>----
         #----<<mmboowndp_desc>>----
         #----<<mmbocrtid>>----
         #----<<mmbocrtid_desc>>----
         #----<<mmbocrtdp>>----
         #----<<mmbocrtdp_desc>>----
         #----<<mmbocrtdt>>----
         #----<<mmbomodid>>----
         #----<<mmbomodid_desc>>----
         #----<<mmbomoddt>>----
         #----<<mmbocnfid>>----
         #----<<mmbocnfid_desc>>----
         #----<<mmbocnfdt>>----
         #----<<mmcp004_1>>----
         #----<<mmcp011_1>>----
         #----<<mmcp013_1>>----
         #Ctrlp:input.c.mmcp013_1
         ON ACTION controlp INFIELD mmcp013_1
            #add-point:ON ACTION controlp INFIELD mmcp013_1
{<point name="input.c.mmcp013_1" />}
            #END add-point
 
         #----<<mmcp015_1>>----
         #----<<mmcp004_1_desc>>----
         #----<<mmcp012_1>>----
         #----<<mmcp014_1>>----
         #Ctrlp:input.c.mmcp014_1
         ON ACTION controlp INFIELD mmcp014_1
            #add-point:ON ACTION controlp INFIELD mmcp014_1
{<point name="input.c.mmcp014_1" />}
            #END add-point
 
         #----<<mmcp016_1>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmbo_m.mmbodocno             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmbo_t (mmboent,mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo006,mmbo003,mmbo001, 
                   mmbo002,mmbo005,mmbo007,mmbo008,mmbo014,mmbo015,mmbo017,mmbosite,mmboacti,mmbounit,mmbostus, 
                   mmboownid,mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid,mmbocnfdt) 

               VALUES (g_enterprise,g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004, 
                   g_mmbo_m.mmbo006,g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbo005, 
                   g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
                   g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp, 
                   g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt, 
                   g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "g_mmbo_m"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbo_m.mmbodocno = g_master_multi_table_t.mmboldocno AND
         g_mmbo_m.mmbol002 = g_master_multi_table_t.mmbol002 AND 
         g_mmbo_m.mmbol003 = g_master_multi_table_t.mmbol003  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbo_m.mmbodocno
            LET l_field_keys[01] = 'mmboldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbol001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbo_m.mmbol002
            LET l_fields[01] = 'mmbol002'
            LET l_vars[02] = g_mmbo_m.mmbol003
            LET l_fields[02] = 'mmbol003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbolent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbol_t')
         END IF 
 
               
               #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt356_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmbo_t SET (mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo006,mmbo003,mmbo001,mmbo002, 
                   mmbo005,mmbo007,mmbo008,mmbo014,mmbo015,mmbo017,mmbosite,mmboacti,mmbounit,mmbostus,mmboownid, 
                   mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid,mmbocnfdt) = (g_mmbo_m.mmbo000, 
                   g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006,g_mmbo_m.mmbo003, 
                   g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbo005,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008, 
                   g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite,g_mmbo_m.mmboacti,g_mmbo_m.mmbounit, 
                   g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp, 
                   g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt) 

                WHERE mmboent = g_enterprise AND mmbodocno = g_mmbodocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "mmbo_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbo_m.mmbodocno = g_master_multi_table_t.mmboldocno AND
         g_mmbo_m.mmbol002 = g_master_multi_table_t.mmbol002 AND 
         g_mmbo_m.mmbol003 = g_master_multi_table_t.mmbol003  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbo_m.mmbodocno
            LET l_field_keys[01] = 'mmboldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbol001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbo_m.mmbol002
            LET l_fields[01] = 'mmbol002'
            LET l_vars[02] = g_mmbo_m.mmbol003
            LET l_fields[02] = 'mmbol003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbolent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbol_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
{<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
            #controlp
            
      END INPUT
   

{</section>}

{<section id="ammt356.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmco_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmco_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt356_b_fill()
            LET g_rec_b = g_mmco_d.getLength()
            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt356_cl USING g_enterprise,g_mmbo_m.mmbodocno
 
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN ammt356_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE ammt356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmco_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmco_d[l_ac].mmco003 IS NOT NULL
               AND g_mmco_d[l_ac].mmco004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmco_d_t.* = g_mmco_d[l_ac].*  #BACKUP
               CALL ammt356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt356_set_no_entry_b(l_cmd)
               IF NOT ammt356_lock_b("mmco_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt356_bcl INTO g_mmco_d[l_ac].mmcounit,g_mmco_d[l_ac].mmcosite,g_mmco_d[l_ac].mmco001, 
                      g_mmco_d[l_ac].mmco002,g_mmco_d[l_ac].mmco003,g_mmco_d[l_ac].mmco004,g_mmco_d[l_ac].mmco004_desc, 
                      g_mmco_d[l_ac].mmco005,g_mmco_d[l_ac].mmcoacti
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_mmco_d_t.mmco003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmco_d[l_ac].* TO NULL 
                  LET g_mmco_d[l_ac].mmco005 = "100"
      LET g_mmco_d[l_ac].mmcoacti = "Y"
 
 
            LET g_mmco_d_t.* = g_mmco_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmco_d[li_reproduce_target].* = g_mmco_d[li_reproduce].*
 
               LET g_mmco_d[li_reproduce_target].mmco003 = NULL
               LET g_mmco_d[li_reproduce_target].mmco004 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmco_t 
             WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbo_m.mmbodocno
 
               AND mmco003 = g_mmco_d[l_ac].mmco003
               AND mmco004 = g_mmco_d[l_ac].mmco004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmco_d[g_detail_idx].mmco003
               LET gs_keys[3] = g_mmco_d[g_detail_idx].mmco004
               CALL ammt356_insert_b('mmco_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_mmco_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt356_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmco_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmco_d.deleteElement(l_ac)
               NEXT FIELD mmco003
            END IF
         
            IF g_mmco_d[l_ac].mmco003 IS NOT NULL
               AND g_mmco_d_t.mmco004 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmco_t
                WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbo_m.mmbodocno AND
 
                      mmco003 = g_mmco_d_t.mmco003
                  AND mmco004 = g_mmco_d_t.mmco004
 
                  
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt356_bcl
               LET l_count = g_mmco_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmco_d[g_detail_idx].mmco003
               LET gs_keys[3] = g_mmco_d[g_detail_idx].mmco004
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt356_delete_b('mmco_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mmcounit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcounit
            #add-point:BEFORE FIELD mmcounit
{<point name="input.b.page1.mmcounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcounit
            
            #add-point:AFTER FIELD mmcounit
{<point name="input.a.page1.mmcounit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcounit
            #add-point:ON CHANGE mmcounit
{<point name="input.g.page1.mmcounit" />}
            #END add-point
 
         #----<<mmcosite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcosite
            #add-point:BEFORE FIELD mmcosite
{<point name="input.b.page1.mmcosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcosite
            
            #add-point:AFTER FIELD mmcosite
{<point name="input.a.page1.mmcosite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcosite
            #add-point:ON CHANGE mmcosite
{<point name="input.g.page1.mmcosite" />}
            #END add-point
 
         #----<<mmco001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco001
            #add-point:BEFORE FIELD mmco001
{<point name="input.b.page1.mmco001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco001
            
            #add-point:AFTER FIELD mmco001
{<point name="input.a.page1.mmco001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmco001
            #add-point:ON CHANGE mmco001
{<point name="input.g.page1.mmco001" />}
            #END add-point
 
         #----<<mmco002>>----
         #----<<mmco003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco003
            #add-point:BEFORE FIELD mmco003
{<point name="input.b.page1.mmco003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco003
            
            #add-point:AFTER FIELD mmco003
{<point name="input.a.page1.mmco003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmco003
            #add-point:ON CHANGE mmco003
{<point name="input.g.page1.mmco003" />}
            #END add-point
 
         #----<<mmco004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco004
            #add-point:BEFORE FIELD mmco004
{<point name="input.b.page1.mmco004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco004
            
            #add-point:AFTER FIELD mmco004
{<point name="input.a.page1.mmco004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmco004
            #add-point:ON CHANGE mmco004
{<point name="input.g.page1.mmco004" />}
            #END add-point
 
         #----<<mmco004_desc>>----
         #----<<mmco005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmco005
            #add-point:BEFORE FIELD mmco005
{<point name="input.b.page1.mmco005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmco005
            
            #add-point:AFTER FIELD mmco005
{<point name="input.a.page1.mmco005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmco005
            #add-point:ON CHANGE mmco005
{<point name="input.g.page1.mmco005" />}
            #END add-point
 
         #----<<mmcoacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcoacti
            #add-point:BEFORE FIELD mmcoacti
{<point name="input.b.page1.mmcoacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcoacti
            
            #add-point:AFTER FIELD mmcoacti
{<point name="input.a.page1.mmcoacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcoacti
            #add-point:ON CHANGE mmcoacti
{<point name="input.g.page1.mmcoacti" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mmcounit>>----
         #Ctrlp:input.c.page1.mmcounit
         ON ACTION controlp INFIELD mmcounit
            #add-point:ON ACTION controlp INFIELD mmcounit
{<point name="input.c.page1.mmcounit" />}
            #END add-point
 
         #----<<mmcosite>>----
         #Ctrlp:input.c.page1.mmcosite
         ON ACTION controlp INFIELD mmcosite
            #add-point:ON ACTION controlp INFIELD mmcosite
{<point name="input.c.page1.mmcosite" />}
            #END add-point
 
         #----<<mmco001>>----
         #Ctrlp:input.c.page1.mmco001
         ON ACTION controlp INFIELD mmco001
            #add-point:ON ACTION controlp INFIELD mmco001
{<point name="input.c.page1.mmco001" />}
            #END add-point
 
         #----<<mmco002>>----
         #----<<mmco003>>----
         #Ctrlp:input.c.page1.mmco003
         ON ACTION controlp INFIELD mmco003
            #add-point:ON ACTION controlp INFIELD mmco003
{<point name="input.c.page1.mmco003" />}
            #END add-point
 
         #----<<mmco004>>----
         #Ctrlp:input.c.page1.mmco004
         ON ACTION controlp INFIELD mmco004
            #add-point:ON ACTION controlp INFIELD mmco004
{<point name="input.c.page1.mmco004" />}
            #END add-point
 
         #----<<mmco004_desc>>----
         #----<<mmco005>>----
         #Ctrlp:input.c.page1.mmco005
         ON ACTION controlp INFIELD mmco005
            #add-point:ON ACTION controlp INFIELD mmco005
{<point name="input.c.page1.mmco005" />}
            #END add-point
 
         #----<<mmcoacti>>----
         #Ctrlp:input.c.page1.mmcoacti
         ON ACTION controlp INFIELD mmcoacti
            #add-point:ON ACTION controlp INFIELD mmcoacti
{<point name="input.c.page1.mmcoacti" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_mmco_d[l_ac].* = g_mmco_d_t.*
               CLOSE ammt356_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_mmco_d[l_ac].mmco003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_mmco_d[l_ac].* = g_mmco_d_t.*
            ELSE
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmco_t SET (mmcodocno,mmcounit,mmcosite,mmco001,mmco002,mmco003,mmco004,mmco005, 
                   mmcoacti) = (g_mmbo_m.mmbodocno,g_mmco_d[l_ac].mmcounit,g_mmco_d[l_ac].mmcosite,g_mmco_d[l_ac].mmco001, 
                   g_mmco_d[l_ac].mmco002,g_mmco_d[l_ac].mmco003,g_mmco_d[l_ac].mmco004,g_mmco_d[l_ac].mmco005, 
                   g_mmco_d[l_ac].mmcoacti)
                WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbo_m.mmbodocno 
 
                  AND mmco003 = g_mmco_d_t.mmco003 #項次   
                  AND mmco004 = g_mmco_d_t.mmco004  
 
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "mmco_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_mmco_d[l_ac].* = g_mmco_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_mmco_d[l_ac].* = g_mmco_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmco_d[g_detail_idx].mmco003
               LET gs_keys_bak[2] = g_mmco_d_t.mmco003
               LET gs_keys[3] = g_mmco_d[g_detail_idx].mmco004
               LET gs_keys_bak[3] = g_mmco_d_t.mmco004
               CALL ammt356_update_b('mmco_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
{<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt356_unlock_b("mmco_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmco_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmco_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmco2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmco2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt356_b_fill()
            LET g_rec_b = g_mmco2_d.getLength()
            #add-point:資料輸入前
{<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmco2_d[l_ac].* TO NULL 
                  LET g_mmco2_d[l_ac].mmbs005 = "N"
      LET g_mmco2_d[l_ac].mmbsacti = "Y"
 
 
            LET g_mmco2_d_t.* = g_mmco2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmco2_d[li_reproduce_target].* = g_mmco2_d[li_reproduce].*
 
               LET g_mmco2_d[li_reproduce_target].mmbs004 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
{<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt356_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN ammt356_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE ammt356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmco2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmco2_d[l_ac].mmbs004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmco2_d_t.* = g_mmco2_d[l_ac].*  #BACKUP
               CALL ammt356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammt356_set_no_entry_b(l_cmd)
               IF NOT ammt356_lock_b("mmbs_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt356_bcl2 INTO g_mmco2_d[l_ac].mmbsunit,g_mmco2_d[l_ac].mmbssite,g_mmco2_d[l_ac].mmbs001, 
                      g_mmco2_d[l_ac].mmbs002,g_mmco2_d[l_ac].mmbs003,g_mmco2_d[l_ac].mmbs004,g_mmco2_d[l_ac].mmbs004_desc, 
                      g_mmco2_d[l_ac].mmbs005,g_mmco2_d[l_ac].mmbsacti
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmco2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmco2_d.deleteElement(l_ac)
               NEXT FIELD mmbs004
            END IF
         
            IF g_mmco2_d[l_ac].mmbs004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
{<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmbs_t
                WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno AND
                      mmbs004 = g_mmco2_d_t.mmbs004
                  
               #add-point:單身2刪除中
{<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
{<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt356_bcl
               LET l_count = g_mmco_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmco2_d[g_detail_idx].mmbs004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
{<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL ammt356_delete_b('mmbs_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
{<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmbs_t 
             WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
               AND mmbs004 = g_mmco2_d[l_ac].mmbs004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
{<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmco2_d[g_detail_idx].mmbs004
               CALL ammt356_insert_b('mmbs_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
{<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_mmco_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmbs_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt356_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
{<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_mmco2_d[l_ac].* = g_mmco2_d_t.*
               CLOSE ammt356_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_mmco2_d[l_ac].* = g_mmco2_d_t.*
            ELSE
               #add-point:單身page2修改前
{<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE mmbs_t SET (mmbsdocno,mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005, 
                   mmbsacti) = (g_mmbo_m.mmbodocno,g_mmco2_d[l_ac].mmbsunit,g_mmco2_d[l_ac].mmbssite, 
                   g_mmco2_d[l_ac].mmbs001,g_mmco2_d[l_ac].mmbs002,g_mmco2_d[l_ac].mmbs003,g_mmco2_d[l_ac].mmbs004, 
                   g_mmco2_d[l_ac].mmbs005,g_mmco2_d[l_ac].mmbsacti) #自訂欄位頁簽
                WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
                  AND mmbs004 = g_mmco2_d_t.mmbs004 #項次 
                  
               #add-point:單身page2修改中
{<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "mmbs_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_mmco2_d[l_ac].* = g_mmco2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmbs_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_mmco2_d[l_ac].* = g_mmco2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmco2_d[g_detail_idx].mmbs004
               LET gs_keys_bak[2] = g_mmco2_d_t.mmbs004
               CALL ammt356_update_b('mmbs_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page2修改後
{<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<mmbsunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsunit
            #add-point:BEFORE FIELD mmbsunit
{<point name="input.b.page2.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsunit
            
            #add-point:AFTER FIELD mmbsunit
{<point name="input.a.page2.mmbsunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbsunit
            #add-point:ON CHANGE mmbsunit
{<point name="input.g.page2.mmbsunit" />}
            #END add-point
 
         #----<<mmbssite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbssite
            #add-point:BEFORE FIELD mmbssite
{<point name="input.b.page2.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbssite
            
            #add-point:AFTER FIELD mmbssite
{<point name="input.a.page2.mmbssite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbssite
            #add-point:ON CHANGE mmbssite
{<point name="input.g.page2.mmbssite" />}
            #END add-point
 
         #----<<mmbs001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs001
            #add-point:BEFORE FIELD mmbs001
{<point name="input.b.page2.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs001
            
            #add-point:AFTER FIELD mmbs001
{<point name="input.a.page2.mmbs001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs001
            #add-point:ON CHANGE mmbs001
{<point name="input.g.page2.mmbs001" />}
            #END add-point
 
         #----<<mmbs002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs002
            #add-point:BEFORE FIELD mmbs002
{<point name="input.b.page2.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs002
            
            #add-point:AFTER FIELD mmbs002
{<point name="input.a.page2.mmbs002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs002
            #add-point:ON CHANGE mmbs002
{<point name="input.g.page2.mmbs002" />}
            #END add-point
 
         #----<<mmbs003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs003
            #add-point:BEFORE FIELD mmbs003
{<point name="input.b.page2.mmbs003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs003
            
            #add-point:AFTER FIELD mmbs003
{<point name="input.a.page2.mmbs003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs003
            #add-point:ON CHANGE mmbs003
{<point name="input.g.page2.mmbs003" />}
            #END add-point
 
         #----<<mmbs004>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmbs004
            
            #add-point:AFTER FIELD mmbs004
{<point name="input.a.page2.mmbs004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs004
            #add-point:BEFORE FIELD mmbs004
{<point name="input.b.page2.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs004
            #add-point:ON CHANGE mmbs004
{<point name="input.g.page2.mmbs004" />}
            #END add-point
 
         #----<<mmbs004_desc>>----
         #----<<mmbs005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs005
            #add-point:BEFORE FIELD mmbs005
{<point name="input.b.page2.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs005
            
            #add-point:AFTER FIELD mmbs005
{<point name="input.a.page2.mmbs005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs005
            #add-point:ON CHANGE mmbs005
{<point name="input.g.page2.mmbs005" />}
            #END add-point
 
         #----<<mmbsacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsacti
            #add-point:BEFORE FIELD mmbsacti
{<point name="input.b.page2.mmbsacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsacti
            
            #add-point:AFTER FIELD mmbsacti
{<point name="input.a.page2.mmbsacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbsacti
            #add-point:ON CHANGE mmbsacti
{<point name="input.g.page2.mmbsacti" />}
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<mmbsunit>>----
         #Ctrlp:input.c.page2.mmbsunit
         ON ACTION controlp INFIELD mmbsunit
            #add-point:ON ACTION controlp INFIELD mmbsunit
{<point name="input.c.page2.mmbsunit" />}
            #END add-point
 
         #----<<mmbssite>>----
         #Ctrlp:input.c.page2.mmbssite
         ON ACTION controlp INFIELD mmbssite
            #add-point:ON ACTION controlp INFIELD mmbssite
{<point name="input.c.page2.mmbssite" />}
            #END add-point
 
         #----<<mmbs001>>----
         #Ctrlp:input.c.page2.mmbs001
         ON ACTION controlp INFIELD mmbs001
            #add-point:ON ACTION controlp INFIELD mmbs001
{<point name="input.c.page2.mmbs001" />}
            #END add-point
 
         #----<<mmbs002>>----
         #Ctrlp:input.c.page2.mmbs002
         ON ACTION controlp INFIELD mmbs002
            #add-point:ON ACTION controlp INFIELD mmbs002
{<point name="input.c.page2.mmbs002" />}
            #END add-point
 
         #----<<mmbs003>>----
         #Ctrlp:input.c.page2.mmbs003
         ON ACTION controlp INFIELD mmbs003
            #add-point:ON ACTION controlp INFIELD mmbs003
{<point name="input.c.page2.mmbs003" />}
            #END add-point
 
         #----<<mmbs004>>----
         #Ctrlp:input.c.page2.mmbs004
         ON ACTION controlp INFIELD mmbs004
            #add-point:ON ACTION controlp INFIELD mmbs004
{<point name="input.c.page2.mmbs004" />}
            #END add-point
 
         #----<<mmbs004_desc>>----
         #----<<mmbs005>>----
         #Ctrlp:input.c.page2.mmbs005
         ON ACTION controlp INFIELD mmbs005
            #add-point:ON ACTION controlp INFIELD mmbs005
{<point name="input.c.page2.mmbs005" />}
            #END add-point
 
         #----<<mmbsacti>>----
         #Ctrlp:input.c.page2.mmbsacti
         ON ACTION controlp INFIELD mmbsacti
            #add-point:ON ACTION controlp INFIELD mmbsacti
{<point name="input.c.page2.mmbsacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
{<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmco2_d[l_ac].* = g_mmco2_d_t.*
               END IF
               CLOSE ammt356_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt356_unlock_b("mmbs_t","'2'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmco2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmco2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmco3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmco3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt356_b_fill()
            LET g_rec_b = g_mmco3_d.getLength()
            #add-point:資料輸入前
{<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmco3_d[l_ac].* TO NULL 
                  LET g_mmco3_d[l_ac].mmcp003 = "Q"
      LET g_mmco3_d[l_ac].mmcp005 = "Y"
      LET g_mmco3_d[l_ac].mmcp007 = "1"
      LET g_mmco3_d[l_ac].mmcp010 = "100"
      LET g_mmco3_d[l_ac].mmcpacti = "Y"
 
 
            LET g_mmco3_d_t.* = g_mmco3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmco3_d[li_reproduce_target].* = g_mmco3_d[li_reproduce].*
 
               LET g_mmco3_d[li_reproduce_target].mmcp003 = NULL
               LET g_mmco3_d[li_reproduce_target].mmcp004 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
{<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            #LET g_detail_idx = l_ac      #160613-00031#4 Mark By Ken 160617
            #160613-00031#4 Add By Ken 160617(S)
            LET g_detail_idx3 = l_ac
            CALL ammt356_b_fill2('4')
            #160613-00031#4 Add By Ken 160617(E)
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt356_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN ammt356_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE ammt356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmco3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmco3_d[l_ac].mmcp003 IS NOT NULL
               AND g_mmco3_d[l_ac].mmcp004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmco3_d_t.* = g_mmco3_d[l_ac].*  #BACKUP
               CALL ammt356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammt356_set_no_entry_b(l_cmd)
               IF NOT ammt356_lock_b("mmcp_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt356_bcl3 INTO g_mmco3_d[l_ac].mmcpunit,g_mmco3_d[l_ac].mmcpsite,g_mmco3_d[l_ac].mmcp001, 
                      g_mmco3_d[l_ac].mmcp002,g_mmco3_d[l_ac].mmcp003,g_mmco3_d[l_ac].mmcp004,g_mmco3_d[l_ac].mmcp004_desc, 
                      g_mmco3_d[l_ac].mmcp005,g_mmco3_d[l_ac].mmcp006,g_mmco3_d[l_ac].mmcp007,g_mmco3_d[l_ac].mmcp008, 
                      g_mmco3_d[l_ac].mmcp009,g_mmco3_d[l_ac].mmcp010,g_mmco3_d[l_ac].mmcp011,g_mmco3_d[l_ac].mmcp012, 
                      g_mmco3_d[l_ac].mmcp013,g_mmco3_d[l_ac].mmcp014,g_mmco3_d[l_ac].mmcp015,g_mmco3_d[l_ac].mmcp016, 
                      g_mmco3_d[l_ac].mmcpacti
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmco3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmco3_d.deleteElement(l_ac)
               NEXT FIELD mmcp003
            END IF
         
            IF g_mmco3_d[l_ac].mmcp003 IS NOT NULL
               AND g_mmco3_d_t.mmcp004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
{<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmcp_t
                WHERE mmcpent = g_enterprise AND mmcpdocno = g_mmbo_m.mmbodocno AND
                      mmcp003 = g_mmco3_d_t.mmcp003
                  AND mmcp004 = g_mmco3_d_t.mmcp004
                  
               #add-point:單身3刪除中
{<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmco_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
{<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt356_bcl
               LET l_count = g_mmco_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               #LET gs_keys[2] = g_mmco3_d[g_detail_idx].mmcp003   #160613-00031#4 Mark By Ken 160617
               #LET gs_keys[3] = g_mmco3_d[g_detail_idx].mmcp004   #160613-00031#4 Mark By Ken 160617
               LET gs_keys[2] = g_mmco3_d[g_detail_idx3].mmcp003   #160613-00031#4 Add By Ken 160617
               LET gs_keys[3] = g_mmco3_d[g_detail_idx3].mmcp004   #160613-00031#4 Add By Ken 160617
               
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
{<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL ammt356_delete_b('mmcp_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
{<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcp_t 
             WHERE mmcpent = g_enterprise AND mmcpdocno = g_mmbo_m.mmbodocno
               AND mmcp003 = g_mmco3_d[l_ac].mmcp003
               AND mmcp004 = g_mmco3_d[l_ac].mmcp004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
{<point name="input.body3.b_insert"/>}
               #end add-point
            
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               #LET gs_keys[2] = g_mmco3_d[g_detail_idx].mmcp003    #160613-00031#4 Mark By Ken 160617
               #LET gs_keys[3] = g_mmco3_d[g_detail_idx].mmcp004    #160613-00031#4 Mark By Ken 160617
               LET gs_keys[2] = g_mmco3_d[g_detail_idx3].mmcp003    #160613-00031#4 Add By Ken 160617
               LET gs_keys[3] = g_mmco3_d[g_detail_idx3].mmcp004    #160613-00031#4 Add By Ken 160617
               CALL ammt356_insert_b('mmcp_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
{<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_mmco_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmcp_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt356_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
{<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_mmco3_d[l_ac].* = g_mmco3_d_t.*
               CLOSE ammt356_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_mmco3_d[l_ac].* = g_mmco3_d_t.*
            ELSE
               #add-point:單身page3修改前
{<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE mmcp_t SET (mmcpdocno,mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp003,mmcp004,mmcp005, 
                   mmcp006,mmcp007,mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016, 
                   mmcpacti) = (g_mmbo_m.mmbodocno,g_mmco3_d[l_ac].mmcpunit,g_mmco3_d[l_ac].mmcpsite, 
                   g_mmco3_d[l_ac].mmcp001,g_mmco3_d[l_ac].mmcp002,g_mmco3_d[l_ac].mmcp003,g_mmco3_d[l_ac].mmcp004, 
                   g_mmco3_d[l_ac].mmcp005,g_mmco3_d[l_ac].mmcp006,g_mmco3_d[l_ac].mmcp007,g_mmco3_d[l_ac].mmcp008, 
                   g_mmco3_d[l_ac].mmcp009,g_mmco3_d[l_ac].mmcp010,g_mmco3_d[l_ac].mmcp011,g_mmco3_d[l_ac].mmcp012, 
                   g_mmco3_d[l_ac].mmcp013,g_mmco3_d[l_ac].mmcp014,g_mmco3_d[l_ac].mmcp015,g_mmco3_d[l_ac].mmcp016, 
                   g_mmco3_d[l_ac].mmcpacti) #自訂欄位頁簽
                WHERE mmcpent = g_enterprise AND mmcpdocno = g_mmbo_m.mmbodocno
                  AND mmcp003 = g_mmco3_d_t.mmcp003 #項次 
                  AND mmcp004 = g_mmco3_d_t.mmcp004
                  
               #add-point:單身page3修改中
{<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "mmcp_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_mmco3_d[l_ac].* = g_mmco3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmcp_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_mmco3_d[l_ac].* = g_mmco3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               #LET gs_keys[2] = g_mmco3_d[g_detail_idx].mmcp003    #160613-00031#4 Mark By Ken 160617
               LET gs_keys[2] = g_mmco3_d[g_detail_idx3].mmcp003    #160613-00031#4 Add By Ken 160617
               LET gs_keys_bak[2] = g_mmco3_d_t.mmcp003
               #LET gs_keys[3] = g_mmco3_d[g_detail_idx].mmcp004    #160613-00031#4 Mark By Ken 160617
               LET gs_keys[3] = g_mmco3_d[g_detail_idx3].mmcp004    #160613-00031#4 Add By Ken 160617
               LET gs_keys_bak[3] = g_mmco3_d_t.mmcp004
               CALL ammt356_update_b('mmcp_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page3修改後
{<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page3  >---------------------
         #----<<mmcpunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpunit
            #add-point:BEFORE FIELD mmcpunit
{<point name="input.b.page3.mmcpunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpunit
            
            #add-point:AFTER FIELD mmcpunit
{<point name="input.a.page3.mmcpunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcpunit
            #add-point:ON CHANGE mmcpunit
{<point name="input.g.page3.mmcpunit" />}
            #END add-point
 
         #----<<mmcpsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpsite
            #add-point:BEFORE FIELD mmcpsite
{<point name="input.b.page3.mmcpsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpsite
            
            #add-point:AFTER FIELD mmcpsite
{<point name="input.a.page3.mmcpsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcpsite
            #add-point:ON CHANGE mmcpsite
{<point name="input.g.page3.mmcpsite" />}
            #END add-point
 
         #----<<mmcp001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp001
            #add-point:BEFORE FIELD mmcp001
{<point name="input.b.page3.mmcp001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp001
            
            #add-point:AFTER FIELD mmcp001
{<point name="input.a.page3.mmcp001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp001
            #add-point:ON CHANGE mmcp001
{<point name="input.g.page3.mmcp001" />}
            #END add-point
 
         #----<<mmcp002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp002
            #add-point:BEFORE FIELD mmcp002
{<point name="input.b.page3.mmcp002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp002
            
            #add-point:AFTER FIELD mmcp002
{<point name="input.a.page3.mmcp002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp002
            #add-point:ON CHANGE mmcp002
{<point name="input.g.page3.mmcp002" />}
            #END add-point
 
         #----<<mmcp003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp003
            #add-point:BEFORE FIELD mmcp003
{<point name="input.b.page3.mmcp003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp003
            
            #add-point:AFTER FIELD mmcp003
{<point name="input.a.page3.mmcp003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp003
            #add-point:ON CHANGE mmcp003
{<point name="input.g.page3.mmcp003" />}
            #END add-point
 
         #----<<mmcp004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp004
            #add-point:BEFORE FIELD mmcp004
{<point name="input.b.page3.mmcp004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp004
            
            #add-point:AFTER FIELD mmcp004
{<point name="input.a.page3.mmcp004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp004
            #add-point:ON CHANGE mmcp004
{<point name="input.g.page3.mmcp004" />}
            #END add-point
 
         #----<<mmcp004_desc>>----
         #----<<mmcp005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp005
            #add-point:BEFORE FIELD mmcp005
{<point name="input.b.page3.mmcp005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp005
            
            #add-point:AFTER FIELD mmcp005
{<point name="input.a.page3.mmcp005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp005
            #add-point:ON CHANGE mmcp005
{<point name="input.g.page3.mmcp005" />}
            #END add-point
 
         #----<<mmcp006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp006
            #add-point:BEFORE FIELD mmcp006
{<point name="input.b.page3.mmcp006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp006
            
            #add-point:AFTER FIELD mmcp006
{<point name="input.a.page3.mmcp006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp006
            #add-point:ON CHANGE mmcp006
{<point name="input.g.page3.mmcp006" />}
            #END add-point
 
         #----<<mmcp007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp007
            #add-point:BEFORE FIELD mmcp007
{<point name="input.b.page3.mmcp007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp007
            
            #add-point:AFTER FIELD mmcp007
{<point name="input.a.page3.mmcp007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp007
            #add-point:ON CHANGE mmcp007
{<point name="input.g.page3.mmcp007" />}
            #END add-point
 
         #----<<mmcp008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp008
            #add-point:BEFORE FIELD mmcp008
{<point name="input.b.page3.mmcp008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp008
            
            #add-point:AFTER FIELD mmcp008
{<point name="input.a.page3.mmcp008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp008
            #add-point:ON CHANGE mmcp008
{<point name="input.g.page3.mmcp008" />}
            #END add-point
 
         #----<<mmcp009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp009
            #add-point:BEFORE FIELD mmcp009
{<point name="input.b.page3.mmcp009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp009
            
            #add-point:AFTER FIELD mmcp009
{<point name="input.a.page3.mmcp009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp009
            #add-point:ON CHANGE mmcp009
{<point name="input.g.page3.mmcp009" />}
            #END add-point
 
         #----<<mmcp010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp010
            #add-point:BEFORE FIELD mmcp010
{<point name="input.b.page3.mmcp010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp010
            
            #add-point:AFTER FIELD mmcp010
{<point name="input.a.page3.mmcp010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp010
            #add-point:ON CHANGE mmcp010
{<point name="input.g.page3.mmcp010" />}
            #END add-point
 
         #----<<mmcp011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp011
            #add-point:BEFORE FIELD mmcp011
{<point name="input.b.page3.mmcp011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp011
            
            #add-point:AFTER FIELD mmcp011
{<point name="input.a.page3.mmcp011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp011
            #add-point:ON CHANGE mmcp011
{<point name="input.g.page3.mmcp011" />}
            #END add-point
 
         #----<<mmcp012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp012
            #add-point:BEFORE FIELD mmcp012
{<point name="input.b.page3.mmcp012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp012
            
            #add-point:AFTER FIELD mmcp012
{<point name="input.a.page3.mmcp012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp012
            #add-point:ON CHANGE mmcp012
{<point name="input.g.page3.mmcp012" />}
            #END add-point
 
         #----<<mmcp013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp013
            #add-point:BEFORE FIELD mmcp013
{<point name="input.b.page3.mmcp013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp013
            
            #add-point:AFTER FIELD mmcp013
{<point name="input.a.page3.mmcp013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp013
            #add-point:ON CHANGE mmcp013
{<point name="input.g.page3.mmcp013" />}
            #END add-point
 
         #----<<mmcp014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp014
            #add-point:BEFORE FIELD mmcp014
{<point name="input.b.page3.mmcp014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp014
            
            #add-point:AFTER FIELD mmcp014
{<point name="input.a.page3.mmcp014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp014
            #add-point:ON CHANGE mmcp014
{<point name="input.g.page3.mmcp014" />}
            #END add-point
 
         #----<<mmcp015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp015
            #add-point:BEFORE FIELD mmcp015
{<point name="input.b.page3.mmcp015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp015
            
            #add-point:AFTER FIELD mmcp015
{<point name="input.a.page3.mmcp015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp015
            #add-point:ON CHANGE mmcp015
{<point name="input.g.page3.mmcp015" />}
            #END add-point
 
         #----<<mmcp016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcp016
            #add-point:BEFORE FIELD mmcp016
{<point name="input.b.page3.mmcp016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcp016
            
            #add-point:AFTER FIELD mmcp016
{<point name="input.a.page3.mmcp016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcp016
            #add-point:ON CHANGE mmcp016
{<point name="input.g.page3.mmcp016" />}
            #END add-point
 
         #----<<mmcpacti>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmcpacti
            #add-point:BEFORE FIELD mmcpacti
{<point name="input.b.page3.mmcpacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcpacti
            
            #add-point:AFTER FIELD mmcpacti
{<point name="input.a.page3.mmcpacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcpacti
            #add-point:ON CHANGE mmcpacti
{<point name="input.g.page3.mmcpacti" />}
            #END add-point
 
 
         #---------------------<  Detail: page3  >---------------------
         #----<<mmcpunit>>----
         #Ctrlp:input.c.page3.mmcpunit
         ON ACTION controlp INFIELD mmcpunit
            #add-point:ON ACTION controlp INFIELD mmcpunit
{<point name="input.c.page3.mmcpunit" />}
            #END add-point
 
         #----<<mmcpsite>>----
         #Ctrlp:input.c.page3.mmcpsite
         ON ACTION controlp INFIELD mmcpsite
            #add-point:ON ACTION controlp INFIELD mmcpsite
{<point name="input.c.page3.mmcpsite" />}
            #END add-point
 
         #----<<mmcp001>>----
         #Ctrlp:input.c.page3.mmcp001
         ON ACTION controlp INFIELD mmcp001
            #add-point:ON ACTION controlp INFIELD mmcp001
{<point name="input.c.page3.mmcp001" />}
            #END add-point
 
         #----<<mmcp002>>----
         #Ctrlp:input.c.page3.mmcp002
         ON ACTION controlp INFIELD mmcp002
            #add-point:ON ACTION controlp INFIELD mmcp002
{<point name="input.c.page3.mmcp002" />}
            #END add-point
 
         #----<<mmcp003>>----
         #Ctrlp:input.c.page3.mmcp003
         ON ACTION controlp INFIELD mmcp003
            #add-point:ON ACTION controlp INFIELD mmcp003
{<point name="input.c.page3.mmcp003" />}
            #END add-point
 
         #----<<mmcp004>>----
         #Ctrlp:input.c.page3.mmcp004
         ON ACTION controlp INFIELD mmcp004
            #add-point:ON ACTION controlp INFIELD mmcp004
{<point name="input.c.page3.mmcp004" />}
            #END add-point
 
         #----<<mmcp004_desc>>----
         #----<<mmcp005>>----
         #Ctrlp:input.c.page3.mmcp005
         ON ACTION controlp INFIELD mmcp005
            #add-point:ON ACTION controlp INFIELD mmcp005
{<point name="input.c.page3.mmcp005" />}
            #END add-point
 
         #----<<mmcp006>>----
         #Ctrlp:input.c.page3.mmcp006
         ON ACTION controlp INFIELD mmcp006
            #add-point:ON ACTION controlp INFIELD mmcp006
{<point name="input.c.page3.mmcp006" />}
            #END add-point
 
         #----<<mmcp007>>----
         #Ctrlp:input.c.page3.mmcp007
         ON ACTION controlp INFIELD mmcp007
            #add-point:ON ACTION controlp INFIELD mmcp007
{<point name="input.c.page3.mmcp007" />}
            #END add-point
 
         #----<<mmcp008>>----
         #Ctrlp:input.c.page3.mmcp008
         ON ACTION controlp INFIELD mmcp008
            #add-point:ON ACTION controlp INFIELD mmcp008
{<point name="input.c.page3.mmcp008" />}
            #END add-point
 
         #----<<mmcp009>>----
         #Ctrlp:input.c.page3.mmcp009
         ON ACTION controlp INFIELD mmcp009
            #add-point:ON ACTION controlp INFIELD mmcp009
{<point name="input.c.page3.mmcp009" />}
            #END add-point
 
         #----<<mmcp010>>----
         #Ctrlp:input.c.page3.mmcp010
         ON ACTION controlp INFIELD mmcp010
            #add-point:ON ACTION controlp INFIELD mmcp010
{<point name="input.c.page3.mmcp010" />}
            #END add-point
 
         #----<<mmcp011>>----
         #Ctrlp:input.c.page3.mmcp011
         ON ACTION controlp INFIELD mmcp011
            #add-point:ON ACTION controlp INFIELD mmcp011
{<point name="input.c.page3.mmcp011" />}
            #END add-point
 
         #----<<mmcp012>>----
         #Ctrlp:input.c.page3.mmcp012
         ON ACTION controlp INFIELD mmcp012
            #add-point:ON ACTION controlp INFIELD mmcp012
{<point name="input.c.page3.mmcp012" />}
            #END add-point
 
         #----<<mmcp013>>----
         #Ctrlp:input.c.page3.mmcp013
         ON ACTION controlp INFIELD mmcp013
            #add-point:ON ACTION controlp INFIELD mmcp013
{<point name="input.c.page3.mmcp013" />}
            #END add-point
 
         #----<<mmcp014>>----
         #Ctrlp:input.c.page3.mmcp014
         ON ACTION controlp INFIELD mmcp014
            #add-point:ON ACTION controlp INFIELD mmcp014
{<point name="input.c.page3.mmcp014" />}
            #END add-point
 
         #----<<mmcp015>>----
         #Ctrlp:input.c.page3.mmcp015
         ON ACTION controlp INFIELD mmcp015
            #add-point:ON ACTION controlp INFIELD mmcp015
{<point name="input.c.page3.mmcp015" />}
            #END add-point
 
         #----<<mmcp016>>----
         #Ctrlp:input.c.page3.mmcp016
         ON ACTION controlp INFIELD mmcp016
            #add-point:ON ACTION controlp INFIELD mmcp016
{<point name="input.c.page3.mmcp016" />}
            #END add-point
 
         #----<<mmcpacti>>----
         #Ctrlp:input.c.page3.mmcpacti
         ON ACTION controlp INFIELD mmcpacti
            #add-point:ON ACTION controlp INFIELD mmcpacti
{<point name="input.c.page3.mmcpacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
{<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmco3_d[l_ac].* = g_mmco3_d_t.*
               END IF
               CLOSE ammt356_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt356_unlock_b("mmcp_t","'3'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmco3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmco3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      

{</section>}

{<section id="ammt356.input.other" >}
      
      #add-point:自定義input
{<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
{<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbosite #sakura add
            NEXT FIELD mmbodocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcounit
               WHEN "s_detail2"
                  NEXT FIELD mmbsunit
               WHEN "s_detail3"
                  NEXT FIELD mmcpunit
               #160613-00031#4 Add By Ken 160617(S)
               WHEN "s_detail4"
                  NEXT FIELD mmdj006               
               #160613-00031#4 Add By Ken 160617(E)
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
{<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         LET g_detail_idx3 = 1    #160613-00031#4 Add By Ken 160617
         LET g_detail_idx4 = 1    #160613-00031#4 Add By Ken 160617
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
{<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="ammt356.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt356_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
{<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
{<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmbo_m_t.* = g_mmbo_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammt356_b_fill() #單身填充
      CALL ammt356_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmbo_m.mmboownid_desc = cl_get_username(g_mmbo_m.mmboownid)
      #LET g_mmbo_m.mmboowndp_desc = cl_get_deptname(g_mmbo_m.mmboowndp)
      #LET g_mmbo_m.mmbocrtid_desc = cl_get_username(g_mmbo_m.mmbocrtid)
      #LET g_mmbo_m.mmbocrtdp_desc = cl_get_deptname(g_mmbo_m.mmbocrtdp)
      #LET g_mmbo_m.mmbomodid_desc = cl_get_username(g_mmbo_m.mmbomodid)
      #LET g_mmbo_m.mmbocnfid_desc = cl_get_deptname(g_mmbo_m.mmbocnfid)
      ##LET g_mmbo_m.mmbopstid_desc = cl_get_deptname(g_mmbo_m.mmbopstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt356_set_pk_array()
   #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
{<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006, 
       g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmbosite_desc,g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmcp004_1, 
       g_mmbo_m.mmcp011_1,g_mmbo_m.mmcp013_1,g_mmbo_m.mmcp015_1,g_mmbo_m.mmcp004_1_desc,g_mmbo_m.mmcp012_1, 
       g_mmbo_m.mmcp014_1,g_mmbo_m.mmcp016_1,g_mmbo_m.mmbo017
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmbo_m.mmbostus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmco_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
{<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmco2_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
{<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmco3_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
{<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
{<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt356_detail_show()
   
   #add-point:show段之後
{<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="ammt356.detail_show" >}
#+ 單身reference detail_show
PRIVATE FUNCTION ammt356_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="ammt356.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION ammt356_reproduce()
   DEFINE l_newno     LIKE mmbo_t.mmbodocno 
   DEFINE l_oldno     LIKE mmbo_t.mmbodocno 
 
   DEFINE l_master    RECORD LIKE mmbo_t.*
   DEFINE l_detail    RECORD LIKE mmco_t.*
   DEFINE l_detail2    RECORD LIKE mmbs_t.*
 
   DEFINE l_detail3    RECORD LIKE mmcp_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
    
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
    
   LET g_mmbo_m.mmbodocno = ""
 
    
   CALL ammt356_set_entry('a')
   CALL ammt356_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmbo_m.mmboownid = g_user
      LET g_mmbo_m.mmboowndp = g_dept
      LET g_mmbo_m.mmbocrtid = g_user
      LET g_mmbo_m.mmbocrtdp = g_dept 
      LET g_mmbo_m.mmbocrtdt = cl_get_current()
      LET g_mmbo_m.mmbomodid = ""
      LET g_mmbo_m.mmbomoddt = ""
      #LET g_mmbo_m.mmbostus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt356_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " mmbodocno = '", g_mmbo_m.mmbodocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="ammt356.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION ammt356_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmco_t.*
   DEFINE l_detail2    RECORD LIKE mmbs_t.*
 
   DEFINE l_detail3    RECORD LIKE mmcp_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt356_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt356_detail AS ",
                "SELECT * FROM mmco_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt356_detail SELECT * FROM mmco_t 
                                         WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbodocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt356_detail 
      #更新key欄位
      SET mmcodocno = g_mmbo_m.mmbodocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmco_t SELECT * FROM ammt356_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt356_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt356_detail AS ",
      "SELECT * FROM mmbs_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt356_detail SELECT * FROM mmbs_t
                                         WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbodocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt356_detail SET mmbsdocno = g_mmbo_m.mmbodocno
 
  
   #將資料塞回原table   
   INSERT INTO mmbs_t SELECT * FROM ammt356_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt356_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt356_detail AS ",
      "SELECT * FROM mmcp_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt356_detail SELECT * FROM mmcp_t
                                         WHERE mmcpent = g_enterprise AND mmcpdocno = g_mmbodocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt356_detail SET mmcpdocno = g_mmbo_m.mmbodocno
 
  
   #將資料塞回原table   
   INSERT INTO mmcp_t SELECT * FROM ammt356_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt356_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   
   DROP TABLE ammt356_detail
   
END FUNCTION

{</section>}

{<section id="ammt356.delete" >}
#+ 資料刪除
PRIVATE FUNCTION ammt356_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
 
   EXECUTE ammt356_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006,g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002, 
       g_mmbo_m.mmbo005,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid, 
       g_mmbo_m.mmbocnfdt
   
   LET g_master_multi_table_t.mmboldocno = g_mmbo_m.mmbodocno
LET g_master_multi_table_t.mmbol002 = g_mmbo_m.mmbol002
LET g_master_multi_table_t.mmbol003 = g_mmbo_m.mmbol003
 
 
   CALL ammt356_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt356_cl USING g_enterprise,g_mmbo_m.mmbodocno
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN ammt356_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE ammt356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH ammt356_cl INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo006, 
       g_mmbo_m.mmbo003,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbo007,g_mmbo_m.mmbo008,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbo017,g_mmbo_m.mmbosite, 
       g_mmbo_m.mmbosite_desc,g_mmbo_m.mmboacti,g_mmbo_m.mmbounit,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc, 
       g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmcp004_1, 
       g_mmbo_m.mmcp011_1,g_mmbo_m.mmcp013_1,g_mmbo_m.mmcp015_1,g_mmbo_m.mmcp004_1_desc,g_mmbo_m.mmcp012_1, 
       g_mmbo_m.mmcp014_1,g_mmbo_m.mmcp016_1              #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_mmbo_m.mmbodocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
{<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt356_set_pk_array()
      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
 
      DELETE FROM mmbo_t
       WHERE mmboent = g_enterprise AND mmbodocno = g_mmbo_m.mmbodocno
 
       
      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_mmbo_m.mmbodocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmco_t
       WHERE mmcoent = g_enterprise AND mmcodocno = g_mmbo_m.mmbodocno
 
 
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmco_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
{<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmbs_t
       WHERE mmbsent = g_enterprise AND
             mmbsdocno = g_mmbo_m.mmbodocno
      #add-point:單身刪除中
{<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmbs_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
{<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmcp_t
       WHERE mmcpent = g_enterprise AND
             mmcpdocno = g_mmbo_m.mmbodocno
      #add-point:單身刪除中
{<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmcp_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
      #160613-00031#4 Add By Ken 160617(S)
      DELETE FROM mmdj_t
       WHERE mmdjent = g_enterprise AND
             mmdjdocno = g_mmbo_m.mmbodocno

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmdj_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #160613-00031#4 Add By Ken 160617(E)
 
                                                               
      CLEAR FORM
      CALL g_mmco_d.clear() 
      CALL g_mmco2_d.clear()       
      CALL g_mmco3_d.clear()  
      CALL g_mmco4_d.clear()       #160613-00031#4 Add By Ken 160617  
 
     
      CALL ammt356_ui_browser_refresh()  
      CALL ammt356_ui_headershow()  
      CALL ammt356_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt356_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt356_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
   LET l_field_keys[01] = 'mmboldocno'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'mmbol001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mmbol_t')
 
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt356_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmbo_m.mmbodocno,'D')
    
END FUNCTION

{</section>}

{<section id="ammt356.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ammt356_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmco_d.clear()    #g_mmco_d 單頭及單身 
   CALL g_mmco2_d.clear()
   CALL g_mmco3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt356_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmcounit,mmcosite,mmco001,mmco002,mmco003,mmco004,'',mmco005,mmcoacti FROM mmco_t", 
             
                  " INNER JOIN mmbo_t ON mmbodocno = mmcodocno ",
 
                  #"",
                  
                  "",
                  " WHERE mmcoent=? AND mmcodocno=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmco_t.mmco003,mmco_t.mmco004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE ammt356_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt356_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmbo_m.mmbodocno
 
                                               
      FOREACH b_fill_cs INTO g_mmco_d[l_ac].mmcounit,g_mmco_d[l_ac].mmcosite,g_mmco_d[l_ac].mmco001, 
          g_mmco_d[l_ac].mmco002,g_mmco_d[l_ac].mmco003,g_mmco_d[l_ac].mmco004,g_mmco_d[l_ac].mmco004_desc, 
          g_mmco_d[l_ac].mmco005,g_mmco_d[l_ac].mmcoacti
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  9035
               LET g_errparam.extend =  ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammt356_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs004,'',mmbs005,mmbsacti FROM mmbs_t", 
             
                  " INNER JOIN mmbo_t ON mmbodocno = mmbsdocno ",
 
                  "",
                  
                  " WHERE mmbsent=? AND mmbsdocno=?"   
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmbs_t.mmbs004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      PREPARE ammt356_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammt356_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmbo_m.mmbodocno
 
                                               
      FOREACH b_fill_cs2 INTO g_mmco2_d[l_ac].mmbsunit,g_mmco2_d[l_ac].mmbssite,g_mmco2_d[l_ac].mmbs001, 
          g_mmco2_d[l_ac].mmbs002,g_mmco2_d[l_ac].mmbs003,g_mmco2_d[l_ac].mmbs004,g_mmco2_d[l_ac].mmbs004_desc, 
          g_mmco2_d[l_ac].mmbs005,g_mmco2_d[l_ac].mmbsacti
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt356_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp003,mmcp004,'',mmcp005,mmcp006, 
          mmcp007,mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016,mmcpacti FROM mmcp_t", 
             
                  " INNER JOIN mmbo_t ON mmbodocno = mmcpdocno ",
 
                  "",
                  
                  " WHERE mmcpent=? AND mmcpdocno=?"   
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcp_t.mmcp003,mmcp_t.mmcp004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      PREPARE ammt356_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR ammt356_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmbo_m.mmbodocno
 
                                               
      FOREACH b_fill_cs3 INTO g_mmco3_d[l_ac].mmcpunit,g_mmco3_d[l_ac].mmcpsite,g_mmco3_d[l_ac].mmcp001, 
          g_mmco3_d[l_ac].mmcp002,g_mmco3_d[l_ac].mmcp003,g_mmco3_d[l_ac].mmcp004,g_mmco3_d[l_ac].mmcp004_desc, 
          g_mmco3_d[l_ac].mmcp005,g_mmco3_d[l_ac].mmcp006,g_mmco3_d[l_ac].mmcp007,g_mmco3_d[l_ac].mmcp008, 
          g_mmco3_d[l_ac].mmcp009,g_mmco3_d[l_ac].mmcp010,g_mmco3_d[l_ac].mmcp011,g_mmco3_d[l_ac].mmcp012, 
          g_mmco3_d[l_ac].mmcp013,g_mmco3_d[l_ac].mmcp014,g_mmco3_d[l_ac].mmcp015,g_mmco3_d[l_ac].mmcp016, 
          g_mmco3_d[l_ac].mmcpacti
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmco_d.deleteElement(g_mmco_d.getLength())
   CALL g_mmco2_d.deleteElement(g_mmco2_d.getLength())
   CALL g_mmco3_d.deleteElement(g_mmco3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt356_pb
   FREE ammt356_pb2
 
   FREE ammt356_pb3
 
 
   
END FUNCTION

{</section>}

{<section id="ammt356.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt356_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmco_t
       WHERE mmcoent = g_enterprise AND
         mmcodocno = ps_keys_bak[1] AND mmco003 = ps_keys_bak[2] AND mmco004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmbs_t
       WHERE mmbsent = g_enterprise AND
         mmbsdocno = ps_keys_bak[1] AND mmbs004 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmbs_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcp_t
       WHERE mmcpent = g_enterprise AND
         mmcpdocno = ps_keys_bak[1] AND mmcp003 = ps_keys_bak[2] AND mmcp004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmcp_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="ammt356.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt356_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmco_t
                  (mmcoent,
                   mmcodocno,
                   mmco003,mmco004
                   ,mmcounit,mmcosite,mmco001,mmco002,mmco005,mmcoacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmco_d[g_detail_idx].mmcounit,g_mmco_d[g_detail_idx].mmcosite,g_mmco_d[g_detail_idx].mmco001, 
                       g_mmco_d[g_detail_idx].mmco002,g_mmco_d[g_detail_idx].mmco005,g_mmco_d[g_detail_idx].mmcoacti) 

      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmco_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmbs_t
                  (mmbsent,
                   mmbsdocno,
                   mmbs004
                   ,mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs005,mmbsacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmco2_d[g_detail_idx].mmbsunit,g_mmco2_d[g_detail_idx].mmbssite,g_mmco2_d[g_detail_idx].mmbs001, 
                       g_mmco2_d[g_detail_idx].mmbs002,g_mmco2_d[g_detail_idx].mmbs003,g_mmco2_d[g_detail_idx].mmbs005, 
                       g_mmco2_d[g_detail_idx].mmbsacti)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmbs_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      #160613-00031#4 Modify By Ken 160617(S)  g_detail_idx->g_detail_idx3
      INSERT INTO mmcp_t
                  (mmcpent,
                   mmcpdocno,
                   mmcp003,mmcp004
                   ,mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp005,mmcp006,mmcp007,mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016,mmcpacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmco3_d[g_detail_idx3].mmcpunit,g_mmco3_d[g_detail_idx3].mmcpsite,g_mmco3_d[g_detail_idx3].mmcp001, 
                       g_mmco3_d[g_detail_idx3].mmcp002,g_mmco3_d[g_detail_idx3].mmcp005,g_mmco3_d[g_detail_idx3].mmcp006, 
                       g_mmco3_d[g_detail_idx3].mmcp007,g_mmco3_d[g_detail_idx3].mmcp008,g_mmco3_d[g_detail_idx3].mmcp009, 
                       g_mmco3_d[g_detail_idx3].mmcp010,g_mmco3_d[g_detail_idx3].mmcp011,g_mmco3_d[g_detail_idx3].mmcp012, 
                       g_mmco3_d[g_detail_idx3].mmcp013,g_mmco3_d[g_detail_idx3].mmcp014,g_mmco3_d[g_detail_idx3].mmcp015, 
                       g_mmco3_d[g_detail_idx3].mmcp016,g_mmco3_d[g_detail_idx3].mmcpacti)
      #160613-00031#4 Modify By Ken 160617(E)                        
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmcp_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
{<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="ammt356.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt356_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmco_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmco_t 
         SET (mmcodocno,
              mmco003,mmco004
              ,mmcounit,mmcosite,mmco001,mmco002,mmco005,mmcoacti) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmco_d[g_detail_idx].mmcounit,g_mmco_d[g_detail_idx].mmcosite,g_mmco_d[g_detail_idx].mmco001, 
                  g_mmco_d[g_detail_idx].mmco002,g_mmco_d[g_detail_idx].mmco005,g_mmco_d[g_detail_idx].mmcoacti)  

         WHERE mmcoent = g_enterprise AND mmcodocno = ps_keys_bak[1] AND mmco003 = ps_keys_bak[2] AND mmco004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "mmco_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "mmco_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbs_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmbs_t 
         SET (mmbsdocno,
              mmbs004
              ,mmbsunit,mmbssite,mmbs001,mmbs002,mmbs003,mmbs005,mmbsacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmco2_d[g_detail_idx].mmbsunit,g_mmco2_d[g_detail_idx].mmbssite,g_mmco2_d[g_detail_idx].mmbs001, 
                  g_mmco2_d[g_detail_idx].mmbs002,g_mmco2_d[g_detail_idx].mmbs003,g_mmco2_d[g_detail_idx].mmbs005, 
                  g_mmco2_d[g_detail_idx].mmbsacti) 
         WHERE mmbsent = g_enterprise AND mmbsdocno = ps_keys_bak[1] AND mmbs004 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "mmbs_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "mmbs_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcp_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE mmcp_t 
         SET (mmcpdocno,
              mmcp003,mmcp004
              ,mmcpunit,mmcpsite,mmcp001,mmcp002,mmcp005,mmcp006,mmcp007,mmcp008,mmcp009,mmcp010,mmcp011,mmcp012,mmcp013,mmcp014,mmcp015,mmcp016,mmcpacti) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmco3_d[g_detail_idx].mmcpunit,g_mmco3_d[g_detail_idx].mmcpsite,g_mmco3_d[g_detail_idx].mmcp001, 
                  g_mmco3_d[g_detail_idx].mmcp002,g_mmco3_d[g_detail_idx].mmcp005,g_mmco3_d[g_detail_idx].mmcp006, 
                  g_mmco3_d[g_detail_idx].mmcp007,g_mmco3_d[g_detail_idx].mmcp008,g_mmco3_d[g_detail_idx].mmcp009, 
                  g_mmco3_d[g_detail_idx].mmcp010,g_mmco3_d[g_detail_idx].mmcp011,g_mmco3_d[g_detail_idx].mmcp012, 
                  g_mmco3_d[g_detail_idx].mmcp013,g_mmco3_d[g_detail_idx].mmcp014,g_mmco3_d[g_detail_idx].mmcp015, 
                  g_mmco3_d[g_detail_idx].mmcp016,g_mmco3_d[g_detail_idx].mmcpacti) 
         WHERE mmcpent = g_enterprise AND mmcpdocno = ps_keys_bak[1] AND mmcp003 = ps_keys_bak[2] AND mmcp004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "mmcp_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "mmcp_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="ammt356.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt356_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
{<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt356_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmco_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt356_bcl USING g_enterprise,
                                       g_mmbo_m.mmbodocno,g_mmco_d[g_detail_idx].mmco003,g_mmco_d[g_detail_idx].mmco004  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "ammt356_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmbs_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt356_bcl2 USING g_enterprise,
                                             g_mmbo_m.mmbodocno,g_mmco2_d[g_detail_idx].mmbs004
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "ammt356_bcl2"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmcp_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt356_bcl3 USING g_enterprise,
                                             g_mmbo_m.mmbodocno,g_mmco3_d[g_detail_idx3].mmcp003,g_mmco3_d[g_detail_idx3].mmcp004  #160613-00031#4 Add By Ken 160617 
                                             #g_mmbo_m.mmbodocno,g_mmco3_d[g_detail_idx].mmcp003,g_mmco3_d[g_detail_idx].mmcp004   #160613-00031#4 Mark By Ken 160617
                                             

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "ammt356_bcl3"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
{<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="ammt356.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt356_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt356_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt356_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt356_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="ammt356.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt356_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbodocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="ammt356.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt356_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbodocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="ammt356.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt356_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="ammt356.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt356_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="ammt356.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION ammt356_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " mmbodocno = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="ammt356.state_change" >}
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt356_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
{<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
{<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbo_m.mmbostus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
{<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN   #151027-00016#2 20160115 add by beckxie
            LET lc_state = "N"
            #add-point:action控制
{<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF   #151027-00016#2 20160115 add by beckxie
         EXIT MENU
#160615-00003#1 -s  by 08172
#      ON ACTION invalid
#         IF cl_auth_chk_act("invalid") THEN   #151027-00016#2 20160115 add by beckxie
#            LET lc_state = "X"
#            #add-point:action控制
{<point name="statechange.invalid"/>}
#            #end add-point
#         END IF   #151027-00016#2 20160115 add by beckxie
#         EXIT MENU
#160615-00003#1 -e  by 08172
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN   #151027-00016#2 20160115 add by beckxie
            LET lc_state = "Y"
            #add-point:action控制
{<point name="statechange.confirmed"/>}
            #end add-point
         END IF   #151027-00016#2 20160115 add by beckxie
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN   #151027-00016#2 20160115 add by beckxie
            LET lc_state = "X"
            #add-point:action控制
            
            #end add-point
         END IF   #151027-00016#2 20160115 add by beckxie
         EXIT MENU
     
      #add-point:stus控制
{<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
{<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmbo_t SET mmbostus = lc_state 
    WHERE mmboent = g_enterprise AND mmbodocno = g_mmbo_m.mmbodocno
 
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_mmbo_m.mmbostus = lc_state
      DISPLAY BY NAME g_mmbo_m.mmbostus
   END IF
 
   #add-point:stus修改後
{<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
{<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="ammt356.idx_chk" >}
#+ 單身筆數變更
PRIVATE FUNCTION ammt356_idx_chk()
   #add-point:idx_chk段define
{<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmco_d.getLength() THEN
         LET g_detail_idx = g_mmco_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmco_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmco_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmco2_d.getLength() THEN
         LET g_detail_idx = g_mmco2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmco2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmco2_d.getLength() TO FORMONLY.cnt
   END IF
   #160613-00031#4 Mark By Ken 160617(S)
   #IF g_current_page = 3 THEN
   #   LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
   #   IF g_detail_idx > g_mmco3_d.getLength() THEN
   #      LET g_detail_idx = g_mmco3_d.getLength()
   #   END IF
   #   IF g_detail_idx = 0 AND g_mmco3_d.getLength() <> 0 THEN
   #      LET g_detail_idx = 1
   #   END IF
   #   DISPLAY g_detail_idx TO FORMONLY.idx
   #   DISPLAY g_mmco3_d.getLength() TO FORMONLY.cnt
   #END IF
   #160613-00031#4 Mark By Ken 160617(E)
   
   #add-point:idx_chk段other
{<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="ammt356.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ammt356_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
{<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   #160613-00031#4 Add By Ken 160616(S)
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx

   CALL g_mmco4_d.clear() 


   LET g_sql = "SELECT UNIQUE mmdj005,mmdj006,mmdj007,mmdj008,mmdj009, ",
               "       mmdj010,mmdj011,mmdjacti ",
               "  FROM mmdj_t ",
               " WHERE mmdjent = '",g_enterprise,"' AND mmdjdocno = '",g_mmbo_m.mmbodocno,"' ",  
               "   AND mmdj003 = '",g_mmco3_d[g_detail_idx3].mmcp003,"' AND mmdj004 = '",g_mmco3_d[g_detail_idx3].mmcp004,"' "
   
   IF NOT cl_null(g_wc2_table4) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
   END IF
   
   LET g_sql = g_sql, " ORDER BY mmdj005"
   
   PREPARE ammt356_pb4 FROM g_sql
   DECLARE b_fill_cs4 CURSOR FOR ammt356_pb4
   LET l_ac = 1
   
   FOREACH b_fill_cs4 INTO g_mmco4_d[l_ac].mmdj005,g_mmco4_d[l_ac].mmdj006,g_mmco4_d[l_ac].mmdj007,g_mmco4_d[l_ac].mmdj008,g_mmco4_d[l_ac].mmdj009,g_mmco4_d[l_ac].mmdj010,g_mmco4_d[l_ac].mmdj011,g_mmco4_d[l_ac].mmdjacti
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   
   CALL g_mmco4_d.deleteElement(g_mmco4_d.getLength())   
   FREE ammt356_pb4    
 
   #160613-00031#4 Add By Ken 160616(E)   
   #add-point:單身填充後
{<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt356_detail_show()
   
END FUNCTION

{</section>}

{<section id="ammt356.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION ammt356_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
{<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  THEN   
      #add-point:fill_chk段define
{<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   #160613-00031#4 Add By Ken 160617(S)
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF   
   #160613-00031#4 Add By Ken 160617(E) 
 
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="ammt356.signature" >}
   

{</section>}

{<section id="ammt356.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt356_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbo_m.mmbodocno
   LET g_pk_array[1].column = 'mmbodocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="ammt356.other_dialog" readonly="Y" >}
 

{</section>}

{<section id="ammt356.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

