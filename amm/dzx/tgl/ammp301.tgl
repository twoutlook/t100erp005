{<section id="ammp301.description" >}
#+ Version..: T100-ERP-1.00.00(版次:1) Build-000070
#+ 
#+ Filename...: ammp301
#+ Description: 會員資料批次處理作業
#+ Creator....: 02296(2014/04/14)
#+ Modifier...: 02296(2014/04/14)
#+ Buildtype..: 應用 q01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="ammp301.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_mmaf_d RECORD
       sel            LIKE type_t.chr1,
       mmaf001 LIKE mmaf_t.mmaf001, 
   mmaf004 LIKE mmaf_t.mmaf004, 
   mmaf008 LIKE mmaf_t.mmaf008, 
   mmaf009 LIKE mmaf_t.mmaf009, 
   mmaf013 LIKE mmaf_t.mmaf013, 
   mmaf014 LIKE mmaf_t.mmaf014, 
   mmaf015 LIKE mmaf_t.mmaf015
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmaf_d            DYNAMIC ARRAY OF type_g_mmaf_d
DEFINE g_mmaf_d_t          type_g_mmaf_d
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num5              #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num5
DEFINE g_detail_cnt          LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_master_idx          LIKE type_t.num5
DEFINE g_detail_idx          LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num5
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="ammp301.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE ammp301_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammp301 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammp301_init()   
 
      #進入選單 Menu (="N")
      CALL ammp301_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammp301
      
   END IF 
   
   CLOSE ammp301_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="ammp301.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammp301_init()
 
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
#  LET g_selcolor    = "#D0E7FD"
   
     
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="ammp301.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ammp301_ui_dialog() 
   {<Local define>}
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_result STRING
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_row = 0
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET g_main_hidden = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL ammp301_b_fill()
  
   WHILE li_exit = FALSE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落
         {<point name="ui_dialog.construct"/>}
         #end add-point
     
         DISPLAY ARRAY g_mmaf_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_mmaf_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL ammp301_b_fill2()
 
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point
 
            #自訂ACTION(detail_show,page_1)
            
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
      
         BEFORE DIALOG
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD sel
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_mmaf_d.getLength()
               LET g_mmaf_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_mmaf_d.getLength()
               LET g_mmaf_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_mmaf_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_mmaf_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_mmaf_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_mmaf_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
            ON ACTION qbehidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("qbe",0)
                  CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("qbe",1)
                  CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
 
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            LET g_wc2 = " 1=1"
 
            #儲存WC資訊
            CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
            CALL ammp301_b_fill()
            NEXT FIELD sel   # 為了讓一開始的focus停留在單頭
      
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
                  #+ 此段落由子樣板qs16產生
         ON ACTION filter
            LET g_action_choice="filter"
            CALL ammp301_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
 
         
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION

{</section>}

{<section id="ammp301.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ammp301_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_mmaf_d.clear()
 
 
   
 
   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"
 
   # b_fill段sql組成及FOREACH撰寫
      #+ 此段落由子樣板qs04產生
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET g_sql = "SELECT  UNIQUE mmaf001,mmaf004,mmaf008,mmaf009,mmaf013,mmaf014,mmaf015 FROM mmaf_t",
 
 
               "",
               " WHERE mmafent= ? AND 1=1 AND ", ls_wc
 
   LET g_sql = g_sql, " ORDER BY mmaf_t.mmaf001"
 
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   PREPARE ammp301_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR ammp301_pb
 
   FOREACH b_fill_curs INTO g_mmaf_d[l_ac].mmaf001,g_mmaf_d[l_ac].mmaf004,g_mmaf_d[l_ac].mmaf008,g_mmaf_d[l_ac].mmaf009, 
       g_mmaf_d[l_ac].mmaf013,g_mmaf_d[l_ac].mmaf014,g_mmaf_d[l_ac].mmaf015
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
 
      LET g_mmaf_d[l_ac].sel = "N"
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL ammp301_detail_show()
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
 
   END FOREACH
 
 
 
   CALL g_mmaf_d.deleteElement(g_mmaf_d.getLength())
 
   LET g_error_show = 0
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
 
      #+ 此段落由子樣板qs06產生
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE ammp301_pb
 
 
 
 
   LET l_ac = 1
   CALL ammp301_b_fill2()
 
      CALL ammp301_filter_show('mmaf001','b_mmaf001')
   CALL ammp301_filter_show('mmaf004','b_mmaf004')
   CALL ammp301_filter_show('mmaf008','b_mmaf008')
   CALL ammp301_filter_show('mmaf009','b_mmaf009')
   CALL ammp301_filter_show('mmaf013','b_mmaf013')
   CALL ammp301_filter_show('mmaf014','b_mmaf014')
   CALL ammp301_filter_show('mmaf015','b_mmaf015')
 
 
END FUNCTION

{</section>}

{<section id="ammp301.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ammp301_b_fill2()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
 
 
 
   LET li_ac = l_ac
 
   #單身組成
      #+ 此段落由子樣板qs07產生
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
 
 
 
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
 
 
   LET l_ac = li_ac
 
END FUNCTION

{</section>}

{<section id="ammp301.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION ammp301_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #帶出公用欄位reference值page1
   
 
 
 
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.body.reference"/>}
   #end add-point
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="ammp301.filter" >}
#+ 此段落由子樣板qs13產生
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION ammp301_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
      #+ 此段落由子樣板qs08產生
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmaf001,mmaf004,mmaf008,mmaf009,mmaf013,mmaf014,mmaf015
                          FROM s_detail1[1].b_mmaf001,s_detail1[1].b_mmaf004,s_detail1[1].b_mmaf008, 
                              s_detail1[1].b_mmaf009,s_detail1[1].b_mmaf013,s_detail1[1].b_mmaf014,s_detail1[1].b_mmaf015 

 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
                     DISPLAY ammp301_filter_parser('mmaf001') TO s_detail1[1].b_mmaf001
            DISPLAY ammp301_filter_parser('mmaf004') TO s_detail1[1].b_mmaf004
            DISPLAY ammp301_filter_parser('mmaf008') TO s_detail1[1].b_mmaf008
            DISPLAY ammp301_filter_parser('mmaf009') TO s_detail1[1].b_mmaf009
            DISPLAY ammp301_filter_parser('mmaf013') TO s_detail1[1].b_mmaf013
            DISPLAY ammp301_filter_parser('mmaf014') TO s_detail1[1].b_mmaf014
            DISPLAY ammp301_filter_parser('mmaf015') TO s_detail1[1].b_mmaf015
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
   
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL ammp301_filter_show('mmaf001','b_mmaf001')
   CALL ammp301_filter_show('mmaf004','b_mmaf004')
   CALL ammp301_filter_show('mmaf008','b_mmaf008')
   CALL ammp301_filter_show('mmaf009','b_mmaf009')
   CALL ammp301_filter_show('mmaf013','b_mmaf013')
   CALL ammp301_filter_show('mmaf014','b_mmaf014')
   CALL ammp301_filter_show('mmaf015','b_mmaf015')
 
   CALL ammp301_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="ammp301.filter_parser" >}
#+ 此段落由子樣板qs14產生
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION ammp301_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="ammp301.filter_show" >}
#+ 此段落由子樣板qs15產生
#+ 標題欄位顯示搜尋條件
PRIVATE FUNCTION ammp301_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammp301_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="ammp301.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

