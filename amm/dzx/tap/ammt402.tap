<add_points prog="ammt402" std_prog="ammt402" erpver="1.0" module="AMM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.mmay004" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmay004  #顯示到畫面上

            NEXT FIELD mmay004                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmayunit" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmayunit  #顯示到畫面上

            NEXT FIELD mmayunit                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmazsite" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmazsite  #顯示到畫面上

            NEXT FIELD mmazsite                     #返回原欄位

]]>
</point>
  <point name="input.a.mmay004" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmay004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmay004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmay_m.mmay004_desc
]]>
</point>
  <point name="input.a.page1.mmazsite" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaz_d[l_ac].mmazsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaz_d[l_ac].mmazsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaz_d[l_ac].mmazsite_desc
]]>
</point>
  <point name="input.c.mmayunit" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmayunit             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_mmay_m.mmayunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmay_m.mmayunit TO mmayunit              #顯示到畫面上

            NEXT FIELD mmayunit                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmaz002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmaz002             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_mmaz_d[l_ac].mmaz002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaz_d[l_ac].mmaz002 TO mmaz002              #顯示到畫面上

            NEXT FIELD mmaz002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmazsite" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmazsite             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_mmaz_d[l_ac].mmazsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaz_d[l_ac].mmazsite TO mmazsite              #顯示到畫面上

            NEXT FIELD mmazsite                          #返回原欄位

]]>
</point>
  <point name="function.ammt402_display_mmay001" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#+display mmay001
PRIVATE FUNCTION ammt402_display_mmay001()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmay_m.mmay001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmay_m.mmay001_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_mmay_m.mmay001_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmay002" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#+ display mmay002
PRIVATE FUNCTION ammt402_display_mmay002()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmay_m.mmay002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmay_m.mmay002_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_mmay_m.mmay002_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmay001" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#+ chk mmay001
PRIVATE FUNCTION ammt402_mmay001(p_mmay001)
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5 
   DEFINE   p_mmay001   LIKE mmay_t.mmay001
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM ooef_t WHERE ooef001 = p_mmay001 AND ooefent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00090"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooef_t WHERE  ooef001 = p_mmay001 AND ooefent = g_enterprise
       AND ooefstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmay002_update" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#+ update mmay002,mmay003
PRIVATE FUNCTION ammt402_mmay002_update()
   DEFINE l_cnt   LIKE type_t.num5
   LET l_cnt = 0
   SELECT count(*) INTO l_cnt FROM mmaz_t WHERE mmazdocno = g_mmay_m.mmaydocno
      AND mmazent = g_enterprise 
   IF l_cnt>0 THEN
      IF NOT cl_null(g_mmay_m.mmay002) OR NOT cl_null(g_mmay_m.mmay003) THEN
         UPDATE mmaz_t SET mmaz002 = g_mmay_m.mmay002,
                           mmaz003 = g_mmay_m.mmay003
          WHERE mmazdocno = g_mmay_m.mmaydocno
           AND mmazent = g_enterprise
         IF SQLCA.sqlcode THEN
            CALL cl_err("g_mmaz_d",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         END IF        
      END IF
   END IF   
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmaz001" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[#+chk mmaz001
PRIVATE FUNCTION ammt402_display_mmaz001()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz001
   IF g_type='1' THEN
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmaz_d[l_ac].mmaz001_desc = '', g_rtn_fields[1] , ''
   END IF
   IF g_type='2' THEN
      SELECT gcafl003 INTO g_mmaz_d[l_ac].mmaz001_desc FROM gcafl_t 
       WHERE gcafl001 =g_mmaz_d[l_ac].mmaz001 AND gcaflent = g_enterprise AND gcafl002 = g_dlang
   END IF   
   
   DISPLAY  g_mmaz_d[l_ac].mmaz001_desc TO s_detail1[l_ac].mmaz001_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmaz004" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[#+ display mmaz004
PRIVATE FUNCTION ammt402_display_mmaz004()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmaz_d[l_ac].mmaz004_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_mmaz_d[l_ac].mmaz004_desc TO s_detail[l_ac].mmaz004_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmay003" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[#+chk mmay003
PRIVATE FUNCTION ammt402_mmay003(p_mmay003,p_mmaysite)
   DEFINE  l_cnt       LIKE type_t.num5
   DEFINE  l_cnt1      LIKE type_t.num5 
   DEFINE  p_mmay003   LIKE mmay_t.mmay003
   DEFINE  p_mmaysite  like mmay_t.mmaysite
   LET  g_errno = null
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt FROM inaa_t 
    WHERE inaa001 = p_mmay003 AND inaasite = p_mmaysite
      AND inaaent = g_enterprise
   IF l_cnt <=0 THEN
      LET g_errno = "aim-00064"
   ELSE
      SELECT COUNT(*) INTO l_cnt1 FROM inaa_t 
       WHERE inaa001 = p_mmay003 AND inaasite = p_mmaysite
         AND inaaent = g_enterprise AND inaastus = 'Y'
      IF l_cnt1 <=0 THEN
         LET g_errno = "amm-00018"
      END IF 
   END IF   
      
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmaz001" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[#+ chk mmaz001
PRIVATE FUNCTION ammt402_mmaz001()
   DEFINE  l_cnt    LIKE type_t.num5
   DEFINE  l_cnt1   LIKE type_t.num5
   LET  g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   if g_type='1' then
      SELECT COUNT(*) INTO l_cnt FROM mman_t WHERE mman001=g_mmaz_d[l_ac].mmaz001 AND mmanent = g_enterprise
      IF l_cnt<=0 THEN
         LET g_errno = "amm-00003"
      ELSE
         SELECT COUNT(*) INTO l_cnt1 FROM mman_t WHERE mman001=g_mmaz_d[l_ac].mmaz001 AND mmanent = g_enterprise AND mmanstus="Y"
         IF l_cnt1<=0 THEN   
            LET g_errno = "amm-00004"
         END IF         
      END IF
      
   END IF 
   if g_type='2' then
      SELECT COUNT(*) INTO l_cnt FROM gcaf_t WHERE gcaf001=g_mmaz_d[l_ac].mmaz001 AND gcafent = g_enterprise
      IF l_cnt<=0 THEN
         LET g_errno = "amm-00124"
      ELSE
         SELECT COUNT(*) INTO l_cnt1 FROM gcaf_t WHERE gcaf001=g_mmaz_d[l_ac].mmaz001 AND gcafent = g_enterprise AND gcafstus="Y"
         IF l_cnt1<=0 THEN   
            LET g_errno = "amm-00125"
         END IF         
      END IF
      
   END IF   
      
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmazseq" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[#+create mmazseq
PRIVATE FUNCTION ammt402_mmazseq()
   IF (cl_null(g_mmaz_d[l_ac].mmazseq) OR g_mmaz_d[l_ac].mmazseq=0) THEN
      SELECT MAX(mmazseq)+1 INTO g_mmaz_d[l_ac].mmazseq FROM mmaz_t
       WHERE mmazdocno = g_mmay_m.mmaydocno AND mmazent = g_enterprise
   END IF
   IF (cl_null(g_mmaz_d[l_ac].mmazseq) OR g_mmaz_d[l_ac].mmazseq=0) THEN
      LET g_mmaz_d[l_ac].mmazseq = 1
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmay003_after" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[#+chk null
PRIVATE FUNCTION ammt402_mmay003_after()
   LET g_errno = null
   IF (cl_null(g_mmay_m.mmay002) AND NOT cl_null(g_mmay_m.mmay003)) THEN
      LET g_errno = "amm-00022"
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmaydocno" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[#+ chk mmaydocno
PRIVATE FUNCTION ammt402_mmaydocno(p_mmaydocno)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5
   define   p_mmaydocno   like mmay_t.mmaydocno   
   LET g_errno = null
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM oobl_t WHERE oobl001 = g_ooef004 AND oobl002=p_mmaydocno
      AND oobl003 = g_prog
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooba_t lEFT JOIN oobl_t ON ooba001=oobl001 AND ooba002=oobl002
       WHERE ooba001 = g_ooef004 AND ooba002=p_mmaydocno
         AND oobl003 = g_prog AND oobastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF 
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmaz005" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[#+display mmaz005
PRIVATE FUNCTION ammt402_display_mmaz005()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz005
   CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
   LET g_mmaz_d[l_ac].mmaz005_desc = '',g_rtn_fields[1] , ''
   DISPLAY  g_mmaz_d[l_ac].mmaz005_desc to s_detail1[l_ac].mmaz005_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmay003" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[#+display mmay003
PRIVATE FUNCTION ammt402_display_mmay003()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmay_m.mmay003
   CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
   LET g_mmay_m.mmay003_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_mmay_m.mmay003_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmaz003" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[#+display mmaz003
PRIVATE FUNCTION ammt402_display_mmaz003()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz003
   CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
   LET g_mmaz_d[l_ac].mmaz003_desc = '',g_rtn_fields[1] , ''
   DISPLAY  g_mmaz_d[l_ac].mmaz003_desc to s_detail1[l_ac].mmaz003_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_chk_mmaz001" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[#chk mmaz001
PRIVATE FUNCTION ammt402_chk_mmaz001(p_mmaz002,p_mmaz004)
   DEFINE p_mmaz002 LIKE mmaz_t.mmaz002
   define p_mmaz004 like mmaz_t.mmaz004
   DEFINE l_mmap003 LIKE mmap_t.mmap003
   DEFINE l_mmap005 LIKE mmap_t.mmap005
   DEFINE l_count   LIKE type_t.num5
   DEFINE l_sql     STRING

   DELETE from ammt402_tmp
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
   LET l_count = 0
   LET g_errno = NULL
   SELECT count(*) INTO l_count
     FROM mmap_t WHERE mmap002=g_mmaz_d[l_ac].mmaz001 AND mmapent=g_enterprise
   IF l_count <= 0 THEN
      LET g_errno = "amm-00023"
      RETURN
   END IF
   LET l_count = 0
   LET l_sql=" INSERT INTO ammt402_tmp  select ooed004 from (SELECT ooed004 FROM (SELECT ooed004 FROM ooed_t ",
                   "  START WITH ooed005 = ?  CONNECT BY  nocycle PRIOR ooed004 = ooed005 ) ",
                   "   UNION ",
                   "  SELECT ooea001 from ooea_t where ooea001 = ? AND ooeaent=",g_enterprise," )"                   
   PREPARE l_sql_imaa_pre1 FROM l_sql
         
   LET l_sql = "SELECT DISTINCT mmap003,mmap005 FROM mmap_t WHERE mmap002='",g_mmaz_d[l_ac].mmaz001,"' ",
               "  AND mmapstus='Y' AND mmapent=",g_enterprise
   PREPARE l_sql_mmap003 FROM l_sql
   DECLARE l_sql_mmap003_cs CURSOR FOR l_sql_mmap003
   FOREACH l_sql_mmap003_cs INTO l_mmap003,l_mmap005
      INSERT INTO ammt402_tmp VALUES (l_mmap003)
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF
      IF l_mmap005='Y' THEN
         EXECUTE l_sql_imaa_pre1 USING l_mmap003,l_mmap003
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            RETURN
         END IF
      END IF

   END FOREACH
   let l_count = 0
   IF NOT cl_null(p_mmaz002) THEN
      SELECT count(*) INTO l_count FROM ammt402_tmp
      WHERE mmap003 = p_mmaz002
      IF l_count <= 0 THEN
         LET g_errno = "amm-00112"
      END IF
   END IF
   IF NOT cl_null(p_mmaz004) AND cl_null(g_errno) THEN   
      LET l_count=0
      SELECT count(*) INTO l_count FROM ammt402_tmp
       WHERE mmap003 = p_mmaz004
      IF l_count <= 0 THEN
         LET g_errno = "amm-00111"
      END IF
   END IF      
END FUNCTION]]>
</point>
  <point name="function.ammt402_display_mmaysite" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[#display mmaysite
PRIVATE FUNCTION ammt402_display_mmaysite()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmay_m.mmaysite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmay_m.mmaysite_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_mmay_m.mmaysite_desc
END FUNCTION]]>
</point>
  <point name="function.ammt402_mmaz004" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[#chk mmaz004
PRIVATE FUNCTION ammt402_mmaz004(p_mmaz004)
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_cnt1    LIKE type_t.num5 
   DEFINE p_mmaz004 LIKE mmaz_t.mmaz004
   DEFINE l_sql     STRING
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   LET l_sql="SELECT COUNT(*)  FROM ooed_t WHERE ooed004 ='",p_mmaz004,"' AND ooed001='2' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null)",
             "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_mmay_m.mmaysite,"' CONNECT BY NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_mmay_m.mmaysite,"'))"
   PREPARE l_sql_ooea_pre1 FROM l_sql
   EXECUTE l_sql_ooea_pre1 INTO l_cnt   
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00163"
   ELSE
      LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooea_t WHERE ooea001=ooed004 AND ooed004 ='",p_mmaz004,"' AND ooed001='2' ",
             "   AND ooeastus='Y' AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null)",
             "   AND ooea001 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_mmay_m.mmaysite,"' CONNECT BY NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             "         (SELECT ooea001 FROM ooea_t WHERE ooea001='",g_mmay_m.mmaysite,"'))"
      PREPARE l_sql_ooea_pre2 FROM l_sql
      EXECUTE l_sql_ooea_pre2 INTO l_cnt1       
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(l_wc) THEN
      LET l_wc=" 1=1"
   END IF
   IF cl_null(l_wc2) THEN
      LET l_wc2=" 1=1"
   END IF
   LET l_wc=l_wc," AND mmay000='",g_type clipped,"'"]]>
</point>
  <point name="construct.c.mmay001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmay001  #顯示到畫面上

            NEXT FIELD mmay001                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmay002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmay002  #顯示到畫面上

            NEXT FIELD mmay002                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmay003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmay003  #顯示到畫面上

            NEXT FIELD mmay003                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaycnfid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaycnfid  #顯示到畫面上

            NEXT FIELD mmaycnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaycrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaycrtdp  #顯示到畫面上

            NEXT FIELD mmaycrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaycrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaycrtid  #顯示到畫面上

            NEXT FIELD mmaycrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaydocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaydocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaydocno  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO mmaydocdt #單據日期 

            NEXT FIELD mmaydocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaymodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaymodid  #顯示到畫面上

            NEXT FIELD mmaymodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmayowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmayowndp  #顯示到畫面上

            NEXT FIELD mmayowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmayownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmayownid  #顯示到畫面上

            NEXT FIELD mmayownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmaysite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            LET g_qryparam.arg2 = null
            DISPLAY g_qryparam.return1 TO mmaysite  #顯示到畫面上

            NEXT FIELD mmaysite                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmaz001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            IF g_type='1' THEN

               CALL q_mman001()                                #呼叫開窗
            END IF
            IF g_type='2' THEN
               CALL q_gcaf001()
            END IF
            DISPLAY g_qryparam.return1 TO mmaz001  #顯示到畫面上

            NEXT FIELD mmaz001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmaz002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaz002  #顯示到畫面上

            NEXT FIELD mmaz002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmaz003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaz003  #顯示到畫面上

            NEXT FIELD mmaz003                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmaz004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaz004  #顯示到畫面上
            LET g_qryparam.arg2 = null
            NEXT FIELD mmaz004                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmaz005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaz005  #顯示到畫面上

            NEXT FIELD mmaz005                     #返回原欄位

]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            DISPLAY g_type to mmay000]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   
   
   ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF cl_null(ls_wc) THEN
      LET ls_wc = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " AND mmay000 = '", g_argv[1], "' "
      LET g_wc=g_wc," AND mmay000 = '", g_argv[1], "' "
   END IF 
   RETURN]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_mmay_m.mmaystus <>'N' THEN
      CALL cl_err(g_mmay_m.mmaydocno,"apm-00034",0)
      RETURN
   END IF]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#   IF g_mmay_m.mmaystus <> "N" THEN
#      CALL cl_set_act_visible("delete,modify", FALSE) 
#   ELSE
#      CALL cl_set_act_visible("delete,modify", TRUE)     
#   END IF
   IF g_mmay_m.mmaystus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", true)   
   END IF
]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_type                LIKE type_t.chr1   #'1'時代表是 會員卡領用維護作業  '2'時代表是 會員券領用維護作業
DEFINE g_acc                 LIKE gzcb_t.gzcb007]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_msg   LIKE gzze_t.gzze003]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_type='2' THEN
      LET l_msg = null
      SELECT gzze003 INTO l_msg FROM gzze_t WHERE gzze001 = 'agc-00031'
        AND gzze002 = g_dlang AND gzzestus = 'Y'
      CALL cl_set_comp_att_text("mmaz001",l_msg)         
      LET l_msg = null
      SELECT gzze003 INTO l_msg FROM gzze_t WHERE gzze001 = 'agc-00032'
        AND gzze002 = g_dlang AND gzzestus = 'Y'
      CALL cl_set_comp_att_text("mmaz001_desc",l_msg)
      LET l_msg = null
      SELECT gzze003 INTO l_msg FROM gzze_t WHERE gzze001 = 'agc-00033'
        AND gzze002 = g_dlang AND gzzestus = 'Y'
      CALL cl_set_comp_att_text("mmaz008",l_msg)
      LET l_msg = null
      SELECT gzze003 INTO l_msg FROM gzze_t WHERE gzze001 = 'agc-00034'
        AND gzze002 = g_dlang AND gzzestus = 'Y'
      CALL cl_set_comp_att_text("mmaz009",l_msg)
   END IF
   CALL cl_set_comp_visible("mmaz002,mmaz007",false)
   CALL cl_set_comp_entry("mmaastus",false)]]>
</point>
  <point name="input.a.mmay001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmay_m.mmay001_desc = null
            DISPLAY BY NAME g_mmay_m.mmay001_desc
            IF  NOT cl_null(g_mmay_m.mmay001)  THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmay_m.mmay001 != g_mmay_m_t.mmay001 or g_mmay_m_t.mmay001 is null))) THEN 
                  CALL ammt402_mmay001(g_mmay_m.mmay001)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmay_m.mmay001,g_errno,1)
                     LET g_mmay_m.mmay001 = g_mmay_m_t.mmay001
                     CALL ammt402_display_mmay001()
                     NEXT FIELD mmay001
                  END IF
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_mmay_m.mmay001
#                  LET g_chkparam.arg2 = '2'
#
#
#                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_ooed004_1") THEN
#
#                  ELSE
#                     #檢查失敗時後續處理
#                     LET g_mmay_m.mmay001 = g_mmay_m_t.mmay001
#                     CALL ammt402_display_mmay001()
#                     NEXT FIELD mmay001
#                  END IF
               END IF
            END IF
            CALL ammt402_display_mmay001()
]]>
</point>
  <point name="input.a.mmay002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmay_m.mmay002_desc = null
            DISPLAY BY NAME g_mmay_m.mmay002_desc
            
            IF  NOT cl_null(g_mmay_m.mmay002)  THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmay_m.mmay002 ! = g_mmay_m_t.mmay002 or g_mmay_m_t.mmay002 is null ))) THEN 
                  CALL ammt402_mmay001(g_mmay_m.mmay002)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmay_m.mmay002,g_errno,1)
                     LET g_mmay_m.mmay002 = g_mmay_m_t.mmay002
                     CALL ammt402_display_mmay002()
                     NEXT FIELD mmay002
                  END IF
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_mmay_m.mmay002
#                  LET g_chkparam.arg2 = '2'
#
#
#                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_ooed004_1") THEN
#
#                  ELSE
#                     #檢查失敗時後續處理
#                     LET g_mmay_m.mmay002 = g_mmay_m_t.mmay002
#                     CALL ammt402_display_mmay002()
#                     NEXT FIELD mmay002
#                  END IF
               END IF
            END IF
            
            CALL ammt402_mmay003_after()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_mmay_m.mmay002,g_errno,1)
               LET g_mmay_m.mmay002 = g_mmay_m_t.mmay002
               CALL ammt402_display_mmay002()
               NEXT FIELD mmay002
            END IF
            call ammt402_set_entry(p_cmd)
            call ammt402_set_no_entry(p_cmd)
            CALL ammt402_display_mmay002()
]]>
</point>
  <point name="input.a.mmay003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmay_m.mmay003_desc = null
            display by name g_mmay_m.mmay003_desc
            
            IF  NOT cl_null(g_mmay_m.mmay003)  THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmay_m.mmay003 ! = g_mmay_m_t.mmay003 or g_mmay_m_t.mmay003 is null))) THEN 
                 #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmay_m.mmay002
                  LET g_chkparam.arg2 = g_mmay_m.mmay003


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmay_m.mmay003 = g_mmay_m_t.mmay003
                     call ammt402_display_mmay003()
                     NEXT FIELD mmay003
                  END IF
#                  CALL ammt402_mmay003(g_mmay_m.mmay003,g_mmay_m.mmay002)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmay_m.mmay003,g_errno,1)
#                     LET g_mmay_m.mmay003 = g_mmay_m_t.mmay003
#                     call ammt402_display_mmay003()
#                     NEXT FIELD mmay003
#                  END IF
               END IF
            END IF
            CALL ammt402_mmay003_after()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_mmay_m.mmay003,g_errno,1)
               LET g_mmay_m.mmay003 = g_mmay_m_t.mmay003
               call ammt402_display_mmay003()
               NEXT FIELD mmay002
            END IF
            call ammt402_display_mmay003()]]>
</point>
  <point name="input.a.mmaycnfid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycnfid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmaycnfid_desc
]]>
</point>
  <point name="input.a.mmaycrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycrtdp_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmaycrtdp_desc
]]>
</point>
  <point name="input.a.mmaycrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycrtid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmaycrtid_desc
]]>
</point>
  <point name="input.a.mmaydocdt" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#            IF cl_null(g_mmay_m.mmaydocno) THEN
#               NEXT FIELD mmaydocno
#            END IF
#            IF cl_null(g_mmay_m.mmaydocdt) THEN
#               NEXT FIELD mmaydocdt
#            END IF
#            
#            CALL cl_set_comp_entry("mmaydocno,mmaydocdt",FALSE)]]>
</point>
  <point name="input.a.mmaydocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmay_m.mmaydocno)  THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmay_m.mmaydocno != g_mmaydocno_t  ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmay_t WHERE "||"mmayent = '" ||g_enterprise|| "' AND "||"mmaydocno = '"||g_mmay_m.mmaydocno ||"' ",'std-00004',0) THEN 
                     LET g_mmay_m.mmaydocno = g_mmaydocno_t
                     NEXT FIELD mmaydocno
                  END IF
#                  CALL ammt402_mmaydocno(g_mmay_m.mmaydocno)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmay_m.mmaydocno,g_errno,1)
#                     LET g_mmay_m.mmaydocno = g_mmaydocno_t
#                     NEXT FIELD mmaydocno
#                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_mmay_m.mmaydocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_mmay_m.mmaydocno = g_mmaydocno_t
                     NEXT FIELD mmaydocno
                  END IF
               END IF
            END IF
#            NEXT FIELD mmaydocdt

]]>
</point>
  <point name="input.a.mmaymodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaymodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaymodid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmaymodid_desc
]]>
</point>
  <point name="input.a.mmayowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmayowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmayowndp_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmayowndp_desc
]]>
</point>
  <point name="input.a.mmayownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmayownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmayownid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_mmay_m.mmayownid_desc
]]>
</point>
  <point name="input.a.mmaysite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            LET g_mmay_m.mmaysite_desc = NULL
            DISPLAY BY NAME g_mmay_m.mmaysite_desc
            
            IF NOT cl_null(g_mmay_m.mmaysite) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmay_m.mmaysite!= g_mmay_m_t.mmaysite OR g_mmay_m_t.mmaysite IS NULL  ))) THEN 
#                  CALL ammt402_mmay001(g_mmay_m.mmaysite)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmay_m.mmaysite,g_errno,1)
#                     LET g_mmay_m.mmaysite = g_mmay_m_t.mmaysite
#                     CALL ammt402_display_mmaysite()
#                     NEXT FIELD mmaysite
#                  END IF
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmay_m.mmaysite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooed004") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmay_m.mmaysite = g_mmay_m_t.mmaysite
                     CALL ammt402_display_mmaysite()
                     NEXT FIELD mmaysite
                  END IF
               END IF
            END IF
            CALL ammt402_display_mmaysite()

]]>
</point>
  <point name="input.a.mmaystus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmaz001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmaz_d[l_ac].mmaz001_desc = null
            DISPLAY  g_mmaz_d[l_ac].mmaz001_desc TO s_detail1[l_ac].mmaz001_desc
            IF  NOT cl_null(g_mmaz_d[l_ac].mmaz001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmaz_d[l_ac].mmaz001 != g_mmaz_d_t.mmaz001 or g_mmaz_d_t.mmaz001))) THEN 
                  CALL ammt402_mmaz001()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmaz_d[l_ac].mmaz001,g_errno,1)
                     LET g_mmaz_d[l_ac].mmaz001 = g_mmaz_d_t.mmaz001
                     CALL ammt402_display_mmaz001()
                     NEXT FIELD mmaz001
                  END IF
                  CALL ammt402_chk_mmaz001(g_mmaz_d[l_ac].mmaz002,g_mmaz_d[l_ac].mmaz004)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmaz_d[l_ac].mmaz001,g_errno,1)
                     LET g_mmaz_d[l_ac].mmaz001 = g_mmaz_d_t.mmaz001
                     CALL ammt402_display_mmaz001()
                     NEXT FIELD mmaz001
                  END IF
               END IF
            END IF
            CALL ammt402_display_mmaz001()
]]>
</point>
  <point name="input.a.page1.mmaz002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page1.mmaz003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmaz_d[l_ac].mmaz003_desc = NULL
            DISPLAY g_mmaz_d[l_ac].mmaz003_desc TO s_detail1[l_ac].mmaz003_desc
            IF  NOT cl_null(g_mmaz_d[l_ac].mmaz003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmaz_d[l_ac].mmaz003 != g_mmaz_d_t.mmaz003 or g_mmaz_d_t.mmaz003 is null))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmay_m.mmay002
                  LET g_chkparam.arg2 = g_mmaz_d[l_ac].mmaz003


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmaz_d[l_ac].mmaz003 = g_mmaz_d_t.mmaz003
                     CALL ammt402_display_mmaz003()
                     NEXT FIELD mmaz003
                  END IF
#                  CALL ammt402_mmay003(g_mmaz_d[l_ac].mmaz003,g_mmay_m.mmay002)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmaz_d[l_ac].mmaz003,g_errno,1)
#                     LET g_mmaz_d[l_ac].mmaz003 = g_mmaz_d_t.mmaz003
#                     CALL ammt402_display_mmaz003()
#                     NEXT FIELD mmaz003
#                  END IF
                  
               END IF
            END IF
            CALL ammt402_display_mmaz003()            ]]>
</point>
  <point name="input.a.page1.mmaz004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmaz_d[l_ac].mmaz004_desc = null
            DISPLAY  g_mmaz_d[l_ac].mmaz004_desc TO s_detail1[l_ac].mmaz004_desc
            IF  NOT cl_null(g_mmaz_d[l_ac].mmaz004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmaz_d[l_ac].mmaz004 != g_mmaz_d_t.mmaz004 or g_mmaz_d_t.mmaz004 is null))) THEN 
#                  CALL ammt402_mmaz004(g_mmaz_d[l_ac].mmaz004)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmaz_d[l_ac].mmaz004,g_errno,1)
#                     LET g_mmaz_d[l_ac].mmaz004 = g_mmaz_d_t.mmaz004
#                     CALL ammt402_display_mmaz004()
#                     NEXT FIELD mmaz004
#                  END IF
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmaz_d[l_ac].mmaz004
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooed004") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmaz_d[l_ac].mmaz004 = g_mmaz_d_t.mmaz004
                     CALL ammt402_display_mmaz004()
                     NEXT FIELD mmaz004
                  END IF
                  IF  NOT cl_null(g_mmaz_d[l_ac].mmaz005) THEN
                     CALL ammt402_mmay003(g_mmaz_d[l_ac].mmaz005,g_mmaz_d[l_ac].mmaz004)
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_mmaz_d[l_ac].mmaz004,g_errno,1)
                        LET g_mmaz_d[l_ac].mmaz004 = g_mmaz_d_t.mmaz004
                        CALL ammt402_display_mmaz004()
                        NEXT FIELD mmaz004
                     END IF
                  END IF
                  IF  NOT cl_null(g_mmaz_d[l_ac].mmaz001) THEN
                     CALL ammt402_chk_mmaz001(g_mmaz_d[l_ac].mmaz002,g_mmaz_d[l_ac].mmaz004)
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_mmaz_d[l_ac].mmaz004,g_errno,1)
                        LET g_mmaz_d[l_ac].mmaz004 = g_mmaz_d_t.mmaz004
                        CALL ammt402_display_mmaz004()
                        NEXT FIELD mmaz004
                     END IF
                  END IF   
               END IF
            END IF
            
            CALL ammt402_display_mmaz004()
]]>
</point>
  <point name="input.a.page1.mmaz005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmaz_d[l_ac].mmaz005_desc = NULL
            DISPLAY g_mmaz_d[l_ac].mmaz005_desc TO s_detail1[l_ac].mmaz005_desc
            IF  NOT cl_null(g_mmaz_d[l_ac].mmaz005) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmaz_d[l_ac].mmaz005 != g_mmaz_d_t.mmaz005 or g_mmaz_d_t.mmaz005 is null))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmaz_d[l_ac].mmaz004
                  LET g_chkparam.arg2 = g_mmaz_d[l_ac].mmaz005


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmaz_d[l_ac].mmaz005 = g_mmaz_d_t.mmaz005
                     CALL ammt402_display_mmaz005()
                     NEXT FIELD mmaz005
                  END IF
#                  CALL ammt402_mmay003(g_mmaz_d[l_ac].mmaz005,g_mmaz_d[l_ac].mmaz004)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmaz_d[l_ac].mmaz005,g_errno,1)
#                     LET g_mmaz_d[l_ac].mmaz005 = g_mmaz_d_t.mmaz005
#                     CALL ammt402_display_mmaz005()
#                     NEXT FIELD mmaz005
#                  END IF
               END IF
            END IF
            CALL ammt402_display_mmaz005()]]>
</point>
  <point name="input.a.page1.mmaz006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_mmaz_d[l_ac].mmaz006) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page1.mmazseq" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_mmaz_d[l_ac].mmazseq<=0 THEN
               CALL cl_err(g_mmaz_d[l_ac].mmazseq,"aim-00003",1)
               LET g_mmaz_d[l_ac].mmazseq = g_mmaz_d_t.mmazseq
               NEXT FIELD mmazseq               
            END IF

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmay_m.mmaydocno)  AND NOT cl_null(g_mmaz_d[l_ac].mmazseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmay_m.mmaydocno != g_mmaydocno_t  OR g_mmaz_d[l_ac].mmazseq != g_mmaz_d_t.mmazseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaz_t WHERE "||"mmazent = '" ||g_enterprise|| "' AND "||"mmazdocno = '"||g_mmay_m.mmaydocno ||"'  AND "|| "mmazseq = '"||g_mmaz_d[l_ac].mmazseq ||"'",'std-00004',0) THEN 
                     LET g_mmaz_d[l_ac].mmazseq = g_mmaz_d_t.mmazseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_mmaz_d[l_ac].mmaz002 = g_mmay_m.mmay002
]]>
</point>
  <point name="input.b.mmay002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.b.mmay003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL ammt402_set_entry(p_cmd)
            CALL ammt402_set_no_entry(p_cmd)]]>
</point>
  <point name="input.b.mmaystus" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[     ]]>
</point>
  <point name="input.b.page1.mmazseq" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         IF p_cmd = 'a' THEN
            NEXT FIELD mmaydocno
         END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   let g_errshow=1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmaz_d[l_ac].mmazsite = g_mmay_m.mmaysite
            LET g_mmaz_d[l_ac].mmazunit = g_mmay_m.mmayunit
            LET g_mmaz_d[l_ac].mmaz000 = g_mmay_m.mmay000
            LET g_mmaz_d[l_ac].mmaz002 = g_mmay_m.mmay002
            IF NOT cl_null(g_mmay_m.mmay003) THEN
               LET g_mmaz_d[l_ac].mmaz003 = g_mmay_m.mmay003
            END IF
            LET g_mmaz_d[l_ac].mmaz004 = g_mmay_m.mmaysite
            CALL ammt402_display_mmaz004()
            CALL ammt402_display_mmaz003()
            CALL ammt402_mmazseq()]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            
 ]]>
</point>
  <point name="input.c.mmay001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmay001             #給予default值
            LET g_qryparam.arg1 = '2'
            #給予arg

            CALL q_ooed004_2()                                #呼叫開窗

            LET g_mmay_m.mmay001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = null
            DISPLAY g_mmay_m.mmay001 TO mmay001              #顯示到畫面上
            CALL ammt402_display_mmay001()
            NEXT FIELD mmay001                          #返回原欄位

]]>
</point>
  <point name="input.c.mmay002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmay002             #給予default值
            LET g_qryparam.arg1 = '2'
            #給予arg

            CALL q_ooed004_2()                                #呼叫開窗

            LET g_mmay_m.mmay002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = null
            DISPLAY g_mmay_m.mmay002 TO mmay002              #顯示到畫面上
            CALL ammt402_display_mmay002()
            NEXT FIELD mmay002                          #返回原欄位

]]>
</point>
  <point name="input.c.mmay003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmay003             #給予default值
            
            LET g_qryparam.arg1 = g_mmay_m.mmay002
  
            #給予arg

            CALL q_inaa001_6()                                #呼叫開窗

            LET g_mmay_m.mmay003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = NULL  
            DISPLAY g_mmay_m.mmay003 TO mmay003              #顯示到畫面上
            CALL ammt402_display_mmay003()
            NEXT FIELD mmay003                          #返回原欄位

]]>
</point>
  <point name="input.c.mmaydocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmaydocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = g_prog #對應程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmay_m.mmaydocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmay_m.mmaydocno TO mmaydocno              #顯示到畫面上

            NEXT FIELD mmaydocno                          #返回原欄位

]]>
</point>
  <point name="input.c.mmaysite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmay_m.mmaysite             #給予default值
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            #給予arg

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmay_m.mmaysite = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = null
            LET g_qryparam.arg2 = null
            DISPLAY g_mmay_m.mmaysite TO mmaysite              #顯示到畫面上
            CALL ammt402_display_mmaysite()
            NEXT FIELD mmaysite                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmaz001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmaz001             #給予default值

            #給予arg
            IF g_type='1' THEN

               CALL q_mman001()                                #呼叫開窗
            END IF
            IF g_type='2' THEN
               CALL q_gcaf001()
            END IF            

            LET g_mmaz_d[l_ac].mmaz001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaz_d[l_ac].mmaz001 TO mmaz001              #顯示到畫面上
            call ammt402_display_mmaz001()
            NEXT FIELD mmaz001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmaz003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmaz003             #給予default值
            LET g_qryparam.arg1 = g_mmay_m.mmay002
            #給予arg

            CALL q_inaa001_6()                                #呼叫開窗

            LET g_mmaz_d[l_ac].mmaz003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = NULL 
            DISPLAY g_mmaz_d[l_ac].mmaz003 TO mmaz003              #顯示到畫面上
            call ammt402_display_mmaz003()
            NEXT FIELD mmaz003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmaz004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmaz004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmay_m.mmaysite
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                                #呼叫開窗

            LET g_mmaz_d[l_ac].mmaz004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = null
            LET g_qryparam.arg2 = null 
            DISPLAY g_mmaz_d[l_ac].mmaz004 TO mmaz004              #顯示到畫面上
            call ammt402_display_mmaz004()
            NEXT FIELD mmaz004                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmaz005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaz_d[l_ac].mmaz005             #給予default值
            IF NOT cl_null(g_mmaz_d[l_ac].mmaz004) THEN
               LET g_qryparam.where = "inaasite = '",g_mmaz_d[l_ac].mmaz004,"'"
            END IF
            #給予arg

            CALL q_inaa001_3()                                #呼叫開窗

            LET g_mmaz_d[l_ac].mmaz005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.where = null
            DISPLAY g_mmaz_d[l_ac].mmaz005 TO mmaz005              #顯示到畫面上
            call ammt402_display_mmaz005()
            NEXT FIELD mmaz005                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5]]>
</point>
  <point name="input.g.mmay002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            call ammt402_set_entry(p_cmd)
            call ammt402_set_no_entry(p_cmd)]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                  IF NOT cl_null(g_mmay_m.mmaydocno) THEN
                     CALL s_aooi200_gen_docno(g_site,g_mmay_m.mmaydocno,g_mmay_m.mmaydocdt,g_prog) 
                     RETURNING  g_success,g_mmay_m.mmaydocno
                     IF g_success<>'1' THEN
                        call cl_err(g_mmay_m.mmaydocno,"amm-00001",1)
                        NEXT FIELD mmaydocno
                     ELSE
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmay_t WHERE "||"mmayent = '" ||g_enterprise|| "'  AND "||"mmaydocno = '"||g_mmay_m.mmaydocno ||"'",'std-00004',0) THEN 
                           LET g_mmay_m.mmaydocno = g_mmaydocno_t
                           NEXT FIELD CURRENT
                        END IF    
                                      
                     END IF
                  END IF 
                  CALL cl_set_comp_entry("mmaydocno",false)]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_mmay_m_t.* = g_mmay_m.*
            CALL ammt402_set_entry(p_cmd)
            CALL ammt402_set_no_entry(p_cmd)
            let g_mmaydocno_t = g_mmay_m.mmaydocno]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      INITIALIZE g_mmay_m_t.* TO NULL
      let g_mmay_m.mmay000=g_type
      LET g_mmay_m.mmaystus = "N"
      LET g_mmay_m.mmaydocdt = g_today
      LET g_mmay_m.mmaysite = g_site
      LET g_mmay_m.mmayunit = g_mmay_m.mmaysite
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmay_m.mmaysite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmay_m.mmaysite_desc =  g_rtn_fields[1]
      DISPLAY BY NAME g_mmay_m.mmaysite_desc]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET g_type = g_argv[1]
   END IF
   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位二]的欄位值
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
   CREATE TEMP TABLE ammt402_tmp
   (
      mmap003 varchar(30)
   );
   DELETE from ammt402_tmp
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF]]>
</point>
  <point name="menu.confirm" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL s_transaction_begin()
               CALL ammt402_confirm() 
               CALL s_transaction_end('Y','0')]]>
</point>
  <point name="menu.undoconfirm" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL s_transaction_begin()
               CALL ammt402_undoconfirm()
               CALL s_transaction_end('Y','0')]]>
</point>
  <point name="modify.define" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_mmay_m.mmaystus MATCHES "[DR]" THEN 
      LET  g_mmay_m.mmaystus = "N"
   END IF
   IF g_mmay_m.mmaystus <>'N' THEN
      CALL cl_err(g_mmay_m.mmaydocno,"apm-00035",0)
      RETURN
   END IF]]>
</point>
  <point name="reproduce.a.mmaydocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         IF  NOT cl_null(l_newno) THEN 
            IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmay_t WHERE "||"mmayent = '" ||g_enterprise|| "' AND "||"mmaydocno = '"||l_newno  ||"'",'std-00004',0) THEN 
               NEXT FIELD mmaydocno
            END IF
            CALL ammt402_mmaydocno(l_newno)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(l_newno,g_errno,1)
               NEXT FIELD mmaydocno
            END IF
         END IF
     ON ACTION controlp INFIELD mmaydocno
            #add-point:ON ACTION controlp INFIELD l_newno
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state= 'i'    
            LET g_qryparam.default1 = l_newno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = "ammt402" #對應程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET l_newno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY l_newno TO mmaydocno              #顯示到畫面上

            NEXT FIELD mmaydocno                          #返回原欄位    ]]>
</point>
  <point name="reproduce.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET l_master.mmaydocdt = g_today
   CALL s_aooi200_gen_docno(g_site,l_master.mmaydocno,g_today,g_prog)
   RETURNING g_success,l_master.mmaydocno
   IF g_success<>'1' THEN
      CALL cl_err(l_master.mmaydocno,"apm-00003",1)
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdu_t WHERE "||"rtduent = '" ||g_enterprise|| "' AND "||"rtdudocno = '"||l_master.mmaydocno ||"'",'std-00004',0) THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF   
   END IF
   LET l_newno = l_master.mmaydocno
   LET l_master.mmaymodid = null
   LET l_master.mmaymoddt = null
   LET l_master.mmaycnfid = null
   LET l_master.mmaycnfdt = null]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[  
   CALL cl_set_comp_entry("mmay002,mmay003,mmaysite",TRUE) 
     ]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_count LIKE type_t.num5]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("mmaydocdt",TRUE)]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("mmaz003",true)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_mmay_m.mmay002)  THEN
      CALL cl_set_comp_entry("mmay003",FALSE)
   END IF
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmay003",TRUE)
   END IF
   SELECT count(*) INTO l_count FROM mmaz_t WHERE mmazent = g_enterprise
      AND mmazdocno = g_mmay_m.mmaydocno
   IF l_count > 0 THEN
      CALL cl_set_comp_entry("mmay002,mmay003,mmaysite",false)     
   END IF
   IF l_count = 0 THEN
      CALL cl_set_comp_entry("mmaysite",true)     
   END IF
   ]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_count LIKE type_t.num5]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("mmaysite",FALSE)]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_mmay_m.mmay002) THEN
      CALL cl_set_comp_entry("mmaz003",FALSE)
   END IF
   IF NOT cl_null(g_mmay_m.mmay002) AND NOT cl_null(g_mmay_m.mmay003) THEN
      CALL cl_set_comp_entry("mmaz003",FALSE)
   END IF   ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaz_d[l_ac].mmaz004_desc = '',g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaz_d[l_ac].mmaz004_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_mmaz_d[l_ac].mmaz003_desc = '',g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaz_d[l_ac].mmaz003_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaz_d[l_ac].mmaz005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_mmaz_d[l_ac].mmaz005_desc = '',g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaz_d[l_ac].mmaz005_desc

            CALL ammt402_display_mmaz001()
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaysite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaysite_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmaysite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmay001
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmay001_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmay001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmay002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmay002_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmay002_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmay003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmay003_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmay003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmayownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmayownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmayownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmayowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmayowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmayowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycrtid_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmaycrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmaycrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaymodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaymodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmaymodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmay_m.mmaycnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmay_m.mmaycnfid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmay_m.mmaycnfid_desc
]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   SELECT mmaystus,mmaycnfid,mmaycnfdt INTO g_mmay_m.mmaystus,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt
     FROM mmay_t
    WHERE mmayent = g_enterprise AND mmaydocno = g_mmay_m.mmaydocno
   DISPLAY BY NAME g_mmay_m.mmaystus,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmay_m.mmaycnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_mmay_m.mmaycnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_mmay_m.mmaycnfid_desc   
   IF g_mmay_m.mmaystus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", true)    
   END IF]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT mmaystus INTO g_mmay_m.mmaystus FROM mmay_t WHERE mmaydocno = g_mmay_m.mmaydocno
            AND mmayent = g_enterprise         
         CALL s_ammt402_conf_chk(g_mmay_m.mmaydocno,g_mmay_m.mmaystus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_ammt402_conf_upd(g_mmay_m.mmaydocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            CALL cl_err(g_mmay_m.mmaydocno,g_errno,1)
            RETURN            
         END IF
                
      WHEN 'X'
         SELECT mmaystus INTO g_mmay_m.mmaystus FROM mmay_t WHERE mmaydocno = g_mmay_m.mmaydocno
            AND mmayent = g_enterprise  
         CALL s_ammt402_void_chk(g_mmay_m.mmaydocno,g_mmay_m.mmaystus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt402_void_upd(g_mmay_m.mmaydocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmay_m.mmaydocno,g_errno,1)
            RETURN    
         END IF
      WHEN 'N'
         SELECT mmaystus INTO g_mmay_m.mmaystus FROM mmay_t WHERE mmaydocno = g_mmay_m.mmaydocno
            AND mmayent = g_enterprise 
         CALL s_ammt402_unconf_chk(g_mmay_m.mmaydocno,g_mmay_m.mmaystus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_ammt402_unconf_upd(g_mmay_m.mmaydocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmay_m.mmaydocno,g_errno,1)
            RETURN    
         END IF   
   END CASE]]>
</point>
  <point name="statechange.before" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
   IF g_mmay_m.mmaystus = 'X' THEN
      RETURN
   END IF
   IF g_mmay_m.mmaystus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaysite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaysite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaydocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaydocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmayunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmayunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmay001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmay001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmay002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmay002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmay003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmay003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaystus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaystus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmaystus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmayownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmayownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmayowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmayowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaycrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaycrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaycrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaycrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaycrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaymodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaymodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaymoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaycnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmaycnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmaycnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmazseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmazseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmazseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmazsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmazsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      IF g_mmay_m.mmaystus MATCHES "[DR]" THEN 
         LET  g_mmay_m.mmaystus = "N"
      END IF]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmaysite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmaysite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmaydocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmaydocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmayunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.mmayunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmayunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmay001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmay001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmay003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmaystus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.mmaydocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.mmay000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.mmaystus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmazseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmazsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmazsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmazseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmaz000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmaz006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmaz007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmaz008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmaz009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_mmay_m.mmaystus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE
      ]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   DEFINE  l_success  LIKE type_t.num5]]>
</point>
  <point name="send.before_send" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL s_ammt402_conf_chk(g_mmay_m.mmaydocno,g_mmay_m.mmaystus) RETURNING l_success,g_errno
   IF l_success THEN
            
   ELSE
      CALL cl_err(g_mmay_m.mmaydocno,g_errno,1)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="ammt402.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt402_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmaz_d.clear()    #g_mmaz_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt402_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmazseq,mmazsite,'',mmaz000,mmaz002,mmaz003,'',mmaz004,'',mmaz005, 
          '',mmaz001,'',mmaz006,mmaz007,mmaz008,mmaz009,mmazunit FROM mmaz_t",   
                  " INNER JOIN mmay_t ON mmaydocno = mmazdocno ",
 
                  #"",
                  
                  "",
                  " WHERE mmazent=? AND mmazdocno=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmaz_t.mmazseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE ammt402_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt402_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmay_m.mmaydocno
 
                                               
      FOREACH b_fill_cs INTO g_mmaz_d[l_ac].mmazseq,g_mmaz_d[l_ac].mmazsite,g_mmaz_d[l_ac].mmazsite_desc, 
          g_mmaz_d[l_ac].mmaz000,g_mmaz_d[l_ac].mmaz002,g_mmaz_d[l_ac].mmaz003,g_mmaz_d[l_ac].mmaz003_desc, 
          g_mmaz_d[l_ac].mmaz004,g_mmaz_d[l_ac].mmaz004_desc,g_mmaz_d[l_ac].mmaz005,g_mmaz_d[l_ac].mmaz005_desc, 
          g_mmaz_d[l_ac].mmaz001,g_mmaz_d[l_ac].mmaz001_desc,g_mmaz_d[l_ac].mmaz006,g_mmaz_d[l_ac].mmaz007, 
          g_mmaz_d[l_ac].mmaz008,g_mmaz_d[l_ac].mmaz009,g_mmaz_d[l_ac].mmazunit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmaz_d.deleteElement(g_mmaz_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt402_pb
 
   
END FUNCTION
]]>
</section>
  <section id="ammt402.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt402_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt402_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt402.browser_fill" ver="8" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt402_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmay_m.* TO NULL
   CALL g_mmaz_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmaydocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmaydocno ",
 
                        " FROM mmay_t ",
                              " ",
                              " LEFT JOIN mmaz_t ON mmazent = mmayent AND mmaydocno = mmazdocno ",
 
 
                              " ", 
                              " ", 
                       " WHERE mmayent = '" ||g_enterprise|| "' AND mmazent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmay_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmaydocno ",
 
                        " FROM mmay_t ", 
                              " ",
                              " ",
                        "WHERE mmayent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmay_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照mmaydocno,mmaydocdt,mmaysite,'',mmay001,'',mmay002,'',mmay003,'' Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT mmaystus,mmaydocno,mmaydocdt,mmaysite,'',mmay001,'',mmay002, 
          '',mmay003,'',DENSE_RANK() OVER(ORDER BY mmaydocno ",g_order,") AS RANK ",
                        " FROM mmay_t ",
                              " ",
                              " LEFT JOIN mmaz_t ON mmazent = mmayent AND mmaydocno = mmazdocno ",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE mmayent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("mmay_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT mmaystus,mmaydocno,mmaydocdt,mmaysite,'',mmay001,'',mmay002, 
          '',mmay003,'',DENSE_RANK() OVER(ORDER BY mmaydocno ",g_order,") AS RANK ",
                       " FROM mmay_t ",
                            "  ",
                            "  ",
                       " WHERE mmayent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("mmay_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT mmaystus,mmaydocno,mmaydocdt,mmaysite,'',mmay001,'',mmay002,'',mmay003,'' FROM (", 
       l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmaydocno,g_browser[g_cnt].b_mmaydocdt, 
       g_browser[g_cnt].b_mmaysite,g_browser[g_cnt].b_mmaysite_desc,g_browser[g_cnt].b_mmay001,g_browser[g_cnt].b_mmay001_desc, 
       g_browser[g_cnt].b_mmay002,g_browser[g_cnt].b_mmay002_desc,g_browser[g_cnt].b_mmay003,g_browser[g_cnt].b_mmay003_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmaysite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmaysite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmaysite_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmay001
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmay001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmay001_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmay002
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmay002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmay002_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmay003
      CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? ", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmay003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmay003_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="ammt402.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammt402_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmaydocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammt402_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt402.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt402_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmay_m.* TO NULL
   CALL g_mmaz_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmaysite,mmaydocdt,mmaydocno,mmayunit,mmay001,mmay002,mmay003,mmay000, 
          mmaystus,mmayownid,mmayowndp,mmaycrtid,mmaycrtdp,mmaycrtdt,mmaymodid,mmaymoddt,mmaycnfid,mmaycnfdt 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmayownid>>----
         #ON ACTION controlp INFIELD mmayownid
         #   CALL q_common('mmay_t','mmayownid',TRUE,FALSE,g_mmay_m.mmayownid) RETURNING ls_return
         #   DISPLAY ls_return TO mmayownid
         #   NEXT FIELD mmayownid  
         #
         ##----<<mmayowndp>>----
         #ON ACTION controlp INFIELD mmayowndp
         #   CALL q_common('mmay_t','mmayowndp',TRUE,FALSE,g_mmay_m.mmayowndp) RETURNING ls_return
         #   DISPLAY ls_return TO mmayowndp
         #   NEXT FIELD mmayowndp
         #
         ##----<<mmaycrtid>>----
         #ON ACTION controlp INFIELD mmaycrtid
         #   CALL q_common('mmay_t','mmaycrtid',TRUE,FALSE,g_mmay_m.mmaycrtid) RETURNING ls_return
         #   DISPLAY ls_return TO mmaycrtid
         #   NEXT FIELD mmaycrtid
         #
         ##----<<mmaycrtdp>>----
         #ON ACTION controlp INFIELD mmaycrtdp
         #   CALL q_common('mmay_t','mmaycrtdp',TRUE,FALSE,g_mmay_m.mmaycrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO mmaycrtdp
         #   NEXT FIELD mmaycrtdp
         #
         ##----<<mmaymodid>>----
         #ON ACTION controlp INFIELD mmaymodid
         #   CALL q_common('mmay_t','mmaymodid',TRUE,FALSE,g_mmay_m.mmaymodid) RETURNING ls_return
         #   DISPLAY ls_return TO mmaymodid
         #   NEXT FIELD mmaymodid
         #
         ##----<<mmaycnfid>>----
         #ON ACTION controlp INFIELD mmaycnfid
         #   CALL q_common('mmay_t','mmaycnfid',TRUE,FALSE,g_mmay_m.mmaycnfid) RETURNING ls_return
         #   DISPLAY ls_return TO mmaycnfid
         #   NEXT FIELD mmaycnfid
         #
         ##----<<mmaypstid>>----
         ##ON ACTION controlp INFIELD mmaypstid
         ##   CALL q_common('mmay_t','mmaypstid',TRUE,FALSE,g_mmay_m.mmaypstid) RETURNING ls_return
         ##   DISPLAY ls_return TO mmaypstid
         ##   NEXT FIELD mmaypstid
         
         ##----<<mmaycrtdt>>----
         AFTER FIELD mmaycrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmaymoddt>>----
         AFTER FIELD mmaymoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmaycnfdt>>----
         AFTER FIELD mmaycnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmaypstdt>>----
         #AFTER FIELD mmaypstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<mmaysite>>----
         #Ctrlp:construct.c.mmaysite
         ON ACTION controlp INFIELD mmaysite
            #add-point:ON ACTION controlp INFIELD mmaysite
            {<point name="construct.c.mmaysite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaysite
            #add-point:BEFORE FIELD mmaysite
            {<point name="construct.b.mmaysite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaysite
            
            #add-point:AFTER FIELD mmaysite
            {<point name="construct.a.mmaysite" />}
            #END add-point
            
 
         #----<<mmaysite_desc>>----
         #----<<mmaydocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaydocdt
            #add-point:BEFORE FIELD mmaydocdt
            {<point name="construct.b.mmaydocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaydocdt
            
            #add-point:AFTER FIELD mmaydocdt
            {<point name="construct.a.mmaydocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaydocdt
         ON ACTION controlp INFIELD mmaydocdt
            #add-point:ON ACTION controlp INFIELD mmaydocdt
            {<point name="construct.c.mmaydocdt" />}
            #END add-point
 
         #----<<mmaydocno>>----
         #Ctrlp:construct.c.mmaydocno
         ON ACTION controlp INFIELD mmaydocno
            #add-point:ON ACTION controlp INFIELD mmaydocno
            {<point name="construct.c.mmaydocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaydocno
            #add-point:BEFORE FIELD mmaydocno
            {<point name="construct.b.mmaydocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaydocno
            
            #add-point:AFTER FIELD mmaydocno
            {<point name="construct.a.mmaydocno" />}
            #END add-point
            
 
         #----<<mmayunit>>----
         #Ctrlp:construct.c.mmayunit
         ON ACTION controlp INFIELD mmayunit
            #add-point:ON ACTION controlp INFIELD mmayunit
            {<point name="construct.c.mmayunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmayunit
            #add-point:BEFORE FIELD mmayunit
            {<point name="construct.b.mmayunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmayunit
            
            #add-point:AFTER FIELD mmayunit
            {<point name="construct.a.mmayunit" />}
            #END add-point
            
 
         #----<<mmay001>>----
         #Ctrlp:construct.c.mmay001
         ON ACTION controlp INFIELD mmay001
            #add-point:ON ACTION controlp INFIELD mmay001
            {<point name="construct.c.mmay001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay001
            #add-point:BEFORE FIELD mmay001
            {<point name="construct.b.mmay001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmay001
            
            #add-point:AFTER FIELD mmay001
            {<point name="construct.a.mmay001" />}
            #END add-point
            
 
         #----<<mmay001_desc>>----
         #----<<mmay002>>----
         #Ctrlp:construct.c.mmay002
         ON ACTION controlp INFIELD mmay002
            #add-point:ON ACTION controlp INFIELD mmay002
            {<point name="construct.c.mmay002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay002
            #add-point:BEFORE FIELD mmay002
            {<point name="construct.b.mmay002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmay002
            
            #add-point:AFTER FIELD mmay002
            {<point name="construct.a.mmay002" />}
            #END add-point
            
 
         #----<<mmay002_desc>>----
         #----<<mmay003>>----
         #Ctrlp:construct.c.mmay003
         ON ACTION controlp INFIELD mmay003
            #add-point:ON ACTION controlp INFIELD mmay003
            {<point name="construct.c.mmay003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay003
            #add-point:BEFORE FIELD mmay003
            {<point name="construct.b.mmay003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmay003
            
            #add-point:AFTER FIELD mmay003
            {<point name="construct.a.mmay003" />}
            #END add-point
            
 
         #----<<mmay003_desc>>----
         #----<<mmay000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmay000
            #add-point:BEFORE FIELD mmay000
            {<point name="construct.b.mmay000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmay000
            
            #add-point:AFTER FIELD mmay000
            {<point name="construct.a.mmay000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmay000
         ON ACTION controlp INFIELD mmay000
            #add-point:ON ACTION controlp INFIELD mmay000
            {<point name="construct.c.mmay000" />}
            #END add-point
 
         #----<<mmaystus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaystus
            #add-point:BEFORE FIELD mmaystus
            {<point name="construct.b.mmaystus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaystus
            
            #add-point:AFTER FIELD mmaystus
            {<point name="construct.a.mmaystus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaystus
         ON ACTION controlp INFIELD mmaystus
            #add-point:ON ACTION controlp INFIELD mmaystus
            {<point name="construct.c.mmaystus" />}
            #END add-point
 
         #----<<mmayownid>>----
         #Ctrlp:construct.c.mmayownid
         ON ACTION controlp INFIELD mmayownid
            #add-point:ON ACTION controlp INFIELD mmayownid
            {<point name="construct.c.mmayownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmayownid
            #add-point:BEFORE FIELD mmayownid
            {<point name="construct.b.mmayownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmayownid
            
            #add-point:AFTER FIELD mmayownid
            {<point name="construct.a.mmayownid" />}
            #END add-point
            
 
         #----<<mmayownid_desc>>----
         #----<<mmayowndp>>----
         #Ctrlp:construct.c.mmayowndp
         ON ACTION controlp INFIELD mmayowndp
            #add-point:ON ACTION controlp INFIELD mmayowndp
            {<point name="construct.c.mmayowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmayowndp
            #add-point:BEFORE FIELD mmayowndp
            {<point name="construct.b.mmayowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmayowndp
            
            #add-point:AFTER FIELD mmayowndp
            {<point name="construct.a.mmayowndp" />}
            #END add-point
            
 
         #----<<mmayowndp_desc>>----
         #----<<mmaycrtid>>----
         #Ctrlp:construct.c.mmaycrtid
         ON ACTION controlp INFIELD mmaycrtid
            #add-point:ON ACTION controlp INFIELD mmaycrtid
            {<point name="construct.c.mmaycrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaycrtid
            #add-point:BEFORE FIELD mmaycrtid
            {<point name="construct.b.mmaycrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaycrtid
            
            #add-point:AFTER FIELD mmaycrtid
            {<point name="construct.a.mmaycrtid" />}
            #END add-point
            
 
         #----<<mmaycrtid_desc>>----
         #----<<mmaycrtdp>>----
         #Ctrlp:construct.c.mmaycrtdp
         ON ACTION controlp INFIELD mmaycrtdp
            #add-point:ON ACTION controlp INFIELD mmaycrtdp
            {<point name="construct.c.mmaycrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaycrtdp
            #add-point:BEFORE FIELD mmaycrtdp
            {<point name="construct.b.mmaycrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaycrtdp
            
            #add-point:AFTER FIELD mmaycrtdp
            {<point name="construct.a.mmaycrtdp" />}
            #END add-point
            
 
         #----<<mmaycrtdp_desc>>----
         #----<<mmaycrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaycrtdt
            #add-point:BEFORE FIELD mmaycrtdt
            {<point name="construct.b.mmaycrtdt" />}
            #END add-point
 
         #----<<mmaymodid>>----
         #Ctrlp:construct.c.mmaymodid
         ON ACTION controlp INFIELD mmaymodid
            #add-point:ON ACTION controlp INFIELD mmaymodid
            {<point name="construct.c.mmaymodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaymodid
            #add-point:BEFORE FIELD mmaymodid
            {<point name="construct.b.mmaymodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaymodid
            
            #add-point:AFTER FIELD mmaymodid
            {<point name="construct.a.mmaymodid" />}
            #END add-point
            
 
         #----<<mmaymodid_desc>>----
         #----<<mmaymoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaymoddt
            #add-point:BEFORE FIELD mmaymoddt
            {<point name="construct.b.mmaymoddt" />}
            #END add-point
 
         #----<<mmaycnfid>>----
         #Ctrlp:construct.c.mmaycnfid
         ON ACTION controlp INFIELD mmaycnfid
            #add-point:ON ACTION controlp INFIELD mmaycnfid
            {<point name="construct.c.mmaycnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaycnfid
            #add-point:BEFORE FIELD mmaycnfid
            {<point name="construct.b.mmaycnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaycnfid
            
            #add-point:AFTER FIELD mmaycnfid
            {<point name="construct.a.mmaycnfid" />}
            #END add-point
            
 
         #----<<mmaycnfid_desc>>----
         #----<<mmaycnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaycnfdt
            #add-point:BEFORE FIELD mmaycnfdt
            {<point name="construct.b.mmaycnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmazseq,mmazsite,mmaz000,mmaz002,mmaz003,mmaz004,mmaz005,mmaz001,mmaz006, 
          mmaz007,mmaz008,mmaz009
           FROM s_detail1[1].mmazseq,s_detail1[1].mmazsite,s_detail1[1].mmaz000,s_detail1[1].mmaz002, 
               s_detail1[1].mmaz003,s_detail1[1].mmaz004,s_detail1[1].mmaz005,s_detail1[1].mmaz001,s_detail1[1].mmaz006, 
               s_detail1[1].mmaz007,s_detail1[1].mmaz008,s_detail1[1].mmaz009
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<mmazseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmazseq
            #add-point:BEFORE FIELD mmazseq
            {<point name="construct.b.page1.mmazseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmazseq
            
            #add-point:AFTER FIELD mmazseq
            {<point name="construct.a.page1.mmazseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmazseq
         ON ACTION controlp INFIELD mmazseq
            #add-point:ON ACTION controlp INFIELD mmazseq
            {<point name="construct.c.page1.mmazseq" />}
            #END add-point
 
         #----<<mmazsite>>----
         #Ctrlp:construct.c.page1.mmazsite
         ON ACTION controlp INFIELD mmazsite
            #add-point:ON ACTION controlp INFIELD mmazsite
            {<point name="construct.c.page1.mmazsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmazsite
            #add-point:BEFORE FIELD mmazsite
            {<point name="construct.b.page1.mmazsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmazsite
            
            #add-point:AFTER FIELD mmazsite
            {<point name="construct.a.page1.mmazsite" />}
            #END add-point
            
 
         #----<<mmazsite_desc>>----
         #----<<mmaz000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz000
            #add-point:BEFORE FIELD mmaz000
            {<point name="construct.b.page1.mmaz000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz000
            
            #add-point:AFTER FIELD mmaz000
            {<point name="construct.a.page1.mmaz000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaz000
         ON ACTION controlp INFIELD mmaz000
            #add-point:ON ACTION controlp INFIELD mmaz000
            {<point name="construct.c.page1.mmaz000" />}
            #END add-point
 
         #----<<mmaz002>>----
         #Ctrlp:construct.c.page1.mmaz002
         ON ACTION controlp INFIELD mmaz002
            #add-point:ON ACTION controlp INFIELD mmaz002
            {<point name="construct.c.page1.mmaz002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz002
            #add-point:BEFORE FIELD mmaz002
            {<point name="construct.b.page1.mmaz002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz002
            
            #add-point:AFTER FIELD mmaz002
            {<point name="construct.a.page1.mmaz002" />}
            #END add-point
            
 
         #----<<mmaz003>>----
         #Ctrlp:construct.c.page1.mmaz003
         ON ACTION controlp INFIELD mmaz003
            #add-point:ON ACTION controlp INFIELD mmaz003
            {<point name="construct.c.page1.mmaz003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz003
            #add-point:BEFORE FIELD mmaz003
            {<point name="construct.b.page1.mmaz003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz003
            
            #add-point:AFTER FIELD mmaz003
            {<point name="construct.a.page1.mmaz003" />}
            #END add-point
            
 
         #----<<mmaz003_desc>>----
         #----<<mmaz004>>----
         #Ctrlp:construct.c.page1.mmaz004
         ON ACTION controlp INFIELD mmaz004
            #add-point:ON ACTION controlp INFIELD mmaz004
            {<point name="construct.c.page1.mmaz004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz004
            #add-point:BEFORE FIELD mmaz004
            {<point name="construct.b.page1.mmaz004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz004
            
            #add-point:AFTER FIELD mmaz004
            {<point name="construct.a.page1.mmaz004" />}
            #END add-point
            
 
         #----<<mmaz004_desc>>----
         #----<<mmaz005>>----
         #Ctrlp:construct.c.page1.mmaz005
         ON ACTION controlp INFIELD mmaz005
            #add-point:ON ACTION controlp INFIELD mmaz005
            {<point name="construct.c.page1.mmaz005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz005
            #add-point:BEFORE FIELD mmaz005
            {<point name="construct.b.page1.mmaz005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz005
            
            #add-point:AFTER FIELD mmaz005
            {<point name="construct.a.page1.mmaz005" />}
            #END add-point
            
 
         #----<<mmaz005_desc>>----
         #----<<mmaz001>>----
         #Ctrlp:construct.c.page1.mmaz001
         ON ACTION controlp INFIELD mmaz001
            #add-point:ON ACTION controlp INFIELD mmaz001
            {<point name="construct.c.page1.mmaz001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz001
            #add-point:BEFORE FIELD mmaz001
            {<point name="construct.b.page1.mmaz001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz001
            
            #add-point:AFTER FIELD mmaz001
            {<point name="construct.a.page1.mmaz001" />}
            #END add-point
            
 
         #----<<mmaz001_desc>>----
         #----<<mmaz006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz006
            #add-point:BEFORE FIELD mmaz006
            {<point name="construct.b.page1.mmaz006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz006
            
            #add-point:AFTER FIELD mmaz006
            {<point name="construct.a.page1.mmaz006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaz006
         ON ACTION controlp INFIELD mmaz006
            #add-point:ON ACTION controlp INFIELD mmaz006
            {<point name="construct.c.page1.mmaz006" />}
            #END add-point
 
         #----<<mmaz007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz007
            #add-point:BEFORE FIELD mmaz007
            {<point name="construct.b.page1.mmaz007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz007
            
            #add-point:AFTER FIELD mmaz007
            {<point name="construct.a.page1.mmaz007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaz007
         ON ACTION controlp INFIELD mmaz007
            #add-point:ON ACTION controlp INFIELD mmaz007
            {<point name="construct.c.page1.mmaz007" />}
            #END add-point
 
         #----<<mmaz008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz008
            #add-point:BEFORE FIELD mmaz008
            {<point name="construct.b.page1.mmaz008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz008
            
            #add-point:AFTER FIELD mmaz008
            {<point name="construct.a.page1.mmaz008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaz008
         ON ACTION controlp INFIELD mmaz008
            #add-point:ON ACTION controlp INFIELD mmaz008
            {<point name="construct.c.page1.mmaz008" />}
            #END add-point
 
         #----<<mmaz009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz009
            #add-point:BEFORE FIELD mmaz009
            {<point name="construct.b.page1.mmaz009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz009
            
            #add-point:AFTER FIELD mmaz009
            {<point name="construct.a.page1.mmaz009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaz009
         ON ACTION controlp INFIELD mmaz009
            #add-point:ON ACTION controlp INFIELD mmaz009
            {<point name="construct.c.page1.mmaz009" />}
            #END add-point
 
         #----<<mmazunit>>----
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt402.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt402_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " mmaydocno = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt402.delete" ver="8" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt402_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE ammt402_master_referesh USING g_mmay_m.mmaydocno INTO g_mmay_m.mmaysite,g_mmay_m.mmaydocdt, 
       g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000, 
       g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt 

   
   
 
   CALL ammt402_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt402_cl USING g_enterprise,g_mmay_m.mmaydocno
 
   IF STATUS THEN
      CALL cl_err("OPEN ammt402_cl:", STATUS, 1)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH ammt402_cl INTO g_mmay_m.mmaysite,g_mmay_m.mmaysite_desc,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno, 
       g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay001_desc,g_mmay_m.mmay002,g_mmay_m.mmay002_desc, 
       g_mmay_m.mmay003,g_mmay_m.mmay003_desc,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid, 
       g_mmay_m.mmayownid_desc,g_mmay_m.mmayowndp,g_mmay_m.mmayowndp_desc,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtid_desc, 
       g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdp_desc,g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymodid_desc, 
       g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfid_desc,g_mmay_m.mmaycnfdt              
        #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmay_m.mmaydocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt402_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
 
      DELETE FROM mmay_t
       WHERE mmayent = g_enterprise AND mmaydocno = g_mmay_m.mmaydocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmay_m.mmaydocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmaz_t
       WHERE mmazent = g_enterprise AND mmazdocno = g_mmay_m.mmaydocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmaz_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmaz_d.clear() 
 
     
      #CALL ammt402_ui_browser_refresh()  
      CALL ammt402_ui_headershow()  
      CALL ammt402_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt402_browser_fill("")
         CALL ammt402_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt402_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
  
 
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt402_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmay_m.mmaydocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="ammt402.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt402_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmaz_t
       WHERE mmazent = g_enterprise AND
         mmazdocno = ps_keys_bak[1] AND mmazseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt402.description" ver="33" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000407
#+ 
#+ Filename...: ammt402
#+ Description: 會員卡領用申請維護作業
#+ Creator....: 02296(2013/08/13)
#+ Modifier...: 02296(2013/11/27)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammt402.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt402_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmaz_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt402_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt402_detail AS ",
                "SELECT * FROM mmaz_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt402_detail SELECT * FROM mmaz_t 
                                         WHERE mmazent = g_enterprise AND mmazdocno = g_mmaydocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt402_detail 
      #更新key欄位
      SET mmazdocno = g_mmay_m.mmaydocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmaz_t SELECT * FROM ammt402_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt402_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
   
   DROP TABLE ammt402_detail
   
END FUNCTION
]]>
</section>
  <section id="ammt402.detail_show" ver="3" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION ammt402_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt402.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt402_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmay_m.mmaydocno = g_browser[g_current_idx].b_mmaydocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt402_master_referesh USING g_mmay_m.mmaydocno INTO g_mmay_m.mmaysite,g_mmay_m.mmaydocdt, 
       g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000, 
       g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt 

   IF SQLCA.sqlcode THEN
      CALL cl_err("mmay_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmay_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
  
   #重新顯示   
   CALL ammt402_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt402.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt402_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="ammt402.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt402_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmaydocno,mmaydocdt,mmaysite,mmay001,mmay002,mmay003
                          FROM s_browse[1].b_mmaydocno,s_browse[1].b_mmaydocdt,s_browse[1].b_mmaysite, 
                              s_browse[1].b_mmay001,s_browse[1].b_mmay002,s_browse[1].b_mmay003
 
         BEFORE CONSTRUCT
               DISPLAY ammt402_filter_parser('mmaydocno') TO s_browse[1].b_mmaydocno
            DISPLAY ammt402_filter_parser('mmaydocdt') TO s_browse[1].b_mmaydocdt
            DISPLAY ammt402_filter_parser('mmaysite') TO s_browse[1].b_mmaysite
            DISPLAY ammt402_filter_parser('mmay001') TO s_browse[1].b_mmay001
            DISPLAY ammt402_filter_parser('mmay002') TO s_browse[1].b_mmay002
            DISPLAY ammt402_filter_parser('mmay003') TO s_browse[1].b_mmay003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt402_filter_show('mmaydocno')
   CALL ammt402_filter_show('mmaydocdt')
   CALL ammt402_filter_show('mmaysite')
   CALL ammt402_filter_show('mmay001')
   CALL ammt402_filter_show('mmay002')
   CALL ammt402_filter_show('mmay003')
 
END FUNCTION
]]>
</section>
  <section id="ammt402.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt402_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="ammt402.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt402_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt402_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="ammt402.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmay_m        RECORD
       mmaysite LIKE mmay_t.mmaysite, 
   mmaysite_desc LIKE type_t.chr80, 
   mmaydocdt LIKE mmay_t.mmaydocdt, 
   mmaydocno LIKE mmay_t.mmaydocno, 
   mmayunit LIKE mmay_t.mmayunit, 
   mmay001 LIKE mmay_t.mmay001, 
   mmay001_desc LIKE type_t.chr80, 
   mmay002 LIKE mmay_t.mmay002, 
   mmay002_desc LIKE type_t.chr80, 
   mmay003 LIKE mmay_t.mmay003, 
   mmay003_desc LIKE type_t.chr80, 
   mmay000 LIKE mmay_t.mmay000, 
   mmaystus LIKE mmay_t.mmaystus, 
   mmayownid LIKE mmay_t.mmayownid, 
   mmayownid_desc LIKE type_t.chr80, 
   mmayowndp LIKE mmay_t.mmayowndp, 
   mmayowndp_desc LIKE type_t.chr80, 
   mmaycrtid LIKE mmay_t.mmaycrtid, 
   mmaycrtid_desc LIKE type_t.chr80, 
   mmaycrtdp LIKE mmay_t.mmaycrtdp, 
   mmaycrtdp_desc LIKE type_t.chr80, 
   mmaycrtdt DATETIME YEAR TO SECOND, 
   mmaymodid LIKE mmay_t.mmaymodid, 
   mmaymodid_desc LIKE type_t.chr80, 
   mmaymoddt DATETIME YEAR TO SECOND, 
   mmaycnfid LIKE mmay_t.mmaycnfid, 
   mmaycnfid_desc LIKE type_t.chr80, 
   mmaycnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmaz_d        RECORD
       mmazseq LIKE mmaz_t.mmazseq, 
   mmazsite LIKE mmaz_t.mmazsite, 
   mmazsite_desc LIKE type_t.chr500, 
   mmaz000 LIKE mmaz_t.mmaz000, 
   mmaz002 LIKE mmaz_t.mmaz002, 
   mmaz003 LIKE mmaz_t.mmaz003, 
   mmaz003_desc LIKE type_t.chr500, 
   mmaz004 LIKE mmaz_t.mmaz004, 
   mmaz004_desc LIKE type_t.chr500, 
   mmaz005 LIKE mmaz_t.mmaz005, 
   mmaz005_desc LIKE type_t.chr500, 
   mmaz001 LIKE mmaz_t.mmaz001, 
   mmaz001_desc LIKE type_t.chr500, 
   mmaz006 LIKE mmaz_t.mmaz006, 
   mmaz007 LIKE mmaz_t.mmaz007, 
   mmaz008 LIKE mmaz_t.mmaz008, 
   mmaz009 LIKE mmaz_t.mmaz009, 
   mmazunit LIKE mmaz_t.mmazunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmay_m          type_g_mmay_m
DEFINE g_mmay_m_t        type_g_mmay_m
 
   DEFINE g_mmaydocno_t LIKE mmay_t.mmaydocno
 
 
DEFINE g_mmaz_d          DYNAMIC ARRAY OF type_g_mmaz_d
DEFINE g_mmaz_d_t        type_g_mmaz_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmaydocno LIKE mmay_t.mmaydocno,
      b_mmaydocdt LIKE mmay_t.mmaydocdt,
      b_mmaysite LIKE mmay_t.mmaysite,
   b_mmaysite_desc LIKE type_t.chr80,
      b_mmay001 LIKE mmay_t.mmay001,
   b_mmay001_desc LIKE type_t.chr80,
      b_mmay002 LIKE mmay_t.mmay002,
   b_mmay002_desc LIKE type_t.chr80,
      b_mmay003 LIKE mmay_t.mmay003,
   b_mmay003_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmaydocno LIKE mmay_t.mmaydocno,
      b_mmaydocdt LIKE mmay_t.mmaydocdt,
      b_mmaysite LIKE mmay_t.mmaysite,
   b_mmaysite_desc LIKE type_t.chr80,
      b_mmay001 LIKE mmay_t.mmay001,
   b_mmay001_desc LIKE type_t.chr80,
      b_mmay002 LIKE mmay_t.mmay002,
   b_mmay002_desc LIKE type_t.chr80,
      b_mmay003 LIKE mmay_t.mmay003,
   b_mmay003_desc LIKE type_t.chr80
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammt402.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammt402_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmaz_d.getLength() THEN
         LET g_detail_idx = g_mmaz_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmaz_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmaz_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt402.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt402_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmaystus','13','N,Y,X,A,D,R,W')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammt402_default_search()
    
END FUNCTION
]]>
</section>
  <section id="ammt402.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt402_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmazseq,mmazsite,'',mmaz000,mmaz002,mmaz003,'',mmaz004,'',mmaz005,'',mmaz001, 
       '',mmaz006,mmaz007,mmaz008,mmaz009,mmazunit FROM mmaz_t WHERE mmazent=? AND mmazdocno=? AND mmazseq=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE ammt402_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt402_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt402_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmay_m.mmaysite,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001, 
       g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000,g_mmay_m.mmaystus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="ammt402.input.body" ver="5" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmaz_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmaz_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt402_b_fill()
            LET g_rec_b = g_mmaz_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point              
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt402_cl USING g_enterprise,g_mmay_m.mmaydocno
 
            IF STATUS THEN
               CALL cl_err("OPEN ammt402_cl:", STATUS, 1)
               CLOSE ammt402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmaz_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmaz_d[l_ac].mmazseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmaz_d_t.* = g_mmaz_d[l_ac].*  #BACKUP
               CALL ammt402_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt402_set_no_entry_b(l_cmd)
               IF NOT ammt402_lock_b("mmaz_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt402_bcl INTO g_mmaz_d[l_ac].mmazseq,g_mmaz_d[l_ac].mmazsite,g_mmaz_d[l_ac].mmazsite_desc, 
                      g_mmaz_d[l_ac].mmaz000,g_mmaz_d[l_ac].mmaz002,g_mmaz_d[l_ac].mmaz003,g_mmaz_d[l_ac].mmaz003_desc, 
                      g_mmaz_d[l_ac].mmaz004,g_mmaz_d[l_ac].mmaz004_desc,g_mmaz_d[l_ac].mmaz005,g_mmaz_d[l_ac].mmaz005_desc, 
                      g_mmaz_d[l_ac].mmaz001,g_mmaz_d[l_ac].mmaz001_desc,g_mmaz_d[l_ac].mmaz006,g_mmaz_d[l_ac].mmaz007, 
                      g_mmaz_d[l_ac].mmaz008,g_mmaz_d[l_ac].mmaz009,g_mmaz_d[l_ac].mmazunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmaz_d_t.mmazseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt402_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmaz_d[l_ac].* TO NULL 
            
            LET g_mmaz_d_t.* = g_mmaz_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt402_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt402_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmaz_d[li_reproduce_target].* = g_mmaz_d[li_reproduce].*
 
               LET g_mmaz_d[li_reproduce_target].mmazseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmaz_t 
             WHERE mmazent = g_enterprise AND mmazdocno = g_mmay_m.mmaydocno
 
               AND mmazseq = g_mmaz_d[l_ac].mmazseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmay_m.mmaydocno
               LET gs_keys[2] = g_mmaz_d[g_detail_idx].mmazseq
               CALL ammt402_insert_b('mmaz_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmaz_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmaz_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt402_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmaz_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmaz_d.deleteElement(l_ac)
               NEXT FIELD mmazseq
            END IF
         
            IF g_mmaz_d[l_ac].mmazseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmaz_t
                WHERE mmazent = g_enterprise AND mmazdocno = g_mmay_m.mmaydocno AND
 
                      mmazseq = g_mmaz_d_t.mmazseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmaz_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt402_bcl
               LET l_count = g_mmaz_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmay_m.mmaydocno
               LET gs_keys[2] = g_mmaz_d[g_detail_idx].mmazseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt402_delete_b('mmaz_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mmazseq>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmazseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmaz_d[l_ac].mmazseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD mmazseq
            END IF
 
 
            #add-point:AFTER FIELD mmazseq
            {<point name="input.a.page1.mmazseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmazseq
            #add-point:BEFORE FIELD mmazseq
            {<point name="input.b.page1.mmazseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmazseq
            #add-point:ON CHANGE mmazseq
            {<point name="input.g.page1.mmazseq" />}
            #END add-point
 
         #----<<mmazsite>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmazsite
            
            #add-point:AFTER FIELD mmazsite
            {<point name="input.a.page1.mmazsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmazsite
            #add-point:BEFORE FIELD mmazsite
            {<point name="input.b.page1.mmazsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmazsite
            #add-point:ON CHANGE mmazsite
            {<point name="input.g.page1.mmazsite" />}
            #END add-point
 
         #----<<mmazsite_desc>>----
         #----<<mmaz000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz000
            #add-point:BEFORE FIELD mmaz000
            {<point name="input.b.page1.mmaz000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz000
            
            #add-point:AFTER FIELD mmaz000
            {<point name="input.a.page1.mmaz000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz000
            #add-point:ON CHANGE mmaz000
            {<point name="input.g.page1.mmaz000" />}
            #END add-point
 
         #----<<mmaz002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz002
            #add-point:BEFORE FIELD mmaz002
            {<point name="input.b.page1.mmaz002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz002
            
            #add-point:AFTER FIELD mmaz002
            {<point name="input.a.page1.mmaz002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz002
            #add-point:ON CHANGE mmaz002
            {<point name="input.g.page1.mmaz002" />}
            #END add-point
 
         #----<<mmaz003>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaz003
            
            #add-point:AFTER FIELD mmaz003
            {<point name="input.a.page1.mmaz003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz003
            #add-point:BEFORE FIELD mmaz003
            {<point name="input.b.page1.mmaz003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz003
            #add-point:ON CHANGE mmaz003
            {<point name="input.g.page1.mmaz003" />}
            #END add-point
 
         #----<<mmaz003_desc>>----
         #----<<mmaz004>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaz004
            
            #add-point:AFTER FIELD mmaz004
            {<point name="input.a.page1.mmaz004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz004
            #add-point:BEFORE FIELD mmaz004
            {<point name="input.b.page1.mmaz004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz004
            #add-point:ON CHANGE mmaz004
            {<point name="input.g.page1.mmaz004" />}
            #END add-point
 
         #----<<mmaz004_desc>>----
         #----<<mmaz005>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaz005
            
            #add-point:AFTER FIELD mmaz005
            {<point name="input.a.page1.mmaz005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz005
            #add-point:BEFORE FIELD mmaz005
            {<point name="input.b.page1.mmaz005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz005
            #add-point:ON CHANGE mmaz005
            {<point name="input.g.page1.mmaz005" />}
            #END add-point
 
         #----<<mmaz005_desc>>----
         #----<<mmaz001>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaz001
            
            #add-point:AFTER FIELD mmaz001
            {<point name="input.a.page1.mmaz001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz001
            #add-point:BEFORE FIELD mmaz001
            {<point name="input.b.page1.mmaz001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz001
            #add-point:ON CHANGE mmaz001
            {<point name="input.g.page1.mmaz001" />}
            #END add-point
 
         #----<<mmaz001_desc>>----
         #----<<mmaz006>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaz006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmaz_d[l_ac].mmaz006,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmaz006
            END IF
 
 
            #add-point:AFTER FIELD mmaz006
            {<point name="input.a.page1.mmaz006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz006
            #add-point:BEFORE FIELD mmaz006
            {<point name="input.b.page1.mmaz006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz006
            #add-point:ON CHANGE mmaz006
            {<point name="input.g.page1.mmaz006" />}
            #END add-point
 
         #----<<mmaz007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz007
            #add-point:BEFORE FIELD mmaz007
            {<point name="input.b.page1.mmaz007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz007
            
            #add-point:AFTER FIELD mmaz007
            {<point name="input.a.page1.mmaz007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz007
            #add-point:ON CHANGE mmaz007
            {<point name="input.g.page1.mmaz007" />}
            #END add-point
 
         #----<<mmaz008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz008
            #add-point:BEFORE FIELD mmaz008
            {<point name="input.b.page1.mmaz008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz008
            
            #add-point:AFTER FIELD mmaz008
            {<point name="input.a.page1.mmaz008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz008
            #add-point:ON CHANGE mmaz008
            {<point name="input.g.page1.mmaz008" />}
            #END add-point
 
         #----<<mmaz009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaz009
            #add-point:BEFORE FIELD mmaz009
            {<point name="input.b.page1.mmaz009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaz009
            
            #add-point:AFTER FIELD mmaz009
            {<point name="input.a.page1.mmaz009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaz009
            #add-point:ON CHANGE mmaz009
            {<point name="input.g.page1.mmaz009" />}
            #END add-point
 
         #----<<mmazunit>>----
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mmazseq>>----
         #Ctrlp:input.c.page1.mmazseq
         ON ACTION controlp INFIELD mmazseq
            #add-point:ON ACTION controlp INFIELD mmazseq
            {<point name="input.c.page1.mmazseq" />}
            #END add-point
 
         #----<<mmazsite>>----
         #Ctrlp:input.c.page1.mmazsite
         ON ACTION controlp INFIELD mmazsite
            #add-point:ON ACTION controlp INFIELD mmazsite
            {<point name="input.c.page1.mmazsite" />}
            #END add-point
 
         #----<<mmazsite_desc>>----
         #----<<mmaz000>>----
         #Ctrlp:input.c.page1.mmaz000
         ON ACTION controlp INFIELD mmaz000
            #add-point:ON ACTION controlp INFIELD mmaz000
            {<point name="input.c.page1.mmaz000" />}
            #END add-point
 
         #----<<mmaz002>>----
         #Ctrlp:input.c.page1.mmaz002
         ON ACTION controlp INFIELD mmaz002
            #add-point:ON ACTION controlp INFIELD mmaz002
            {<point name="input.c.page1.mmaz002" />}
            #END add-point
 
         #----<<mmaz003>>----
         #Ctrlp:input.c.page1.mmaz003
         ON ACTION controlp INFIELD mmaz003
            #add-point:ON ACTION controlp INFIELD mmaz003
            {<point name="input.c.page1.mmaz003" />}
            #END add-point
 
         #----<<mmaz003_desc>>----
         #----<<mmaz004>>----
         #Ctrlp:input.c.page1.mmaz004
         ON ACTION controlp INFIELD mmaz004
            #add-point:ON ACTION controlp INFIELD mmaz004
            {<point name="input.c.page1.mmaz004" />}
            #END add-point
 
         #----<<mmaz004_desc>>----
         #----<<mmaz005>>----
         #Ctrlp:input.c.page1.mmaz005
         ON ACTION controlp INFIELD mmaz005
            #add-point:ON ACTION controlp INFIELD mmaz005
            {<point name="input.c.page1.mmaz005" />}
            #END add-point
 
         #----<<mmaz005_desc>>----
         #----<<mmaz001>>----
         #Ctrlp:input.c.page1.mmaz001
         ON ACTION controlp INFIELD mmaz001
            #add-point:ON ACTION controlp INFIELD mmaz001
            {<point name="input.c.page1.mmaz001" />}
            #END add-point
 
         #----<<mmaz001_desc>>----
         #----<<mmaz006>>----
         #Ctrlp:input.c.page1.mmaz006
         ON ACTION controlp INFIELD mmaz006
            #add-point:ON ACTION controlp INFIELD mmaz006
            {<point name="input.c.page1.mmaz006" />}
            #END add-point
 
         #----<<mmaz007>>----
         #Ctrlp:input.c.page1.mmaz007
         ON ACTION controlp INFIELD mmaz007
            #add-point:ON ACTION controlp INFIELD mmaz007
            {<point name="input.c.page1.mmaz007" />}
            #END add-point
 
         #----<<mmaz008>>----
         #Ctrlp:input.c.page1.mmaz008
         ON ACTION controlp INFIELD mmaz008
            #add-point:ON ACTION controlp INFIELD mmaz008
            {<point name="input.c.page1.mmaz008" />}
            #END add-point
 
         #----<<mmaz009>>----
         #Ctrlp:input.c.page1.mmaz009
         ON ACTION controlp INFIELD mmaz009
            #add-point:ON ACTION controlp INFIELD mmaz009
            {<point name="input.c.page1.mmaz009" />}
            #END add-point
 
         #----<<mmazunit>>----
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmaz_d[l_ac].* = g_mmaz_d_t.*
               CLOSE ammt402_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmaz_d[l_ac].mmazseq,-263,1)
               LET g_mmaz_d[l_ac].* = g_mmaz_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmaz_t SET (mmazdocno,mmazseq,mmazsite,mmaz000,mmaz002,mmaz003,mmaz004,mmaz005, 
                   mmaz001,mmaz006,mmaz007,mmaz008,mmaz009,mmazunit) = (g_mmay_m.mmaydocno,g_mmaz_d[l_ac].mmazseq, 
                   g_mmaz_d[l_ac].mmazsite,g_mmaz_d[l_ac].mmaz000,g_mmaz_d[l_ac].mmaz002,g_mmaz_d[l_ac].mmaz003, 
                   g_mmaz_d[l_ac].mmaz004,g_mmaz_d[l_ac].mmaz005,g_mmaz_d[l_ac].mmaz001,g_mmaz_d[l_ac].mmaz006, 
                   g_mmaz_d[l_ac].mmaz007,g_mmaz_d[l_ac].mmaz008,g_mmaz_d[l_ac].mmaz009,g_mmaz_d[l_ac].mmazunit) 

                WHERE mmazent = g_enterprise AND mmazdocno = g_mmay_m.mmaydocno 
 
                  AND mmazseq = g_mmaz_d_t.mmazseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmaz_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmaz_d[l_ac].* = g_mmaz_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmaz_t",SQLCA.sqlcode,1)
                     LET g_mmaz_d[l_ac].* = g_mmaz_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmay_m.mmaydocno
               LET gs_keys_bak[1] = g_mmaydocno_t
               LET gs_keys[2] = g_mmaz_d[g_detail_idx].mmazseq
               LET gs_keys_bak[2] = g_mmaz_d_t.mmazseq
               CALL ammt402_update_b('mmaz_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt402_unlock_b("mmaz_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmaz_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmaz_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="ammt402.input.head" ver="6" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_mmay_m.mmaysite,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001, 
          g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000,g_mmay_m.mmaystus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF         
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<mmaysite>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmaysite
            
            #add-point:AFTER FIELD mmaysite
            {<point name="input.a.mmaysite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaysite
            #add-point:BEFORE FIELD mmaysite
            {<point name="input.b.mmaysite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaysite
            #add-point:ON CHANGE mmaysite
            {<point name="input.g.mmaysite" />}
            #END add-point
 
         #----<<mmaysite_desc>>----
         #----<<mmaydocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaydocdt
            #add-point:BEFORE FIELD mmaydocdt
            {<point name="input.b.mmaydocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaydocdt
            
            #add-point:AFTER FIELD mmaydocdt
            {<point name="input.a.mmaydocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaydocdt
            #add-point:ON CHANGE mmaydocdt
            {<point name="input.g.mmaydocdt" />}
            #END add-point
 
         #----<<mmaydocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaydocno
            #add-point:BEFORE FIELD mmaydocno
            {<point name="input.b.mmaydocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaydocno
            
            #add-point:AFTER FIELD mmaydocno
            {<point name="input.a.mmaydocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaydocno
            #add-point:ON CHANGE mmaydocno
            {<point name="input.g.mmaydocno" />}
            #END add-point
 
         #----<<mmayunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmayunit
            #add-point:BEFORE FIELD mmayunit
            {<point name="input.b.mmayunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmayunit
            
            #add-point:AFTER FIELD mmayunit
            {<point name="input.a.mmayunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmayunit
            #add-point:ON CHANGE mmayunit
            {<point name="input.g.mmayunit" />}
            #END add-point
 
         #----<<mmay001>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmay001
            
            #add-point:AFTER FIELD mmay001
            {<point name="input.a.mmay001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay001
            #add-point:BEFORE FIELD mmay001
            {<point name="input.b.mmay001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmay001
            #add-point:ON CHANGE mmay001
            {<point name="input.g.mmay001" />}
            #END add-point
 
         #----<<mmay001_desc>>----
         #----<<mmay002>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmay002
            
            #add-point:AFTER FIELD mmay002
            {<point name="input.a.mmay002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay002
            #add-point:BEFORE FIELD mmay002
            {<point name="input.b.mmay002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmay002
            #add-point:ON CHANGE mmay002
            {<point name="input.g.mmay002" />}
            #END add-point
 
         #----<<mmay002_desc>>----
         #----<<mmay003>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmay003
            
            #add-point:AFTER FIELD mmay003
            {<point name="input.a.mmay003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmay003
            #add-point:BEFORE FIELD mmay003
            {<point name="input.b.mmay003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmay003
            #add-point:ON CHANGE mmay003
            {<point name="input.g.mmay003" />}
            #END add-point
 
         #----<<mmay003_desc>>----
         #----<<mmay000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmay000
            #add-point:BEFORE FIELD mmay000
            {<point name="input.b.mmay000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmay000
            
            #add-point:AFTER FIELD mmay000
            {<point name="input.a.mmay000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmay000
            #add-point:ON CHANGE mmay000
            {<point name="input.g.mmay000" />}
            #END add-point
 
         #----<<mmaystus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaystus
            #add-point:BEFORE FIELD mmaystus
            {<point name="input.b.mmaystus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaystus
            
            #add-point:AFTER FIELD mmaystus
            {<point name="input.a.mmaystus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaystus
            #add-point:ON CHANGE mmaystus
            {<point name="input.g.mmaystus" />}
            #END add-point
 
         #----<<mmayownid>>----
         #----<<mmayownid_desc>>----
         #----<<mmayowndp>>----
         #----<<mmayowndp_desc>>----
         #----<<mmaycrtid>>----
         #----<<mmaycrtid_desc>>----
         #----<<mmaycrtdp>>----
         #----<<mmaycrtdp_desc>>----
         #----<<mmaycrtdt>>----
         #----<<mmaymodid>>----
         #----<<mmaymodid_desc>>----
         #----<<mmaymoddt>>----
         #----<<mmaycnfid>>----
         #----<<mmaycnfid_desc>>----
         #----<<mmaycnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<mmaysite>>----
         #Ctrlp:input.c.mmaysite
         ON ACTION controlp INFIELD mmaysite
            #add-point:ON ACTION controlp INFIELD mmaysite
            {<point name="input.c.mmaysite" />}
            #END add-point
 
         #----<<mmaysite_desc>>----
         #----<<mmaydocdt>>----
         #Ctrlp:input.c.mmaydocdt
         ON ACTION controlp INFIELD mmaydocdt
            #add-point:ON ACTION controlp INFIELD mmaydocdt
            {<point name="input.c.mmaydocdt" />}
            #END add-point
 
         #----<<mmaydocno>>----
         #Ctrlp:input.c.mmaydocno
         ON ACTION controlp INFIELD mmaydocno
            #add-point:ON ACTION controlp INFIELD mmaydocno
            {<point name="input.c.mmaydocno" />}
            #END add-point
 
         #----<<mmayunit>>----
         #Ctrlp:input.c.mmayunit
         ON ACTION controlp INFIELD mmayunit
            #add-point:ON ACTION controlp INFIELD mmayunit
            {<point name="input.c.mmayunit" />}
            #END add-point
 
         #----<<mmay001>>----
         #Ctrlp:input.c.mmay001
         ON ACTION controlp INFIELD mmay001
            #add-point:ON ACTION controlp INFIELD mmay001
            {<point name="input.c.mmay001" />}
            #END add-point
 
         #----<<mmay001_desc>>----
         #----<<mmay002>>----
         #Ctrlp:input.c.mmay002
         ON ACTION controlp INFIELD mmay002
            #add-point:ON ACTION controlp INFIELD mmay002
            {<point name="input.c.mmay002" />}
            #END add-point
 
         #----<<mmay002_desc>>----
         #----<<mmay003>>----
         #Ctrlp:input.c.mmay003
         ON ACTION controlp INFIELD mmay003
            #add-point:ON ACTION controlp INFIELD mmay003
            {<point name="input.c.mmay003" />}
            #END add-point
 
         #----<<mmay003_desc>>----
         #----<<mmay000>>----
         #Ctrlp:input.c.mmay000
         ON ACTION controlp INFIELD mmay000
            #add-point:ON ACTION controlp INFIELD mmay000
            {<point name="input.c.mmay000" />}
            #END add-point
 
         #----<<mmaystus>>----
         #Ctrlp:input.c.mmaystus
         ON ACTION controlp INFIELD mmaystus
            #add-point:ON ACTION controlp INFIELD mmaystus
            {<point name="input.c.mmaystus" />}
            #END add-point
 
         #----<<mmayownid>>----
         #----<<mmayownid_desc>>----
         #----<<mmayowndp>>----
         #----<<mmayowndp_desc>>----
         #----<<mmaycrtid>>----
         #----<<mmaycrtid_desc>>----
         #----<<mmaycrtdp>>----
         #----<<mmaycrtdp_desc>>----
         #----<<mmaycrtdt>>----
         #----<<mmaymodid>>----
         #----<<mmaymodid_desc>>----
         #----<<mmaymoddt>>----
         #----<<mmaycnfid>>----
         #----<<mmaycnfid_desc>>----
         #----<<mmaycnfdt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmay_m.mmaydocno             
 
 
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                   
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmay_t (mmayent,mmaysite,mmaydocdt,mmaydocno,mmayunit,mmay001,mmay002,mmay003, 
                   mmay000,mmaystus,mmayownid,mmayowndp,mmaycrtid,mmaycrtdp,mmaycrtdt,mmaycnfid,mmaycnfdt) 

               VALUES (g_enterprise,g_mmay_m.mmaysite,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno,g_mmay_m.mmayunit, 
                   g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000,g_mmay_m.mmaystus, 
                   g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdt, 
                   g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmay_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt402_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmay_t SET (mmaysite,mmaydocdt,mmaydocno,mmayunit,mmay001,mmay002,mmay003,mmay000, 
                   mmaystus,mmayownid,mmayowndp,mmaycrtid,mmaycrtdp,mmaycrtdt,mmaycnfid,mmaycnfdt) = (g_mmay_m.mmaysite, 
                   g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002, 
                   g_mmay_m.mmay003,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp, 
                   g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt) 

                WHERE mmayent = g_enterprise AND mmaydocno = g_mmaydocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmay_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="ammt402.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmaydocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmazseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="ammt402.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt402_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmaz_d.clear()   
 
 
   INITIALIZE g_mmay_m.* LIKE mmay_t.*             #DEFAULT 設定
   
   LET g_mmaydocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmay_m.mmayownid = g_user
      LET g_mmay_m.mmayowndp = g_dept
      LET g_mmay_m.mmaycrtid = g_user
      LET g_mmay_m.mmaycrtdp = g_dept 
      LET g_mmay_m.mmaycrtdt = cl_get_current()
      LET g_mmay_m.mmaymodid = ""
      LET g_mmay_m.mmaymoddt = ""
      LET g_mmay_m.mmaystus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmay_m.mmaystus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt402_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmay_m.* = g_mmay_m_t.*
         CALL ammt402_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmaz_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmayent = '" ||g_enterprise|| "' AND",
              " mmaydocno = '", g_mmay_m.mmaydocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt402_cl
   
END FUNCTION
]]>
</section>
  <section id="ammt402.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt402_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmaz_t
                  (mmazent,
                   mmazdocno,
                   mmazseq
                   ,mmazsite,mmaz000,mmaz002,mmaz003,mmaz004,mmaz005,mmaz001,mmaz006,mmaz007,mmaz008,mmaz009,mmazunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmaz_d[g_detail_idx].mmazsite,g_mmaz_d[g_detail_idx].mmaz000,g_mmaz_d[g_detail_idx].mmaz002, 
                       g_mmaz_d[g_detail_idx].mmaz003,g_mmaz_d[g_detail_idx].mmaz004,g_mmaz_d[g_detail_idx].mmaz005, 
                       g_mmaz_d[g_detail_idx].mmaz001,g_mmaz_d[g_detail_idx].mmaz006,g_mmaz_d[g_detail_idx].mmaz007, 
                       g_mmaz_d[g_detail_idx].mmaz008,g_mmaz_d[g_detail_idx].mmaz009,g_mmaz_d[g_detail_idx].mmazunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmaz_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="ammt402.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt402_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt402_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmaz_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt402_bcl USING g_enterprise,
                                       g_mmay_m.mmaydocno,g_mmaz_d[g_detail_idx].mmazseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt402_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt402.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT mmaysite,'',mmaydocdt,mmaydocno,mmayunit,mmay001,'',mmay002,'',mmay003, 
       '',mmay000,mmaystus,mmayownid,'',mmayowndp,'',mmaycrtid,'',mmaycrtdp,'',mmaycrtdt,mmaymodid,'', 
       mmaymoddt,mmaycnfid,'',mmaycnfdt FROM mmay_t WHERE mmayent= ? AND mmaydocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE ammt402_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmaysite,mmaydocdt,mmaydocno,mmayunit,mmay001,mmay002,mmay003,mmay000, 
       mmaystus,mmayownid,mmayowndp,mmaycrtid,mmaycrtdp,mmaycrtdt,mmaymodid,mmaymoddt,mmaycnfid,mmaycnfdt", 

               " FROM mmay_t",
               " WHERE mmayent = '" ||g_enterprise|| "' AND mmaydocno = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt402_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt402 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt402_init()   
 
      #進入選單 Menu (="N")
      CALL ammt402_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt402
      
   END IF 
   
   CLOSE ammt402_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="ammt402.modify" ver="6" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt402_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE ammt402_master_referesh USING g_mmay_m.mmaydocno INTO g_mmay_m.mmaysite,g_mmay_m.mmaydocdt, 
       g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000, 
       g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt 

 
   ERROR ""
  
   LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
   CALL s_transaction_begin()
   
   OPEN ammt402_cl USING g_enterprise,g_mmay_m.mmaydocno
 
   IF STATUS THEN
      CALL cl_err("OPEN ammt402_cl:", STATUS, 1)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH ammt402_cl INTO g_mmay_m.mmaysite,g_mmay_m.mmaysite_desc,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno, 
       g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay001_desc,g_mmay_m.mmay002,g_mmay_m.mmay002_desc, 
       g_mmay_m.mmay003,g_mmay_m.mmay003_desc,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid, 
       g_mmay_m.mmayownid_desc,g_mmay_m.mmayowndp,g_mmay_m.mmayowndp_desc,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtid_desc, 
       g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdp_desc,g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymodid_desc, 
       g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfid_desc,g_mmay_m.mmaycnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmay_m.mmaydocno,SQLCA.sqlcode,0)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt402_show()
   WHILE TRUE
      LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmay_m.mmaymodid = g_user 
LET g_mmay_m.mmaymoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL ammt402_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmay_m.* = g_mmay_m_t.*
         CALL ammt402_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
     
      #若有modid跟moddt則進行update
      UPDATE mmay_t SET (mmaymodid,mmaymoddt) = (g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt)
       WHERE mmayent = g_enterprise AND mmaydocno = g_mmaydocno_t
 
 
      #若單頭key欄位有變更
      IF g_mmay_m.mmaydocno != g_mmaydocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmaz_t SET mmazdocno = g_mmay_m.mmaydocno
 
          WHERE mmazent = g_enterprise AND mmazdocno = g_mmaydocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmaz_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmaz_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_mmay_m.mmaydocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE ammt402_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmay_m.mmaydocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="ammt402.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="ammt402.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="ammt402.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt402_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmaz_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt402_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt402_browser_fill("")
      CALL ammt402_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt402_filter_show('mmaydocno')
   CALL ammt402_filter_show('mmaydocdt')
   CALL ammt402_filter_show('mmaysite')
   CALL ammt402_filter_show('mmay001')
   CALL ammt402_filter_show('mmay002')
   CALL ammt402_filter_show('mmay003')
   CALL ammt402_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammt402_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt402.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt402_reproduce()
   DEFINE l_newno     LIKE mmay_t.mmaydocno 
   DEFINE l_oldno     LIKE mmay_t.mmaydocno 
 
   DEFINE l_master    RECORD LIKE mmay_t.*
   DEFINE l_detail    RECORD LIKE mmaz_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmaydocno_t = g_mmay_m.mmaydocno
 
    
   LET g_mmay_m.mmaydocno = ""
 
    
   CALL ammt402_set_entry('a')
   CALL ammt402_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmay_m.mmayownid = g_user
      LET g_mmay_m.mmayowndp = g_dept
      LET g_mmay_m.mmaycrtid = g_user
      LET g_mmay_m.mmaycrtdp = g_dept 
      LET g_mmay_m.mmaycrtdt = cl_get_current()
      LET g_mmay_m.mmaymodid = ""
      LET g_mmay_m.mmaymoddt = ""
      LET g_mmay_m.mmaystus = "N"
 
 
  
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt402_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " mmaydocno = '", g_mmay_m.mmaydocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt402.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt402_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmaydocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt402.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt402_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="ammt402.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt402_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmaydocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt402.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt402_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="ammt402.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt402_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmay_m.mmaydocno
   LET g_pk_array[1].column = 'mmaydocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="ammt402.show" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt402_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmay_m_t.* = g_mmay_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammt402_b_fill() #單身填充
      CALL ammt402_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmay_m.mmayownid_desc = cl_get_username(g_mmay_m.mmayownid)
      #LET g_mmay_m.mmayowndp_desc = cl_get_deptname(g_mmay_m.mmayowndp)
      #LET g_mmay_m.mmaycrtid_desc = cl_get_username(g_mmay_m.mmaycrtid)
      #LET g_mmay_m.mmaycrtdp_desc = cl_get_deptname(g_mmay_m.mmaycrtdp)
      #LET g_mmay_m.mmaymodid_desc = cl_get_username(g_mmay_m.mmaymodid)
      #LET g_mmay_m.mmaycnfid_desc = cl_get_deptname(g_mmay_m.mmaycnfid)
      ##LET g_mmay_m.mmaypstid_desc = cl_get_deptname(g_mmay_m.mmaypstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt402_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmay_m.mmaysite,g_mmay_m.mmaysite_desc,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno,g_mmay_m.mmayunit, 
       g_mmay_m.mmay001,g_mmay_m.mmay001_desc,g_mmay_m.mmay002,g_mmay_m.mmay002_desc,g_mmay_m.mmay003, 
       g_mmay_m.mmay003_desc,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayownid_desc, 
       g_mmay_m.mmayowndp,g_mmay_m.mmayowndp_desc,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtid_desc,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdp_desc,g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymodid_desc,g_mmay_m.mmaymoddt, 
       g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfid_desc,g_mmay_m.mmaycnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmay_m.mmaystus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmaz_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt402_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt402.signature" ver="3" status="" src="s">
<![CDATA[   
#此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION ammt402_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE ammt402_master_referesh USING g_mmay_m.mmaydocno INTO g_mmay_m.mmaysite,g_mmay_m.mmaydocdt, 
       g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000, 
       g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt 

 
   ERROR ""
   CALL s_transaction_begin()
 
   OPEN ammt402_cl USING g_enterprise,g_mmay_m.mmaydocno
 
   IF STATUS THEN
      CALL cl_err("OPEN ammt402_cl:", STATUS, 1)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH ammt402_cl INTO g_mmay_m.mmaysite,g_mmay_m.mmaysite_desc,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno, 
       g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay001_desc,g_mmay_m.mmay002,g_mmay_m.mmay002_desc, 
       g_mmay_m.mmay003,g_mmay_m.mmay003_desc,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid, 
       g_mmay_m.mmayownid_desc,g_mmay_m.mmayowndp,g_mmay_m.mmayowndp_desc,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtid_desc, 
       g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdp_desc,g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymodid_desc, 
       g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfid_desc,g_mmay_m.mmaycnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmay_m.mmaydocno,SQLCA.sqlcode,0)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL ammt402_show()
   CALL ammt402_set_pk_array()
 
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_mmay_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_mmaz_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE ammt402_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL ammt402_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt402_ui_headershow()
   CALL ammt402_ui_detailshow()
 
   RETURN TRUE
 
END FUNCTION
 
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION ammt402_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN ammt402_cl USING g_enterprise,g_mmay_m.mmaydocno
 
   IF STATUS THEN
      CALL cl_err("OPEN ammt402_cl:", STATUS, 1)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH ammt402_cl INTO g_mmay_m.mmaysite,g_mmay_m.mmaysite_desc,g_mmay_m.mmaydocdt,g_mmay_m.mmaydocno, 
       g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay001_desc,g_mmay_m.mmay002,g_mmay_m.mmay002_desc, 
       g_mmay_m.mmay003,g_mmay_m.mmay003_desc,g_mmay_m.mmay000,g_mmay_m.mmaystus,g_mmay_m.mmayownid, 
       g_mmay_m.mmayownid_desc,g_mmay_m.mmayowndp,g_mmay_m.mmayowndp_desc,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtid_desc, 
       g_mmay_m.mmaycrtdp,g_mmay_m.mmaycrtdp_desc,g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymodid_desc, 
       g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfid_desc,g_mmay_m.mmaycnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmay_m.mmaydocno,SQLCA.sqlcode,0)
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE ammt402_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE ammt402_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt402_ui_headershow()  
   CALL ammt402_ui_detailshow()
 
   RETURN TRUE
END FUNCTION
 
 
 
]]>
</section>
  <section id="ammt402.state_change" ver="7" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt402_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmay_m.mmaydocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmay_m.mmaystus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT ammt402_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_send()已有執行update動作
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT ammt402_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmay_t SET mmaystus = lc_state 
    WHERE mmayent = g_enterprise AND mmaydocno = g_mmay_m.mmaydocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_mmay_m.mmaystus = lc_state
      DISPLAY BY NAME g_mmay_m.mmaystus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="ammt402.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt402_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmaydocno = g_mmay_m.mmaydocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="ammt402.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt402_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammt402.ui_dialog" ver="15" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt402_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt402_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt402_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmaydocno = g_mmaydocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt402_fetch('') # reload data
               LET l_ac = 1
               CALL ammt402_ui_detailshow() #Setting the current row 
      
               CALL ammt402_idx_chk()
               #NEXT FIELD mmazseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmaz_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt402_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt402_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt402_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt402_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt402_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmazseq
            END IF
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt402_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt402_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt402_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammt402_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt402_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt402_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt402_idx_chk()
            
         ON ACTION previous
            CALL ammt402_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt402_idx_chk()
            
         ON ACTION jump
            CALL ammt402_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt402_idx_chk()
            
         ON ACTION next
            CALL ammt402_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt402_idx_chk()
            
         ON ACTION last
            CALL ammt402_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt402_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt402_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt402_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt402_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt402_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL ammt402_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt402_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt402_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt402_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt402_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmay_m.mmaydocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="ammt402.ui_headershow" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt402_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmay_m.mmaydocno = g_browser[g_current_idx].b_mmaydocno   
 
   EXECUTE ammt402_master_referesh USING g_mmay_m.mmaydocno INTO g_mmay_m.mmaysite,g_mmay_m.mmaydocdt, 
       g_mmay_m.mmaydocno,g_mmay_m.mmayunit,g_mmay_m.mmay001,g_mmay_m.mmay002,g_mmay_m.mmay003,g_mmay_m.mmay000, 
       g_mmay_m.mmaystus,g_mmay_m.mmayownid,g_mmay_m.mmayowndp,g_mmay_m.mmaycrtid,g_mmay_m.mmaycrtdp, 
       g_mmay_m.mmaycrtdt,g_mmay_m.mmaymodid,g_mmay_m.mmaymoddt,g_mmay_m.mmaycnfid,g_mmay_m.mmaycnfdt 

   CALL ammt402_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt402.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt402_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt402_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt402.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt402_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmaz_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmaz_t 
         SET (mmazdocno,
              mmazseq
              ,mmazsite,mmaz000,mmaz002,mmaz003,mmaz004,mmaz005,mmaz001,mmaz006,mmaz007,mmaz008,mmaz009,mmazunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmaz_d[g_detail_idx].mmazsite,g_mmaz_d[g_detail_idx].mmaz000,g_mmaz_d[g_detail_idx].mmaz002, 
                  g_mmaz_d[g_detail_idx].mmaz003,g_mmaz_d[g_detail_idx].mmaz004,g_mmaz_d[g_detail_idx].mmaz005, 
                  g_mmaz_d[g_detail_idx].mmaz001,g_mmaz_d[g_detail_idx].mmaz006,g_mmaz_d[g_detail_idx].mmaz007, 
                  g_mmaz_d[g_detail_idx].mmaz008,g_mmaz_d[g_detail_idx].mmaz009,g_mmaz_d[g_detail_idx].mmazunit)  

         WHERE mmazent = g_enterprise AND mmazdocno = ps_keys_bak[1] AND mmazseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmaz_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmaz_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>