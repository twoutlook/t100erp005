<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammq300" std_prog="ammq300" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.page1.mmaq001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq001  #顯示到畫面上

            NEXT FIELD mmaq001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq003  #顯示到畫面上

            NEXT FIELD mmaq003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq020" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq020  #顯示到畫面上

            NEXT FIELD mmaq020                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq022" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq022  #顯示到畫面上

            NEXT FIELD mmaq022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq024" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq024  #顯示到畫面上

            NEXT FIELD mmaq024                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq026" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq026  #顯示到畫面上

            NEXT FIELD mmaq026                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq028" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq028  #顯示到畫面上

            NEXT FIELD mmaq028                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq030" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq030  #顯示到畫面上

            NEXT FIELD mmaq030                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaq039" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq039  #顯示到畫面上

            NEXT FIELD mmaq039                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1.mmaq001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmaq_d[g_detail_idx].mmaq001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaq_d[g_detail_idx].mmaq001 != g_mmaq_d_t.mmaq001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaq_t WHERE "||"mmaqent = '" ||g_enterprise|| "' AND "||"mmaq001 = '"||g_mmaq_d[g_detail_idx].mmaq001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="function.ammq300_construct_add" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#construct add 2
PRIVATE FUNCTION ammq300_construct_add()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define

   #end add-point    
 
   #清除畫面
 
 
   
   LET g_action_choice = ""
    
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
#   CLEAR FORM
   INITIALIZE g_wc4 TO NULL
   
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
   INITIALIZE g_wc2_table8 TO NULL
   CALL g_mmag6_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()
   DISPLAY ARRAY g_mmag6_d TO s_detail6.*
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY
   DISPLAY ARRAY g_mmag7_d TO s_detail7.*
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY
   DISPLAY ARRAY g_mmag8_d TO s_detail8.*
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      CONSTRUCT g_wc2_table8 ON rtja034,rtja035,rtjasite,rtjb004,rtjb012,rtjb013,rtjb021,rtjadocno,rtja032 

           FROM s_detail8[1].rtja034,s_detail8[1].rtja035,s_detail8[1].rtjasite,s_detail8[1].rtjb004,s_detail8[1].rtjb012, 
                s_detail8[1].rtjb013,s_detail8[1].rtjb021,s_detail8[1].rtjadocno,s_detail8[1].rtja032

                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct

            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page7  >---------------------
         #----<<mmau003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtajsite
            #add-point:BEFORE FIELD mmau003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtajsite
            
            #add-point:AFTER FIELD mmau003

            #END add-point
            
 
         #Ctrlp:construct.c.page7.mmau004
         ON ACTION controlp INFIELD rtjasite
            #add-point:ON ACTION controlp INFIELD rtajsite
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtjasite     #顯示到畫面上

            NEXT FIELD rtjasite                        #返回原欄位
            #END add-point
 
         ON ACTION controlp INFIELD rtjb004
            #add-point:ON ACTION controlp INFIELD rtjb004
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtjb004  #顯示到畫面上

            NEXT FIELD rtjb004                     #返回原欄位
            
         ON ACTION controlp INFIELD rtjb013
            #add-point:ON ACTION controlp INFIELD rtjb013
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtjb013  #顯示到畫面上

            NEXT FIELD rtjb013                     #返回原欄位
         ON ACTION controlp INFIELD rtjadocno
            #add-point:ON ACTION controlp INFIELD rtjadocno
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtjadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtjadocno  #顯示到畫面上

            NEXT FIELD rtjadocno                     #返回原欄位
                    
      END CONSTRUCT
      CONSTRUCT g_wc2_table6 ON mmar006,mmar007,mmar004,mmar009,mmar008,mmar005,mmar003
           FROM s_detail6[1].mmar006,s_detail6[1].mmar007,s_detail6[1].mmar004,s_detail6[1].mmar009, 
               s_detail6[1].mmar008,s_detail6[1].mmar005,s_detail6[1].mmar003
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct

            #end add-point 
            
         ON ACTION controlp INFIELD mmar007
            #add-point:ON ACTION controlp INFIELD mmar007
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmar007  #顯示到畫面上

            NEXT FIELD mmar007                     #返回原欄位
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page6  >---------------------
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON mmau006,mmau018,mmau004,mmau007,mmau009,mmau011,mmau012,mmau013,mmau015,mmau005,mmau010,mmau003 

           FROM s_detail7[1].mmau006,s_detail7[1].mmau018,s_detail7[1].mmau004,s_detail7[1].mmau007,s_detail7[1].mmau009,s_detail7[1].mmau011, 
               s_detail7[1].mmau012,s_detail7[1].mmau013,s_detail7[1].mmau015,s_detail7[1].mmau005,s_detail7[1].mmau010,s_detail7[1].mmau003 

                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct

            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page7  >---------------------
         #----<<mmau003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmau003
            #add-point:BEFORE FIELD mmau003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmau003
            
            #add-point:AFTER FIELD mmau003

            #END add-point
            
 
         #Ctrlp:construct.c.page7.mmau003
         ON ACTION controlp INFIELD mmau003
            #add-point:ON ACTION controlp INFIELD mmau003

            #END add-point
 
         #----<<mmau004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmau004
            #add-point:BEFORE FIELD mmau004

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmau004
            
            #add-point:AFTER FIELD mmau004

            #END add-point
            
 
         #Ctrlp:construct.c.page7.mmau004
         ON ACTION controlp INFIELD mmau004
            #add-point:ON ACTION controlp INFIELD mmau004

            #END add-point
 
         ON ACTION controlp INFIELD mmau018
            #add-point:ON ACTION controlp INFIELD mmau018
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmau018  #顯示到畫面上

            NEXT FIELD mmau018                     #返回原欄位
       
      END CONSTRUCT

      
      #end add-point
 
      BEFORE DIALOG
         #add-point:cs段b_dialog

         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         LET g_flag2=1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc
 
   
   #add-point:cs段結束前
   if cl_null(g_wc4) then
      let g_wc4 = " 1=1"
   end if
   if cl_null(g_wc5) then
      let g_wc5 = " 1=1"
   end if
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc4 = g_wc4 ," AND ", g_wc2_table6
   END IF
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc5 = g_wc5 ," AND ", g_wc2_table7
   END IF
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammq300_b_fill3" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#fill detail
PRIVATE FUNCTION ammq300_b_fill3(pi_idx)
{<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   CALL g_mmag6_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
#   IF ammq300_fill_chk(6) THEN
   
      LET g_sql = " SELECT  mmar006,mmar007,mmar004,mmar009,mmar008,mmar005,mmar003", 
                  " FROM mmar_t ",   
                  " INNER JOIN mmaq_t ON mmar001 = mmaq001 AND mmarent=mmaqent ",
                  " WHERE mmarent=? AND mmar001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table6) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table6 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmar_t.mmar006 DESC"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb62 FROM g_sql
      DECLARE b_fill_cs62 CURSOR FOR ammq300_pb62
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs62 USING g_enterprise,g_mmag5_d[pi_idx].mmaq001
 
                                               
      FOREACH b_fill_cs62 INTO g_mmag6_d[l_ac].mmar006,g_mmag6_d[l_ac].mmar007,g_mmag6_d[l_ac].mmar004,g_mmag6_d[l_ac].mmar009, 
               g_mmag6_d[l_ac].mmar008,g_mmag6_d[l_ac].mmar005,g_mmag6_d[l_ac].mmar003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag6_d[l_ac].mmar007
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag6_d[l_ac].mmar007_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag6_d[l_ac].mmar007_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec  THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      
   
#   END IF
#   IF ammq300_fill_chk(7) THEN
   
      LET g_sql = " SELECT  mmau006,mmau018,mmau004,mmau007,mmau009,mmau011,mmau012,mmau013,mmau015,mmau005,mmau010,mmau003", 
                  " FROM mmau_t ",   
                  " INNER JOIN mmaq_t ON mmau001 = mmaq001 AND mmauent=mmaqent ",
                  " WHERE mmauent=? AND mmau001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table7) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table7 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmau_t.mmau006 desc"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb72 FROM g_sql
      DECLARE b_fill_cs72 CURSOR FOR ammq300_pb72
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs72 USING g_enterprise,g_mmag5_d[pi_idx].mmaq001
 
                                               
      FOREACH b_fill_cs72 INTO g_mmag7_d[l_ac].mmau006,g_mmag7_d[l_ac].mmau018,g_mmag7_d[l_ac].mmau004,g_mmag7_d[l_ac].mmau007,g_mmag7_d[l_ac].mmau009,g_mmag7_d[l_ac].mmau011, 
               g_mmag7_d[l_ac].mmau012,g_mmag7_d[l_ac].mmau013,g_mmag7_d[l_ac].mmau015,g_mmag7_d[l_ac].mmau005,g_mmag7_d[l_ac].mmau010,g_mmag7_d[l_ac].mmau003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag7_d[l_ac].mmau018
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag7_d[l_ac].mmau018_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag7_d[l_ac].mmau018_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
    
   
#   END IF
    LET g_sql = " SELECT  rtja034,rtja035,rtjasite,rtjb004,rtjb012,rtjb013,rtjb021,rtjadocno,rtja032 ", 
                  " FROM rtja_t left join rtjb_t ON rtjbent=rtjaent AND rtjadocno=rtjbdocno ",
                  " WHERE rtjaent=? AND rtja001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table8) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table8 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtja_t.rtja034 desc,rtja_t.rtja035 desc"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb82 FROM g_sql
      DECLARE b_fill_cs82 CURSOR FOR ammq300_pb82
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs82 USING g_enterprise,g_mmag5_d[pi_idx].mmaq001
 
                                               
      FOREACH b_fill_cs82 INTO g_mmag8_d[l_ac].rtja034,g_mmag8_d[l_ac].rtja035,g_mmag8_d[l_ac].rtjasite,g_mmag8_d[l_ac].rtjb004,g_mmag8_d[l_ac].rtjb012, 
               g_mmag8_d[l_ac].rtjb013,g_mmag8_d[l_ac].rtjb021,g_mmag8_d[l_ac].rtjadocno,g_mmag8_d[l_ac].rtja032
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjasite
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjasite_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjasite_desc
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb004
         CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjb004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjb004_desc
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb013
         CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjb013_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjb013_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH 
   CALL g_mmag6_d.deleteElement(g_mmag6_d.getLength())
   CALL g_mmag7_d.deleteElement(g_mmag7_d.getLength())
   CALL g_mmag8_d.deleteElement(g_mmag8_d.getLength())
   FREE ammq300_pb62
   FREE ammq300_pb72
   FREE ammq300_pb82
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammq300_detail_show()
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.body2.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.body3.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.body4.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_mmag6_d.clear()
   CALL g_mmag5_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()
   LET g_ac = l_ac]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="b_fill3.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="b_fill4.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmaf001 ",
 
                        " FROM mmaf_t ",
                              " ",
                              " LEFT JOIN mmag_t ON mmagent = mmafent AND mmaf001 = mmag001 ",
                              " LEFT JOIN mmah_t ON mmahent = mmafent AND mmaf001 = mmah001", 
 
                              " LEFT JOIN mmai_t ON mmaient = mmafent AND mmaf001 = mmai001", 
 
                              " LEFT JOIN mmaj_t ON mmajent = mmafent AND mmaf001 = mmaj001", 
 
 
 
                              " ", 
                              " ", 
                       " WHERE mmafent = '" ||g_enterprise|| "'  AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmaf001 ",
 
                        " FROM mmaf_t ", 
                              " ",
                              " ",
                        "WHERE mmafent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   IF g_wc3 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmaf001 ",
 
                        " FROM mmaf_t ",
                              " ",
                              " LEFT JOIN mmag_t ON mmagent = mmafent AND mmaf001 = mmag001 ",
                              " LEFT JOIN mmah_t ON mmahent = mmafent AND mmaf001 = mmah001", 
                              " LEFT JOIN mmai_t ON mmaient = mmafent AND mmaf001 = mmai001", 
                              " LEFT JOIN mmaj_t ON mmajent = mmafent AND mmaf001 = mmaj001",
                              " LEFT JOIN mmaq_t ON mmaqent = mmafent AND mmaf001 = mmaq003",                              
   
                       " WHERE mmafent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2," AND ",g_wc3
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_wc3 <> " 1=1" AND NOT cl_null(g_wc3) THEN 
      #依照mmaf001 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT mmafstus,mmaf001,DENSE_RANK() OVER(ORDER BY mmaf001 ",g_order, 
          ") AS RANK ",
                        " FROM mmaf_t ",
                              " ",
                              " LEFT JOIN mmag_t ON mmagent = mmafent AND mmaf001 = mmag001 ",
                              " LEFT JOIN mmah_t ON mmahent = mmafent AND mmaf001 = mmah001", 
                              " LEFT JOIN mmai_t ON mmaient = mmafent AND mmaf001 = mmai001", 
                              " LEFT JOIN mmaj_t ON mmajent = mmafent AND mmaf001 = mmaj001",
                              " LEFT JOIN mmaq_t ON mmaqent = mmafent AND mmaf001 = mmaq003",
                       " ",
                       " WHERE mmafent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2," AND ",g_wc3
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT mmafstus,mmaf001 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL g_mmag5_d.clear()
   CALL g_mmag6_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #   IF ammq300_fill_chk(5) THEN
   
      LET g_sql = "SELECT  mmaq001,mmaq002,mmaq005,mmaq006,mmaq007,mmaq009,mmaq008,mmaq013,mmaq014,", 
          "mmaq015,mmaq016,mmaq017,mmaq018,mmaq019,mmaq020,mmaq021,mmaq022,mmaq023,mmaq024,mmaq025,mmaq026,", 
          "mmaq027,mmaq028,mmaq029,mmaq030,mmaq031,mmaq040,mmaq041,mmaq042 FROM mmaq_t",   
                  " INNER JOIN mmaf_t ON mmaf001 = mmaq003 AND mmafent=mmaqent",
 
                  #"",
                  
                  "",
                  " WHERE mmaqent=? AND mmaq003=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table5) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table5 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmaq_t.mmaq003,mmaq_t.mmaq001"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb5 FROM g_sql
      DECLARE b_fill_cs5 CURSOR FOR ammq300_pb5
      
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_mmaf_m.mmaf001
 
                                               
      FOREACH b_fill_cs5 INTO g_mmag5_d[l_ac].mmaq001,g_mmag5_d[l_ac].mmaq002,g_mmag5_d[l_ac].mmaq005,g_mmag5_d[l_ac].mmaq006, 
               g_mmag5_d[l_ac].mmaq007,g_mmag5_d[l_ac].mmaq009,g_mmag5_d[l_ac].mmaq008,g_mmag5_d[l_ac].mmaq013,g_mmag5_d[l_ac].mmaq014, 
               g_mmag5_d[l_ac].mmaq015,g_mmag5_d[l_ac].mmaq016,g_mmag5_d[l_ac].mmaq017,g_mmag5_d[l_ac].mmaq018,g_mmag5_d[l_ac].mmaq019, 
               g_mmag5_d[l_ac].mmaq020,g_mmag5_d[l_ac].mmaq021,g_mmag5_d[l_ac].mmaq022,g_mmag5_d[l_ac].mmaq023,g_mmag5_d[l_ac].mmaq024, 
               g_mmag5_d[l_ac].mmaq025,g_mmag5_d[l_ac].mmaq026,g_mmag5_d[l_ac].mmaq027,g_mmag5_d[l_ac].mmaq028,g_mmag5_d[l_ac].mmaq029, 
               g_mmag5_d[l_ac].mmaq030,g_mmag5_d[l_ac].mmaq031,g_mmag5_d[l_ac].mmaq040,g_mmag5_d[l_ac].mmaq041,g_mmag5_d[l_ac].mmaq042 
#               ,g_mmag5_d[l_ac].mmaq043,g_mmag5_d[l_ac].mmaq044
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH

      CALL g_mmag5_d.deleteElement(g_mmag5_d.getLength())
#   END IF
   
#   IF ammq300_fill_chk(6) THEN
   
      LET g_sql = " SELECT  mmar006,mmar007,mmar004,mmar009,mmar008,mmar005,mmar003", 
                  " FROM mmar_t ",   
                  " INNER JOIN mmaq_t ON mmar001 = mmaq001 AND mmarent=mmaqent ",
                  " WHERE mmarent=? AND mmar001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table6) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table6 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmar_t.mmar006 desc"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb6 FROM g_sql
      DECLARE b_fill_cs6 CURSOR FOR ammq300_pb6
      
      LET l_ac = 1
      if g_type=1 then
         OPEN b_fill_cs6 USING g_enterprise,g_mmag5_d[g_ac].mmaq001
      else
         OPEN b_fill_cs6 USING g_enterprise,g_mmag5_d[1].mmaq001      
      end if   
      
                                               
      FOREACH b_fill_cs6 INTO g_mmag6_d[l_ac].mmar006,g_mmag6_d[l_ac].mmar007,g_mmag6_d[l_ac].mmar004,g_mmag6_d[l_ac].mmar009, 
               g_mmag6_d[l_ac].mmar008,g_mmag6_d[l_ac].mmar005,g_mmag6_d[l_ac].mmar003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec  THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH

   
#   END IF
#   IF ammq300_fill_chk(7) THEN
   
      LET g_sql = " SELECT  mmau006,mmau018,mmau004,mmau007,mmau009,mmau011,mmau012,mmau013,mmau015,mmau005,mmau010,mmau003", 
                  " FROM mmau_t ",   
                  " INNER JOIN mmaq_t ON mmau001 = mmaq001 AND mmauent=mmaqent ",
                  " WHERE mmauent=? AND mmau001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table7) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table7 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmau_t.mmau006 desc"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb7 FROM g_sql
      DECLARE b_fill_cs7 CURSOR FOR ammq300_pb7
      
      LET l_ac = 1
      if g_type=1 then
         OPEN b_fill_cs7 USING g_enterprise,g_mmag5_d[g_ac].mmaq001
      else
         OPEN b_fill_cs7 USING g_enterprise,g_mmag5_d[1].mmaq001      
      end if
      
 
                                               
      FOREACH b_fill_cs7 INTO g_mmag7_d[l_ac].mmau006,g_mmag7_d[l_ac].mmau018,g_mmag7_d[l_ac].mmau004,g_mmag7_d[l_ac].mmau007,g_mmag7_d[l_ac].mmau009,g_mmag7_d[l_ac].mmau011, 
               g_mmag7_d[l_ac].mmau012,g_mmag7_d[l_ac].mmau013,g_mmag7_d[l_ac].mmau015,g_mmag7_d[l_ac].mmau005,g_mmag7_d[l_ac].mmau010,g_mmag7_d[l_ac].mmau003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH

   
#   END IF
#   IF ammq300_fill_chk(8) THEN
      LET g_sql = " SELECT  rtja034,rtja035,rtjasite,rtjb004,rtjb012,rtjb013,rtjb021,rtjadocno,rtja032 ", 
                  " FROM rtja_t left join rtjb_t ON rtjbent=rtjaent AND rtjadocno=rtjbdocno ",
                  " WHERE rtjaent=? AND rtja001=?"
      #add-point:b_fill段sql_before

      #end add-point
      IF NOT cl_null(g_wc2_table8) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table8 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtja_t.rtja034 desc,rtja_t.rtja035 desc"
      
      #add-point:單身填充控制

      #end add-point
      
      PREPARE ammq300_pb8 FROM g_sql
      DECLARE b_fill_cs8 CURSOR FOR ammq300_pb8
      
      LET l_ac = 1
      if g_type=1 then
         OPEN b_fill_cs8 USING g_enterprise,g_mmag5_d[g_ac].mmaq001
      else
         OPEN b_fill_cs8 USING g_enterprise,g_mmag5_d[1].mmaq001      
      end if
      
 
                                               
      FOREACH b_fill_cs8 INTO g_mmag8_d[l_ac].rtja034,g_mmag8_d[l_ac].rtja035,g_mmag8_d[l_ac].rtjasite,g_mmag8_d[l_ac].rtjb004,g_mmag8_d[l_ac].rtjb012, 
               g_mmag8_d[l_ac].rtjb013,g_mmag8_d[l_ac].rtjb021,g_mmag8_d[l_ac].rtjadocno,g_mmag8_d[l_ac].rtja032
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjasite
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjasite_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjasite_desc
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb004
         CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjb004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjb004_desc
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb013
         CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmag8_d[l_ac].rtjb013_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmag8_d[l_ac].rtjb013_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
#   end if
   
   CALL g_mmag6_d.deleteElement(g_mmag6_d.getLength())
   CALL g_mmag7_d.deleteElement(g_mmag7_d.getLength())
   CALL g_mmag8_d.deleteElement(g_mmag8_d.getLength())
   FREE ammq300_pb5
   FREE ammq300_pb6
   FREE ammq300_pb7
   FREE ammq300_pb8
#   let g_ac=1]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="construct.a.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf001  #顯示到畫面上

            NEXT FIELD mmaf001                     #返回原欄位]]>
  </point>
  <point name="construct.c.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf004  #顯示到畫面上

            NEXT FIELD mmaf004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.arg1="('2','3')"
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf016  #顯示到畫面上

            NEXT FIELD mmaf016                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf017  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oofa011 #全名 

            NEXT FIELD mmaf017                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf018  #顯示到畫面上

            NEXT FIELD mmaf018                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaf019  #顯示到畫面上

            NEXT FIELD mmaf019                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2049'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmag002  #顯示到畫面上
            NEXT FIELD mmag002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			let l_mmag003 = null
			let l_mmag002=GET_FLDBUF(mmag002)
			select oocq004 into l_mmag003 from oocq_t where oocq001='2049' and oocq002=l_mmag002
            if not cl_null(l_mmag003) then
               LET g_qryparam.where = "oocq001='",l_mmag003,"'"
            end if
            CALL q_oocq002_16()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmag004  #顯示到畫面上

            NEXT FIELD mmag004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2050'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmah002  #顯示到畫面上

            NEXT FIELD mmah002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2051'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmai002  #顯示到畫面上

            NEXT FIELD mmai002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2057'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaj002  #顯示到畫面上

            NEXT FIELD mmaj002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq001  #顯示到畫面上

            NEXT FIELD mmaq001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq002  #顯示到畫面上

            NEXT FIELD mmaq002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq020" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq020  #顯示到畫面上

            NEXT FIELD mmaq020                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq022" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq022  #顯示到畫面上

            NEXT FIELD mmaq022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq024" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq024  #顯示到畫面上

            NEXT FIELD mmaq024                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq026" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq026  #顯示到畫面上

            NEXT FIELD mmaq026                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq028" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq028  #顯示到畫面上

            NEXT FIELD mmaq028                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page5.mmaq030" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq030  #顯示到畫面上

            NEXT FIELD mmaq030                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page6.mmar007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmar007  #顯示到畫面上

            NEXT FIELD mmar007                     #返回原欄位

]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        CONSTRUCT g_wc2_table5 ON mmaq001,mmaq002,mmaq005,mmaq006,mmaq007,mmaq009,mmaq008,mmaq013,mmaq014, 
          mmaq015,mmaq016,mmaq017,mmaq018,mmaq019,mmaq020,mmaq021,mmaq022,mmaq023,mmaq024,mmaq025,mmaq026, 
          mmaq027,mmaq028,mmaq029,mmaq030,mmaq031,mmaq040,mmaq041,mmaq042
           FROM s_detail5[1].mmaq001,s_detail5[1].mmaq002,s_detail5[1].mmaq005,s_detail5[1].mmaq006, 
               s_detail5[1].mmaq007,s_detail5[1].mmaq009,s_detail5[1].mmaq008,s_detail5[1].mmaq013,s_detail5[1].mmaq014, 
               s_detail5[1].mmaq015,s_detail5[1].mmaq016,s_detail5[1].mmaq017,s_detail5[1].mmaq018,s_detail5[1].mmaq019, 
               s_detail5[1].mmaq020,s_detail5[1].mmaq021,s_detail5[1].mmaq022,s_detail5[1].mmaq023,s_detail5[1].mmaq024, 
               s_detail5[1].mmaq025,s_detail5[1].mmaq026,s_detail5[1].mmaq027,s_detail5[1].mmaq028,s_detail5[1].mmaq029, 
               s_detail5[1].mmaq030,s_detail5[1].mmaq031,s_detail5[1].mmaq040,s_detail5[1].mmaq041,s_detail5[1].mmaq042 
               
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct

            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page5  >---------------------
         #----<<mmaq040>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmaq040
            #add-point:BEFORE FIELD mmaq040

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaq040
            
            #add-point:AFTER FIELD mmaq040

            #END add-point
            
 
         #Ctrlp:construct.c.page5.mmaq040
         ON ACTION controlp INFIELD mmaq040
            #add-point:ON ACTION controlp INFIELD mmaq040

            #END add-point
         ON ACTION controlp INFIELD mmaq001
            #add-point:ON ACTION controlp INFIELD mmaq040
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq001  #顯示到畫面上

            NEXT FIELD mmaq001                     #返回原欄位
            #END add-point
         ON ACTION controlp INFIELD mmaq002
            #add-point:ON ACTION controlp INFIELD mmaq040
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq002  #顯示到畫面上

            NEXT FIELD mmaq002                     #返回原欄位
            #END add-point
         ON ACTION controlp INFIELD mmaq020
            #add-point:ON ACTION controlp INFIELD mmaq020
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq020  #顯示到畫面上

            NEXT FIELD mmaq020                     #返回原欄位
         ON ACTION controlp INFIELD mmaq022
            #add-point:ON ACTION controlp INFIELD mmaq022
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq022  #顯示到畫面上

            NEXT FIELD mmaq022                     #返回原欄位 
         ON ACTION controlp INFIELD mmaq024
            #add-point:ON ACTION controlp INFIELD mmaq024
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq024  #顯示到畫面上

            NEXT FIELD mmaq024                    #返回原欄位 
         ON ACTION controlp INFIELD mmaq026
            #add-point:ON ACTION controlp INFIELD mmaq026
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq026  #顯示到畫面上

            NEXT FIELD mmaq026                     #返回原欄位  
         ON ACTION controlp INFIELD mmaq028
            #add-point:ON ACTION controlp INFIELD mmaq028
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq028  #顯示到畫面上

            NEXT FIELD mmaq028                     #返回原欄位             
 
         ON ACTION controlp INFIELD mmaq030
            #add-point:ON ACTION controlp INFIELD mmaq030
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaq030  #顯示到畫面上

            NEXT FIELD mmaq030                     #返回原欄位
       
      END CONSTRUCT
      ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            if cl_null(g_wc3) then
      LET g_wc3 = " 1=1"
   end if
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc3 = g_wc3 ," AND ", g_wc2_table5
   END IF
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc4 = g_wc4 ," AND ", g_wc2_table6
   END IF
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc5 = g_wc5 ," AND ", g_wc2_table7
   END IF]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_wc3 TO NULL
   
   INITIALIZE g_wc2_table5 TO NULL
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
   INITIALIZE g_wc2_table8 TO NULL
   CALL g_mmag5_d.clear()
   CALL g_mmag6_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()
   let l_mmag002=null
   let g_type=0]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.body3.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.body4.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            define l_mmag002   like mmag_t.mmag002
   define l_mmag003   like mmag_t.mmag003]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET g_wc = ' 1=1'
   END IF 
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET l_str = g_argv[1]
      LET l_cnt=1
      LET l_cnt1=0
      WHILE l_cnt <= l_str.getLength()
         LET l_cnt1 = l_str.getIndexOf(',',l_cnt)-1
                   
         IF l_cnt1<=0 THEN
            LET l_str2 = l_str.substring(l_cnt,l_str.getLength())
         ELSE
            LET l_str2= l_str.substring(l_cnt,l_cnt1)
         END IF
         IF l_cnt<=1 THEN 
            LET l_str1="'",l_str2,"'"
         ELSE         
            LET l_str1=l_str1,",'",l_str2,"'"
         END IF   
         IF l_cnt1<=0 THEN
            LET l_cnt1=l_str.getLength()
         END IF
         LET l_cnt=l_cnt1+2
         LET l_cnt1=0
      END WHILE
      LET g_wc = g_wc," AND mmaf001 IN (",l_str1,")"
   END IF
   RETURN]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_sql   STRING      ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.a_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.a_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.b_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.b_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.m_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.m_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.a_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.a_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.b_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.b_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.m_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.m_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table2.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table3.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table3.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table3.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table4.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table4.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table4.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            let g_wc2_table6=" 1=1"
   let g_wc2_table7=" 1=1"
   let g_wc2_table8=" 1=1"]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段define

      #end add-point
      RETURN TRUE
   END IF
#   #第5單身
#   IF ps_idx = 5 AND
#      ((NOT cl_null(g_wc2_table5) AND g_wc2_table5.trim() <> '1=1')) THEN
#      RETURN TRUE
#   END IF
#   #第6單身
#   IF ps_idx = 6 AND
#      ((NOT cl_null(g_wc2_table6) AND g_wc2_table6.trim() <> '1=1')) THEN
#      RETURN TRUE
#   END IF
#   #第7單身
#   IF ps_idx = 7 AND
#      ((NOT cl_null(g_wc2_table7) AND g_wc2_table7.trim() <> '1=1')) THEN
#      RETURN TRUE
#   END IF
#   IF ps_idx = 8 AND
#      ((NOT cl_null(g_wc2_table8) AND g_wc2_table8.trim() <> '1=1')) THEN
#      RETURN TRUE
#   END IF]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ TYPE type_g_mmag5_d RECORD
       mmaq001 LIKE mmaq_t.mmaq001, 
   mmaq002 LIKE mmaq_t.mmaq002,
   mmaq002_desc LIKE type_t.chr80,   
   mmaq005 LIKE mmaq_t.mmaq005, 
   mmaq006 LIKE mmaq_t.mmaq006, 
   mmaq007 LIKE mmaq_t.mmaq007, 
   mmaq009 LIKE mmaq_t.mmaq009, 
   mmaq008 LIKE mmaq_t.mmaq008, 
   mmaq013 LIKE mmaq_t.mmaq013, 
   mmaq014 LIKE mmaq_t.mmaq014, 
   mmaq015 LIKE mmaq_t.mmaq015, 
   mmaq016 LIKE mmaq_t.mmaq016, 
   mmaq017 LIKE mmaq_t.mmaq017, 
   mmaq018 LIKE mmaq_t.mmaq018, 
   mmaq019 LIKE mmaq_t.mmaq019, 
   mmaq020 LIKE mmaq_t.mmaq020, 
   mmaq020_desc LIKE type_t.chr500, 
   mmaq021 LIKE mmaq_t.mmaq021, 
   mmaq022 LIKE mmaq_t.mmaq022, 
   mmaq022_desc LIKE type_t.chr500, 
   mmaq023 LIKE mmaq_t.mmaq023, 
   mmaq024 LIKE mmaq_t.mmaq024, 
   mmaq024_desc LIKE type_t.chr500, 
   mmaq025 LIKE mmaq_t.mmaq025, 
   mmaq026 LIKE mmaq_t.mmaq026, 
   mmaq026_desc LIKE type_t.chr500, 
   mmaq027 LIKE mmaq_t.mmaq027, 
   mmaq028 LIKE mmaq_t.mmaq028, 
   mmaq028_desc LIKE type_t.chr500, 
   mmaq029 LIKE mmaq_t.mmaq029, 
   mmaq030 LIKE mmaq_t.mmaq030, 
   mmaq030_desc LIKE type_t.chr500, 
   mmaq031 LIKE mmaq_t.mmaq031, 
   mmaq040 LIKE mmaq_t.mmaq040, 
   mmaq041 LIKE mmaq_t.mmaq041, 
   mmaq042 LIKE mmaq_t.mmaq042
       END RECORD
 
 TYPE type_g_mmag6_d RECORD
      mmar006 DATETIME YEAR TO SECOND,
      mmar007 LIKE mmar_t.mmar007, 
      mmar007_desc LIKE type_t.chr500,          
      mmar004 LIKE mmar_t.mmar004,   
      mmar009 LIKE mmar_t.mmar009, 
      mmar008 LIKE mmar_t.mmar008, 
      mmar005 LIKE mmar_t.mmar005,    
      mmar003 LIKE mmar_t.mmar003
       END RECORD
 
 TYPE type_g_mmag7_d RECORD
      mmau006 DATETIME YEAR TO SECOND,
      mmau018 LIKE mmau_t.mmau018, 
      mmau018_desc LIKE type_t.chr500,
      mmau004 LIKE mmau_t.mmau004,
      mmau007 LIKE mmau_t.mmau007,
      mmau009 like mmau_t.mmau009,
      mmau011 LIKE mmau_t.mmau011,      
      mmau012 LIKE mmau_t.mmau012, 
      mmau013 LIKE mmau_t.mmau013,
      mmau015 LIKE mmau_t.mmau015,      
      mmau005 LIKE mmau_t.mmau005, 
      mmau010 LIKE mmau_t.mmau010, 
      mmau003 LIKE mmau_t.mmau003 
       END RECORD
DEFINE g_mmag5_d   DYNAMIC ARRAY OF type_g_mmag5_d
DEFINE g_mmag5_d_t type_g_mmag5_d
 
DEFINE g_mmag6_d   DYNAMIC ARRAY OF type_g_mmag6_d
DEFINE g_mmag6_d_t type_g_mmag6_d
 
DEFINE g_mmag7_d   DYNAMIC ARRAY OF type_g_mmag7_d
DEFINE g_mmag7_d_t type_g_mmag7_d
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
DEFINE g_wc2_table8   STRING
DEFINE g_wc3   STRING
DEFINE g_wc4   STRING
DEFINE g_wc5   STRING
DEFINE g_type         LIKE type_t.num5
DEFINE g_ac    LIKE type_t.num5
TYPE type_g_mmag8_d RECORD       
   rtja034 LIKE rtja_t.rtja034, 
   rtja035 LIKE rtja_t.rtja035,
   rtjasite LIKE rtja_t.rtjasite,
   rtjasite_desc LIKE type_t.chr80,
   rtjb004  like rtjb_t.rtjb004,
   rtjb004_desc LIKE type_t.chr80,   
   rtjb012 LIKE rtjb_t.rtjb012, 
   rtjb013 LIKE rtjb_t.rtjb013,
   rtjb013_desc LIKE type_t.chr80,   
   rtjb021 LIKE rtjb_t.rtjb021, 
   rtjadocno LIKE rtja_t.rtjadocno, 
   rtja032 LIKE rtja_t.rtja032
       END RECORD
DEFINE g_mmag8_d   DYNAMIC ARRAY OF type_g_mmag8_d
DEFINE g_mmag8_d_t type_g_mmag8_d 
DEFINE l_str       STRING
DEFINE l_str1      STRING
DEFINE l_str2      STRING
DEFINE l_cnt1      LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num5
define g_flag2     like type_t.chr1]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_mmag5_d.getLength() THEN
         LET g_detail_idx = g_mmag5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_mmag6_d.getLength() THEN
         LET g_detail_idx = g_mmag6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_mmag7_d.getLength() THEN
         LET g_detail_idx = g_mmag7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx > g_mmag8_d.getLength() THEN
         LET g_detail_idx = g_mmag8_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag8_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag8_d.getLength() TO FORMONLY.cnt
   END IF]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_combo_scc('mmaq006','6515')
   CALL cl_set_combo_scc('mmar003','6512')
   CALL cl_set_combo_scc('mmar004','6513')
   CALL cl_set_combo_scc('mmau003','6512')
   CALL cl_set_combo_scc('mmau004','6514')
   CALL cl_set_combo_scc('rtja032','6544')]]>
  </point>
  <point name="input.a.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaf_m.mmaf001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaf_t WHERE "||"mmafent = '" ||g_enterprise|| "' AND "||"mmaf001 = '"||g_mmaf_m.mmaf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf016
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf016_desc
]]>
  </point>
  <point name="input.a.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf017
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002=? AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf017_desc
]]>
  </point>
  <point name="input.a.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf018_desc
]]>
  </point>
  <point name="input.a.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf019
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002=? AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf019_desc
]]>
  </point>
  <point name="input.a.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag_d[l_ac].mmag002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag_d[l_ac].mmag002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag_d[l_ac].mmag002_desc

            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag_d[g_detail_idx].mmag002 IS NOT NULL AND g_mmag_d[g_detail_idx].mmag003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag_d[g_detail_idx].mmag002 != g_mmag_d_t.mmag002 OR g_mmag_d[g_detail_idx].mmag003 != g_mmag_d_t.mmag003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmag_t WHERE "||"mmagent = '" ||g_enterprise|| "' AND "||"mmag001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmag002 = '"||g_mmag_d[g_detail_idx].mmag002 ||"' AND "|| "mmag003 = '"||g_mmag_d[g_detail_idx].mmag003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag_d[g_detail_idx].mmag002 IS NOT NULL AND g_mmag_d[g_detail_idx].mmag003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag_d[g_detail_idx].mmag002 != g_mmag_d_t.mmag002 OR g_mmag_d[g_detail_idx].mmag003 != g_mmag_d_t.mmag003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmag_t WHERE "||"mmagent = '" ||g_enterprise|| "' AND "||"mmag001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmag002 = '"||g_mmag_d[g_detail_idx].mmag002 ||"' AND "|| "mmag003 = '"||g_mmag_d[g_detail_idx].mmag003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag_d[l_ac].mmag004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2016' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag_d[l_ac].mmag004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag_d[l_ac].mmag004_desc
]]>
  </point>
  <point name="input.a.page1.mmaq003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq020" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq022" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq024" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq026" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq028" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.mmaq030" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag2_d[l_ac].mmah002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2050' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag2_d[l_ac].mmah002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag2_d[l_ac].mmah002_desc

            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag2_d[g_detail_idx].mmah002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag2_d[g_detail_idx].mmah002 != g_mmag2_d_t.mmah002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmah_t WHERE "||"mmahent = '" ||g_enterprise|| "' AND "||"mmah001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmah002 = '"||g_mmag2_d[g_detail_idx].mmah002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag3_d[l_ac].mmai002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2051' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag3_d[l_ac].mmai002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag3_d[l_ac].mmai002_desc

            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag3_d[g_detail_idx].mmai002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag3_d[g_detail_idx].mmai002 != g_mmag3_d_t.mmai002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmai_t WHERE "||"mmaient = '" ||g_enterprise|| "' AND "||"mmai001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmai002 = '"||g_mmag3_d[g_detail_idx].mmai002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag4_d[l_ac].mmaj002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2057' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag4_d[l_ac].mmaj002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag4_d[l_ac].mmaj002_desc

            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag4_d[g_detail_idx].mmaj002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag4_d[g_detail_idx].mmaj002 != g_mmag4_d_t.mmaj002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaj_t WHERE "||"mmajent = '" ||g_enterprise|| "' AND "||"mmaj001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmaj002 = '"||g_mmag4_d[g_detail_idx].mmaj002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.mmaq020" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq020
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq020_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq020_desc
]]>
  </point>
  <point name="input.a.page5.mmaq022" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq022
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq022_desc
]]>
  </point>
  <point name="input.a.page5.mmaq024" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq024
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq024_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq024_desc
]]>
  </point>
  <point name="input.a.page5.mmaq026" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq026
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq026_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq026_desc
]]>
  </point>
  <point name="input.a.page5.mmaq028" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq028
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq028_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq028_desc
]]>
  </point>
  <point name="input.a.page5.mmaq030" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq030
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq030_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq030_desc
]]>
  </point>
  <point name="input.a.page6.mmar001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag6_d[g_detail_idx].mmar001 IS NOT NULL AND g_mmag6_d[g_detail_idx].mmar005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag6_d[g_detail_idx].mmar001 != g_mmag6_d_t.mmar001 OR g_mmag6_d[g_detail_idx].mmar005 != g_mmag6_d_t.mmar005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmar_t WHERE "||"mmarent = '" ||g_enterprise|| "' AND "||"mmar001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmar005 = '"||g_mmag6_d[g_detail_idx].mmar001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.mmar005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag6_d[g_detail_idx].mmar001 IS NOT NULL AND g_mmag6_d[g_detail_idx].mmar005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag6_d[g_detail_idx].mmar001 != g_mmag6_d_t.mmar001 OR g_mmag6_d[g_detail_idx].mmar005 != g_mmag6_d_t.mmar005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmar_t WHERE "||"mmarent = '" ||g_enterprise|| "' AND "||"mmar001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmar005 = '"||g_mmag6_d[g_detail_idx].mmar001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.mmar007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag6_d[l_ac].mmar007
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag6_d[l_ac].mmar007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag6_d[l_ac].mmar007_desc
]]>
  </point>
  <point name="input.a.page7.mmau001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag7_d[g_detail_idx].mmau001 IS NOT NULL AND g_mmag7_d[g_detail_idx].mmau005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag7_d[g_detail_idx].mmau001 != g_mmag7_d_t.mmau001 OR g_mmag7_d[g_detail_idx].mmau005 != g_mmag7_d_t.mmau005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmau_t WHERE "||"mmauent = '" ||g_enterprise|| "' AND "||"mmau001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmau005 = '"||g_mmag7_d[g_detail_idx].mmau001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.mmau005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmaf_m.mmaf001 IS NOT NULL AND g_mmag7_d[g_detail_idx].mmau001 IS NOT NULL AND g_mmag7_d[g_detail_idx].mmau005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmaf_m.mmaf001 != g_mmaf001_t OR g_mmag7_d[g_detail_idx].mmau001 != g_mmag7_d_t.mmau001 OR g_mmag7_d[g_detail_idx].mmau005 != g_mmag7_d_t.mmau005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmau_t WHERE "||"mmauent = '" ||g_enterprise|| "' AND "||"mmau001 = '"||g_mmaf_m.mmaf001 ||"' AND "|| "mmau005 = '"||g_mmag7_d[g_detail_idx].mmau001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.mmau018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag7_d[l_ac].mmau018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag7_d[l_ac].mmau018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag7_d[l_ac].mmau018_desc
]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_define_sql3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_define_sql4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.b.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.body2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body2.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.body3.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body3.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body3.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.body4.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body4.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body4.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.c.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.define_sql3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.define_sql4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.g.mmaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.mmaf019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.mmag002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.mmag003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.mmag004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page2.mmah002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page2.mmah003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page2.mmah004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page2.mmah005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page2.mmah006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page3.mmai002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page4.mmaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_mmag5_d.clear()   
   CALL g_mmag6_d.clear()  
   CALL g_mmag7_d.clear()  
   CALL g_mmag8_d.clear()       ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.after_insert3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.after_insert4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.before_insert3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.before_insert4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.m_insert3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.m_insert4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   let g_flag2='0'      ]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="menu.datainfo" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.open_query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            LET g_type=1
               LET l_ac = DIALOG.getCurrentRow("s_detail5")                                             
               LET g_ac=l_ac
               IF g_mmag5_d.getLength()<>0 THEN
                  CALL ammq300_construct_add()
                  CALL ammq300_b_fill3(g_ac)
               END IF  
               CONTINUE DIALOG           ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.a_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.a_fk_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.a_fk_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.b_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.b_fk_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.b_fk_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.m_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.m_fk_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.m_fk_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL g_mmag5_d.clear()
   CALL g_mmag6_d.clear()
   CALL g_mmag7_d.clear()
   CALL g_mmag8_d.clear()]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag_d[l_ac].mmag002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag_d[l_ac].mmag002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag_d[l_ac].mmag002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[2] = g_mmag_d[l_ac].mmag004
            LET g_ref_fields[1] = g_mmag_d[l_ac].mmag003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag_d[l_ac].mmag004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag_d[l_ac].mmag004_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag2_d[l_ac].mmah002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2050' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag2_d[l_ac].mmah002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag2_d[l_ac].mmah002_desc
]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag3_d[l_ac].mmai002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2051' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag3_d[l_ac].mmai002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag3_d[l_ac].mmai002_desc
]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag4_d[l_ac].mmaj002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2057' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag4_d[l_ac].mmaj002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag4_d[l_ac].mmaj002_desc
]]>
  </point>
  <point name="show.body5.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq020
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq020_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq020_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq022
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq022_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq024
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq024_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq024_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq026
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq026_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq026_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq028
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq028_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq028_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq030
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq030_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq030_desc
]]>
  </point>
  <point name="show.body6.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag6_d[l_ac].mmar007
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag6_d[l_ac].mmar007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag6_d[l_ac].mmar007_desc
]]>
  </point>
  <point name="show.body7.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag7_d[l_ac].mmau018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag7_d[l_ac].mmau018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag7_d[l_ac].mmau018_desc
]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="show.follow_pic" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_ac=l_ac]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     if g_mmag5_d.getLength()>0 then
               CALL cl_set_act_visible("open_query",true)
            else
               CALL cl_set_act_visible("open_query",FALSE)
            end if
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf016
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf016_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = '2'
            LET g_ref_fields[2] = g_mmaf_m.mmaf017
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002=? AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf017_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaf_m.mmaf018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf018_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = '2'
            LET g_ref_fields[2] = g_mmaf_m.mmaf019
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002=? AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmaf_m.mmaf019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaf_m.mmaf019_desc
]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            FOR l_ac = 1 TO g_mmag5_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq002
            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq002_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq020
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq020_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq020_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq022
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq022_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq024
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq024_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq024_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq026
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq026_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq026_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq028
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq028_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq028_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag5_d[l_ac].mmaq030
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag5_d[l_ac].mmaq030_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag5_d[l_ac].mmaq030_desc

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmag6_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag6_d[l_ac].mmar007
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag6_d[l_ac].mmar007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag6_d[l_ac].mmar007_desc

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmag7_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag7_d[l_ac].mmau018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag7_d[l_ac].mmau018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag7_d[l_ac].mmau018_desc

      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmag8_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag8_d[l_ac].rtjasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag8_d[l_ac].rtjasite_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag8_d[l_ac].rtjb004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag8_d[l_ac].rtjb004_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmag8_d[l_ac].rtjb013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmag8_d[l_ac].rtjb013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmag8_d[l_ac].rtjb013_desc
      #end add-point
   END FOR]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.body2.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.body3.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.body3.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.body4.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.body4.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.body4.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    DISPLAY ARRAY g_mmag5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               IF cl_null(l_ac) THEN
                  LET l_ac=1
               END IF
               CALL ammq300_b_fill3(l_ac)
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
			   LET g_current_page = 5
               CALL ammq300_idx_chk()
               #add-point:page4自定義行為

               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為

            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmag8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作

               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
			   LET g_current_page = 8
               CALL ammq300_idx_chk()
               #add-point:page4自定義行為

               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為

            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmag6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作

               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
			   LET g_current_page = 6
               CALL ammq300_idx_chk()
               #add-point:page4自定義行為

               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為

            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmag7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作

               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
			   LET g_current_page = 7
               CALL ammq300_idx_chk()
               #add-point:page4自定義行為

               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為

            #end add-point
         
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.after_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.after_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.after_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.before_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.before_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.before_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.m_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.m_update3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.m_update4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <section id="ammq300.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammq300_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmag_d.clear()    #g_mmag_d 單頭及單身 
   CALL g_mmag2_d.clear()
   CALL g_mmag3_d.clear()
   CALL g_mmag4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammq300_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmag002,mmag003,mmag004 ,t1.oocql004 ,t2.oocql004 FROM mmag_t",   
                  " INNER JOIN mmaf_t ON mmaf001 = mmag001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='2049' AND t1.oocql002=mmag002 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2016' AND t2.oocql002=mmag004 AND t2.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmagent=? AND mmag001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmag_t.mmag002,mmag_t.mmag003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammq300_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammq300_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmaf_m.mmaf001
                                               
      FOREACH b_fill_cs INTO g_mmag_d[l_ac].mmag002,g_mmag_d[l_ac].mmag003,g_mmag_d[l_ac].mmag004,g_mmag_d[l_ac].mmag002_desc, 
          g_mmag_d[l_ac].mmag004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammq300_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmah002,mmah003,mmah004,mmah005,mmah006 ,t3.oocql004 FROM mmah_t", 
             
                  " INNER JOIN mmaf_t ON mmaf001 = mmah001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2050' AND t3.oocql002=mmah002 AND t3.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmahent=? AND mmah001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmah_t.mmah002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammq300_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammq300_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmaf_m.mmaf001
                                               
      FOREACH b_fill_cs2 INTO g_mmag2_d[l_ac].mmah002,g_mmag2_d[l_ac].mmah003,g_mmag2_d[l_ac].mmah004, 
          g_mmag2_d[l_ac].mmah005,g_mmag2_d[l_ac].mmah006,g_mmag2_d[l_ac].mmah002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammq300_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE mmai002 ,t4.oocql004 FROM mmai_t",   
                  " INNER JOIN mmaf_t ON mmaf001 = mmai001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='2051' AND t4.oocql002=mmai002 AND t4.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmaient=? AND mmai001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmai_t.mmai002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammq300_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR ammq300_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmaf_m.mmaf001
                                               
      FOREACH b_fill_cs3 INTO g_mmag3_d[l_ac].mmai002,g_mmag3_d[l_ac].mmai002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammq300_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE mmaj002 ,t5.oocql004 FROM mmaj_t",   
                  " INNER JOIN mmaf_t ON mmaf001 = mmaj001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2057' AND t5.oocql002=mmaj002 AND t5.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmajent=? AND mmaj001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmaj_t.mmaj002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammq300_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR ammq300_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_mmaf_m.mmaf001
                                               
      FOREACH b_fill_cs4 INTO g_mmag4_d[l_ac].mmaj002,g_mmag4_d[l_ac].mmaj002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmag_d.deleteElement(g_mmag_d.getLength())
   CALL g_mmag2_d.deleteElement(g_mmag2_d.getLength())
   CALL g_mmag3_d.deleteElement(g_mmag3_d.getLength())
   CALL g_mmag4_d.deleteElement(g_mmag4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammq300_pb
   FREE ammq300_pb2
 
   FREE ammq300_pb3
 
   FREE ammq300_pb4
 
 
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammq300_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammq300_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.browser_fill" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammq300_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmaf_m.* TO NULL
   CALL g_mmag_d.clear()        
   CALL g_mmag2_d.clear() 
   CALL g_mmag3_d.clear() 
   CALL g_mmag4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmaf001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmaf001 ",
                      " FROM mmaf_t ",
                      " ",
                      " LEFT JOIN mmag_t ON mmagent = mmafent AND mmaf001 = mmag001 ",
                      " LEFT JOIN mmah_t ON mmahent = mmafent AND mmaf001 = mmah001", 
 
                      " LEFT JOIN mmai_t ON mmaient = mmafent AND mmaf001 = mmai001", 
 
                      " LEFT JOIN mmaj_t ON mmajent = mmafent AND mmaf001 = mmaj001", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE mmafent = '" ||g_enterprise|| "' AND mmagent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmaf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmaf001 ",
                      " FROM mmaf_t ", 
                      "  ",
                      "  ",
                      " WHERE mmafent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmaf_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmaf001 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmafstus,mmaf001 ",
               " FROM mmaf_t ",
               "  ",
               "  LEFT JOIN mmag_t ON mmagent = mmafent AND mmaf001 = mmag001 ",
               "  LEFT JOIN mmah_t ON mmahent = mmafent AND mmaf001 = mmah001",
 
               "  LEFT JOIN mmai_t ON mmaient = mmafent AND mmaf001 = mmai001",
 
               "  LEFT JOIN mmaj_t ON mmajent = mmafent AND mmaf001 = mmaj001",
 
 
 
               "  ",
               "  ",
               
               " WHERE mmafent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmaf_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmaf001
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammq300_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmaf001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammq300_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.construct" ver="7" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammq300_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmaf_m.* TO NULL
   CALL g_mmag_d.clear()        
   CALL g_mmag2_d.clear() 
   CALL g_mmag3_d.clear() 
   CALL g_mmag4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmaf001,mmaf002,mmaf008,mmaf009,mmaf003,mmaf004,mmaf015,mmaf013,mmaf014, 
          mmaf016,mmaf017,mmaf010,mmaf011,mmaf012,mmaf018,mmaf019
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD mmaf001
            #add-point:BEFORE FIELD mmaf001
            {<point name="construct.b.mmaf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf001
            
            #add-point:AFTER FIELD mmaf001
            {<point name="construct.a.mmaf001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf001
         ON ACTION controlp INFIELD mmaf001
            #add-point:ON ACTION controlp INFIELD mmaf001
            {<point name="construct.c.mmaf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf002
            #add-point:BEFORE FIELD mmaf002
            {<point name="construct.b.mmaf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf002
            
            #add-point:AFTER FIELD mmaf002
            {<point name="construct.a.mmaf002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf002
         ON ACTION controlp INFIELD mmaf002
            #add-point:ON ACTION controlp INFIELD mmaf002
            {<point name="construct.c.mmaf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf008
            #add-point:BEFORE FIELD mmaf008
            {<point name="construct.b.mmaf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf008
            
            #add-point:AFTER FIELD mmaf008
            {<point name="construct.a.mmaf008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf008
         ON ACTION controlp INFIELD mmaf008
            #add-point:ON ACTION controlp INFIELD mmaf008
            {<point name="construct.c.mmaf008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf009
            #add-point:BEFORE FIELD mmaf009
            {<point name="construct.b.mmaf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf009
            
            #add-point:AFTER FIELD mmaf009
            {<point name="construct.a.mmaf009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf009
         ON ACTION controlp INFIELD mmaf009
            #add-point:ON ACTION controlp INFIELD mmaf009
            {<point name="construct.c.mmaf009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf003
            #add-point:BEFORE FIELD mmaf003
            {<point name="construct.b.mmaf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf003
            
            #add-point:AFTER FIELD mmaf003
            {<point name="construct.a.mmaf003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf003
         ON ACTION controlp INFIELD mmaf003
            #add-point:ON ACTION controlp INFIELD mmaf003
            {<point name="construct.c.mmaf003" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaf004
         ON ACTION controlp INFIELD mmaf004
            #add-point:ON ACTION controlp INFIELD mmaf004
            {<point name="construct.c.mmaf004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf004
            #add-point:BEFORE FIELD mmaf004
            {<point name="construct.b.mmaf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf004
            
            #add-point:AFTER FIELD mmaf004
            {<point name="construct.a.mmaf004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf015
            #add-point:BEFORE FIELD mmaf015
            {<point name="construct.b.mmaf015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf015
            
            #add-point:AFTER FIELD mmaf015
            {<point name="construct.a.mmaf015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf015
         ON ACTION controlp INFIELD mmaf015
            #add-point:ON ACTION controlp INFIELD mmaf015
            {<point name="construct.c.mmaf015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf013
            #add-point:BEFORE FIELD mmaf013
            {<point name="construct.b.mmaf013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf013
            
            #add-point:AFTER FIELD mmaf013
            {<point name="construct.a.mmaf013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf013
         ON ACTION controlp INFIELD mmaf013
            #add-point:ON ACTION controlp INFIELD mmaf013
            {<point name="construct.c.mmaf013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf014
            #add-point:BEFORE FIELD mmaf014
            {<point name="construct.b.mmaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf014
            
            #add-point:AFTER FIELD mmaf014
            {<point name="construct.a.mmaf014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf014
         ON ACTION controlp INFIELD mmaf014
            #add-point:ON ACTION controlp INFIELD mmaf014
            {<point name="construct.c.mmaf014" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaf016
         ON ACTION controlp INFIELD mmaf016
            #add-point:ON ACTION controlp INFIELD mmaf016
            {<point name="construct.c.mmaf016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf016
            #add-point:BEFORE FIELD mmaf016
            {<point name="construct.b.mmaf016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf016
            
            #add-point:AFTER FIELD mmaf016
            {<point name="construct.a.mmaf016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf017
         ON ACTION controlp INFIELD mmaf017
            #add-point:ON ACTION controlp INFIELD mmaf017
            {<point name="construct.c.mmaf017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf017
            #add-point:BEFORE FIELD mmaf017
            {<point name="construct.b.mmaf017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf017
            
            #add-point:AFTER FIELD mmaf017
            {<point name="construct.a.mmaf017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf010
            #add-point:BEFORE FIELD mmaf010
            {<point name="construct.b.mmaf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf010
            
            #add-point:AFTER FIELD mmaf010
            {<point name="construct.a.mmaf010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf010
         ON ACTION controlp INFIELD mmaf010
            #add-point:ON ACTION controlp INFIELD mmaf010
            {<point name="construct.c.mmaf010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf011
            #add-point:BEFORE FIELD mmaf011
            {<point name="construct.b.mmaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf011
            
            #add-point:AFTER FIELD mmaf011
            {<point name="construct.a.mmaf011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf011
         ON ACTION controlp INFIELD mmaf011
            #add-point:ON ACTION controlp INFIELD mmaf011
            {<point name="construct.c.mmaf011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf012
            #add-point:BEFORE FIELD mmaf012
            {<point name="construct.b.mmaf012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf012
            
            #add-point:AFTER FIELD mmaf012
            {<point name="construct.a.mmaf012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf012
         ON ACTION controlp INFIELD mmaf012
            #add-point:ON ACTION controlp INFIELD mmaf012
            {<point name="construct.c.mmaf012" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaf018
         ON ACTION controlp INFIELD mmaf018
            #add-point:ON ACTION controlp INFIELD mmaf018
            {<point name="construct.c.mmaf018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf018
            #add-point:BEFORE FIELD mmaf018
            {<point name="construct.b.mmaf018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf018
            
            #add-point:AFTER FIELD mmaf018
            {<point name="construct.a.mmaf018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaf019
         ON ACTION controlp INFIELD mmaf019
            #add-point:ON ACTION controlp INFIELD mmaf019
            {<point name="construct.c.mmaf019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf019
            #add-point:BEFORE FIELD mmaf019
            {<point name="construct.b.mmaf019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf019
            
            #add-point:AFTER FIELD mmaf019
            {<point name="construct.a.mmaf019" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmag002,mmag003,mmag004
           FROM s_detail1[1].mmag002,s_detail1[1].mmag003,s_detail1[1].mmag004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.mmag002
         ON ACTION controlp INFIELD mmag002
            #add-point:ON ACTION controlp INFIELD mmag002
            {<point name="construct.c.page1.mmag002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag002
            #add-point:BEFORE FIELD mmag002
            {<point name="construct.b.page1.mmag002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmag002
            
            #add-point:AFTER FIELD mmag002
            {<point name="construct.a.page1.mmag002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag003
            #add-point:BEFORE FIELD mmag003
            {<point name="construct.b.page1.mmag003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmag003
            
            #add-point:AFTER FIELD mmag003
            {<point name="construct.a.page1.mmag003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmag003
         ON ACTION controlp INFIELD mmag003
            #add-point:ON ACTION controlp INFIELD mmag003
            {<point name="construct.c.page1.mmag003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.mmag004
         ON ACTION controlp INFIELD mmag004
            #add-point:ON ACTION controlp INFIELD mmag004
            {<point name="construct.c.page1.mmag004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag004
            #add-point:BEFORE FIELD mmag004
            {<point name="construct.b.page1.mmag004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmag004
            
            #add-point:AFTER FIELD mmag004
            {<point name="construct.a.page1.mmag004" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmah002,mmah003,mmah004,mmah005,mmah006
           FROM s_detail2[1].mmah002,s_detail2[1].mmah003,s_detail2[1].mmah004,s_detail2[1].mmah005, 
               s_detail2[1].mmah006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.mmah002
         ON ACTION controlp INFIELD mmah002
            #add-point:ON ACTION controlp INFIELD mmah002
            {<point name="construct.c.page2.mmah002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah002
            #add-point:BEFORE FIELD mmah002
            {<point name="construct.b.page2.mmah002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah002
            
            #add-point:AFTER FIELD mmah002
            {<point name="construct.a.page2.mmah002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah003
            #add-point:BEFORE FIELD mmah003
            {<point name="construct.b.page2.mmah003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah003
            
            #add-point:AFTER FIELD mmah003
            {<point name="construct.a.page2.mmah003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmah003
         ON ACTION controlp INFIELD mmah003
            #add-point:ON ACTION controlp INFIELD mmah003
            {<point name="construct.c.page2.mmah003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah004
            #add-point:BEFORE FIELD mmah004
            {<point name="construct.b.page2.mmah004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah004
            
            #add-point:AFTER FIELD mmah004
            {<point name="construct.a.page2.mmah004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmah004
         ON ACTION controlp INFIELD mmah004
            #add-point:ON ACTION controlp INFIELD mmah004
            {<point name="construct.c.page2.mmah004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah005
            #add-point:BEFORE FIELD mmah005
            {<point name="construct.b.page2.mmah005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah005
            
            #add-point:AFTER FIELD mmah005
            {<point name="construct.a.page2.mmah005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmah005
         ON ACTION controlp INFIELD mmah005
            #add-point:ON ACTION controlp INFIELD mmah005
            {<point name="construct.c.page2.mmah005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah006
            #add-point:BEFORE FIELD mmah006
            {<point name="construct.b.page2.mmah006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah006
            
            #add-point:AFTER FIELD mmah006
            {<point name="construct.a.page2.mmah006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmah006
         ON ACTION controlp INFIELD mmah006
            #add-point:ON ACTION controlp INFIELD mmah006
            {<point name="construct.c.page2.mmah006" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmai002
           FROM s_detail3[1].mmai002
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page3.mmai002
         ON ACTION controlp INFIELD mmai002
            #add-point:ON ACTION controlp INFIELD mmai002
            {<point name="construct.c.page3.mmai002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmai002
            #add-point:BEFORE FIELD mmai002
            {<point name="construct.b.page3.mmai002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmai002
            
            #add-point:AFTER FIELD mmai002
            {<point name="construct.a.page3.mmai002" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON mmaj002
           FROM s_detail4[1].mmaj002
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page4.mmaj002
         ON ACTION controlp INFIELD mmaj002
            #add-point:ON ACTION controlp INFIELD mmaj002
            {<point name="construct.c.page4.mmaj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaj002
            #add-point:BEFORE FIELD mmaj002
            {<point name="construct.b.page4.mmaj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaj002
            
            #add-point:AFTER FIELD mmaj002
            {<point name="construct.a.page4.mmaj002" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammq300_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmaf001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.delete" ver="10" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammq300_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmaf_m.mmaf001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

   
   
 
   CALL ammq300_show()
   
   CALL s_transaction_begin()
 
   OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
   IF STATUS THEN
      CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
      CLOSE ammq300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmaf_m.mmaf001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammq300_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmaf001_t = g_mmaf_m.mmaf001
 
 
      DELETE FROM mmaf_t
       WHERE mmafent = g_enterprise AND mmaf001 = g_mmaf_m.mmaf001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmaf_m.mmaf001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmag_t
       WHERE mmagent = g_enterprise AND mmag001 = g_mmaf_m.mmaf001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmag_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmah_t
       WHERE mmahent = g_enterprise AND
             mmah001 = g_mmaf_m.mmaf001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmah_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmai_t
       WHERE mmaient = g_enterprise AND
             mmai001 = g_mmaf_m.mmaf001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmai_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM mmaj_t
       WHERE mmajent = g_enterprise AND
             mmaj001 = g_mmaf_m.mmaf001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmaj_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmag_d.clear() 
      CALL g_mmag2_d.clear()       
      CALL g_mmag3_d.clear()       
      CALL g_mmag4_d.clear()       
 
     
      #CALL ammq300_ui_browser_refresh()  
      CALL ammq300_ui_headershow()  
      CALL ammq300_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammq300_browser_fill("")
         CALL ammq300_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammq300_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammq300_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmaf_m.mmaf001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="ammq300.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammq300_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmag_t
       WHERE mmagent = g_enterprise AND
         mmag001 = ps_keys_bak[1] AND mmag002 = ps_keys_bak[2] AND mmag003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmah_t
       WHERE mmahent = g_enterprise AND
         mmah001 = ps_keys_bak[1] AND mmah002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmah_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmai_t
       WHERE mmaient = g_enterprise AND
         mmai001 = ps_keys_bak[1] AND mmai002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmai_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM mmaj_t
       WHERE mmajent = g_enterprise AND
         mmaj001 = ps_keys_bak[1] AND mmaj002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmaj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.description" ver="46" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000224
#+ 
#+ Filename...: ammq300
#+ Description: 會員資料查詢作業
#+ Creator....: 02296(2014/02/14)
#+ Modifier...: 02296(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="ammq300.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammq300_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmag_t.*
   DEFINE l_detail2    RECORD LIKE mmah_t.*
 
   DEFINE l_detail3    RECORD LIKE mmai_t.*
 
   DEFINE l_detail4    RECORD LIKE mmaj_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammq300_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammq300_detail AS ",
                "SELECT * FROM mmag_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammq300_detail SELECT * FROM mmag_t 
                                         WHERE mmagent = g_enterprise AND mmag001 = g_mmaf001_t
 
   
   #將key修正為調整後   
   UPDATE ammq300_detail 
      #更新key欄位
      SET mmag001 = g_mmaf_m.mmaf001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmag_t SELECT * FROM ammq300_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammq300_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammq300_detail AS ",
      "SELECT * FROM mmah_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammq300_detail SELECT * FROM mmah_t
                                         WHERE mmahent = g_enterprise AND mmah001 = g_mmaf001_t
 
 
   #將key修正為調整後   
   UPDATE ammq300_detail SET mmah001 = g_mmaf_m.mmaf001
 
  
   #將資料塞回原table   
   INSERT INTO mmah_t SELECT * FROM ammq300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammq300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammq300_detail AS ",
      "SELECT * FROM mmai_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammq300_detail SELECT * FROM mmai_t
                                         WHERE mmaient = g_enterprise AND mmai001 = g_mmaf001_t
 
 
   #將key修正為調整後   
   UPDATE ammq300_detail SET mmai001 = g_mmaf_m.mmaf001
 
  
   #將資料塞回原table   
   INSERT INTO mmai_t SELECT * FROM ammq300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammq300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammq300_detail AS ",
      "SELECT * FROM mmaj_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammq300_detail SELECT * FROM mmaj_t
                                         WHERE mmajent = g_enterprise AND mmaj001 = g_mmaf001_t
 
 
   #將key修正為調整後   
   UPDATE ammq300_detail SET mmaj001 = g_mmaf_m.mmaf001
 
  
   #將資料塞回原table   
   INSERT INTO mmaj_t SELECT * FROM ammq300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammq300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmaf001_t = g_mmaf_m.mmaf001
 
   
   DROP TABLE ammq300_detail
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammq300_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammq300_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL ammq300_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmaf_m.mmaf001 = g_browser[g_current_idx].b_mmaf001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("mmaf_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmaf_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammq300_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammq300_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION ammq300_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammq300_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
]]>
  </section>
  <section id="ammq300.global" ver="9" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmaf_m        RECORD
       mmaf001 LIKE mmaf_t.mmaf001, 
   mmaf002 LIKE mmaf_t.mmaf002, 
   mmaf008 LIKE mmaf_t.mmaf008, 
   mmaf009 LIKE mmaf_t.mmaf009, 
   mmaf003 LIKE mmaf_t.mmaf003, 
   mmaf004 LIKE mmaf_t.mmaf004, 
   mmaf015 LIKE mmaf_t.mmaf015, 
   mmaf013 LIKE mmaf_t.mmaf013, 
   mmaf014 LIKE mmaf_t.mmaf014, 
   mmaf016 LIKE mmaf_t.mmaf016, 
   mmaf016_desc LIKE type_t.chr80, 
   mmaf017 LIKE mmaf_t.mmaf017, 
   mmaf017_desc LIKE type_t.chr80, 
   mmaf010 LIKE mmaf_t.mmaf010, 
   mmaf011 LIKE mmaf_t.mmaf011, 
   mmaf012 LIKE mmaf_t.mmaf012, 
   mmaf018 LIKE mmaf_t.mmaf018, 
   mmaf018_desc LIKE type_t.chr80, 
   mmaf019 LIKE mmaf_t.mmaf019, 
   mmaf019_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmag_d        RECORD
       mmag002 LIKE mmag_t.mmag002, 
   mmag002_desc LIKE type_t.chr500, 
   mmag003 LIKE mmag_t.mmag003, 
   mmag004 LIKE mmag_t.mmag004, 
   mmag004_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_mmag2_d RECORD
       mmah002 LIKE mmah_t.mmah002, 
   mmah002_desc LIKE type_t.chr500, 
   mmah003 LIKE mmah_t.mmah003, 
   mmah004 LIKE mmah_t.mmah004, 
   mmah005 LIKE mmah_t.mmah005, 
   mmah006 LIKE mmah_t.mmah006
       END RECORD
PRIVATE TYPE type_g_mmag3_d RECORD
       mmai002 LIKE mmai_t.mmai002, 
   mmai002_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_mmag4_d RECORD
       mmaj002 LIKE mmaj_t.mmaj002, 
   mmaj002_desc LIKE type_t.chr500
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmaf_m          type_g_mmaf_m
DEFINE g_mmaf_m_t        type_g_mmaf_m
 
   DEFINE g_mmaf001_t LIKE mmaf_t.mmaf001
 
 
DEFINE g_mmag_d          DYNAMIC ARRAY OF type_g_mmag_d
DEFINE g_mmag_d_t        type_g_mmag_d
DEFINE g_mmag2_d   DYNAMIC ARRAY OF type_g_mmag2_d
DEFINE g_mmag2_d_t type_g_mmag2_d
DEFINE g_mmag3_d   DYNAMIC ARRAY OF type_g_mmag3_d
DEFINE g_mmag3_d_t type_g_mmag3_d
DEFINE g_mmag4_d   DYNAMIC ARRAY OF type_g_mmag4_d
DEFINE g_mmag4_d_t type_g_mmag4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmaf001 LIKE mmaf_t.mmaf001
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmaf001 LIKE mmaf_t.mmaf001
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammq300.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammq300_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmag_d.getLength() THEN
         LET g_detail_idx = g_mmag_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmag2_d.getLength() THEN
         LET g_detail_idx = g_mmag2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmag3_d.getLength() THEN
         LET g_detail_idx = g_mmag3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_mmag4_d.getLength() THEN
         LET g_detail_idx = g_mmag4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmag4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmag4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammq300_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
      CALL cl_set_combo_scc('mmaf003','6501') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammq300_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammq300.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammq300_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmag002,mmag003,mmag004 FROM mmag_t WHERE mmagent=? AND mmag001=? AND  
       mmag002=? AND mmag003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammq300_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmah002,mmah003,mmah004,mmah005,mmah006 FROM mmah_t WHERE mmahent=? AND  
       mmah001=? AND mmah002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammq300_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmai002 FROM mmai_t WHERE mmaient=? AND mmai001=? AND mmai002=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammq300_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmaj002 FROM mmaj_t WHERE mmajent=? AND mmaj001=? AND mmaj002=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammq300_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammq300_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammq300_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008,g_mmaf_m.mmaf009,g_mmaf_m.mmaf003, 
       g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014,g_mmaf_m.mmaf016,g_mmaf_m.mmaf017, 
       g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018,g_mmaf_m.mmaf019
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="ammq300.input.body" ver="6" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmag_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmag_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammq300_b_fill()
            LET g_rec_b = g_mmag_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
            IF STATUS THEN
               CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
               CLOSE ammq300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmag_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmag_d[l_ac].mmag002 IS NOT NULL
               AND g_mmag_d[l_ac].mmag003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmag_d_t.* = g_mmag_d[l_ac].*  #BACKUP
               CALL ammq300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammq300_set_no_entry_b(l_cmd)
               IF NOT ammq300_lock_b("mmag_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammq300_bcl INTO g_mmag_d[l_ac].mmag002,g_mmag_d[l_ac].mmag003,g_mmag_d[l_ac].mmag004 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmag_d_t.mmag002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammq300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmag_d[l_ac].* TO NULL 
            
            LET g_mmag_d_t.* = g_mmag_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammq300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammq300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmag_d[li_reproduce_target].* = g_mmag_d[li_reproduce].*
 
               LET g_mmag_d[li_reproduce_target].mmag002 = NULL
               LET g_mmag_d[li_reproduce_target].mmag003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmag_t 
             WHERE mmagent = g_enterprise AND mmag001 = g_mmaf_m.mmaf001
 
               AND mmag002 = g_mmag_d[l_ac].mmag002
               AND mmag003 = g_mmag_d[l_ac].mmag003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag_d[g_detail_idx].mmag002
               LET gs_keys[3] = g_mmag_d[g_detail_idx].mmag003
               CALL ammq300_insert_b('mmag_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmag_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmag_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammq300_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmag_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmag_d.deleteElement(l_ac)
               NEXT FIELD mmag002
            END IF
         
            IF g_mmag_d[l_ac].mmag002 IS NOT NULL
               AND g_mmag_d_t.mmag003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmag_t
                WHERE mmagent = g_enterprise AND mmag001 = g_mmaf_m.mmaf001 AND
 
                      mmag002 = g_mmag_d_t.mmag002
                  AND mmag003 = g_mmag_d_t.mmag003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmag_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammq300_bcl
               LET l_count = g_mmag_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag_d[g_detail_idx].mmag002
               LET gs_keys[3] = g_mmag_d[g_detail_idx].mmag003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammq300_delete_b('mmag_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD mmag002
            
            #add-point:AFTER FIELD mmag002
            {<point name="input.a.page1.mmag002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag002
            #add-point:BEFORE FIELD mmag002
            {<point name="input.b.page1.mmag002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmag002
            #add-point:ON CHANGE mmag002
            {<point name="input.g.page1.mmag002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag003
            #add-point:BEFORE FIELD mmag003
            {<point name="input.b.page1.mmag003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmag003
            
            #add-point:AFTER FIELD mmag003
            {<point name="input.a.page1.mmag003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmag003
            #add-point:ON CHANGE mmag003
            {<point name="input.g.page1.mmag003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmag004
            
            #add-point:AFTER FIELD mmag004
            {<point name="input.a.page1.mmag004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmag004
            #add-point:BEFORE FIELD mmag004
            {<point name="input.b.page1.mmag004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmag004
            #add-point:ON CHANGE mmag004
            {<point name="input.g.page1.mmag004" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmag002
         ON ACTION controlp INFIELD mmag002
            #add-point:ON ACTION controlp INFIELD mmag002
            {<point name="input.c.page1.mmag002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmag003
         ON ACTION controlp INFIELD mmag003
            #add-point:ON ACTION controlp INFIELD mmag003
            {<point name="input.c.page1.mmag003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmag004
         ON ACTION controlp INFIELD mmag004
            #add-point:ON ACTION controlp INFIELD mmag004
            {<point name="input.c.page1.mmag004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmag_d[l_ac].* = g_mmag_d_t.*
               CLOSE ammq300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmag_d[l_ac].mmag002,-263,1)
               LET g_mmag_d[l_ac].* = g_mmag_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmag_t SET (mmag001,mmag002,mmag003,mmag004) = (g_mmaf_m.mmaf001,g_mmag_d[l_ac].mmag002, 
                   g_mmag_d[l_ac].mmag003,g_mmag_d[l_ac].mmag004)
                WHERE mmagent = g_enterprise AND mmag001 = g_mmaf_m.mmaf001 
 
                  AND mmag002 = g_mmag_d_t.mmag002 #項次   
                  AND mmag003 = g_mmag_d_t.mmag003  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmag_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmag_d[l_ac].* = g_mmag_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmag_t",SQLCA.sqlcode,1)
                     LET g_mmag_d[l_ac].* = g_mmag_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys_bak[1] = g_mmaf001_t
               LET gs_keys[2] = g_mmag_d[g_detail_idx].mmag002
               LET gs_keys_bak[2] = g_mmag_d_t.mmag002
               LET gs_keys[3] = g_mmag_d[g_detail_idx].mmag003
               LET gs_keys_bak[3] = g_mmag_d_t.mmag003
               CALL ammq300_update_b('mmag_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammq300_unlock_b("mmag_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmag_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmag_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmag2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmag2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammq300_b_fill()
            LET g_rec_b = g_mmag2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmag2_d[l_ac].* TO NULL 
            
            LET g_mmag2_d_t.* = g_mmag2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammq300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammq300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmag2_d[li_reproduce_target].* = g_mmag2_d[li_reproduce].*
 
               LET g_mmag2_d[li_reproduce_target].mmah002 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
            IF STATUS THEN
               CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
               CLOSE ammq300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmag2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmag2_d[l_ac].mmah002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmag2_d_t.* = g_mmag2_d[l_ac].*  #BACKUP
               CALL ammq300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammq300_set_no_entry_b(l_cmd)
               IF NOT ammq300_lock_b("mmah_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammq300_bcl2 INTO g_mmag2_d[l_ac].mmah002,g_mmag2_d[l_ac].mmah003,g_mmag2_d[l_ac].mmah004, 
                      g_mmag2_d[l_ac].mmah005,g_mmag2_d[l_ac].mmah006
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammq300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmag2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmag2_d.deleteElement(l_ac)
               NEXT FIELD mmah002
            END IF
         
            IF g_mmag2_d[l_ac].mmah002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmah_t
                WHERE mmahent = g_enterprise AND mmah001 = g_mmaf_m.mmaf001 AND
                      mmah002 = g_mmag2_d_t.mmah002
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmag_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammq300_bcl
               LET l_count = g_mmag_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag2_d[g_detail_idx].mmah002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL ammq300_delete_b('mmah_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmah_t 
             WHERE mmahent = g_enterprise AND mmah001 = g_mmaf_m.mmaf001
               AND mmah002 = g_mmag2_d[l_ac].mmah002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag2_d[g_detail_idx].mmah002
               CALL ammq300_insert_b('mmah_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmag_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmah_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammq300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmag2_d[l_ac].* = g_mmag2_d_t.*
               CLOSE ammq300_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmag2_d[l_ac].* = g_mmag2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE mmah_t SET (mmah001,mmah002,mmah003,mmah004,mmah005,mmah006) = (g_mmaf_m.mmaf001, 
                   g_mmag2_d[l_ac].mmah002,g_mmag2_d[l_ac].mmah003,g_mmag2_d[l_ac].mmah004,g_mmag2_d[l_ac].mmah005, 
                   g_mmag2_d[l_ac].mmah006) #自訂欄位頁簽
                WHERE mmahent = g_enterprise AND mmah001 = g_mmaf_m.mmaf001
                  AND mmah002 = g_mmag2_d_t.mmah002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmah_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmag2_d[l_ac].* = g_mmag2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmah_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmag2_d[l_ac].* = g_mmag2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys_bak[1] = g_mmaf001_t
               LET gs_keys[2] = g_mmag2_d[g_detail_idx].mmah002
               LET gs_keys_bak[2] = g_mmag2_d_t.mmah002
               CALL ammq300_update_b('mmah_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag2_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD mmah002
            
            #add-point:AFTER FIELD mmah002
            {<point name="input.a.page2.mmah002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah002
            #add-point:BEFORE FIELD mmah002
            {<point name="input.b.page2.mmah002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmah002
            #add-point:ON CHANGE mmah002
            {<point name="input.g.page2.mmah002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah003
            #add-point:BEFORE FIELD mmah003
            {<point name="input.b.page2.mmah003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah003
            
            #add-point:AFTER FIELD mmah003
            {<point name="input.a.page2.mmah003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmah003
            #add-point:ON CHANGE mmah003
            {<point name="input.g.page2.mmah003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah004
            #add-point:BEFORE FIELD mmah004
            {<point name="input.b.page2.mmah004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah004
            
            #add-point:AFTER FIELD mmah004
            {<point name="input.a.page2.mmah004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmah004
            #add-point:ON CHANGE mmah004
            {<point name="input.g.page2.mmah004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah005
            #add-point:BEFORE FIELD mmah005
            {<point name="input.b.page2.mmah005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah005
            
            #add-point:AFTER FIELD mmah005
            {<point name="input.a.page2.mmah005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmah005
            #add-point:ON CHANGE mmah005
            {<point name="input.g.page2.mmah005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmah006
            #add-point:BEFORE FIELD mmah006
            {<point name="input.b.page2.mmah006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmah006
            
            #add-point:AFTER FIELD mmah006
            {<point name="input.a.page2.mmah006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmah006
            #add-point:ON CHANGE mmah006
            {<point name="input.g.page2.mmah006" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.mmah002
         ON ACTION controlp INFIELD mmah002
            #add-point:ON ACTION controlp INFIELD mmah002
            {<point name="input.c.page2.mmah002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmah003
         ON ACTION controlp INFIELD mmah003
            #add-point:ON ACTION controlp INFIELD mmah003
            {<point name="input.c.page2.mmah003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmah004
         ON ACTION controlp INFIELD mmah004
            #add-point:ON ACTION controlp INFIELD mmah004
            {<point name="input.c.page2.mmah004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmah005
         ON ACTION controlp INFIELD mmah005
            #add-point:ON ACTION controlp INFIELD mmah005
            {<point name="input.c.page2.mmah005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmah006
         ON ACTION controlp INFIELD mmah006
            #add-point:ON ACTION controlp INFIELD mmah006
            {<point name="input.c.page2.mmah006" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmag2_d[l_ac].* = g_mmag2_d_t.*
               END IF
               CLOSE ammq300_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammq300_unlock_b("mmah_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmag2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmag2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmag3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmag3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammq300_b_fill()
            LET g_rec_b = g_mmag3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmag3_d[l_ac].* TO NULL 
            
            LET g_mmag3_d_t.* = g_mmag3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammq300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammq300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmag3_d[li_reproduce_target].* = g_mmag3_d[li_reproduce].*
 
               LET g_mmag3_d[li_reproduce_target].mmai002 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
            IF STATUS THEN
               CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
               CLOSE ammq300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmag3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmag3_d[l_ac].mmai002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmag3_d_t.* = g_mmag3_d[l_ac].*  #BACKUP
               CALL ammq300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammq300_set_no_entry_b(l_cmd)
               IF NOT ammq300_lock_b("mmai_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammq300_bcl3 INTO g_mmag3_d[l_ac].mmai002
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammq300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmag3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmag3_d.deleteElement(l_ac)
               NEXT FIELD mmai002
            END IF
         
            IF g_mmag3_d[l_ac].mmai002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmai_t
                WHERE mmaient = g_enterprise AND mmai001 = g_mmaf_m.mmaf001 AND
                      mmai002 = g_mmag3_d_t.mmai002
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmag_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammq300_bcl
               LET l_count = g_mmag_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag3_d[g_detail_idx].mmai002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL ammq300_delete_b('mmai_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmai_t 
             WHERE mmaient = g_enterprise AND mmai001 = g_mmaf_m.mmaf001
               AND mmai002 = g_mmag3_d[l_ac].mmai002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag3_d[g_detail_idx].mmai002
               CALL ammq300_insert_b('mmai_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmag_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmai_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammq300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmag3_d[l_ac].* = g_mmag3_d_t.*
               CLOSE ammq300_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmag3_d[l_ac].* = g_mmag3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE mmai_t SET (mmai001,mmai002) = (g_mmaf_m.mmaf001,g_mmag3_d[l_ac].mmai002) #自訂欄位頁簽 

                WHERE mmaient = g_enterprise AND mmai001 = g_mmaf_m.mmaf001
                  AND mmai002 = g_mmag3_d_t.mmai002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmai_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmag3_d[l_ac].* = g_mmag3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmai_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmag3_d[l_ac].* = g_mmag3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys_bak[1] = g_mmaf001_t
               LET gs_keys[2] = g_mmag3_d[g_detail_idx].mmai002
               LET gs_keys_bak[2] = g_mmag3_d_t.mmai002
               CALL ammq300_update_b('mmai_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag3_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD mmai002
            
            #add-point:AFTER FIELD mmai002
            {<point name="input.a.page3.mmai002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmai002
            #add-point:BEFORE FIELD mmai002
            {<point name="input.b.page3.mmai002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmai002
            #add-point:ON CHANGE mmai002
            {<point name="input.g.page3.mmai002" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.mmai002
         ON ACTION controlp INFIELD mmai002
            #add-point:ON ACTION controlp INFIELD mmai002
            {<point name="input.c.page3.mmai002" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmag3_d[l_ac].* = g_mmag3_d_t.*
               END IF
               CLOSE ammq300_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammq300_unlock_b("mmai_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmag3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmag3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmag4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmag4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammq300_b_fill()
            LET g_rec_b = g_mmag4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmag4_d[l_ac].* TO NULL 
            
            LET g_mmag4_d_t.* = g_mmag4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammq300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammq300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmag4_d[li_reproduce_target].* = g_mmag4_d[li_reproduce].*
 
               LET g_mmag4_d[li_reproduce_target].mmaj002 = NULL
            END IF
            #公用欄位給值(單身4)
            
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
            IF STATUS THEN
               CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
               CLOSE ammq300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmag4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmag4_d[l_ac].mmaj002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmag4_d_t.* = g_mmag4_d[l_ac].*  #BACKUP
               CALL ammq300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL ammq300_set_no_entry_b(l_cmd)
               IF NOT ammq300_lock_b("mmaj_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammq300_bcl4 INTO g_mmag4_d[l_ac].mmaj002
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammq300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmag4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmag4_d.deleteElement(l_ac)
               NEXT FIELD mmaj002
            END IF
         
            IF g_mmag4_d[l_ac].mmaj002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmaj_t
                WHERE mmajent = g_enterprise AND mmaj001 = g_mmaf_m.mmaf001 AND
                      mmaj002 = g_mmag4_d_t.mmaj002
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmag_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammq300_bcl
               LET l_count = g_mmag_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag4_d[g_detail_idx].mmaj002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL ammq300_delete_b('mmaj_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmaj_t 
             WHERE mmajent = g_enterprise AND mmaj001 = g_mmaf_m.mmaf001
               AND mmaj002 = g_mmag4_d[l_ac].mmaj002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys[2] = g_mmag4_d[g_detail_idx].mmaj002
               CALL ammq300_insert_b('mmaj_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmag_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmaj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammq300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmag4_d[l_ac].* = g_mmag4_d_t.*
               CLOSE ammq300_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmag4_d[l_ac].* = g_mmag4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               UPDATE mmaj_t SET (mmaj001,mmaj002) = (g_mmaf_m.mmaf001,g_mmag4_d[l_ac].mmaj002) #自訂欄位頁簽 

                WHERE mmajent = g_enterprise AND mmaj001 = g_mmaf_m.mmaf001
                  AND mmaj002 = g_mmag4_d_t.mmaj002 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmaj_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmag4_d[l_ac].* = g_mmag4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmaj_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmag4_d[l_ac].* = g_mmag4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaf_m.mmaf001
               LET gs_keys_bak[1] = g_mmaf001_t
               LET gs_keys[2] = g_mmag4_d[g_detail_idx].mmaj002
               LET gs_keys_bak[2] = g_mmag4_d_t.mmaj002
               CALL ammq300_update_b('mmaj_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag4_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaf_m),util.JSON.stringify(g_mmag4_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD mmaj002
            
            #add-point:AFTER FIELD mmaj002
            {<point name="input.a.page4.mmaj002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaj002
            #add-point:BEFORE FIELD mmaj002
            {<point name="input.b.page4.mmaj002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaj002
            #add-point:ON CHANGE mmaj002
            {<point name="input.g.page4.mmaj002" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.mmaj002
         ON ACTION controlp INFIELD mmaj002
            #add-point:ON ACTION controlp INFIELD mmaj002
            {<point name="input.c.page4.mmaj002" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmag4_d[l_ac].* = g_mmag4_d_t.*
               END IF
               CLOSE ammq300_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammq300_unlock_b("mmaj_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmag4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmag4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="ammq300.input.head" ver="7" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008,g_mmaf_m.mmaf009,g_mmaf_m.mmaf003, 
          g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014,g_mmaf_m.mmaf016,g_mmaf_m.mmaf017, 
          g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018,g_mmaf_m.mmaf019 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmaf001
            #add-point:BEFORE FIELD mmaf001
            {<point name="input.b.mmaf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf001
            
            #add-point:AFTER FIELD mmaf001
            {<point name="input.a.mmaf001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf001
            #add-point:ON CHANGE mmaf001
            {<point name="input.g.mmaf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf002
            #add-point:BEFORE FIELD mmaf002
            {<point name="input.b.mmaf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf002
            
            #add-point:AFTER FIELD mmaf002
            {<point name="input.a.mmaf002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf002
            #add-point:ON CHANGE mmaf002
            {<point name="input.g.mmaf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf008
            #add-point:BEFORE FIELD mmaf008
            {<point name="input.b.mmaf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf008
            
            #add-point:AFTER FIELD mmaf008
            {<point name="input.a.mmaf008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf008
            #add-point:ON CHANGE mmaf008
            {<point name="input.g.mmaf008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf009
            #add-point:BEFORE FIELD mmaf009
            {<point name="input.b.mmaf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf009
            
            #add-point:AFTER FIELD mmaf009
            {<point name="input.a.mmaf009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf009
            #add-point:ON CHANGE mmaf009
            {<point name="input.g.mmaf009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf003
            #add-point:BEFORE FIELD mmaf003
            {<point name="input.b.mmaf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf003
            
            #add-point:AFTER FIELD mmaf003
            {<point name="input.a.mmaf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf003
            #add-point:ON CHANGE mmaf003
            {<point name="input.g.mmaf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf004
            #add-point:BEFORE FIELD mmaf004
            {<point name="input.b.mmaf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf004
            
            #add-point:AFTER FIELD mmaf004
            {<point name="input.a.mmaf004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf004
            #add-point:ON CHANGE mmaf004
            {<point name="input.g.mmaf004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf015
            #add-point:BEFORE FIELD mmaf015
            {<point name="input.b.mmaf015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf015
            
            #add-point:AFTER FIELD mmaf015
            {<point name="input.a.mmaf015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf015
            #add-point:ON CHANGE mmaf015
            {<point name="input.g.mmaf015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf013
            #add-point:BEFORE FIELD mmaf013
            {<point name="input.b.mmaf013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf013
            
            #add-point:AFTER FIELD mmaf013
            {<point name="input.a.mmaf013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf013
            #add-point:ON CHANGE mmaf013
            {<point name="input.g.mmaf013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf014
            #add-point:BEFORE FIELD mmaf014
            {<point name="input.b.mmaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf014
            
            #add-point:AFTER FIELD mmaf014
            {<point name="input.a.mmaf014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf014
            #add-point:ON CHANGE mmaf014
            {<point name="input.g.mmaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf016
            
            #add-point:AFTER FIELD mmaf016
            {<point name="input.a.mmaf016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf016
            #add-point:BEFORE FIELD mmaf016
            {<point name="input.b.mmaf016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf016
            #add-point:ON CHANGE mmaf016
            {<point name="input.g.mmaf016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf017
            
            #add-point:AFTER FIELD mmaf017
            {<point name="input.a.mmaf017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf017
            #add-point:BEFORE FIELD mmaf017
            {<point name="input.b.mmaf017" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf017
            #add-point:ON CHANGE mmaf017
            {<point name="input.g.mmaf017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf010
            #add-point:BEFORE FIELD mmaf010
            {<point name="input.b.mmaf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf010
            
            #add-point:AFTER FIELD mmaf010
            {<point name="input.a.mmaf010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf010
            #add-point:ON CHANGE mmaf010
            {<point name="input.g.mmaf010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf011
            #add-point:BEFORE FIELD mmaf011
            {<point name="input.b.mmaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf011
            
            #add-point:AFTER FIELD mmaf011
            {<point name="input.a.mmaf011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf011
            #add-point:ON CHANGE mmaf011
            {<point name="input.g.mmaf011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf012
            #add-point:BEFORE FIELD mmaf012
            {<point name="input.b.mmaf012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf012
            
            #add-point:AFTER FIELD mmaf012
            {<point name="input.a.mmaf012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf012
            #add-point:ON CHANGE mmaf012
            {<point name="input.g.mmaf012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf018
            
            #add-point:AFTER FIELD mmaf018
            {<point name="input.a.mmaf018" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf018
            #add-point:BEFORE FIELD mmaf018
            {<point name="input.b.mmaf018" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf018
            #add-point:ON CHANGE mmaf018
            {<point name="input.g.mmaf018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmaf019
            
            #add-point:AFTER FIELD mmaf019
            {<point name="input.a.mmaf019" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmaf019
            #add-point:BEFORE FIELD mmaf019
            {<point name="input.b.mmaf019" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmaf019
            #add-point:ON CHANGE mmaf019
            {<point name="input.g.mmaf019" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmaf001
         ON ACTION controlp INFIELD mmaf001
            #add-point:ON ACTION controlp INFIELD mmaf001
            {<point name="input.c.mmaf001" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf002
         ON ACTION controlp INFIELD mmaf002
            #add-point:ON ACTION controlp INFIELD mmaf002
            {<point name="input.c.mmaf002" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf008
         ON ACTION controlp INFIELD mmaf008
            #add-point:ON ACTION controlp INFIELD mmaf008
            {<point name="input.c.mmaf008" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf009
         ON ACTION controlp INFIELD mmaf009
            #add-point:ON ACTION controlp INFIELD mmaf009
            {<point name="input.c.mmaf009" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf003
         ON ACTION controlp INFIELD mmaf003
            #add-point:ON ACTION controlp INFIELD mmaf003
            {<point name="input.c.mmaf003" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf004
         ON ACTION controlp INFIELD mmaf004
            #add-point:ON ACTION controlp INFIELD mmaf004
            {<point name="input.c.mmaf004" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf015
         ON ACTION controlp INFIELD mmaf015
            #add-point:ON ACTION controlp INFIELD mmaf015
            {<point name="input.c.mmaf015" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf013
         ON ACTION controlp INFIELD mmaf013
            #add-point:ON ACTION controlp INFIELD mmaf013
            {<point name="input.c.mmaf013" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf014
         ON ACTION controlp INFIELD mmaf014
            #add-point:ON ACTION controlp INFIELD mmaf014
            {<point name="input.c.mmaf014" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf016
         ON ACTION controlp INFIELD mmaf016
            #add-point:ON ACTION controlp INFIELD mmaf016
            {<point name="input.c.mmaf016" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf017
         ON ACTION controlp INFIELD mmaf017
            #add-point:ON ACTION controlp INFIELD mmaf017
            {<point name="input.c.mmaf017" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf010
         ON ACTION controlp INFIELD mmaf010
            #add-point:ON ACTION controlp INFIELD mmaf010
            {<point name="input.c.mmaf010" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf011
         ON ACTION controlp INFIELD mmaf011
            #add-point:ON ACTION controlp INFIELD mmaf011
            {<point name="input.c.mmaf011" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf012
         ON ACTION controlp INFIELD mmaf012
            #add-point:ON ACTION controlp INFIELD mmaf012
            {<point name="input.c.mmaf012" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf018
         ON ACTION controlp INFIELD mmaf018
            #add-point:ON ACTION controlp INFIELD mmaf018
            {<point name="input.c.mmaf018" />}
            #END add-point
 
         #Ctrlp:input.c.mmaf019
         ON ACTION controlp INFIELD mmaf019
            #add-point:ON ACTION controlp INFIELD mmaf019
            {<point name="input.c.mmaf019" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmaf_m.mmaf001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmaf_t (mmafent,mmaf001,mmaf002,mmaf008,mmaf009,mmaf003,mmaf004,mmaf015,mmaf013, 
                   mmaf014,mmaf016,mmaf017,mmaf010,mmaf011,mmaf012,mmaf018,mmaf019)
               VALUES (g_enterprise,g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008,g_mmaf_m.mmaf009, 
                   g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
                   g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012, 
                   g_mmaf_m.mmaf018,g_mmaf_m.mmaf019) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmaf_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammq300_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmaf_t SET (mmaf001,mmaf002,mmaf008,mmaf009,mmaf003,mmaf004,mmaf015,mmaf013,mmaf014, 
                   mmaf016,mmaf017,mmaf010,mmaf011,mmaf012,mmaf018,mmaf019) = (g_mmaf_m.mmaf001,g_mmaf_m.mmaf002, 
                   g_mmaf_m.mmaf008,g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015, 
                   g_mmaf_m.mmaf013,g_mmaf_m.mmaf014,g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010, 
                   g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018,g_mmaf_m.mmaf019)
                WHERE mmafent = g_enterprise AND mmaf001 = g_mmaf001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmaf_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_mmaf_m_t)
               LET g_log2 = util.JSON.stringify(g_mmaf_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmaf001_t = g_mmaf_m.mmaf001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="ammq300.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmaf001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmag002
               WHEN "s_detail2"
                  NEXT FIELD mmah002
               WHEN "s_detail3"
                  NEXT FIELD mmai002
               WHEN "s_detail4"
                  NEXT FIELD mmaj002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammq300_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmag_d.clear()   
   CALL g_mmag2_d.clear()  
   CALL g_mmag3_d.clear()  
   CALL g_mmag4_d.clear()  
 
 
   INITIALIZE g_mmaf_m.* LIKE mmaf_t.*             #DEFAULT 設定
   
   LET g_mmaf001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammq300_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmaf_m.* = g_mmaf_m_t.*
         CALL ammq300_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmag_d.clear()
      CALL g_mmag2_d.clear()
      CALL g_mmag3_d.clear()
      CALL g_mmag4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmaf001_t = g_mmaf_m.mmaf001
 
   
   LET g_wc = g_wc,  
              " OR ( mmafent = '" ||g_enterprise|| "' AND",
              " mmaf001 = '", g_mmaf_m.mmaf001 CLIPPED, "' "
 
              , ") "
   
   CLOSE ammq300_cl
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammq300_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmag_t
                  (mmagent,
                   mmag001,
                   mmag002,mmag003
                   ,mmag004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmag_d[g_detail_idx].mmag004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmag_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmah_t
                  (mmahent,
                   mmah001,
                   mmah002
                   ,mmah003,mmah004,mmah005,mmah006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmag2_d[g_detail_idx].mmah003,g_mmag2_d[g_detail_idx].mmah004,g_mmag2_d[g_detail_idx].mmah005, 
                       g_mmag2_d[g_detail_idx].mmah006)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmah_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO mmai_t
                  (mmaient,
                   mmai001,
                   mmai002
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmai_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO mmaj_t
                  (mmajent,
                   mmaj001,
                   mmaj002
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmaj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammq300_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammq300_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmag_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammq300_bcl USING g_enterprise,
                                       g_mmaf_m.mmaf001,g_mmag_d[g_detail_idx].mmag002,g_mmag_d[g_detail_idx].mmag003  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammq300_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmah_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammq300_bcl2 USING g_enterprise,
                                             g_mmaf_m.mmaf001,g_mmag2_d[g_detail_idx].mmah002
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammq300_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmai_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammq300_bcl3 USING g_enterprise,
                                             g_mmaf_m.mmaf001,g_mmag3_d[g_detail_idx].mmai002
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammq300_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "mmaj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammq300_bcl4 USING g_enterprise,
                                             g_mmaf_m.mmaf001,g_mmag4_d[g_detail_idx].mmaj002
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammq300_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.main" ver="9" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmaf001,mmaf002,mmaf008,mmaf009,mmaf003,mmaf004,mmaf015,mmaf013,mmaf014, 
       mmaf016,'',mmaf017,'',mmaf010,mmaf011,mmaf012,mmaf018,'',mmaf019,''", 
                      " FROM mmaf_t",
                      " WHERE mmafent= ? AND mmaf001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammq300_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmaf001,mmaf002,mmaf008,mmaf009,mmaf003,mmaf004,mmaf015,mmaf013,mmaf014, 
       mmaf016,mmaf017,mmaf010,mmaf011,mmaf012,mmaf018,mmaf019,t1.pmaal003 ,t2.oofa011 ,t3.ooefl003 , 
       t4.oofa011",
               " FROM mmaf_t",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=mmaf016 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=mmaf017  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=mmaf018 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=mmaf019  ",
 
               " WHERE mmafent = '" ||g_enterprise|| "' AND mmaf001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammq300_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammq300 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammq300_init()   
 
      #進入選單 Menu (="N")
      CALL ammq300_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammq300
      
   END IF 
   
   CLOSE ammq300_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="ammq300.modify" ver="7" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammq300_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmaf_m.mmaf001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

 
   ERROR ""
  
   LET g_mmaf001_t = g_mmaf_m.mmaf001
 
   CALL s_transaction_begin()
   
   OPEN ammq300_cl USING g_enterprise,g_mmaf_m.mmaf001
   IF STATUS THEN
      CALL cl_err("OPEN ammq300_cl:", STATUS, 1)
      CLOSE ammq300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmaf_m.mmaf001,SQLCA.sqlcode,0)
      CLOSE ammq300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammq300_show()
   WHILE TRUE
      LET g_mmaf001_t = g_mmaf_m.mmaf001
 
      
      #寫入修改者/修改日期資訊(單頭)
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammq300_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmaf_m.* = g_mmaf_m_t.*
         CALL ammq300_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
 
                  
      #若單頭key欄位有變更
      IF g_mmaf_m.mmaf001 != g_mmaf001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmag_t SET mmag001 = g_mmaf_m.mmaf001
 
          WHERE mmagent = g_enterprise AND mmag001 = g_mmaf001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmag_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmag_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmah_t
            SET mmah001 = g_mmaf_m.mmaf001
 
          WHERE mmahent = g_enterprise AND
                mmah001 = g_mmaf001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmah_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmah_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE mmai_t
            SET mmai001 = g_mmaf_m.mmaf001
 
          WHERE mmaient = g_enterprise AND
                mmai001 = g_mmaf001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmai_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmai_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE mmaj_t
            SET mmaj001 = g_mmaf_m.mmaf001
 
          WHERE mmajent = g_enterprise AND
                mmaj001 = g_mmaf001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmaj_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmaj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmaf_m.mmaf001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammq300_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmaf_m.mmaf001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="ammq300.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammq300.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammq300.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammq300_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmag_d.clear()
   CALL g_mmag2_d.clear()
   CALL g_mmag3_d.clear()
   CALL g_mmag4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammq300_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammq300_browser_fill("")
      CALL ammq300_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL ammq300_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammq300_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammq300_reproduce()
   DEFINE l_newno     LIKE mmaf_t.mmaf001 
   DEFINE l_oldno     LIKE mmaf_t.mmaf001 
 
   DEFINE l_master    RECORD LIKE mmaf_t.*
   DEFINE l_detail    RECORD LIKE mmag_t.*
   DEFINE l_detail2    RECORD LIKE mmah_t.*
 
   DEFINE l_detail3    RECORD LIKE mmai_t.*
 
   DEFINE l_detail4    RECORD LIKE mmaj_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_mmaf_m.mmaf001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmaf001_t = g_mmaf_m.mmaf001
 
    
   LET g_mmaf_m.mmaf001 = ""
 
    
   CALL ammq300_set_entry('a')
   CALL ammq300_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammq300_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmaf001 = '", g_mmaf_m.mmaf001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammq300_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmaf001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammq300_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammq300.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammq300_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmaf001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammq300_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammq300.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammq300_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmaf_m.mmaf001
   LET g_pk_array[1].column = 'mmaf001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammq300.show" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammq300_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmaf_m_t.* = g_mmaf_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammq300_b_fill() #單身填充
      CALL ammq300_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammq300_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008,g_mmaf_m.mmaf009,g_mmaf_m.mmaf003, 
       g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014,g_mmaf_m.mmaf016,g_mmaf_m.mmaf016_desc, 
       g_mmaf_m.mmaf017,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019,g_mmaf_m.mmaf019_desc
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmag_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmag2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmag3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmag4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammq300_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammq300.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammq300.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammq300_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmaf001 = g_mmaf_m.mmaf001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammq300_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.ui_dialog" ver="22" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammq300_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammq300_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmaf001 = g_mmaf001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_mmag_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammq300_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmag2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammq300_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmag3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL ammq300_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmag4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammq300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL ammq300_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammq300_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammq300_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammq300_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammq300_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammq300_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammq300_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL ammq300_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammq300_idx_chk()
            
         ON ACTION previous
            CALL ammq300_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammq300_idx_chk()
            
         ON ACTION jump
            CALL ammq300_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammq300_idx_chk()
            
         ON ACTION next
            CALL ammq300_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammq300_idx_chk()
            
         ON ACTION last
            CALL ammq300_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammq300_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_query
            LET g_action_choice="open_query"
            IF cl_auth_chk_act("open_query") THEN
               
               #add-point:ON ACTION open_query
               {<point name="menu.open_query" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammq300_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammq300_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammq300_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammq300_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammq300.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammq300_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmaf_m.mmaf001 = g_browser[g_current_idx].b_mmaf001   
 
   EXECUTE ammq300_master_referesh USING g_mmaf_m.mmaf001 INTO g_mmaf_m.mmaf001,g_mmaf_m.mmaf002,g_mmaf_m.mmaf008, 
       g_mmaf_m.mmaf009,g_mmaf_m.mmaf003,g_mmaf_m.mmaf004,g_mmaf_m.mmaf015,g_mmaf_m.mmaf013,g_mmaf_m.mmaf014, 
       g_mmaf_m.mmaf016,g_mmaf_m.mmaf017,g_mmaf_m.mmaf010,g_mmaf_m.mmaf011,g_mmaf_m.mmaf012,g_mmaf_m.mmaf018, 
       g_mmaf_m.mmaf019,g_mmaf_m.mmaf016_desc,g_mmaf_m.mmaf017_desc,g_mmaf_m.mmaf018_desc,g_mmaf_m.mmaf019_desc 

   CALL ammq300_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammq300.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammq300_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammq300_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammq300_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammq300_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammq300_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammq300.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammq300_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmag_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmag_t 
         SET (mmag001,
              mmag002,mmag003
              ,mmag004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmag_d[g_detail_idx].mmag004) 
         WHERE mmagent = g_enterprise AND mmag001 = ps_keys_bak[1] AND mmag002 = ps_keys_bak[2] AND mmag003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmag_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmag_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmah_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmah_t 
         SET (mmah001,
              mmah002
              ,mmah003,mmah004,mmah005,mmah006) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmag2_d[g_detail_idx].mmah003,g_mmag2_d[g_detail_idx].mmah004,g_mmag2_d[g_detail_idx].mmah005, 
                  g_mmag2_d[g_detail_idx].mmah006) 
         WHERE mmahent = g_enterprise AND mmah001 = ps_keys_bak[1] AND mmah002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmah_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmah_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmai_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE mmai_t 
         SET (mmai001,
              mmai002
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE mmaient = g_enterprise AND mmai001 = ps_keys_bak[1] AND mmai002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmai_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmai_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmaj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE mmaj_t 
         SET (mmaj001,
              mmaj002
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE mmajent = g_enterprise AND mmaj001 = ps_keys_bak[1] AND mmaj002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmaj_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmaj_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
