<add_points prog="ammm320_01" std_prog="ammm320_01" erpver="1.0" module="AMM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.mmap003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmap003  #顯示到畫面上

            NEXT FIELD mmap003                     #返回原欄位

]]>
</point>
  <point name="input.a.page1.mmap001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmap002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmap003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            LET g_mmap_d[l_ac].mmap003_desc = ''            
            IF NOT cl_null(g_mmap_d[l_ac].mmap003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmap_d[l_ac].mmap003 != g_mmap_d_t.mmap003 OR g_mmap_d_t.mmap003 IS NULL)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmap_t WHERE "||"mmapent = '" ||g_enterprise|| "' AND "||"mmap001 = '"||g_mmap_d[l_ac].mmap001 ||"' AND "||"mmap002 = '"||g_mmap_d[l_ac].mmap002 ||"' AND "|| "mmap003 = '"||g_mmap_d[l_ac].mmap003 ||"'",'std-00004',0) THEN 
                     LET g_mmap_d[l_ac].mmap003 = g_mmap_d_t.mmap003
                     CALL ammm320_01_mmap003_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL ammm320_01_chk_mmap003()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmap_d[l_ac].mmap003,g_errno,1)
                     LET g_mmap_d[l_ac].mmap003 = g_mmap_d_t.mmap003
                     CALL ammm320_01_mmap003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL ammm320_01_mmap003_ref()  ]]>
</point>
  <point name="input.a.page1.mmap004" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[
            IF NOT cl_null(g_mmap_d[l_ac].mmap004) THEN 
            END IF 
]]>
</point>
  <point name="input.c.page1.mmap003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_mmap_d[l_ac].mmap003        #給予default值
            CALL q_ooef001()                                        #呼叫開窗
            LET g_mmap_d[l_ac].mmap003 = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY g_mmap_d[l_ac].mmap003 TO mmap003               #顯示到畫面上
            CALL ammm320_01_mmap003_ref()
            NEXT FIELD mmap003                                      #返回原欄位]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmap_d[l_ac].mmap003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmap_d[l_ac].mmap003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmap_d[l_ac].mmap003_desc
]]>
</point>
  <point name="function.ammm320_01_mmap003_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION ammm320_01_mmap003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmap_d[l_ac].mmap003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmap_d[l_ac].mmap003_desc = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_mmap_d[l_ac].mmap003_desc
END FUNCTION]]>
</point>
  <point name="function.ammm320_01_b_fill" cite_std="N" status="u" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION ammm320_01_b_fill(p_prog,p_mman001)
   DEFINE p_prog          LIKE mmap_t.mmap001
   DEFINE p_mman001       LIKE mmap_t.mmap002
   DEFINE l_sql           STRING
   DEFINE l_ac_t          LIKE type_t.num5

   LET l_sql = " SELECT mmap001,mmap002,mmap003,'',",
               "        mmap005,mmap006,mmap007,mmap004,mmapstus ",
               "   FROM mmap_t ",
               "  WHERE mmapent   = ",g_enterprise,
               "    AND mmap001 = '",p_prog,"' ",
               "    AND mmap002 = '",p_mman001,"' ",
               "  ORDER BY mmap003 " 
   PREPARE ammm320_01_pb FROM l_sql
   DECLARE b_fill_curs CURSOR FOR ammm320_01_pb 
   
   CALL g_mmap_d.clear()
   LET l_ac_t = l_ac
   LET l_ac = 1
   FOREACH b_fill_curs INTO g_mmap_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      CALL ammm320_01_mmap003_ref()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH 
   CALL g_mmap_d.deleteElement(g_mmap_d.getLength())   
   LET g_rec_b = l_ac - 1
   DISPLAY g_rec_b TO FORMONLY.cnt
   LET l_ac = l_ac_t
   CLOSE b_fill_curs
   FREE ammm320_01_pb
END FUNCTION]]>
</point>
  <point name="function.ammm320_01_chk_mmap003" cite_std="N" status="u" ver="1" src="s" new="Y" cite_ver="" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION ammm320_01_chk_mmap003()
   DEFINE l_stus    LIKE type_t.chr1
   
   LET g_errno = ''
   LET l_stus = ''
   SELECT ooefstus INTO l_stus FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_mmap_d[l_ac].mmap003
   CASE WHEN SQLCA.SQLCODE = 100   LET g_errno = 'aoo-00016'
        WHEN l_stus='N'            LET g_errno = 'aoo-00012'
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammm320_01_ui_dialog" cite_std="N" status="u" ver="1" src="s" new="Y" cite_ver="" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION ammm320_01_ui_dialog()
   DISPLAY ARRAY g_mmap_d TO s_detail1.* ATTRIBUTE(COUNT=g_rec_b)
END FUNCTION]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CLOSE ammm320_01_cs
            CALL s_transaction_end('Y',0) ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[         BEFORE ROW
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            
            IF g_rec_b >= l_ac THEN  
               LET l_cmd='u'
               LET g_mmap_d_t.* = g_mmap_d[l_ac].*  #BACKUP
               OPEN ammm320_01_cs USING p_prog,p_mman001,g_mmap_d[l_ac].mmap003

               IF SQLCA.sqlcode THEN
                  CALL cl_err("ammm320_01_cs",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm320_01_cs INTO g_mmap_d[l_ac].*
                  IF SQLCA.sqlcode THEN
                     LET l_lock_sw = "Y"
                  END IF            
                  CALL ammm320_01_mmap003_ref()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
         BEFORE INSERT
            CALL s_transaction_begin()
            LET l_cmd = 'a'
            INITIALIZE g_mmap_d_t.* TO NULL
            INITIALIZE g_mmap_d[l_ac].* TO NULL 
            LET g_mmap_d[l_ac].mmap001 = p_prog
            LET g_mmap_d[l_ac].mmap002 = p_mman001
            LET g_mmap_d[l_ac].mmap004 = 0
            LET g_mmap_d[l_ac].mmap005 = 'N'
            LET g_mmap_d[l_ac].mmap006 = 'N'
            LET g_mmap_d[l_ac].mmap007 = 'N'
            LET g_mmap_d[l_ac].mmapstus = 'Y'
            LET g_mmap_d_t.* = g_mmap_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()  
            
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            INITIALIZE l_mmap.* TO NULL
            LET l_mmap.mmapent = g_enterprise        
            LET l_mmap.mmap001 = g_mmap_d[l_ac].mmap001
            LET l_mmap.mmap002 = g_mmap_d[l_ac].mmap002
            LET l_mmap.mmap003 = g_mmap_d[l_ac].mmap003
            LET l_mmap.mmap004 = g_mmap_d[l_ac].mmap004
            LET l_mmap.mmap005 = g_mmap_d[l_ac].mmap005
            LET l_mmap.mmap006 = g_mmap_d[l_ac].mmap006
            LET l_mmap.mmap007 = g_mmap_d[l_ac].mmap007
            LET l_mmap.mmapstus = g_mmap_d[l_ac].mmapstus
         
            SELECT COUNT(*) INTO l_count FROM mmap_t 
             WHERE mmapent = g_enterprise
               AND mmap001 = p_prog
               AND mmap002 = p_mman001
               AND mmap003   = g_mmap_d[l_ac].mmap003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO mmap_t VALUES (l_mmap.*)
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmap_t",SQLCA.sqlcode,1)
                  CONTINUE DIALOG
               END IF
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmap_d[l_ac].* TO NULL
               CALL s_transaction_end('N',0)
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode THEN
               CALL cl_err("mmap_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N',0)                   
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y',0)
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
 
        BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(p_prog) AND NOT cl_null(p_mman001) AND 
               NOT cl_null(g_mmap_d_t.mmap003)THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               DELETE FROM mmap_t
                WHERE mmapent = g_enterprise 
                  AND mmap001 = p_prog
                  AND mmap001 = p_mman001
                  AND mmap003 = g_mmap_d_t.mmap003
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmap_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N',0)
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y',0)
               END IF 
               CLOSE ammm320_01_cs
            END IF 
            
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmap_d[l_ac].* = g_mmap_d_t.*
               CLOSE ammm320_01_cs
               CALL s_transaction_end('N',0)
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(l_mmap.mmap001,-263,1)
               LET g_mmap_d[l_ac].* = g_mmap_d_t.*
            ELSE
               UPDATE mmap_t SET (mmap003,mmap004,mmap005,mmap006,mmap007,mmapstus) = 
                                 (g_mmap_d[l_ac].mmap003,g_mmap_d[l_ac].mmap004,g_mmap_d[l_ac].mmap005,
                                  g_mmap_d[l_ac].mmap006,g_mmap_d[l_ac].mmap007,g_mmap_d[l_ac].mmapstus)
                WHERE mmapent = g_enterprise
                  AND mmap001 = p_prog
                  AND mmap002 = p_mman001
                  AND mmap003 = g_mmap_d_t.mmap003
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmap_t",SQLCA.sqlcode,1)   
                  LET g_mmap_d[l_ac].* = g_mmap_d_t.*
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)               
               END IF
            END IF
            
         AFTER ROW
            CLOSE ammm320_01_cs  ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE p_prog          LIKE mmap_t.mmap001
   DEFINE p_mman001       LIKE mmap_t.mmap002
   DEFINE l_mmap          RECORD LIKE mmap_t.*
   DEFINE l_forupd_sql    STRING
   DEFINE l_lock_sw       LIKE type_t.chr1
   DEFINE l_stus          LIKE type_t.chr1    ]]>
</point>
  <point name="input.get_var" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   p_prog,p_mman001 ]]>
</point>
  <point name="input.post_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET INT_FLAG = FALSE
   CLOSE ammm320_01_cs
   CALL s_transaction_end('Y',0) ]]>
</point>
  <point name="input.pre_input" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   WHENEVER ERROR CALL cl_err_msg_log
   CALL ammm320_01_b_fill(p_prog,p_mman001)
   
   LET l_stus = ''
   SELECT mmanstus INTO l_stus FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = p_mman001
   IF l_stus != 'N' THEN
      CALL ammm320_01_ui_dialog()
      LET INT_FLAG = FALSE
      CLOSE WINDOW w_ammm320_01 
      RETURN
   END IF
   LET l_forupd_sql = " SELECT mmap001,mmap002,mmap003,'',",
                      "        mmap005,mmap006,mmap007,mmap004,mmapstus ",
                      "   FROM mmap_t ",
                      "  WHERE mmapent = '",g_enterprise,"' ",
                      "    AND mmap001 = ? AND mmap002 = ? AND mmap003 = ? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)  
   PREPARE ammm320_01_b FROM l_forupd_sql
   DECLARE ammm320_01_cs CURSOR FOR ammm320_01_b 
   LET INT_FLAG = FALSE  ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmap005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmap006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmap007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmap004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmap004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmapstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmapstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmapstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmap004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmapstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.before_close" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="ammm320_01.description" ver="4" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000057
#+ 
#+ Filename...: ammm320_01
#+ Description: ...
#+ Creator....: 01752(2013/11/22)
#+ Modifier...: 01752(2013/11/25)
#+ Buildtype..: 應用 c02b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammm320_01.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_mmap_d        RECORD
       mmap001 LIKE mmap_t.mmap001, 
   mmap002 LIKE mmap_t.mmap002, 
   mmap003 LIKE mmap_t.mmap003, 
   mmap003_desc LIKE type_t.chr500, 
   mmap005 LIKE mmap_t.mmap005, 
   mmap006 LIKE mmap_t.mmap006, 
   mmap007 LIKE mmap_t.mmap007, 
   mmap004 LIKE mmap_t.mmap004, 
   mmapstus LIKE mmap_t.mmapstus
       END RECORD
 
 
DEFINE g_mmap_d          DYNAMIC ARRAY OF type_g_mmap_d
DEFINE g_mmap_d_t        type_g_mmap_d
 
 
DEFINE g_mmap001_t   LIKE mmap_t.mmap001    #Key值備份
DEFINE g_mmap002_t      LIKE mmap_t.mmap002    #Key值備份
DEFINE g_mmap003_t      LIKE mmap_t.mmap003    #Key值備份
 
 
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rec_b               LIKE type_t.num5  
DEFINE g_detail_idx          LIKE type_t.num5  
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
    
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point	
]]>
</section>
  <section id="ammm320_01.input" ver="2" status="" src="s">
<![CDATA[#+ 資料輸入
PUBLIC FUNCTION ammm320_01(--)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE l_cmd           LIKE type_t.chr5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_ammm320_01 WITH FORM cl_ap_formpath("amm","ammm320_01")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #輸入前處理
   #add-point:單身前置處理
   {<point name="input.pre_input"/>}
   #end add-point
  
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT ARRAY g_mmap_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         #自訂ACTION
         #add-point:單身前置處理
         {<point name="input.action"/>}
         #end add-point
         
         #自訂ACTION(detail_input)
         
         
         BEFORE INPUT
            #add-point:單身輸入前處理
            {<point name="input.before_input"/>}
            #end add-point
          
         #---------------------<  Detail: page1  >---------------------
         #----<<mmap001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmap001
            #add-point:BEFORE FIELD mmap001
            {<point name="input.b.page1.mmap001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmap001
            
            #add-point:AFTER FIELD mmap001
            {<point name="input.a.page1.mmap001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmap001
            #add-point:ON CHANGE mmap001
            {<point name="input.g.page1.mmap001" />}
            #END add-point
 
         #----<<mmap002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmap002
            #add-point:BEFORE FIELD mmap002
            {<point name="input.b.page1.mmap002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmap002
            
            #add-point:AFTER FIELD mmap002
            {<point name="input.a.page1.mmap002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmap002
            #add-point:ON CHANGE mmap002
            {<point name="input.g.page1.mmap002" />}
            #END add-point
 
         #----<<mmap003>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmap003
            
            #add-point:AFTER FIELD mmap003
            {<point name="input.a.page1.mmap003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmap003
            #add-point:BEFORE FIELD mmap003
            {<point name="input.b.page1.mmap003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmap003
            #add-point:ON CHANGE mmap003
            {<point name="input.g.page1.mmap003" />}
            #END add-point
 
         #----<<mmap003_desc>>----
         #----<<mmap005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmap005
            #add-point:BEFORE FIELD mmap005
            {<point name="input.b.page1.mmap005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmap005
            
            #add-point:AFTER FIELD mmap005
            {<point name="input.a.page1.mmap005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmap005
            #add-point:ON CHANGE mmap005
            {<point name="input.g.page1.mmap005" />}
            #END add-point
 
         #----<<mmap006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmap006
            #add-point:BEFORE FIELD mmap006
            {<point name="input.b.page1.mmap006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmap006
            
            #add-point:AFTER FIELD mmap006
            {<point name="input.a.page1.mmap006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmap006
            #add-point:ON CHANGE mmap006
            {<point name="input.g.page1.mmap006" />}
            #END add-point
 
         #----<<mmap007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmap007
            #add-point:BEFORE FIELD mmap007
            {<point name="input.b.page1.mmap007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmap007
            
            #add-point:AFTER FIELD mmap007
            {<point name="input.a.page1.mmap007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmap007
            #add-point:ON CHANGE mmap007
            {<point name="input.g.page1.mmap007" />}
            #END add-point
 
         #----<<mmap004>>----
         #此段落由子樣板a02產生
         AFTER FIELD mmap004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmap_d[l_ac].mmap004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mmap004
            END IF
 
 
            #add-point:AFTER FIELD mmap004
            {<point name="input.a.page1.mmap004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmap004
            #add-point:BEFORE FIELD mmap004
            {<point name="input.b.page1.mmap004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmap004
            #add-point:ON CHANGE mmap004
            {<point name="input.g.page1.mmap004" />}
            #END add-point
 
         #----<<mmapstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mmapstus
            #add-point:BEFORE FIELD mmapstus
            {<point name="input.b.page1.mmapstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmapstus
            
            #add-point:AFTER FIELD mmapstus
            {<point name="input.a.page1.mmapstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmapstus
            #add-point:ON CHANGE mmapstus
            {<point name="input.g.page1.mmapstus" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mmap001>>----
         #Ctrlp:input.c.page1.mmap001
         ON ACTION controlp INFIELD mmap001
            #add-point:ON ACTION controlp INFIELD mmap001
            {<point name="input.c.page1.mmap001" />}
            #END add-point
 
         #----<<mmap002>>----
         #Ctrlp:input.c.page1.mmap002
         ON ACTION controlp INFIELD mmap002
            #add-point:ON ACTION controlp INFIELD mmap002
            {<point name="input.c.page1.mmap002" />}
            #END add-point
 
         #----<<mmap003>>----
         #Ctrlp:input.c.page1.mmap003
         ON ACTION controlp INFIELD mmap003
            #add-point:ON ACTION controlp INFIELD mmap003
            {<point name="input.c.page1.mmap003" />}
            #END add-point
 
         #----<<mmap003_desc>>----
         #----<<mmap005>>----
         #Ctrlp:input.c.page1.mmap005
         ON ACTION controlp INFIELD mmap005
            #add-point:ON ACTION controlp INFIELD mmap005
            {<point name="input.c.page1.mmap005" />}
            #END add-point
 
         #----<<mmap006>>----
         #Ctrlp:input.c.page1.mmap006
         ON ACTION controlp INFIELD mmap006
            #add-point:ON ACTION controlp INFIELD mmap006
            {<point name="input.c.page1.mmap006" />}
            #END add-point
 
         #----<<mmap007>>----
         #Ctrlp:input.c.page1.mmap007
         ON ACTION controlp INFIELD mmap007
            #add-point:ON ACTION controlp INFIELD mmap007
            {<point name="input.c.page1.mmap007" />}
            #END add-point
 
         #----<<mmap004>>----
         #Ctrlp:input.c.page1.mmap004
         ON ACTION controlp INFIELD mmap004
            #add-point:ON ACTION controlp INFIELD mmap004
            {<point name="input.c.page1.mmap004" />}
            #END add-point
 
         #----<<mmapstus>>----
         #Ctrlp:input.c.page1.mmapstus
         ON ACTION controlp INFIELD mmapstus
            #add-point:ON ACTION controlp INFIELD mmapstus
            {<point name="input.c.page1.mmapstus" />}
            #END add-point
 
 
 
         AFTER INPUT
            #add-point:單身輸入後處理
            {<point name="input.after_input"/>}
            #end add-point
            
      END INPUT
      
 
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point
   
   #畫面關閉
   CLOSE WINDOW w_ammm320_01 
   
   #add-point:input段after input 
   {<point name="input.post_input"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammm320_01.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="ammm320_01.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
</add_points>