<add_points prog="ammt322" std_prog="ammt322" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmda002  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmda002                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdacnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdacnfid  #顯示到畫面上

            NEXT FIELD mmdacnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdacrtdp  #顯示到畫面上

            NEXT FIELD mmdacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdacrtid  #顯示到畫面上

            NEXT FIELD mmdacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdadocno  #顯示到畫面上

            NEXT FIELD mmdadocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdamodid  #顯示到畫面上

            NEXT FIELD mmdamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdaowndp  #顯示到畫面上

            NEXT FIELD mmdaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdaownid  #顯示到畫面上

            NEXT FIELD mmdaownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdb001  #顯示到畫面上

            NEXT FIELD mmdb001                     #返回原欄位

]]>
</point>
  <point name="input.a.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                LET  g_mmda_m.mmda002_desc = ''
            DISPLAY BY NAME  g_mmda_m.mmda002_desc
            IF NOT cl_null(g_mmda_m.mmda002) THEN
               IF NOT s_azzi650_chk_exist('2055',g_mmda_m.mmda002) THEN
                  LET  g_mmda_m.mmda002 = g_mmda_m_t.mmda002
                  CALL ammt322_mmda002_ref()
                  NEXT FIELD CURRENT
               ELSE
                  CALL ammt322_mmda002_ref()
               END IF
            END IF
]]>
</point>
  <point name="input.a.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmda_m.mmdadocno)  THEN 
               IF p_cmd = 'a' THEN
                 IF NOT ammt322_mmdadocno_chk() THEN
                    LET g_mmda_m.mmdadocno = g_mmda_m_t.mmdadocno
                    NEXT FIELD CURRENT 
                 END IF
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmda_m.mmdadocno != g_mmdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmda_t WHERE "||"mmdaent = '" ||g_enterprise|| "' AND "||"mmdadocno = '"||g_mmda_m.mmdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                LET g_mmda_m.mmdasite_desc = ' '
            DISPLAY BY NAME g_mmda_m.mmdasite_desc
            IF NOT cl_null(g_mmda_m.mmdasite) THEN
                INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_mmda_m.mmdasite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_mmda_m.mmdasite = g_mmda_m_t.mmdasite
                     CALL ammt322_mmdasite_ref()
                     NEXT FIELD CURRENT
                  END IF
            END IF
            CALL ammt322_mmdasite_ref()
            LET g_mmda_m.mmdaunit = g_mmda_m.mmdasite
]]>
</point>
  <point name="input.a.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a05產生
            IF  g_mmda_m.mmdadocno IS NOT NULL AND g_mmdb_d[g_detail_idx].mmdbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmda_m.mmdadocno != g_mmdadocno_t OR g_mmdb_d[g_detail_idx].mmdbseq != g_mmdb_d_t.mmdbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmdb_t WHERE "||"mmdbent = '" ||g_enterprise|| "' AND "||"mmdbdocno = '"||g_mmda_m.mmdadocno ||"' AND "|| "mmdbseq = '"||g_mmdb_d[g_detail_idx].mmdbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.mmda002" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmda_m.mmda002             #給予default值
            LET g_qryparam.default2 = "" #g_mmda_m.oocq010 #參考欄位七

            #給予arg
            LET g_qryparam.arg1 = "2055" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmda_m.mmda002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmda_m.oocq010 = g_qryparam.return2 #參考欄位七

            DISPLAY g_mmda_m.mmda002 TO mmda002              #顯示到畫面上
            #DISPLAY g_mmda_m.oocq010 TO oocq010 #參考欄位七
            CALL ammt322_mmda002_ref()
            NEXT FIELD mmda002                          #返回原欄位

]]>
</point>
  <point name="input.c.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmda_m.mmdadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = 'ammt322' #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmda_m.mmdadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmda_m.mmdadocno TO mmdadocno              #顯示到畫面上

            NEXT FIELD mmdadocno                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmdb_d[l_ac].mmdb001             #給予default值

            #給予arg

            CALL q_mmaq001_2()                                #呼叫開窗

            LET g_mmdb_d[l_ac].mmdb001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmdb_d[l_ac].mmdb001 TO mmdb001              #顯示到畫面上

            NEXT FIELD mmdb001                          #返回原欄位

]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      #               CALL ammt322_mmdasite_ref()
      #      
      #      CALL ammt322_mmda002_ref()
      #      
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdaownid
      #      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdaownid_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdaownid_desc
      #
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdaowndp
      #      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdaowndp_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdaowndp_desc
      #
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdacrtid
      #      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdacrtid_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdacrtid_desc
      #
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdacrtdp
      #      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdacrtdp_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdacrtdp_desc
      #
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdamodid
      #      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdamodid_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdamodid_desc
      #
      #      INITIALIZE g_ref_fields TO NULL
      #      LET g_ref_fields[1] = g_mmda_m.mmdacnfid
      #      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      #      LET g_mmda_m.mmdacnfid_desc = '', g_rtn_fields[1] , ''
      #      DISPLAY BY NAME g_mmda_m.mmdacnfid_desc
]]>
</point>
  <point name="function.ammt322_mmda002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt322_mmda002_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmda002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmda_m.mmda002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmda_m.mmda002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmda_m.mmda002_desc
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdadocno_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdadocno_chk()
   IF NOT s_aooi200_chk_slip(g_site,'',g_mmda_m.mmdadocno,g_prog) THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF 
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdasite_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt322_mmdasite_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdasite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmda_m.mmdasite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmda_m.mmdasite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmda_m.mmdasite_desc
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdb001_other" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdb001_other()
   SELECT mmaq013,           --最後消費日
          NVL(mmaq014,0),    --累計消費次數
          NVL(mmaq015,0),    --累計消費額
          NVL(mmaq016,0),    --累計積點
          NVL(mmaq017,0),    --已兌換積點
          NVL(mmaq018,0),    --剩餘積點
          NVL(mmaq009,0),    --會員卡儲值餘額
          NVL(mmaq010,0),    --會員卡儲值折扣
          NVL(mmaq011,0),    --累計加值金額
          NVL(mmaq012,0),    --累計送抵現值金額
          NVL(mmaq032,0)     --累計儲值成本
   INTO   g_mmdb_d[l_ac].mmdb002,
          g_mmdb_d[l_ac].mmdb004,
          g_mmdb_d[l_ac].mmdb006,
          g_mmdb_d[l_ac].mmdb008,
          g_mmdb_d[l_ac].mmdb010,
          g_mmdb_d[l_ac].mmdb012,
          g_mmdb_d[l_ac].mmdb014,
          g_mmdb_d[l_ac].mmdb016,
          g_mmdb_d[l_ac].mmdb018,
          g_mmdb_d[l_ac].mmdb020,
          g_mmdb_d[l_ac].mmdb022
    FROM mmaq_t WHERE mmaqent = g_enterprise AND mmaq001 = g_mmdb_d[l_ac].mmdb001  

    IF g_mmda_m.mmda001 = '1' THEN
      LET g_mmdb_d[l_ac].mmdb015 = ''#g_mmdb_d[l_ac].mmdb014
      LET g_mmdb_d[l_ac].mmdb017 = ''#g_mmdb_d[l_ac].mmdb016
      LET g_mmdb_d[l_ac].mmdb019 = ''#g_mmdb_d[l_ac].mmdb018
      LET g_mmdb_d[l_ac].mmdb021 = ''#g_mmdb_d[l_ac].mmdb020
      LET g_mmdb_d[l_ac].mmdb023 = ''#g_mmdb_d[l_ac].mmdb022
    ELSE 
      LET g_mmdb_d[l_ac].mmdb003 = ''
      LET g_mmdb_d[l_ac].mmdb005 = ''
      LET g_mmdb_d[l_ac].mmdb007 = ''      
      LET g_mmdb_d[l_ac].mmdb009 = ''#g_mmdb_d[l_ac].mmdb008
      LET g_mmdb_d[l_ac].mmdb011 = ''#g_mmdb_d[l_ac].mmdb010
      LET g_mmdb_d[l_ac].mmdb013 = ''#g_mmdb_d[l_ac].mmdb012
    END IF
    CALL ammt322_mmdb001_regen()
    DISPLAY BY NAME g_mmdb_d[l_ac].mmdb002,
                    g_mmdb_d[l_ac].mmdb004,
                    g_mmdb_d[l_ac].mmdb006,
                    g_mmdb_d[l_ac].mmdb008,
                    g_mmdb_d[l_ac].mmdb010,
                    g_mmdb_d[l_ac].mmdb012,
                    g_mmdb_d[l_ac].mmdb014,
                    g_mmdb_d[l_ac].mmdb016,
                    g_mmdb_d[l_ac].mmdb018,
                    g_mmdb_d[l_ac].mmdb020,
                    g_mmdb_d[l_ac].mmdb022,
                    g_mmdb_d[l_ac].mmdb003,
                    g_mmdb_d[l_ac].mmdb005,
                    g_mmdb_d[l_ac].mmdb007,
                    g_mmdb_d[l_ac].mmdb009,
                    g_mmdb_d[l_ac].mmdb011,
                    g_mmdb_d[l_ac].mmdb013,
                    g_mmdb_d[l_ac].mmdb015,
                    g_mmdb_d[l_ac].mmdb017,
                    g_mmdb_d[l_ac].mmdb019,
                    g_mmdb_d[l_ac].mmdb021,
                    g_mmdb_d[l_ac].mmdb023
      
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdb001_other_init" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdb001_other_init()
  
    LET g_mmdb_d[l_ac].mmdb002 = ''
    LET g_mmdb_d[l_ac].mmdb004 = ''
    LET g_mmdb_d[l_ac].mmdb006 = ''
    LET g_mmdb_d[l_ac].mmdb008 = ''
    LET g_mmdb_d[l_ac].mmdb010 = ''
    LET g_mmdb_d[l_ac].mmdb012 = ''
    LET g_mmdb_d[l_ac].mmdb014 = ''
    LET g_mmdb_d[l_ac].mmdb016 = ''
    LET g_mmdb_d[l_ac].mmdb018 = ''
    LET g_mmdb_d[l_ac].mmdb020 = ''
    LET g_mmdb_d[l_ac].mmdb022 = ''
    
    LET g_mmdb_d[l_ac].mmdb003 = ''
    LET g_mmdb_d[l_ac].mmdb005 = ''
    LET g_mmdb_d[l_ac].mmdb007 = ''
    LET g_mmdb_d[l_ac].mmdb009 = ''
    LET g_mmdb_d[l_ac].mmdb011 = ''
    LET g_mmdb_d[l_ac].mmdb013 = ''
    LET g_mmdb_d[l_ac].mmdb015 = ''
    LET g_mmdb_d[l_ac].mmdb017 = ''
    LET g_mmdb_d[l_ac].mmdb019 = ''
    LET g_mmdb_d[l_ac].mmdb021 = ''
    LET g_mmdb_d[l_ac].mmdb023 = ''
    
    
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdb001_regen" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 根據重計算類型 重新計算單身會員卡資料
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdb001_regen()
DEFINE l_mmdb005   LIKE mmdb_t.mmdb005
DEFINE l_mmdb007   LIKE mmdb_t.mmdb007
DEFINE l_mmdb009   LIKE mmdb_t.mmdb009
DEFINE l_mmdb011   LIKE mmdb_t.mmdb011



  
  #重計算類型 = 1.消費/積點資料
  IF g_mmda_m.mmda001 = '1' THEN
      SELECT MAX(rtjadate),          --最後消費日
         COUNT(*),                  --累計消費次數
         NVL(SUM(rtja031),0)        --累計消費金額
       INTO g_mmdb_d[l_ac].mmdb003,
            l_mmdb005,
            l_mmdb007
       FROM rtja_t
      WHERE rtjaent = g_enterprise AND rtja001 =  g_mmdb_d[l_ac].mmdb001
        AND rtjastus <>'X'
        GROUP BY rtja001
        
     #抓不到銷售單的最後消費日，抓取卡資料檔的期初最後消費日
     IF cl_null(g_mmdb_d[l_ac].mmdb003) THEN
        SELECT mmaq040 INTO g_mmdb_d[l_ac].mmdb003 FROM mmaq_t
         WHERE mmaqent = g_enterprise AND mmaq001 = g_mmdb_d[l_ac].mmdb001
     END IF
    
     IF cl_null(l_mmdb007) THEN
        LET l_mmdb007 = 0
     END IF
     
     SELECT NVL(mmaq041,0) + l_mmdb005,NVL(mmaq042,0)+l_mmdb007 
       INTO g_mmdb_d[l_ac].mmdb005,g_mmdb_d[l_ac].mmdb007 FROM mmaq_t
      WHERE mmaqent = g_enterprise AND mmaq001 = g_mmdb_d[l_ac].mmdb001
   
     SELECT NVL(SUM(CASE WHEN mmar009> 0 THEN mmar009 ELSE 0 END),0),    --累計積點
            (-1)*NVL(SUM(CASE WHEN mmar009<0 THEN mmar009 ELSE 0 END),0)--已兌換積點
       INTO g_mmdb_d[l_ac].mmdb009,
            g_mmdb_d[l_ac].mmdb011     
       FROM mmar_t
      WHERE mmarent = g_enterprise AND mmar001 = g_mmdb_d[l_ac].mmdb001
      GROUP BY mmar001
 
      LET g_mmdb_d[l_ac].mmdb013 = g_mmdb_d[l_ac].mmdb009 -g_mmdb_d[l_ac].mmdb011   
  END IF
  
  #重計算類型 = 1.儲值資料
  IF g_mmda_m.mmda001 = '2' THEN
     SELECT NVL(SUM(mmau009),0),   --本次儲值異動金額
            NVL(SUM(mmau011),0),   --累計儲值折扣
            NVL(SUM(mmau012),0),   --累計加值
            NVL(SUM(mmau013),0),   --累計送抵現值金額
            NVL(SUM(mmau014),0)    --累計儲值成本
        INTO g_mmdb_d[l_ac].mmdb015,
             g_mmdb_d[l_ac].mmdb017,
             g_mmdb_d[l_ac].mmdb019,
             g_mmdb_d[l_ac].mmdb021,
             g_mmdb_d[l_ac].mmdb023         
      FROM mmau_t
      WHERE mmauent = g_enterprise AND mmau001 = g_mmdb_d[l_ac].mmdb001
      GROUP BY mmau001
  END IF
  
END FUNCTION]]>
</point>
  <point name="function.ammt322_mmdbsite_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt322_mmdbsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmdb_d[l_ac].mmdbsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmdb_d[l_ac].mmdbsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmdb_d[l_ac].mmdbsite_desc
END FUNCTION]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="construct.a.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdacnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.a.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdacnfdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdacnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdacrtdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdamoddt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.b.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdasite  #顯示到畫面上

            NEXT FIELD mmdasite                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="construct.c.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmdbsite  #顯示到畫面上

            NEXT FIELD mmdbsite                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[             IF g_mmda_m.mmdastus = 'Y' OR g_mmda_m.mmdastus  = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_assign_no    LIKE type_t.chr1]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_ooef004 = ''
    LET g_ooef005 = ''
    SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
    FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      CALL cl_err(g_site,'art-00007',1)
   END IF 
   IF cl_null(g_ooef005) THEN
      CALL cl_err(g_site,'art-00008',1)
   END IF  ]]>
</point>
  <point name="input.a.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                CALL ammt322_mmdb001_other_init()
            IF NOT cl_null(g_mmdb_d[l_ac].mmdb001) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 =g_mmdb_d[l_ac].mmdb001
               IF NOT cl_chk_exist("v_mmaq001") THEN
                  LET g_mmdb_d[l_ac].mmdb001 = g_mmdb_d_t.mmdb001
                  NEXT FIELD mmdb001
               END IF
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_mmdb_d[l_ac].mmdb001 != g_mmdb_d_t.mmdb001) THEN 
                  SELECT COUNT(*) INTO l_n FROM mmdb_t 
                   WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno AND mmdb001 = g_mmdb_d[l_ac].mmdb001
                  IF l_n > 0 THEN
                     CALL cl_err('','amm-00069',1)
                     LET g_mmdb_d[l_ac].mmdb001 = g_mmdb_d_t.mmdb001
                     CALL ammt322_mmdb001_other()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL ammt322_mmdb001_other()
            END IF]]>
</point>
  <point name="input.a.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.a.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                               LET g_mmdb_d[l_ac].mmdbsite_desc = ' '
            DISPLAY BY NAME g_mmdb_d[l_ac].mmdbsite_desc
            IF NOT cl_null(g_mmdb_d[l_ac].mmdbsite) THEN   
                INITIALIZE g_chkparam.* TO NULL
                LET g_errshow = '1'
                LET g_chkparam.arg1 =g_mmdb_d[l_ac].mmdbsite
                LET g_chkparam.arg2 = '2'
                LET g_chkparam.arg3 = g_mmda_m.mmdasite
                IF NOT cl_chk_exist("v_ooed004") THEN       
                   LET g_mmdb_d[l_ac].mmdbsite =g_mmdb_d_t.mmdbsite
                   CALL ammt322_mmdbsite_ref()
                   NEXT FIELD CURRENT
                END IF
              
            END IF
            CALL ammt322_mmdbsite_ref()
            
]]>
</point>
  <point name="input.a.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="input.b.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.b.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[             LET g_ooef004 = ''
    LET g_ooef005 = ''
    SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
    FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      CALL cl_err(g_site,'art-00007',1)
   END IF 
   IF cl_null(g_ooef005) THEN
      CALL cl_err(g_site,'art-00008',1)
   END IF  ]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                      ]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                SELECT MAX(mmdbseq)+1 INTO g_mmdb_d[l_ac].mmdbseq FROM mmdb_t
              WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno
            IF cl_null(g_mmdb_d[l_ac].mmdbseq ) THEN
               LET g_mmdb_d[l_ac].mmdbseq = 1
            END IF
            LET g_mmdb_d[l_ac].mmdbunit = g_mmda_m.mmdaunit]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.c.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmda_m.mmdasite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmda_m.mmdasite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmda_m.mmdasite TO mmdasite              #顯示到畫面上

            NEXT FIELD mmdasite                          #返回原欄位

]]>
</point>
  <point name="input.c.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.c.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmdb_d[l_ac].mmdbsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmda_m.mmdasite
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmdb_d[l_ac].mmdbsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmdb_d[l_ac].mmdbsite TO mmdbsite              #顯示到畫面上

            NEXT FIELD mmdbsite                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            DEFINE  l_flag          LIKE type_t.num5]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="input.g.mmda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmda002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmdadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmdastus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.mmdaunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdb023" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdbsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.g.page1.mmdbunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                                               CALL s_aooi200_gen_docno(g_site,g_mmda_m.mmdadocno,g_mmda_m.mmdadocdt,g_prog) RETURNING l_flag,g_mmda_m.mmdadocno
                  IF NOT l_flag THEN
                     NEXT FIELD mmdadocno
                  END IF]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt322_set_entry(p_cmd)
            CALL ammt322_set_no_entry(p_cmd)                        ]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmda_m.mmdadocdt = g_today
      LET g_mmda_m.mmdasite = g_site
      LET g_mmda_m.mmdaunit = g_site
      LET g_mmda_m_t.* = g_mmda_m.*]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF p_cmd = 'u' AND g_mmdb_d.getLength() =0 THEN
         CALL cl_set_comp_entry("mmda001",TRUE)
      END IF]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL cl_set_comp_entry("mmdadocdt",TRUE)
      CALL cl_set_comp_entry("mmda001",TRUE)]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL cl_set_comp_entry("mmdadocdt",FALSE)
      IF g_mmdb_d.getLength() >0 THEN
         CALL cl_set_comp_entry("mmda001",FALSE)
      END IF]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmdb_d[l_ac].mmdbsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmdb_d[l_ac].mmdbsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmdb_d[l_ac].mmdbsite_desc
]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[              LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt322_conf_chk(g_mmda_m.mmdadocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_ammt322_conf_upd(g_mmda_m.mmdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err(g_mmda_m.mmdadocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_mmda_m.mmdadocno,g_errno,1)
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_ammt322_void_chk(g_mmda_m.mmdadocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt322_void_upd(g_mmda_m.mmdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err(g_mmda_m.mmdadocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmda_m.mmdadocno,g_errno,1)
            RETURN    
         END IF
      END CASE]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                          CASE g_mmda_m.mmdastus
         WHEN "Y"
            HIDE OPTION "open"
         WHEN "X"
            HIDE OPTION "open"
         END CASE]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            DEFINE l_success LIKE type_t.chr5]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           ]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                    ]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                             ]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.reconciliate" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unreconciliate" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="ammt322.b_fill" ver="4" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt322_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmdb_d.clear()    #g_mmdb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt322_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmdbseq,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008,mmdb010,mmdb012, 
          mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005,mmdb007,mmdb009,mmdb011,mmdb013, 
          mmdb015,mmdb017,mmdb019,mmdb021,mmdb023  FROM mmdb_t",   
                  " INNER JOIN mmda_t ON mmdadocno = mmdbdocno ",
 
                  #"",
                  
                  "",
                  
                  " WHERE mmdbent=? AND mmdbdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmdb_t.mmdbseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt322_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt322_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmda_m.mmdadocno
                                               
      FOREACH b_fill_cs INTO g_mmdb_d[l_ac].mmdbseq,g_mmdb_d[l_ac].mmdbsite,g_mmdb_d[l_ac].mmdb001,g_mmdb_d[l_ac].mmdb002, 
          g_mmdb_d[l_ac].mmdb004,g_mmdb_d[l_ac].mmdb006,g_mmdb_d[l_ac].mmdb008,g_mmdb_d[l_ac].mmdb010, 
          g_mmdb_d[l_ac].mmdb012,g_mmdb_d[l_ac].mmdb014,g_mmdb_d[l_ac].mmdb016,g_mmdb_d[l_ac].mmdb018, 
          g_mmdb_d[l_ac].mmdb020,g_mmdb_d[l_ac].mmdb022,g_mmdb_d[l_ac].mmdbunit,g_mmdb_d[l_ac].mmdb003, 
          g_mmdb_d[l_ac].mmdb005,g_mmdb_d[l_ac].mmdb007,g_mmdb_d[l_ac].mmdb009,g_mmdb_d[l_ac].mmdb011, 
          g_mmdb_d[l_ac].mmdb013,g_mmdb_d[l_ac].mmdb015,g_mmdb_d[l_ac].mmdb017,g_mmdb_d[l_ac].mmdb019, 
          g_mmdb_d[l_ac].mmdb021,g_mmdb_d[l_ac].mmdb023
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmdb_d.deleteElement(g_mmdb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt322_pb
 
   
END FUNCTION
]]>
</section>
  <section id="ammt322.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt322_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt322_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt322.browser_fill" ver="7" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt322_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmda_m.* TO NULL
   CALL g_mmdb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmdadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmdadocno ",
                      " FROM mmda_t ",
                      " ",
                      " LEFT JOIN mmdb_t ON mmdbent = mmdaent AND mmdadocno = mmdbdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE mmdaent = '" ||g_enterprise|| "' AND mmdbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmdadocno ",
                      " FROM mmda_t ", 
                      "  ",
                      "  ",
                      " WHERE mmdaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmda_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmdadocno,mmdadocdt,mmda001,mmda002,mmdasite,mmdaunit Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmdastus,mmdadocno,mmdadocdt,mmda001,mmda002,mmdasite,mmdaunit ",
               " FROM mmda_t ",
               "  ",
               "  LEFT JOIN mmdb_t ON mmdbent = mmdaent AND mmdadocno = mmdbdocno ",
 
 
               "  ",
               "  ",
               
               " WHERE mmdaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmda_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmdadocno,g_browser[g_cnt].b_mmdadocdt, 
       g_browser[g_cnt].b_mmda001,g_browser[g_cnt].b_mmda002,g_browser[g_cnt].b_mmdasite,g_browser[g_cnt].b_mmdaunit 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="ammt322.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammt322_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmdadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammt322_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt322.construct" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt322_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmda_m.* TO NULL
   CALL g_mmdb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmdasite,mmda001,mmdadocdt,mmda002,mmdadocno,mmdaunit,mmdastus,mmdaownid, 
          mmdaowndp,mmdacrtid,mmdacrtdp,mmdacrtdt,mmdamodid,mmdamoddt,mmdacnfid,mmdacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmdacrtdt>>----
         AFTER FIELD mmdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmdamoddt>>----
         AFTER FIELD mmdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmdacnfdt>>----
         AFTER FIELD mmdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmdapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmdasite
         ON ACTION controlp INFIELD mmdasite
            #add-point:ON ACTION controlp INFIELD mmdasite
            {<point name="construct.c.mmdasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdasite
            #add-point:BEFORE FIELD mmdasite
            {<point name="construct.b.mmdasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdasite
            
            #add-point:AFTER FIELD mmdasite
            {<point name="construct.a.mmdasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmda001
            #add-point:BEFORE FIELD mmda001
            {<point name="construct.b.mmda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmda001
            
            #add-point:AFTER FIELD mmda001
            {<point name="construct.a.mmda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmda001
         ON ACTION controlp INFIELD mmda001
            #add-point:ON ACTION controlp INFIELD mmda001
            {<point name="construct.c.mmda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdadocdt
            #add-point:BEFORE FIELD mmdadocdt
            {<point name="construct.b.mmdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdadocdt
            
            #add-point:AFTER FIELD mmdadocdt
            {<point name="construct.a.mmdadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdadocdt
         ON ACTION controlp INFIELD mmdadocdt
            #add-point:ON ACTION controlp INFIELD mmdadocdt
            {<point name="construct.c.mmdadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmda002
         ON ACTION controlp INFIELD mmda002
            #add-point:ON ACTION controlp INFIELD mmda002
            {<point name="construct.c.mmda002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmda002
            #add-point:BEFORE FIELD mmda002
            {<point name="construct.b.mmda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmda002
            
            #add-point:AFTER FIELD mmda002
            {<point name="construct.a.mmda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdadocno
         ON ACTION controlp INFIELD mmdadocno
            #add-point:ON ACTION controlp INFIELD mmdadocno
            {<point name="construct.c.mmdadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdadocno
            #add-point:BEFORE FIELD mmdadocno
            {<point name="construct.b.mmdadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdadocno
            
            #add-point:AFTER FIELD mmdadocno
            {<point name="construct.a.mmdadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdaunit
            #add-point:BEFORE FIELD mmdaunit
            {<point name="construct.b.mmdaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdaunit
            
            #add-point:AFTER FIELD mmdaunit
            {<point name="construct.a.mmdaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdaunit
         ON ACTION controlp INFIELD mmdaunit
            #add-point:ON ACTION controlp INFIELD mmdaunit
            {<point name="construct.c.mmdaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdastus
            #add-point:BEFORE FIELD mmdastus
            {<point name="construct.b.mmdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdastus
            
            #add-point:AFTER FIELD mmdastus
            {<point name="construct.a.mmdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdastus
         ON ACTION controlp INFIELD mmdastus
            #add-point:ON ACTION controlp INFIELD mmdastus
            {<point name="construct.c.mmdastus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmdaownid
         ON ACTION controlp INFIELD mmdaownid
            #add-point:ON ACTION controlp INFIELD mmdaownid
            {<point name="construct.c.mmdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdaownid
            #add-point:BEFORE FIELD mmdaownid
            {<point name="construct.b.mmdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdaownid
            
            #add-point:AFTER FIELD mmdaownid
            {<point name="construct.a.mmdaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdaowndp
         ON ACTION controlp INFIELD mmdaowndp
            #add-point:ON ACTION controlp INFIELD mmdaowndp
            {<point name="construct.c.mmdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdaowndp
            #add-point:BEFORE FIELD mmdaowndp
            {<point name="construct.b.mmdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdaowndp
            
            #add-point:AFTER FIELD mmdaowndp
            {<point name="construct.a.mmdaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdacrtid
         ON ACTION controlp INFIELD mmdacrtid
            #add-point:ON ACTION controlp INFIELD mmdacrtid
            {<point name="construct.c.mmdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdacrtid
            #add-point:BEFORE FIELD mmdacrtid
            {<point name="construct.b.mmdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdacrtid
            
            #add-point:AFTER FIELD mmdacrtid
            {<point name="construct.a.mmdacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmdacrtdp
         ON ACTION controlp INFIELD mmdacrtdp
            #add-point:ON ACTION controlp INFIELD mmdacrtdp
            {<point name="construct.c.mmdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdacrtdp
            #add-point:BEFORE FIELD mmdacrtdp
            {<point name="construct.b.mmdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdacrtdp
            
            #add-point:AFTER FIELD mmdacrtdp
            {<point name="construct.a.mmdacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdacrtdt
            #add-point:BEFORE FIELD mmdacrtdt
            {<point name="construct.b.mmdacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmdamodid
         ON ACTION controlp INFIELD mmdamodid
            #add-point:ON ACTION controlp INFIELD mmdamodid
            {<point name="construct.c.mmdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdamodid
            #add-point:BEFORE FIELD mmdamodid
            {<point name="construct.b.mmdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdamodid
            
            #add-point:AFTER FIELD mmdamodid
            {<point name="construct.a.mmdamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdamoddt
            #add-point:BEFORE FIELD mmdamoddt
            {<point name="construct.b.mmdamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmdacnfid
         ON ACTION controlp INFIELD mmdacnfid
            #add-point:ON ACTION controlp INFIELD mmdacnfid
            {<point name="construct.c.mmdacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdacnfid
            #add-point:BEFORE FIELD mmdacnfid
            {<point name="construct.b.mmdacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdacnfid
            
            #add-point:AFTER FIELD mmdacnfid
            {<point name="construct.a.mmdacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdacnfdt
            #add-point:BEFORE FIELD mmdacnfdt
            {<point name="construct.b.mmdacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmdbseq,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008,mmdb010,mmdb012, 
          mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005,mmdb007,mmdb009,mmdb011,mmdb013, 
          mmdb015,mmdb017,mmdb019,mmdb021,mmdb023
           FROM s_detail1[1].mmdbseq,s_detail1[1].mmdbsite,s_detail1[1].mmdb001,s_detail1[1].mmdb002, 
               s_detail1[1].mmdb004,s_detail1[1].mmdb006,s_detail1[1].mmdb008,s_detail1[1].mmdb010,s_detail1[1].mmdb012, 
               s_detail1[1].mmdb014,s_detail1[1].mmdb016,s_detail1[1].mmdb018,s_detail1[1].mmdb020,s_detail1[1].mmdb022, 
               s_detail1[1].mmdbunit,s_detail1[1].mmdb003,s_detail1[1].mmdb005,s_detail1[1].mmdb007, 
               s_detail1[1].mmdb009,s_detail1[1].mmdb011,s_detail1[1].mmdb013,s_detail1[1].mmdb015,s_detail1[1].mmdb017, 
               s_detail1[1].mmdb019,s_detail1[1].mmdb021,s_detail1[1].mmdb023
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt322.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt322_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmdadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt322.delete" ver="9" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt322_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmda_m.mmdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
   
   
 
   CALL ammt322_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt322_cl USING g_enterprise,g_mmda_m.mmdadocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt322_cl:", STATUS, 1)
      CLOSE ammt322_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmda_m.mmdadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt322_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
 
      DELETE FROM mmda_t
       WHERE mmdaent = g_enterprise AND mmdadocno = g_mmda_m.mmdadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmda_m.mmdadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmdb_t
       WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmdb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmdb_d.clear() 
 
     
      #CALL ammt322_ui_browser_refresh()  
      CALL ammt322_ui_headershow()  
      CALL ammt322_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt322_browser_fill("")
         CALL ammt322_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt322_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt322_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmda_m.mmdadocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="ammt322.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt322_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmdb_t
       WHERE mmdbent = g_enterprise AND
         mmdbdocno = ps_keys_bak[1] AND mmdbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt322.description" ver="21" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000135
#+ 
#+ Filename...: ammt322
#+ Description: 會員卡資料重計更新維護作業
#+ Creator....: 01533(2013/12/26)
#+ Modifier...: 01533(2014/06/29)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammt322.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt322_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmdb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt322_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt322_detail AS ",
                "SELECT * FROM mmdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt322_detail SELECT * FROM mmdb_t 
                                         WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmdadocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt322_detail 
      #更新key欄位
      SET mmdbdocno = g_mmda_m.mmdadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmdb_t SELECT * FROM ammt322_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt322_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
   
   DROP TABLE ammt322_detail
   
END FUNCTION
]]>
</section>
  <section id="ammt322.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt322_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt322.fetch" ver="5" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt322_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmda_m.mmdadocno = g_browser[g_current_idx].b_mmdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("mmda_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmda_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammt322_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="ammt322.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt322_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="ammt322.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt322_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmdadocno,mmdadocdt,mmda001,mmda002,mmdasite,mmdaunit
                          FROM s_browse[1].b_mmdadocno,s_browse[1].b_mmdadocdt,s_browse[1].b_mmda001, 
                              s_browse[1].b_mmda002,s_browse[1].b_mmdasite,s_browse[1].b_mmdaunit
 
         BEFORE CONSTRUCT
               DISPLAY ammt322_filter_parser('mmdadocno') TO s_browse[1].b_mmdadocno
            DISPLAY ammt322_filter_parser('mmdadocdt') TO s_browse[1].b_mmdadocdt
            DISPLAY ammt322_filter_parser('mmda001') TO s_browse[1].b_mmda001
            DISPLAY ammt322_filter_parser('mmda002') TO s_browse[1].b_mmda002
            DISPLAY ammt322_filter_parser('mmdasite') TO s_browse[1].b_mmdasite
            DISPLAY ammt322_filter_parser('mmdaunit') TO s_browse[1].b_mmdaunit
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt322_filter_show('mmdadocno')
   CALL ammt322_filter_show('mmdadocdt')
   CALL ammt322_filter_show('mmda001')
   CALL ammt322_filter_show('mmda002')
   CALL ammt322_filter_show('mmdasite')
   CALL ammt322_filter_show('mmdaunit')
 
END FUNCTION
]]>
</section>
  <section id="ammt322.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt322_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="ammt322.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt322_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt322_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="ammt322.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmda_m        RECORD
       mmdasite LIKE mmda_t.mmdasite, 
   mmdasite_desc LIKE type_t.chr80, 
   mmda001 LIKE mmda_t.mmda001, 
   mmdadocdt LIKE mmda_t.mmdadocdt, 
   mmda002 LIKE mmda_t.mmda002, 
   mmda002_desc LIKE type_t.chr80, 
   mmdadocno LIKE mmda_t.mmdadocno, 
   mmdaunit LIKE mmda_t.mmdaunit, 
   mmdastus LIKE mmda_t.mmdastus, 
   mmdaownid LIKE mmda_t.mmdaownid, 
   mmdaownid_desc LIKE type_t.chr80, 
   mmdaowndp LIKE mmda_t.mmdaowndp, 
   mmdaowndp_desc LIKE type_t.chr80, 
   mmdacrtid LIKE mmda_t.mmdacrtid, 
   mmdacrtid_desc LIKE type_t.chr80, 
   mmdacrtdp LIKE mmda_t.mmdacrtdp, 
   mmdacrtdp_desc LIKE type_t.chr80, 
   mmdacrtdt DATETIME YEAR TO SECOND, 
   mmdamodid LIKE mmda_t.mmdamodid, 
   mmdamodid_desc LIKE type_t.chr80, 
   mmdamoddt DATETIME YEAR TO SECOND, 
   mmdacnfid LIKE mmda_t.mmdacnfid, 
   mmdacnfid_desc LIKE type_t.chr80, 
   mmdacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmdb_d        RECORD
       mmdbseq LIKE mmdb_t.mmdbseq, 
   mmdbsite LIKE mmdb_t.mmdbsite, 
   mmdbsite_desc LIKE type_t.chr80, 
   mmdb001 LIKE mmdb_t.mmdb001, 
   mmdb002 LIKE mmdb_t.mmdb002, 
   mmdb004 LIKE mmdb_t.mmdb004, 
   mmdb006 LIKE mmdb_t.mmdb006, 
   mmdb008 LIKE mmdb_t.mmdb008, 
   mmdb010 LIKE mmdb_t.mmdb010, 
   mmdb012 LIKE mmdb_t.mmdb012, 
   mmdb014 LIKE mmdb_t.mmdb014, 
   mmdb016 LIKE mmdb_t.mmdb016, 
   mmdb018 LIKE mmdb_t.mmdb018, 
   mmdb020 LIKE mmdb_t.mmdb020, 
   mmdb022 LIKE mmdb_t.mmdb022, 
   mmdbunit LIKE mmdb_t.mmdbunit, 
   mmdb003 LIKE mmdb_t.mmdb003, 
   mmdb005 LIKE mmdb_t.mmdb005, 
   mmdb007 LIKE mmdb_t.mmdb007, 
   mmdb009 LIKE mmdb_t.mmdb009, 
   mmdb011 LIKE mmdb_t.mmdb011, 
   mmdb013 LIKE mmdb_t.mmdb013, 
   mmdb015 LIKE mmdb_t.mmdb015, 
   mmdb017 LIKE mmdb_t.mmdb017, 
   mmdb019 LIKE mmdb_t.mmdb019, 
   mmdb021 LIKE mmdb_t.mmdb021, 
   mmdb023 LIKE mmdb_t.mmdb023
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmda_m          type_g_mmda_m
DEFINE g_mmda_m_t        type_g_mmda_m
 
   DEFINE g_mmdadocno_t LIKE mmda_t.mmdadocno
 
 
DEFINE g_mmdb_d          DYNAMIC ARRAY OF type_g_mmdb_d
DEFINE g_mmdb_d_t        type_g_mmdb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmdadocno LIKE mmda_t.mmdadocno,
      b_mmdadocdt LIKE mmda_t.mmdadocdt,
      b_mmda001 LIKE mmda_t.mmda001,
      b_mmda002 LIKE mmda_t.mmda002,
      b_mmdasite LIKE mmda_t.mmdasite,
      b_mmdaunit LIKE mmda_t.mmdaunit
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmdadocno LIKE mmda_t.mmdadocno,
      b_mmdadocdt LIKE mmda_t.mmdadocdt,
      b_mmda001 LIKE mmda_t.mmda001,
      b_mmda002 LIKE mmda_t.mmda002,
      b_mmdasite LIKE mmda_t.mmdasite,
      b_mmdaunit LIKE mmda_t.mmdaunit
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammt322.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammt322_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmdb_d.getLength() THEN
         LET g_detail_idx = g_mmdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmdb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt322.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt322_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmdastus','13','N,X,Y,J,K')
 
      CALL cl_set_combo_scc('mmda001','6539') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammt322_default_search()
    
END FUNCTION
]]>
</section>
  <section id="ammt322.input" ver="5" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt322_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmdbseq,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008,mmdb010,mmdb012, 
       mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005,mmdb007,mmdb009,mmdb011,mmdb013, 
       mmdb015,mmdb017,mmdb019,mmdb021,mmdb023 FROM mmdb_t WHERE mmdbent=? AND mmdbdocno=? AND mmdbseq=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt322_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt322_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt322_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmda_m.mmdasite,g_mmda_m.mmda001,g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno, 
       g_mmda_m.mmdaunit,g_mmda_m.mmdastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="ammt322.input.body" ver="4" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt322_b_fill()
            LET g_rec_b = g_mmdb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt322_cl USING g_enterprise,g_mmda_m.mmdadocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt322_cl:", STATUS, 1)
               CLOSE ammt322_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmdb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmdb_d[l_ac].mmdbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmdb_d_t.* = g_mmdb_d[l_ac].*  #BACKUP
               CALL ammt322_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt322_set_no_entry_b(l_cmd)
               IF NOT ammt322_lock_b("mmdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt322_bcl INTO g_mmdb_d[l_ac].mmdbseq,g_mmdb_d[l_ac].mmdbsite,g_mmdb_d[l_ac].mmdb001, 
                      g_mmdb_d[l_ac].mmdb002,g_mmdb_d[l_ac].mmdb004,g_mmdb_d[l_ac].mmdb006,g_mmdb_d[l_ac].mmdb008, 
                      g_mmdb_d[l_ac].mmdb010,g_mmdb_d[l_ac].mmdb012,g_mmdb_d[l_ac].mmdb014,g_mmdb_d[l_ac].mmdb016, 
                      g_mmdb_d[l_ac].mmdb018,g_mmdb_d[l_ac].mmdb020,g_mmdb_d[l_ac].mmdb022,g_mmdb_d[l_ac].mmdbunit, 
                      g_mmdb_d[l_ac].mmdb003,g_mmdb_d[l_ac].mmdb005,g_mmdb_d[l_ac].mmdb007,g_mmdb_d[l_ac].mmdb009, 
                      g_mmdb_d[l_ac].mmdb011,g_mmdb_d[l_ac].mmdb013,g_mmdb_d[l_ac].mmdb015,g_mmdb_d[l_ac].mmdb017, 
                      g_mmdb_d[l_ac].mmdb019,g_mmdb_d[l_ac].mmdb021,g_mmdb_d[l_ac].mmdb023
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmdb_d_t.mmdbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt322_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmdb_d[l_ac].* TO NULL 
            
            LET g_mmdb_d_t.* = g_mmdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt322_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt322_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmdb_d[li_reproduce_target].* = g_mmdb_d[li_reproduce].*
 
               LET g_mmdb_d[li_reproduce_target].mmdbseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmdb_t 
             WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno
 
               AND mmdbseq = g_mmdb_d[l_ac].mmdbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmda_m.mmdadocno
               LET gs_keys[2] = g_mmdb_d[g_detail_idx].mmdbseq
               CALL ammt322_insert_b('mmdb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt322_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmdb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmdb_d.deleteElement(l_ac)
               NEXT FIELD mmdbseq
            END IF
         
            IF g_mmdb_d[l_ac].mmdbseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmdb_t
                WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno AND
 
                      mmdbseq = g_mmdb_d_t.mmdbseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmdb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt322_bcl
               LET l_count = g_mmdb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmda_m.mmdadocno
               LET gs_keys[2] = g_mmdb_d[g_detail_idx].mmdbseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt322_delete_b('mmdb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmdbseq
            #add-point:BEFORE FIELD mmdbseq
            {<point name="input.b.page1.mmdbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdbseq
            
            #add-point:AFTER FIELD mmdbseq
            {<point name="input.a.page1.mmdbseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdbseq
            #add-point:ON CHANGE mmdbseq
            {<point name="input.g.page1.mmdbseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdbsite
            #add-point:BEFORE FIELD mmdbsite
            {<point name="input.b.page1.mmdbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdbsite
            
            #add-point:AFTER FIELD mmdbsite
            {<point name="input.a.page1.mmdbsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdbsite
            #add-point:ON CHANGE mmdbsite
            {<point name="input.g.page1.mmdbsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb001
            #add-point:BEFORE FIELD mmdb001
            {<point name="input.b.page1.mmdb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb001
            
            #add-point:AFTER FIELD mmdb001
            {<point name="input.a.page1.mmdb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb001
            #add-point:ON CHANGE mmdb001
            {<point name="input.g.page1.mmdb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb002
            #add-point:BEFORE FIELD mmdb002
            {<point name="input.b.page1.mmdb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb002
            
            #add-point:AFTER FIELD mmdb002
            {<point name="input.a.page1.mmdb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb002
            #add-point:ON CHANGE mmdb002
            {<point name="input.g.page1.mmdb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb004
            #add-point:BEFORE FIELD mmdb004
            {<point name="input.b.page1.mmdb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb004
            
            #add-point:AFTER FIELD mmdb004
            {<point name="input.a.page1.mmdb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb004
            #add-point:ON CHANGE mmdb004
            {<point name="input.g.page1.mmdb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb006
            #add-point:BEFORE FIELD mmdb006
            {<point name="input.b.page1.mmdb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb006
            
            #add-point:AFTER FIELD mmdb006
            {<point name="input.a.page1.mmdb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb006
            #add-point:ON CHANGE mmdb006
            {<point name="input.g.page1.mmdb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb008
            #add-point:BEFORE FIELD mmdb008
            {<point name="input.b.page1.mmdb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb008
            
            #add-point:AFTER FIELD mmdb008
            {<point name="input.a.page1.mmdb008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb008
            #add-point:ON CHANGE mmdb008
            {<point name="input.g.page1.mmdb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb010
            #add-point:BEFORE FIELD mmdb010
            {<point name="input.b.page1.mmdb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb010
            
            #add-point:AFTER FIELD mmdb010
            {<point name="input.a.page1.mmdb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb010
            #add-point:ON CHANGE mmdb010
            {<point name="input.g.page1.mmdb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb012
            #add-point:BEFORE FIELD mmdb012
            {<point name="input.b.page1.mmdb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb012
            
            #add-point:AFTER FIELD mmdb012
            {<point name="input.a.page1.mmdb012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb012
            #add-point:ON CHANGE mmdb012
            {<point name="input.g.page1.mmdb012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb014
            #add-point:BEFORE FIELD mmdb014
            {<point name="input.b.page1.mmdb014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb014
            
            #add-point:AFTER FIELD mmdb014
            {<point name="input.a.page1.mmdb014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb014
            #add-point:ON CHANGE mmdb014
            {<point name="input.g.page1.mmdb014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb016
            #add-point:BEFORE FIELD mmdb016
            {<point name="input.b.page1.mmdb016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb016
            
            #add-point:AFTER FIELD mmdb016
            {<point name="input.a.page1.mmdb016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb016
            #add-point:ON CHANGE mmdb016
            {<point name="input.g.page1.mmdb016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb018
            #add-point:BEFORE FIELD mmdb018
            {<point name="input.b.page1.mmdb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb018
            
            #add-point:AFTER FIELD mmdb018
            {<point name="input.a.page1.mmdb018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb018
            #add-point:ON CHANGE mmdb018
            {<point name="input.g.page1.mmdb018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb020
            #add-point:BEFORE FIELD mmdb020
            {<point name="input.b.page1.mmdb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb020
            
            #add-point:AFTER FIELD mmdb020
            {<point name="input.a.page1.mmdb020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb020
            #add-point:ON CHANGE mmdb020
            {<point name="input.g.page1.mmdb020" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb022
            #add-point:BEFORE FIELD mmdb022
            {<point name="input.b.page1.mmdb022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb022
            
            #add-point:AFTER FIELD mmdb022
            {<point name="input.a.page1.mmdb022" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb022
            #add-point:ON CHANGE mmdb022
            {<point name="input.g.page1.mmdb022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdbunit
            #add-point:BEFORE FIELD mmdbunit
            {<point name="input.b.page1.mmdbunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdbunit
            
            #add-point:AFTER FIELD mmdbunit
            {<point name="input.a.page1.mmdbunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdbunit
            #add-point:ON CHANGE mmdbunit
            {<point name="input.g.page1.mmdbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb003
            #add-point:BEFORE FIELD mmdb003
            {<point name="input.b.page1.mmdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb003
            
            #add-point:AFTER FIELD mmdb003
            {<point name="input.a.page1.mmdb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb003
            #add-point:ON CHANGE mmdb003
            {<point name="input.g.page1.mmdb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb005
            #add-point:BEFORE FIELD mmdb005
            {<point name="input.b.page1.mmdb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb005
            
            #add-point:AFTER FIELD mmdb005
            {<point name="input.a.page1.mmdb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb005
            #add-point:ON CHANGE mmdb005
            {<point name="input.g.page1.mmdb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb007
            #add-point:BEFORE FIELD mmdb007
            {<point name="input.b.page1.mmdb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb007
            
            #add-point:AFTER FIELD mmdb007
            {<point name="input.a.page1.mmdb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb007
            #add-point:ON CHANGE mmdb007
            {<point name="input.g.page1.mmdb007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb009
            #add-point:BEFORE FIELD mmdb009
            {<point name="input.b.page1.mmdb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb009
            
            #add-point:AFTER FIELD mmdb009
            {<point name="input.a.page1.mmdb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb009
            #add-point:ON CHANGE mmdb009
            {<point name="input.g.page1.mmdb009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb011
            #add-point:BEFORE FIELD mmdb011
            {<point name="input.b.page1.mmdb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb011
            
            #add-point:AFTER FIELD mmdb011
            {<point name="input.a.page1.mmdb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb011
            #add-point:ON CHANGE mmdb011
            {<point name="input.g.page1.mmdb011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb013
            #add-point:BEFORE FIELD mmdb013
            {<point name="input.b.page1.mmdb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb013
            
            #add-point:AFTER FIELD mmdb013
            {<point name="input.a.page1.mmdb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb013
            #add-point:ON CHANGE mmdb013
            {<point name="input.g.page1.mmdb013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb015
            #add-point:BEFORE FIELD mmdb015
            {<point name="input.b.page1.mmdb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb015
            
            #add-point:AFTER FIELD mmdb015
            {<point name="input.a.page1.mmdb015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb015
            #add-point:ON CHANGE mmdb015
            {<point name="input.g.page1.mmdb015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb017
            #add-point:BEFORE FIELD mmdb017
            {<point name="input.b.page1.mmdb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb017
            
            #add-point:AFTER FIELD mmdb017
            {<point name="input.a.page1.mmdb017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb017
            #add-point:ON CHANGE mmdb017
            {<point name="input.g.page1.mmdb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb019
            #add-point:BEFORE FIELD mmdb019
            {<point name="input.b.page1.mmdb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb019
            
            #add-point:AFTER FIELD mmdb019
            {<point name="input.a.page1.mmdb019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb019
            #add-point:ON CHANGE mmdb019
            {<point name="input.g.page1.mmdb019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb021
            #add-point:BEFORE FIELD mmdb021
            {<point name="input.b.page1.mmdb021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb021
            
            #add-point:AFTER FIELD mmdb021
            {<point name="input.a.page1.mmdb021" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb021
            #add-point:ON CHANGE mmdb021
            {<point name="input.g.page1.mmdb021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdb023
            #add-point:BEFORE FIELD mmdb023
            {<point name="input.b.page1.mmdb023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdb023
            
            #add-point:AFTER FIELD mmdb023
            {<point name="input.a.page1.mmdb023" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdb023
            #add-point:ON CHANGE mmdb023
            {<point name="input.g.page1.mmdb023" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmdbseq
         ON ACTION controlp INFIELD mmdbseq
            #add-point:ON ACTION controlp INFIELD mmdbseq
            {<point name="input.c.page1.mmdbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdbsite
         ON ACTION controlp INFIELD mmdbsite
            #add-point:ON ACTION controlp INFIELD mmdbsite
            {<point name="input.c.page1.mmdbsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb001
         ON ACTION controlp INFIELD mmdb001
            #add-point:ON ACTION controlp INFIELD mmdb001
            {<point name="input.c.page1.mmdb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb002
         ON ACTION controlp INFIELD mmdb002
            #add-point:ON ACTION controlp INFIELD mmdb002
            {<point name="input.c.page1.mmdb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb004
         ON ACTION controlp INFIELD mmdb004
            #add-point:ON ACTION controlp INFIELD mmdb004
            {<point name="input.c.page1.mmdb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb006
         ON ACTION controlp INFIELD mmdb006
            #add-point:ON ACTION controlp INFIELD mmdb006
            {<point name="input.c.page1.mmdb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb008
         ON ACTION controlp INFIELD mmdb008
            #add-point:ON ACTION controlp INFIELD mmdb008
            {<point name="input.c.page1.mmdb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb010
         ON ACTION controlp INFIELD mmdb010
            #add-point:ON ACTION controlp INFIELD mmdb010
            {<point name="input.c.page1.mmdb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb012
         ON ACTION controlp INFIELD mmdb012
            #add-point:ON ACTION controlp INFIELD mmdb012
            {<point name="input.c.page1.mmdb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb014
         ON ACTION controlp INFIELD mmdb014
            #add-point:ON ACTION controlp INFIELD mmdb014
            {<point name="input.c.page1.mmdb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb016
         ON ACTION controlp INFIELD mmdb016
            #add-point:ON ACTION controlp INFIELD mmdb016
            {<point name="input.c.page1.mmdb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb018
         ON ACTION controlp INFIELD mmdb018
            #add-point:ON ACTION controlp INFIELD mmdb018
            {<point name="input.c.page1.mmdb018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb020
         ON ACTION controlp INFIELD mmdb020
            #add-point:ON ACTION controlp INFIELD mmdb020
            {<point name="input.c.page1.mmdb020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb022
         ON ACTION controlp INFIELD mmdb022
            #add-point:ON ACTION controlp INFIELD mmdb022
            {<point name="input.c.page1.mmdb022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdbunit
         ON ACTION controlp INFIELD mmdbunit
            #add-point:ON ACTION controlp INFIELD mmdbunit
            {<point name="input.c.page1.mmdbunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb003
         ON ACTION controlp INFIELD mmdb003
            #add-point:ON ACTION controlp INFIELD mmdb003
            {<point name="input.c.page1.mmdb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb005
         ON ACTION controlp INFIELD mmdb005
            #add-point:ON ACTION controlp INFIELD mmdb005
            {<point name="input.c.page1.mmdb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb007
         ON ACTION controlp INFIELD mmdb007
            #add-point:ON ACTION controlp INFIELD mmdb007
            {<point name="input.c.page1.mmdb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb009
         ON ACTION controlp INFIELD mmdb009
            #add-point:ON ACTION controlp INFIELD mmdb009
            {<point name="input.c.page1.mmdb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb011
         ON ACTION controlp INFIELD mmdb011
            #add-point:ON ACTION controlp INFIELD mmdb011
            {<point name="input.c.page1.mmdb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb013
         ON ACTION controlp INFIELD mmdb013
            #add-point:ON ACTION controlp INFIELD mmdb013
            {<point name="input.c.page1.mmdb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb015
         ON ACTION controlp INFIELD mmdb015
            #add-point:ON ACTION controlp INFIELD mmdb015
            {<point name="input.c.page1.mmdb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb017
         ON ACTION controlp INFIELD mmdb017
            #add-point:ON ACTION controlp INFIELD mmdb017
            {<point name="input.c.page1.mmdb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb019
         ON ACTION controlp INFIELD mmdb019
            #add-point:ON ACTION controlp INFIELD mmdb019
            {<point name="input.c.page1.mmdb019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb021
         ON ACTION controlp INFIELD mmdb021
            #add-point:ON ACTION controlp INFIELD mmdb021
            {<point name="input.c.page1.mmdb021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmdb023
         ON ACTION controlp INFIELD mmdb023
            #add-point:ON ACTION controlp INFIELD mmdb023
            {<point name="input.c.page1.mmdb023" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmdb_d[l_ac].* = g_mmdb_d_t.*
               CLOSE ammt322_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmdb_d[l_ac].mmdbseq,-263,1)
               LET g_mmdb_d[l_ac].* = g_mmdb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmdb_t SET (mmdbdocno,mmdbseq,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008, 
                   mmdb010,mmdb012,mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005, 
                   mmdb007,mmdb009,mmdb011,mmdb013,mmdb015,mmdb017,mmdb019,mmdb021,mmdb023) = (g_mmda_m.mmdadocno, 
                   g_mmdb_d[l_ac].mmdbseq,g_mmdb_d[l_ac].mmdbsite,g_mmdb_d[l_ac].mmdb001,g_mmdb_d[l_ac].mmdb002, 
                   g_mmdb_d[l_ac].mmdb004,g_mmdb_d[l_ac].mmdb006,g_mmdb_d[l_ac].mmdb008,g_mmdb_d[l_ac].mmdb010, 
                   g_mmdb_d[l_ac].mmdb012,g_mmdb_d[l_ac].mmdb014,g_mmdb_d[l_ac].mmdb016,g_mmdb_d[l_ac].mmdb018, 
                   g_mmdb_d[l_ac].mmdb020,g_mmdb_d[l_ac].mmdb022,g_mmdb_d[l_ac].mmdbunit,g_mmdb_d[l_ac].mmdb003, 
                   g_mmdb_d[l_ac].mmdb005,g_mmdb_d[l_ac].mmdb007,g_mmdb_d[l_ac].mmdb009,g_mmdb_d[l_ac].mmdb011, 
                   g_mmdb_d[l_ac].mmdb013,g_mmdb_d[l_ac].mmdb015,g_mmdb_d[l_ac].mmdb017,g_mmdb_d[l_ac].mmdb019, 
                   g_mmdb_d[l_ac].mmdb021,g_mmdb_d[l_ac].mmdb023)
                WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmda_m.mmdadocno 
 
                  AND mmdbseq = g_mmdb_d_t.mmdbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmdb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmdb_d[l_ac].* = g_mmdb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmdb_t",SQLCA.sqlcode,1)
                     LET g_mmdb_d[l_ac].* = g_mmdb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmda_m.mmdadocno
               LET gs_keys_bak[1] = g_mmdadocno_t
               LET gs_keys[2] = g_mmdb_d[g_detail_idx].mmdbseq
               LET gs_keys_bak[2] = g_mmdb_d_t.mmdbseq
               CALL ammt322_update_b('mmdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmda_m),util.JSON.stringify(g_mmdb_d_t)
               LET g_log2 = util.JSON.stringify(g_mmda_m),util.JSON.stringify(g_mmdb_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt322_unlock_b("mmdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmdb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="ammt322.input.head" ver="6" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_mmda_m.mmdasite,g_mmda_m.mmda001,g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno, 
          g_mmda_m.mmdaunit,g_mmda_m.mmdastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD mmdasite
            
            #add-point:AFTER FIELD mmdasite
            {<point name="input.a.mmdasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdasite
            #add-point:BEFORE FIELD mmdasite
            {<point name="input.b.mmdasite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmdasite
            #add-point:ON CHANGE mmdasite
            {<point name="input.g.mmdasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmda001
            #add-point:BEFORE FIELD mmda001
            {<point name="input.b.mmda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmda001
            
            #add-point:AFTER FIELD mmda001
            {<point name="input.a.mmda001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmda001
            #add-point:ON CHANGE mmda001
            {<point name="input.g.mmda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdadocdt
            #add-point:BEFORE FIELD mmdadocdt
            {<point name="input.b.mmdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdadocdt
            
            #add-point:AFTER FIELD mmdadocdt
            {<point name="input.a.mmdadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdadocdt
            #add-point:ON CHANGE mmdadocdt
            {<point name="input.g.mmdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmda002
            
            #add-point:AFTER FIELD mmda002
            {<point name="input.a.mmda002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmda002
            #add-point:BEFORE FIELD mmda002
            {<point name="input.b.mmda002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmda002
            #add-point:ON CHANGE mmda002
            {<point name="input.g.mmda002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdadocno
            #add-point:BEFORE FIELD mmdadocno
            {<point name="input.b.mmdadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdadocno
            
            #add-point:AFTER FIELD mmdadocno
            {<point name="input.a.mmdadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdadocno
            #add-point:ON CHANGE mmdadocno
            {<point name="input.g.mmdadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdaunit
            #add-point:BEFORE FIELD mmdaunit
            {<point name="input.b.mmdaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdaunit
            
            #add-point:AFTER FIELD mmdaunit
            {<point name="input.a.mmdaunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdaunit
            #add-point:ON CHANGE mmdaunit
            {<point name="input.g.mmdaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmdastus
            #add-point:BEFORE FIELD mmdastus
            {<point name="input.b.mmdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmdastus
            
            #add-point:AFTER FIELD mmdastus
            {<point name="input.a.mmdastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmdastus
            #add-point:ON CHANGE mmdastus
            {<point name="input.g.mmdastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmdasite
         ON ACTION controlp INFIELD mmdasite
            #add-point:ON ACTION controlp INFIELD mmdasite
            {<point name="input.c.mmdasite" />}
            #END add-point
 
         #Ctrlp:input.c.mmda001
         ON ACTION controlp INFIELD mmda001
            #add-point:ON ACTION controlp INFIELD mmda001
            {<point name="input.c.mmda001" />}
            #END add-point
 
         #Ctrlp:input.c.mmdadocdt
         ON ACTION controlp INFIELD mmdadocdt
            #add-point:ON ACTION controlp INFIELD mmdadocdt
            {<point name="input.c.mmdadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmda002
         ON ACTION controlp INFIELD mmda002
            #add-point:ON ACTION controlp INFIELD mmda002
            {<point name="input.c.mmda002" />}
            #END add-point
 
         #Ctrlp:input.c.mmdadocno
         ON ACTION controlp INFIELD mmdadocno
            #add-point:ON ACTION controlp INFIELD mmdadocno
            {<point name="input.c.mmdadocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmdaunit
         ON ACTION controlp INFIELD mmdaunit
            #add-point:ON ACTION controlp INFIELD mmdaunit
            {<point name="input.c.mmdaunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmdastus
         ON ACTION controlp INFIELD mmdastus
            #add-point:ON ACTION controlp INFIELD mmdastus
            {<point name="input.c.mmdastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmda_m.mmdadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmda_t (mmdaent,mmdasite,mmda001,mmdadocdt,mmda002,mmdadocno,mmdaunit,mmdastus, 
                   mmdaownid,mmdaowndp,mmdacrtid,mmdacrtdp,mmdacrtdt,mmdacnfid,mmdacnfdt)
               VALUES (g_enterprise,g_mmda_m.mmdasite,g_mmda_m.mmda001,g_mmda_m.mmdadocdt,g_mmda_m.mmda002, 
                   g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid,g_mmda_m.mmdaowndp, 
                   g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmda_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt322_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmda_t SET (mmdasite,mmda001,mmdadocdt,mmda002,mmdadocno,mmdaunit,mmdastus,mmdaownid, 
                   mmdaowndp,mmdacrtid,mmdacrtdp,mmdacrtdt,mmdacnfid,mmdacnfdt) = (g_mmda_m.mmdasite, 
                   g_mmda_m.mmda001,g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit, 
                   g_mmda_m.mmdastus,g_mmda_m.mmdaownid,g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp, 
                   g_mmda_m.mmdacrtdt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt)
                WHERE mmdaent = g_enterprise AND mmdadocno = g_mmdadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmda_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_mmda_m_t)
               LET g_log2 = util.JSON.stringify(g_mmda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="ammt322.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmdbseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="ammt322.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt322_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmdb_d.clear()   
 
 
   INITIALIZE g_mmda_m.* LIKE mmda_t.*             #DEFAULT 設定
   
   LET g_mmdadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmda_m.mmdaownid = g_user
      LET g_mmda_m.mmdaowndp = g_dept
      LET g_mmda_m.mmdacrtid = g_user
      LET g_mmda_m.mmdacrtdp = g_dept 
      LET g_mmda_m.mmdacrtdt = cl_get_current()
      LET g_mmda_m.mmdamodid = ""
      LET g_mmda_m.mmdamoddt = ""
      LET g_mmda_m.mmdastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmda_m.mmdastus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt322_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmda_m.* = g_mmda_m_t.*
         CALL ammt322_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmdb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmdaent = '" ||g_enterprise|| "' AND",
              " mmdadocno = '", g_mmda_m.mmdadocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt322_cl
   
END FUNCTION
]]>
</section>
  <section id="ammt322.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt322_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmdb_t
                  (mmdbent,
                   mmdbdocno,
                   mmdbseq
                   ,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008,mmdb010,mmdb012,mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005,mmdb007,mmdb009,mmdb011,mmdb013,mmdb015,mmdb017,mmdb019,mmdb021,mmdb023) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmdb_d[g_detail_idx].mmdbsite,g_mmdb_d[g_detail_idx].mmdb001,g_mmdb_d[g_detail_idx].mmdb002, 
                       g_mmdb_d[g_detail_idx].mmdb004,g_mmdb_d[g_detail_idx].mmdb006,g_mmdb_d[g_detail_idx].mmdb008, 
                       g_mmdb_d[g_detail_idx].mmdb010,g_mmdb_d[g_detail_idx].mmdb012,g_mmdb_d[g_detail_idx].mmdb014, 
                       g_mmdb_d[g_detail_idx].mmdb016,g_mmdb_d[g_detail_idx].mmdb018,g_mmdb_d[g_detail_idx].mmdb020, 
                       g_mmdb_d[g_detail_idx].mmdb022,g_mmdb_d[g_detail_idx].mmdbunit,g_mmdb_d[g_detail_idx].mmdb003, 
                       g_mmdb_d[g_detail_idx].mmdb005,g_mmdb_d[g_detail_idx].mmdb007,g_mmdb_d[g_detail_idx].mmdb009, 
                       g_mmdb_d[g_detail_idx].mmdb011,g_mmdb_d[g_detail_idx].mmdb013,g_mmdb_d[g_detail_idx].mmdb015, 
                       g_mmdb_d[g_detail_idx].mmdb017,g_mmdb_d[g_detail_idx].mmdb019,g_mmdb_d[g_detail_idx].mmdb021, 
                       g_mmdb_d[g_detail_idx].mmdb023)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmdb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="ammt322.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt322_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt322_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmdb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt322_bcl USING g_enterprise,
                                       g_mmda_m.mmdadocno,g_mmdb_d[g_detail_idx].mmdbseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt322_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt322.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmdasite,'',mmda001,mmdadocdt,mmda002,'',mmdadocno,mmdaunit,mmdastus, 
       mmdaownid,'',mmdaowndp,'',mmdacrtid,'',mmdacrtdp,'',mmdacrtdt,mmdamodid,'',mmdamoddt,mmdacnfid, 
       '',mmdacnfdt", 
                      " FROM mmda_t",
                      " WHERE mmdaent= ? AND mmdadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt322_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmdasite,mmda001,mmdadocdt,mmda002,mmdadocno,mmdaunit,mmdastus,mmdaownid, 
       mmdaowndp,mmdacrtid,mmdacrtdp,mmdacrtdt,mmdamodid,mmdamoddt,mmdacnfid,mmdacnfdt,t1.ooefl003 , 
       t2.oocql004 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM mmda_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2055' AND t2.oocql002=mmda002 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=mmdaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=mmdaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=mmdacrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=mmdacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=mmdamodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmdacnfid  ",
 
               " WHERE mmdaent = '" ||g_enterprise|| "' AND mmdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt322_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt322 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt322_init()   
 
      #進入選單 Menu (="N")
      CALL ammt322_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt322
      
   END IF 
   
   CLOSE ammt322_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="ammt322.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt322_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmda_m.mmdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
 
   ERROR ""
  
   LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
   CALL s_transaction_begin()
   
   OPEN ammt322_cl USING g_enterprise,g_mmda_m.mmdadocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt322_cl:", STATUS, 1)
      CLOSE ammt322_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmda_m.mmdadocno,SQLCA.sqlcode,0)
      CLOSE ammt322_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt322_show()
   WHILE TRUE
      LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmda_m.mmdamodid = g_user 
LET g_mmda_m.mmdamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammt322_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmda_m.* = g_mmda_m_t.*
         CALL ammt322_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmda_t SET (mmdamodid,mmdamoddt) = (g_mmda_m.mmdamodid,g_mmda_m.mmdamoddt)
       WHERE mmdaent = g_enterprise AND mmdadocno = g_mmdadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_mmda_m.mmdadocno != g_mmdadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmdb_t SET mmdbdocno = g_mmda_m.mmdadocno
 
          WHERE mmdbent = g_enterprise AND mmdbdocno = g_mmdadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmdb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmda_m.mmdadocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammt322_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmda_m.mmdadocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="ammt322.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="ammt322.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="ammt322.query" ver="4" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt322_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmdb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt322_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt322_browser_fill("")
      CALL ammt322_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt322_filter_show('mmdadocno')
   CALL ammt322_filter_show('mmdadocdt')
   CALL ammt322_filter_show('mmda001')
   CALL ammt322_filter_show('mmda002')
   CALL ammt322_filter_show('mmdasite')
   CALL ammt322_filter_show('mmdaunit')
   CALL ammt322_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammt322_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt322.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt322_reproduce()
   DEFINE l_newno     LIKE mmda_t.mmdadocno 
   DEFINE l_oldno     LIKE mmda_t.mmdadocno 
 
   DEFINE l_master    RECORD LIKE mmda_t.*
   DEFINE l_detail    RECORD LIKE mmdb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmda_m.mmdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmdadocno_t = g_mmda_m.mmdadocno
 
    
   LET g_mmda_m.mmdadocno = ""
 
    
   CALL ammt322_set_entry('a')
   CALL ammt322_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmda_m.mmdaownid = g_user
      LET g_mmda_m.mmdaowndp = g_dept
      LET g_mmda_m.mmdacrtid = g_user
      LET g_mmda_m.mmdacrtdp = g_dept 
      LET g_mmda_m.mmdacrtdt = cl_get_current()
      LET g_mmda_m.mmdamodid = ""
      LET g_mmda_m.mmdamoddt = ""
      LET g_mmda_m.mmdastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt322_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmdadocno = '", g_mmda_m.mmdadocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt322.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt322_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmdadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt322.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt322_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="ammt322.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt322_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmdadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt322.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt322_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="ammt322.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt322_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmda_m.mmdadocno
   LET g_pk_array[1].column = 'mmdadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="ammt322.show" ver="8" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt322_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmda_m_t.* = g_mmda_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammt322_b_fill() #單身填充
      CALL ammt322_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmda_m.mmdaownid_desc = cl_get_username(g_mmda_m.mmdaownid)
      #LET g_mmda_m.mmdaowndp_desc = cl_get_deptname(g_mmda_m.mmdaowndp)
      #LET g_mmda_m.mmdacrtid_desc = cl_get_username(g_mmda_m.mmdacrtid)
      #LET g_mmda_m.mmdacrtdp_desc = cl_get_deptname(g_mmda_m.mmdacrtdp)
      #LET g_mmda_m.mmdamodid_desc = cl_get_username(g_mmda_m.mmdamodid)
      #LET g_mmda_m.mmdacnfid_desc = cl_get_deptname(g_mmda_m.mmdacnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt322_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmda_m.mmdasite,g_mmda_m.mmdasite_desc,g_mmda_m.mmda001,g_mmda_m.mmdadocdt,g_mmda_m.mmda002, 
       g_mmda_m.mmda002_desc,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtid_desc, 
       g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdp_desc,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid,g_mmda_m.mmdamodid_desc, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfid_desc,g_mmda_m.mmdacnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmda_m.mmdastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmdb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt322_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt322.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="ammt322.state_change" ver="5" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt322_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmda_m.mmdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmda_m.mmdastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmda_t SET mmdastus = lc_state 
    WHERE mmdaent = g_enterprise AND mmdadocno = g_mmda_m.mmdadocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_mmda_m.mmdastus = lc_state
      DISPLAY BY NAME g_mmda_m.mmdastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="ammt322.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt322_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmdadocno = g_mmda_m.mmdadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="ammt322.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt322_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammt322.ui_dialog" ver="11" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt322_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt322_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt322_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmdadocno = g_mmdadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt322_fetch('') # reload data
               LET l_ac = 1
               CALL ammt322_ui_detailshow() #Setting the current row 
      
               CALL ammt322_idx_chk()
               #NEXT FIELD mmdbseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt322_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt322_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt322_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt322_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt322_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt322_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt322_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt322_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammt322_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt322_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt322_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt322_idx_chk()
            
         ON ACTION previous
            CALL ammt322_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt322_idx_chk()
            
         ON ACTION jump
            CALL ammt322_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt322_idx_chk()
            
         ON ACTION next
            CALL ammt322_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt322_idx_chk()
            
         ON ACTION last
            CALL ammt322_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt322_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmdbseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt322_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt322_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt322_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt322_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt322_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt322_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt322_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt322_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmda_m.mmdadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="ammt322.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt322_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmda_m.mmdadocno = g_browser[g_current_idx].b_mmdadocno   
 
   EXECUTE ammt322_master_referesh USING g_mmda_m.mmdadocno INTO g_mmda_m.mmdasite,g_mmda_m.mmda001, 
       g_mmda_m.mmdadocdt,g_mmda_m.mmda002,g_mmda_m.mmdadocno,g_mmda_m.mmdaunit,g_mmda_m.mmdastus,g_mmda_m.mmdaownid, 
       g_mmda_m.mmdaowndp,g_mmda_m.mmdacrtid,g_mmda_m.mmdacrtdp,g_mmda_m.mmdacrtdt,g_mmda_m.mmdamodid, 
       g_mmda_m.mmdamoddt,g_mmda_m.mmdacnfid,g_mmda_m.mmdacnfdt,g_mmda_m.mmdasite_desc,g_mmda_m.mmda002_desc, 
       g_mmda_m.mmdaownid_desc,g_mmda_m.mmdaowndp_desc,g_mmda_m.mmdacrtid_desc,g_mmda_m.mmdacrtdp_desc, 
       g_mmda_m.mmdamodid_desc,g_mmda_m.mmdacnfid_desc
   CALL ammt322_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt322.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt322_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt322_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt322.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt322_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmdb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmdb_t 
         SET (mmdbdocno,
              mmdbseq
              ,mmdbsite,mmdb001,mmdb002,mmdb004,mmdb006,mmdb008,mmdb010,mmdb012,mmdb014,mmdb016,mmdb018,mmdb020,mmdb022,mmdbunit,mmdb003,mmdb005,mmdb007,mmdb009,mmdb011,mmdb013,mmdb015,mmdb017,mmdb019,mmdb021,mmdb023) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmdb_d[g_detail_idx].mmdbsite,g_mmdb_d[g_detail_idx].mmdb001,g_mmdb_d[g_detail_idx].mmdb002, 
                  g_mmdb_d[g_detail_idx].mmdb004,g_mmdb_d[g_detail_idx].mmdb006,g_mmdb_d[g_detail_idx].mmdb008, 
                  g_mmdb_d[g_detail_idx].mmdb010,g_mmdb_d[g_detail_idx].mmdb012,g_mmdb_d[g_detail_idx].mmdb014, 
                  g_mmdb_d[g_detail_idx].mmdb016,g_mmdb_d[g_detail_idx].mmdb018,g_mmdb_d[g_detail_idx].mmdb020, 
                  g_mmdb_d[g_detail_idx].mmdb022,g_mmdb_d[g_detail_idx].mmdbunit,g_mmdb_d[g_detail_idx].mmdb003, 
                  g_mmdb_d[g_detail_idx].mmdb005,g_mmdb_d[g_detail_idx].mmdb007,g_mmdb_d[g_detail_idx].mmdb009, 
                  g_mmdb_d[g_detail_idx].mmdb011,g_mmdb_d[g_detail_idx].mmdb013,g_mmdb_d[g_detail_idx].mmdb015, 
                  g_mmdb_d[g_detail_idx].mmdb017,g_mmdb_d[g_detail_idx].mmdb019,g_mmdb_d[g_detail_idx].mmdb021, 
                  g_mmdb_d[g_detail_idx].mmdb023) 
         WHERE mmdbent = g_enterprise AND mmdbdocno = ps_keys_bak[1] AND mmdbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmdb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmdb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>