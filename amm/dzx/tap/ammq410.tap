<add_points prog="ammq410" std_prog="ammq410" erpver="1.0" module="AMM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.b_mmar001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar001  #顯示到畫面上

            NEXT FIELD b_mmar001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.b_mmar002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar002  #顯示到畫面上

            NEXT FIELD b_mmar002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.b_mmar005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmar005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar005  #顯示到畫面上

            NEXT FIELD b_mmar005                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.b_mmar007" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar007  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD b_mmar007                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.b_mmar010" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar010  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD b_mmar010                     #返回原欄位

]]>
</point>
  <point name="function.ammq410_mmar010_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION ammq410_mmar010_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmar_d[l_ac].mmar010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmar_d[l_ac].mmar010_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmar_d[l_ac].mmar010_desc
END FUNCTION]]>
</point>
  <point name="function.ammq410_mmar002_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION ammq410_mmar002_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmar_d[l_ac].mmar002
            CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
            LET g_mmar_d[l_ac].mmar002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmar_d[l_ac].mmar002_desc
END FUNCTION]]>
</point>
  <point name="function.ammq410_mmar007_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="3" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION ammq410_mmar007_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmar_d[l_ac].mmar007
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmar_d[l_ac].mmar007_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmar_d[l_ac].mmar007_desc
END FUNCTION]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET g_wc = cl_replace_str(g_wc,"mmar006","TRUNC(mmar006)")
   LET g_wc_filter = cl_replace_str(g_wc_filter,"mmar006","TRUNC(mmar006)")]]>
</point>
  <point name="construct.c.page1.mmar001" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[       
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
            CALL q_mmaq001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar001  #顯示到畫面上

            NEXT FIELD b_mmar001                    #返回原欄位]]>
</point>
  <point name="construct.c.page1.mmar002" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[    
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar002  #顯示到畫面上

            NEXT FIELD b_mmar002                     #返回原欄位
]]>
</point>
  <point name="construct.c.page1.mmar005" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[       
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmar005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar005  #顯示到畫面上

            NEXT FIELD b_mmar005                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.mmar007" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[      
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
			LET g_qryparam.arg1 = g_site
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar007  #顯示到畫面上

            NEXT FIELD b_mmar007                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.mmar010" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[    
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE 
			LET g_qryparam.arg1 = g_site
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_mmar010  #顯示到畫面上

            NEXT FIELD b_mmar010                     #返回原欄位]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CALL ammq410_mmar010_ref()
            CALL ammq410_mmar002_ref()
            CALL ammq410_mmar007_ref()]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE l_values     STRING
   DEFINE l_items      STRING
   DEFINE l_gzcb002    LIKE gzcb_t.gzcb002
   DEFINE l_gzcbl004   LIKE gzcbl_t.gzcbl004]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc("b_mmar003",6512) 
   CALL cl_set_combo_scc("b_mmar004",6513) ]]>
</point>
  <point name="input.a.page1.mmar001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_mmar_d[g_detail_idx].mmar001 IS NOT NULL AND g_mmar_d[g_detail_idx].mmar005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmar_d[g_detail_idx].mmar001 != g_mmar_d_t.mmar001 OR g_mmar_d[g_detail_idx].mmar005 != g_mmar_d_t.mmar005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmar_t WHERE "||"mmarent = '" ||g_enterprise|| "' AND "||"mmar001 = '"||g_mmar_d[g_detail_idx].mmar001 ||"' AND "|| "mmar005 = '"||g_mmar_d[g_detail_idx].mmar005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.mmar002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page1.mmar004" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_mmar_d[g_detail_idx].mmar001 IS NOT NULL AND g_mmar_d[g_detail_idx].mmar004 IS NOT NULL AND g_mmar_d[g_detail_idx].mmar005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmar_d[g_detail_idx].mmar001 != g_mmar_d_t.mmar001 OR g_mmar_d[g_detail_idx].mmar004 != g_mmar_d_t.mmar004 OR g_mmar_d[g_detail_idx].mmar005 != g_mmar_d_t.mmar005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmar_t WHERE "||"mmarent = '" ||g_enterprise|| "' AND "||"mmar001 = '"||g_mmar_d[g_detail_idx].mmar001 ||"' AND "|| "mmar004 = '"||g_mmar_d[g_detail_idx].mmar004 ||"' AND "|| "mmar005 = '"||g_mmar_d[g_detail_idx].mmar005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.mmar005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_mmar_d[g_detail_idx].mmar001 IS NOT NULL AND g_mmar_d[g_detail_idx].mmar005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmar_d[g_detail_idx].mmar001 != g_mmar_d_t.mmar001 OR g_mmar_d[g_detail_idx].mmar005 != g_mmar_d_t.mmar005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmar_t WHERE "||"mmarent = '" ||g_enterprise|| "' AND "||"mmar001 = '"||g_mmar_d[g_detail_idx].mmar001 ||"' AND "|| "mmar005 = '"||g_mmar_d[g_detail_idx].mmar005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.mmar007" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page1.mmar010" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.bef_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.datainfo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_selall" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_selnone" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_sel" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_unsel" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.filter" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.agendum" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_mmar006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_mmar009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_mmar008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_mmar003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_mmar004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_mmar005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_mmar005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.after_fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="reproduce.control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="ammq410.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammq410_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET g_sql = "SELECT  UNIQUE mmar001,mmar002,'',mmar006,mmar009,mmar008,mmar003,mmar010,'',mmar007, 
       '',mmar004,mmar005 FROM mmar_t",
 
 
               "",
               " WHERE mmarent= ? AND 1=1 AND ", ls_wc
    
   LET g_sql = g_sql, " ORDER BY mmar_t.mmar001,mmar_t.mmar004,mmar_t.mmar005"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE ammq410_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR ammq410_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_mmar_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_mmar_d[l_ac].mmar001,g_mmar_d[l_ac].mmar002,g_mmar_d[l_ac].mmar002_desc, 
       g_mmar_d[l_ac].mmar006,g_mmar_d[l_ac].mmar009,g_mmar_d[l_ac].mmar008,g_mmar_d[l_ac].mmar003,g_mmar_d[l_ac].mmar010, 
       g_mmar_d[l_ac].mmar010_desc,g_mmar_d[l_ac].mmar007,g_mmar_d[l_ac].mmar007_desc,g_mmar_d[l_ac].mmar004, 
       g_mmar_d[l_ac].mmar005
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET g_mmar_d[l_ac].sel = "N"
      #LET g_mmar_d[l_ac].statepic = cl_get_actipic(g_mmar_d[l_ac].statepic)
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL ammq410_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
 
   
   CALL g_mmar_d.deleteElement(g_mmar_d.getLength())   
 
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE ammq410_pb
   
   LET l_ac = 1
   CALL ammq410_fetch()
   
      CALL ammq410_filter_show('mmar001','b_mmar001')
   CALL ammq410_filter_show('mmar002','b_mmar002')
   CALL ammq410_filter_show('mmar006','b_mmar006')
   CALL ammq410_filter_show('mmar009','b_mmar009')
   CALL ammq410_filter_show('mmar008','b_mmar008')
   CALL ammq410_filter_show('mmar003','b_mmar003')
   CALL ammq410_filter_show('mmar010','b_mmar010')
   CALL ammq410_filter_show('mmar007','b_mmar007')
   CALL ammq410_filter_show('mmar004','b_mmar004')
   CALL ammq410_filter_show('mmar005','b_mmar005')
 
   
END FUNCTION
]]>
</section>
  <section id="ammq410.delete" ver="1" status="" src="s">
<![CDATA[#+ delete
PRIVATE FUNCTION ammq410_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="ammq410.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000054
#+ 
#+ Filename...: ammq410
#+ Description: 會員積分異動查詢作業
#+ Creator....: 02748(2014/02/13)
#+ Modifier...: 02748(2014/02/14)
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammq410.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION ammq410_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.body.reference"/>}
   #end add-point
   
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="ammq410.fetch" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammq410_fetch()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
 
   
   LET li_ac = l_ac 
   
 
   
   #DISPLAY g_detail_cnt TO FORMONLY.cnt
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="ammq410.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammq410_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmar001,mmar002,mmar006,mmar009,mmar008,mmar003,mmar010,mmar007,mmar004, 
          mmar005
                          FROM s_detail1[1].b_mmar001,s_detail1[1].b_mmar002,s_detail1[1].b_mmar006, 
                              s_detail1[1].b_mmar009,s_detail1[1].b_mmar008,s_detail1[1].b_mmar003,s_detail1[1].b_mmar010, 
                              s_detail1[1].b_mmar007,s_detail1[1].b_mmar004,s_detail1[1].b_mmar005
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY ammq410_filter_parser('mmar001') TO s_detail1[1].b_mmar001
            DISPLAY ammq410_filter_parser('mmar002') TO s_detail1[1].b_mmar002
            DISPLAY ammq410_filter_parser('mmar006') TO s_detail1[1].b_mmar006
            DISPLAY ammq410_filter_parser('mmar009') TO s_detail1[1].b_mmar009
            DISPLAY ammq410_filter_parser('mmar008') TO s_detail1[1].b_mmar008
            DISPLAY ammq410_filter_parser('mmar003') TO s_detail1[1].b_mmar003
            DISPLAY ammq410_filter_parser('mmar010') TO s_detail1[1].b_mmar010
            DISPLAY ammq410_filter_parser('mmar007') TO s_detail1[1].b_mmar007
            DISPLAY ammq410_filter_parser('mmar004') TO s_detail1[1].b_mmar004
            DISPLAY ammq410_filter_parser('mmar005') TO s_detail1[1].b_mmar005
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL ammq410_filter_show('mmar001','b_mmar001')
   CALL ammq410_filter_show('mmar002','b_mmar002')
   CALL ammq410_filter_show('mmar006','b_mmar006')
   CALL ammq410_filter_show('mmar009','b_mmar009')
   CALL ammq410_filter_show('mmar008','b_mmar008')
   CALL ammq410_filter_show('mmar003','b_mmar003')
   CALL ammq410_filter_show('mmar010','b_mmar010')
   CALL ammq410_filter_show('mmar007','b_mmar007')
   CALL ammq410_filter_show('mmar004','b_mmar004')
   CALL ammq410_filter_show('mmar005','b_mmar005')
 
    
   CALL ammq410_b_fill()
   CALL ammq410_fetch()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
]]>
</section>
  <section id="ammq410.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter欄位解析
PRIVATE FUNCTION ammq410_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="ammq410.filter_show" ver="1" status="" src="s">
<![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION ammq410_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammq410_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="ammq410.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_mmar_d RECORD
       #statepic       LIKE type_t.chr1,
       sel            LIKE type_t.chr1,
       mmar001 LIKE mmar_t.mmar001, 
   mmar002 LIKE mmar_t.mmar002, 
   mmar002_desc LIKE type_t.chr500, 
   mmar006 DATETIME YEAR TO SECOND, 
   mmar009 LIKE mmar_t.mmar009, 
   mmar008 LIKE mmar_t.mmar008, 
   mmar003 LIKE mmar_t.mmar003, 
   mmar010 LIKE mmar_t.mmar010, 
   mmar010_desc LIKE type_t.chr500, 
   mmar007 LIKE mmar_t.mmar007, 
   mmar007_desc LIKE type_t.chr500, 
   mmar004 LIKE mmar_t.mmar004, 
   mmar005 LIKE mmar_t.mmar005 
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_mmar_d
DEFINE g_master_t                   type_g_mmar_d
DEFINE g_mmar_d          DYNAMIC ARRAY OF type_g_mmar_d
DEFINE g_mmar_d_t        type_g_mmar_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammq410.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION ammq410_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammq410.insert" ver="1" status="" src="s">
<![CDATA[#+ insert
PRIVATE FUNCTION ammq410_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammq410.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE ammq410_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammq410 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammq410_init()   
 
      #進入選單 Menu (="N")
      CALL ammq410_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammq410
      
   END IF 
   
   CLOSE ammq410_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="ammq410.modify" ver="1" status="" src="s">
<![CDATA[#+ modify
PRIVATE FUNCTION ammq410_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="ammq410.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="ammq410.query" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammq410_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_mmar_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON mmar001,mmar002,mmar006,mmar009,mmar008,mmar003,mmar010,mmar007,mmar004, 
          mmar005
           FROM s_detail1[1].b_mmar001,s_detail1[1].b_mmar002,s_detail1[1].b_mmar006,s_detail1[1].b_mmar009, 
               s_detail1[1].b_mmar008,s_detail1[1].b_mmar003,s_detail1[1].b_mmar010,s_detail1[1].b_mmar007, 
               s_detail1[1].b_mmar004,s_detail1[1].b_mmar005
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<mmar001>>----
         #Ctrlp:construct.c.page1.mmar001
         ON ACTION controlp INFIELD mmar001
            #add-point:ON ACTION controlp INFIELD mmar001
            {<point name="construct.c.page1.mmar001" />}
            #END add-point
 
         #----<<mmar002>>----
         #Ctrlp:construct.c.page1.mmar002
         ON ACTION controlp INFIELD mmar002
            #add-point:ON ACTION controlp INFIELD mmar002
            {<point name="construct.c.page1.mmar002" />}
            #END add-point
 
         #----<<mmar006>>----
         #Ctrlp:construct.c.page1.mmar006
         ON ACTION controlp INFIELD mmar006
            #add-point:ON ACTION controlp INFIELD mmar006
            {<point name="construct.c.page1.mmar006" />}
            #END add-point
 
         #----<<mmar009>>----
         #Ctrlp:construct.c.page1.mmar009
         ON ACTION controlp INFIELD mmar009
            #add-point:ON ACTION controlp INFIELD mmar009
            {<point name="construct.c.page1.mmar009" />}
            #END add-point
 
         #----<<mmar008>>----
         #Ctrlp:construct.c.page1.mmar008
         ON ACTION controlp INFIELD mmar008
            #add-point:ON ACTION controlp INFIELD mmar008
            {<point name="construct.c.page1.mmar008" />}
            #END add-point
 
         #----<<mmar003>>----
         #Ctrlp:construct.c.page1.mmar003
         ON ACTION controlp INFIELD mmar003
            #add-point:ON ACTION controlp INFIELD mmar003
            {<point name="construct.c.page1.mmar003" />}
            #END add-point
 
         #----<<mmar010>>----
         #Ctrlp:construct.c.page1.mmar010
         ON ACTION controlp INFIELD mmar010
            #add-point:ON ACTION controlp INFIELD mmar010
            {<point name="construct.c.page1.mmar010" />}
            #END add-point
 
         #----<<mmar007>>----
         #Ctrlp:construct.c.page1.mmar007
         ON ACTION controlp INFIELD mmar007
            #add-point:ON ACTION controlp INFIELD mmar007
            {<point name="construct.c.page1.mmar007" />}
            #END add-point
 
         #----<<mmar004>>----
         #Ctrlp:construct.c.page1.mmar004
         ON ACTION controlp INFIELD mmar004
            #add-point:ON ACTION controlp INFIELD mmar004
            {<point name="construct.c.page1.mmar004" />}
            #END add-point
 
         #----<<mmar005>>----
         #Ctrlp:construct.c.page1.mmar005
         ON ACTION controlp INFIELD mmar005
            #add-point:ON ACTION controlp INFIELD mmar005
            {<point name="construct.c.page1.mmar005" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL ammq410_b_fill()
   LET l_ac = g_master_idx
   CALL ammq410_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
]]>
</section>
  <section id="ammq410.reproduce" ver="1" status="" src="s">
<![CDATA[#+ reproduce
PRIVATE FUNCTION ammq410_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="ammq410.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION ammq410_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   CALL ammq410_query()
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_mmar_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_mmar_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL ammq410_fetch()
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
            NEXT FIELD sel
      
         
 
         ON ACTION datainfo
 
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN 
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL ammq410_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_mmar_d.getLength()
               LET g_mmar_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_mmar_d.getLength()
               LET g_mmar_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_mmar_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_mmar_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_mmar_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_mmar_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL ammq410_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL ammq410_b_fill()
            CALL ammq410_fetch()
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
</add_points>