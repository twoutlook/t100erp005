<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammt300" std_prog="ammt300" erpver="1.0" module="AMM" ver="14" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.c.page2.mmae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmae002  #顯示到畫面上

            NEXT FIELD mmae002                     #返回原欄位

]]>
  </point>
  <point name="input.c.page4.mmab004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac4_d[l_ac].mmab004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmac4_d[l_ac].mmab003 #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac4_d[l_ac].mmab004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac4_d[l_ac].mmab004 TO mmab004              #顯示到畫面上

            NEXT FIELD mmab004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.mmab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac4_d[l_ac].mmab002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2049" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac4_d[l_ac].mmab002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac4_d[l_ac].mmab002 TO mmab002              #顯示到畫面上

            NEXT FIELD mmab002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.mmad002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac3_d[l_ac].mmad002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2051" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac3_d[l_ac].mmad002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac3_d[l_ac].mmad002 TO mmad002              #顯示到畫面上

            NEXT FIELD mmad002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.mmae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac2_d[l_ac].mmae002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2057" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac2_d[l_ac].mmae002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac2_d[l_ac].mmae002 TO mmae002              #顯示到畫面上

            NEXT FIELD mmae002                          #返回原欄位

]]>
  </point>
  <point name="input.a.page4.mmab004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_mmac4_d[l_ac].mmab004_desc = null
            DISPLAY BY NAME g_mmac4_d[l_ac].mmab004_desc
            IF NOT cl_null(g_mmac4_d[l_ac].mmab004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmac4_d[l_ac].mmab004 != g_mmac4_d_t.mmab004 or g_mmac4_d_t.mmab004 IS NULL))) THEN 
                  CALL ammt300_mmab004(g_mmac4_d[l_ac].mmab003,g_mmac4_d[l_ac].mmab004)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac4_d[l_ac].mmab004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac4_d[l_ac].mmab004 = g_mmac4_d_t.mmab004
                     CALL ammt300_display_mmab004()
                     NEXT FIELD mmab004
                  END IF
               END IF
            END IF            
            CALL ammt300_display_mmab004()  ]]>
  </point>
  <point name="input.a.page4.mmab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac4_d[l_ac].mmab002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac4_d[l_ac].mmab002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac4_d[l_ac].mmab002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac4_d[g_detail_idx].mmab002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac4_d[g_detail_idx].mmab002 != g_mmac4_d_t.mmab002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmab_t WHERE "||"mmabent = '" ||g_enterprise|| "' AND "||"mmabdocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmab002 = '"||g_mmac4_d[g_detail_idx].mmab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD mmab002
                  END IF
                  
               END IF
            END IF
  
]]>
  </point>
  <point name="input.a.page3.mmad002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_mmac3_d[l_ac].mmad002_desc = null
            DISPLAY BY NAME g_mmac3_d[l_ac].mmad002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac3_d[g_detail_idx].mmad002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac3_d[g_detail_idx].mmad002 != g_mmac3_d_t.mmad002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmad_t WHERE "||"mmadent = '" ||g_enterprise|| "' AND "||"mmaddocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmad002 = '"||g_mmac3_d[g_detail_idx].mmad002 ||"'",'std-00004',0) THEN 
                     LET g_mmac3_d[l_ac].mmad002 = g_mmac3_d_t.mmad002
                     NEXT FIELD mmad002
                  END IF
                  CALL ammt300_mmad002('2051',g_mmac3_d[l_ac].mmad002)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac3_d[l_ac].mmad002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac3_d[l_ac].mmad002 = g_mmac3_d_t.mmad002
                     CALL ammt300_display_mmad002()
                     NEXT FIELD mmad002
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmad002()
]]>
  </point>
  <point name="input.a.page2.mmae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_mmac2_d[l_ac].mmae002_desc = NULL
            DISPLAY BY NAME g_mmac2_d[l_ac].mmae002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac2_d[g_detail_idx].mmae002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac2_d[g_detail_idx].mmae002 != g_mmac2_d_t.mmae002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmae_t WHERE "||"mmaeent = '" ||g_enterprise|| "' AND "||"mmaedocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmae002 = '"||g_mmac2_d[g_detail_idx].mmae002 ||"'",'std-00004',0) THEN 
                     LET g_mmac2_d[l_ac].mmae002 = g_mmac2_d_t.mmae002
                     CALL ammt300_display_mmae002()
                     NEXT FIELD mmae002
                  END IF
                  CALL ammt300_mmae002('2057',g_mmac2_d[l_ac].mmae002)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac2_d[l_ac].mmae002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac2_d[l_ac].mmae002 = g_mmac2_d_t.mmae002
                     CALL ammt300_display_mmae002()
                     NEXT FIELD mmae002
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmae002()
]]>
  </point>
  <point name="construct.c.page4.mmab004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmab004  #顯示到畫面上

            NEXT FIELD mmab004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.mmab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmab002  #顯示到畫面上

            NEXT FIELD mmab002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.mmad002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmad002  #顯示到畫面上

            NEXT FIELD mmad002                     #返回原欄位

]]>
  </point>
  <point name="function.ammt300_display_mmaa016" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmaa016
PRIVATE FUNCTION ammt300_display_mmaa016()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaa_m.mmaa016
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmaa_m.mmaa016_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_mmaa_m.mmaa016_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmaa017" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmaa017
PRIVATE FUNCTION ammt300_display_mmaa017()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaa_m.mmaa017
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_mmaa_m.mmaa017_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_mmaa_m.mmaa017_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmaa018" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmaa018
PRIVATE FUNCTION ammt300_display_mmaa018()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaa_m.mmaa018
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmaa_m.mmaa018_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_mmaa_m.mmaa018_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_carry_mmaa" order="4" ver="11" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ carry mmaa_t
PRIVATE FUNCTION ammt300_carry_mmaa()
   DEFINE  l_mmaf   RECORD LIKE mmaf_t.*
   DEFINE  l_mmaastus   LIKE mmaa_t.mmaastus
   INITIALIZE l_mmaf.* TO NULL
   SELECT * INTO l_mmaf.* FROM mmaf_t WHERE mmafent = g_enterprise
      AND mmaf001 = g_mmaa_m.mmaa001 
   LET g_mmaa_m.mmaa003 = l_mmaf.mmaf003
   LET g_mmaa_m.mmaa004 = l_mmaf.mmaf004
   LET g_mmaa_m.mmaa005 = l_mmaf.mmaf005
   LET g_mmaa_m.mmaa006 = l_mmaf.mmaf006
   LET g_mmaa_m.mmaa007 = l_mmaf.mmaf007
   LET g_mmaa_m.mmaa008 = l_mmaf.mmaf008
   LET g_mmaa_m.mmaa009 = l_mmaf.mmaf009
   LET g_mmaa_m.mmaa010 = l_mmaf.mmaf010
   LET g_mmaa_m.mmaa011 = l_mmaf.mmaf011
   LET g_mmaa_m.mmaa012 = l_mmaf.mmaf012
   LET g_mmaa_m.mmaa013 = l_mmaf.mmaf013
   LET g_mmaa_m.mmaa014 = l_mmaf.mmaf014
   LET g_mmaa_m.mmaa015 = l_mmaf.mmaf015
   LET g_mmaa_m.mmaa016 = l_mmaf.mmaf016
   LET g_mmaa_m.mmaa017 = l_mmaf.mmaf017
   LET g_mmaa_m.mmaa018 = l_mmaf.mmaf018
   LET g_mmaa_m.mmaa019 = l_mmaf.mmaf019
   #huangrh add maaud001-maaud030----20150608--
   LET g_mmaa_m.mmaaud001 = l_mmaf.mmafud001
   LET g_mmaa_m.mmaaud002 = l_mmaf.mmafud002
   LET g_mmaa_m.mmaaud003 = l_mmaf.mmafud003
   LET g_mmaa_m.mmaaud004 = l_mmaf.mmafud004
   LET g_mmaa_m.mmaaud005 = l_mmaf.mmafud005
   LET g_mmaa_m.mmaaud006 = l_mmaf.mmafud006
   LET g_mmaa_m.mmaaud007 = l_mmaf.mmafud007
   LET g_mmaa_m.mmaaud008 = l_mmaf.mmafud008
   LET g_mmaa_m.mmaaud009 = l_mmaf.mmafud009
   LET g_mmaa_m.mmaaud010 = l_mmaf.mmafud010
   LET g_mmaa_m.mmaaud011 = l_mmaf.mmafud011
   LET g_mmaa_m.mmaaud012 = l_mmaf.mmafud012
   LET g_mmaa_m.mmaaud013 = l_mmaf.mmafud013
   LET g_mmaa_m.mmaaud014 = l_mmaf.mmafud014
   LET g_mmaa_m.mmaaud015 = l_mmaf.mmafud015
   LET g_mmaa_m.mmaaud016 = l_mmaf.mmafud016
   LET g_mmaa_m.mmaaud017 = l_mmaf.mmafud017
   LET g_mmaa_m.mmaaud018 = l_mmaf.mmafud018
   LET g_mmaa_m.mmaaud019 = l_mmaf.mmafud019
   LET g_mmaa_m.mmaaud020 = l_mmaf.mmafud020
   LET g_mmaa_m.mmaaud021 = l_mmaf.mmafud021
   LET g_mmaa_m.mmaaud022 = l_mmaf.mmafud022
   LET g_mmaa_m.mmaaud023 = l_mmaf.mmafud023
   LET g_mmaa_m.mmaaud024 = l_mmaf.mmafud024
   LET g_mmaa_m.mmaaud025 = l_mmaf.mmafud025
   LET g_mmaa_m.mmaaud026 = l_mmaf.mmafud026
   LET g_mmaa_m.mmaaud027 = l_mmaf.mmafud027
   LET g_mmaa_m.mmaaud028 = l_mmaf.mmafud028
   LET g_mmaa_m.mmaaud029 = l_mmaf.mmafud029
   LET g_mmaa_m.mmaaud030 = l_mmaf.mmafud030   
   
   LET l_mmaastus = l_mmaf.mmafstus
   IF l_mmaastus = 'X' THEN
      LET g_mmaa_m.mmaaacti= 'N'
   ELSE
      LET g_mmaa_m.mmaaacti= 'Y'       
   END IF    
   DISPLAY BY NAME   g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa005,g_mmaa_m.mmaa006,g_mmaa_m.mmaa007,g_mmaa_m.mmaa008,
   g_mmaa_m.mmaa009,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa015,
   g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa019   
END FUNCTION]]>
  </point>
  <point name="function.ammt300_adress" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create adress()
PRIVATE FUNCTION ammt300_adress(p_sign)
DEFINE  l_oocn002   LIKE oocn_t.oocn002
DEFINE  l_mmaa011   LIKE mmaa_t.mmaa011
DEFINE  l_mmaa010   LIKE mmaa_t.mmaa010
DEFINE  p_sign      LIKE type_t.chr1
   IF g_mmaa_m.mmaastus<>'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "amm-00038"
      LET g_errparam.extend = g_mmaa_m.mmaastus
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   CALL s_transaction_begin()
   CALL s_ammt300_conf_chk(g_mmaa_m.mmaadocno,g_mmaa_m.mmaastus) RETURNING g_success,g_errno
   IF NOT cl_null(g_errno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = g_mmaa_m.mmaadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   CALL ammt300_01(g_mmaa_m.mmaadocno,g_enterprise,g_sign) RETURNING g_errno,l_mmaa010,l_mmaa011
   IF NOT cl_null(g_errno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = g_mmaa_m.mmaadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
   IF NOT cl_null(l_mmaa010) THEN
      LET g_mmaa_m.mmaa010 = l_mmaa010
   END IF
   IF NOT cl_null(l_mmaa011) THEN
      LET g_mmaa_m.mmaa011 = l_mmaa011
   END IF
   CALL s_transaction_end('Y','0')    
   DISPLAY BY NAME g_mmaa_m.mmaa010,g_mmaa_m.mmaa011
END FUNCTION]]>
  </point>
  <point name="function.ammt300_carry_detail" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+carry detail
PRIVATE FUNCTION ammt300_carry_detail()
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_Sql        STRING
   DEFINE l_cnt        LIKE type_t.num5

   LET g_errno = ''
   IF g_mmaa_m.mmaa000 = 'I' THEN
      RETURN
   END IF

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM mmab_t
    WHERE mmabent = g_enterprise
      AND mmabdocno = g_mmaa_m.mmaadocno
   IF l_cnt = 0 THEN
      LET l_sql = " INSERT INTO mmab_t( ",
                  "        mmab002,  mmab003 , mmab004 , ",
                  "        mmabacti , mmabdocno, mmabent ,mmab001)",
                  " SELECT mmag002 , mmag003, mmag004 ,  ",
                  "        mmagstus ,  '",g_mmaa_m.mmaadocno,"',mmagent,mmag001",
                  "   FROM mmag_t ",
                  "  WHERE mmagent = ",g_enterprise," AND mmag001 = '",g_mmaa_m.mmaa001,"'"
      PREPARE ins_mmab_pre FROM l_sql
      EXECUTE ins_mmab_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins mmab_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET g_errno = SQLCA.sqlcode
      END IF
   END IF

   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM mmac_t
    WHERE mmacent = g_enterprise
      AND mmacdocno = g_mmaa_m.mmaadocno
   IF l_cnt = 0 THEN
      LET l_sql = " INSERT INTO mmac_t( ",
                  "        mmac002,  mmac003 , mmac004 ,mmac005,mmac006, ",
                  "        mmacacti , mmacdocno, mmacent ,mmac001)",
                  " SELECT mmah002 , mmah003, mmah004 , mmah005,mmah006, ",
                  "        mmahstus ,  '",g_mmaa_m.mmaadocno,"',mmahent,mmah001",
                  "   FROM mmah_t ",
                  "  WHERE mmahent = ",g_enterprise," AND mmah001 = '",g_mmaa_m.mmaa001,"'"
      PREPARE ins_mmac_pre FROM l_sql
      EXECUTE ins_mmac_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins mmac_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET g_errno = SQLCA.sqlcode
      END IF
   END IF

   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM mmad_t
    WHERE mmadent = g_enterprise
      AND mmaddocno = g_mmaa_m.mmaadocno
      
   IF l_cnt = 0 THEN
      LET l_sql = " INSERT INTO mmad_t( ",
                  "        mmad002, ",
                  "        mmadacti , mmaddocno, mmadent ,mmad001)",
                  " SELECT mmai002 , ",
                  "        mmaistus ,  '",g_mmaa_m.mmaadocno,"',mmaient,mmai001",
                  "   FROM mmai_t ",
                  "  WHERE mmaient = ",g_enterprise," AND mmai001 = '",g_mmaa_m.mmaa001,"'"
      PREPARE ins_mmad_pre FROM l_sql
      EXECUTE ins_mmad_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins mmad_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET g_errno = SQLCA.sqlcode
      END IF
   END IF

   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM mmae_t
    WHERE mmaeent = g_enterprise
      AND mmaedocno = g_mmaa_m.mmaadocno
   IF l_cnt = 0 THEN
      LET l_sql = " INSERT INTO mmae_t( ",
                  "        mmae002,",
                  "        mmaeacti , mmaedocno, mmaeent,mmae001) ",
                  " SELECT mmaj002,",
                  "        mmajstus ,  '",g_mmaa_m.mmaadocno,"',mmajent,mmaj001",
                  "   FROM mmaj_t ",
                  "  WHERE mmajent = ",g_enterprise," AND mmaj001 = '",g_mmaa_m.mmaa001,"'"
      PREPARE ins_mmae_pre FROM l_sql
      EXECUTE ins_mmae_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins mmae_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET g_errno = SQLCA.sqlcode
      END IF
   END IF

   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmaa019" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmaa019
PRIVATE FUNCTION ammt300_display_mmaa019()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaa_m.mmaa019
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_mmaa_m.mmaa019_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_mmaa_m.mmaa019_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmac002" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmac002
PRIVATE FUNCTION ammt300_mmac002()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM oocq_t WHERE oocq001='2050' AND oocq002 =g_mmac_d[l_ac].mmac002
      AND oocqent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "amm-00121"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM oocq_t WHERE oocq001='2050' AND oocq002 =g_mmac_d[l_ac].mmac002
         AND oocqent = g_enterprise 
         AND oocqstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00117"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmac003" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmac003
PRIVATE FUNCTION ammt300_mmac003(p_mmac003)
   DEFINE l_mmac004    LIKE mmac_t.mmac004
   DEFINE l_mmac005    LIKE mmac_t.mmac005
   DEFINE l_mmac006    LIKE mmac_t.mmac006
   DEFINE l_mmac003    STRING
   define p_mmac003    like mmac_t.mmac003
   LET l_mmac004 = NULL
   LET l_mmac005 = NULL
   LET l_mmac006 = NULL
   LET l_mmac003 = p_mmac003
   IF NOT cl_null(p_mmac003) THEN
      LET l_mmac004 = l_mmac003.substring(1,4)
      LET l_mmac005 = l_mmac003.substring(6,7)
      LET l_mmac006 = l_mmac003.substring(9,10)
   END IF
   RETURN l_mmac004,l_mmac005,l_mmac006
END FUNCTION]]>
  </point>
  <point name="function.ammt300_newno" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk
PRIVATE FUNCTION ammt300_newno(p_newno)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5
   DEFINE   p_newno LIKE mmaa_t.mmaadocno   
   LET g_errno = null
   SELECT ooef004 INTO g_ooef004    FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   SELECT COUNT(*) INTO l_cnt  FROM ooba_t WHERE ooba001 = g_ooef004 AND ooba002=p_newno
      AND ooba005 = 'ammt300'
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt  FROM ooba_t WHERE ooba001 = g_ooef004 AND ooba002=p_newno
      AND ooba005 = 'ammt300' AND oobastus='Y'
      IF l_cnt <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmab004" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmab004
PRIVATE FUNCTION ammt300_mmab004(p_c,p_mmab004)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   DEFINE   p_c     LIKE type_t.chr10
   DEFINE   p_mmab004  LIKE mmab_t.mmab004
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmab004
      AND oocqent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "amm-00122"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmab004
         AND oocqent = g_enterprise 
         AND oocqstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00118"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_insert_mmab002" order="12" ver="11" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ insert
PRIVATE FUNCTION ammt300_insert_mmab002()
   DEFINE l_sql    STRING
   DEFINE l_oocq002    LIKE oocq_t.oocq002
   DEFINE l_oocq004    LIKE oocq_t.oocq004
   DEFINE l_oocqstus   LIKE oocq_t.oocqstus
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_oocq005    LIKE oocq_t.oocq005
   
   LET l_success = TRUE
   
   #huangrh add oocq005---20150605
   LET l_sql = "SELECT oocq002,oocq004,oocq005,oocqstus FROM oocq_t WHERE oocq001 = '2049' AND oocqstus='Y' AND oocqent = ",g_enterprise clipped,"  ORDER BY oocq002 "
   PREPARE l_sql_pre FROM l_sql
   DECLARE l_sql_cs CURSOR FOR l_sql_pre
   FOREACH l_sql_cs INTO l_oocq002,l_oocq004,l_oocq005,l_oocqstus
      INSERT INTO mmab_t(mmabent,mmabdocno,mmab001,mmab002,mmab003,mmab004,mmabacti)
       VALUES (g_enterprise,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa001,l_oocq002,l_oocq004,l_oocq005,l_oocqstus)
#      INSERT INTO mmab_t(mmabent,mmabdocno,mmab001,mmab002,mmab003) VALUES (g_enterprise,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa001,l_oocq002,l_oocq004)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmab_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
         
      ELSE
         
      END IF      
   END FOREACH
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa001" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa001
PRIVATE FUNCTION ammt300_mmaa001()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 

   LET g_errno = null
   LET l_cnt1 = 0
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt  FROM mmaa_t WHERE mmaa001 =g_mmaa_m.mmaa001 AND mmaaent = g_enterprise
      AND mmaastus = 'N' AND mmaadocno ! = g_mmaa_m.mmaadocno
   IF l_cnt > 0 THEN
      LET g_errno = "amm-00020"
   END IF
   IF g_mmaa_m.mmaa000 = 'U' THEN
      
      SELECT COUNT(*) INTO l_cnt1  FROM mmaf_t WHERE mmaf001 =g_mmaa_m.mmaa001 AND mmafent = g_enterprise
         AND mmafstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00021"
      END IF         
   END IF
   LET l_cnt1 = 0
   IF g_mmaa_m.mmaa000 = 'I' THEN
      
      SELECT COUNT(*) INTO l_cnt1  FROM mmaf_t WHERE mmaf001 =g_mmaa_m.mmaa001 AND mmafent = g_enterprise
         AND mmafstus='Y'
      IF l_cnt1 > 0 THEN
         LET g_errno = "amm-00025"
      END IF         
   END IF
   
   
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa002" order="14" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create
PRIVATE FUNCTION ammt300_mmaa002()
   DEFINE l_cnt         LIKE type_t.num5
   define l_mmafstus    like mmaf_t.mmafstus
   SELECT MAX(mmaa002)+1  INTO g_mmaa_m.mmaa002 FROM mmaa_t WHERE mmaa001 = g_mmaa_m.mmaa001 AND mmaaent = g_enterprise
  #IF cl_null(g_mmaa_m.mmaa002) OR g_mmaa_m.mmaa002=0 THEN #sakur mark
  #   LET g_mmaa_m.mmaa002= 1                              #sakur mark
   IF cl_null(g_mmaa_m.mmaa002) THEN #sakura add
      LET g_mmaa_m.mmaa002= 0        #sakura add
   END IF
   LET g_mmaa_m.mmaa002 = g_mmaa_m.mmaa002 USING "<<<<<<<<<&"
   IF g_mmaa_m.mmaa000='U' THEN
      CALL ammt300_carry_mmaa()
   END IF
   DISPLAY BY NAME g_mmaa_m.mmaa002
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmae002" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display mmae002
PRIVATE FUNCTION ammt300_display_mmae002()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmac2_d[l_ac].mmae002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2057' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmac2_d[l_ac].mmae002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmac2_d[l_ac].mmae002_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmab004" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display mmab004
PRIVATE FUNCTION ammt300_display_mmab004()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmac4_d[l_ac].mmab003
   LET g_ref_fields[2] = g_mmac4_d[l_ac].mmab004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmac4_d[l_ac].mmab004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmac4_d[l_ac].mmab004_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmac002" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmac002
PRIVATE FUNCTION ammt300_display_mmac002()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmac_d[l_ac].mmac002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2050' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmac_d[l_ac].mmac002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmac_d[l_ac].mmac002_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmad002" order="18" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display mmad002
PRIVATE FUNCTION ammt300_display_mmad002()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmac3_d[l_ac].mmad002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2051' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmac3_d[l_ac].mmad002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmac3_d[l_ac].mmad002_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa017" order="19" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa017
PRIVATE FUNCTION ammt300_mmaa017(p_mmaa017)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   DEFINE   p_mmaa017    LIKE mmaa_t.mmaa017
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM ooag_t WHERE ooag001 =p_mmaa017 AND ooagent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00069"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooag_t WHERE ooag001 =p_mmaa017 AND ooagent = g_enterprise
         AND ooagstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00008"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa018" order="20" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa018
PRIVATE FUNCTION ammt300_mmaa018()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM ooef_t WHERE ooef001 =g_mmaa_m.mmaa018 AND ooefent=g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00163"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooef_t WHERE ooef001 =g_mmaa_m.mmaa018  AND ooefent=g_enterprise AND ooefstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaadocno" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaadocno
PRIVATE FUNCTION ammt300_mmaadocno()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   LET g_errno = null
   SELECT ooef004 INTO g_ooef004    FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   SELECT COUNT(*) INTO l_cnt  FROM oobl_t WHERE oobl001 = g_ooef004 AND oobl002=g_mmaa_m.mmaadocno
      AND oobl003 = 'ammt300'
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt  FROM ooba_t,oobl_t
       WHERE ooba001=oobl001 AND ooba002 = oobl002 AND ooba001 = g_ooef004 AND ooba002=g_mmaa_m.mmaadocno
         AND oobl003 = 'ammt300' AND oobastus='Y'
      IF l_cnt <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa016" order="22" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa016
PRIVATE FUNCTION ammt300_mmaa016()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM pmaa_t WHERE pmaa001 =g_mmaa_m.mmaa016 AND pmaaent = g_enterprise
      AND pmaa002 IN ('2','3') 
   IF l_cnt <= 0 THEN
      LET g_errno = "amm-00009"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM pmaa_t WHERE pmaa001 =g_mmaa_m.mmaa016 AND pmaaent = g_enterprise
         AND pmaa002 IN ('2','3') 
         AND pmaastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00010"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa003" order="23" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa003
PRIVATE FUNCTION ammt300_mmaa003()
   LET g_errno =null
   IF g_mmaa_m.mmaa003 ='1' or  g_mmaa_m.mmaa003 ='2' THEN
      IF cl_null(g_mmaa_m.mmaa004)  THEN
         LET g_errno = "aoo-00052"
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa006" order="24" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa006
PRIVATE FUNCTION ammt300_mmaa006(p_cmd)
   DEFINE p_cmd     LIKE type_t.chr1 
 
   LET g_mmaa_m.mmaa008 = g_mmaa_m.mmaa005 CLIPPED,g_mmaa_m.mmaa006 CLIPPED,g_mmaa_m.mmaa007

   DISPLAY BY NAME g_mmaa_m.mmaa008
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmaa010" order="25" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmaa010
PRIVATE FUNCTION ammt300_mmaa010()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5
   DEFINE   l_ooef006  LIKE ooef_t.ooef006
   DEFINE   l_oocn001  LIKE oocn_t.oocn001
   DEFINE   l_oocn003  LIKE oocn_t.oocn003
   DEFINE   l_oocn004  LIKE oocn_t.oocn004
   DEFINE   l_oocn005  LIKE oocn_t.oocn005
   DEFINE   l_oocn006  LIKE oocn_t.oocn006 
   DEFINE   l_oocgl003      LIKE oocgl_t.oocgl003
   DEFINE   l_oocil004      LIKE oocil_t.oocil004
   DEFINE   l_oockl005      LIKE oockl_t.oockl005
   DEFINE   l_oocml006      LIKE oocml_t.oocml006   
   LET g_errno = NULL
   SELECT COUNT(*) INTO l_cnt  FROM oocn_t WHERE oocn002 =g_mmaa_m.mmaa010 AND oocnent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00151"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM oocn_t WHERE oocn002 =g_mmaa_m.mmaa010 AND oocnent = g_enterprise 
         AND oocnstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aoo-00152"
      END IF         
   END IF
   IF cl_null(g_errno) THEN
      SELECT ooef006 INTO l_ooef006 
        FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
      SELECT oocn001,oocn003,oocn004,oocn005,oocn006 INTO l_oocn001,l_oocn003,l_oocn004,l_oocn005,l_oocn006
        FROM oocn_t
       WHERE oocn002 = g_mmaa_m.mmaa010 AND rownum=1
      
      SELECT COALESCE(oockl005,oockl003) INTO l_oockl005 FROM oockl_t 
       WHERE oocklent=g_enterprise
         AND oockl004=g_dlang  AND oockl001=l_oocn001 AND oockl002= l_oocn003
         AND oockl003 = l_oocn004 AND oocklent = g_enterprise

      SELECT COALESCE(oocil004,oocil002) INTO l_oocil004 FROM oocil_t WHERE oocil001 = l_oocn001
         AND oocil002 = l_oocn003 AND oocil003 = g_dlang  AND oocilent = g_enterprise
      
      SELECT COALESCE(oocml006,oocml004) INTO l_oocml006 FROM oocml_t
       WHERE oocml001 = l_oocn001 AND oocml002 = l_oocn003 AND oocml003 = l_oocn004
         AND oocml004 = l_oocn005 AND oocml005 = g_dlang AND oocmlent = g_enterprise
   
      SELECT COALESCE(oocgl003,oocgl001) INTO l_oocgl003 FROM oocgl_t 
       WHERE oocgl001 = l_oocn001 AND oocgl002 = g_dlang AND oocglent = g_enterprise 

      IF cl_null(l_oockl005) THEN LET l_oockl005 = l_oocn004 END IF
      IF cl_null(l_oocil004) THEN LET l_oocil004 = l_oocn003 END IF
      IF cl_null(l_oocml006) THEN LET l_oocml006 = l_oocn005 END IF
      IF cl_null(l_oocgl003) THEN LET l_oocgl003 = l_oocn001 END IF
      IF (g_mmaa_m.mmaa010<>g_mmaa_m_t.mmaa010 or g_mmaa_m_t.mmaa010 is null)  OR  cl_null(g_mmaa_m.mmaa011) THEN
         LET g_mmaa_m.mmaa011 = l_oocgl003 CLIPPED,l_oocil004 CLIPPED,l_oockl005 CLIPPED,l_oocml006 CLIPPED,l_oocn006 CLIPPED
      END IF      
      DISPLAY g_mmaa_m.mmaa011 TO mmaa011
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmad002" order="26" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#chk mmad002
PRIVATE FUNCTION ammt300_mmad002(p_c,p_mmad002)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   DEFINE   p_c     LIKE type_t.chr10
   DEFINE   p_mmad002  LIKE mmad_t.mmad002
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmad002
      AND oocqent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "amm-00119"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmad002
         AND oocqent = g_enterprise 
         AND oocqstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00115"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_mmae002" order="27" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#chk mmae002
PRIVATE FUNCTION ammt300_mmae002(p_c,p_mmae002)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   DEFINE   p_c     LIKE type_t.chr10
   DEFINE   p_mmae002  LIKE mmae_t.mmae002
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmae002
      AND oocqent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "amm-00120"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM oocq_t WHERE oocq001=p_c AND oocq002 =p_mmae002
         AND oocqent = g_enterprise 
         AND oocqstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00116"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_insert_mmac002" order="28" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#insert birthday
PRIVATE FUNCTION ammt300_insert_mmac002()
   DEFINE l_sql    STRING
   DEFINE l_oocq002    LIKE mmac_t.mmac002
   DEFINE l_oocq004    LIKE oocq_t.oocq004
   DEFINE l_mmac004    LIKE mmac_t.mmac004
   DEFINE l_mmac005    LIKE mmac_t.mmac005
   DEFINE l_mmac006    LIKE mmac_t.mmac006
   DEFINE l_success    LIKE type_t.num5
   LET l_success = TRUE
   SELECT ooaa002 INTO l_oocq002 FROM ooaa_t WHERE ooaa001 = 'E-CIR-0004' AND ooaaent=g_enterprise
   CALL ammt300_mmac003(g_mmaa_m.mmaa015) RETURNING l_mmac004,l_mmac005,l_mmac006

   INSERT INTO mmac_t(mmacent,mmacdocno,mmac001,mmac002,mmac003,mmac004,mmac005,mmac006,mmacacti)
   VALUES (g_enterprise,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa001,l_oocq002,g_mmaa_m.mmaa015,l_mmac004,l_mmac005,l_mmac006,'Y')

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "mmac_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_success = FALSE
      RETURN l_success
   ELSE
         
   END IF
   RETURN l_success   
END FUNCTION]]>
  </point>
  <point name="function.ammt300_delete_mmaa001" order="29" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#delete mmaa001
PRIVATE FUNCTION ammt300_delete_mmaa001()
   DEFINE l_success  LIKE type_t.num5
   LET g_errno = NULL
   LET l_success = TRUE
   DELETE FROM mmac_t WHERE mmacdocno = g_mmaa_m.mmaadocno AND mmacent = g_enterprise
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      LET l_success = FALSE
      RETURN l_success
   END IF
   call g_mmac_d.clear()
   DELETE FROM mmab_t WHERE mmabdocno = g_mmaa_m.mmaadocno AND mmabent = g_enterprise
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      LET l_success = FALSE
      RETURN l_success
   END IF
   call g_mmac4_d.clear()
   DELETE FROM mmad_t WHERE mmaddocno = g_mmaa_m.mmaadocno AND mmadent = g_enterprise
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      LET l_success = FALSE
      RETURN l_success
   END IF
   call g_mmac3_d.clear()
   DELETE FROM mmae_t WHERE mmaedocno = g_mmaa_m.mmaadocno AND mmaeent = g_enterprise
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      LET l_success = FALSE
      RETURN l_success
   END IF
   call g_mmac2_d.clear()   
   RETURN l_success   
END FUNCTION]]>
  </point>
  <point name="function.ammt300_update_mmaa015" order="30" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#update mmaa015
PRIVATE FUNCTION ammt300_update_mmaa015()
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_oocq002    LIKE oocq_t.oocq002
   
   LET l_success = TRUE
   LET g_errno = NULL
   SELECT ooaa002 INTO l_oocq002 FROM ooaa_t WHERE ooaa001 = 'E-CIR-0004' AND ooaaent=g_enterprise
   
   IF g_mmac_d[l_ac].mmac002 = l_oocq002 THEN
      UPDATE mmaa_t SET mmaa015 =  g_mmac_d[l_ac].mmac003
       WHERE mmaaent = g_enterprise AND mmaadocno = g_mmaa_m.mmaadocno       
                        
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
      ELSE
         let g_mmaa_m.mmaa015 = g_mmac_d[l_ac].mmac003
      END IF
   END IF
   DISPLAY BY NAME g_mmaa_m.mmaa015
END FUNCTION]]>
  </point>
  <point name="function.ammt300_update_mmac002" order="31" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#update mmac002
PRIVATE FUNCTION ammt300_update_mmac002()
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_mmac004    LIKE mmac_t.mmac004
   DEFINE l_mmac005    LIKE mmac_t.mmac005
   DEFINE l_mmac006    LIKE mmac_t.mmac006
   define l_oocq002    like oocq_t.oocq002
   
   let g_errno = null
   SELECT ooaa002 INTO l_oocq002 FROM ooaa_t WHERE ooaa001 = 'E-CIR-0004' AND ooaaent=g_enterprise
   CALL ammt300_mmac003(g_mmaa_m.mmaa015) RETURNING l_mmac004,l_mmac005,l_mmac006
   UPDATE mmac_t SET mmac003 =  g_mmaa_m.mmaa015,
                     mmac004 = l_mmac004,
                     mmac005 = l_mmac005,
                     mmac006 = l_mmac006
    WHERE mmacent = g_enterprise AND mmacdocno = g_mmaa_m.mmaadocno
      AND mmac002 = l_oocq002        
                        
   IF SQLCA.sqlcode THEN
      let g_errno = SQLCA.sqlcode
   ELSE
         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt300_update_mmaa001" order="32" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#update mmaa001
PRIVATE FUNCTION ammt300_update_mmaa001()
   DEFINE l_true          LIKE type_t.num5

   LET l_true = TRUE
   CALL s_transaction_begin()
   INPUT BY NAME g_mmaa_m.mmaa001  ATTRIBUTE(WITHOUT DEFAULTS)
   
      AFTER FIELD mmaa001
         IF NOT cl_null(g_mmaa_m.mmaa001) THEN
            IF g_mmaa_m.mmaa001 <> g_mmaa_m_t.mmaa001 OR cl_null(g_mmaa_m_t.mmaa001) THEN
               CALL ammt300_mmaa001()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmaa_m.mmaa001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmaa_m.mmaa001 = g_mmaa_m_t.mmaa001
                  NEXT FIELD mmaa001
               END IF
            END IF
         END IF
            
      AFTER INPUT 
        UPDATE mmaa_t 
           SET mmaa001 = g_mmaa_m.mmaa001
         WHERE mmaaent = g_enterprise 
           AND mmaadocno = g_mmaa_m.mmaadocno
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = "upd_mmaa"
           LET g_errparam.popup = TRUE
           CALL cl_err()
  
           LET l_true = FALSE
        END IF
        UPDATE mmab_t 
           SET mmab001 = g_mmaa_m.mmaa001
         WHERE mmabent = g_enterprise 
           AND mmabdocno = g_mmaa_m.mmaadocno
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = "upd_mmab"
           LET g_errparam.popup = TRUE
           CALL cl_err()
  
           LET l_true = FALSE
        END IF           
        UPDATE mmac_t 
           SET mmac001 = g_mmaa_m.mmaa001
         WHERE mmacent = g_enterprise 
           AND mmacdocno = g_mmaa_m.mmaadocno
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = "upd_mmac"
           LET g_errparam.popup = TRUE
           CALL cl_err()
  
           LET l_true = FALSE
        END IF        
        UPDATE mmad_t 
           SET mmad001 = g_mmaa_m.mmaa001
         WHERE mmadent = g_enterprise 
           AND mmaddocno = g_mmaa_m.mmaadocno
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = "upd_mmad"
           LET g_errparam.popup = TRUE
           CALL cl_err()
  
           LET l_true = FALSE
        END IF 
        UPDATE mmae_t 
           SET mmae001 = g_mmaa_m.mmaa001
         WHERE mmaeent = g_enterprise 
           AND mmaedocno = g_mmaa_m.mmaadocno
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = "upd_mmae"
           LET g_errparam.popup = TRUE
           CALL cl_err()
  
           LET l_true = FALSE
        END IF
        
        IF NOT l_true THEN        
           CALL s_transaction_end('N','0')
        ELSE
           CALL s_transaction_end('Y','0')
        END IF        
        EXIT INPUT
   END INPUT
END FUNCTION]]>
  </point>
  <point name="function.ammt300_display_mmaasite" order="33" ver="4" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
#display mmaasite
################################################################################
PRIVATE FUNCTION ammt300_display_mmaasite()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaa_m.mmaasite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmaa_m.mmaasite_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_mmaa_m.mmaasite_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_oocq002  LIKE oocq_t.oocq002]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL ammt300_display_mmac002()  ]]>
  </point>
  <point name="b_fill.sql" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      SELECT ooaa002 INTO l_oocq002 FROM ooaa_t WHERE ooaa001 = 'E-CIR-0004' AND ooaaent=g_enterprise
      
      LET g_sql = "SELECT  UNIQUE mmac001,mmac002,mmac003,mmacacti ,t1.oocql004 FROM mmac_t",   
                  " INNER JOIN mmaa_t ON mmaadocno = mmacdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='2050' AND t1.oocql002=mmac002 AND t1.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmacent=? AND mmacdocno=?"
      
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF      
      IF NOT cl_null(l_oocq002) THEN
         LET g_sql = g_sql CLIPPED, " AND mmac002<>'",l_oocq002 clipped,"' "
      END IF
      LET g_sql = g_sql, " ORDER BY mmac_t.mmac002"]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL ammt300_display_mmae002()]]>
  </point>
  <point name="b_fill3.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      
         CALL ammt300_display_mmad002()]]>
  </point>
  <point name="b_fill4.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmac4_d[l_ac].mmab002
      
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmac4_d[l_ac].mmab002_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_mmac4_d[l_ac].mmab002_desc
         CALL ammt300_display_mmab004()]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'mmaasite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim() ]]>
  </point>
  <point name="browser_fill.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="construct.a.mmaaud021" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.a.mmaaud022" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.a.mmaaud023" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.c.mmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa001  #顯示到畫面上

            NEXT FIELD mmaa001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocn002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa010  #顯示到畫面上

            NEXT FIELD mmaa010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaa016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1="('2','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa016  #顯示到畫面上

            NEXT FIELD mmaa016                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaa017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa017  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oofa011 #全名 

            NEXT FIELD mmaa017                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaa018" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg2 = '8'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa018  #顯示到畫面上
            LET g_qryparam.arg2 = null
            NEXT FIELD mmaa018                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaa019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaa019  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oofa011 #全名 

            NEXT FIELD mmaa019                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaacnfid  #顯示到畫面上

            NEXT FIELD mmaacnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaacrtdp  #顯示到畫面上

            NEXT FIELD mmaacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaacrtid  #顯示到畫面上

            NEXT FIELD mmaacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mmaadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaadocno  #顯示到畫面上

            NEXT FIELD mmaadocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaamodid  #顯示到畫面上

            NEXT FIELD mmaamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaaowndp  #顯示到畫面上

            NEXT FIELD mmaaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaaownid  #顯示到畫面上

            NEXT FIELD mmaaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmaasite" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmaasite',g_site,'c')   #150308-00001#4 150309 by lori522612 add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mmaasite  #顯示到畫面上
            NEXT FIELD mmaasite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.mmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            if not cl_null(g_oocq002) then
               let g_qryparam.where = "oocq002!='",g_oocq002,"'"
            end if   
            CALL q_oocq002()                           #呼叫開窗
            LET g_qryparam.where = null
            DISPLAY g_qryparam.return1 TO mmac002  #顯示到畫面上

            NEXT FIELD mmac002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmab002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmab002  #顯示到畫面上

            NEXT FIELD mmab002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmab004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmab004  #顯示到畫面上

            NEXT FIELD mmab004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.mmae002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmae002  #顯示到畫面上

            NEXT FIELD mmae002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page4.mmad002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmad002  #顯示到畫面上

            NEXT FIELD mmad002                     #返回原欄位

]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #sakura---add---str
      IF NOT s_aooi200_del_docno(g_mmaa_m.mmaadocno,g_mmaa_m.mmaadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #sakura---add---end]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_mmaa_m.mmaastus <> "N" THEN
      CALL cl_set_act_visible("delete,modify", FALSE)
   ELSE
      CALL cl_set_act_visible("delete,modify", true)    
   END IF]]>
  </point>
  <point name="global.argv" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_site_flag   LIKE type_t.num5 #sakura add]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_sign                LIKE type_t.chr1
define g_oocq002             like oocq_t.oocq002]]>
  </point>
  <point name="init.define" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 #150308-00001#4 150309 by lori522612 add]]>
  </point>
  <point name="init.init" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   CALL cl_set_combo_scc('b_mmaa000','32')
   CALL cl_set_comp_visible("mmab002,mmab001,mmac001,mmad001,mmae001,mmab003",FALSE)
   LET g_chkparam.arg1 = g_user
   CALL cl_ref_val("v_ooef006")
   CALL cl_set_comp_entry("mmaastus",false)]]>
  </point>
  <point name="input.a.mmaa000" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            call ammt300_set_entry(p_cmd)
            call ammt300_set_no_entry(p_cmd)
            IF g_mmaa_m.mmaa000='I' THEN
               LET g_mmaa_m.mmaa002 = '0'
               DISPLAY BY NAME g_mmaa_m.mmaa002
            END IF
            IF g_mmaa_m.mmaa000 <> g_mmaa_m_o.mmaa000 THEN
               LET g_mmaa_m.mmaa001 = ''
            END IF
            LET g_mmaa_m_o.mmaa000 = g_mmaa_m.mmaa000]]>
  </point>
  <point name="input.a.mmaa001" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa001 != g_mmaa_m_t.mmaa001 ))) THEN 
                  ########################150520-00041#1
                  IF NOT s_aooi390_chk('9',g_mmaa_m.mmaa001) THEN
                     LET g_mmaa_m.mmaa001 = g_mmaa_m_t.mmaa001
                     DISPLAY BY NAME g_mmaa_m.mmaa001
                     NEXT FIELD mmaa001
                  END IF   
                  ########################
                  CALL ammt300_mmaa001()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaadocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa001 = g_mmaa_m_t.mmaa001
                     NEXT FIELD mmaa001
                  END IF
                  CALL ammt300_delete_mmaa001() RETURNING l_success
                  IF l_success<>'1' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaadocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa001 = g_mmaa_m_t.mmaa001
                     NEXT FIELD mmaa001
                  END IF
                  CALL ammt300_mmaa002()
                                                   
               END IF
            END IF 
            ]]>
  </point>
  <point name="input.a.mmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmaa_m.mmaa002) THEN 
               
            END IF 
]]>
  </point>
  <point name="input.a.mmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_mmaa_m.mmaa003 ='1' or  g_mmaa_m.mmaa003 ='2' THEN
               NEXT FIELD mmaa004
            END IF]]>
  </point>
  <point name="input.a.mmaa004" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL ammt300_mmaa003()
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_mmaa_m.mmaa004
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD mmaa004
            END IF
            
            INITIALIZE l_ooef011 TO NULL 
            SELECT ooef011 INTO l_ooef011 
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_mmaa_m.mmaasite
            IF NOT cl_null(g_mmaa_m.mmaa004) THEN
                IF l_ooef011 = 'CN' THEN                  
                   IF g_mmaa_m.mmaa003 = '1' THEN
                      LET l_cnt = 0
                      LET l_mmaa004 = g_mmaa_m.mmaa004
                      LET l_cnt = l_mmaa004.getlength()
                      IF l_cnt != 15 AND l_cnt != 18 THEN
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'amm-00455'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         CALL cl_err()
                         LET g_mmaa_m.mmaa004 = g_mmaa_m_o.mmaa004                        
                         NEXT FIELD mmaa004
                      END IF
                   END IF
                   LET l_cnt = 0
                   SELECT COUNT(*) INTO l_cnt 
                     FROM mmaa_t
                    WHERE mmaaent = g_enterprise  
                      AND mmaa004 = g_mmaa_m.mmaa004
                   IF l_cnt > 0 THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'amm-00456'
                      LET g_errparam.extend = ''
                      LET g_errparam.popup = TRUE
                      CALL cl_err()
                      LET g_mmaa_m.mmaa004 = g_mmaa_m_o.mmaa004                        
                      NEXT FIELD mmaa004
                   END IF                      
                END IF 
                IF l_ooef011 = 'TW' THEN               
                   IF g_mmaa_m.mmaa003 = '1' THEN
                      LET l_cnt = 0
                      LET l_mmaa004 = g_mmaa_m.mmaa004
                      LET l_cnt = l_mmaa004.getlength()
                      IF l_cnt != 10 THEN
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'amm-00457'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         CALL cl_err()   
                         LET g_mmaa_m.mmaa004 = g_mmaa_m_o.mmaa004                      
                         NEXT FIELD mmaa004
                      END IF
                   END IF                      
                END IF
            END IF                    ]]>
  </point>
  <point name="input.a.mmaa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CALL ammt300_mmaa006(p_cmd)]]>
  </point>
  <point name="input.a.mmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL ammt300_mmaa006(p_cmd)]]>
  </point>
  <point name="input.a.mmaa007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL ammt300_mmaa006(p_cmd)]]>
  </point>
  <point name="input.a.mmaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa010) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa010 != g_mmaa_m_t.mmaa010 OR g_mmaa_m_t.mmaa010 IS NULL))) THEN
                  CALL ammt300_mmaa010()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaa010
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa010 = g_mmaa_m_t.mmaa010
                     NEXT FIELD mmaa010
                  END IF
                  
               END IF
            END IF ]]>
  </point>
  <point name="input.a.mmaa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.a.mmaa014" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE l_ooef011 TO NULL
            SELECT ooef011 INTO l_ooef011 
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_mmaa_m.mmaasite
            IF NOT cl_null(g_mmaa_m.mmaa014) THEN
                IF l_ooef011 = 'CN' THEN                        
                   LET l_cnt = 0
                   LET l_mmaa014 = g_mmaa_m.mmaa014
                   LET l_cnt = l_mmaa014.getlength()
                   IF l_cnt != 11 THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'amm-00458'
                      LET g_errparam.extend = ''
                      LET g_errparam.popup = TRUE
                      CALL cl_err()
                      LET g_mmaa_m.mmaa014 = g_mmaa_m_o.mmaa014                        
                      NEXT FIELD mmaa014
                   END IF
                   LET l_cnt = 0
                   SELECT COUNT(*) INTO l_cnt 
                     FROM mmaa_t
                    WHERE mmaaent = g_enterprise  
                      AND mmaa014 = g_mmaa_m.mmaa014
                   IF l_cnt > 0 THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'amm-00459'
                      LET g_errparam.extend = ''
                      LET g_errparam.popup = TRUE
                      CALL cl_err()
                      LET g_mmaa_m.mmaa014 = g_mmaa_m_o.mmaa014                        
                      NEXT FIELD mmaa014
                   END IF
                   
                   FOR l_cnt=1 TO 11 STEP 1
                      IF cl_null(g_mmaa_m.mmaa014[l_cnt,l_cnt]) OR 
                         g_mmaa_m.mmaa014[l_cnt,l_cnt] NOT MATCHES "[0123456789]" THEN
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'amm-00461'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         CALL cl_err()
                         LET g_mmaa_m.mmaa014 = g_mmaa_m_o.mmaa014                        
                         NEXT FIELD mmaa014 
                        
                      END IF
                   END FOR

                END IF 
                IF l_ooef011 = 'TW' THEN               
                   LET l_cnt = 0
                   LET l_mmaa014 = g_mmaa_m.mmaa014
                   LET l_cnt = l_mmaa014.getlength()
                   IF l_cnt != 10 THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'amm-00460'
                      LET g_errparam.extend = ''
                      LET g_errparam.popup = TRUE
                      CALL cl_err()   
                      LET g_mmaa_m.mmaa014 = g_mmaa_m_o.mmaa014                      
                      NEXT FIELD mmaa014
                   END IF
                   FOR l_cnt=1 TO 10 STEP 1
                      IF cl_null(g_mmaa_m.mmaa014[l_cnt,l_cnt]) OR 
                         g_mmaa_m.mmaa014[l_cnt,l_cnt] NOT MATCHES "[0123456789]" THEN
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'amm-00461'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         CALL cl_err()
                         LET g_mmaa_m.mmaa014 = g_mmaa_m_o.mmaa014                        
                         NEXT FIELD mmaa014 
                        
                      END IF
                   END FOR                   
                END IF
            END IF                ]]>
  </point>
  <point name="input.a.mmaa015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
              ]]>
  </point>
  <point name="input.a.mmaa016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa016) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa016 != g_mmaa_m_t.mmaa016 or g_mmaa_m_t.mmaa016 is null))) THEN
                  CALL ammt300_mmaa016()
                  IF NOT cl_null(g_errno) THEN
                     LET g_mmaa_m.mmaa016_desc = NULL
                     DISPLAY BY NAME g_mmaa_m.mmaa016_desc
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaa016
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa016 = g_mmaa_m_t.mmaa016
                     CALL ammt300_display_mmaa016()
                     NEXT FIELD mmaa016
                  END IF
               END IF
            END IF
            
            CALL ammt300_display_mmaa016()
]]>
  </point>
  <point name="input.a.mmaa017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa017) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa017 != g_mmaa_m_t.mmaa017 or g_mmaa_m_t.mmaa017 is null))) THEN
                  CALL ammt300_mmaa017(g_mmaa_m.mmaa017)
                  IF NOT cl_null(g_errno) THEN
                     LET g_mmaa_m.mmaa017_desc = NULL
                     DISPLAY BY NAME g_mmaa_m.mmaa017_desc
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaa017
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa017 = g_mmaa_m_t.mmaa017
                     CALL ammt300_display_mmaa017()
                     NEXT FIELD mmaa017
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmaa017()
]]>
  </point>
  <point name="input.a.mmaa018" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa018) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa018 != g_mmaa_m_t.mmaa018 or g_mmaa_m_t.mmaa018 is null ))) THEN
#                  CALL ammt300_mmaa018()
#                  IF NOT cl_null(g_errno) THEN
#                     LET g_mmaa_m.mmaa018_desc = NULL
#                     DISPLAY BY NAME g_mmaa_m.mmaa018_desc 
#                     CALL cl_err(g_mmaa_m.mmaa018,g_errno,1)
#                     LET g_mmaa_m.mmaa018 = g_mmaa_m_t.mmaa018
#                     CALL ammt300_display_mmaa018()
#                     NEXT FIELD mmaa018
#                  END IF
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmaa_m.mmaa018
                  LET g_chkparam.arg2 = '8'
                  LET g_chkparam.arg3 = g_site


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooed004") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmaa_m.mmaa018 = g_mmaa_m_t.mmaa018
                     CALL ammt300_display_mmaa018()
                     NEXT FIELD mmaa018
                  END IF
               END IF
            END IF               
            CALL ammt300_display_mmaa018()
]]>
  </point>
  <point name="input.a.mmaa019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_mmaa_m.mmaa019) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa019 != g_mmaa_m_t.mmaa019 or g_mmaa_m_t.mmaa019 is null))) THEN
                  CALL ammt300_mmaa017(g_mmaa_m.mmaa019)
                  IF NOT cl_null(g_errno) THEN
                     LET g_mmaa_m.mmaa019_desc = NULL
                     DISPLAY BY NAME g_mmaa_m.mmaa019_desc
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaa019
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaa019 = g_mmaa_m_t.mmaa019
                     CALL ammt300_display_mmaa019()
                     NEXT FIELD mmaa019
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmaa019()
]]>
  </point>
  <point name="input.a.mmaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacnfid_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaacnfid_desc
]]>
  </point>
  <point name="input.a.mmaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacrtdp_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaacrtdp_desc
]]>
  </point>
  <point name="input.a.mmaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacrtid_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaacrtid_desc
]]>
  </point>
  <point name="input.a.mmaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
#            IF cl_null(g_mmaa_m.mmaadocdt) THEN
#               NEXT FIELD mmaadocdt
#            END IF
#            IF cl_null(g_mmaa_m.mmaadocno) THEN
#               NEXT FIELD mmaadocno
#            END IF
#            CALL cl_set_comp_entry("mmaadocdt,mmaadocno",FALSE)]]>
  </point>
  <point name="input.a.mmaadocno" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaa_m.mmaadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaa_t WHERE "||"mmaaent = '" ||g_enterprise|| "' AND "||"mmaadocno = '"||g_mmaa_m.mmaadocno ||"'",'std-00004',0) THEN 
                     LET g_mmaa_m.mmaadocno = g_mmaadocno_t
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_chk_slip(g_mmaa_m.mmaasite,g_ooef004,g_mmaa_m.mmaadocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_mmaa_m.mmaadocno = g_mmaadocno_t
                     NEXT FIELD mmaadocno
                  END IF
                  
               END IF
               CALL ammt300_mmaa002()
            END IF
#            NEXT FIELD mmaadocdt

]]>
  </point>
  <point name="input.a.mmaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaamodid_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaamodid_desc
]]>
  </point>
  <point name="input.a.mmaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaaowndp_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaaowndp_desc
]]>
  </point>
  <point name="input.a.mmaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaaownid_desc = '(', g_rtn_fields[1] , ')'
            DISPLAY BY NAME g_mmaa_m.mmaaownid_desc
]]>
  </point>
  <point name="input.a.mmaasite" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmaa_m.mmaasite) THEN 
#此段落由子樣板a19產生
               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_mmaa_m.mmaasite
#               LET g_chkparam.arg2 = '8'
#               LET g_chkparam.arg3 = g_site
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooed004") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_mmaa_m.mmaasite = g_mmaa_m_t.mmaasite
#                  DISPLAY BY NAME g_mmaa_m.mmaasite
#                  CALL ammt300_display_mmaasite()
#                  NEXT FIELD CURRENT
#               END IF
               CALL s_aooi500_chk(g_prog,'mmaasite',g_mmaa_m.mmaasite,g_mmaa_m.mmaasite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_mmaa_m.mmaasite = g_mmaa_m_t.mmaasite
                  DISPLAY BY NAME g_mmaa_m.mmaasite
                  CALL ammt300_display_mmaasite()
                  NEXT FIELD CURRENT
               END IF
            #sakura---add---str               
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
			   
               LET g_mmaa_m.mmaasite = g_mmaa_m_t.mmaasite
               DISPLAY BY NAME g_mmaa_m.mmaasite
               CALL ammt300_display_mmaasite()
               NEXT FIELD CURRENT			   
            #sakura---add---end	              
               LET g_mmaa_m.mmaaunit = g_mmaa_m.mmaasite
            END IF
            LET g_site_flag = TRUE #sakura add
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmaa_m.mmaasite_desc
            call ammt300_set_entry(p_cmd)     #sakura add
            call ammt300_set_no_entry(p_cmd)  #sakura add]]>
  </point>
  <point name="input.a.mmaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mmac_d[l_ac].mmac002_desc = NULL
            DISPLAY  g_mmac_d[l_ac].mmac002_desc TO s_detail1[l_ac].mmac002_desc
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac_d[l_ac].mmac002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac_d[l_ac].mmac002 != g_mmac_d_t.mmac002 or g_mmac_d_t.mmac002 is null))) THEN 
                  if g_mmac_d[l_ac].mmac002=g_oocq002 then
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "amm-00123"
                     LET g_errparam.extend = g_mmac_d[l_ac].mmac002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac_d[l_ac].mmac002 = g_mmac_d_t.mmac002
                     CALL ammt300_display_mmac002()
                     NEXT FIELD mmac002
                  END IF
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmac_t WHERE "||"mmacent = '" ||g_enterprise|| "' AND "||"mmacdocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmac002 = '"||g_mmac_d[l_ac].mmac002 ||"'",'std-00004',0) THEN 
                     LET g_mmac_d[l_ac].mmac002 = g_mmac_d_t.mmac002
                     CALL ammt300_display_mmac002()
                     NEXT FIELD CURRENT
                  END IF
                  CALL ammt300_mmac002()
                  IF NOT cl_null(g_errno) THEN
                     
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac_d[l_ac].mmac002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac_d[l_ac].mmac002 = g_mmac_d_t.mmac002
                     CALL ammt300_display_mmac002()
                     NEXT FIELD mmac002
                  END IF                
                                    
               END IF
            END IF
            CALL ammt300_display_mmac002()
]]>
  </point>
  <point name="input.a.page1.mmac003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmac_d[l_ac].mmac003 != g_mmac_d_t.mmac003 or g_mmac_d_t.mmac003 is null))) THEN
                  CALL ammt300_mmac003(g_mmac_d[l_ac].mmac003) RETURNING g_mmac004,g_mmac005,g_mmac006
                  
               END IF]]>
  </point>
  <point name="input.a.page2.mmab002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac2_d[l_ac].mmab002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac2_d[l_ac].mmab002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac2_d[l_ac].mmab002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac2_d[l_ac].mmab002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac2_d[l_ac].mmab002 != g_mmac2_d_t.mmab002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmab_t WHERE "||"mmabent = '" ||g_enterprise|| "' AND "||"mmabdocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmab002 = '"||g_mmac2_d[l_ac].mmab002 ||"'",'std-00004',0) THEN 
                     LET g_mmac2_d[l_ac].mmab002 = g_mmac2_d_t.mmab002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmab004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_mmac2_d[l_ac].mmab004_desc = NULL
            DISPLAY  g_mmac2_d[l_ac].mmab004_desc TO s_detail4[l_ac].mmab004_desc
            IF  NOT cl_null(g_mmac2_d[l_ac].mmab004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (  g_mmac2_d[l_ac].mmab004 != g_mmac2_d_t.mmab004))) THEN 
                  CALL ammt300_mmab004(g_mmac2_d[l_ac].mmab003,g_mmac2_d[l_ac].mmab004)
                  IF NOT cl_null(g_errno) THEN
                     LET g_mmac2_d[l_ac].mmab004_desc = NULL
                     DISPLAY  g_mmac2_d[l_ac].mmab004_desc TO s_detail4[l_ac].mmab004_desc
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac2_d[l_ac].mmab004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac2_d[l_ac].mmab004 = g_mmac2_d_t.mmab004
                     CALL ammt300_display_mmab004()
                     NEXT FIELD mmab004
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmab004()
]]>
  </point>
  <point name="input.a.page3.mmae002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mmac3_d[l_ac].mmae002_desc = NULL
            DISPLAY  g_mmac3_d[l_ac].mmae002_desc TO s_detail2[l_ac].mmae002_desc
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac3_d[l_ac].mmae002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac3_d[l_ac].mmae002 != g_mmac3_d_t.mmae002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmae_t WHERE "||"mmaeent = '" ||g_enterprise|| "' AND "||"mmaedocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmae002 = '"||g_mmac3_d[l_ac].mmae002 ||"'",'std-00004',0) THEN 
                     LET g_mmac3_d[l_ac].mmae002 = g_mmac3_d_t.mmae002
                     CALL ammt300_display_mmae002()
                     NEXT FIELD CURRENT
                  END IF
                  CALL ammt300_mmab004('2057',g_mmac3_d[l_ac].mmae002)
                  IF NOT cl_null(g_errno) THEN                    
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac3_d[l_ac].mmae002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac3_d[l_ac].mmae002 = g_mmac3_d_t.mmae002
                     CALL ammt300_display_mmae002()
                     NEXT FIELD mmae002
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmae002()

]]>
  </point>
  <point name="input.a.page4.mmad002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mmac4_d[l_ac].mmad002_desc = NULL
            DISPLAY g_mmac4_d[l_ac].mmad002_desc TO s_detail3[l_ac].mmad002_desc
            IF  NOT cl_null(g_mmaa_m.mmaadocno) AND NOT cl_null(g_mmac4_d[l_ac].mmad002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaa_m.mmaadocno != g_mmaadocno_t OR g_mmac4_d[l_ac].mmad002 != g_mmac4_d_t.mmad002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmad_t WHERE "||"mmadent = '" ||g_enterprise|| "' AND "||"mmaddocno = '"||g_mmaa_m.mmaadocno ||"' AND "|| "mmad002 = '"||g_mmac4_d[l_ac].mmad002 ||"'",'std-00004',0) THEN 
                     LET g_mmac4_d[l_ac].mmad002 = g_mmac4_d_t.mmad002
                     CALL ammt300_display_mmad002()
                     NEXT FIELD CURRENT
                  END IF
                  CALL ammt300_mmab004('2051',g_mmac4_d[l_ac].mmad002)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac4_d[l_ac].mmad002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac4_d[l_ac].mmad002 = g_mmac4_d_t.mmad002
                     CALL ammt300_display_mmad002()
                     NEXT FIELD mmad002
                  END IF
               END IF
            END IF
            CALL ammt300_display_mmad002()
]]>
  </point>
  <point name="input.b.mmaa001" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' AND g_mmaa_m.mmaa000 = 'I' AND cl_null(g_mmaa_m.mmaa001) THEN    
               CALL s_aooi390_gen('9') RETURNING l_success,g_mmaa_m.mmaa001,l_oofg_return   #add--2015/05/08 By shiun                  
            END IF ]]>
  </point>
  <point name="input.b.mmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF p_cmd='a' THEN
               CALL ammt300_mmaa002()
            END IF]]>
  </point>
  <point name="input.b.mmaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.before_dialog" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   let g_errshow=1
   SELECT ooef004 INTO g_ooef004    FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site    ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               UPDATE mmac_t SET mmac004 = g_mmac004,
                                 mmac005 = g_mmac005,
                                 mmac006 = g_mmac006
                          WHERE mmacdocno =  g_mmaa_m.mmaadocno
                            AND mmac002 =  g_mmac_d[l_ac].mmac002
                            AND mmacent = g_enterprise                            ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_mmac_d[l_ac].mmac003 != g_mmac_d_t.mmac003 or cl_null(g_mmac_d_t.mmac003)THEN
                  UPDATE mmac_t SET mmac004 = g_mmac004,
                                 mmac005 = g_mmac005,
                                 mmac006 = g_mmac006
                          WHERE mmacdocno =  g_mmaa_m.mmaadocno
                            AND mmac002 =  g_mmac_d[l_ac].mmac002
                            AND mmacent = g_enterprise
                  CALL ammt300_update_mmaa015()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac_d[l_ac].mmac003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac_d[l_ac].mmac003 = g_mmac_d_t.mmac003
                     NEXT FIELD mmac003
                  END IF          
               END IF 
               IF g_mmac_d[l_ac].mmac002 != g_mmac_d_t.mmac002 THEN
                  CALL ammt300_update_mmaa015()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmac_d[l_ac].mmac002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmac_d[l_ac].mmac002 = g_mmac_d_t.mmac002
                     CALL ammt300_display_mmac002()
                     NEXT FIELD mmac002
                  END IF           
               END IF               ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET  g_mmac_d[l_ac].mmac001 = g_mmaa_m.mmaa001]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET  g_mmac2_d[l_ac].mmae001 = g_mmaa_m.mmaa001]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET  g_mmac3_d[l_ac].mmad001 = g_mmaa_m.mmaa001   ]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET  g_mmac4_d[l_ac].mmab001 = g_mmaa_m.mmaa001]]>
  </point>
  <point name="input.c.mmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            IF g_mmaa_m.mmaa000 = 'U' THEN
               LET g_qryparam.reqry = FALSE

               LET g_qryparam.default1 = g_mmaa_m.mmaa001             #給予default值

               #給予arg

               CALL q_mmaf001()                                #呼叫開窗

               LET g_mmaa_m.mmaa001 = g_qryparam.return1              #將開窗取得的值回傳到變數

               DISPLAY g_mmaa_m.mmaa001 TO mmaa001              #顯示到畫面上

               NEXT FIELD mmaa001               #返回原欄位

            END IF]]>
  </point>
  <point name="input.c.mmaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaa010             #給予default值

            #給予arg

            CALL q_oocn002()                                #呼叫開窗

            LET g_mmaa_m.mmaa010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaa_m.mmaa010 TO mmaa010              #顯示到畫面上

            NEXT FIELD mmaa010                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaa016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaa016             #給予default值
            LET g_qryparam.arg1 = " ('2','3') "
            #給予arg

            CALL q_pmaa001_1()                                #呼叫開窗
            LET g_mmaa_m.mmaa016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaa_m.mmaa016 TO mmaa016              #顯示到畫面上

            NEXT FIELD mmaa016                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaa017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaa017             #給予default值
            LET g_qryparam.default2 = "" #g_mmaa_m.oofa011 #全名

            #給予arg

            CALL q_ooag001_2()                                #呼叫開窗

            LET g_mmaa_m.mmaa017 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmaa_m.oofa011 = g_qryparam.return2 #全名

            DISPLAY g_mmaa_m.mmaa017 TO mmaa017              #顯示到畫面上
            #DISPLAY g_mmaa_m.oofa011 TO oofa011 #全名

            NEXT FIELD mmaa017                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaa018" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaa018             #給予default值
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '8'            
            #給予arg

            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.arg1 = null
            LET g_qryparam.arg2 = null
            LET g_mmaa_m.mmaa018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaa_m.mmaa018 TO mmaa018              #顯示到畫面上

            NEXT FIELD mmaa018                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaa019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaa019             #給予default值
            LET g_qryparam.default2 = "" #g_mmaa_m.oofa011 #全名

            #給予arg

            CALL q_ooag001_2()                                #呼叫開窗

            LET g_mmaa_m.mmaa019 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmaa_m.oofa011 = g_qryparam.return2 #全名

            DISPLAY g_mmaa_m.mmaa019 TO mmaa019              #顯示到畫面上
            #DISPLAY g_mmaa_m.oofa011 TO oofa011 #全名

            NEXT FIELD mmaa019                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = "ammt300" #對應程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmaa_m.mmaadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaa_m.mmaadocno TO mmaadocno              #顯示到畫面上

            NEXT FIELD mmaadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmaasite" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaasite             #給予default值
            LET g_qryparam.default2 = g_mmaa_m.mmaasite_desc #說明(簡稱)
            #給予arg
#            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = "8" #
#            
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmaasite',g_mmaa_m.mmaasite,'i')   #150308-00001#4 150309 by lori522612 add 'i'
            CALL q_ooef001_24()

            LET g_mmaa_m.mmaasite = g_qryparam.return1              
            LET g_mmaa_m.mmaasite_desc = g_qryparam.return2 
            DISPLAY g_mmaa_m.mmaasite TO mmaasite              #
            DISPLAY g_mmaa_m.mmaasite_desc TO mmaasite_desc #說明(簡稱)
            NEXT FIELD mmaasite                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac_d[l_ac].mmac002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2050" #應用分類
            if not cl_null(g_oocq002) then
               let g_qryparam.where = "oocq002!='",g_oocq002,"'"
            end if
            CALL q_oocq002()                                #呼叫開窗
            let g_qryparam.where = null
            LET g_mmac_d[l_ac].mmac002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac_d[l_ac].mmac002 TO mmac002              #顯示到畫面上

            NEXT FIELD mmac002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.mmab002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac2_d[l_ac].mmab002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2049" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac2_d[l_ac].mmab002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac2_d[l_ac].mmab002 TO mmab002              #顯示到畫面上

            NEXT FIELD mmab002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.mmab004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac2_d[l_ac].mmab004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmac2_d[l_ac].mmab003 #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac2_d[l_ac].mmab004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac2_d[l_ac].mmab004 TO mmab004              #顯示到畫面上

            NEXT FIELD mmab004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.mmae002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac3_d[l_ac].mmae002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2057" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac3_d[l_ac].mmae002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac3_d[l_ac].mmae002 TO mmae002              #顯示到畫面上

            NEXT FIELD mmae002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.mmad002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmac4_d[l_ac].mmad002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2051" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmac4_d[l_ac].mmad002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmac4_d[l_ac].mmad002 TO mmad002              #顯示到畫面上

            NEXT FIELD mmad002                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  g_mmac004       LIKE mmac_t.mmac004
   DEFINE  g_mmac005       LIKE mmac_t.mmac005
   DEFINE  g_mmac006       LIKE mmac_t.mmac006
   DEFINE  l_flag1         LIKE type_t.num5
   DEFINE  l_flag2         LIKE type_t.num5
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_errno         LIKE type_t.chr10
   
   DEFINE l_oofg_return    DYNAMIC ARRAY OF RECORD
                   oofg019     LIKE oofg_t.oofg019,   #field
                   oofg020     LIKE oofg_t.oofg020    #value
                           END RECORD
   DEFINE  l_mmaa004       STRING
   DEFINE  l_ooef011       LIKE ooef_t.ooef011
   DEFINE  l_mmaa014       STRING]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF g_mmaa_m.mmaa000 = 'I' THEN
                     CALL ammt300_insert_mmab002() RETURNING l_flag1
                     CALL ammt300_insert_mmac002() RETURNING l_flag2

                  END IF
                  IF g_mmaa_m.mmaa000 = 'U' THEN
                     CALL ammt300_carry_detail()
                     IF NOT cl_null(g_errno) THEN
                        CONTINUE DIALOG
#                     ELSE
#                        RETURN                     
                     END IF
                  END IF 
                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa015 != g_mmaa_m_t.mmaa015 OR g_mmaa_m_t.mmaa015 IS NULL or g_mmaa_m.mmaa015 IS NULL))) THEN 
                  
                     CALL ammt300_update_mmac002()
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_mmaa_m.mmaa015
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_mmaa_m.mmaa015 = g_mmaa_m_t.mmaa015
                        NEXT FIELD mmaa015
                     END IF               
                  END IF                  ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaa_m.mmaa015 != g_mmaa_m_t.mmaa015 OR g_mmaa_m_t.mmaa015 IS NULL or g_mmaa_m.mmaa015 IS NULL))) THEN 
                  
                     CALL ammt300_update_mmac002()
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_mmaa_m.mmaa015
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_mmaa_m.mmaa015 = g_mmaa_m_t.mmaa015
                        NEXT FIELD mmaa015
                     END IF               
                  END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  CALL s_aooi200_gen_docno(g_mmaa_m.mmaasite,g_mmaa_m.mmaadocno,g_mmaa_m.mmaadocdt,g_prog)
                  RETURNING g_success,g_mmaa_m.mmaadocno
                  IF g_success<>'1' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "apm-00003"
                     LET g_errparam.extend = g_mmaa_m.mmaadocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmaa_m.mmaadocno = g_mmaa_m_t.mmaadocno
                     NEXT FIELD mmaadocno
                  END IF
                  CALL ammt300_mmaa003()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmaa_m.mmaa004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD mmaa003 
                  END IF
                  CALL cl_set_comp_entry("mmaadocno,mmaadocdt",FALSE)
                  LET g_mmaa_m.mmaaunit = g_mmaa_m.mmaasite #sakura add
                  
                  #geza 20150619 add --------------(S)
                   CALL s_aooi390_get_auto_no('9',g_mmaa_m.mmaa001) RETURNING l_success,g_mmaa_m.mmaa001
                   IF NOT l_success THEN
                      CALL s_transaction_end('N','0')
                      NEXT FIELD CURRENT
                   END IF
                   #geza 20150619 add --------------(E)
                  
                  CALL s_aooi390_oofi_upd('9',g_mmaa_m.mmaa001) RETURNING l_success   #150520-00041#1]]>
  </point>
  <point name="input.head.b_update" order="" ver="14" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ammt300_mmaa003()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmaa_m.mmaa004
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD mmaa003 
               END IF
               IF g_mmaa_m.mmaa000 = 'U' THEN
                  CALL ammt300_carry_detail()
                  IF NOT cl_null(g_errno) THEN
                     CONTINUE DIALOG
#                  ELSE
#                     RETURN                     
                  END IF
               END IF
               #add--2015/07/03 By shiun--(S)               
               CALL s_aooi390_get_auto_no('9',g_mmaa_m.mmaa001) RETURNING l_success,g_mmaa_m.mmaa001
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               CALL s_aooi390_oofi_upd('9',g_mmaa_m.mmaa001) RETURNING l_success
               #add--2015/07/03 By shiun--(E)               ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL ammt300_set_entry(p_cmd)
            CALL ammt300_set_no_entry(p_cmd)
            LET g_mmaadocno_t = g_mmaa_m.mmaadocno]]>
  </point>
  <point name="input.master_input.adress" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ammt300_01(g_mmaa_m.mmaadocno,g_enterprise,g_sign) RETURNING g_errno,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmaa_m.mmaadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF               ]]>
  </point>
  <point name="input.next_field" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD mmaasite #sakura add]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      let g_sign = 't']]>
  </point>
  <point name="insert.default" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_mmaa_m.mmaa000 = 'I'
      LET g_mmaa_m.mmaadocdt = g_today
#      LET g_mmaa_m.mmaa018 = g_site
#      CALL ammt300_display_mmaa018()
#      LET g_mmaa_m.mmaasite = g_site
      CALL s_aooi500_default(g_prog,'mmaasite',g_mmaa_m.mmaasite) RETURNING l_insert,g_mmaa_m.mmaasite
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL ammt300_display_mmaasite()
      #sakura---add---str
      #預設單據的單別
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_mmaa_m.mmaasite,g_prog,'1')
         RETURNING l_success,l_doctype
      LET g_mmaa_m.mmaadocno = l_doctype      
      LET g_site_flag = FALSE
      #sakura---add---end
      INITIALIZE g_mmaa_m_t.* TO NULL
      let g_sign = 'a'
      LET g_mmaa_m_t.* = g_mmaa_m.* #sakura add
      LET g_mmaa_m_o.* = g_mmaa_m.* #sakura add  
      LET g_mmaa_m.mmaa019 = g_user #add by geza 150616-00035#27  
      CALL ammt300_display_mmaa019()  #add by geza 150616-00035#27    ]]>
  </point>
  <point name="insert.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5    #sakura add
   DEFINE l_doctype     LIKE rtai_t.rtai004 #sakura add  ]]>
  </point>
  <point name="main.define" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 #150308-00001#4 150309 by lori522612 add]]>
  </point>
  <point name="main.exit" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   CALL s_aooi390_drop_tmp_table()             #150520-00041#1]]>
  </point>
  <point name="main.init" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT ooef004 INTO g_ooef004    FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   LET g_sign = 't'
   SELECT ooaa002 INTO g_oocq002 FROM ooaa_t WHERE ooaa001 = 'E-CIR-0004' AND ooaaent=g_enterprise
   IF NOT cl_null(g_argv[2]) THEN
      LET g_actdefault=g_argv[2]
   END IF
   
    CALL s_aooi390_cre_tmp_table() RETURNING l_success  #150520-00041#1]]>
  </point>
  <point name="menu.adress" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ammt300_adress(g_sign) ]]>
  </point>
  <point name="menu.demo" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6','ammt300',g_mmaa_m.mmaadocno,'','','','','','','','','')]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.update_mmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               if g_mmaa_m.mmaastus<>'N' or g_mmaa_m.mmaa000='U' then
                  INITIALIZE g_errparam TO NULL
LET g_errparam.code = "amm-00200"
LET g_errparam.extend = g_mmaa_m.mmaadocno
LET g_errparam.popup = TRUE
CALL cl_err()

               ELSE
                  CALL cl_set_comp_entry("mmaa001",TRUE)
                  CALL ammt300_update_mmaa001()
               END IF]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      let g_sign = 't']]>
  </point>
  <point name="modify.before_input" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      let g_sign = 'u'
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_mmaa_m.mmaastus MATCHES "[DR]" THEN
         LET g_mmaa_m.mmaastus = "N"
      END IF]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="reproduce.a.mmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL ammt300_newno(l_newno)
         IF NOT cl_null(g_errno) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = l_newno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET l_newno = null
            NEXT FIELD mmaadocno
         END IF
         ]]>
  </point>
  <point name="reproduce.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ON ACTION controlp INFIELD mmaadocno
#此段落由子樣板a07產生            
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaa_m.mmaadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = "ammt300" #對應程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET l_newno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY l_newno TO mmaadocno              #顯示到畫面上

            NEXT FIELD mmaadocno ]]>
  </point>
  <point name="reproduce.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5    #sakura add
   DEFINE l_doctype     LIKE rtai_t.rtai004 #sakura add  ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_mmaa_m.mmaadocdt = g_today
   CALL s_aooi500_default(g_prog,'mmaasite',g_mmaa_m.mmaasite) RETURNING l_insert,g_mmaa_m.mmaasite
   IF NOT l_insert THEN
      RETURN
   END IF
   CALL ammt300_display_mmaasite()
   #sakura---add---str
   #預設單據的單別
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_mmaa_m.mmaasite,g_prog,'1')
      RETURNING l_success,l_doctype
   LET g_mmaa_m.mmaadocno = l_doctype
   #sakura---add---end   
   LET g_mmaa_m.mmaa019 = g_user #add by geza 150616-00035#27 
   CALL ammt300_display_mmaa019()  #add by geza 150616-00035#27      ]]>
  </point>
  <point name="reproduce.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi200_gen_docno(g_site,l_master.mmaadocno,g_today,g_prog)
   RETURNING g_success,l_master.mmaadocno
   IF g_success<>'1' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "apm-00003"
      LET g_errparam.extend = l_master.mmaadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
   LET l_newno = l_master.mmaadocno
   LET l_master.mmaastus = "N"
   LET l_master.mmaamodid = null
   LET l_master.mmaamoddt = null
   LET l_master.mmaacnfid = null
   LET l_master.mmaacnfdt = null]]>
  </point>
  <point name="send.before_send" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_ammt300_conf_chk(g_mmaa_m.mmaadocno,g_mmaa_m.mmaastus) RETURNING g_success,g_errno
   IF NOT g_success THEN
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_mmaa_m.mmaastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("mmaaacti",TRUE) 
   #CALL cl_set_comp_entry("mmaasite",TRUE) #sakura mark]]>
  </point>
  <point name="set_entry.field_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("mmaadocdt,mmaasite",TRUE) #sakura add]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_mmaa_m.mmaa000='I' THEN
      CALL cl_set_comp_entry("mmaaacti",FALSE)
   END IF
  #aooi500設定的欄位控卡
  #IF NOT s_aooi500_comp_entry(g_prog,'mmaasite') THEN #sakura mark
   IF NOT s_aooi500_comp_entry(g_prog,'mmaasite') OR g_site_flag THEN #sakura add
      CALL cl_set_comp_entry("mmaasite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #sakura---add---str
       IF p_cmd = 'u' THEN
         CALL cl_set_comp_entry("mmaasite,mmaadocdt,mmaadocno",FALSE)
      END IF   
      #sakura---add---end      ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac_d[l_ac].mmac002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2050' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac_d[l_ac].mmac002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac_d[l_ac].mmac002_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac2_d[l_ac].mmae002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2057' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac2_d[l_ac].mmae002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac2_d[l_ac].mmae002_desc
            
            
]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac3_d[l_ac].mmad002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2051' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac3_d[l_ac].mmad002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac3_d[l_ac].mmad002_desc   
]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac4_d[l_ac].mmab002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2049' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac4_d[l_ac].mmab002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac4_d[l_ac].mmab002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmac4_d[l_ac].mmab003
            LET g_ref_fields[2] = g_mmac4_d[l_ac].mmab004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmac4_d[l_ac].mmab004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmac4_d[l_ac].mmab004_desc]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaa018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaa018_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_mmaa_m.mmaa018_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaa019
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaa019_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaa019_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaa016
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaa016_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaa016_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaa017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaa017_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaa017_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaaownid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_mmaa_m.mmaaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaaowndp_desc =  g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacrtid_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_mmaa_m.mmaacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacrtdp_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_mmaa_m.mmaacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaamodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaamodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaa_m.mmaacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaa_m.mmaacnfid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaa_m.mmaacnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y' 
         SELECT mmaastus INTO  g_mmaa_m.mmaastus FROM mmaa_t WHERE mmaadocno = g_mmaa_m.mmaadocno
            AND mmaaent = g_enterprise        
         CALL s_ammt300_conf_chk(g_mmaa_m.mmaadocno,g_mmaa_m.mmaastus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_ammt300_carry_upd(g_mmaa_m.mmaadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_ammt300_conf_upd(g_mmaa_m.mmaadocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     RETURN
                  ELSE
                     CALL s_transaction_end('Y','1')
                  END IF
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_mmaa_m.mmaadocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN            
         END IF         
      WHEN 'X'
         SELECT mmaastus INTO  g_mmaa_m.mmaastus FROM mmaa_t WHERE mmaadocno = g_mmaa_m.mmaadocno
            AND mmaaent = g_enterprise
         CALL s_ammt300_void_chk(g_mmaa_m.mmaadocno,g_mmaa_m.mmaastus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt300_void_upd(g_mmaa_m.mmaadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_mmaa_m.mmaadocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN    
         END IF
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_mmaa_m.mmaastus = 'Y' OR g_mmaa_m.mmaastus = 'X' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_mmaa_m.mmaastus  
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "X"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "confirmed"
            RETURN
         WHEN "Y"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "invalid"
            RETURN
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <section id="ammt300.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION ammt300_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.b_fill" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt300_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_mmac_d.clear()    #g_mmac_d 單頭及單身 
   CALL g_mmac2_d.clear()
   CALL g_mmac3_d.clear()
   CALL g_mmac4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt300_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE mmac001,mmac002,mmac003,mmacacti ,t1.oocql004 FROM mmac_t",   
                     " INNER JOIN mmaa_t ON mmaadocno = mmacdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='2050' AND t1.oocql002=mmac002 AND t1.oocql003='"||g_dlang||"' ",
 
                     " WHERE mmacent=? AND mmacdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmac_t.mmac002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt300_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR ammt300_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmaa_m.mmaadocno
                                               
      FOREACH b_fill_cs INTO g_mmac_d[l_ac].mmac001,g_mmac_d[l_ac].mmac002,g_mmac_d[l_ac].mmac003,g_mmac_d[l_ac].mmacacti, 
          g_mmac_d[l_ac].mmac002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammt300_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE mmae001,mmae002,mmaeacti ,t2.oocql004 FROM mmae_t",   
                     " INNER JOIN mmaa_t ON mmaadocno = mmaedocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2057' AND t2.oocql002=mmae002 AND t2.oocql003='"||g_dlang||"' ",
 
                     " WHERE mmaeent=? AND mmaedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmae_t.mmae002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt300_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR ammt300_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmaa_m.mmaadocno
                                               
      FOREACH b_fill_cs2 INTO g_mmac2_d[l_ac].mmae001,g_mmac2_d[l_ac].mmae002,g_mmac2_d[l_ac].mmaeacti, 
          g_mmac2_d[l_ac].mmae002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt300_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE mmad001,mmad002,mmadacti ,t3.oocql004 FROM mmad_t",   
                     " INNER JOIN mmaa_t ON mmaadocno = mmaddocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2051' AND t3.oocql002=mmad002 AND t3.oocql003='"||g_dlang||"' ",
 
                     " WHERE mmadent=? AND mmaddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmad_t.mmad002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt300_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR ammt300_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmaa_m.mmaadocno
                                               
      FOREACH b_fill_cs3 INTO g_mmac3_d[l_ac].mmad001,g_mmac3_d[l_ac].mmad002,g_mmac3_d[l_ac].mmadacti, 
          g_mmac3_d[l_ac].mmad002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt300_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE mmab001,mmab002,mmab003,mmab004 ,t4.oocql004 ,t5.oocql004 FROM mmab_t", 
                
                     " INNER JOIN mmaa_t ON mmaadocno = mmabdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='2049' AND t4.oocql002=mmab002 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2016' AND t5.oocql002=mmab004 AND t5.oocql003='"||g_dlang||"' ",
 
                     " WHERE mmabent=? AND mmabdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmab_t.mmab002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt300_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR ammt300_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_mmaa_m.mmaadocno
                                               
      FOREACH b_fill_cs4 INTO g_mmac4_d[l_ac].mmab001,g_mmac4_d[l_ac].mmab002,g_mmac4_d[l_ac].mmab003, 
          g_mmac4_d[l_ac].mmab004,g_mmac4_d[l_ac].mmab002_desc,g_mmac4_d[l_ac].mmab004_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmac_d.deleteElement(g_mmac_d.getLength())
   CALL g_mmac2_d.deleteElement(g_mmac2_d.getLength())
   CALL g_mmac3_d.deleteElement(g_mmac3_d.getLength())
   CALL g_mmac4_d.deleteElement(g_mmac4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt300_pb
   FREE ammt300_pb2
 
   FREE ammt300_pb3
 
   FREE ammt300_pb4
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_mmac_d.getLength()
      LET g_mmac_d_mask_o[l_ac].* =  g_mmac_d[l_ac].*
      CALL ammt300_mmac_t_mask()
      LET g_mmac_d_mask_n[l_ac].* =  g_mmac_d[l_ac].*
   END FOR
   
   LET g_mmac2_d_mask_o.* =  g_mmac2_d.*
   FOR l_ac = 1 TO g_mmac2_d.getLength()
      LET g_mmac2_d_mask_o[l_ac].* =  g_mmac2_d[l_ac].*
      CALL ammt300_mmae_t_mask()
      LET g_mmac2_d_mask_n[l_ac].* =  g_mmac2_d[l_ac].*
   END FOR
   LET g_mmac3_d_mask_o.* =  g_mmac3_d.*
   FOR l_ac = 1 TO g_mmac3_d.getLength()
      LET g_mmac3_d_mask_o[l_ac].* =  g_mmac3_d[l_ac].*
      CALL ammt300_mmad_t_mask()
      LET g_mmac3_d_mask_n[l_ac].* =  g_mmac3_d[l_ac].*
   END FOR
   LET g_mmac4_d_mask_o.* =  g_mmac4_d.*
   FOR l_ac = 1 TO g_mmac4_d.getLength()
      LET g_mmac4_d_mask_o[l_ac].* =  g_mmac4_d[l_ac].*
      CALL ammt300_mmab_t_mask()
      LET g_mmac4_d_mask_n[l_ac].* =  g_mmac4_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt300_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt300_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.browser_fill" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt300_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmaadocno ",
                      " FROM mmaa_t ",
                      " ",
                      " LEFT JOIN mmac_t ON mmacent = mmaaent AND mmaadocno = mmacdocno ", "  ",
                      #add-point:browser_fill段sql(mmac_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN mmae_t ON mmaeent = mmaaent AND mmaadocno = mmaedocno", "  ",
                      #add-point:browser_fill段sql(mmae_t1)
                      {<point name="browser_fill.cnt.join.mmae_t1"/>}
                      #end add-point
 
                      " LEFT JOIN mmad_t ON mmadent = mmaaent AND mmaadocno = mmaddocno", "  ",
                      #add-point:browser_fill段sql(mmad_t1)
                      {<point name="browser_fill.cnt.join.mmad_t1"/>}
                      #end add-point
 
                      " LEFT JOIN mmab_t ON mmabent = mmaaent AND mmaadocno = mmabdocno", "  ",
                      #add-point:browser_fill段sql(mmab_t1)
                      {<point name="browser_fill.cnt.join.mmab_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE mmaaent = '" ||g_enterprise|| "' AND mmacent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmaadocno ",
                      " FROM mmaa_t ", 
                      "  ",
                      "  ",
                      " WHERE mmaaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmaa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_mmaa_m.* TO NULL
      CALL g_mmac_d.clear()        
      CALL g_mmac2_d.clear() 
      CALL g_mmac3_d.clear() 
      CALL g_mmac4_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.mmaasite,t0.mmaadocno,t0.mmaa000,t0.mmaa001,t0.mmaa008,t0.mmaa004,t0.mmaa015,t0.mmaa014 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.mmaastus,t0.mmaasite,t0.mmaadocno,t0.mmaa000,t0.mmaa001,t0.mmaa008, 
       t0.mmaa004,t0.mmaa015,t0.mmaa014,t1.ooefl003 ",
               " FROM mmaa_t t0",
               "  ",
               "  LEFT JOIN mmac_t ON mmacent = mmaaent AND mmaadocno = mmacdocno ", "  ", 
               #add-point:browser_fill段sql(mmac_t1)
               {<point name="browser_fill.join.mmac_t1"/>}
               #end add-point
               "  LEFT JOIN mmae_t ON mmaeent = mmaaent AND mmaadocno = mmaedocno", "  ", 
               #add-point:browser_fill段sql(mmae_t1)
               {<point name="browser_fill.join.mmae_t1"/>}
               #end add-point
 
               "  LEFT JOIN mmad_t ON mmadent = mmaaent AND mmaadocno = mmaddocno", "  ", 
               #add-point:browser_fill段sql(mmad_t1)
               {<point name="browser_fill.join.mmad_t1"/>}
               #end add-point
 
               "  LEFT JOIN mmab_t ON mmabent = mmaaent AND mmaadocno = mmabdocno", "  ", 
               #add-point:browser_fill段sql(mmab_t1)
               {<point name="browser_fill.join.mmab_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.mmaasite AND t1.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.mmaaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmaa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY mmaadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"mmaa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmaasite,g_browser[g_cnt].b_mmaadocno, 
       g_browser[g_cnt].b_mmaa000,g_browser[g_cnt].b_mmaa001,g_browser[g_cnt].b_mmaa008,g_browser[g_cnt].b_mmaa004, 
       g_browser[g_cnt].b_mmaa015,g_browser[g_cnt].b_mmaa014,g_browser[g_cnt].b_mmaasite_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL ammt300_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_mmaadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.construct" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt300_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmaa_m.* TO NULL
   CALL g_mmac_d.clear()        
   CALL g_mmac2_d.clear() 
   CALL g_mmac3_d.clear() 
   CALL g_mmac4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmaasite,mmaadocdt,mmaadocno,mmaa000,mmaa001,mmaa002,mmaaacti,mmaaunit, 
          mmaastus,mmaa005,mmaa007,mmaa006,mmaa008,mmaa009,mmaa015,mmaa003,mmaa004,mmaa013,mmaa014,mmaa019, 
          mmaa016,mmaa017,mmaa018,mmaa010,mmaa011,mmaa012,mmaaud001,mmaaud002,mmaaud003,mmaaud004,mmaaud005, 
          mmaaud006,mmaaud011,mmaaud012,mmaaud013,mmaaud014,mmaaud015,mmaaud016,mmaaud021,mmaaud022, 
          mmaaud023,mmaaud024,mmaaud025,mmaaud026,mmaaud007,mmaaud008,mmaaud009,mmaaud010,mmaaud017, 
          mmaaud018,mmaaud019,mmaaud020,mmaaud027,mmaaud028,mmaaud029,mmaaud030,mmaaownid,mmaaowndp, 
          mmaacrtid,mmaacrtdp,mmaacrtdt,mmaamodid,mmaamoddt,mmaacnfid,mmaacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<mmaacrtdt>>----
         AFTER FIELD mmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<mmaamoddt>>----
         AFTER FIELD mmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmaacnfdt>>----
         AFTER FIELD mmaacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmaapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmaasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaasite
            #add-point:ON ACTION controlp INFIELD mmaasite
            {<point name="construct.c.mmaasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaasite
            #add-point:BEFORE FIELD mmaasite
            {<point name="construct.b.mmaasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaasite
            
            #add-point:AFTER FIELD mmaasite
            {<point name="construct.a.mmaasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaadocdt
            #add-point:BEFORE FIELD mmaadocdt
            {<point name="construct.b.mmaadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaadocdt
            
            #add-point:AFTER FIELD mmaadocdt
            {<point name="construct.a.mmaadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaadocdt
            #add-point:ON ACTION controlp INFIELD mmaadocdt
            {<point name="construct.c.mmaadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaadocno
            #add-point:ON ACTION controlp INFIELD mmaadocno
            {<point name="construct.c.mmaadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaadocno
            #add-point:BEFORE FIELD mmaadocno
            {<point name="construct.b.mmaadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaadocno
            
            #add-point:AFTER FIELD mmaadocno
            {<point name="construct.a.mmaadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa000
            #add-point:BEFORE FIELD mmaa000
            {<point name="construct.b.mmaa000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa000
            
            #add-point:AFTER FIELD mmaa000
            {<point name="construct.a.mmaa000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa000
            #add-point:ON ACTION controlp INFIELD mmaa000
            {<point name="construct.c.mmaa000" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa001
            #add-point:ON ACTION controlp INFIELD mmaa001
            {<point name="construct.c.mmaa001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa001
            #add-point:BEFORE FIELD mmaa001
            {<point name="construct.b.mmaa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa001
            
            #add-point:AFTER FIELD mmaa001
            {<point name="construct.a.mmaa001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa002
            #add-point:BEFORE FIELD mmaa002
            {<point name="construct.b.mmaa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa002
            
            #add-point:AFTER FIELD mmaa002
            {<point name="construct.a.mmaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa002
            #add-point:ON ACTION controlp INFIELD mmaa002
            {<point name="construct.c.mmaa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaacti
            #add-point:BEFORE FIELD mmaaacti
            {<point name="construct.b.mmaaacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaacti
            
            #add-point:AFTER FIELD mmaaacti
            {<point name="construct.a.mmaaacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaacti
            #add-point:ON ACTION controlp INFIELD mmaaacti
            {<point name="construct.c.mmaaacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaunit
            #add-point:BEFORE FIELD mmaaunit
            {<point name="construct.b.mmaaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaunit
            
            #add-point:AFTER FIELD mmaaunit
            {<point name="construct.a.mmaaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaunit
            #add-point:ON ACTION controlp INFIELD mmaaunit
            {<point name="construct.c.mmaaunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaastus
            #add-point:BEFORE FIELD mmaastus
            {<point name="construct.b.mmaastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaastus
            
            #add-point:AFTER FIELD mmaastus
            {<point name="construct.a.mmaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaastus
            #add-point:ON ACTION controlp INFIELD mmaastus
            {<point name="construct.c.mmaastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa005
            #add-point:BEFORE FIELD mmaa005
            {<point name="construct.b.mmaa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa005
            
            #add-point:AFTER FIELD mmaa005
            {<point name="construct.a.mmaa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa005
            #add-point:ON ACTION controlp INFIELD mmaa005
            {<point name="construct.c.mmaa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa007
            #add-point:BEFORE FIELD mmaa007
            {<point name="construct.b.mmaa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa007
            
            #add-point:AFTER FIELD mmaa007
            {<point name="construct.a.mmaa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa007
            #add-point:ON ACTION controlp INFIELD mmaa007
            {<point name="construct.c.mmaa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa006
            #add-point:BEFORE FIELD mmaa006
            {<point name="construct.b.mmaa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa006
            
            #add-point:AFTER FIELD mmaa006
            {<point name="construct.a.mmaa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa006
            #add-point:ON ACTION controlp INFIELD mmaa006
            {<point name="construct.c.mmaa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa008
            #add-point:BEFORE FIELD mmaa008
            {<point name="construct.b.mmaa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa008
            
            #add-point:AFTER FIELD mmaa008
            {<point name="construct.a.mmaa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa008
            #add-point:ON ACTION controlp INFIELD mmaa008
            {<point name="construct.c.mmaa008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa009
            #add-point:BEFORE FIELD mmaa009
            {<point name="construct.b.mmaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa009
            
            #add-point:AFTER FIELD mmaa009
            {<point name="construct.a.mmaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa009
            #add-point:ON ACTION controlp INFIELD mmaa009
            {<point name="construct.c.mmaa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa015
            #add-point:BEFORE FIELD mmaa015
            {<point name="construct.b.mmaa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa015
            
            #add-point:AFTER FIELD mmaa015
            {<point name="construct.a.mmaa015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa015
            #add-point:ON ACTION controlp INFIELD mmaa015
            {<point name="construct.c.mmaa015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa003
            #add-point:BEFORE FIELD mmaa003
            {<point name="construct.b.mmaa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa003
            
            #add-point:AFTER FIELD mmaa003
            {<point name="construct.a.mmaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa003
            #add-point:ON ACTION controlp INFIELD mmaa003
            {<point name="construct.c.mmaa003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa004
            #add-point:BEFORE FIELD mmaa004
            {<point name="construct.b.mmaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa004
            
            #add-point:AFTER FIELD mmaa004
            {<point name="construct.a.mmaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa004
            #add-point:ON ACTION controlp INFIELD mmaa004
            {<point name="construct.c.mmaa004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa013
            #add-point:BEFORE FIELD mmaa013
            {<point name="construct.b.mmaa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa013
            
            #add-point:AFTER FIELD mmaa013
            {<point name="construct.a.mmaa013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa013
            #add-point:ON ACTION controlp INFIELD mmaa013
            {<point name="construct.c.mmaa013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa014
            #add-point:BEFORE FIELD mmaa014
            {<point name="construct.b.mmaa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa014
            
            #add-point:AFTER FIELD mmaa014
            {<point name="construct.a.mmaa014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa014
            #add-point:ON ACTION controlp INFIELD mmaa014
            {<point name="construct.c.mmaa014" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa019
            #add-point:ON ACTION controlp INFIELD mmaa019
            {<point name="construct.c.mmaa019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa019
            #add-point:BEFORE FIELD mmaa019
            {<point name="construct.b.mmaa019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa019
            
            #add-point:AFTER FIELD mmaa019
            {<point name="construct.a.mmaa019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa016
            #add-point:ON ACTION controlp INFIELD mmaa016
            {<point name="construct.c.mmaa016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa016
            #add-point:BEFORE FIELD mmaa016
            {<point name="construct.b.mmaa016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa016
            
            #add-point:AFTER FIELD mmaa016
            {<point name="construct.a.mmaa016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa017
            #add-point:ON ACTION controlp INFIELD mmaa017
            {<point name="construct.c.mmaa017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa017
            #add-point:BEFORE FIELD mmaa017
            {<point name="construct.b.mmaa017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa017
            
            #add-point:AFTER FIELD mmaa017
            {<point name="construct.a.mmaa017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa018
            #add-point:ON ACTION controlp INFIELD mmaa018
            {<point name="construct.c.mmaa018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa018
            #add-point:BEFORE FIELD mmaa018
            {<point name="construct.b.mmaa018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa018
            
            #add-point:AFTER FIELD mmaa018
            {<point name="construct.a.mmaa018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa010
            #add-point:ON ACTION controlp INFIELD mmaa010
            {<point name="construct.c.mmaa010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa010
            #add-point:BEFORE FIELD mmaa010
            {<point name="construct.b.mmaa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa010
            
            #add-point:AFTER FIELD mmaa010
            {<point name="construct.a.mmaa010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa011
            #add-point:BEFORE FIELD mmaa011
            {<point name="construct.b.mmaa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa011
            
            #add-point:AFTER FIELD mmaa011
            {<point name="construct.a.mmaa011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa011
            #add-point:ON ACTION controlp INFIELD mmaa011
            {<point name="construct.c.mmaa011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa012
            #add-point:BEFORE FIELD mmaa012
            {<point name="construct.b.mmaa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa012
            
            #add-point:AFTER FIELD mmaa012
            {<point name="construct.a.mmaa012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa012
            #add-point:ON ACTION controlp INFIELD mmaa012
            {<point name="construct.c.mmaa012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud001
            #add-point:BEFORE FIELD mmaaud001
            {<point name="construct.b.mmaaud001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud001
            
            #add-point:AFTER FIELD mmaaud001
            {<point name="construct.a.mmaaud001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud001
            #add-point:ON ACTION controlp INFIELD mmaaud001
            {<point name="construct.c.mmaaud001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud002
            #add-point:BEFORE FIELD mmaaud002
            {<point name="construct.b.mmaaud002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud002
            
            #add-point:AFTER FIELD mmaaud002
            {<point name="construct.a.mmaaud002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud002
            #add-point:ON ACTION controlp INFIELD mmaaud002
            {<point name="construct.c.mmaaud002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud003
            #add-point:BEFORE FIELD mmaaud003
            {<point name="construct.b.mmaaud003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud003
            
            #add-point:AFTER FIELD mmaaud003
            {<point name="construct.a.mmaaud003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud003
            #add-point:ON ACTION controlp INFIELD mmaaud003
            {<point name="construct.c.mmaaud003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud004
            #add-point:BEFORE FIELD mmaaud004
            {<point name="construct.b.mmaaud004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud004
            
            #add-point:AFTER FIELD mmaaud004
            {<point name="construct.a.mmaaud004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud004
            #add-point:ON ACTION controlp INFIELD mmaaud004
            {<point name="construct.c.mmaaud004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud005
            #add-point:BEFORE FIELD mmaaud005
            {<point name="construct.b.mmaaud005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud005
            
            #add-point:AFTER FIELD mmaaud005
            {<point name="construct.a.mmaaud005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud005
            #add-point:ON ACTION controlp INFIELD mmaaud005
            {<point name="construct.c.mmaaud005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud006
            #add-point:BEFORE FIELD mmaaud006
            {<point name="construct.b.mmaaud006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud006
            
            #add-point:AFTER FIELD mmaaud006
            {<point name="construct.a.mmaaud006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud006
            #add-point:ON ACTION controlp INFIELD mmaaud006
            {<point name="construct.c.mmaaud006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud011
            #add-point:BEFORE FIELD mmaaud011
            {<point name="construct.b.mmaaud011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud011
            
            #add-point:AFTER FIELD mmaaud011
            {<point name="construct.a.mmaaud011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud011
            #add-point:ON ACTION controlp INFIELD mmaaud011
            {<point name="construct.c.mmaaud011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud012
            #add-point:BEFORE FIELD mmaaud012
            {<point name="construct.b.mmaaud012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud012
            
            #add-point:AFTER FIELD mmaaud012
            {<point name="construct.a.mmaaud012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud012
            #add-point:ON ACTION controlp INFIELD mmaaud012
            {<point name="construct.c.mmaaud012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud013
            #add-point:BEFORE FIELD mmaaud013
            {<point name="construct.b.mmaaud013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud013
            
            #add-point:AFTER FIELD mmaaud013
            {<point name="construct.a.mmaaud013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud013
            #add-point:ON ACTION controlp INFIELD mmaaud013
            {<point name="construct.c.mmaaud013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud014
            #add-point:BEFORE FIELD mmaaud014
            {<point name="construct.b.mmaaud014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud014
            
            #add-point:AFTER FIELD mmaaud014
            {<point name="construct.a.mmaaud014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud014
            #add-point:ON ACTION controlp INFIELD mmaaud014
            {<point name="construct.c.mmaaud014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud015
            #add-point:BEFORE FIELD mmaaud015
            {<point name="construct.b.mmaaud015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud015
            
            #add-point:AFTER FIELD mmaaud015
            {<point name="construct.a.mmaaud015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud015
            #add-point:ON ACTION controlp INFIELD mmaaud015
            {<point name="construct.c.mmaaud015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud016
            #add-point:BEFORE FIELD mmaaud016
            {<point name="construct.b.mmaaud016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud016
            
            #add-point:AFTER FIELD mmaaud016
            {<point name="construct.a.mmaaud016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud016
            #add-point:ON ACTION controlp INFIELD mmaaud016
            {<point name="construct.c.mmaaud016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud021
            #add-point:BEFORE FIELD mmaaud021
            {<point name="construct.b.mmaaud021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud021
            
            #add-point:AFTER FIELD mmaaud021
            {<point name="construct.a.mmaaud021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud021
            #add-point:ON ACTION controlp INFIELD mmaaud021
            {<point name="construct.c.mmaaud021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud022
            #add-point:BEFORE FIELD mmaaud022
            {<point name="construct.b.mmaaud022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud022
            
            #add-point:AFTER FIELD mmaaud022
            {<point name="construct.a.mmaaud022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud022
            #add-point:ON ACTION controlp INFIELD mmaaud022
            {<point name="construct.c.mmaaud022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud023
            #add-point:BEFORE FIELD mmaaud023
            {<point name="construct.b.mmaaud023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud023
            
            #add-point:AFTER FIELD mmaaud023
            {<point name="construct.a.mmaaud023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud023
            #add-point:ON ACTION controlp INFIELD mmaaud023
            {<point name="construct.c.mmaaud023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud024
            #add-point:BEFORE FIELD mmaaud024
            {<point name="construct.b.mmaaud024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud024
            
            #add-point:AFTER FIELD mmaaud024
            {<point name="construct.a.mmaaud024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud024
            #add-point:ON ACTION controlp INFIELD mmaaud024
            {<point name="construct.c.mmaaud024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud025
            #add-point:BEFORE FIELD mmaaud025
            {<point name="construct.b.mmaaud025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud025
            
            #add-point:AFTER FIELD mmaaud025
            {<point name="construct.a.mmaaud025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud025
            #add-point:ON ACTION controlp INFIELD mmaaud025
            {<point name="construct.c.mmaaud025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud026
            #add-point:BEFORE FIELD mmaaud026
            {<point name="construct.b.mmaaud026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud026
            
            #add-point:AFTER FIELD mmaaud026
            {<point name="construct.a.mmaaud026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud026
            #add-point:ON ACTION controlp INFIELD mmaaud026
            {<point name="construct.c.mmaaud026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud007
            #add-point:BEFORE FIELD mmaaud007
            {<point name="construct.b.mmaaud007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud007
            
            #add-point:AFTER FIELD mmaaud007
            {<point name="construct.a.mmaaud007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud007
            #add-point:ON ACTION controlp INFIELD mmaaud007
            {<point name="construct.c.mmaaud007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud008
            #add-point:BEFORE FIELD mmaaud008
            {<point name="construct.b.mmaaud008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud008
            
            #add-point:AFTER FIELD mmaaud008
            {<point name="construct.a.mmaaud008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud008
            #add-point:ON ACTION controlp INFIELD mmaaud008
            {<point name="construct.c.mmaaud008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud009
            #add-point:BEFORE FIELD mmaaud009
            {<point name="construct.b.mmaaud009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud009
            
            #add-point:AFTER FIELD mmaaud009
            {<point name="construct.a.mmaaud009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud009
            #add-point:ON ACTION controlp INFIELD mmaaud009
            {<point name="construct.c.mmaaud009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud010
            #add-point:BEFORE FIELD mmaaud010
            {<point name="construct.b.mmaaud010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud010
            
            #add-point:AFTER FIELD mmaaud010
            {<point name="construct.a.mmaaud010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud010
            #add-point:ON ACTION controlp INFIELD mmaaud010
            {<point name="construct.c.mmaaud010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud017
            #add-point:BEFORE FIELD mmaaud017
            {<point name="construct.b.mmaaud017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud017
            
            #add-point:AFTER FIELD mmaaud017
            {<point name="construct.a.mmaaud017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud017
            #add-point:ON ACTION controlp INFIELD mmaaud017
            {<point name="construct.c.mmaaud017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud018
            #add-point:BEFORE FIELD mmaaud018
            {<point name="construct.b.mmaaud018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud018
            
            #add-point:AFTER FIELD mmaaud018
            {<point name="construct.a.mmaaud018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud018
            #add-point:ON ACTION controlp INFIELD mmaaud018
            {<point name="construct.c.mmaaud018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud019
            #add-point:BEFORE FIELD mmaaud019
            {<point name="construct.b.mmaaud019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud019
            
            #add-point:AFTER FIELD mmaaud019
            {<point name="construct.a.mmaaud019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud019
            #add-point:ON ACTION controlp INFIELD mmaaud019
            {<point name="construct.c.mmaaud019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud020
            #add-point:BEFORE FIELD mmaaud020
            {<point name="construct.b.mmaaud020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud020
            
            #add-point:AFTER FIELD mmaaud020
            {<point name="construct.a.mmaaud020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud020
            #add-point:ON ACTION controlp INFIELD mmaaud020
            {<point name="construct.c.mmaaud020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud027
            #add-point:BEFORE FIELD mmaaud027
            {<point name="construct.b.mmaaud027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud027
            
            #add-point:AFTER FIELD mmaaud027
            {<point name="construct.a.mmaaud027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud027
            #add-point:ON ACTION controlp INFIELD mmaaud027
            {<point name="construct.c.mmaaud027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud028
            #add-point:BEFORE FIELD mmaaud028
            {<point name="construct.b.mmaaud028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud028
            
            #add-point:AFTER FIELD mmaaud028
            {<point name="construct.a.mmaaud028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud028
            #add-point:ON ACTION controlp INFIELD mmaaud028
            {<point name="construct.c.mmaaud028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud029
            #add-point:BEFORE FIELD mmaaud029
            {<point name="construct.b.mmaaud029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud029
            
            #add-point:AFTER FIELD mmaaud029
            {<point name="construct.a.mmaaud029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud029
            #add-point:ON ACTION controlp INFIELD mmaaud029
            {<point name="construct.c.mmaaud029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud030
            #add-point:BEFORE FIELD mmaaud030
            {<point name="construct.b.mmaaud030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud030
            
            #add-point:AFTER FIELD mmaaud030
            {<point name="construct.a.mmaaud030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaud030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud030
            #add-point:ON ACTION controlp INFIELD mmaaud030
            {<point name="construct.c.mmaaud030" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaownid
            #add-point:ON ACTION controlp INFIELD mmaaownid
            {<point name="construct.c.mmaaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaownid
            #add-point:BEFORE FIELD mmaaownid
            {<point name="construct.b.mmaaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaownid
            
            #add-point:AFTER FIELD mmaaownid
            {<point name="construct.a.mmaaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaowndp
            #add-point:ON ACTION controlp INFIELD mmaaowndp
            {<point name="construct.c.mmaaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaowndp
            #add-point:BEFORE FIELD mmaaowndp
            {<point name="construct.b.mmaaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaowndp
            
            #add-point:AFTER FIELD mmaaowndp
            {<point name="construct.a.mmaaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaacrtid
            #add-point:ON ACTION controlp INFIELD mmaacrtid
            {<point name="construct.c.mmaacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaacrtid
            #add-point:BEFORE FIELD mmaacrtid
            {<point name="construct.b.mmaacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaacrtid
            
            #add-point:AFTER FIELD mmaacrtid
            {<point name="construct.a.mmaacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaacrtdp
            #add-point:ON ACTION controlp INFIELD mmaacrtdp
            {<point name="construct.c.mmaacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaacrtdp
            #add-point:BEFORE FIELD mmaacrtdp
            {<point name="construct.b.mmaacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaacrtdp
            
            #add-point:AFTER FIELD mmaacrtdp
            {<point name="construct.a.mmaacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaacrtdt
            #add-point:BEFORE FIELD mmaacrtdt
            {<point name="construct.b.mmaacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaamodid
            #add-point:ON ACTION controlp INFIELD mmaamodid
            {<point name="construct.c.mmaamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaamodid
            #add-point:BEFORE FIELD mmaamodid
            {<point name="construct.b.mmaamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaamodid
            
            #add-point:AFTER FIELD mmaamodid
            {<point name="construct.a.mmaamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaamoddt
            #add-point:BEFORE FIELD mmaamoddt
            {<point name="construct.b.mmaamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmaacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaacnfid
            #add-point:ON ACTION controlp INFIELD mmaacnfid
            {<point name="construct.c.mmaacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaacnfid
            #add-point:BEFORE FIELD mmaacnfid
            {<point name="construct.b.mmaacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaacnfid
            
            #add-point:AFTER FIELD mmaacnfid
            {<point name="construct.a.mmaacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaacnfdt
            #add-point:BEFORE FIELD mmaacnfdt
            {<point name="construct.b.mmaacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmac001,mmac002,mmac003,mmacacti
           FROM s_detail1[1].mmac001,s_detail1[1].mmac002,s_detail1[1].mmac003,s_detail1[1].mmacacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac001
            #add-point:BEFORE FIELD mmac001
            {<point name="construct.b.page1.mmac001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac001
            
            #add-point:AFTER FIELD mmac001
            {<point name="construct.a.page1.mmac001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmac001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac001
            #add-point:ON ACTION controlp INFIELD mmac001
            {<point name="construct.c.page1.mmac001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.mmac002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac002
            #add-point:ON ACTION controlp INFIELD mmac002
            {<point name="construct.c.page1.mmac002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac002
            #add-point:BEFORE FIELD mmac002
            {<point name="construct.b.page1.mmac002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac002
            
            #add-point:AFTER FIELD mmac002
            {<point name="construct.a.page1.mmac002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac003
            #add-point:BEFORE FIELD mmac003
            {<point name="construct.b.page1.mmac003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac003
            
            #add-point:AFTER FIELD mmac003
            {<point name="construct.a.page1.mmac003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmac003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac003
            #add-point:ON ACTION controlp INFIELD mmac003
            {<point name="construct.c.page1.mmac003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmacacti
            #add-point:BEFORE FIELD mmacacti
            {<point name="construct.b.page1.mmacacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmacacti
            
            #add-point:AFTER FIELD mmacacti
            {<point name="construct.a.page1.mmacacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmacacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmacacti
            #add-point:ON ACTION controlp INFIELD mmacacti
            {<point name="construct.c.page1.mmacacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmae001,mmae002,mmaeacti
           FROM s_detail2[1].mmae001,s_detail2[1].mmae002,s_detail2[1].mmaeacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmae001
            #add-point:BEFORE FIELD mmae001
            {<point name="construct.b.page2.mmae001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmae001
            
            #add-point:AFTER FIELD mmae001
            {<point name="construct.a.page2.mmae001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmae001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmae001
            #add-point:ON ACTION controlp INFIELD mmae001
            {<point name="construct.c.page2.mmae001" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.mmae002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmae002
            #add-point:ON ACTION controlp INFIELD mmae002
            {<point name="construct.c.page2.mmae002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmae002
            #add-point:BEFORE FIELD mmae002
            {<point name="construct.b.page2.mmae002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmae002
            
            #add-point:AFTER FIELD mmae002
            {<point name="construct.a.page2.mmae002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaeacti
            #add-point:BEFORE FIELD mmaeacti
            {<point name="construct.b.page2.mmaeacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaeacti
            
            #add-point:AFTER FIELD mmaeacti
            {<point name="construct.a.page2.mmaeacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmaeacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaeacti
            #add-point:ON ACTION controlp INFIELD mmaeacti
            {<point name="construct.c.page2.mmaeacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmad001,mmad002,mmadacti
           FROM s_detail3[1].mmad001,s_detail3[1].mmad002,s_detail3[1].mmadacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmad001
            #add-point:BEFORE FIELD mmad001
            {<point name="construct.b.page3.mmad001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmad001
            
            #add-point:AFTER FIELD mmad001
            {<point name="construct.a.page3.mmad001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmad001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmad001
            #add-point:ON ACTION controlp INFIELD mmad001
            {<point name="construct.c.page3.mmad001" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.mmad002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmad002
            #add-point:ON ACTION controlp INFIELD mmad002
            {<point name="construct.c.page3.mmad002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmad002
            #add-point:BEFORE FIELD mmad002
            {<point name="construct.b.page3.mmad002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmad002
            
            #add-point:AFTER FIELD mmad002
            {<point name="construct.a.page3.mmad002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmadacti
            #add-point:BEFORE FIELD mmadacti
            {<point name="construct.b.page3.mmadacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmadacti
            
            #add-point:AFTER FIELD mmadacti
            {<point name="construct.a.page3.mmadacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmadacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmadacti
            #add-point:ON ACTION controlp INFIELD mmadacti
            {<point name="construct.c.page3.mmadacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON mmab001,mmab002,mmab003,mmab004
           FROM s_detail4[1].mmab001,s_detail4[1].mmab002,s_detail4[1].mmab003,s_detail4[1].mmab004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab001
            #add-point:BEFORE FIELD mmab001
            {<point name="construct.b.page4.mmab001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab001
            
            #add-point:AFTER FIELD mmab001
            {<point name="construct.a.page4.mmab001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmab001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab001
            #add-point:ON ACTION controlp INFIELD mmab001
            {<point name="construct.c.page4.mmab001" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.mmab002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab002
            #add-point:ON ACTION controlp INFIELD mmab002
            {<point name="construct.c.page4.mmab002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab002
            #add-point:BEFORE FIELD mmab002
            {<point name="construct.b.page4.mmab002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab002
            
            #add-point:AFTER FIELD mmab002
            {<point name="construct.a.page4.mmab002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab003
            #add-point:BEFORE FIELD mmab003
            {<point name="construct.b.page4.mmab003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab003
            
            #add-point:AFTER FIELD mmab003
            {<point name="construct.a.page4.mmab003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmab003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab003
            #add-point:ON ACTION controlp INFIELD mmab003
            {<point name="construct.c.page4.mmab003" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.mmab004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab004
            #add-point:ON ACTION controlp INFIELD mmab004
            {<point name="construct.c.page4.mmab004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab004
            #add-point:BEFORE FIELD mmab004
            {<point name="construct.b.page4.mmab004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab004
            
            #add-point:AFTER FIELD mmab004
            {<point name="construct.a.page4.mmab004" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "mmaa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmac_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmae_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "mmad_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "mmab_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.default_search" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt300_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmaadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "mmaa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmac_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmae_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "mmad_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "mmab_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.delete" ver="28" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt300_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_mmaa_m.mmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
   
   #檢查是否允許此動作
   IF NOT ammt300_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmaa_m_mask_o.* =  g_mmaa_m.*
   CALL ammt300_mmaa_t_mask()
   LET g_mmaa_m_mask_n.* =  g_mmaa_m.*
   
   CALL ammt300_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL ammt300_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
 
      DELETE FROM mmaa_t
       WHERE mmaaent = g_enterprise AND mmaadocno = g_mmaa_m.mmaadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_mmaa_m.mmaadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmac_t
       WHERE mmacent = g_enterprise AND mmacdocno = g_mmaa_m.mmaadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmac_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmae_t
       WHERE mmaeent = g_enterprise AND
             mmaedocno = g_mmaa_m.mmaadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmae_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmad_t
       WHERE mmadent = g_enterprise AND
             mmaddocno = g_mmaa_m.mmaadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmad_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM mmab_t
       WHERE mmabent = g_enterprise AND
             mmabdocno = g_mmaa_m.mmaadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE ammt300_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_mmac_d.clear() 
      CALL g_mmac2_d.clear()       
      CALL g_mmac3_d.clear()       
      CALL g_mmac4_d.clear()       
 
     
      CALL ammt300_ui_browser_refresh()  
      #CALL ammt300_ui_headershow()  
      #CALL ammt300_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL ammt300_browser_fill("")
         CALL ammt300_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE ammt300_cl
 
   #功能已完成,通報訊息中心
   CALL ammt300_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="ammt300.delete_b" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt300_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmac_t
       WHERE mmacent = g_enterprise AND
         mmacdocno = ps_keys_bak[1] AND mmac002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmac_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmae_t
       WHERE mmaeent = g_enterprise AND
             mmaedocno = ps_keys_bak[1] AND mmae002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmae_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmac2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmad_t
       WHERE mmadent = g_enterprise AND
             mmaddocno = ps_keys_bak[1] AND mmad002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmad_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_mmac3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM mmab_t
       WHERE mmabent = g_enterprise AND
             mmabdocno = ps_keys_bak[1] AND mmab002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_mmac4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.description" ver="20" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:14,PR版次:14) Build-000559
#+ 
#+ Filename...: ammt300
#+ Description: 會員基本資料申請作業
#+ Creator....: 02296(2013-08-12 08:51:27)
#+ Modifier...: 01251(2015-06-08 15:35:06) -SD/PR-
]]>
  </section>
  <section id="ammt300.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt300_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmac_t.*
   DEFINE l_detail2    RECORD LIKE mmae_t.*
 
   DEFINE l_detail3    RECORD LIKE mmad_t.*
 
   DEFINE l_detail4    RECORD LIKE mmab_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt300_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt300_detail AS ",
                "SELECT * FROM mmac_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt300_detail SELECT * FROM mmac_t 
                                         WHERE mmacent = g_enterprise AND mmacdocno = g_mmaadocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt300_detail 
      #更新key欄位
      SET mmacdocno = g_mmaa_m.mmaadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO mmac_t SELECT * FROM ammt300_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt300_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt300_detail AS ",
      "SELECT * FROM mmae_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt300_detail SELECT * FROM mmae_t
                                         WHERE mmaeent = g_enterprise AND mmaedocno = g_mmaadocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt300_detail SET mmaedocno = g_mmaa_m.mmaadocno
 
  
   #將資料塞回原table   
   INSERT INTO mmae_t SELECT * FROM ammt300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt300_detail AS ",
      "SELECT * FROM mmad_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt300_detail SELECT * FROM mmad_t
                                         WHERE mmadent = g_enterprise AND mmaddocno = g_mmaadocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt300_detail SET mmaddocno = g_mmaa_m.mmaadocno
 
  
   #將資料塞回原table   
   INSERT INTO mmad_t SELECT * FROM ammt300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt300_detail AS ",
      "SELECT * FROM mmab_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt300_detail SELECT * FROM mmab_t
                                         WHERE mmabent = g_enterprise AND mmabdocno = g_mmaadocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt300_detail SET mmabdocno = g_mmaa_m.mmaadocno
 
  
   #將資料塞回原table   
   INSERT INTO mmab_t SELECT * FROM ammt300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt300_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.fetch" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt300_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmaa_m.mmaadocno = g_browser[g_current_idx].b_mmaadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
   
   #遮罩相關處理
   LET g_mmaa_m_mask_o.* =  g_mmaa_m.*
   CALL ammt300_mmaa_t_mask()
   LET g_mmaa_m_mask_n.* =  g_mmaa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt300_set_act_visible()   
   CALL ammt300_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_mmaa_m_t.* = g_mmaa_m.*
   LET g_mmaa_m_o.* = g_mmaa_m.*
   
   LET g_data_owner = g_mmaa_m.mmaaownid      
   LET g_data_dept  = g_mmaa_m.mmaaowndp
   
   #重新顯示   
   CALL ammt300_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt300_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.filter" ver="11" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION ammt300_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmaasite,mmaadocno,mmaa000,mmaa001,mmaa008,mmaa004,mmaa015,mmaa014
                          FROM s_browse[1].b_mmaasite,s_browse[1].b_mmaadocno,s_browse[1].b_mmaa000, 
                              s_browse[1].b_mmaa001,s_browse[1].b_mmaa008,s_browse[1].b_mmaa004,s_browse[1].b_mmaa015, 
                              s_browse[1].b_mmaa014
 
         BEFORE CONSTRUCT
               DISPLAY ammt300_filter_parser('mmaasite') TO s_browse[1].b_mmaasite
            DISPLAY ammt300_filter_parser('mmaadocno') TO s_browse[1].b_mmaadocno
            DISPLAY ammt300_filter_parser('mmaa000') TO s_browse[1].b_mmaa000
            DISPLAY ammt300_filter_parser('mmaa001') TO s_browse[1].b_mmaa001
            DISPLAY ammt300_filter_parser('mmaa008') TO s_browse[1].b_mmaa008
            DISPLAY ammt300_filter_parser('mmaa004') TO s_browse[1].b_mmaa004
            DISPLAY ammt300_filter_parser('mmaa015') TO s_browse[1].b_mmaa015
            DISPLAY ammt300_filter_parser('mmaa014') TO s_browse[1].b_mmaa014
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt300_filter_show('mmaasite')
   CALL ammt300_filter_show('mmaadocno')
   CALL ammt300_filter_show('mmaa000')
   CALL ammt300_filter_show('mmaa001')
   CALL ammt300_filter_show('mmaa008')
   CALL ammt300_filter_show('mmaa004')
   CALL ammt300_filter_show('mmaa015')
   CALL ammt300_filter_show('mmaa014')
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt300_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt300_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt300_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.global" ver="33" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmaa_m        RECORD
       mmaasite LIKE mmaa_t.mmaasite, 
   mmaasite_desc LIKE type_t.chr80, 
   mmaadocdt LIKE mmaa_t.mmaadocdt, 
   mmaadocno LIKE mmaa_t.mmaadocno, 
   mmaa000 LIKE mmaa_t.mmaa000, 
   mmaa001 LIKE mmaa_t.mmaa001, 
   mmaa002 LIKE mmaa_t.mmaa002, 
   mmaaacti LIKE mmaa_t.mmaaacti, 
   mmaaunit LIKE mmaa_t.mmaaunit, 
   mmaastus LIKE mmaa_t.mmaastus, 
   mmaa005 LIKE mmaa_t.mmaa005, 
   mmaa007 LIKE mmaa_t.mmaa007, 
   mmaa006 LIKE mmaa_t.mmaa006, 
   mmaa008 LIKE mmaa_t.mmaa008, 
   mmaa009 LIKE mmaa_t.mmaa009, 
   mmaa015 LIKE mmaa_t.mmaa015, 
   mmaa003 LIKE mmaa_t.mmaa003, 
   mmaa004 LIKE mmaa_t.mmaa004, 
   mmaa013 LIKE mmaa_t.mmaa013, 
   mmaa014 LIKE mmaa_t.mmaa014, 
   mmaa019 LIKE mmaa_t.mmaa019, 
   mmaa019_desc LIKE type_t.chr80, 
   mmaa016 LIKE mmaa_t.mmaa016, 
   mmaa016_desc LIKE type_t.chr80, 
   mmaa017 LIKE mmaa_t.mmaa017, 
   mmaa017_desc LIKE type_t.chr80, 
   mmaa018 LIKE mmaa_t.mmaa018, 
   mmaa018_desc LIKE type_t.chr80, 
   mmaa010 LIKE mmaa_t.mmaa010, 
   mmaa011 LIKE mmaa_t.mmaa011, 
   mmaa012 LIKE mmaa_t.mmaa012, 
   mmaaud001 LIKE mmaa_t.mmaaud001, 
   mmaaud002 LIKE mmaa_t.mmaaud002, 
   mmaaud003 LIKE mmaa_t.mmaaud003, 
   mmaaud004 LIKE mmaa_t.mmaaud004, 
   mmaaud005 LIKE mmaa_t.mmaaud005, 
   mmaaud006 LIKE mmaa_t.mmaaud006, 
   mmaaud011 LIKE mmaa_t.mmaaud011, 
   mmaaud012 LIKE mmaa_t.mmaaud012, 
   mmaaud013 LIKE mmaa_t.mmaaud013, 
   mmaaud014 LIKE mmaa_t.mmaaud014, 
   mmaaud015 LIKE mmaa_t.mmaaud015, 
   mmaaud016 LIKE mmaa_t.mmaaud016, 
   mmaaud021 LIKE mmaa_t.mmaaud021, 
   mmaaud022 LIKE mmaa_t.mmaaud022, 
   mmaaud023 LIKE mmaa_t.mmaaud023, 
   mmaaud024 LIKE mmaa_t.mmaaud024, 
   mmaaud025 LIKE mmaa_t.mmaaud025, 
   mmaaud026 LIKE mmaa_t.mmaaud026, 
   mmaaud007 LIKE mmaa_t.mmaaud007, 
   mmaaud008 LIKE mmaa_t.mmaaud008, 
   mmaaud009 LIKE mmaa_t.mmaaud009, 
   mmaaud010 LIKE mmaa_t.mmaaud010, 
   mmaaud017 LIKE mmaa_t.mmaaud017, 
   mmaaud018 LIKE mmaa_t.mmaaud018, 
   mmaaud019 LIKE mmaa_t.mmaaud019, 
   mmaaud020 LIKE mmaa_t.mmaaud020, 
   mmaaud027 LIKE mmaa_t.mmaaud027, 
   mmaaud028 LIKE mmaa_t.mmaaud028, 
   mmaaud029 LIKE mmaa_t.mmaaud029, 
   mmaaud030 LIKE mmaa_t.mmaaud030, 
   mmaaownid LIKE mmaa_t.mmaaownid, 
   mmaaownid_desc LIKE type_t.chr80, 
   mmaaowndp LIKE mmaa_t.mmaaowndp, 
   mmaaowndp_desc LIKE type_t.chr80, 
   mmaacrtid LIKE mmaa_t.mmaacrtid, 
   mmaacrtid_desc LIKE type_t.chr80, 
   mmaacrtdp LIKE mmaa_t.mmaacrtdp, 
   mmaacrtdp_desc LIKE type_t.chr80, 
   mmaacrtdt LIKE mmaa_t.mmaacrtdt, 
   mmaamodid LIKE mmaa_t.mmaamodid, 
   mmaamodid_desc LIKE type_t.chr80, 
   mmaamoddt LIKE mmaa_t.mmaamoddt, 
   mmaacnfid LIKE mmaa_t.mmaacnfid, 
   mmaacnfid_desc LIKE type_t.chr80, 
   mmaacnfdt LIKE mmaa_t.mmaacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmac_d        RECORD
       mmac001 LIKE mmac_t.mmac001, 
   mmac002 LIKE mmac_t.mmac002, 
   mmac002_desc LIKE type_t.chr500, 
   mmac003 LIKE mmac_t.mmac003, 
   mmacacti LIKE mmac_t.mmacacti
       END RECORD
PRIVATE TYPE type_g_mmac2_d RECORD
       mmae001 LIKE mmae_t.mmae001, 
   mmae002 LIKE mmae_t.mmae002, 
   mmae002_desc LIKE type_t.chr500, 
   mmaeacti LIKE mmae_t.mmaeacti
       END RECORD
PRIVATE TYPE type_g_mmac3_d RECORD
       mmad001 LIKE mmad_t.mmad001, 
   mmad002 LIKE mmad_t.mmad002, 
   mmad002_desc LIKE type_t.chr500, 
   mmadacti LIKE mmad_t.mmadacti
       END RECORD
PRIVATE TYPE type_g_mmac4_d RECORD
       mmab001 LIKE mmab_t.mmab001, 
   mmab002 LIKE mmab_t.mmab002, 
   mmab002_desc LIKE type_t.chr500, 
   mmab003 LIKE mmab_t.mmab003, 
   mmab004 LIKE mmab_t.mmab004, 
   mmab004_desc LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_mmaasite LIKE mmaa_t.mmaasite,
   b_mmaasite_desc LIKE type_t.chr80,
      b_mmaadocno LIKE mmaa_t.mmaadocno,
      b_mmaa000 LIKE mmaa_t.mmaa000,
      b_mmaa001 LIKE mmaa_t.mmaa001,
      b_mmaa008 LIKE mmaa_t.mmaa008,
      b_mmaa004 LIKE mmaa_t.mmaa004,
      b_mmaa015 LIKE mmaa_t.mmaa015,
      b_mmaa014 LIKE mmaa_t.mmaa014
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_mmaa_m          type_g_mmaa_m
DEFINE g_mmaa_m_t        type_g_mmaa_m
DEFINE g_mmaa_m_o        type_g_mmaa_m
DEFINE g_mmaa_m_mask_o   type_g_mmaa_m #轉換遮罩前資料
DEFINE g_mmaa_m_mask_n   type_g_mmaa_m #轉換遮罩後資料
 
   DEFINE g_mmaadocno_t LIKE mmaa_t.mmaadocno
 
 
DEFINE g_mmac_d          DYNAMIC ARRAY OF type_g_mmac_d
DEFINE g_mmac_d_t        type_g_mmac_d
DEFINE g_mmac_d_o        type_g_mmac_d
DEFINE g_mmac_d_mask_o   DYNAMIC ARRAY OF type_g_mmac_d #轉換遮罩前資料
DEFINE g_mmac_d_mask_n   DYNAMIC ARRAY OF type_g_mmac_d #轉換遮罩後資料
DEFINE g_mmac2_d          DYNAMIC ARRAY OF type_g_mmac2_d
DEFINE g_mmac2_d_t        type_g_mmac2_d
DEFINE g_mmac2_d_o        type_g_mmac2_d
DEFINE g_mmac2_d_mask_o   DYNAMIC ARRAY OF type_g_mmac2_d #轉換遮罩前資料
DEFINE g_mmac2_d_mask_n   DYNAMIC ARRAY OF type_g_mmac2_d #轉換遮罩後資料
DEFINE g_mmac3_d          DYNAMIC ARRAY OF type_g_mmac3_d
DEFINE g_mmac3_d_t        type_g_mmac3_d
DEFINE g_mmac3_d_o        type_g_mmac3_d
DEFINE g_mmac3_d_mask_o   DYNAMIC ARRAY OF type_g_mmac3_d #轉換遮罩前資料
DEFINE g_mmac3_d_mask_n   DYNAMIC ARRAY OF type_g_mmac3_d #轉換遮罩後資料
DEFINE g_mmac4_d          DYNAMIC ARRAY OF type_g_mmac4_d
DEFINE g_mmac4_d_t        type_g_mmac4_d
DEFINE g_mmac4_d_o        type_g_mmac4_d
DEFINE g_mmac4_d_mask_o   DYNAMIC ARRAY OF type_g_mmac4_d #轉換遮罩前資料
DEFINE g_mmac4_d_mask_n   DYNAMIC ARRAY OF type_g_mmac4_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammt300.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION ammt300_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmac_d.getLength() THEN
         LET g_detail_idx = g_mmac_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmac_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmac_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmac2_d.getLength() THEN
         LET g_detail_idx = g_mmac2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmac2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmac2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmac3_d.getLength() THEN
         LET g_detail_idx = g_mmac3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmac3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmac3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_mmac4_d.getLength() THEN
         LET g_detail_idx = g_mmac4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmac4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmac4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.init" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt300_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('mmaastus','13','N,Y,X')
 
      CALL cl_set_combo_scc('mmaa000','32') 
   CALL cl_set_combo_scc('mmaa003','6501') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL ammt300_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammt300.input" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt300_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaasite_desc,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
       g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005, 
       g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003, 
       g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016, 
       g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018,g_mmaa_m.mmaa018_desc, 
       g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
       g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
       g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
       g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
       g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
       g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
       g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaownid_desc,g_mmaa_m.mmaaowndp, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdp_desc, 
       g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamodid_desc,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
       g_mmaa_m.mmaacnfid_desc,g_mmaa_m.mmaacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmac001,mmac002,mmac003,mmacacti FROM mmac_t WHERE mmacent=? AND mmacdocno=?  
       AND mmac002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt300_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmae001,mmae002,mmaeacti FROM mmae_t WHERE mmaeent=? AND mmaedocno=? AND  
       mmae002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt300_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmad001,mmad002,mmadacti FROM mmad_t WHERE mmadent=? AND mmaddocno=? AND  
       mmad002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt300_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmab001,mmab002,mmab003,mmab004 FROM mmab_t WHERE mmabent=? AND mmabdocno=?  
       AND mmab002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt300_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt300_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt300_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001, 
       g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007, 
       g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004, 
       g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018, 
       g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
       g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
       g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
       g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
       g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
       g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
       g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="ammt300.input.body" ver="22" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmac_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt300_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_mmac_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmac_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmac_d[l_ac].mmac002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmac_d_t.* = g_mmac_d[l_ac].*  #BACKUP
               LET g_mmac_d_o.* = g_mmac_d[l_ac].*  #BACKUP
               CALL ammt300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt300_set_no_entry_b(l_cmd)
               IF NOT ammt300_lock_b("mmac_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt300_bcl INTO g_mmac_d[l_ac].mmac001,g_mmac_d[l_ac].mmac002,g_mmac_d[l_ac].mmac003, 
                      g_mmac_d[l_ac].mmacacti
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_mmac_d_t.mmac002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmac_d_mask_o[l_ac].* =  g_mmac_d[l_ac].*
                  CALL ammt300_mmac_t_mask()
                  LET g_mmac_d_mask_n[l_ac].* =  g_mmac_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmac_d[l_ac].* TO NULL 
            INITIALIZE g_mmac_d_t.* TO NULL 
            INITIALIZE g_mmac_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_mmac_d[l_ac].mmacacti = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_mmac_d_t.* = g_mmac_d[l_ac].*     #新輸入資料
            LET g_mmac_d_o.* = g_mmac_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmac_d[li_reproduce_target].* = g_mmac_d[li_reproduce].*
 
               LET g_mmac_d[li_reproduce_target].mmac002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmac_t 
             WHERE mmacent = g_enterprise AND mmacdocno = g_mmaa_m.mmaadocno
 
               AND mmac002 = g_mmac_d[l_ac].mmac002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys[2] = g_mmac_d[g_detail_idx].mmac002
               CALL ammt300_insert_b('mmac_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mmac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmac_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt300_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmaa_m.mmaadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_mmac_d_t.mmac002
 
            
               #刪除同層單身
               IF NOT ammt300_delete_b('mmac_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt300_key_delete_b(gs_keys,'mmac_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt300_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_mmac_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmac_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac001
            #add-point:BEFORE FIELD mmac001
            {<point name="input.b.page1.mmac001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac001
            
            #add-point:AFTER FIELD mmac001
            {<point name="input.a.page1.mmac001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmac001
            #add-point:ON CHANGE mmac001
            {<point name="input.g.page1.mmac001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac002
            
            #add-point:AFTER FIELD mmac002
            {<point name="input.a.page1.mmac002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac002
            #add-point:BEFORE FIELD mmac002
            {<point name="input.b.page1.mmac002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmac002
            #add-point:ON CHANGE mmac002
            {<point name="input.g.page1.mmac002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmac003
            #add-point:BEFORE FIELD mmac003
            {<point name="input.b.page1.mmac003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmac003
            
            #add-point:AFTER FIELD mmac003
            {<point name="input.a.page1.mmac003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmac003
            #add-point:ON CHANGE mmac003
            {<point name="input.g.page1.mmac003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmacacti
            #add-point:BEFORE FIELD mmacacti
            {<point name="input.b.page1.mmacacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmacacti
            
            #add-point:AFTER FIELD mmacacti
            {<point name="input.a.page1.mmacacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmacacti
            #add-point:ON CHANGE mmacacti
            {<point name="input.g.page1.mmacacti" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.mmac001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac001
            #add-point:ON ACTION controlp INFIELD mmac001
            {<point name="input.c.page1.mmac001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmac002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac002
            #add-point:ON ACTION controlp INFIELD mmac002
            {<point name="input.c.page1.mmac002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmac003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmac003
            #add-point:ON ACTION controlp INFIELD mmac003
            {<point name="input.c.page1.mmac003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmacacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmacacti
            #add-point:ON ACTION controlp INFIELD mmacacti
            {<point name="input.c.page1.mmacacti" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mmac_d[l_ac].* = g_mmac_d_t.*
               CLOSE ammt300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mmac_d[l_ac].mmac002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mmac_d[l_ac].* = g_mmac_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL ammt300_mmac_t_mask_restore('restore_mask_o')
      
               UPDATE mmac_t SET (mmacdocno,mmac001,mmac002,mmac003,mmacacti) = (g_mmaa_m.mmaadocno, 
                   g_mmac_d[l_ac].mmac001,g_mmac_d[l_ac].mmac002,g_mmac_d[l_ac].mmac003,g_mmac_d[l_ac].mmacacti) 

                WHERE mmacent = g_enterprise AND mmacdocno = g_mmaa_m.mmaadocno 
 
                  AND mmac002 = g_mmac_d_t.mmac002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmac_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac_d[l_ac].* = g_mmac_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmac_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_mmac_d[l_ac].* = g_mmac_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys_bak[1] = g_mmaadocno_t
               LET gs_keys[2] = g_mmac_d[g_detail_idx].mmac002
               LET gs_keys_bak[2] = g_mmac_d_t.mmac002
               CALL ammt300_update_b('mmac_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL ammt300_mmac_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_mmac_d[g_detail_idx].mmac002 = g_mmac_d_t.mmac002 
 
                  ) THEN
                  LET gs_keys[01] = g_mmaa_m.mmaadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mmac_d_t.mmac002
 
                  CALL ammt300_key_update_b(gs_keys,'mmac_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt300_unlock_b("mmac_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmac_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmac_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmac2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmac2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt300_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmac2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmac2_d[l_ac].* TO NULL 
            INITIALIZE g_mmac2_d_t.* TO NULL 
            INITIALIZE g_mmac2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_mmac2_d[l_ac].mmaeacti = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_mmac2_d_t.* = g_mmac2_d[l_ac].*     #新輸入資料
            LET g_mmac2_d_o.* = g_mmac2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmac2_d[li_reproduce_target].* = g_mmac2_d[li_reproduce].*
 
               LET g_mmac2_d[li_reproduce_target].mmae002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmac2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmac2_d[l_ac].mmae002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmac2_d_t.* = g_mmac2_d[l_ac].*  #BACKUP
               LET g_mmac2_d_o.* = g_mmac2_d[l_ac].*  #BACKUP
               CALL ammt300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammt300_set_no_entry_b(l_cmd)
               IF NOT ammt300_lock_b("mmae_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt300_bcl2 INTO g_mmac2_d[l_ac].mmae001,g_mmac2_d[l_ac].mmae002,g_mmac2_d[l_ac].mmaeacti 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmac2_d_mask_o[l_ac].* =  g_mmac2_d[l_ac].*
                  CALL ammt300_mmae_t_mask()
                  LET g_mmac2_d_mask_n[l_ac].* =  g_mmac2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmaa_m.mmaadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmac2_d_t.mmae002
            
               #刪除同層單身
               IF NOT ammt300_delete_b('mmae_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt300_key_delete_b(gs_keys,'mmae_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt300_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_mmac_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmac2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmae_t 
             WHERE mmaeent = g_enterprise AND mmaedocno = g_mmaa_m.mmaadocno
               AND mmae002 = g_mmac2_d[l_ac].mmae002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys[2] = g_mmac2_d[g_detail_idx].mmae002
               CALL ammt300_insert_b('mmae_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mmac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmae_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mmac2_d[l_ac].* = g_mmac2_d_t.*
               CLOSE ammt300_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mmac2_d[l_ac].* = g_mmac2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL ammt300_mmae_t_mask_restore('restore_mask_o')
                              
               UPDATE mmae_t SET (mmaedocno,mmae001,mmae002,mmaeacti) = (g_mmaa_m.mmaadocno,g_mmac2_d[l_ac].mmae001, 
                   g_mmac2_d[l_ac].mmae002,g_mmac2_d[l_ac].mmaeacti) #自訂欄位頁簽
                WHERE mmaeent = g_enterprise AND mmaedocno = g_mmaa_m.mmaadocno
                  AND mmae002 = g_mmac2_d_t.mmae002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmae_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac2_d[l_ac].* = g_mmac2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmae_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac2_d[l_ac].* = g_mmac2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys_bak[1] = g_mmaadocno_t
               LET gs_keys[2] = g_mmac2_d[g_detail_idx].mmae002
               LET gs_keys_bak[2] = g_mmac2_d_t.mmae002
               CALL ammt300_update_b('mmae_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt300_mmae_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmac2_d[g_detail_idx].mmae002 = g_mmac2_d_t.mmae002 
                  ) THEN
                  LET gs_keys[01] = g_mmaa_m.mmaadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmac2_d_t.mmae002
                  CALL ammt300_key_update_b(gs_keys,'mmae_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac2_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmae001
            #add-point:BEFORE FIELD mmae001
            {<point name="input.b.page2.mmae001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmae001
            
            #add-point:AFTER FIELD mmae001
            {<point name="input.a.page2.mmae001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmae001
            #add-point:ON CHANGE mmae001
            {<point name="input.g.page2.mmae001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmae002
            
            #add-point:AFTER FIELD mmae002
            {<point name="input.a.page2.mmae002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmae002
            #add-point:BEFORE FIELD mmae002
            {<point name="input.b.page2.mmae002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmae002
            #add-point:ON CHANGE mmae002
            {<point name="input.g.page2.mmae002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaeacti
            #add-point:BEFORE FIELD mmaeacti
            {<point name="input.b.page2.mmaeacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaeacti
            
            #add-point:AFTER FIELD mmaeacti
            {<point name="input.a.page2.mmaeacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaeacti
            #add-point:ON CHANGE mmaeacti
            {<point name="input.g.page2.mmaeacti" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.mmae001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmae001
            #add-point:ON ACTION controlp INFIELD mmae001
            {<point name="input.c.page2.mmae001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmae002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmae002
            #add-point:ON ACTION controlp INFIELD mmae002
            {<point name="input.c.page2.mmae002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmaeacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaeacti
            #add-point:ON ACTION controlp INFIELD mmaeacti
            {<point name="input.c.page2.mmaeacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmac2_d[l_ac].* = g_mmac2_d_t.*
               END IF
               CLOSE ammt300_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt300_unlock_b("mmae_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmac2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmac2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmac3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmac3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt300_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmac3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmac3_d[l_ac].* TO NULL 
            INITIALIZE g_mmac3_d_t.* TO NULL 
            INITIALIZE g_mmac3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_mmac3_d[l_ac].mmadacti = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_mmac3_d_t.* = g_mmac3_d[l_ac].*     #新輸入資料
            LET g_mmac3_d_o.* = g_mmac3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmac3_d[li_reproduce_target].* = g_mmac3_d[li_reproduce].*
 
               LET g_mmac3_d[li_reproduce_target].mmad002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmac3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmac3_d[l_ac].mmad002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmac3_d_t.* = g_mmac3_d[l_ac].*  #BACKUP
               LET g_mmac3_d_o.* = g_mmac3_d[l_ac].*  #BACKUP
               CALL ammt300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammt300_set_no_entry_b(l_cmd)
               IF NOT ammt300_lock_b("mmad_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt300_bcl3 INTO g_mmac3_d[l_ac].mmad001,g_mmac3_d[l_ac].mmad002,g_mmac3_d[l_ac].mmadacti 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmac3_d_mask_o[l_ac].* =  g_mmac3_d[l_ac].*
                  CALL ammt300_mmad_t_mask()
                  LET g_mmac3_d_mask_n[l_ac].* =  g_mmac3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmaa_m.mmaadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmac3_d_t.mmad002
            
               #刪除同層單身
               IF NOT ammt300_delete_b('mmad_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt300_key_delete_b(gs_keys,'mmad_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt300_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_mmac_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmac3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmad_t 
             WHERE mmadent = g_enterprise AND mmaddocno = g_mmaa_m.mmaadocno
               AND mmad002 = g_mmac3_d[l_ac].mmad002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys[2] = g_mmac3_d[g_detail_idx].mmad002
               CALL ammt300_insert_b('mmad_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mmac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmad_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mmac3_d[l_ac].* = g_mmac3_d_t.*
               CLOSE ammt300_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mmac3_d[l_ac].* = g_mmac3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL ammt300_mmad_t_mask_restore('restore_mask_o')
                              
               UPDATE mmad_t SET (mmaddocno,mmad001,mmad002,mmadacti) = (g_mmaa_m.mmaadocno,g_mmac3_d[l_ac].mmad001, 
                   g_mmac3_d[l_ac].mmad002,g_mmac3_d[l_ac].mmadacti) #自訂欄位頁簽
                WHERE mmadent = g_enterprise AND mmaddocno = g_mmaa_m.mmaadocno
                  AND mmad002 = g_mmac3_d_t.mmad002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmad_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac3_d[l_ac].* = g_mmac3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmad_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac3_d[l_ac].* = g_mmac3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys_bak[1] = g_mmaadocno_t
               LET gs_keys[2] = g_mmac3_d[g_detail_idx].mmad002
               LET gs_keys_bak[2] = g_mmac3_d_t.mmad002
               CALL ammt300_update_b('mmad_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt300_mmad_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmac3_d[g_detail_idx].mmad002 = g_mmac3_d_t.mmad002 
                  ) THEN
                  LET gs_keys[01] = g_mmaa_m.mmaadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmac3_d_t.mmad002
                  CALL ammt300_key_update_b(gs_keys,'mmad_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac3_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmad001
            #add-point:BEFORE FIELD mmad001
            {<point name="input.b.page3.mmad001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmad001
            
            #add-point:AFTER FIELD mmad001
            {<point name="input.a.page3.mmad001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmad001
            #add-point:ON CHANGE mmad001
            {<point name="input.g.page3.mmad001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmad002
            
            #add-point:AFTER FIELD mmad002
            {<point name="input.a.page3.mmad002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmad002
            #add-point:BEFORE FIELD mmad002
            {<point name="input.b.page3.mmad002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmad002
            #add-point:ON CHANGE mmad002
            {<point name="input.g.page3.mmad002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmadacti
            #add-point:BEFORE FIELD mmadacti
            {<point name="input.b.page3.mmadacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmadacti
            
            #add-point:AFTER FIELD mmadacti
            {<point name="input.a.page3.mmadacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmadacti
            #add-point:ON CHANGE mmadacti
            {<point name="input.g.page3.mmadacti" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.mmad001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmad001
            #add-point:ON ACTION controlp INFIELD mmad001
            {<point name="input.c.page3.mmad001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmad002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmad002
            #add-point:ON ACTION controlp INFIELD mmad002
            {<point name="input.c.page3.mmad002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmadacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmadacti
            #add-point:ON ACTION controlp INFIELD mmadacti
            {<point name="input.c.page3.mmadacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmac3_d[l_ac].* = g_mmac3_d_t.*
               END IF
               CLOSE ammt300_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt300_unlock_b("mmad_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmac3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmac3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmac4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmac4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt300_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmac4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmac4_d[l_ac].* TO NULL 
            INITIALIZE g_mmac4_d_t.* TO NULL 
            INITIALIZE g_mmac4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_mmac4_d_t.* = g_mmac4_d[l_ac].*     #新輸入資料
            LET g_mmac4_d_o.* = g_mmac4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmac4_d[li_reproduce_target].* = g_mmac4_d[li_reproduce].*
 
               LET g_mmac4_d[li_reproduce_target].mmab002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmac4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmac4_d[l_ac].mmab002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmac4_d_t.* = g_mmac4_d[l_ac].*  #BACKUP
               LET g_mmac4_d_o.* = g_mmac4_d[l_ac].*  #BACKUP
               CALL ammt300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL ammt300_set_no_entry_b(l_cmd)
               IF NOT ammt300_lock_b("mmab_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt300_bcl4 INTO g_mmac4_d[l_ac].mmab001,g_mmac4_d[l_ac].mmab002,g_mmac4_d[l_ac].mmab003, 
                      g_mmac4_d[l_ac].mmab004
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmac4_d_mask_o[l_ac].* =  g_mmac4_d[l_ac].*
                  CALL ammt300_mmab_t_mask()
                  LET g_mmac4_d_mask_n[l_ac].* =  g_mmac4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmaa_m.mmaadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmac4_d_t.mmab002
            
               #刪除同層單身
               IF NOT ammt300_delete_b('mmab_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt300_key_delete_b(gs_keys,'mmab_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt300_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_mmac_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmac4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmab_t 
             WHERE mmabent = g_enterprise AND mmabdocno = g_mmaa_m.mmaadocno
               AND mmab002 = g_mmac4_d[l_ac].mmab002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys[2] = g_mmac4_d[g_detail_idx].mmab002
               CALL ammt300_insert_b('mmab_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mmac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmab_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mmac4_d[l_ac].* = g_mmac4_d_t.*
               CLOSE ammt300_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mmac4_d[l_ac].* = g_mmac4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL ammt300_mmab_t_mask_restore('restore_mask_o')
                              
               UPDATE mmab_t SET (mmabdocno,mmab001,mmab002,mmab003,mmab004) = (g_mmaa_m.mmaadocno,g_mmac4_d[l_ac].mmab001, 
                   g_mmac4_d[l_ac].mmab002,g_mmac4_d[l_ac].mmab003,g_mmac4_d[l_ac].mmab004) #自訂欄位頁簽 

                WHERE mmabent = g_enterprise AND mmabdocno = g_mmaa_m.mmaadocno
                  AND mmab002 = g_mmac4_d_t.mmab002 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmab_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac4_d[l_ac].* = g_mmac4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmab_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmac4_d[l_ac].* = g_mmac4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaa_m.mmaadocno
               LET gs_keys_bak[1] = g_mmaadocno_t
               LET gs_keys[2] = g_mmac4_d[g_detail_idx].mmab002
               LET gs_keys_bak[2] = g_mmac4_d_t.mmab002
               CALL ammt300_update_b('mmab_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt300_mmab_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmac4_d[g_detail_idx].mmab002 = g_mmac4_d_t.mmab002 
                  ) THEN
                  LET gs_keys[01] = g_mmaa_m.mmaadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmac4_d_t.mmab002
                  CALL ammt300_key_update_b(gs_keys,'mmab_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac4_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaa_m),util.JSON.stringify(g_mmac4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab001
            #add-point:BEFORE FIELD mmab001
            {<point name="input.b.page4.mmab001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab001
            
            #add-point:AFTER FIELD mmab001
            {<point name="input.a.page4.mmab001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmab001
            #add-point:ON CHANGE mmab001
            {<point name="input.g.page4.mmab001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab002
            
            #add-point:AFTER FIELD mmab002
            {<point name="input.a.page4.mmab002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab002
            #add-point:BEFORE FIELD mmab002
            {<point name="input.b.page4.mmab002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmab002
            #add-point:ON CHANGE mmab002
            {<point name="input.g.page4.mmab002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab003
            #add-point:BEFORE FIELD mmab003
            {<point name="input.b.page4.mmab003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab003
            
            #add-point:AFTER FIELD mmab003
            {<point name="input.a.page4.mmab003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmab003
            #add-point:ON CHANGE mmab003
            {<point name="input.g.page4.mmab003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmab004
            
            #add-point:AFTER FIELD mmab004
            {<point name="input.a.page4.mmab004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmab004
            #add-point:BEFORE FIELD mmab004
            {<point name="input.b.page4.mmab004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmab004
            #add-point:ON CHANGE mmab004
            {<point name="input.g.page4.mmab004" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.mmab001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab001
            #add-point:ON ACTION controlp INFIELD mmab001
            {<point name="input.c.page4.mmab001" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmab002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab002
            #add-point:ON ACTION controlp INFIELD mmab002
            {<point name="input.c.page4.mmab002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmab003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab003
            #add-point:ON ACTION controlp INFIELD mmab003
            {<point name="input.c.page4.mmab003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmab004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmab004
            #add-point:ON ACTION controlp INFIELD mmab004
            {<point name="input.c.page4.mmab004" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmac4_d[l_ac].* = g_mmac4_d_t.*
               END IF
               CLOSE ammt300_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt300_unlock_b("mmab_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmac4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmac4_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="ammt300.input.head" ver="31" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001, 
          g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007, 
          g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004, 
          g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018, 
          g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
          g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
          g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
          g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
          g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
          g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
          g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION adress
            LET g_action_choice="adress"
            IF cl_auth_chk_act("adress") THEN
               
               #add-point:ON ACTION adress
               {<point name="input.master_input.adress" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL ammt300_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL ammt300_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaasite
            
            #add-point:AFTER FIELD mmaasite
            {<point name="input.a.mmaasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaasite
            #add-point:BEFORE FIELD mmaasite
            {<point name="input.b.mmaasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaasite
            #add-point:ON CHANGE mmaasite
            {<point name="input.g.mmaasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaadocdt
            #add-point:BEFORE FIELD mmaadocdt
            {<point name="input.b.mmaadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaadocdt
            
            #add-point:AFTER FIELD mmaadocdt
            {<point name="input.a.mmaadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaadocdt
            #add-point:ON CHANGE mmaadocdt
            {<point name="input.g.mmaadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaadocno
            #add-point:BEFORE FIELD mmaadocno
            {<point name="input.b.mmaadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaadocno
            
            #add-point:AFTER FIELD mmaadocno
            {<point name="input.a.mmaadocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaadocno
            #add-point:ON CHANGE mmaadocno
            {<point name="input.g.mmaadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa000
            #add-point:BEFORE FIELD mmaa000
            {<point name="input.b.mmaa000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa000
            
            #add-point:AFTER FIELD mmaa000
            {<point name="input.a.mmaa000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa000
            #add-point:ON CHANGE mmaa000
            {<point name="input.g.mmaa000" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa001
            #add-point:BEFORE FIELD mmaa001
            {<point name="input.b.mmaa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa001
            
            #add-point:AFTER FIELD mmaa001
            {<point name="input.a.mmaa001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa001
            #add-point:ON CHANGE mmaa001
            {<point name="input.g.mmaa001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa002
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmaa_m.mmaa002,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmaa002
            END IF 
 
 
            #add-point:AFTER FIELD mmaa002
            {<point name="input.a.mmaa002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa002
            #add-point:BEFORE FIELD mmaa002
            {<point name="input.b.mmaa002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa002
            #add-point:ON CHANGE mmaa002
            {<point name="input.g.mmaa002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaacti
            #add-point:BEFORE FIELD mmaaacti
            {<point name="input.b.mmaaacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaacti
            
            #add-point:AFTER FIELD mmaaacti
            {<point name="input.a.mmaaacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaacti
            #add-point:ON CHANGE mmaaacti
            {<point name="input.g.mmaaacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaunit
            #add-point:BEFORE FIELD mmaaunit
            {<point name="input.b.mmaaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaunit
            
            #add-point:AFTER FIELD mmaaunit
            {<point name="input.a.mmaaunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaunit
            #add-point:ON CHANGE mmaaunit
            {<point name="input.g.mmaaunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaastus
            #add-point:BEFORE FIELD mmaastus
            {<point name="input.b.mmaastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaastus
            
            #add-point:AFTER FIELD mmaastus
            {<point name="input.a.mmaastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaastus
            #add-point:ON CHANGE mmaastus
            {<point name="input.g.mmaastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa005
            #add-point:BEFORE FIELD mmaa005
            {<point name="input.b.mmaa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa005
            
            #add-point:AFTER FIELD mmaa005
            {<point name="input.a.mmaa005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa005
            #add-point:ON CHANGE mmaa005
            {<point name="input.g.mmaa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa007
            #add-point:BEFORE FIELD mmaa007
            {<point name="input.b.mmaa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa007
            
            #add-point:AFTER FIELD mmaa007
            {<point name="input.a.mmaa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa007
            #add-point:ON CHANGE mmaa007
            {<point name="input.g.mmaa007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa006
            #add-point:BEFORE FIELD mmaa006
            {<point name="input.b.mmaa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa006
            
            #add-point:AFTER FIELD mmaa006
            {<point name="input.a.mmaa006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa006
            #add-point:ON CHANGE mmaa006
            {<point name="input.g.mmaa006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa008
            #add-point:BEFORE FIELD mmaa008
            {<point name="input.b.mmaa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa008
            
            #add-point:AFTER FIELD mmaa008
            {<point name="input.a.mmaa008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa008
            #add-point:ON CHANGE mmaa008
            {<point name="input.g.mmaa008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa009
            #add-point:BEFORE FIELD mmaa009
            {<point name="input.b.mmaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa009
            
            #add-point:AFTER FIELD mmaa009
            {<point name="input.a.mmaa009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa009
            #add-point:ON CHANGE mmaa009
            {<point name="input.g.mmaa009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa015
            #add-point:BEFORE FIELD mmaa015
            {<point name="input.b.mmaa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa015
            
            #add-point:AFTER FIELD mmaa015
            {<point name="input.a.mmaa015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa015
            #add-point:ON CHANGE mmaa015
            {<point name="input.g.mmaa015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa003
            #add-point:BEFORE FIELD mmaa003
            {<point name="input.b.mmaa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa003
            
            #add-point:AFTER FIELD mmaa003
            {<point name="input.a.mmaa003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa003
            #add-point:ON CHANGE mmaa003
            {<point name="input.g.mmaa003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa004
            #add-point:BEFORE FIELD mmaa004
            {<point name="input.b.mmaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa004
            
            #add-point:AFTER FIELD mmaa004
            {<point name="input.a.mmaa004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa004
            #add-point:ON CHANGE mmaa004
            {<point name="input.g.mmaa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa013
            #add-point:BEFORE FIELD mmaa013
            {<point name="input.b.mmaa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa013
            
            #add-point:AFTER FIELD mmaa013
            {<point name="input.a.mmaa013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa013
            #add-point:ON CHANGE mmaa013
            {<point name="input.g.mmaa013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa014
            #add-point:BEFORE FIELD mmaa014
            {<point name="input.b.mmaa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa014
            
            #add-point:AFTER FIELD mmaa014
            {<point name="input.a.mmaa014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa014
            #add-point:ON CHANGE mmaa014
            {<point name="input.g.mmaa014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa019
            
            #add-point:AFTER FIELD mmaa019
            {<point name="input.a.mmaa019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa019
            #add-point:BEFORE FIELD mmaa019
            {<point name="input.b.mmaa019" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa019
            #add-point:ON CHANGE mmaa019
            {<point name="input.g.mmaa019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa016
            
            #add-point:AFTER FIELD mmaa016
            {<point name="input.a.mmaa016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa016
            #add-point:BEFORE FIELD mmaa016
            {<point name="input.b.mmaa016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa016
            #add-point:ON CHANGE mmaa016
            {<point name="input.g.mmaa016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa017
            
            #add-point:AFTER FIELD mmaa017
            {<point name="input.a.mmaa017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa017
            #add-point:BEFORE FIELD mmaa017
            {<point name="input.b.mmaa017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa017
            #add-point:ON CHANGE mmaa017
            {<point name="input.g.mmaa017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa018
            
            #add-point:AFTER FIELD mmaa018
            {<point name="input.a.mmaa018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa018
            #add-point:BEFORE FIELD mmaa018
            {<point name="input.b.mmaa018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa018
            #add-point:ON CHANGE mmaa018
            {<point name="input.g.mmaa018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa010
            #add-point:BEFORE FIELD mmaa010
            {<point name="input.b.mmaa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa010
            
            #add-point:AFTER FIELD mmaa010
            {<point name="input.a.mmaa010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa010
            #add-point:ON CHANGE mmaa010
            {<point name="input.g.mmaa010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa011
            #add-point:BEFORE FIELD mmaa011
            {<point name="input.b.mmaa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa011
            
            #add-point:AFTER FIELD mmaa011
            {<point name="input.a.mmaa011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa011
            #add-point:ON CHANGE mmaa011
            {<point name="input.g.mmaa011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaa012
            #add-point:BEFORE FIELD mmaa012
            {<point name="input.b.mmaa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaa012
            
            #add-point:AFTER FIELD mmaa012
            {<point name="input.a.mmaa012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaa012
            #add-point:ON CHANGE mmaa012
            {<point name="input.g.mmaa012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud001
            #add-point:BEFORE FIELD mmaaud001
            {<point name="input.b.mmaaud001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud001
            
            #add-point:AFTER FIELD mmaaud001
            {<point name="input.a.mmaaud001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud001
            #add-point:ON CHANGE mmaaud001
            {<point name="input.g.mmaaud001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud002
            #add-point:BEFORE FIELD mmaaud002
            {<point name="input.b.mmaaud002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud002
            
            #add-point:AFTER FIELD mmaaud002
            {<point name="input.a.mmaaud002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud002
            #add-point:ON CHANGE mmaaud002
            {<point name="input.g.mmaaud002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud003
            #add-point:BEFORE FIELD mmaaud003
            {<point name="input.b.mmaaud003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud003
            
            #add-point:AFTER FIELD mmaaud003
            {<point name="input.a.mmaaud003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud003
            #add-point:ON CHANGE mmaaud003
            {<point name="input.g.mmaaud003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud004
            #add-point:BEFORE FIELD mmaaud004
            {<point name="input.b.mmaaud004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud004
            
            #add-point:AFTER FIELD mmaaud004
            {<point name="input.a.mmaaud004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud004
            #add-point:ON CHANGE mmaaud004
            {<point name="input.g.mmaaud004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud005
            #add-point:BEFORE FIELD mmaaud005
            {<point name="input.b.mmaaud005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud005
            
            #add-point:AFTER FIELD mmaaud005
            {<point name="input.a.mmaaud005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud005
            #add-point:ON CHANGE mmaaud005
            {<point name="input.g.mmaaud005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud006
            #add-point:BEFORE FIELD mmaaud006
            {<point name="input.b.mmaaud006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud006
            
            #add-point:AFTER FIELD mmaaud006
            {<point name="input.a.mmaaud006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud006
            #add-point:ON CHANGE mmaaud006
            {<point name="input.g.mmaaud006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud011
            #add-point:BEFORE FIELD mmaaud011
            {<point name="input.b.mmaaud011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud011
            
            #add-point:AFTER FIELD mmaaud011
            {<point name="input.a.mmaaud011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud011
            #add-point:ON CHANGE mmaaud011
            {<point name="input.g.mmaaud011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud012
            #add-point:BEFORE FIELD mmaaud012
            {<point name="input.b.mmaaud012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud012
            
            #add-point:AFTER FIELD mmaaud012
            {<point name="input.a.mmaaud012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud012
            #add-point:ON CHANGE mmaaud012
            {<point name="input.g.mmaaud012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud013
            #add-point:BEFORE FIELD mmaaud013
            {<point name="input.b.mmaaud013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud013
            
            #add-point:AFTER FIELD mmaaud013
            {<point name="input.a.mmaaud013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud013
            #add-point:ON CHANGE mmaaud013
            {<point name="input.g.mmaaud013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud014
            #add-point:BEFORE FIELD mmaaud014
            {<point name="input.b.mmaaud014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud014
            
            #add-point:AFTER FIELD mmaaud014
            {<point name="input.a.mmaaud014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud014
            #add-point:ON CHANGE mmaaud014
            {<point name="input.g.mmaaud014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud015
            #add-point:BEFORE FIELD mmaaud015
            {<point name="input.b.mmaaud015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud015
            
            #add-point:AFTER FIELD mmaaud015
            {<point name="input.a.mmaaud015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud015
            #add-point:ON CHANGE mmaaud015
            {<point name="input.g.mmaaud015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud016
            #add-point:BEFORE FIELD mmaaud016
            {<point name="input.b.mmaaud016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud016
            
            #add-point:AFTER FIELD mmaaud016
            {<point name="input.a.mmaaud016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud016
            #add-point:ON CHANGE mmaaud016
            {<point name="input.g.mmaaud016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud021
            #add-point:BEFORE FIELD mmaaud021
            {<point name="input.b.mmaaud021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud021
            
            #add-point:AFTER FIELD mmaaud021
            {<point name="input.a.mmaaud021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud021
            #add-point:ON CHANGE mmaaud021
            {<point name="input.g.mmaaud021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud022
            #add-point:BEFORE FIELD mmaaud022
            {<point name="input.b.mmaaud022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud022
            
            #add-point:AFTER FIELD mmaaud022
            {<point name="input.a.mmaaud022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud022
            #add-point:ON CHANGE mmaaud022
            {<point name="input.g.mmaaud022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud023
            #add-point:BEFORE FIELD mmaaud023
            {<point name="input.b.mmaaud023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud023
            
            #add-point:AFTER FIELD mmaaud023
            {<point name="input.a.mmaaud023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud023
            #add-point:ON CHANGE mmaaud023
            {<point name="input.g.mmaaud023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud024
            #add-point:BEFORE FIELD mmaaud024
            {<point name="input.b.mmaaud024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud024
            
            #add-point:AFTER FIELD mmaaud024
            {<point name="input.a.mmaaud024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud024
            #add-point:ON CHANGE mmaaud024
            {<point name="input.g.mmaaud024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud025
            #add-point:BEFORE FIELD mmaaud025
            {<point name="input.b.mmaaud025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud025
            
            #add-point:AFTER FIELD mmaaud025
            {<point name="input.a.mmaaud025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud025
            #add-point:ON CHANGE mmaaud025
            {<point name="input.g.mmaaud025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud026
            #add-point:BEFORE FIELD mmaaud026
            {<point name="input.b.mmaaud026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud026
            
            #add-point:AFTER FIELD mmaaud026
            {<point name="input.a.mmaaud026" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud026
            #add-point:ON CHANGE mmaaud026
            {<point name="input.g.mmaaud026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud007
            #add-point:BEFORE FIELD mmaaud007
            {<point name="input.b.mmaaud007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud007
            
            #add-point:AFTER FIELD mmaaud007
            {<point name="input.a.mmaaud007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud007
            #add-point:ON CHANGE mmaaud007
            {<point name="input.g.mmaaud007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud008
            #add-point:BEFORE FIELD mmaaud008
            {<point name="input.b.mmaaud008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud008
            
            #add-point:AFTER FIELD mmaaud008
            {<point name="input.a.mmaaud008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud008
            #add-point:ON CHANGE mmaaud008
            {<point name="input.g.mmaaud008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud009
            #add-point:BEFORE FIELD mmaaud009
            {<point name="input.b.mmaaud009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud009
            
            #add-point:AFTER FIELD mmaaud009
            {<point name="input.a.mmaaud009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud009
            #add-point:ON CHANGE mmaaud009
            {<point name="input.g.mmaaud009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud010
            #add-point:BEFORE FIELD mmaaud010
            {<point name="input.b.mmaaud010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud010
            
            #add-point:AFTER FIELD mmaaud010
            {<point name="input.a.mmaaud010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud010
            #add-point:ON CHANGE mmaaud010
            {<point name="input.g.mmaaud010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud017
            #add-point:BEFORE FIELD mmaaud017
            {<point name="input.b.mmaaud017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud017
            
            #add-point:AFTER FIELD mmaaud017
            {<point name="input.a.mmaaud017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud017
            #add-point:ON CHANGE mmaaud017
            {<point name="input.g.mmaaud017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud018
            #add-point:BEFORE FIELD mmaaud018
            {<point name="input.b.mmaaud018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud018
            
            #add-point:AFTER FIELD mmaaud018
            {<point name="input.a.mmaaud018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud018
            #add-point:ON CHANGE mmaaud018
            {<point name="input.g.mmaaud018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud019
            #add-point:BEFORE FIELD mmaaud019
            {<point name="input.b.mmaaud019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud019
            
            #add-point:AFTER FIELD mmaaud019
            {<point name="input.a.mmaaud019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud019
            #add-point:ON CHANGE mmaaud019
            {<point name="input.g.mmaaud019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud020
            #add-point:BEFORE FIELD mmaaud020
            {<point name="input.b.mmaaud020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud020
            
            #add-point:AFTER FIELD mmaaud020
            {<point name="input.a.mmaaud020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud020
            #add-point:ON CHANGE mmaaud020
            {<point name="input.g.mmaaud020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud027
            #add-point:BEFORE FIELD mmaaud027
            {<point name="input.b.mmaaud027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud027
            
            #add-point:AFTER FIELD mmaaud027
            {<point name="input.a.mmaaud027" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud027
            #add-point:ON CHANGE mmaaud027
            {<point name="input.g.mmaaud027" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud028
            #add-point:BEFORE FIELD mmaaud028
            {<point name="input.b.mmaaud028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud028
            
            #add-point:AFTER FIELD mmaaud028
            {<point name="input.a.mmaaud028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud028
            #add-point:ON CHANGE mmaaud028
            {<point name="input.g.mmaaud028" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud029
            #add-point:BEFORE FIELD mmaaud029
            {<point name="input.b.mmaaud029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud029
            
            #add-point:AFTER FIELD mmaaud029
            {<point name="input.a.mmaaud029" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud029
            #add-point:ON CHANGE mmaaud029
            {<point name="input.g.mmaaud029" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaaud030
            #add-point:BEFORE FIELD mmaaud030
            {<point name="input.b.mmaaud030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaaud030
            
            #add-point:AFTER FIELD mmaaud030
            {<point name="input.a.mmaaud030" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaaud030
            #add-point:ON CHANGE mmaaud030
            {<point name="input.g.mmaaud030" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.mmaasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaasite
            #add-point:ON ACTION controlp INFIELD mmaasite
            {<point name="input.c.mmaasite" />}
            #END add-point
 
         #Ctrlp:input.c.mmaadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaadocdt
            #add-point:ON ACTION controlp INFIELD mmaadocdt
            {<point name="input.c.mmaadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmaadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaadocno
            #add-point:ON ACTION controlp INFIELD mmaadocno
            {<point name="input.c.mmaadocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa000
            #add-point:ON ACTION controlp INFIELD mmaa000
            {<point name="input.c.mmaa000" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa001
            #add-point:ON ACTION controlp INFIELD mmaa001
            {<point name="input.c.mmaa001" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa002
            #add-point:ON ACTION controlp INFIELD mmaa002
            {<point name="input.c.mmaa002" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaacti
            #add-point:ON ACTION controlp INFIELD mmaaacti
            {<point name="input.c.mmaaacti" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaunit
            #add-point:ON ACTION controlp INFIELD mmaaunit
            {<point name="input.c.mmaaunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmaastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaastus
            #add-point:ON ACTION controlp INFIELD mmaastus
            {<point name="input.c.mmaastus" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa005
            #add-point:ON ACTION controlp INFIELD mmaa005
            {<point name="input.c.mmaa005" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa007
            #add-point:ON ACTION controlp INFIELD mmaa007
            {<point name="input.c.mmaa007" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa006
            #add-point:ON ACTION controlp INFIELD mmaa006
            {<point name="input.c.mmaa006" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa008
            #add-point:ON ACTION controlp INFIELD mmaa008
            {<point name="input.c.mmaa008" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa009
            #add-point:ON ACTION controlp INFIELD mmaa009
            {<point name="input.c.mmaa009" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa015
            #add-point:ON ACTION controlp INFIELD mmaa015
            {<point name="input.c.mmaa015" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa003
            #add-point:ON ACTION controlp INFIELD mmaa003
            {<point name="input.c.mmaa003" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa004
            #add-point:ON ACTION controlp INFIELD mmaa004
            {<point name="input.c.mmaa004" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa013
            #add-point:ON ACTION controlp INFIELD mmaa013
            {<point name="input.c.mmaa013" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa014
            #add-point:ON ACTION controlp INFIELD mmaa014
            {<point name="input.c.mmaa014" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa019
            #add-point:ON ACTION controlp INFIELD mmaa019
            {<point name="input.c.mmaa019" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa016
            #add-point:ON ACTION controlp INFIELD mmaa016
            {<point name="input.c.mmaa016" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa017
            #add-point:ON ACTION controlp INFIELD mmaa017
            {<point name="input.c.mmaa017" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa018
            #add-point:ON ACTION controlp INFIELD mmaa018
            {<point name="input.c.mmaa018" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa010
            #add-point:ON ACTION controlp INFIELD mmaa010
            {<point name="input.c.mmaa010" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa011
            #add-point:ON ACTION controlp INFIELD mmaa011
            {<point name="input.c.mmaa011" />}
            #END add-point
 
         #Ctrlp:input.c.mmaa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaa012
            #add-point:ON ACTION controlp INFIELD mmaa012
            {<point name="input.c.mmaa012" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud001
            #add-point:ON ACTION controlp INFIELD mmaaud001
            {<point name="input.c.mmaaud001" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud002
            #add-point:ON ACTION controlp INFIELD mmaaud002
            {<point name="input.c.mmaaud002" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud003
            #add-point:ON ACTION controlp INFIELD mmaaud003
            {<point name="input.c.mmaaud003" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud004
            #add-point:ON ACTION controlp INFIELD mmaaud004
            {<point name="input.c.mmaaud004" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud005
            #add-point:ON ACTION controlp INFIELD mmaaud005
            {<point name="input.c.mmaaud005" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud006
            #add-point:ON ACTION controlp INFIELD mmaaud006
            {<point name="input.c.mmaaud006" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud011
            #add-point:ON ACTION controlp INFIELD mmaaud011
            {<point name="input.c.mmaaud011" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud012
            #add-point:ON ACTION controlp INFIELD mmaaud012
            {<point name="input.c.mmaaud012" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud013
            #add-point:ON ACTION controlp INFIELD mmaaud013
            {<point name="input.c.mmaaud013" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud014
            #add-point:ON ACTION controlp INFIELD mmaaud014
            {<point name="input.c.mmaaud014" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud015
            #add-point:ON ACTION controlp INFIELD mmaaud015
            {<point name="input.c.mmaaud015" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud016
            #add-point:ON ACTION controlp INFIELD mmaaud016
            {<point name="input.c.mmaaud016" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud021
            #add-point:ON ACTION controlp INFIELD mmaaud021
            {<point name="input.c.mmaaud021" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud022
            #add-point:ON ACTION controlp INFIELD mmaaud022
            {<point name="input.c.mmaaud022" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud023
            #add-point:ON ACTION controlp INFIELD mmaaud023
            {<point name="input.c.mmaaud023" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud024
            #add-point:ON ACTION controlp INFIELD mmaaud024
            {<point name="input.c.mmaaud024" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud025
            #add-point:ON ACTION controlp INFIELD mmaaud025
            {<point name="input.c.mmaaud025" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud026
            #add-point:ON ACTION controlp INFIELD mmaaud026
            {<point name="input.c.mmaaud026" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud007
            #add-point:ON ACTION controlp INFIELD mmaaud007
            {<point name="input.c.mmaaud007" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud008
            #add-point:ON ACTION controlp INFIELD mmaaud008
            {<point name="input.c.mmaaud008" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud009
            #add-point:ON ACTION controlp INFIELD mmaaud009
            {<point name="input.c.mmaaud009" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud010
            #add-point:ON ACTION controlp INFIELD mmaaud010
            {<point name="input.c.mmaaud010" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud017
            #add-point:ON ACTION controlp INFIELD mmaaud017
            {<point name="input.c.mmaaud017" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud018
            #add-point:ON ACTION controlp INFIELD mmaaud018
            {<point name="input.c.mmaaud018" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud019
            #add-point:ON ACTION controlp INFIELD mmaaud019
            {<point name="input.c.mmaaud019" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud020
            #add-point:ON ACTION controlp INFIELD mmaaud020
            {<point name="input.c.mmaaud020" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud027
            #add-point:ON ACTION controlp INFIELD mmaaud027
            {<point name="input.c.mmaaud027" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud028
            #add-point:ON ACTION controlp INFIELD mmaaud028
            {<point name="input.c.mmaaud028" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud029
            #add-point:ON ACTION controlp INFIELD mmaaud029
            {<point name="input.c.mmaaud029" />}
            #END add-point
 
         #Ctrlp:input.c.mmaaud030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaaud030
            #add-point:ON ACTION controlp INFIELD mmaaud030
            {<point name="input.c.mmaaud030" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_mmaa_m.mmaadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmaa_t (mmaaent,mmaasite,mmaadocdt,mmaadocno,mmaa000,mmaa001,mmaa002,mmaaacti, 
                   mmaaunit,mmaastus,mmaa005,mmaa007,mmaa006,mmaa008,mmaa009,mmaa015,mmaa003,mmaa004, 
                   mmaa013,mmaa014,mmaa019,mmaa016,mmaa017,mmaa018,mmaa010,mmaa011,mmaa012,mmaaud001, 
                   mmaaud002,mmaaud003,mmaaud004,mmaaud005,mmaaud006,mmaaud011,mmaaud012,mmaaud013,mmaaud014, 
                   mmaaud015,mmaaud016,mmaaud021,mmaaud022,mmaaud023,mmaaud024,mmaaud025,mmaaud026,mmaaud007, 
                   mmaaud008,mmaaud009,mmaaud010,mmaaud017,mmaaud018,mmaaud019,mmaaud020,mmaaud027,mmaaud028, 
                   mmaaud029,mmaaud030,mmaaownid,mmaaowndp,mmaacrtid,mmaacrtdp,mmaacrtdt,mmaamodid,mmaamoddt, 
                   mmaacnfid,mmaacnfdt)
               VALUES (g_enterprise,g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
                   g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus, 
                   g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
                   g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014, 
                   g_mmaa_m.mmaa019,g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010, 
                   g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
                   g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
                   g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
                   g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
                   g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
                   g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
                   g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid, 
                   g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
                   g_mmaa_m.mmaacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_mmaa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt300_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL ammt300_b_fill()
                  CALL ammt300_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL ammt300_mmaa_t_mask_restore('restore_mask_o')
               
               UPDATE mmaa_t SET (mmaasite,mmaadocdt,mmaadocno,mmaa000,mmaa001,mmaa002,mmaaacti,mmaaunit, 
                   mmaastus,mmaa005,mmaa007,mmaa006,mmaa008,mmaa009,mmaa015,mmaa003,mmaa004,mmaa013, 
                   mmaa014,mmaa019,mmaa016,mmaa017,mmaa018,mmaa010,mmaa011,mmaa012,mmaaud001,mmaaud002, 
                   mmaaud003,mmaaud004,mmaaud005,mmaaud006,mmaaud011,mmaaud012,mmaaud013,mmaaud014,mmaaud015, 
                   mmaaud016,mmaaud021,mmaaud022,mmaaud023,mmaaud024,mmaaud025,mmaaud026,mmaaud007,mmaaud008, 
                   mmaaud009,mmaaud010,mmaaud017,mmaaud018,mmaaud019,mmaaud020,mmaaud027,mmaaud028,mmaaud029, 
                   mmaaud030,mmaaownid,mmaaowndp,mmaacrtid,mmaacrtdp,mmaacrtdt,mmaamodid,mmaamoddt,mmaacnfid, 
                   mmaacnfdt) = (g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
                   g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus, 
                   g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
                   g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014, 
                   g_mmaa_m.mmaa019,g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010, 
                   g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
                   g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
                   g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
                   g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
                   g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
                   g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
                   g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid, 
                   g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
                   g_mmaa_m.mmaacnfdt)
                WHERE mmaaent = g_enterprise AND mmaadocno = g_mmaadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "mmaa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL ammt300_mmaa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_mmaa_m_t)
               LET g_log2 = util.JSON.stringify(g_mmaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="ammt300.input.other" ver="10" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD mmaadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmac001
               WHEN "s_detail2"
                  NEXT FIELD mmae001
               WHEN "s_detail3"
                  NEXT FIELD mmad001
               WHEN "s_detail4"
                  NEXT FIELD mmab001
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.insert" ver="31" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt300_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmac_d.clear()   
   CALL g_mmac2_d.clear()  
   CALL g_mmac3_d.clear()  
   CALL g_mmac4_d.clear()  
 
 
   INITIALIZE g_mmaa_m.* LIKE mmaa_t.*             #DEFAULT 設定
   
   LET g_mmaadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_mmaa_m.mmaaownid = g_user
      LET g_mmaa_m.mmaaowndp = g_dept
      LET g_mmaa_m.mmaacrtid = g_user
      LET g_mmaa_m.mmaacrtdp = g_dept 
      LET g_mmaa_m.mmaacrtdt = cl_get_current()
      LET g_mmaa_m.mmaamodid = g_user
      LET g_mmaa_m.mmaamoddt = cl_get_current()
      LET g_mmaa_m.mmaastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmaa_m.mmaa002 = "0"
      LET g_mmaa_m.mmaaacti = "Y"
      LET g_mmaa_m.mmaastus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_mmaa_m_t.* = g_mmaa_m.*
      LET g_mmaa_m_o.* = g_mmaa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaa_m.mmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL ammt300_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_mmaa_m.* TO NULL
         INITIALIZE g_mmac_d TO NULL
         INITIALIZE g_mmac2_d TO NULL
         INITIALIZE g_mmac3_d TO NULL
         INITIALIZE g_mmac4_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL ammt300_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_mmac_d.clear()
      #CALL g_mmac2_d.clear()
      #CALL g_mmac3_d.clear()
      #CALL g_mmac4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt300_set_act_visible()   
   CALL ammt300_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmaaent = '" ||g_enterprise|| "' AND",
                      " mmaadocno = '", g_mmaa_m.mmaadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt300_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE ammt300_cl
   
   CALL ammt300_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
   
   #遮罩相關處理
   LET g_mmaa_m_mask_o.* =  g_mmaa_m.*
   CALL ammt300_mmaa_t_mask()
   LET g_mmaa_m_mask_n.* =  g_mmaa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaasite_desc,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
       g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005, 
       g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003, 
       g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016, 
       g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018,g_mmaa_m.mmaa018_desc, 
       g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
       g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
       g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
       g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
       g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
       g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
       g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaownid_desc,g_mmaa_m.mmaaowndp, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdp_desc, 
       g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamodid_desc,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
       g_mmaa_m.mmaacnfid_desc,g_mmaa_m.mmaacnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL ammt300_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt300_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmac_t
                  (mmacent,
                   mmacdocno,
                   mmac002
                   ,mmac001,mmac003,mmacacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmac_d[g_detail_idx].mmac001,g_mmac_d[g_detail_idx].mmac003,g_mmac_d[g_detail_idx].mmacacti) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmac_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmac_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmae_t
                  (mmaeent,
                   mmaedocno,
                   mmae002
                   ,mmae001,mmaeacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmac2_d[g_detail_idx].mmae001,g_mmac2_d[g_detail_idx].mmaeacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmae_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmac2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO mmad_t
                  (mmadent,
                   mmaddocno,
                   mmad002
                   ,mmad001,mmadacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmac3_d[g_detail_idx].mmad001,g_mmac3_d[g_detail_idx].mmadacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmad_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_mmac3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO mmab_t
                  (mmabent,
                   mmabdocno,
                   mmab002
                   ,mmab001,mmab003,mmab004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmac4_d[g_detail_idx].mmab001,g_mmac4_d[g_detail_idx].mmab003,g_mmac4_d[g_detail_idx].mmab004) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_mmac4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION ammt300_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION ammt300_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt300_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL ammt300_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmac_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt300_bcl USING g_enterprise,
                                       g_mmaa_m.mmaadocno,g_mmac_d[g_detail_idx].mmac002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt300_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmae_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt300_bcl2 USING g_enterprise,
                                             g_mmaa_m.mmaadocno,g_mmac2_d[g_detail_idx].mmae002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt300_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmad_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt300_bcl3 USING g_enterprise,
                                             g_mmaa_m.mmaadocno,g_mmac3_d[g_detail_idx].mmad002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt300_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "mmab_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt300_bcl4 USING g_enterprise,
                                             g_mmaa_m.mmaadocno,g_mmac4_d[g_detail_idx].mmab002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt300_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.main" ver="20" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmaasite,'',mmaadocdt,mmaadocno,mmaa000,mmaa001,mmaa002,mmaaacti,mmaaunit, 
       mmaastus,mmaa005,mmaa007,mmaa006,mmaa008,mmaa009,mmaa015,mmaa003,mmaa004,mmaa013,mmaa014,mmaa019, 
       '',mmaa016,'',mmaa017,'',mmaa018,'',mmaa010,mmaa011,mmaa012,mmaaud001,mmaaud002,mmaaud003,mmaaud004, 
       mmaaud005,mmaaud006,mmaaud011,mmaaud012,mmaaud013,mmaaud014,mmaaud015,mmaaud016,mmaaud021,mmaaud022, 
       mmaaud023,mmaaud024,mmaaud025,mmaaud026,mmaaud007,mmaaud008,mmaaud009,mmaaud010,mmaaud017,mmaaud018, 
       mmaaud019,mmaaud020,mmaaud027,mmaaud028,mmaaud029,mmaaud030,mmaaownid,'',mmaaowndp,'',mmaacrtid, 
       '',mmaacrtdp,'',mmaacrtdt,mmaamodid,'',mmaamoddt,mmaacnfid,'',mmaacnfdt", 
                      " FROM mmaa_t",
                      " WHERE mmaaent= ? AND mmaadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt300_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.mmaasite,t0.mmaadocdt,t0.mmaadocno,t0.mmaa000,t0.mmaa001,t0.mmaa002, 
       t0.mmaaacti,t0.mmaaunit,t0.mmaastus,t0.mmaa005,t0.mmaa007,t0.mmaa006,t0.mmaa008,t0.mmaa009,t0.mmaa015, 
       t0.mmaa003,t0.mmaa004,t0.mmaa013,t0.mmaa014,t0.mmaa019,t0.mmaa016,t0.mmaa017,t0.mmaa018,t0.mmaa010, 
       t0.mmaa011,t0.mmaa012,t0.mmaaud001,t0.mmaaud002,t0.mmaaud003,t0.mmaaud004,t0.mmaaud005,t0.mmaaud006, 
       t0.mmaaud011,t0.mmaaud012,t0.mmaaud013,t0.mmaaud014,t0.mmaaud015,t0.mmaaud016,t0.mmaaud021,t0.mmaaud022, 
       t0.mmaaud023,t0.mmaaud024,t0.mmaaud025,t0.mmaaud026,t0.mmaaud007,t0.mmaaud008,t0.mmaaud009,t0.mmaaud010, 
       t0.mmaaud017,t0.mmaaud018,t0.mmaaud019,t0.mmaaud020,t0.mmaaud027,t0.mmaaud028,t0.mmaaud029,t0.mmaaud030, 
       t0.mmaaownid,t0.mmaaowndp,t0.mmaacrtid,t0.mmaacrtdp,t0.mmaacrtdt,t0.mmaamodid,t0.mmaamoddt,t0.mmaacnfid, 
       t0.mmaacnfdt,t1.ooefl003 ,t2.ooag011 ,t3.pmaal004 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 , 
       t8.ooag011 ,t9.ooefl003 ,t10.ooag011 ,t11.ooag011",
               " FROM mmaa_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.mmaasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.mmaa019  ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.mmaa016 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.mmaa017  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.mmaa018 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.mmaaownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.mmaaowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.mmaacrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=t0.mmaacrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.mmaamodid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.mmaacnfid  ",
 
               " WHERE t0.mmaaent = '" ||g_enterprise|| "' AND t0.mmaadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt300_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt300 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt300_init()   
 
      #進入選單 Menu (="N")
      CALL ammt300_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt300
      
   END IF 
   
   CLOSE ammt300_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="ammt300.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/amm/ammt300_mask.4gl"
]]>
  </section>
  <section id="ammt300.modify" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt300_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_mmaa_m_t.* = g_mmaa_m.*
   LET g_mmaa_m_o.* = g_mmaa_m.*
   
   IF g_mmaa_m.mmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
   CALL s_transaction_begin()
   
   OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
   
   #檢查是否允許此動作
   IF NOT ammt300_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmaa_m_mask_o.* =  g_mmaa_m.*
   CALL ammt300_mmaa_t_mask()
   LET g_mmaa_m_mask_n.* =  g_mmaa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL ammt300_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmaa_m.mmaamodid = g_user 
LET g_mmaa_m.mmaamoddt = cl_get_current()
LET g_mmaa_m.mmaamodid_desc = cl_get_username(g_mmaa_m.mmaamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL ammt300_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE mmaa_t SET (mmaamodid,mmaamoddt) = (g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt)
          WHERE mmaaent = g_enterprise AND mmaadocno = g_mmaadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmaa_m.* = g_mmaa_m_t.*
         CALL ammt300_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_mmaa_m.mmaadocno != g_mmaadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmac_t SET mmacdocno = g_mmaa_m.mmaadocno
 
          WHERE mmacent = g_enterprise AND mmacdocno = g_mmaadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmac_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmac_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE mmae_t
            SET mmaedocno = g_mmaa_m.mmaadocno
 
          WHERE mmaeent = g_enterprise AND
                mmaedocno = g_mmaadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmae_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmae_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE mmad_t
            SET mmaddocno = g_mmaa_m.mmaadocno
 
          WHERE mmadent = g_enterprise AND
                mmaddocno = g_mmaadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmad_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmad_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE mmab_t
            SET mmabdocno = g_mmaa_m.mmaadocno
 
          WHERE mmabent = g_enterprise AND
                mmabdocno = g_mmaadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmab_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmab_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt300_set_act_visible()   
   CALL ammt300_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " mmaaent = '" ||g_enterprise|| "' AND",
                      " mmaadocno = '", g_mmaa_m.mmaadocno, "' "
 
   #填到對應位置
   CALL ammt300_browser_fill("")
 
   CLOSE ammt300_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt300_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="ammt300.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION ammt300_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL ammt300_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_mmaa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt300.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="ammt300.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammt300.query" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt300_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmac_d.clear()
   CALL g_mmac2_d.clear()
   CALL g_mmac3_d.clear()
   CALL g_mmac4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL ammt300_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt300_browser_fill("")
      CALL ammt300_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt300_filter_show('mmaasite')
   CALL ammt300_filter_show('mmaadocno')
   CALL ammt300_filter_show('mmaa000')
   CALL ammt300_filter_show('mmaa001')
   CALL ammt300_filter_show('mmaa008')
   CALL ammt300_filter_show('mmaa004')
   CALL ammt300_filter_show('mmaa015')
   CALL ammt300_filter_show('mmaa014')
   CALL ammt300_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL ammt300_fetch("F") 
      #顯示單身筆數
      CALL ammt300_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.reproduce" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt300_reproduce()
   DEFINE l_newno     LIKE mmaa_t.mmaadocno 
   DEFINE l_oldno     LIKE mmaa_t.mmaadocno 
 
   DEFINE l_master    RECORD LIKE mmaa_t.*
   DEFINE l_detail    RECORD LIKE mmac_t.*
   DEFINE l_detail2    RECORD LIKE mmae_t.*
 
   DEFINE l_detail3    RECORD LIKE mmad_t.*
 
   DEFINE l_detail4    RECORD LIKE mmab_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_mmaa_m.mmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
    
   LET g_mmaa_m.mmaadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_mmaa_m.mmaaownid = g_user
      LET g_mmaa_m.mmaaowndp = g_dept
      LET g_mmaa_m.mmaacrtid = g_user
      LET g_mmaa_m.mmaacrtdp = g_dept 
      LET g_mmaa_m.mmaacrtdt = cl_get_current()
      LET g_mmaa_m.mmaamodid = g_user
      LET g_mmaa_m.mmaamoddt = cl_get_current()
      LET g_mmaa_m.mmaastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaa_m.mmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL ammt300_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_mmaa_m.* TO NULL
      INITIALIZE g_mmac_d TO NULL
      INITIALIZE g_mmac2_d TO NULL
      INITIALIZE g_mmac3_d TO NULL
      INITIALIZE g_mmac4_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL ammt300_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt300_set_act_visible()   
   CALL ammt300_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmaadocno_t = g_mmaa_m.mmaadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmaaent = '" ||g_enterprise|| "' AND",
                      " mmaadocno = '", g_mmaa_m.mmaadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt300_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL ammt300_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL ammt300_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION ammt300_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION ammt300_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION ammt300_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION ammt300_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt300_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("mmaadocno,mmaadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmaadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt300_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt300_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmaadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("mmaadocno,mmaadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt300_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammt300.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION ammt300_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmaa_m.mmaadocno
   LET g_pk_array[1].column = 'mmaadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt300.show" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt300_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt300_b_fill() #單身填充
      CALL ammt300_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL ammt300_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_mmaa_m_mask_o.* =  g_mmaa_m.*
   CALL ammt300_mmaa_t_mask()
   LET g_mmaa_m_mask_n.* =  g_mmaa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaasite_desc,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
       g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005, 
       g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003, 
       g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016, 
       g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018,g_mmaa_m.mmaa018_desc, 
       g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
       g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
       g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
       g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
       g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
       g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
       g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaownid_desc,g_mmaa_m.mmaaowndp, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdp_desc, 
       g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamodid_desc,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
       g_mmaa_m.mmaacnfid_desc,g_mmaa_m.mmaacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaa_m.mmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmac_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmac2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmac3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmac4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt300_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.signature" ver="4" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="ammt300.state_change" ver="20" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION ammt300_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmaa_m.mmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN ammt300_cl USING g_enterprise,g_mmaa_m.mmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
 
   #檢查是否允許此動作
   IF NOT ammt300_action_chk() THEN
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaasite_desc,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000, 
       g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus,g_mmaa_m.mmaa005, 
       g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015,g_mmaa_m.mmaa003, 
       g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016, 
       g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018,g_mmaa_m.mmaa018_desc, 
       g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003, 
       g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012, 
       g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021, 
       g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026, 
       g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017, 
       g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028, 
       g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid,g_mmaa_m.mmaaownid_desc,g_mmaa_m.mmaaowndp, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdp_desc, 
       g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamodid_desc,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid, 
       g_mmaa_m.mmaacnfid_desc,g_mmaa_m.mmaacnfdt
 
   CASE g_mmaa_m.mmaastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmaa_m.mmaastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_mmaa_m.mmaastus = lc_state OR cl_null(lc_state) THEN
      CLOSE ammt300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_mmaa_m.mmaamodid = g_user
   LET g_mmaa_m.mmaamoddt = cl_get_current()
   LET g_mmaa_m.mmaastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE mmaa_t 
      SET (mmaastus,mmaamodid,mmaamoddt) 
        = (g_mmaa_m.mmaastus,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt)     
    WHERE mmaaent = g_enterprise AND mmaadocno = g_mmaa_m.mmaadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
          g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
          g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
          g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
          g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
          g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
          g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
          g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
          g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
          g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
          g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
          g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
          g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
          g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
          g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
          g_mmaa_m.mmaacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_mmaa_m.mmaasite,g_mmaa_m.mmaasite_desc,g_mmaa_m.mmaadocdt,g_mmaa_m.mmaadocno, 
          g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit,g_mmaa_m.mmaastus, 
          g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009,g_mmaa_m.mmaa015, 
          g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019,g_mmaa_m.mmaa019_desc, 
          g_mmaa_m.mmaa016,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018, 
          g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012,g_mmaa_m.mmaaud001, 
          g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005,g_mmaa_m.mmaaud006, 
          g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014,g_mmaa_m.mmaaud015, 
          g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023,g_mmaa_m.mmaaud024, 
          g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008,g_mmaa_m.mmaaud009, 
          g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019,g_mmaa_m.mmaaud020, 
          g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030,g_mmaa_m.mmaaownid, 
          g_mmaa_m.mmaaownid_desc,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtid_desc, 
          g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaacrtdt,g_mmaa_m.mmaamodid,g_mmaa_m.mmaamodid_desc, 
          g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfid_desc,g_mmaa_m.mmaacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE ammt300_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt300_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt300.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ammt300_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="ammt300.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt300_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmaadocno = g_mmaa_m.mmaadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.ui_detailshow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt300_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammt300.ui_dialog" ver="36" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt300_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt300_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_mmaa_m.* TO NULL
         CALL g_mmac_d.clear()
         CALL g_mmac2_d.clear()
         CALL g_mmac3_d.clear()
         CALL g_mmac4_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL ammt300_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt300_fetch('') # reload data
               LET l_ac = 1
               CALL ammt300_ui_detailshow() #Setting the current row 
         
               CALL ammt300_idx_chk()
               #NEXT FIELD mmac002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_mmac_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt300_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL ammt300_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_mmac2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL ammt300_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmac3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL ammt300_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmac4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL ammt300_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL ammt300_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt300_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt300_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt300_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt300_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL ammt300_set_act_visible()   
            CALL ammt300_set_act_no_visible()
            IF NOT (g_mmaa_m.mmaadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " mmaaent = '" ||g_enterprise|| "' AND",
                                  " mmaadocno = '", g_mmaa_m.mmaadocno, "' "
 
               #填到對應位置
               CALL ammt300_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmac_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmae_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmad_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmab_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL ammt300_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmac_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmae_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmad_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmab_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL ammt300_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL ammt300_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt300_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL ammt300_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt300_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL ammt300_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt300_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL ammt300_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt300_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL ammt300_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt300_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL ammt300_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt300_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmac_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_mmac2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_mmac3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_mmac4_d)
                  LET g_export_id[4]   = "s_detail4"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmac002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt300_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt300_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION demo
            LET g_action_choice="demo"
            IF cl_auth_chk_act("demo") THEN
               
               #add-point:ON ACTION demo
               {<point name="menu.demo" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt300_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt300_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/amm/ammt300_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL ammt300_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt300_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_mmaa001
            LET g_action_choice="update_mmaa001"
            IF cl_auth_chk_act("update_mmaa001") THEN
               
               #add-point:ON ACTION update_mmaa001
               {<point name="menu.update_mmaa001" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION adress
            LET g_action_choice="adress"
            IF cl_auth_chk_act("adress") THEN
               
               #add-point:ON ACTION adress
               {<point name="menu.adress" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL ammt300_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt300_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt300_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmaa_m.mmaadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammt300.ui_headershow" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt300_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_mmaa_m.mmaadocno = g_browser[g_current_idx].b_mmaadocno   
 
   EXECUTE ammt300_master_referesh USING g_mmaa_m.mmaadocno INTO g_mmaa_m.mmaasite,g_mmaa_m.mmaadocdt, 
       g_mmaa_m.mmaadocno,g_mmaa_m.mmaa000,g_mmaa_m.mmaa001,g_mmaa_m.mmaa002,g_mmaa_m.mmaaacti,g_mmaa_m.mmaaunit, 
       g_mmaa_m.mmaastus,g_mmaa_m.mmaa005,g_mmaa_m.mmaa007,g_mmaa_m.mmaa006,g_mmaa_m.mmaa008,g_mmaa_m.mmaa009, 
       g_mmaa_m.mmaa015,g_mmaa_m.mmaa003,g_mmaa_m.mmaa004,g_mmaa_m.mmaa013,g_mmaa_m.mmaa014,g_mmaa_m.mmaa019, 
       g_mmaa_m.mmaa016,g_mmaa_m.mmaa017,g_mmaa_m.mmaa018,g_mmaa_m.mmaa010,g_mmaa_m.mmaa011,g_mmaa_m.mmaa012, 
       g_mmaa_m.mmaaud001,g_mmaa_m.mmaaud002,g_mmaa_m.mmaaud003,g_mmaa_m.mmaaud004,g_mmaa_m.mmaaud005, 
       g_mmaa_m.mmaaud006,g_mmaa_m.mmaaud011,g_mmaa_m.mmaaud012,g_mmaa_m.mmaaud013,g_mmaa_m.mmaaud014, 
       g_mmaa_m.mmaaud015,g_mmaa_m.mmaaud016,g_mmaa_m.mmaaud021,g_mmaa_m.mmaaud022,g_mmaa_m.mmaaud023, 
       g_mmaa_m.mmaaud024,g_mmaa_m.mmaaud025,g_mmaa_m.mmaaud026,g_mmaa_m.mmaaud007,g_mmaa_m.mmaaud008, 
       g_mmaa_m.mmaaud009,g_mmaa_m.mmaaud010,g_mmaa_m.mmaaud017,g_mmaa_m.mmaaud018,g_mmaa_m.mmaaud019, 
       g_mmaa_m.mmaaud020,g_mmaa_m.mmaaud027,g_mmaa_m.mmaaud028,g_mmaa_m.mmaaud029,g_mmaa_m.mmaaud030, 
       g_mmaa_m.mmaaownid,g_mmaa_m.mmaaowndp,g_mmaa_m.mmaacrtid,g_mmaa_m.mmaacrtdp,g_mmaa_m.mmaacrtdt, 
       g_mmaa_m.mmaamodid,g_mmaa_m.mmaamoddt,g_mmaa_m.mmaacnfid,g_mmaa_m.mmaacnfdt,g_mmaa_m.mmaasite_desc, 
       g_mmaa_m.mmaa019_desc,g_mmaa_m.mmaa016_desc,g_mmaa_m.mmaa017_desc,g_mmaa_m.mmaa018_desc,g_mmaa_m.mmaaownid_desc, 
       g_mmaa_m.mmaaowndp_desc,g_mmaa_m.mmaacrtid_desc,g_mmaa_m.mmaacrtdp_desc,g_mmaa_m.mmaamodid_desc, 
       g_mmaa_m.mmaacnfid_desc
   CALL ammt300_mmaa_t_mask()
   CALL ammt300_show()
      
END FUNCTION
]]>
  </section>
  <section id="ammt300.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt300_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt300_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt300_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt300_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt300_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammt300.update_b" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt300_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL ammt300_mmac_t_mask_restore('restore_mask_o')
               
      UPDATE mmac_t 
         SET (mmacdocno,
              mmac002
              ,mmac001,mmac003,mmacacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmac_d[g_detail_idx].mmac001,g_mmac_d[g_detail_idx].mmac003,g_mmac_d[g_detail_idx].mmacacti)  

         WHERE mmacent = g_enterprise AND mmacdocno = ps_keys_bak[1] AND mmac002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmac_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmac_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt300_mmac_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmae_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt300_mmae_t_mask_restore('restore_mask_o')
               
      UPDATE mmae_t 
         SET (mmaedocno,
              mmae002
              ,mmae001,mmaeacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmac2_d[g_detail_idx].mmae001,g_mmac2_d[g_detail_idx].mmaeacti) 
         WHERE mmaeent = g_enterprise AND mmaedocno = ps_keys_bak[1] AND mmae002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmae_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmae_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt300_mmae_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmad_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt300_mmad_t_mask_restore('restore_mask_o')
               
      UPDATE mmad_t 
         SET (mmaddocno,
              mmad002
              ,mmad001,mmadacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmac3_d[g_detail_idx].mmad001,g_mmac3_d[g_detail_idx].mmadacti) 
         WHERE mmadent = g_enterprise AND mmaddocno = ps_keys_bak[1] AND mmad002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmad_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmad_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt300_mmad_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt300_mmab_t_mask_restore('restore_mask_o')
               
      UPDATE mmab_t 
         SET (mmabdocno,
              mmab002
              ,mmab001,mmab003,mmab004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmac4_d[g_detail_idx].mmab001,g_mmac4_d[g_detail_idx].mmab003,g_mmac4_d[g_detail_idx].mmab004)  

         WHERE mmabent = g_enterprise AND mmabdocno = ps_keys_bak[1] AND mmab002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmab_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmab_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt300_mmab_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
