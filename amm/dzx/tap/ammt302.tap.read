<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammt302" std_prog="ammt302" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.mmcx001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcx001  #顯示到畫面上

            NEXT FIELD mmcx001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcnfid  #顯示到畫面上

            NEXT FIELD mmcxcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcrtdp  #顯示到畫面上

            NEXT FIELD mmcxcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcrtid  #顯示到畫面上

            NEXT FIELD mmcxcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcxdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxdocno  #顯示到畫面上

            NEXT FIELD mmcxdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxmodid  #顯示到畫面上

            NEXT FIELD mmcxmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxowndp  #顯示到畫面上

            NEXT FIELD mmcxowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxownid  #顯示到畫面上

            NEXT FIELD mmcxownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmcxunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxunit  #顯示到畫面上

            NEXT FIELD mmcxunit                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmcy001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy001  #顯示到畫面上

            NEXT FIELD mmcy001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmcy005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2055' 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy005  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmcy005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmcysite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcysite  #顯示到畫面上

            NEXT FIELD mmcysite                     #返回原欄位

]]>
  </point>
  <point name="input.a.mmcx001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mmcx_m.mmcx001_desc = ''
            DISPLAY BY NAME g_mmcx_m.mmcx001_desc
            IF NOT cl_null(g_mmcx_m.mmcx001) THEN
               IF NOT ammt302_mmcx001_chk(g_mmcx_m.mmcx001) THEN
                  LET g_mmcx_m.mmcx001 = g_mmcx_m_t.mmcx001
                  CALL ammt302_mmcx001_ref()
                  NEXT FIELD mmcx001
               END IF
            END IF
            CALL ammt302_mmcx001_ref()

]]>
  </point>
  <point name="input.a.mmcxdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
           IF NOT cl_null(g_mmcx_m.mmcxdocno) AND p_cmd = 'a' THEN
               IF NOT ammt302_chk_mmcxdocno() THEN
                  LET g_mmcx_m.mmcxdocno = g_mmcx_m_t.mmcxdocno
                  NEXT FIELD CURRENT
               END IF
            END IF
           IF  NOT cl_null(g_mmcx_m.mmcxdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcx_t WHERE "||"mmcxent = '" ||g_enterprise|| "' AND "||"mmcxdocno = '"||g_mmcx_m.mmcxdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.mmcxunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           
]]>
  </point>
  <point name="input.a.page1.mmcy001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mmcy_d[l_ac].mmcy001_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcy001) THEN
               IF NOT ammt302_mmcy001_chk(g_mmcy_d[l_ac].mmcy001) THEN
                  LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001
                  LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                  NEXT FIELD mmcy001
               END IF
           
            
               IF  g_mmcx_m.mmcxdocno IS NOT NULL AND g_mmcy_d[g_detail_idx].mmcy001 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t OR g_mmcy_d[g_detail_idx].mmcy001 != g_mmcy_d_t.mmcy001)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcy_t WHERE "||"mmcyent = '" ||g_enterprise|| "' AND "||"mmcydocno = '"||g_mmcx_m.mmcxdocno ||"' AND "|| "mmcy001 = '"||g_mmcy_d[g_detail_idx].mmcy001 ||"'",'std-00004',0) THEN 
                        LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001
                        LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               IF  l_cmd = 'a' OR  ( l_cmd = 'u' AND g_mmcy_d[l_ac].mmcy001 !=g_mmcy_d_t.mmcy001 ) THEN
                  DELETE FROM mmcz_t WHERE mmczent = g_enterprise AND mmczdocno = g_mmcx_m.mmcxdocno AND mmcz001 = t_mmcy001
                  IF NOT ammt302_mmcy001_other() THEN
                      LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001
                      IF l_cmd = 'u' THEN
                         IF NOT ammt302_mmcy001_other()  THEN
                            NEXT FIELD mmcy001   
                         END IF
                      END IF
                      LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                      NEXT FIELD mmcy001     
                  END IF
               END IF
               LET t_mmcy001 = g_mmcy_d[l_ac].mmcy001
               LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
               DISPLAY BY NAME g_mmcy_d[l_ac].mmcy001_desc
               CALL ammt302_mmcy003_ref()
            END IF
      
]]>
  </point>
  <point name="input.a.page1.mmcysite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       
            LET g_mmcy_d[l_ac].mmcysite_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcysite) THEN
     
                INITIALIZE g_chkparam.* TO NULL
                LET g_errshow = '1'
                LET g_chkparam.arg1 = g_mmcy_d[l_ac].mmcysite
                LET g_chkparam.arg2 = '2'
                LET g_chkparam.arg3 = g_mmcx_m.mmcxsite
                IF NOT cl_chk_exist("v_ooed004") THEN
                   LET g_mmcy_d[l_ac].mmcysite = g_mmcy_d_t.mmcysite
                   LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
                   NEXT FIELD CURRENT
                END IF
            END IF
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)]]>
  </point>
  <point name="input.a.page2.mmcz001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmcx_m.mmcxdocno IS NOT NULL AND g_mmcy2_d[g_detail_idx].mmcz001 IS NOT NULL AND g_mmcy2_d[g_detail_idx].mmcz002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t OR g_mmcy2_d[g_detail_idx].mmcz001 != g_mmcy2_d_t.mmcz001 OR g_mmcy2_d[g_detail_idx].mmcz002 != g_mmcy2_d_t.mmcz002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcz_t WHERE "||"mmczent = '" ||g_enterprise|| "' AND "||"mmczdocno = '"||g_mmcx_m.mmcxdocno ||"' AND "|| "mmcz001 = '"||g_mmcy2_d[g_detail_idx].mmcz001 ||"' AND "|| "mmcz002 = '"||g_mmcy2_d[g_detail_idx].mmcz002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmcz002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmcx_m.mmcxdocno IS NOT NULL AND g_mmcy2_d[g_detail_idx].mmcz001 IS NOT NULL AND g_mmcy2_d[g_detail_idx].mmcz002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t OR g_mmcy2_d[g_detail_idx].mmcz001 != g_mmcy2_d_t.mmcz001 OR g_mmcy2_d[g_detail_idx].mmcz002 != g_mmcy2_d_t.mmcz002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcz_t WHERE "||"mmczent = '" ||g_enterprise|| "' AND "||"mmczdocno = '"||g_mmcx_m.mmcxdocno ||"' AND "|| "mmcz001 = '"||g_mmcy2_d[g_detail_idx].mmcz001 ||"' AND "|| "mmcz002 = '"||g_mmcy2_d[g_detail_idx].mmcz002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.mmcx001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcx001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '2055' 

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmcx_m.mmcx001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcx001 TO mmcx001              #顯示到畫面上
            CALL  ammt302_mmcx001_ref()
            NEXT FIELD mmcx001                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmcxdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcxdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = 'ammt302' #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmcx_m.mmcxdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcxdocno TO mmcxdocno              #顯示到畫面上

            NEXT FIELD mmcxdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmcxunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.default1 = g_mmcx_m.mmcxunit             #給予default值

            #給予arg

            CALL q_ooed004()                             #呼叫開窗

            LET g_mmcx_m.mmcxunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcxunit TO mmcxunit              #顯示到畫面上

            NEXT FIELD mmcxunit                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmcy001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcy001             #給予default值

            #給予arg

            CALL q_mmaf001_1()                                #呼叫開窗

            LET g_mmcy_d[l_ac].mmcy001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcy_d[l_ac].mmcy001 TO mmcy001              #顯示到畫面上
            LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
            NEXT FIELD mmcy001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmcy005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcy005             #給予default值
            LET g_qryparam.default2 = "" #g_mmcy_d[l_ac].oocq010 #參考欄位七

            #給予arg
            LET g_qryparam.arg1 = '2055' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmcy_d[l_ac].mmcy005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmcy_d[l_ac].oocq010 = g_qryparam.return2 #參考欄位七

            DISPLAY g_mmcy_d[l_ac].mmcy005 TO mmcy005              #顯示到畫面上
            #DISPLAY g_mmcy_d[l_ac].oocq010 TO oocq010 #參考欄位七
            CALL ammt302_mmcy005_ref()
            NEXT FIELD mmcy005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmcysite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcysite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmcx_m.mmcxunit
            LET g_qryparam.arg2 = '2'

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmcy_d[l_ac].mmcysite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcy_d[l_ac].mmcysite TO mmcysite              #顯示到畫面上
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite) 
            NEXT FIELD mmcysite                          #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite) 
           
          

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy001
            CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
            LET g_mmcy_d[l_ac].mmcy001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcy_d[l_ac].mmcy001_desc

            CALL ammt302_mmcy002_ref()   
            CAll ammt302_mmcy003_ref()
            CALL ammt302_mmcy004_ref()
            CALL ammt302_mmcy005_ref()
            CALL ammt302_mmcy006_ref()]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             CALL ammt302_mmcxsite_ref()
             CALL ammt302_mmcx001_ref()
             
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcx_m.mmcxcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmcx_m.mmcxcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcx_m.mmcxcnfid_desc
]]>
  </point>
  <point name="function.ammt302_mmcysite_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcysite_ref(p_mmcysite)
#                  RETURNING l_desc
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcysite_ref(p_mmcysite)
 DEFINE p_mmcysite LIKE mmcy_t.mmcysite
 DEFINE l_desc    LIKE type_t.chr80
 
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_mmcysite
    CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET l_desc = '', g_rtn_fields[1] , ''
    RETURN l_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_chk_mmcxdocno" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_chk_mmcxdocno(p_mmcxdocno)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_chk_mmcxdocno()
   
   IF NOT s_aooi200_chk_slip(g_site,'',g_mmcx_m.mmcxdocno,g_prog) THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcxsite_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcxsite_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcxsite_ref()
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcx_m.mmcxsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcx_m.mmcxsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcx_m.mmcxsite_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcxunit_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcxunit_chk(p_mmcxunit)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcxunit_chk(p_mmcxunit)
DEFINE l_cnt    LIKE type_t.num5
DEFINE l_cnt1    LIKE type_t.num5
DEFINE p_mmcxunit LIKE mmcx_t.mmcxunit
DEFINE l_sql     STRING

   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL

   SELECT COUNT(*) INTO  l_cnt FROM ooea_t
    WHERE ooeaent =g_enterprise AND ooea001 = p_mmcxunit 
   
   IF l_cnt = 0 THEN
      CALL cl_err('','aoo-00163',1)
      RETURN FALSE
   END IF
   
   LET l_sql="SELECT COUNT(*)  FROM ooed_t WHERE ooed004 ='",p_mmcxunit,"' AND ooed001='2' ",
             "   AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t ",
             "                     WHERE ooed001 = '2' AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "                     START WITH ooed005='",g_site,"' AND ooed001 = '2' ",
             "                      AND ((ooed006 <='",g_today,"' AND  ooed007 >='",g_today,"') or ooed007 is null)",
             "                     CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2') ", 
             "          UNION ",
             "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"'))"
   PREPARE l_sql_ooea_pre1 FROM l_sql
   EXECUTE l_sql_ooea_pre1 INTO l_cnt
   IF l_cnt <= 0 THEN
      CALL cl_err('','amm-00176',1)
      RETURN FALSE
   ELSE
      LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooea_t WHERE ooea001=ooed004 AND ooed004 ='",p_mmcxunit,"' AND ooed001='2' AND ooeastus='Y' ",
             "   AND ((ooed006<='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null)",
             "   AND ooea001 IN ((select DISTINCT ooed004 FROM ooed_t ",
             "                     WHERE ooed001 = '2' AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "                    START WITH ooed005='",g_site,"'AND ooed001 = '2' ",
             "                      AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null)",
             "             CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2') ",
             "          UNION ",
             "         (SELECT ooea001 FROM ooea_t WHERE ooea001='",g_site,"'))"
      PREPARE l_sql_ooea_pre2 FROM l_sql
      EXECUTE l_sql_ooea_pre2 INTO l_cnt1
      IF l_cnt1 <= 0 THEN
         CALL cl_err('','aoo-00089',1)
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcx001_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcx001_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcx001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcx_m.mmcx001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcx_m.mmcx001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcx_m.mmcx001_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcx001_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcx001_chk(p_mmcx001)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcx001_chk(p_mmcx001)
DEFINE p_mmcx001 LIKE mmcx_t.mmcx001
DEFINE l_oocqstus    LIKE oocq_t.oocqstus

    SELECT oocqstus INTO l_oocqstus FROM oocq_t
    WHERE oocqent =  g_enterprise AND oocq001 = '2055' AND oocq002 = p_mmcx001
    
   IF STATUS = 100 OR cl_null(l_oocqstus) THEN
      CALL cl_err('','amm-00040',1)
      RETURN FALSE
   ELSE
      IF l_oocqstus = 'N' THEN
          CALL cl_err('','amm-00041',1)
          RETURN FALSE
      END IF
   END IF
   RETURN TRUE
  
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy001_chk" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcy001_chk(p_mmcy001)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_chk(p_mmcy001)
DEFINE p_mmcy001 LIKE mmcy_t.mmcy001
DEFINE l_stus    LIKE mmaf_t.mmafstus
DEFINE l_mmag004 LIKE mmag_t.mmag004
DEFINE l_oocq004 LIKE oocq_t.oocq004
DEFINE l_n       LIKE type_t.num5

   SELECT mmafstus INTO l_stus FROM mmaf_t
    WHERE mmafent = g_enterprise AND mmaf001 = p_mmcy001
   
   IF STATUS = 100 OR cl_null(l_stus) THEN
      CALL cl_err('','amm-00180',1)
      RETURN FALSE
   ELSE
      IF l_stus <> 'Y' THEN
         CALL cl_err('','amm-00181',1)
         RETURN FALSE
      END IF
   END IF
   #根据会员去抓取会员类型，如果抓取不到类型报错返回
   SELECT mmag004 INTO l_mmag004 FROM mmag_t 
    WHERE mmagent = g_enterprise AND mmag001 = p_mmcy001 AND mmag003 = '2025' 
   IF status = 100 OR cl_null(l_mmag004) THEN
      CALL cl_err('','amm-00185',1)
      RETURN FALSE
   END IF
   
   #根据会员类型抓取升降等策略编号。如果抓取不到。报错返回
   SELECT oocq004 INTO l_oocq004 FROM oocq_t 
    WHERE oocqent = g_enterprise AND oocq001 = '2025' AND oocq002 = l_mmag004
   IF status = 100 OR cl_null(l_oocq004) THEN
      CALL cl_err('','amm-00186',1)
      RETURN FALSE
   END IF 
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy001_other" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcy001_other()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_other()
DEFINE l_success    LIKE type_t.num5

    IF cl_null(g_mmcy_d[l_ac].mmcy001) THEN
       RETURN FALSE
    END IF
    
    CALL s_ammt302_chk_mmcv(g_mmcx_m.mmcxdocno,g_mmcy_d[l_ac].mmcy001,g_mmcx_m.mmcx002,'1') RETURNING l_success,g_mmcy_d[l_ac].mmcy003
    IF NOT l_success THEN
       CALL ammt302_detail_clear()
       RETURN FALSE
    END IF
    CALL ammt302_mmcy003_ref()

    #查询原会员等级
    SELECT DISTINCT mmag004 INTO g_mmcy_d[l_ac].mmcy002 FROM mmag_t
     WHERE mmagent = g_enterprise AND mmag001 = g_mmcy_d[l_ac].mmcy001 and mmag003 = '2024'
    CALL ammt302_mmcy002_ref()
    
    #会员类型
    SELECT DISTINCT mmag004 INTO g_mmcy_d[l_ac].mmcy004 FROM mmag_t
     WHERE mmagent = g_enterprise AND mmag001 = g_mmcy_d[l_ac].mmcy001 and mmag003 = '2025'
    CALL ammt302_mmcy004_ref()
   
    #升等策略
    SELECT oocq004 INTO g_mmcy_d[l_ac].mmcy006 FROM oocq_t 
     WHERE oocqent = g_enterprise AND oocq001 = '2025' AND oocq002 = g_mmcy_d[l_ac].mmcy004 
     CALL ammt302_mmcy006_ref()
    
    #策略版本
    SELECT mmcu002 INTO g_mmcy_d[l_ac].mmcy007 FROM mmcu_t
     WHERE mmcuent =  g_enterprise AND mmcu001 = g_mmcy_d[l_ac].mmcy006   
   
    DISPLAY BY NAME g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,
                    g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007
    RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy002_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy002_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy004_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2025' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy004_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy006_ref" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy006
   CALL ap_ref_array2(g_ref_fields,"SELECT mmcul004 FROM mmcul_t WHERE mmculent='"||g_enterprise||"' AND mmcul001=? AND mmcul002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy006_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy003_ref" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy003_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy005_ref" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy005_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy005
    CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_mmcy_d[l_ac].mmcy005_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_mmcy_d[l_ac].mmcy005_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt302_b2_reflesh" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_b2_reflesh()
    CALL g_mmcy2_d.clear()
     LET g_sql = "SELECT  UNIQUE mmcz001,mmcz002,mmcz003,mmczunit,mmczsite FROM mmcz_t",   
                  " INNER JOIN mmcx_t ON mmcxdocno = mmczdocno ",
 
                  "",
                  
                  " WHERE mmczent=? AND mmczdocno=?"   

      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      
      LET g_sql = g_sql, " ORDER BY mmcz_t.mmcz001,mmcz_t.mmcz002"
      
    
      PREPARE ammt302_pb_2 FROM g_sql
      DECLARE b_fill_cs_2 CURSOR FOR ammt302_pb_2
      
      LET l_ac = 1
      
      OPEN b_fill_cs_2 USING g_enterprise,g_mmcx_m.mmcxdocno
 
                                               
      FOREACH b_fill_cs2 INTO g_mmcy2_d[l_ac].mmcz001,g_mmcy2_d[l_ac].mmcz002,g_mmcy2_d[l_ac].mmcz003, 
          g_mmcy2_d[l_ac].mmczunit,g_mmcy2_d[l_ac].mmczsite
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF

      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
      
      DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE DISPLAY
            EXIT DISPLAY  
         
      END DISPLAY
 
END FUNCTION]]>
  </point>
  <point name="function.ammt302_detail_clear" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_detail_clear()
   LET g_mmcy_d[l_ac].mmcy002 = ''
   LET g_mmcy_d[l_ac].mmcy002_desc = '' 
   LET g_mmcy_d[l_ac].mmcy003 = ''
   LET g_mmcy_d[l_ac].mmcy003_desc = ''
   LET g_mmcy_d[l_ac].mmcy004 = ''
   LET g_mmcy_d[l_ac].mmcy004_desc = '' 
   LET g_mmcy_d[l_ac].mmcy006 = ''
   LET g_mmcy_d[l_ac].mmcy006_desc = '' 
   LET g_mmcy_d[l_ac].mmcy007 = '' 
END FUNCTION]]>
  </point>
  <point name="function.ammt302_mmcy001_ref" order="16" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_ref(p_mmcy001)
DEFINE p_mmcy001 LIKE mmcy_t.mmcy001
DEFINE l_desc    LIKE type_t.chr80

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_mmcy001
   CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
   LET l_desc = '', g_rtn_fields[1] , ''
   RETURN l_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET g_mmcy2_d[l_ac].mmcz001 = g_mmcy_d[l_ac].mmcy001
         
         LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
         LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
         CALL ammt302_mmcy002_ref()
         CAll ammt302_mmcy003_ref()
         CALL ammt302_mmcy004_ref()
         CALL ammt302_mmcy005_ref()
         CALL ammt302_mmcy006_ref()]]>
  </point>
  <point name="construct.c.mmcxsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxsite  #顯示到畫面上

            NEXT FIELD mmcxsite                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmcy002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2024'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy002  #顯示到畫面上

            NEXT FIELD mmcy002                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.mmcy003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2024'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy003  #顯示到畫面上

            NEXT FIELD mmcy003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.mmcy004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2025'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy004  #顯示到畫面上

            NEXT FIELD mmcy004                    #返回原欄位]]>
  </point>
  <point name="construct.c.page1.mmcy006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcu001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy006  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmcy006                    #返回原欄位
]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_mmcx_m.mmcxstus = 'Y' OR g_mmcx_m.mmcxstus  = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_assign_no    LIKE type_t.chr1]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    CALL cl_set_combo_scc('mmcz002','6532')
    
    LET g_ooef004 = ''
    LET g_ooef005 = ''
    SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
    FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      CALL cl_err(g_site,'art-00007',1)
   END IF 
   IF cl_null(g_ooef005) THEN
      CALL cl_err(g_site,'art-00008',1)
   END IF  
   CALL s_ammt302_drop_mmcztmp()
   CALL s_ammt302_create_mmcztmp()]]>
  </point>
  <point name="input.a.mmcx002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcx_m.mmcx002) THEN
               IF g_mmcx_m.mmcx002 > g_today THEN
                  CALL cl_err('','amm-00187',1) 
                  LET g_mmcx_m.mmcx002 = g_mmcx_m_t.mmcx002
                  NEXT FIELD mmcx002
               END IF
            END IF]]>
  </point>
  <point name="input.a.mmcxsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET  g_mmcx_m.mmcxsite_desc = ' '
            DISPLAY BY NAME  g_mmcx_m.mmcxsite_desc
            IF NOT cl_null( g_mmcx_m.mmcxsite) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_mmcx_m.mmcxsite
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_site
               IF NOT cl_chk_exist("v_ooed004") THEN
                  LET g_mmcx_m.mmcxsite = g_mmcx_m_t.mmcxsite
                  CALL ammt302_mmcxsite_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt302_mmcxsite_ref()
            CALL ammt302_set_entry(p_cmd)
            CALL ammt302_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.page1.mmcy002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
]]>
  </point>
  <point name="input.a.page1.mmcy003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcy_d[l_ac].mmcy003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcy_d[l_ac].mmcy003_desc
]]>
  </point>
  <point name="input.a.page1.mmcy004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
]]>
  </point>
  <point name="input.a.page1.mmcy005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mmcy_d[l_ac].mmcy005_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcy005) THEN
               IF NOT s_azzi650_chk_exist('2055',g_mmcy_d[l_ac].mmcy005) THEN
                  LET g_mmcy_d[l_ac].mmcy005 =g_mmcy_d_t.mmcy005
                  CALL ammt302_mmcy005_ref()
                  NEXT FIELD CURRENT
               ELSE
                  CALL ammt302_mmcy005_ref()
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.mmcy006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           
]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT s_ammt302_ins_mmcz() THEN
                   CALL cl_err('INSERT',"std-00006",1)
                   INITIALIZE g_mmcy_d[l_ac].* TO NULL
                   CALL s_transaction_end('N','0')
                   CANCEL INSERT
               END IF  ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL ammt302_b2_reflesh() ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               DELETE FROM mmcz_t
                WHERE mmczent =g_enterprise AND mmczdocno = g_mmcx_m.mmcxdocno AND mmcz001 = g_mmcy_d_t.mmcy001
               IF SQLCA.sqlcode THEN
                  CALL cl_err("del mmcz_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mmcy_d[l_ac].mmcysite = g_mmcx_m.mmcxsite
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
            LET g_mmcy_d[l_ac].mmcyunit = g_mmcx_m.mmcxunit ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET t_mmcy001 = g_mmcy_d[l_ac].mmcy001]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mmcy2_d[l_ac].mmczunit = g_mmcx_m.mmcxunit
            LET g_mmcy2_d[l_ac].mmczsite = g_mmcx_m.mmcxsite]]>
  </point>
  <point name="input.c.mmcxsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcxsite       #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                   #呼叫開窗

            LET g_mmcx_m.mmcxsite = g_qryparam.return1              
          
            DISPLAY g_mmcx_m.mmcxsite  TO mmcxsite              #顯示到畫面上
            CALL ammt302_mmcxsite_ref()
            NEXT FIELD mmcxsite                                 #返回原欄位]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_flag          LIKE type_t.num5
   DEFINE t_mmcy001       LIKE mmcy_t.mmcy001]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL s_aooi200_gen_docno(g_site,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxdocdt,g_prog) RETURNING l_flag,g_mmcx_m.mmcxdocno
                  IF NOT l_flag THEN
                     NEXT FIELD mmcxdocno
                  END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL ammt302_set_entry(p_cmd)
            CALL ammt302_set_no_entry(p_cmd)]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_mmcx_m.mmcxsite = g_site
      LET g_mmcx_m.mmcxunit = g_site
      LET g_mmcx_m.mmcxdocdt = g_today
      LET g_mmcx_m.mmcxstus = 'N'
      LET g_mmcx_m.mmcx002 = g_today
      LET g_mmcx_m_t.* = g_mmcx_m.*
      CALL ammt302_mmcxsite_ref()]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_ammt302_drop_mmcztmp()]]>
  </point>
  <point name="menu.batchgen" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL ammt302_01(g_mmcx_m.mmcxdocno)]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_mmcy_d.getLength() = 0 THEN
      CALL cl_set_comp_entry("mmcxsite",TRUE)
   END IF]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("mmcxdocdt",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_mmcy_d.getLength() > 0 THEN
      CALL cl_set_comp_entry("mmcxsite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("mmcxdocdt",FALSE)]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt302_conf_chk(g_mmcx_m.mmcxdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_ammt302_conf_upd(g_mmcx_m.mmcxdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err(g_mmcx_m.mmcxdocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_mmcx_m.mmcxdocno,g_errno,1)
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_ammt302_void_chk(g_mmcx_m.mmcxdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt302_void_upd(g_mmcx_m.mmcxdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_err(g_mmcx_m.mmcxdocno,g_errno,1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmcx_m.mmcxdocno,g_errno,1)
            RETURN    
         END IF
   END CASE]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CASE g_mmcx_m.mmcxstus
         WHEN "Y"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "invalid"
            RETURN
         WHEN "X"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "confirmed"
            RETURN
         END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.chr5]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="ammt302.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt302_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmcy_d.clear()    #g_mmcy_d 單頭及單身 
   CALL g_mmcy2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt302_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit , 
          t1.ooefl003 ,t2.mmaf008 ,t3.oocql004 ,t4.oocql004 ,t5.oocql004 ,t6.oocql004 ,t7.mmcul003 FROM mmcy_t", 
             
                  " INNER JOIN mmcx_t ON mmcxdocno = mmcydocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmcysite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mmaf_t t2 ON t2.mmafent='"||g_enterprise||"' AND t2.mmaf001=mmcy001  ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2024' AND t3.oocql002=mmcy002 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='2024' AND t4.oocql002=mmcy003 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2025' AND t5.oocql002=mmcy004 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='2055' AND t6.oocql002=mmcy005 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mmcul_t t7 ON t7.mmculent='"||g_enterprise||"' AND t7.mmcul001=mmcy006 AND t7.mmcul002='"||g_dlang||"' ",
 
                  " WHERE mmcyent=? AND mmcydocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcy_t.mmcy001"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt302_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt302_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmcx_m.mmcxdocno
                                               
      FOREACH b_fill_cs INTO g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001,g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003, 
          g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005,g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007, 
          g_mmcy_d[l_ac].mmcyunit,g_mmcy_d[l_ac].mmcysite_desc,g_mmcy_d[l_ac].mmcy001_desc,g_mmcy_d[l_ac].mmcy002_desc, 
          g_mmcy_d[l_ac].mmcy003_desc,g_mmcy_d[l_ac].mmcy004_desc,g_mmcy_d[l_ac].mmcy005_desc,g_mmcy_d[l_ac].mmcy006_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammt302_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmcz001,mmcz002,mmcz003,mmczunit,mmczsite  FROM mmcz_t",   
                  " INNER JOIN mmcx_t ON mmcxdocno = mmczdocno ",
 
                  "",
                  
                  
                  " WHERE mmczent=? AND mmczdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcz_t.mmcz001,mmcz_t.mmcz002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt302_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammt302_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmcx_m.mmcxdocno
                                               
      FOREACH b_fill_cs2 INTO g_mmcy2_d[l_ac].mmcz001,g_mmcy2_d[l_ac].mmcz002,g_mmcy2_d[l_ac].mmcz003, 
          g_mmcy2_d[l_ac].mmczunit,g_mmcy2_d[l_ac].mmczsite
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmcy_d.deleteElement(g_mmcy_d.getLength())
   CALL g_mmcy2_d.deleteElement(g_mmcy2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt302_pb
   FREE ammt302_pb2
 
 
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt302_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt302_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.browser_fill" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt302_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmcx_m.* TO NULL
   CALL g_mmcy_d.clear()        
   CALL g_mmcy2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmcxdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmcxdocno ",
                      " FROM mmcx_t ",
                      " ",
                      " LEFT JOIN mmcy_t ON mmcyent = mmcxent AND mmcxdocno = mmcydocno ",
                      " LEFT JOIN mmcz_t ON mmczent = mmcxent AND mmcxdocno = mmczdocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE mmcxent = '" ||g_enterprise|| "' AND mmcyent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmcx_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmcxdocno ",
                      " FROM mmcx_t ", 
                      "  ",
                      "  ",
                      " WHERE mmcxent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmcx_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmcxdocno,mmcxdocdt,mmcxsite,mmcx001,mmcx002 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmcxstus,mmcxdocno,mmcxdocdt,mmcxsite,mmcx001,mmcx002 ",
               " FROM mmcx_t ",
               "  ",
               "  LEFT JOIN mmcy_t ON mmcyent = mmcxent AND mmcxdocno = mmcydocno ",
               "  LEFT JOIN mmcz_t ON mmczent = mmcxent AND mmcxdocno = mmczdocno",
 
 
 
               "  ",
               "  ",
               
               " WHERE mmcxent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmcx_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmcxdocno,g_browser[g_cnt].b_mmcxdocdt, 
       g_browser[g_cnt].b_mmcxsite,g_browser[g_cnt].b_mmcx001,g_browser[g_cnt].b_mmcx002
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammt302_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmcxdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammt302_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.construct" ver="6" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt302_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmcx_m.* TO NULL
   CALL g_mmcy_d.clear()        
   CALL g_mmcy2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus,mmcxownid, 
          mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxmodid,mmcxmoddt,mmcxcnfid,mmcxcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmcxcrtdt>>----
         AFTER FIELD mmcxcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmcxmoddt>>----
         AFTER FIELD mmcxmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmcxcnfdt>>----
         AFTER FIELD mmcxcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmcxpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmcxsite
         ON ACTION controlp INFIELD mmcxsite
            #add-point:ON ACTION controlp INFIELD mmcxsite
            {<point name="construct.c.mmcxsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxsite
            #add-point:BEFORE FIELD mmcxsite
            {<point name="construct.b.mmcxsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxsite
            
            #add-point:AFTER FIELD mmcxsite
            {<point name="construct.a.mmcxsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxdocdt
            #add-point:BEFORE FIELD mmcxdocdt
            {<point name="construct.b.mmcxdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxdocdt
            
            #add-point:AFTER FIELD mmcxdocdt
            {<point name="construct.a.mmcxdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxdocdt
         ON ACTION controlp INFIELD mmcxdocdt
            #add-point:ON ACTION controlp INFIELD mmcxdocdt
            {<point name="construct.c.mmcxdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmcxdocno
         ON ACTION controlp INFIELD mmcxdocno
            #add-point:ON ACTION controlp INFIELD mmcxdocno
            {<point name="construct.c.mmcxdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxdocno
            #add-point:BEFORE FIELD mmcxdocno
            {<point name="construct.b.mmcxdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxdocno
            
            #add-point:AFTER FIELD mmcxdocno
            {<point name="construct.a.mmcxdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxunit
         ON ACTION controlp INFIELD mmcxunit
            #add-point:ON ACTION controlp INFIELD mmcxunit
            {<point name="construct.c.mmcxunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxunit
            #add-point:BEFORE FIELD mmcxunit
            {<point name="construct.b.mmcxunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxunit
            
            #add-point:AFTER FIELD mmcxunit
            {<point name="construct.a.mmcxunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcx001
         ON ACTION controlp INFIELD mmcx001
            #add-point:ON ACTION controlp INFIELD mmcx001
            {<point name="construct.c.mmcx001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcx001
            #add-point:BEFORE FIELD mmcx001
            {<point name="construct.b.mmcx001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcx001
            
            #add-point:AFTER FIELD mmcx001
            {<point name="construct.a.mmcx001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcx002
            #add-point:BEFORE FIELD mmcx002
            {<point name="construct.b.mmcx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcx002
            
            #add-point:AFTER FIELD mmcx002
            {<point name="construct.a.mmcx002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcx002
         ON ACTION controlp INFIELD mmcx002
            #add-point:ON ACTION controlp INFIELD mmcx002
            {<point name="construct.c.mmcx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxstus
            #add-point:BEFORE FIELD mmcxstus
            {<point name="construct.b.mmcxstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxstus
            
            #add-point:AFTER FIELD mmcxstus
            {<point name="construct.a.mmcxstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxstus
         ON ACTION controlp INFIELD mmcxstus
            #add-point:ON ACTION controlp INFIELD mmcxstus
            {<point name="construct.c.mmcxstus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmcxownid
         ON ACTION controlp INFIELD mmcxownid
            #add-point:ON ACTION controlp INFIELD mmcxownid
            {<point name="construct.c.mmcxownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxownid
            #add-point:BEFORE FIELD mmcxownid
            {<point name="construct.b.mmcxownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxownid
            
            #add-point:AFTER FIELD mmcxownid
            {<point name="construct.a.mmcxownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxowndp
         ON ACTION controlp INFIELD mmcxowndp
            #add-point:ON ACTION controlp INFIELD mmcxowndp
            {<point name="construct.c.mmcxowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxowndp
            #add-point:BEFORE FIELD mmcxowndp
            {<point name="construct.b.mmcxowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxowndp
            
            #add-point:AFTER FIELD mmcxowndp
            {<point name="construct.a.mmcxowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxcrtid
         ON ACTION controlp INFIELD mmcxcrtid
            #add-point:ON ACTION controlp INFIELD mmcxcrtid
            {<point name="construct.c.mmcxcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxcrtid
            #add-point:BEFORE FIELD mmcxcrtid
            {<point name="construct.b.mmcxcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxcrtid
            
            #add-point:AFTER FIELD mmcxcrtid
            {<point name="construct.a.mmcxcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmcxcrtdp
         ON ACTION controlp INFIELD mmcxcrtdp
            #add-point:ON ACTION controlp INFIELD mmcxcrtdp
            {<point name="construct.c.mmcxcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxcrtdp
            #add-point:BEFORE FIELD mmcxcrtdp
            {<point name="construct.b.mmcxcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxcrtdp
            
            #add-point:AFTER FIELD mmcxcrtdp
            {<point name="construct.a.mmcxcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxcrtdt
            #add-point:BEFORE FIELD mmcxcrtdt
            {<point name="construct.b.mmcxcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmcxmodid
         ON ACTION controlp INFIELD mmcxmodid
            #add-point:ON ACTION controlp INFIELD mmcxmodid
            {<point name="construct.c.mmcxmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxmodid
            #add-point:BEFORE FIELD mmcxmodid
            {<point name="construct.b.mmcxmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxmodid
            
            #add-point:AFTER FIELD mmcxmodid
            {<point name="construct.a.mmcxmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxmoddt
            #add-point:BEFORE FIELD mmcxmoddt
            {<point name="construct.b.mmcxmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmcxcnfid
         ON ACTION controlp INFIELD mmcxcnfid
            #add-point:ON ACTION controlp INFIELD mmcxcnfid
            {<point name="construct.c.mmcxcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxcnfid
            #add-point:BEFORE FIELD mmcxcnfid
            {<point name="construct.b.mmcxcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxcnfid
            
            #add-point:AFTER FIELD mmcxcnfid
            {<point name="construct.a.mmcxcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxcnfdt
            #add-point:BEFORE FIELD mmcxcnfdt
            {<point name="construct.b.mmcxcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit 

           FROM s_detail1[1].mmcysite,s_detail1[1].mmcy001,s_detail1[1].mmcy002,s_detail1[1].mmcy003, 
               s_detail1[1].mmcy004,s_detail1[1].mmcy005,s_detail1[1].mmcy006,s_detail1[1].mmcy007,s_detail1[1].mmcyunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmcz001,mmcz002,mmcz003,mmczunit,mmczsite
           FROM s_detail2[1].mmcz001,s_detail2[1].mmcz002,s_detail2[1].mmcz003,s_detail2[1].mmczunit, 
               s_detail2[1].mmczsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt302_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmcxdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.delete" ver="10" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt302_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   
 
   CALL ammt302_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt302_cl:", STATUS, 1)
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmcx_m.mmcxdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt302_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
 
      DELETE FROM mmcx_t
       WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcx_m.mmcxdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmcx_m.mmcxdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmcy_t
       WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcy_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmcz_t
       WHERE mmczent = g_enterprise AND
             mmczdocno = g_mmcx_m.mmcxdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcz_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmcy_d.clear() 
      CALL g_mmcy2_d.clear()       
 
     
      #CALL ammt302_ui_browser_refresh()  
      CALL ammt302_ui_headershow()  
      CALL ammt302_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt302_browser_fill("")
         CALL ammt302_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt302_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt302_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmcx_m.mmcxdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="ammt302.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt302_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcy_t
       WHERE mmcyent = g_enterprise AND
         mmcydocno = ps_keys_bak[1] AND mmcy001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcz_t
       WHERE mmczent = g_enterprise AND
         mmczdocno = ps_keys_bak[1] AND mmcz001 = ps_keys_bak[2] AND mmcz002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcz_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.description" ver="89" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000266
#+ 
#+ Filename...: ammt302
#+ Description: 會員等級變更維護作業
#+ Creator....: 01533(2013/12/02)
#+ Modifier...: 01533(2014/06/29)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="ammt302.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt302_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmcy_t.*
   DEFINE l_detail2    RECORD LIKE mmcz_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt302_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt302_detail AS ",
                "SELECT * FROM mmcy_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt302_detail SELECT * FROM mmcy_t 
                                         WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcxdocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt302_detail 
      #更新key欄位
      SET mmcydocno = g_mmcx_m.mmcxdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmcy_t SELECT * FROM ammt302_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt302_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt302_detail AS ",
      "SELECT * FROM mmcz_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt302_detail SELECT * FROM mmcz_t
                                         WHERE mmczent = g_enterprise AND mmczdocno = g_mmcxdocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt302_detail SET mmczdocno = g_mmcx_m.mmcxdocno
 
  
   #將資料塞回原table   
   INSERT INTO mmcz_t SELECT * FROM ammt302_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt302_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   
   DROP TABLE ammt302_detail
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt302_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.fetch" ver="6" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt302_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmcx_m.mmcxdocno = g_browser[g_current_idx].b_mmcxdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("mmcx_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmcx_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammt302_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt302_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.filter" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt302_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmcxdocno,mmcxdocdt,mmcxsite,mmcx001,mmcx002
                          FROM s_browse[1].b_mmcxdocno,s_browse[1].b_mmcxdocdt,s_browse[1].b_mmcxsite, 
                              s_browse[1].b_mmcx001,s_browse[1].b_mmcx002
 
         BEFORE CONSTRUCT
               DISPLAY ammt302_filter_parser('mmcxdocno') TO s_browse[1].b_mmcxdocno
            DISPLAY ammt302_filter_parser('mmcxdocdt') TO s_browse[1].b_mmcxdocdt
            DISPLAY ammt302_filter_parser('mmcxsite') TO s_browse[1].b_mmcxsite
            DISPLAY ammt302_filter_parser('mmcx001') TO s_browse[1].b_mmcx001
            DISPLAY ammt302_filter_parser('mmcx002') TO s_browse[1].b_mmcx002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt302_filter_show('mmcxdocno')
   CALL ammt302_filter_show('mmcxdocdt')
   CALL ammt302_filter_show('mmcxsite')
   CALL ammt302_filter_show('mmcx001')
   CALL ammt302_filter_show('mmcx002')
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt302_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt302_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt302_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.global" ver="6" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmcx_m        RECORD
       mmcxsite LIKE mmcx_t.mmcxsite, 
   mmcxsite_desc LIKE type_t.chr80, 
   mmcxdocdt LIKE mmcx_t.mmcxdocdt, 
   mmcxdocno LIKE mmcx_t.mmcxdocno, 
   mmcxunit LIKE mmcx_t.mmcxunit, 
   mmcx001 LIKE mmcx_t.mmcx001, 
   mmcx001_desc LIKE type_t.chr80, 
   mmcx002 LIKE mmcx_t.mmcx002, 
   mmcxstus LIKE mmcx_t.mmcxstus, 
   mmcxownid LIKE mmcx_t.mmcxownid, 
   mmcxownid_desc LIKE type_t.chr80, 
   mmcxowndp LIKE mmcx_t.mmcxowndp, 
   mmcxowndp_desc LIKE type_t.chr80, 
   mmcxcrtid LIKE mmcx_t.mmcxcrtid, 
   mmcxcrtid_desc LIKE type_t.chr80, 
   mmcxcrtdp LIKE mmcx_t.mmcxcrtdp, 
   mmcxcrtdp_desc LIKE type_t.chr80, 
   mmcxcrtdt DATETIME YEAR TO SECOND, 
   mmcxmodid LIKE mmcx_t.mmcxmodid, 
   mmcxmodid_desc LIKE type_t.chr80, 
   mmcxmoddt DATETIME YEAR TO SECOND, 
   mmcxcnfid LIKE mmcx_t.mmcxcnfid, 
   mmcxcnfid_desc LIKE type_t.chr80, 
   mmcxcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmcy_d        RECORD
       mmcysite LIKE mmcy_t.mmcysite, 
   mmcysite_desc LIKE type_t.chr500, 
   mmcy001 LIKE mmcy_t.mmcy001, 
   mmcy001_desc LIKE type_t.chr500, 
   mmcy002 LIKE mmcy_t.mmcy002, 
   mmcy002_desc LIKE type_t.chr500, 
   mmcy003 LIKE mmcy_t.mmcy003, 
   mmcy003_desc LIKE type_t.chr500, 
   mmcy004 LIKE mmcy_t.mmcy004, 
   mmcy004_desc LIKE type_t.chr500, 
   mmcy005 LIKE mmcy_t.mmcy005, 
   mmcy005_desc LIKE type_t.chr500, 
   mmcy006 LIKE mmcy_t.mmcy006, 
   mmcy006_desc LIKE type_t.chr500, 
   mmcy007 LIKE mmcy_t.mmcy007, 
   mmcyunit LIKE mmcy_t.mmcyunit
       END RECORD
PRIVATE TYPE type_g_mmcy2_d RECORD
       mmcz001 LIKE mmcz_t.mmcz001, 
   mmcz002 LIKE mmcz_t.mmcz002, 
   mmcz003 LIKE mmcz_t.mmcz003, 
   mmczunit LIKE mmcz_t.mmczunit, 
   mmczsite LIKE mmcz_t.mmczsite
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmcx_m          type_g_mmcx_m
DEFINE g_mmcx_m_t        type_g_mmcx_m
 
   DEFINE g_mmcxdocno_t LIKE mmcx_t.mmcxdocno
 
 
DEFINE g_mmcy_d          DYNAMIC ARRAY OF type_g_mmcy_d
DEFINE g_mmcy_d_t        type_g_mmcy_d
DEFINE g_mmcy2_d   DYNAMIC ARRAY OF type_g_mmcy2_d
DEFINE g_mmcy2_d_t type_g_mmcy2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmcxdocno LIKE mmcx_t.mmcxdocno,
      b_mmcxdocdt LIKE mmcx_t.mmcxdocdt,
      b_mmcxsite LIKE mmcx_t.mmcxsite,
      b_mmcx001 LIKE mmcx_t.mmcx001,
      b_mmcx002 LIKE mmcx_t.mmcx002
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmcxdocno LIKE mmcx_t.mmcxdocno,
      b_mmcxdocdt LIKE mmcx_t.mmcxdocdt,
      b_mmcxsite LIKE mmcx_t.mmcxsite,
      b_mmcx001 LIKE mmcx_t.mmcx001,
      b_mmcx002 LIKE mmcx_t.mmcx002
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammt302.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammt302_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmcy_d.getLength() THEN
         LET g_detail_idx = g_mmcy_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcy_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcy_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmcy2_d.getLength() THEN
         LET g_detail_idx = g_mmcy2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcy2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcy2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt302_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmcxstus','13','N,X,Y')
 
      CALL cl_set_combo_scc('mmcz002','6532') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammt302_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammt302.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt302_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit  
       FROM mmcy_t WHERE mmcyent=? AND mmcydocno=? AND mmcy001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcz001,mmcz002,mmcz003,mmczunit,mmczsite FROM mmcz_t WHERE mmczent=?  
       AND mmczdocno=? AND mmcz001=? AND mmcz002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt302_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt302_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001, 
       g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="ammt302.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmcy_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcy_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt302_b_fill()
            LET g_rec_b = g_mmcy_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt302_cl:", STATUS, 1)
               CLOSE ammt302_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcy_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcy_d[l_ac].mmcy001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmcy_d_t.* = g_mmcy_d[l_ac].*  #BACKUP
               CALL ammt302_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt302_set_no_entry_b(l_cmd)
               IF NOT ammt302_lock_b("mmcy_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt302_bcl INTO g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001,g_mmcy_d[l_ac].mmcy002, 
                      g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005,g_mmcy_d[l_ac].mmcy006, 
                      g_mmcy_d[l_ac].mmcy007,g_mmcy_d[l_ac].mmcyunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmcy_d_t.mmcy001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt302_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcy_d[l_ac].* TO NULL 
            
            LET g_mmcy_d_t.* = g_mmcy_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt302_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt302_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcy_d[li_reproduce_target].* = g_mmcy_d[li_reproduce].*
 
               LET g_mmcy_d[li_reproduce_target].mmcy001 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcy_t 
             WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno
 
               AND mmcy001 = g_mmcy_d[l_ac].mmcy001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmcx_m.mmcxdocno
               LET gs_keys[2] = g_mmcy_d[g_detail_idx].mmcy001
               CALL ammt302_insert_b('mmcy_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcy_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcy_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt302_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcy_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcy_d.deleteElement(l_ac)
               NEXT FIELD mmcy001
            END IF
         
            IF g_mmcy_d[l_ac].mmcy001 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmcy_t
                WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno AND
 
                      mmcy001 = g_mmcy_d_t.mmcy001
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcy_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt302_bcl
               LET l_count = g_mmcy_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmcx_m.mmcxdocno
               LET gs_keys[2] = g_mmcy_d[g_detail_idx].mmcy001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt302_delete_b('mmcy_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD mmcysite
            
            #add-point:AFTER FIELD mmcysite
            {<point name="input.a.page1.mmcysite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcysite
            #add-point:BEFORE FIELD mmcysite
            {<point name="input.b.page1.mmcysite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcysite
            #add-point:ON CHANGE mmcysite
            {<point name="input.g.page1.mmcysite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy001
            
            #add-point:AFTER FIELD mmcy001
            {<point name="input.a.page1.mmcy001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy001
            #add-point:BEFORE FIELD mmcy001
            {<point name="input.b.page1.mmcy001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy001
            #add-point:ON CHANGE mmcy001
            {<point name="input.g.page1.mmcy001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy002
            
            #add-point:AFTER FIELD mmcy002
            {<point name="input.a.page1.mmcy002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy002
            #add-point:BEFORE FIELD mmcy002
            {<point name="input.b.page1.mmcy002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy002
            #add-point:ON CHANGE mmcy002
            {<point name="input.g.page1.mmcy002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy003
            
            #add-point:AFTER FIELD mmcy003
            {<point name="input.a.page1.mmcy003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy003
            #add-point:BEFORE FIELD mmcy003
            {<point name="input.b.page1.mmcy003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy003
            #add-point:ON CHANGE mmcy003
            {<point name="input.g.page1.mmcy003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy004
            
            #add-point:AFTER FIELD mmcy004
            {<point name="input.a.page1.mmcy004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy004
            #add-point:BEFORE FIELD mmcy004
            {<point name="input.b.page1.mmcy004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy004
            #add-point:ON CHANGE mmcy004
            {<point name="input.g.page1.mmcy004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy005
            
            #add-point:AFTER FIELD mmcy005
            {<point name="input.a.page1.mmcy005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy005
            #add-point:BEFORE FIELD mmcy005
            {<point name="input.b.page1.mmcy005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy005
            #add-point:ON CHANGE mmcy005
            {<point name="input.g.page1.mmcy005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy006
            
            #add-point:AFTER FIELD mmcy006
            {<point name="input.a.page1.mmcy006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy006
            #add-point:BEFORE FIELD mmcy006
            {<point name="input.b.page1.mmcy006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy006
            #add-point:ON CHANGE mmcy006
            {<point name="input.g.page1.mmcy006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcy007
            #add-point:BEFORE FIELD mmcy007
            {<point name="input.b.page1.mmcy007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcy007
            
            #add-point:AFTER FIELD mmcy007
            {<point name="input.a.page1.mmcy007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcy007
            #add-point:ON CHANGE mmcy007
            {<point name="input.g.page1.mmcy007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcyunit
            #add-point:BEFORE FIELD mmcyunit
            {<point name="input.b.page1.mmcyunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcyunit
            
            #add-point:AFTER FIELD mmcyunit
            {<point name="input.a.page1.mmcyunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcyunit
            #add-point:ON CHANGE mmcyunit
            {<point name="input.g.page1.mmcyunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmcysite
         ON ACTION controlp INFIELD mmcysite
            #add-point:ON ACTION controlp INFIELD mmcysite
            {<point name="input.c.page1.mmcysite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy001
         ON ACTION controlp INFIELD mmcy001
            #add-point:ON ACTION controlp INFIELD mmcy001
            {<point name="input.c.page1.mmcy001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy002
         ON ACTION controlp INFIELD mmcy002
            #add-point:ON ACTION controlp INFIELD mmcy002
            {<point name="input.c.page1.mmcy002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy003
         ON ACTION controlp INFIELD mmcy003
            #add-point:ON ACTION controlp INFIELD mmcy003
            {<point name="input.c.page1.mmcy003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy004
         ON ACTION controlp INFIELD mmcy004
            #add-point:ON ACTION controlp INFIELD mmcy004
            {<point name="input.c.page1.mmcy004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy005
         ON ACTION controlp INFIELD mmcy005
            #add-point:ON ACTION controlp INFIELD mmcy005
            {<point name="input.c.page1.mmcy005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy006
         ON ACTION controlp INFIELD mmcy006
            #add-point:ON ACTION controlp INFIELD mmcy006
            {<point name="input.c.page1.mmcy006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcy007
         ON ACTION controlp INFIELD mmcy007
            #add-point:ON ACTION controlp INFIELD mmcy007
            {<point name="input.c.page1.mmcy007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcyunit
         ON ACTION controlp INFIELD mmcyunit
            #add-point:ON ACTION controlp INFIELD mmcyunit
            {<point name="input.c.page1.mmcyunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
               CLOSE ammt302_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmcy_d[l_ac].mmcy001,-263,1)
               LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmcy_t SET (mmcydocno,mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006, 
                   mmcy007,mmcyunit) = (g_mmcx_m.mmcxdocno,g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001, 
                   g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005, 
                   g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007,g_mmcy_d[l_ac].mmcyunit)
                WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno 
 
                  AND mmcy001 = g_mmcy_d_t.mmcy001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcy_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcy_t",SQLCA.sqlcode,1)
                     LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmcx_m.mmcxdocno
               LET gs_keys_bak[1] = g_mmcxdocno_t
               LET gs_keys[2] = g_mmcy_d[g_detail_idx].mmcy001
               LET gs_keys_bak[2] = g_mmcy_d_t.mmcy001
               CALL ammt302_update_b('mmcy_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmcx_m),util.JSON.stringify(g_mmcy_d_t)
               LET g_log2 = util.JSON.stringify(g_mmcx_m),util.JSON.stringify(g_mmcy_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt302_unlock_b("mmcy_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmcy_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcy_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
      DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt302_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL ammt302_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
      
 
      
]]>
  </section>
  <section id="ammt302.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001, 
          g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD mmcxsite
            
            #add-point:AFTER FIELD mmcxsite
            {<point name="input.a.mmcxsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxsite
            #add-point:BEFORE FIELD mmcxsite
            {<point name="input.b.mmcxsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcxsite
            #add-point:ON CHANGE mmcxsite
            {<point name="input.g.mmcxsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxdocdt
            #add-point:BEFORE FIELD mmcxdocdt
            {<point name="input.b.mmcxdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxdocdt
            
            #add-point:AFTER FIELD mmcxdocdt
            {<point name="input.a.mmcxdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcxdocdt
            #add-point:ON CHANGE mmcxdocdt
            {<point name="input.g.mmcxdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxdocno
            #add-point:BEFORE FIELD mmcxdocno
            {<point name="input.b.mmcxdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxdocno
            
            #add-point:AFTER FIELD mmcxdocno
            {<point name="input.a.mmcxdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcxdocno
            #add-point:ON CHANGE mmcxdocno
            {<point name="input.g.mmcxdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxunit
            #add-point:BEFORE FIELD mmcxunit
            {<point name="input.b.mmcxunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxunit
            
            #add-point:AFTER FIELD mmcxunit
            {<point name="input.a.mmcxunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcxunit
            #add-point:ON CHANGE mmcxunit
            {<point name="input.g.mmcxunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcx001
            
            #add-point:AFTER FIELD mmcx001
            {<point name="input.a.mmcx001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcx001
            #add-point:BEFORE FIELD mmcx001
            {<point name="input.b.mmcx001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcx001
            #add-point:ON CHANGE mmcx001
            {<point name="input.g.mmcx001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcx002
            #add-point:BEFORE FIELD mmcx002
            {<point name="input.b.mmcx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcx002
            
            #add-point:AFTER FIELD mmcx002
            {<point name="input.a.mmcx002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcx002
            #add-point:ON CHANGE mmcx002
            {<point name="input.g.mmcx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcxstus
            #add-point:BEFORE FIELD mmcxstus
            {<point name="input.b.mmcxstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcxstus
            
            #add-point:AFTER FIELD mmcxstus
            {<point name="input.a.mmcxstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcxstus
            #add-point:ON CHANGE mmcxstus
            {<point name="input.g.mmcxstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmcxsite
         ON ACTION controlp INFIELD mmcxsite
            #add-point:ON ACTION controlp INFIELD mmcxsite
            {<point name="input.c.mmcxsite" />}
            #END add-point
 
         #Ctrlp:input.c.mmcxdocdt
         ON ACTION controlp INFIELD mmcxdocdt
            #add-point:ON ACTION controlp INFIELD mmcxdocdt
            {<point name="input.c.mmcxdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmcxdocno
         ON ACTION controlp INFIELD mmcxdocno
            #add-point:ON ACTION controlp INFIELD mmcxdocno
            {<point name="input.c.mmcxdocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmcxunit
         ON ACTION controlp INFIELD mmcxunit
            #add-point:ON ACTION controlp INFIELD mmcxunit
            {<point name="input.c.mmcxunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmcx001
         ON ACTION controlp INFIELD mmcx001
            #add-point:ON ACTION controlp INFIELD mmcx001
            {<point name="input.c.mmcx001" />}
            #END add-point
 
         #Ctrlp:input.c.mmcx002
         ON ACTION controlp INFIELD mmcx002
            #add-point:ON ACTION controlp INFIELD mmcx002
            {<point name="input.c.mmcx002" />}
            #END add-point
 
         #Ctrlp:input.c.mmcxstus
         ON ACTION controlp INFIELD mmcxstus
            #add-point:ON ACTION controlp INFIELD mmcxstus
            {<point name="input.c.mmcxstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmcx_m.mmcxdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmcx_t (mmcxent,mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus, 
                   mmcxownid,mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxcnfid,mmcxcnfdt)
               VALUES (g_enterprise,g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
                   g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid,g_mmcx_m.mmcxowndp, 
                   g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmcx_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt302_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmcx_t SET (mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus,mmcxownid, 
                   mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxcnfid,mmcxcnfdt) = (g_mmcx_m.mmcxsite, 
                   g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002, 
                   g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp, 
                   g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt)
                WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcxdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcx_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_mmcx_m_t)
               LET g_log2 = util.JSON.stringify(g_mmcx_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="ammt302.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmcxdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcysite
               WHEN "s_detail2"
                  NEXT FIELD mmcz001
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt302_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmcy_d.clear()   
   CALL g_mmcy2_d.clear()  
 
 
   INITIALIZE g_mmcx_m.* LIKE mmcx_t.*             #DEFAULT 設定
   
   LET g_mmcxdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmcx_m.mmcxownid = g_user
      LET g_mmcx_m.mmcxowndp = g_dept
      LET g_mmcx_m.mmcxcrtid = g_user
      LET g_mmcx_m.mmcxcrtdp = g_dept 
      LET g_mmcx_m.mmcxcrtdt = cl_get_current()
      LET g_mmcx_m.mmcxmodid = ""
      LET g_mmcx_m.mmcxmoddt = ""
      LET g_mmcx_m.mmcxstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmcx_m.mmcxstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt302_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmcx_m.* = g_mmcx_m_t.*
         CALL ammt302_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmcy_d.clear()
      CALL g_mmcy2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmcxent = '" ||g_enterprise|| "' AND",
              " mmcxdocno = '", g_mmcx_m.mmcxdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt302_cl
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt302_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcy_t
                  (mmcyent,
                   mmcydocno,
                   mmcy001
                   ,mmcysite,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcy_d[g_detail_idx].mmcysite,g_mmcy_d[g_detail_idx].mmcy002,g_mmcy_d[g_detail_idx].mmcy003, 
                       g_mmcy_d[g_detail_idx].mmcy004,g_mmcy_d[g_detail_idx].mmcy005,g_mmcy_d[g_detail_idx].mmcy006, 
                       g_mmcy_d[g_detail_idx].mmcy007,g_mmcy_d[g_detail_idx].mmcyunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcy_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcz_t
                  (mmczent,
                   mmczdocno,
                   mmcz001,mmcz002
                   ,mmcz003,mmczunit,mmczsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmcy2_d[g_detail_idx].mmcz003,g_mmcy2_d[g_detail_idx].mmczunit,g_mmcy2_d[g_detail_idx].mmczsite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcz_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt302_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt302_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmcy_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt302_bcl USING g_enterprise,
                                       g_mmcx_m.mmcxdocno,g_mmcy_d[g_detail_idx].mmcy001     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt302_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmcz_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt302_bcl2 USING g_enterprise,
                                             g_mmcx_m.mmcxdocno,g_mmcy2_d[g_detail_idx].mmcz001,g_mmcy2_d[g_detail_idx].mmcz002 

      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt302_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.main" ver="8" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmcxsite,'',mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,'',mmcx002,mmcxstus, 
       mmcxownid,'',mmcxowndp,'',mmcxcrtid,'',mmcxcrtdp,'',mmcxcrtdt,mmcxmodid,'',mmcxmoddt,mmcxcnfid, 
       '',mmcxcnfdt", 
                      " FROM mmcx_t",
                      " WHERE mmcxent= ? AND mmcxdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus,mmcxownid, 
       mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxmodid,mmcxmoddt,mmcxcnfid,mmcxcnfdt,t1.ooefl003 , 
       t2.oocql004 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM mmcx_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmcxsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2055' AND t2.oocql002=mmcx001 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=mmcxownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=mmcxowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=mmcxcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=mmcxcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=mmcxmodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmcxcnfid  ",
 
               " WHERE mmcxent = '" ||g_enterprise|| "' AND mmcxdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt302_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt302 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt302_init()   
 
      #進入選單 Menu (="N")
      CALL ammt302_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt302
      
   END IF 
   
   CLOSE ammt302_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="ammt302.modify" ver="9" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt302_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
 
   ERROR ""
  
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   CALL s_transaction_begin()
   
   OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt302_cl:", STATUS, 1)
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmcx_m.mmcxdocno,SQLCA.sqlcode,0)
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt302_show()
   WHILE TRUE
      LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmcx_m.mmcxmodid = g_user 
LET g_mmcx_m.mmcxmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammt302_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmcx_m.* = g_mmcx_m_t.*
         CALL ammt302_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmcx_t SET (mmcxmodid,mmcxmoddt) = (g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmoddt)
       WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcxdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_mmcx_m.mmcxdocno != g_mmcxdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmcy_t SET mmcydocno = g_mmcx_m.mmcxdocno
 
          WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcxdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcy_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcy_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmcz_t
            SET mmczdocno = g_mmcx_m.mmcxdocno
 
          WHERE mmczent = g_enterprise AND
                mmczdocno = g_mmcxdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcz_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcz_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmcx_m.mmcxdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammt302_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmcx_m.mmcxdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="ammt302.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammt302.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammt302.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt302_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmcy_d.clear()
   CALL g_mmcy2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt302_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt302_browser_fill("")
      CALL ammt302_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt302_filter_show('mmcxdocno')
   CALL ammt302_filter_show('mmcxdocdt')
   CALL ammt302_filter_show('mmcxsite')
   CALL ammt302_filter_show('mmcx001')
   CALL ammt302_filter_show('mmcx002')
   CALL ammt302_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammt302_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt302_reproduce()
   DEFINE l_newno     LIKE mmcx_t.mmcxdocno 
   DEFINE l_oldno     LIKE mmcx_t.mmcxdocno 
 
   DEFINE l_master    RECORD LIKE mmcx_t.*
   DEFINE l_detail    RECORD LIKE mmcy_t.*
   DEFINE l_detail2    RECORD LIKE mmcz_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
    
   LET g_mmcx_m.mmcxdocno = ""
 
    
   CALL ammt302_set_entry('a')
   CALL ammt302_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmcx_m.mmcxownid = g_user
      LET g_mmcx_m.mmcxowndp = g_dept
      LET g_mmcx_m.mmcxcrtid = g_user
      LET g_mmcx_m.mmcxcrtdp = g_dept 
      LET g_mmcx_m.mmcxcrtdt = cl_get_current()
      LET g_mmcx_m.mmcxmodid = ""
      LET g_mmcx_m.mmcxmoddt = ""
      LET g_mmcx_m.mmcxstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt302_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmcxdocno = '", g_mmcx_m.mmcxdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt302_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmcxdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt302_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammt302.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt302_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmcxdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt302_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammt302.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt302_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmcx_m.mmcxdocno
   LET g_pk_array[1].column = 'mmcxdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt302.show" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt302_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmcx_m_t.* = g_mmcx_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammt302_b_fill() #單身填充
      CALL ammt302_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmcx_m.mmcxownid_desc = cl_get_username(g_mmcx_m.mmcxownid)
      #LET g_mmcx_m.mmcxowndp_desc = cl_get_deptname(g_mmcx_m.mmcxowndp)
      #LET g_mmcx_m.mmcxcrtid_desc = cl_get_username(g_mmcx_m.mmcxcrtid)
      #LET g_mmcx_m.mmcxcrtdp_desc = cl_get_deptname(g_mmcx_m.mmcxcrtdp)
      #LET g_mmcx_m.mmcxmodid_desc = cl_get_username(g_mmcx_m.mmcxmodid)
      #LET g_mmcx_m.mmcxcnfid_desc = cl_get_deptname(g_mmcx_m.mmcxcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt302_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
       g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtid_desc, 
       g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmodid_desc, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmcx_m.mmcxstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmcy_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmcy2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt302_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammt302.state_change" ver="4" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt302_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmcx_m.mmcxstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmcx_t SET mmcxstus = lc_state 
    WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcx_m.mmcxdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_mmcx_m.mmcxstus = lc_state
      DISPLAY BY NAME g_mmcx_m.mmcxstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt302.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt302_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmcxdocno = g_mmcx_m.mmcxdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt302_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.ui_dialog" ver="25" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt302_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt302_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt302_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmcxdocno = g_mmcxdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt302_fetch('') # reload data
               LET l_ac = 1
               CALL ammt302_ui_detailshow() #Setting the current row 
      
               CALL ammt302_idx_chk()
               #NEXT FIELD mmcy001
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmcy_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt302_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt302_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt302_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammt302_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt302_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt302_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt302_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt302_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt302_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt302_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammt302_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt302_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt302_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION previous
            CALL ammt302_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION jump
            CALL ammt302_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION next
            CALL ammt302_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION last
            CALL ammt302_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmcy001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt302_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt302_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt302_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt302_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION batchgen
            LET g_action_choice="batchgen"
            IF cl_auth_chk_act("batchgen") THEN
               
               #add-point:ON ACTION batchgen
               {<point name="menu.batchgen" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt302_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt302_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt302_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt302_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmcx_m.mmcxdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammt302.ui_headershow" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt302_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmcx_m.mmcxdocno = g_browser[g_current_idx].b_mmcxdocno   
 
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   CALL ammt302_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammt302.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt302_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt302_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt302_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammt302.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt302_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcy_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmcy_t 
         SET (mmcydocno,
              mmcy001
              ,mmcysite,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcy_d[g_detail_idx].mmcysite,g_mmcy_d[g_detail_idx].mmcy002,g_mmcy_d[g_detail_idx].mmcy003, 
                  g_mmcy_d[g_detail_idx].mmcy004,g_mmcy_d[g_detail_idx].mmcy005,g_mmcy_d[g_detail_idx].mmcy006, 
                  g_mmcy_d[g_detail_idx].mmcy007,g_mmcy_d[g_detail_idx].mmcyunit) 
         WHERE mmcyent = g_enterprise AND mmcydocno = ps_keys_bak[1] AND mmcy001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcy_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcy_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcz_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmcz_t 
         SET (mmczdocno,
              mmcz001,mmcz002
              ,mmcz003,mmczunit,mmczsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmcy2_d[g_detail_idx].mmcz003,g_mmcy2_d[g_detail_idx].mmczunit,g_mmcy2_d[g_detail_idx].mmczsite)  

         WHERE mmczent = g_enterprise AND mmczdocno = ps_keys_bak[1] AND mmcz001 = ps_keys_bak[2] AND mmcz002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcz_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcz_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
