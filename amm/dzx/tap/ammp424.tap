<add_points prog="ammp424" std_prog="ammp424" erpver="1.0" module="AMM" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="P" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.ammp424_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 參考欄位顯示
# Memo...........:
# Usage..........: CALL ammp424_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/10 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION ammp424_desc()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = lc_param1.mman001
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET lc_param1.mman001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME lc_param1.mman001_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = lc_param1.mmbn006
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET lc_param1.mmbn006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME lc_param1.mmbn006_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = lc_param1.mmbm001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '2056' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET lc_param1.mmbm001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME lc_param1.mmbm001_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = lc_param1.mmbm002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET lc_param1.mmbm002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME lc_param1.mmbm002_desc 
END FUNCTION]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[        mman001          LIKE mman_t.mman001,
        mmbn006          LIKE mmbn_t.mmbn006,
        mmbm001          LIKE mmbm_t.mmbm001,
        mmbm002          LIKE mmbm_t.mmbm002,
        mman001_desc     LIKE type_t.chr80,
        mmbn006_desc     LIKE type_t.chr80,
        mmbm001_desc     LIKE type_t.chr80,
        mmbm002_desc     LIKE type_t.chr80,]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE l_success         LIKE type_t.num5
DEFINE g_ref_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars        DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE lc_param1    type_parameter ]]>
</point>
  <point name="input.a.mman001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            IF NOT cl_null(g__m.mman001) THEN 
##此段落由子樣板a19產生
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_mman001_5") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g__m.mman001
#            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g__m.mman001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g__m.mman001_desc

]]>
</point>
  <point name="input.a.mmbm001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g__m.mmbm001
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g__m.mmbm001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g__m.mmbm001_desc

]]>
</point>
  <point name="input.a.mmbm002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g__m.mmbm002
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g__m.mmbm002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g__m.mmbm002_desc
#
]]>
</point>
  <point name="input.a.mmbn006" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            IF NOT cl_null(g__m.mmbn006) THEN 
##此段落由子樣板a19產生
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg2 = '參數2'
#               LET g_chkparam.arg3 ='' 
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooed004") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g__m.mmbn006
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g__m.mmbn006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g__m.mmbn006_desc

]]>
</point>
  <point name="input.c.mman001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g__m.mman001             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = "" #
#
#            
#            CALL q_mman001_10()                                #呼叫開窗
#
#            LET g__m.mman001 = g_qryparam.return1              
#
#            DISPLAY g__m.mman001 TO mman001              #
#
#            NEXT FIELD mman001                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbm001" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g__m.mmbm001             #給予default值
#            LET g_qryparam.default2 = "" #g__m.oocq002 #應用分類碼
#            #給予arg
#            LET g_qryparam.arg1 = "" #
#
#            
#            CALL q_oocq002()                                #呼叫開窗
#
#            LET g__m.mmbm001 = g_qryparam.return1              
#            #LET g__m.oocq002 = g_qryparam.return2 
#            DISPLAY g__m.mmbm001 TO mmbm001              #
#            #DISPLAY g__m.oocq002 TO oocq002 #應用分類碼
#            NEXT FIELD mmbm001                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbm002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g__m.mmbm002             #給予default值
#            LET g_qryparam.default2 = "" #g__m.oocq002 #應用分類碼
#            #給予arg
#            LET g_qryparam.arg1 = "" #
#
#            
#            CALL q_oocq002()                                #呼叫開窗
#
#            LET g__m.mmbm002 = g_qryparam.return1              
#            #LET g__m.oocq002 = g_qryparam.return2 
#            DISPLAY g__m.mmbm002 TO mmbm002              #
#            #DISPLAY g__m.oocq002 TO oocq002 #應用分類碼
#            NEXT FIELD mmbm002                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbn006" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g__m.mmbn006             #給予default值
#            LET g_qryparam.default2 = "" #g__m.ooefl003 #說明(簡稱)
#            #給予arg
#            LET g_qryparam.arg1 = "" #
#            LET g_qryparam.arg2 = "" #
#            
#            CALL q_ooed004()                                #呼叫開窗
#
#            LET g__m.mmbn006 = g_qryparam.return1              
#            #LET g__m.ooefl003 = g_qryparam.return2 
#            DISPLAY g__m.mmbn006 TO mmbn006              #
#            #DISPLAY g__m.ooefl003 TO ooefl003 #說明(簡稱)
#            NEXT FIELD mmbn006                          #返回原欄位

]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET l_sql = "SELECT COUNT(*) FROM mmaq_t",
                  "  WHERE mmaqent = '",g_enterprise,"'",
                  "    AND mmaq002 = '",lc_param.mman001,"'",
                  "    AND mmaq006 = '3' ",
                  "    AND ",lc_param.wc CLIPPED
      PREPARE ammp424_sel_cnt_pr1 FROM l_sql
      EXECUTE ammp424_sel_cnt_pr1 INTO li_count
      CALL cl_progress_bar_no_window(li_count)]]>
</point>
  <point name="process.define" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_sql       STRING
   DEFINE l_mmaq001   LIKE mmaq_t.mmaq001
   DEFINE l_mmaq005   LIKE mmaq_t.mmaq005
   DEFINE l_docno     LIKE mmbm_t.mmbmdocno
   DEFINE l_n         LIKE type_t.num5   
   DEFINE l_success1  LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5]]>
</point>
  <point name="process.pre_process" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="process.process" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_sql = "SELECT COUNT(*) FROM mmaq_t",
               "  WHERE mmaqent = '",g_enterprise,"'",
               "    AND mmaq002 = '",lc_param.mman001,"'",
               "    AND mmaq006 = '3' ",
               "    AND ",lc_param.wc CLIPPED
   PREPARE ammp424_sel_cnt_pr FROM l_sql
   EXECUTE ammp424_sel_cnt_pr INTO l_n
   IF l_n = 0 THEN
      CALL cl_err(l_mmaq001,'sub-00491',1)
      RETURN         
   END IF
   CALL s_transaction_begin()
   LET l_success = TRUE
   LET l_success1 = TRUE
   LET l_docno = ''
   CALL cl_showmsg_init()
   let l_cnt=0
   LET l_sql = " SELECT mmaq001,mmaq005 FROM mmaq_t",
               "  WHERE mmaqent = '",g_enterprise,"'",
               "    AND mmaq002 = '",lc_param.mman001,"'",
               "    AND mmaq006 = '3' ",
               "    AND ",lc_param.wc CLIPPED
   PREPARE ammp424_sel_mmaq001_pr FROM l_sql
   DECLARE ammp424_sel_mmaq001_cs CURSOR FOR ammp424_sel_mmaq001_pr
   FOREACH ammp424_sel_mmaq001_cs INTO l_mmaq001,l_mmaq005
      IF SQLCA.sqlcode THEN
         LET l_success = FALSE
         CALL cl_err(l_mmaq001,SQLCA.sqlcode,1)
         CALL s_transaction_end("N","0")
         EXIT FOREACH
      END IF
      LET g_errno = ''
      CALL s_ammp424_effectivedate_chk(l_mmaq001,lc_param.mman001) RETURNING l_success,g_errno
      IF NOT l_success THEN
         CALL cl_errmsg('mmaq001',l_mmaq001,'',g_errno,1)
         LET l_success1 = FALSE
         CONTINUE FOREACH
      END IF
      CALL s_ammp424_effectivedate_upd(l_mmaq001,lc_param.mman001,l_mmaq005,lc_param.mmbm001,lc_param.mmbm002,lc_param.mmbn006,l_docno) RETURNING l_success,l_docno,g_errno
      IF NOT l_success THEN
         CALL cl_errmsg('mmaq001',l_mmaq001,'',g_errno,1)
         LET l_success1 = FALSE
         CONTINUE FOREACH 
      END IF
      LET l_cnt = l_cnt+1
   END FOREACH
#   IF NOT l_success1 THEN   #qiaozy---有错误报错，程序要可以继续运行
#      CALL cl_showmsg()     #qiaozy
#   END IF                   #qiaozy   
#   IF l_success1 THEN       #qiaozy
   IF l_cnt>0 THEN           #qiaozy---只有有资料延期时才做确认
      CALL s_ammt423_conf_upd(l_docno) RETURNING l_success
      IF NOT l_success THEN
#         LET l_success1 = FALSE #qiaozy
            
      END IF
   END IF
#qiaozy----mark---begin-程序不要管上面程序是否报错，只处理upd 状态
#   IF l_success1 THEN
#      CALL cl_err('','adz-00217',1)
#      CALL s_transaction_end("Y","0")
#   ELSE
#      CALL cl_err('','adz-00218',1)
#      CALL s_transaction_end("N","0")
#   END IF
#qiaozy---mark---end -----
#qiaozy----add---begin-程序不要管上面程序是否报错，只处理upd 状态
   IF l_cnt>0 THEN
      IF l_success THEN
         CALL cl_errmsg('',l_docno,'','adz-00217',1)
         CALL s_transaction_end("Y","0")
      ELSE
         LET l_success1 = FALSE
         CALL cl_errmsg('',l_docno,'','adz-00218',1)
         CALL s_transaction_end("N","0")
      END IF
      
   END IF
   CALL cl_showmsg()

#qiaozy----add---end-程序不要管上面程序是否报错，只处理upd 状态   
   LET lc_param.mman001 = ""
   LET lc_param.mmbn006 = ""
   LET lc_param.mmbm001 = ""
   LET lc_param.mmbm002 = ""
   CLEAR FORM]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   
   LET g_errshow = 1]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CONSTRUCT BY NAME lc_param.wc ON mmaq005
               
            AFTER CONSTRUCT    
               IF lc_param.wc = " 1=1" THEN
                  CALL cl_err('','sub-00379',1)
                  NEXT FIELD mmaq005
               END IF
         END CONSTRUCT]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#         DISPLAY  BY NAME lc_param.mman001_desc,lc_param.mmbn006_desc,lc_param.mmbm001_desc,lc_param.mmbm002_desc
#         DISPLAY  lc_param.mman001_desc TO mman001_desc
#         END DISPLAY]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         INPUT lc_param.mman001,lc_param.mmbn006,lc_param.mmbm001,lc_param.mmbm002 FROM mman001,mmbn006,mmbm001,mmbm002 ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               LET lc_param.mmbn006 = g_site
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()

            ON ACTION controlp INFIELD mman001
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               CALL q_mman001_10()                    #呼叫開窗
               LET lc_param.mman001 = g_qryparam.return1
               DISPLAY lc_param.mman001 TO mman001    #顯示到畫面上
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               NEXT FIELD mman001                     #返回原欄位
               
            ON ACTION controlp INFIELD mmbn006
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               LET g_qryparam.arg2 = '2'
               CALL q_ooed004()                       #呼叫開窗
               LET lc_param.mmbn006 = g_qryparam.return1
               DISPLAY lc_param.mmbn006 TO mmbn006    #顯示到畫面上
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               NEXT FIELD mmbn006                     #返回原欄位   

            ON ACTION controlp INFIELD mmbm001
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = '2056'
               CALL q_oocq002()                       #呼叫開窗
               LET lc_param.mmbm001 = g_qryparam.return1
               DISPLAY lc_param.mmbm001 TO mmbm001    #顯示到畫面上
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               NEXT FIELD mmbm001                     #返回原欄位 
               
            ON ACTION controlp INFIELD mmbm002
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = '2055'
               CALL q_oocq002()                    #呼叫開窗
               LET lc_param.mmbm002 = g_qryparam.return1
               DISPLAY lc_param.mmbm002 TO mmbm002    #顯示到畫面上
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               NEXT FIELD mmbm002                     #返回原欄位     
               
            AFTER FIELD mman001
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               IF NOT cl_null(lc_param.mman001) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = lc_param.mman001
                  IF NOT cl_chk_exist("v_mman001_5") THEN
                     LET lc_param.mman001 = ''
                     LET lc_param1.* = lc_param.*
                     CALL ammp424_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            AFTER FIELD mmbn006
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               IF NOT cl_null(lc_param.mmbn006) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = lc_param.mmbn006
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET lc_param.mmbn006 = ''
                     LET lc_param1.* = lc_param.*
                     CALL ammp424_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF  

            AFTER FIELD mmbm001
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               IF NOT cl_null(lc_param.mmbm001) THEN
                  IF NOT s_azzi650_chk_exist('2056',lc_param.mmbm001) THEN
                     LET lc_param.mmbm001 = ''
                     LET lc_param1.* = lc_param.*
                     CALL ammp424_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF  
               
            AFTER FIELD mmbm002
               LET lc_param1.* = lc_param.*
               CALL ammp424_desc()
               IF NOT cl_null(lc_param.mmbm002) THEN
                  IF NOT s_azzi650_chk_exist('2055',lc_param.mmbm002) THEN
                     LET lc_param.mmbm002 = ''
                     LET lc_param1.* = lc_param.*
                     CALL ammp424_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               
            AFTER INPUT 
               LET lc_param1.* = lc_param.*            
            
         END INPUT]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbeclear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="ammp424.description" ver="57" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000071
#+ 
#+ Filename...: ammp424
#+ Description: 會員卡自動續期批次處理作業
#+ Creator....: 02482(2014/04/09)
#+ Modifier...: 02296(2014/07/02)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammp424.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       mman001_desc LIKE type_t.chr80, 
   mmbn006_desc LIKE type_t.chr80, 
   mmbm001_desc LIKE type_t.chr80, 
   mmbm002_desc LIKE type_t.chr80, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammp424.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION ammp424_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammp424.main" ver="2" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL ammp424_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammp424 WITH FORM cl_ap_formpath("amm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ammp424_init()
 
      #進入選單 Menu (="N")
      CALL ammp424_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ammp424
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="ammp424.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="ammp424.process" ver="2" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION ammp424_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ammp424_process_cs CURSOR FROM ls_sql
#  FOREACH ammp424_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="ammp424.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ammp424_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="ammp424.ui_dialog" ver="11" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ammp424_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ammp424_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = ammp424_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>