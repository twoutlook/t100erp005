<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammt401" std_prog="ammt401" erpver="1.0" module="AMM" ver="7" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="construct.c.mmaw002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmaw002  #顯示到畫面上

            NEXT FIELD mmaw002                     #返回原欄位

]]>
  </point>
  <point name="input.c.mmaw002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaw_m.mmaw002             #給予default值

            #給予arg

            CALL q_ooea001_4()                                #呼叫開窗

            LET g_mmaw_m.mmaw002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaw_m.mmaw002 TO mmaw002              #顯示到畫面上

            NEXT FIELD mmaw002                          #返回原欄位

]]>
  </point>
  <point name="input.a.mmaw002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.ammt401_display_mmax006" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create mmax007
PRIVATE FUNCTION ammt401_display_mmax006()
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_order  like type_t.chr20
   DEFINE l_mmax007 LIKE mmax_t.mmax007
   DEFINE l_order1 STRING
   LET l_cnt = 0
   IF NOT cl_null(g_mmax_d[l_ac].mmax001) THEN
         
      SELECT COUNT(*) INTO l_cnt 
        FROM mmaq_t 
       WHERE mmaq002 = g_mmax_d[l_ac].mmax001 AND mmaqent = g_enterprise
      IF l_cnt > 0 THEN  
          
         SELECT MAX(mmaq001)  INTO g_mmax_d[l_ac].mmax007 
           FROM mmaq_t 
          WHERE mmaq002 = g_mmax_d[l_ac].mmax001 AND mmaqent = g_enterprise
    
         SELECT to_char(to_number(substr(g_mmax_d[l_ac].mmax007,LENGTH(g_mmax_d[l_ac].mmax004)+1,g_mmax_d[l_ac].mmax005))+1)
           INTO l_order
           FROM dual
         let l_order1 = l_order 
         LET  g_mmax_d[l_ac].mmax007 =  g_mmax_d[l_ac].mmax007[1,g_mmax_d[l_ac].mmax002-l_order1.getlength()],l_order  
      ELSE
         LET l_cnt = 1
         LET g_mmax_d[l_ac].mmax007 = g_mmax_d[l_ac].mmax004
         WHILE TRUE
            IF l_cnt>g_mmax_d[l_ac].mmax005 THEN
               EXIT WHILE
            END IF  
            IF l_cnt<g_mmax_d[l_ac].mmax005 THEN
               LET g_mmax_d[l_ac].mmax007 = g_mmax_d[l_ac].mmax007,"0"
            END IF
            IF l_cnt=g_mmax_d[l_ac].mmax005 THEN
               LET g_mmax_d[l_ac].mmax007 = g_mmax_d[l_ac].mmax007,"1"
            END IF
            LET l_cnt = l_cnt+1
         END WHILE
      END IF
          
      IF NOT cl_null( g_mmax_d_t.mmaxseq) THEN
         SELECT MAX(mmax008)  INTO l_mmax007 
           FROM mmax_t 
          WHERE mmax001 = g_mmax_d[l_ac].mmax001 AND mmaxent = g_enterprise
            AND mmaxdocno = g_mmaw_m.mmawdocno AND mmaxseq != g_mmax_d_t.mmaxseq
      ELSE
         SELECT MAX(mmax008)  INTO l_mmax007 
           FROM mmax_t 
          WHERE mmax001 = g_mmax_d[l_ac].mmax001 AND mmaxent = g_enterprise
            AND mmaxdocno = g_mmaw_m.mmawdocno
      END IF
      SELECT to_char(to_number(substr(l_mmax007,LENGTH(g_mmax_d[l_ac].mmax004)+1,g_mmax_d[l_ac].mmax005))+1)
        INTO l_order
        FROM dual
      LET l_order1 = l_order 
      LET  l_mmax007 =  l_mmax007[1,g_mmax_d[l_ac].mmax002-l_order1.getlength()],l_order  
         
      IF NOT cl_null(l_mmax007) THEN
         IF l_mmax007>g_mmax_d[l_ac].mmax007 THEN
            LET g_mmax_d[l_ac].mmax007=l_mmax007
         END IF
      END IF
      SELECT to_char(to_number(substr(g_mmax_d[l_ac].mmax007,LENGTH(g_mmax_d[l_ac].mmax004)+1,g_mmax_d[l_ac].mmax005))+g_mmax_d[l_ac].mmax006-1)
        INTO l_order
        FROM dual
      LET l_order1 = l_order 
      LET  g_mmax_d[l_ac].mmax008 =  g_mmax_d[l_ac].mmax007[1,g_mmax_d[l_ac].mmax002-l_order1.getlength()],l_order
      DISPLAY BY NAME g_mmax_d[l_ac].mmax008,g_mmax_d[l_ac].mmax007
  END IF    
     
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax001_display" order="2" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display mmmax001
PRIVATE FUNCTION ammt401_mmax001_display()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmax_d[l_ac].mmax001
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmax_d[l_ac].mmax001_desc = g_rtn_fields[1]
   DISPLAY g_mmax_d[l_ac].mmax001_desc to s_detail1[l_ac].mmax001_desc
 
   SELECT mman005,mman006,mman007,mman008,mman066 INTO                #add by yangxf add mman066 
   g_mmax_d[l_ac].mmax002,g_mmax_d[l_ac].mmax003,g_mmax_d[l_ac].mmax004,g_mmax_d[l_ac].mmax005,
   g_mmax_d[l_ac].mman066                                             #add by yangxf 
     FROM mman_t
    WHERE mman001 = g_mmax_d[l_ac].mmax001 AND mmanent = g_enterprise
   DISPLAY   g_mmax_d[l_ac].mmax002,g_mmax_d[l_ac].mmax003,g_mmax_d[l_ac].mmax004,g_mmax_d[l_ac].mmax005
        to s_detail1[l_ac].mmax002,s_detail1[l_ac].mmax003,s_detail1[l_ac].mmax004,s_detail1[l_ac].mmax005
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax001" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmax001
PRIVATE FUNCTION ammt401_mmax001()
   DEFINE  l_cnt    LIKE type_t.num5
   DEFINE  l_cnt1   LIKE type_t.num5
   define  l_mman003 like mman_t.mman003
   let l_mman003 = null
   LET  g_errno = null
   SELECT COUNT(*) into l_cnt FROM mman_t WHERE mman001=g_mmax_d[l_ac].mmax001 AND mmanent = g_enterprise
   IF l_cnt<=0 THEN
      LET g_errno = "amm-00003"
   ELSE
      SELECT COUNT(*) into l_cnt1 FROM mman_t 
       WHERE mman001=g_mmax_d[l_ac].mmax001 
         AND mmanent = g_enterprise
         AND mmanstus = 'Y'
      IF l_cnt1<=0 THEN   
         LET g_errno = "amm-00004"
      END IF         
   END IF
   if cl_null(g_errno) then
      select mman003 into l_mman003 from mman_t
       where mmanent = g_enterprise AND mman001 = g_mmax_d[l_ac].mmax001
      if l_mman003 = 'Y' THEN
         LET g_errno = "amm-00166"
      END IF      
   end if
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmawdocno" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmawdocno
PRIVATE FUNCTION ammt401_mmawdocno()
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   SELECT ooef004 INTO g_ooef004  FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
   LET l_cnt=0
   LET l_cnt1=0
   LET g_errno = null
   SELECT COUNT(*) INTO l_cnt  FROM ooba_t lEFT JOIN oobl_t ON ooba001=oobl001 AND ooba002=oobl002
    WHERE ooba001 = g_ooef004 AND ooba002=g_mmaw_m.mmawdocno
      AND oobl003 = 'ammt401'
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooba_t lEFT JOIN oobl_t ON ooba001=oobl001 AND ooba002=oobl002
       WHERE oobl001 = g_ooef004 AND oobl002=g_mmaw_m.mmawdocno
      AND oobl003 = 'ammt401' AND oobastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmaxseq" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create mmaxseq
PRIVATE FUNCTION ammt401_mmaxseq()
   IF (cl_null(g_mmax_d[l_ac].mmaxseq) OR g_mmax_d[l_ac].mmaxseq=0) THEN
      SELECT MAX(mmaxseq)+1 INTO g_mmax_d[l_ac].mmaxseq FROM mmax_t
       WHERE mmaxdocno = g_mmaw_m.mmawdocno AND mmaxent = g_enterprise
   END IF
   IF (cl_null(g_mmax_d[l_ac].mmaxseq) OR g_mmax_d[l_ac].mmaxseq=0) THEN
      LET g_mmax_d[l_ac].mmaxseq = 1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax009" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmax009,mmax010
PRIVATE FUNCTION ammt401_mmax009(p_mmax009)
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_cnt1 LIKE type_t.num5
   DEFINE p_mmax009 LIKE mmax_t.mmax009
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   SELECT count(*) INTO l_cnt FROM inaa_t WHERE inaa001 = p_mmax009
      AND inaaent = g_enterprise AND inaasite = g_mmaw_m.mmawsite and (inaa101<>'2' or inaa101 is null)
   IF l_cnt<=0 THEN
      LET g_errno = "aim-00064"
   ELSE
      SELECT count(*) INTO l_cnt1 FROM inaa_t WHERE inaa001 = p_mmax009
         AND inaaent = g_enterprise AND inaasite = g_mmaw_m.mmawsite AND (inaa101<>'2' or inaa101 is null)
         AND inaastus = 'Y'
      IF l_cnt1<=0 THEN
         LET g_errno = "amm-00018"
      END IF   
   END IF  
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax007" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk mmax007,mmax008
PRIVATE FUNCTION ammt401_mmax007(p_mmax007)
   DEFINE  l_cnt    LIKE type_t.num5
   DEFINE  p_mmax007   LIKE mmax_t.mmax007
   DEFINE  l_cnt1   LIKE type_t.num5
   DEFINE  l_n      LIKE type_t.num5
   define  l_mmax007  string
   
   LET  g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   let l_mmax007 = p_mmax007
   SELECT COUNT(*) INTO l_cnt FROM mmaq_t  WHERE mmaq001 = p_mmaq007 AND mmaqent = g_enterprise
   IF l_cnt >0 THEN
      LET g_errno = "amm-00005"
   END IF
   IF cl_null(g_errno) THEN
      IF p_mmax007[1,g_mmax_d[l_ac].mmax003]<>g_mmax_d[l_ac].mmax004 THEN
         LET g_errno = "amm-00138"
      ELSE
         IF l_mmax007.getLength()<>g_mmax_d[l_ac].mmax002 THEN
            LET g_errno = "amm-00137"
         END IF
      END IF
      IF cl_null(g_errno) THEN
         FOR l_n=g_mmax_d[l_ac].mmax003 TO g_mmax_d[l_ac].mmax002-1
            IF p_mmax007[l_n+1,l_n+1] NOT MATCHES '[0123456789]' THEN
               LET g_errno = "amm-00139"
               RETURN
             END IF         
         END FOR
      END IF   
   END IF
   IF cl_null(g_errno) THEN
      IF NOT cl_null(g_mmax_d[l_ac].mmax007) AND NOT cl_null(g_mmax_d[l_ac].mmax008) THEN
#         SELECT count(*) INTO l_cnt1 FROM mmaq_t WHERE mmaq001 >= g_mmax_d[l_ac].mmax007
#            AND mmaq001 <= g_mmax_d[l_ac].mmax008
#            AND mmaqent = g_enterprise
#         IF l_cnt1>0 THEN
#            LET g_errno = "agc-00043"
#         END IF
         call ammt401_chk_mmaq001(g_mmaw_m.mmawdocno)
         IF cl_null(g_errno) THEN
            IF g_mmax_d[l_ac].mmax007>g_mmax_d[l_ac].mmax008 THEN
               LET g_errno = "amm-00062"
            END IF
         END IF 
                    
      END IF
   END IF 
      
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax009_reference" order="8" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display mmax009
PRIVATE FUNCTION ammt401_mmax009_reference()
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_mmax_d[l_ac].mmax009
#   CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite='"||g_mmaw_m.mmawsite||"' AND inaa001=? ","") RETURNING g_rtn_fields
#   LET g_mmax_d[l_ac].mmax009_desc = '', g_rtn_fields[1] , ''
#   DISPLAY  g_mmax_d[l_ac].mmax009_desc to s_detail1[l_ac].mmax009_desc
   CALL s_desc_get_stock_desc(g_mmaw_m.mmawsite,g_mmax_d[l_ac].mmax009) RETURNING g_mmax_d[l_ac].mmax009_desc
   DISPLAY  g_mmax_d[l_ac].mmax009_desc to s_detail1[l_ac].mmax009_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax010_reference" order="9" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display mmax010
PRIVATE FUNCTION ammt401_mmax010_reference()
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_mmax_d[l_ac].mmax010
#   CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite='"||g_mmaw_m.mmawsite||"' AND inaa001=? ","") RETURNING g_rtn_fields
#   LET g_mmax_d[l_ac].mmax010_desc = '', g_rtn_fields[1] , ''
#   DISPLAY  g_mmax_d[l_ac].mmax010_desc to s_detail1[l_ac].mmax010_desc
   CALL s_desc_get_stock_desc(g_mmaw_m.mmawsite,g_mmax_d[l_ac].mmax010) RETURNING g_mmax_d[l_ac].mmax010_desc
   DISPLAY  g_mmax_d[l_ac].mmax010_desc to s_detail1[l_ac].mmax010_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt401_create_mmax006" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#create mmax006
PRIVATE FUNCTION ammt401_create_mmax006()
   DEFINE l_cnt  LIKE mmax_t.mmax006
   LET l_cnt = 0
   IF NOT cl_null(g_mmax_d[l_ac].mmax007) AND NOT cl_null(g_mmax_d[l_ac].mmax008) THEN
      
      SELECT to_number(substr(g_mmax_d[l_ac].mmax008,LENGTH(g_mmax_d[l_ac].mmax004)+1,g_mmax_d[l_ac].mmax005))-to_number(substr(g_mmax_d[l_ac].mmax007,LENGTH(g_mmax_d[l_ac].mmax004)+1,g_mmax_d[l_ac].mmax005))+1
        INTO l_cnt
        FROM dual
      LET g_mmax_d[l_ac].mmax006 = l_cnt
      DISPLAY g_mmax_d[l_ac].mmax006 TO s_detail1[l_ac].mmax006 
         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmawsite" order="11" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#chk mmawsite
PRIVATE FUNCTION ammt401_mmawsite(p_mmawsite)
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_cnt1    LIKE type_t.num5 
   DEFINE p_mmawsite LIKE mmaw_t.mmawsite
   DEFINE l_sql     STRING
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   LET l_sql="SELECT COUNT(*)  FROM ooed_t WHERE ooed004 ='",p_mmawsite,"' AND ooed001='8' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null) ",
             "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_site,"' AND ooed001='8' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null) ",
             "  CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='8' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"'))"
   PREPARE l_sql_ooea_pre1 FROM l_sql
   EXECUTE l_sql_ooea_pre1 INTO l_cnt   
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00163"
   ELSE
      LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooea_t WHERE ooea001=ooed004 AND ooed004 ='",p_mmawsite,"' AND ooed001='8' AND ooeastus='Y' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null)",
             "   AND ooea001 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_site,"' AND ooed001='8' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null) ",
             "   CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='8' ",
             "   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             "         (SELECT ooea001 FROM ooea_t WHERE ooea001='",g_site,"'))"
      PREPARE l_sql_ooea_pre2 FROM l_sql
      EXECUTE l_sql_ooea_pre2 INTO l_cnt1       
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmax007_after" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#chk
PRIVATE FUNCTION ammt401_mmax007_after(p_cmd)
   DEFINE l_count  LIKE type_t.num5
   DEFINE p_cmd    LIKE type_t.chr1
   LET l_count = 0
   LET g_errno = NULL
   IF NOT cl_null( g_mmax_d[l_ac].mmax007)  AND NOT cl_null( g_mmax_d[l_ac].mmax008) THEN 
      IF p_cmd = 'u' THEN   
         SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
            AND mmax001 = g_mmax_d[l_ac].mmax001 AND ((mmax007 BETWEEN g_mmax_d[l_ac].mmax007 AND g_mmax_d[l_ac].mmax008)
             OR (mmax008 BETWEEN g_mmax_d[l_ac].mmax007 AND g_mmax_d[l_ac].mmax008)) AND ((mmax007 != g_mmax_d_t.mmax007)
             OR mmax008 != g_mmax_d_t.mmax008) AND mmaxseq != g_mmax_d_t.mmaxseq
      ELSE
         SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
         AND mmax001 = g_mmax_d[l_ac].mmax001 AND ((mmax007 BETWEEN g_mmax_d[l_ac].mmax007 AND g_mmax_d[l_ac].mmax008)
          OR (mmax008 BETWEEN g_mmax_d[l_ac].mmax007 AND g_mmax_d[l_ac].mmax008)) 
      END IF      
   END IF
   IF l_count >0 THEN
      LET g_errno = "amm-00072"
   ELSE   
      IF NOT cl_null( g_mmax_d[l_ac].mmax007) THEN 
         IF p_cmd = 'u' THEN   
            SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
               AND mmax001 = g_mmax_d[l_ac].mmax001 AND ((g_mmax_d[l_ac].mmax007 BETWEEN mmax007 AND mmax008)) 
               AND ((mmax007 != g_mmax_d_t.mmax007) OR mmax008 != g_mmax_d_t.mmax008)
               AND mmaxseq != g_mmax_d_t.mmaxseq
         ELSE
            SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
               AND mmax001 = g_mmax_d[l_ac].mmax001 AND (g_mmax_d[l_ac].mmax007 BETWEEN mmax007 AND mmax008)
         END IF      
      END IF
      IF l_count >0 THEN
         LET g_errno = "amm-00072"
      ELSE
         
         IF NOT cl_null( g_mmax_d[l_ac].mmax008) THEN 
            IF p_cmd = 'u' THEN   
               SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
                  AND mmax001 = g_mmax_d[l_ac].mmax001 AND ((g_mmax_d[l_ac].mmax008 BETWEEN mmax007 AND mmax008)) 
                  AND ((mmax007 != g_mmax_d_t.mmax007) OR mmax008 != g_mmax_d_t.mmax008)
                  AND mmaxseq != g_mmax_d_t.mmaxseq
            ELSE
               SELECT count(*) INTO l_count FROM mmax_t WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
                  AND mmax001 = g_mmax_d[l_ac].mmax001 AND (g_mmax_d[l_ac].mmax008 BETWEEN mmax007 AND mmax008) 
            END IF      
         END IF
         IF l_count >0 THEN
            LET g_errno = "amm-00072"
         END IF   
      END IF      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammt401_mmawsite_display" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display mmawsite
PRIVATE FUNCTION ammt401_mmawsite_display()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaw_m.mmawsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmaw_m.mmawsite_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_mmaw_m.mmawsite_desc
END FUNCTION]]>
  </point>
  <point name="function.ammt401_chk_mmaq001" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#chk mmaq001
PRIVATE FUNCTION ammt401_chk_mmaq001(p_mmawdocno)
DEFINE    p_mmawdocno     LIKE mmaw_t.mmawdocno
DEFINE    r_success       LIKE type_t.chr1000
DEFINE    l_mmax001       LIKE mmax_t.mmax001
DEFINE    l_mman042       LIKE mman_t.mman042
DEFINE    l_mman006       LIKE mman_t.mman006    #固定位數
DEFINE    l_mman007       LIKE mman_t.mman007    #固定編碼
DEFINE    l_mmax007       LIKE mmax_t.mmax007    #開始卡號
DEFINE    l_mmax008       LIKE mmax_t.mmax008    #結束卡號
DEFINE    l_mmaxent       LIKE mmax_t.mmaxent
DEFINE    l_start_no        LIKE type_t.num20
DEFINE    l_end_no          LIKE type_t.num20
DEFINE    l_start_no1       LIKE type_t.num20
DEFINE    l_length          LIKE type_t.num5
DEFINE    l_length1         LIKE type_t.num5
DEFINE    l_nums            LIKE type_t.num20
DEFINE    l_sql2            STRING
DEFINE    l_sql             STRING
DEFINE    l_count           LIKE type_t.num5
DEFINE    l_n               LIKE type_t.num5
DEFINE    l_cnt             LIKE type_t.num5
   
   #检查:应在事物中的
   LET l_cnt = 0
   CREATE TEMP TABLE ammt401_tmp
   (
      mmaq001 varchar(30)
   );
   DELETE FROM ammt401_tmp
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
   
   LET r_success = TRUE
   LET l_mman006=NULL
   LET l_mman007=NULL

   
      SELECT mman006,mman007 INTO l_mman006,l_mman007
        FROM mman_t WHERE mman001=g_mmax_d[l_ac].mmax001 AND mmanent = g_enterprise
           
      LET l_length  = LENGTH(g_mmax_d[l_ac].mmax007)
      LET l_length1 = LENGTH(g_mmax_d[l_ac].mmax007)-l_mman006
      LET l_start_no = g_mmax_d[l_ac].mmax007[l_mman006+1,l_length]
      LET l_end_no = g_mmax_d[l_ac].mmax008[l_mman006+1,l_length]
      LET l_nums = l_end_no - l_start_no + 1
      IF cl_null(l_nums) THEN LET l_nums = 0 END IF
      LET l_start_no1 = l_start_no - 1

      LET l_sql2 = " INSERT INTO ammt401_tmp(mmaq001)",   
                   "SELECT ('",l_mman007 CLIPPED,"' || ",
                   " substr(power(10,",l_length1,"-length(id+",l_start_no1,")) || (id+",l_start_no1,"),2))",
                   " AS lrt021 ",
                   "  FROM (SELECT level AS id FROM dual ",
                   "         CONNECT BY level <=",l_nums,")"
      PREPARE l_sql2_pre FROM l_sql2             
      EXECUTE  l_sql2_pre 
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         RETURN
      END IF
      SELECT count(*) INTO l_cnt FROM mmaq_t WHERE mmaqent = l_mmaxent
         AND mmaq001 IN (SELECT mmaq001 FROM ammt401_tmp)
      IF l_cnt>0 THEN
         LET g_errno = "agc-00043"
         RETURN
      END IF
   
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill.fill" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #add by yangxf -----start----
         SELECT mman066 INTO g_mmax_d[l_ac].mman066                                             
           FROM mman_t
          WHERE mman001 = g_mmax_d[l_ac].mmax001
            AND mmanent = g_enterprise
         #add by yangxf ---end----]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'mmawsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc = g_wc.trim()]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_mmawsite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_mmawsite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_mmawsite_desc]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.a.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawcnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawcrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawmoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "inba005='5' "
            CALL q_inbadocno()             #呼叫開窗
            LET g_qryparam.where = NULL
            DISPLAY g_qryparam.return1 TO mmaw001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO inbadocdt #輸入日期 

            NEXT FIELD mmaw001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawcnfid  #顯示到畫面上

            NEXT FIELD mmawcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawcrtdp  #顯示到畫面上

            NEXT FIELD mmawcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawcrtid  #顯示到畫面上

            NEXT FIELD mmawcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mmawdocno_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawdocno  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO mmawdocdt #單據日期 
               #DISPLAY g_qryparam.return3 TO mmaw002 #所屬營運據點 

            NEXT FIELD mmawdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawmodid  #顯示到畫面上

            NEXT FIELD mmawmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawowndp  #顯示到畫面上

            NEXT FIELD mmawowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmawownid  #顯示到畫面上

            NEXT FIELD mmawownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawsite" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmawsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mmawsite  #顯示到畫面上

            NEXT FIELD mmawsite                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmax001  #顯示到畫面上

            NEXT FIELD mmax001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmax009  #顯示到畫面上

            NEXT FIELD mmax009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmax010  #顯示到畫面上

            NEXT FIELD mmax010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      IF g_mmaw_m.mmawstus <>'N' THEN
#      CALL cl_set_act_visible("modify,delete", FALSE)
#   ELSE
#      CALL cl_set_act_visible("modify,delete", TRUE)   
#   END IF
   IF g_mmaw_m.mmawstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE l_ooff013             LIKE ooff_t.ooff013
DEFINE l_success             LIKE type_t.num5 ]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="init.define" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add]]>
  </point>
  <point name="init.init" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("mmawstus",false)
   CALL cl_set_combo_scc('mman066','6823')            #add by yangxf 
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   
   #150427-00001#9 150604 By pomelo add(S)
   LET l_success = ''
   CALL s_lot_auto_create_tmp('aint911') RETURNING l_success
   LET l_success = ''
   CALL s_aooi390_cre_tmp_table() RETURNING l_success
   #150427-00001#9 150604 By pomelo add(E)]]>
  </point>
  <point name="input.a.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.mmawcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcnfid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcnfid_desc
]]>
  </point>
  <point name="input.a.mmawcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcrtdp_desc
]]>
  </point>
  <point name="input.a.mmawcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcrtid_desc
]]>
  </point>
  <point name="input.a.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaw_m.mmawdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmaw_m.mmawdocno != g_mmawdocno_t ))) THEN 
                  
#                  CALL ammt401_mmawdocno()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmaw_m.mmawdocno,g_errno,1)
#                     LET g_mmaw_m.mmawdocno = g_mmawdocno_t
#                     NEXT FIELD mmawdocno
#                  END IF
                  
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_mmaw_m.mmawdocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_mmaw_m.mmawdocno = g_mmawdocno_t
                     NEXT FIELD mmawdocno
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.mmawmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawmodid_desc
]]>
  </point>
  <point name="input.a.mmawowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawowndp_desc
]]>
  </point>
  <point name="input.a.mmawownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawownid_desc
]]>
  </point>
  <point name="input.a.mmawsite" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        LET g_mmaw_m.mmawsite_desc = null
            DISPLAY BY NAME g_mmaw_m.mmawsite_desc
             IF  NOT cl_null(g_mmaw_m.mmawsite) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND ( g_mmaw_m.mmawsite != g_mmaw_m_t.mmawsite or g_mmaw_m_t.mmawsite is null))) THEN 
#                  CALL ammt401_mmawsite(g_mmaw_m.mmawsite)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmaw_m.mmawsite,g_errno,1)
#                     LET g_mmaw_m.mmawsite = g_mmaw_m_t.mmawsite
#                     CALL ammt401_mmawsite_display()
#                     NEXT FIELD mmawsite
#                  END IF
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
# 
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_mmaw_m.mmawsite
#                  LET g_chkparam.arg2 = '8'
#                  LET g_chkparam.arg3 = g_site
#
#
#                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_ooed004") THEN
#
#                  ELSE
#                     #檢查失敗時後續處理
#                     LET g_mmaw_m.mmawsite = g_mmaw_m_t.mmawsite
#                     CALL ammt401_mmawsite_display()
#                     NEXT FIELD mmawsite
#                  END IF
                  CALL s_aooi500_chk(g_prog,'mmawsite',g_mmaw_m.mmawsite,g_mmaw_m.mmawsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmaw_m.mmawsite
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                  
                     LET g_mmaw_m.mmawsite = g_mmaw_m_t.mmawsite
                     CALL ammt401_mmawsite_display()
                     NEXT FIELD CURRENT
                  END IF
               END IF           
            END IF
            CALL ammt401_mmawsite_display()
            
            
]]>
  </point>
  <point name="input.a.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        LET g_mmax_d[l_ac].mmax001_desc = null
            DISPLAY  g_mmax_d[l_ac].mmax001_desc to s_detail1[l_ac].max001_desc
            let g_mmax_d[l_ac].mmax002 = null
            let g_mmax_d[l_ac].mmax003 = null
            let g_mmax_d[l_ac].mmax004 = null
            let g_mmax_d[l_ac].mmax005 = null
            DISPLAY  g_mmax_d[l_ac].mmax002,g_mmax_d[l_ac].mmax003,g_mmax_d[l_ac].mmax004,g_mmax_d[l_ac].mmax005
                 to s_detail1[l_ac].max002,s_detail1[l_ac].max003,s_detail1[l_ac].max004,s_detail1[l_ac].max005
            IF  NOT cl_null(g_mmax_d[l_ac].mmax001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax001 != g_mmax_d_t.mmax001))) THEN 
                  CALL ammt401_mmax001()
                  IF NOT cl_null(g_errno) THEN
                     CALL ammt401_mmax001_display()
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmax_d[l_ac].mmax001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmax_d[l_ac].mmax001 = g_mmax_d_t.mmax001
                     CALL ammt401_mmax001_display()
                     NEXT FIELD mmax001
                  END IF
                  LET g_mmax_d[l_ac].mmax006=null
                  LET g_mmax_d[l_ac].mmax007=null
                  LET g_mmax_d[l_ac].mmax008=null
               END IF
               CALL cl_set_comp_entry("mmax007,mmax008",TRUE) 
            ELSE
               CALL cl_set_comp_entry("mmax007,mmax008",FALSE)            
            END IF
            
            CALL ammt401_mmax001_display()
            
            
]]>
  </point>
  <point name="input.a.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF  NOT cl_null(g_mmax_d[l_ac].mmax006) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax006 != g_mmax_d_t.mmax006 or g_mmax_d_t.mmax006 is null))) THEN 
                  CALL ammt401_display_mmax006()
               END IF      
            END IF
]]>
  </point>
  <point name="input.a.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF  NOT cl_null(g_mmax_d[l_ac].mmax007) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax007 != g_mmax_d_t.mmax007 or g_mmax_d_t.mmax007 is null))) THEN 
                  CALL ammt401_mmax007(g_mmax_d[l_ac].mmax007)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmax_d[l_ac].mmax007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmax_d[l_ac].mmax007 = g_mmax_d_t.mmax007
                     NEXT FIELD mmax007
                  END IF
                  CALL ammt401_mmax007_after(l_cmd)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmax_d[l_ac].mmax007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmax_d[l_ac].mmax007 = g_mmax_d_t.mmax007
                     NEXT FIELD mmax007
                  END IF
                  IF cl_null(g_mmax_d[l_ac].mmax008) THEN
                     LET g_mmax_d[l_ac].mmax008 = g_mmax_d[l_ac].mmax007
                     DISPLAY g_mmax_d[l_ac].mmax008 TO s_detail1[l_ac].mmax008
                  END IF
                  CALL ammt401_create_mmax006()
               END IF      
            END IF  ]]>
  </point>
  <point name="input.a.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        
            IF  NOT cl_null(g_mmax_d[l_ac].mmax008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax008 != g_mmax_d_t.mmax008 or g_mmax_d_t.mmax008 is null))) THEN 
                  CALL ammt401_mmax007(g_mmax_d[l_ac].mmax008)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmax_d[l_ac].mmax008
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmax_d[l_ac].mmax008 = g_mmax_d_t.mmax008
                     
                     NEXT FIELD mmax008                  
                  END IF
                  CALL ammt401_mmax007_after(l_cmd)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mmax_d[l_ac].mmax008
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_mmax_d[l_ac].mmax008 = g_mmax_d_t.mmax008
                     NEXT FIELD mmax008
                  END IF
                  IF cl_null(g_mmax_d[l_ac].mmax007) THEN
                     LET g_mmax_d[l_ac].mmax007 = g_mmax_d[l_ac].mmax008
                     DISPLAY g_mmax_d[l_ac].mmax007 TO s_detail1[l_ac].mmax007
                  END IF
                  CALL ammt401_create_mmax006()
               END IF      
            END IF
            IF cl_null(g_mmax_d[l_ac].mmax007) THEN
               NEXT FIELD mmax007
            END IF]]>
  </point>
  <point name="input.a.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        LET g_mmax_d[l_ac].mmax009_desc = NULL
            DISPLAY g_mmax_d[l_ac].mmax009_desc TO s_detail1[l_ac].mmax009_desc
            IF  NOT cl_null(g_mmax_d[l_ac].mmax009) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax009 != g_mmax_d_t.mmax009 or g_mmax_d_t.mmax009 is null))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmaw_m.mmawsite
                  LET g_chkparam.arg2 = g_mmax_d[l_ac].mmax009


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001_4") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmax_d[l_ac].mmax009 = g_mmax_d_t.mmax009
                     call ammt401_mmax009_reference()
                     NEXT FIELD mmax009
                  END IF
#                  CALL ammt401_mmax009(g_mmax_d[l_ac].mmax009)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmax_d[l_ac].mmax009,g_errno,1)
#                     LET g_mmax_d[l_ac].mmax009 = g_mmax_d_t.mmax009
#                     call ammt401_mmax009_reference()
#                     NEXT FIELD mmax009                  
#                  END IF
               END IF      
            END IF
            call ammt401_mmax009_reference()]]>
  </point>
  <point name="input.a.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        LET g_mmax_d[l_ac].mmax010_desc = NULL
            DISPLAY g_mmax_d[l_ac].mmax010_desc TO s_detail1[l_ac].mmax010_desc
            IF  NOT cl_null(g_mmax_d[l_ac].mmax010) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_mmax_d[l_ac].mmax010 != g_mmax_d_t.mmax010 or g_mmax_d_t.mmax010 is null))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mmaw_m.mmawsite
                  LET g_chkparam.arg2 = g_mmax_d[l_ac].mmax010


                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001_4") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mmax_d[l_ac].mmax010 = g_mmax_d_t.mmax010
                     CALL ammt401_mmax010_reference()
                     NEXT FIELD mmax010 
                  END IF
#                  CALL ammt401_mmax009(g_mmax_d[l_ac].mmax010)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_mmax_d[l_ac].mmax010,g_errno,1)
#                     LET g_mmax_d[l_ac].mmax010 = g_mmax_d_t.mmax010
#                     CALL ammt401_mmax010_reference()
#                     NEXT FIELD mmax010                  
#                  END IF
               END IF      
            END IF
            CALL ammt401_mmax010_reference()]]>
  </point>
  <point name="input.a.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmaw_m.mmawdocno) AND NOT cl_null(g_mmax_d[l_ac].mmaxseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmaw_m.mmawdocno != g_mmawdocno_t OR g_mmax_d[l_ac].mmaxseq != g_mmax_d_t.mmaxseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmax_t WHERE "||"mmaxent = '" ||g_enterprise||"' AND "||"mmaxdocno = '"||g_mmaw_m.mmawdocno ||"' AND "|| "mmaxseq = '"||g_mmax_d[l_ac].mmaxseq ||"'",'std-00004',0) THEN 
                     LET g_mmax_d[l_ac].mmaxseq = g_mmax_d_t.mmaxseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.mmaxsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            

]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.b.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.mmawsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.before_dialog" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmawsite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmaxseq
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      let g_errshow=1
   SELECT ooef004 INTO g_ooef004  FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        let g_mmax_d[l_ac].mmaxsite = g_mmaw_m.mmawsite
            let g_mmax_d[l_ac].mmaxunit = g_mmaw_m.mmawunit
            CALL ammt401_mmaxseq()]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF NOT cl_null(g_mmax_d[l_ac].mmax001) THEN
               CALL cl_set_comp_entry("mmax007,mmax008",TRUE)
            ELSE
               CALL cl_set_comp_entry("mmax007,mmax008",FALSE)
            END IF]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.c.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaw_m.mmawdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = "ammt401" #單據性質

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmaw_m.mmawdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaw_m.mmawdocno TO mmawdocno              #顯示到畫面上

            NEXT FIELD mmawdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmawsite" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmaw_m.mmawsite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmawsite',g_mmaw_m.mmawsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_mmaw_m.mmawsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmaw_m.mmawsite TO mmawsite              #顯示到畫面上
            CALL ammt401_mmawsite_display()
            NEXT FIELD mmawsite                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmax_d[l_ac].mmax001             #給予default值

            #給予arg

            CALL q_mman001()                                #呼叫開窗

            LET g_mmax_d[l_ac].mmax001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmax_d[l_ac].mmax001 TO mmax001              #顯示到畫面上
            call ammt401_mmax001_display()
            NEXT FIELD mmax001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmax_d[l_ac].mmax009             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 =g_mmaw_m.mmawsite
            CALL q_inaa001_6()                                #呼叫開窗

            LET g_mmax_d[l_ac].mmax009 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 =null
            DISPLAY g_mmax_d[l_ac].mmax009 TO mmax009              #顯示到畫面上
            call ammt401_mmax009_reference()
            NEXT FIELD mmax009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmax_d[l_ac].mmax010             #給予default值

            #給予arg
            LET g_qryparam.arg1 =g_mmaw_m.mmawsite
            CALL q_inaa001_6()                                #呼叫開窗

            LET g_mmax_d[l_ac].mmax010 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 =null
            DISPLAY g_mmax_d[l_ac].mmax010 TO mmax010              #顯示到畫面上
            call ammt401_mmax010_reference()
            NEXT FIELD mmax010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.g.mmaw001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.mmawdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.mmawdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.mmawsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.mmawstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.mmawunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmax010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.mmaxseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                 IF NOT cl_null(g_mmaw_m.mmawdocno) THEN
                     CALL s_aooi200_gen_docno(g_site,g_mmaw_m.mmawdocno,g_mmaw_m.mmawdocdt,g_prog) 
                     RETURNING  g_success,g_mmaw_m.mmawdocno
                     IF g_success<>'1' THEN
                        INITIALIZE g_errparam TO NULL
LET g_errparam.code = "amm-00001"
LET g_errparam.extend = g_mmaw_m.mmawdocno
LET g_errparam.popup = TRUE
CALL cl_err()

                        NEXT FIELD mmawdocno
                     ELSE
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmaw_t WHERE "||"mmawent = '" ||g_enterprise|| "'  AND "||"mmawdocno = '"||g_mmaw_m.mmawdocno ||"'",'std-00004',0) THEN 
                           LET g_mmaw_m.mmawdocno = g_mmawdocno_t
                           NEXT FIELD CURRENT
                        END IF    
                                      
                     END IF
                     LET g_mmaw_m_t.mmawdocno = g_mmaw_m.mmawdocno 
                  END IF ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert.default" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_mmaw_m.mmawdocdt = g_today
#      LET g_mmaw_m.mmawsite = g_site
      CALL s_aooi500_default(g_prog,'mmawsite',g_mmaw_m.mmawsite)
         RETURNING l_insert,g_mmaw_m.mmawsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_mmaw_m.mmawunit = g_mmaw_m.mmawsite
      #add by yangxf ---start----预设单别
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_mmaw_m.mmawsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_mmaw_m.mmawdocno = l_doctype
      #add by yangxf ---end----
      CALL ammt401_mmawsite_display()
      LET g_mmaw_m_t.* = g_mmaw_m.*]]>
  </point>
  <point name="insert.define" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5          #add by yagnxf 
   DEFINE l_doctype     LIKE rtai_t.rtai004       #add by yangxf]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.define" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.exit" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   ##150427-00001#9 150604s By pomelo add(S)
   CALL s_lot_auto_drop_tmp('aint911')
   CALL s_aooi390_drop_tmp_table()
   ##150427-00001#9 150604 By pomelo add(E)]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      SELECT ooef004 INTO g_ooef004  FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.demo" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6','ammt401',g_mmaw_m.mmawdocno,'','','','','','','','','')
#               CALL s_aooi360_sel('6','ammt401',g_mmaw_m.mmawdocno,'','','','','','','','','4') RETURNING l_success,l_ooff013]]>
  </point>
  <point name="menu.demo2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_mmax_d[l_ac].mmaxseq) THEN
                  CALL aooi360_02('7','ammt401',g_mmaw_m.mmawdocno,g_mmax_d[l_ac].mmaxseq,'','','','','','','','')
#                  CALL s_aooi360_sel('7','ammt401',g_mmaw_m.mmawdocno,g_mmax_d[l_ac].mmaxseq,'','','','','','','','4') RETURNING l_success,l_ooff013
               ELSE
               END IF]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_mmaw_m.mmawstus MATCHES "[DR]" THEN 
         LET g_mmaw_m.mmawstus = "N"
      END IF]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_mmaw_m.mmawstus MATCHES "[DR]" THEN 
      LET g_mmaw_m.mmawstus = "N"
   END IF
   IF g_mmaw_m.mmawstus<>'N' THEN
      RETURN
   END IF ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="reproduce.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_mmaw_m.mmawdocdt = g_today
   LET g_mmaw_m.mmawstus = "N"
   LET g_mmaw_m.mmaw001 = null
#   let g_mmaw_m.mmawsite = g_site
   CALL s_aooi500_default(g_prog,'mmawsite',g_mmaw_m.mmawsite)
      RETURNING l_insert,g_mmaw_m.mmawsite
   IF NOT l_insert THEN
      RETURN
   END IF
   LET g_mmaw_m.mmawunit = g_mmaw_m.mmawsite
   CALL ammt401_mmawsite_display()]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_ammt401_conf_chk(g_mmaw_m.mmawdocno,g_mmaw_m.mmawstus) RETURNING l_success,g_errno
   IF l_success THEN
            
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = g_mmaw_m.mmawdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_mmaw_m.mmawstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("mmawsite",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aooi500_comp_entry(g_prog,'mmawsite') THEN
      CALL cl_set_comp_entry("mmawsite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmax_d[l_ac].mmax001
            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmax_d[l_ac].mmax001_desc = g_rtn_fields[1]
            DISPLAY  g_mmax_d[l_ac].mmax001_desc to s_detail1[l_ac].mmax001_desc
            CALL ammt401_mmax009_reference()
            CALL ammt401_mmax010_reference()]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawsite_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawsite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmaw_m.mmawcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mmaw_m.mmawcnfid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_mmaw_m.mmawcnfid_desc
]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      SELECT mmawcnfid,mmawcnfdt,mmaw001 INTO g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmaw001 FROM mmaw_t
    WHERE mmawent = g_enterprise AND mmawdocno = g_mmaw_m.mmawdocno
   DISPLAY BY NAME g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmaw001
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmaw_m.mmawcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_mmaw_m.mmawcnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_mmaw_m.mmawcnfid_desc
   IF g_mmaw_m.mmawstus NOT MATCHES "[NDR]"  THEN
      CALL cl_set_act_visible("modify,delete", FALSE)
   else
      CALL cl_set_act_visible("modify,delete", true)   
   END IF 
   ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt401_conf_chk(g_mmaw_m.mmawdocno,g_mmaw_m.mmawstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_ammt401_conf_upd(g_mmaw_m.mmawdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')               
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_mmaw_m.mmawdocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN            
         END IF
                
      WHEN 'X'
         CALL s_ammt401_void_chk(g_mmaw_m.mmawdocno,g_mmaw_m.mmawstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt401_void_upd(g_mmaw_m.mmawdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_mmaw_m.mmawdocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN    
         END IF
      WHEN 'N'
         CALL s_ammt401_unconf_chk(g_mmaw_m.mmawdocno,g_mmaw_m.mmawstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_ammt401_unconf_upd(g_mmaw_m.mmawdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_mmaw_m.mmawdocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN    
         END IF   
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_mmaw_m.mmawstus = 'X' THEN
      RETURN
   END IF
   IF g_mmaw_m.mmawstus = 'C' THEN  #結案狀態
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("invalid,unconfirmed,confirmed", true)
#      IF g_mmaw_m.mmawstus <> 'N' THEN
#         CALL cl_set_act_visible("invalid", FALSE)
#      ELSE
#         CALL cl_set_act_visible("invalid", TRUE)
#         CALL cl_set_act_visible("unconfirmed", FALSE)      
#      END IF
#      IF g_mmaw_m.mmawstus = 'Y' THEN
#         CALL cl_set_act_visible("unconfirmed", TRUE)
#         CALL cl_set_act_visible("confirmed", FALSE)      
#      END IF
#      IF g_mmaw_m.mmawstus = 'X' THEN
#         CALL cl_set_act_visible("invalid,unconfirmed,confirmed", false)      
#      END IF
#      CALL cl_set_act_visible("signing,withdraw",FALSE)
#      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
#      CALL cl_set_act_visible("closed",FALSE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_mmaw_m.mmawstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="ammt401.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ammt401_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.b_fill" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt401_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_mmax_d.clear()    #g_mmax_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt401_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE mmaxseq,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006,mmax007, 
             mmax008,mmax009,mmax010,mmaxsite,mmaxunit ,t1.mmanl003 ,t2.inaa002 ,t3.inaa002 FROM mmax_t", 
                
                     " INNER JOIN mmaw_t ON mmawdocno = mmaxdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmax001 AND t1.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN inaa_t t2 ON t2.inaaent='"||g_enterprise||"' AND t2.inaa001=mmax009 AND t2.inaasite=mmaxsite  ",
               " LEFT JOIN inaa_t t3 ON t3.inaaent='"||g_enterprise||"' AND t3.inaa001=mmax010 AND t3.inaasite=mmaxsite  ",
 
                     " WHERE mmaxent=? AND mmaxdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmax_t.mmaxseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt401_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR ammt401_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmaw_m.mmawdocno
                                               
      FOREACH b_fill_cs INTO g_mmax_d[l_ac].mmaxseq,g_mmax_d[l_ac].mmax001,g_mmax_d[l_ac].mmax002,g_mmax_d[l_ac].mmax003, 
          g_mmax_d[l_ac].mmax004,g_mmax_d[l_ac].mmax005,g_mmax_d[l_ac].mmax006,g_mmax_d[l_ac].mmax007, 
          g_mmax_d[l_ac].mmax008,g_mmax_d[l_ac].mmax009,g_mmax_d[l_ac].mmax010,g_mmax_d[l_ac].mmaxsite, 
          g_mmax_d[l_ac].mmaxunit,g_mmax_d[l_ac].mmax001_desc,g_mmax_d[l_ac].mmax009_desc,g_mmax_d[l_ac].mmax010_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmax_d.deleteElement(g_mmax_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt401_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_mmax_d.getLength()
      LET g_mmax_d_mask_o[l_ac].* =  g_mmax_d[l_ac].*
      CALL ammt401_mmax_t_mask()
      LET g_mmax_d_mask_n[l_ac].* =  g_mmax_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt401_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt401_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.browser_fill" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt401_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmawdocno ",
                      " FROM mmaw_t ",
                      " ",
                      " LEFT JOIN mmax_t ON mmaxent = mmawent AND mmawdocno = mmaxdocno ", "  ",
                      #add-point:browser_fill段sql(mmax_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE mmawent = '" ||g_enterprise|| "' AND mmaxent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmaw_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmawdocno ",
                      " FROM mmaw_t ", 
                      "  ",
                      "  ",
                      " WHERE mmawent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmaw_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_mmaw_m.* TO NULL
      CALL g_mmax_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.mmawdocno,t0.mmawdocdt,t0.mmawsite,t0.mmaw001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.mmawstus,t0.mmawdocno,t0.mmawdocdt,t0.mmawsite,t0.mmaw001,t1.ooefl003 ", 

               " FROM mmaw_t t0",
               "  ",
               "  LEFT JOIN mmax_t ON mmaxent = mmawent AND mmawdocno = mmaxdocno ", "  ", 
               #add-point:browser_fill段sql(mmax_t1)
               {<point name="browser_fill.join.mmax_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.mmawsite AND t1.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.mmawent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmaw_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY mmawdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"mmaw_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmawdocno,g_browser[g_cnt].b_mmawdocdt, 
       g_browser[g_cnt].b_mmawsite,g_browser[g_cnt].b_mmaw001,g_browser[g_cnt].b_mmawsite_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL ammt401_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_mmawdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.construct" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt401_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmaw_m.* TO NULL
   CALL g_mmax_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmawsite,mmawdocdt,mmawdocno,mmaw001,mmawunit,mmawstus,mmawownid,mmawowndp, 
          mmawcrtid,mmawcrtdp,mmawcrtdt,mmawmodid,mmawmoddt,mmawcnfid,mmawcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<mmawcrtdt>>----
         AFTER FIELD mmawcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<mmawmoddt>>----
         AFTER FIELD mmawmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmawcnfdt>>----
         AFTER FIELD mmawcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmawpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmawsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawsite
            #add-point:ON ACTION controlp INFIELD mmawsite
            {<point name="construct.c.mmawsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawsite
            #add-point:BEFORE FIELD mmawsite
            {<point name="construct.b.mmawsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawsite
            
            #add-point:AFTER FIELD mmawsite
            {<point name="construct.a.mmawsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawdocdt
            #add-point:BEFORE FIELD mmawdocdt
            {<point name="construct.b.mmawdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawdocdt
            
            #add-point:AFTER FIELD mmawdocdt
            {<point name="construct.a.mmawdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawdocdt
            #add-point:ON ACTION controlp INFIELD mmawdocdt
            {<point name="construct.c.mmawdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmawdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawdocno
            #add-point:ON ACTION controlp INFIELD mmawdocno
            {<point name="construct.c.mmawdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawdocno
            #add-point:BEFORE FIELD mmawdocno
            {<point name="construct.b.mmawdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawdocno
            
            #add-point:AFTER FIELD mmawdocno
            {<point name="construct.a.mmawdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmaw001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaw001
            #add-point:ON ACTION controlp INFIELD mmaw001
            {<point name="construct.c.mmaw001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaw001
            #add-point:BEFORE FIELD mmaw001
            {<point name="construct.b.mmaw001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaw001
            
            #add-point:AFTER FIELD mmaw001
            {<point name="construct.a.mmaw001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawunit
            #add-point:BEFORE FIELD mmawunit
            {<point name="construct.b.mmawunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawunit
            
            #add-point:AFTER FIELD mmawunit
            {<point name="construct.a.mmawunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawunit
            #add-point:ON ACTION controlp INFIELD mmawunit
            {<point name="construct.c.mmawunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawstus
            #add-point:BEFORE FIELD mmawstus
            {<point name="construct.b.mmawstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawstus
            
            #add-point:AFTER FIELD mmawstus
            {<point name="construct.a.mmawstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawstus
            #add-point:ON ACTION controlp INFIELD mmawstus
            {<point name="construct.c.mmawstus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmawownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawownid
            #add-point:ON ACTION controlp INFIELD mmawownid
            {<point name="construct.c.mmawownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawownid
            #add-point:BEFORE FIELD mmawownid
            {<point name="construct.b.mmawownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawownid
            
            #add-point:AFTER FIELD mmawownid
            {<point name="construct.a.mmawownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawowndp
            #add-point:ON ACTION controlp INFIELD mmawowndp
            {<point name="construct.c.mmawowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawowndp
            #add-point:BEFORE FIELD mmawowndp
            {<point name="construct.b.mmawowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawowndp
            
            #add-point:AFTER FIELD mmawowndp
            {<point name="construct.a.mmawowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawcrtid
            #add-point:ON ACTION controlp INFIELD mmawcrtid
            {<point name="construct.c.mmawcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawcrtid
            #add-point:BEFORE FIELD mmawcrtid
            {<point name="construct.b.mmawcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawcrtid
            
            #add-point:AFTER FIELD mmawcrtid
            {<point name="construct.a.mmawcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmawcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawcrtdp
            #add-point:ON ACTION controlp INFIELD mmawcrtdp
            {<point name="construct.c.mmawcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawcrtdp
            #add-point:BEFORE FIELD mmawcrtdp
            {<point name="construct.b.mmawcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawcrtdp
            
            #add-point:AFTER FIELD mmawcrtdp
            {<point name="construct.a.mmawcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawcrtdt
            #add-point:BEFORE FIELD mmawcrtdt
            {<point name="construct.b.mmawcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmawmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawmodid
            #add-point:ON ACTION controlp INFIELD mmawmodid
            {<point name="construct.c.mmawmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawmodid
            #add-point:BEFORE FIELD mmawmodid
            {<point name="construct.b.mmawmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawmodid
            
            #add-point:AFTER FIELD mmawmodid
            {<point name="construct.a.mmawmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawmoddt
            #add-point:BEFORE FIELD mmawmoddt
            {<point name="construct.b.mmawmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmawcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawcnfid
            #add-point:ON ACTION controlp INFIELD mmawcnfid
            {<point name="construct.c.mmawcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawcnfid
            #add-point:BEFORE FIELD mmawcnfid
            {<point name="construct.b.mmawcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawcnfid
            
            #add-point:AFTER FIELD mmawcnfid
            {<point name="construct.a.mmawcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawcnfdt
            #add-point:BEFORE FIELD mmawcnfdt
            {<point name="construct.b.mmawcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmaxseq,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006,mmax007,mmax008, 
          mmax009,mmax010
           FROM s_detail1[1].mmaxseq,s_detail1[1].mmax001,s_detail1[1].mmax002,s_detail1[1].mmax003, 
               s_detail1[1].mmax004,s_detail1[1].mmax005,s_detail1[1].mmax006,s_detail1[1].mmax007,s_detail1[1].mmax008, 
               s_detail1[1].mmax009,s_detail1[1].mmax010
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaxseq
            #add-point:BEFORE FIELD mmaxseq
            {<point name="construct.b.page1.mmaxseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaxseq
            
            #add-point:AFTER FIELD mmaxseq
            {<point name="construct.a.page1.mmaxseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmaxseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaxseq
            #add-point:ON ACTION controlp INFIELD mmaxseq
            {<point name="construct.c.page1.mmaxseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.mmax001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax001
            #add-point:ON ACTION controlp INFIELD mmax001
            {<point name="construct.c.page1.mmax001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax001
            #add-point:BEFORE FIELD mmax001
            {<point name="construct.b.page1.mmax001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax001
            
            #add-point:AFTER FIELD mmax001
            {<point name="construct.a.page1.mmax001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax002
            #add-point:BEFORE FIELD mmax002
            {<point name="construct.b.page1.mmax002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax002
            
            #add-point:AFTER FIELD mmax002
            {<point name="construct.a.page1.mmax002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax002
            #add-point:ON ACTION controlp INFIELD mmax002
            {<point name="construct.c.page1.mmax002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax003
            #add-point:BEFORE FIELD mmax003
            {<point name="construct.b.page1.mmax003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax003
            
            #add-point:AFTER FIELD mmax003
            {<point name="construct.a.page1.mmax003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax003
            #add-point:ON ACTION controlp INFIELD mmax003
            {<point name="construct.c.page1.mmax003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax004
            #add-point:BEFORE FIELD mmax004
            {<point name="construct.b.page1.mmax004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax004
            
            #add-point:AFTER FIELD mmax004
            {<point name="construct.a.page1.mmax004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax004
            #add-point:ON ACTION controlp INFIELD mmax004
            {<point name="construct.c.page1.mmax004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax005
            #add-point:BEFORE FIELD mmax005
            {<point name="construct.b.page1.mmax005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax005
            
            #add-point:AFTER FIELD mmax005
            {<point name="construct.a.page1.mmax005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax005
            #add-point:ON ACTION controlp INFIELD mmax005
            {<point name="construct.c.page1.mmax005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax006
            #add-point:BEFORE FIELD mmax006
            {<point name="construct.b.page1.mmax006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax006
            
            #add-point:AFTER FIELD mmax006
            {<point name="construct.a.page1.mmax006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax006
            #add-point:ON ACTION controlp INFIELD mmax006
            {<point name="construct.c.page1.mmax006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax007
            #add-point:BEFORE FIELD mmax007
            {<point name="construct.b.page1.mmax007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax007
            
            #add-point:AFTER FIELD mmax007
            {<point name="construct.a.page1.mmax007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax007
            #add-point:ON ACTION controlp INFIELD mmax007
            {<point name="construct.c.page1.mmax007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax008
            #add-point:BEFORE FIELD mmax008
            {<point name="construct.b.page1.mmax008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax008
            
            #add-point:AFTER FIELD mmax008
            {<point name="construct.a.page1.mmax008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax008
            #add-point:ON ACTION controlp INFIELD mmax008
            {<point name="construct.c.page1.mmax008" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.mmax009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax009
            #add-point:ON ACTION controlp INFIELD mmax009
            {<point name="construct.c.page1.mmax009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax009
            #add-point:BEFORE FIELD mmax009
            {<point name="construct.b.page1.mmax009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax009
            
            #add-point:AFTER FIELD mmax009
            {<point name="construct.a.page1.mmax009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmax010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax010
            #add-point:ON ACTION controlp INFIELD mmax010
            {<point name="construct.c.page1.mmax010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax010
            #add-point:BEFORE FIELD mmax010
            {<point name="construct.b.page1.mmax010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax010
            
            #add-point:AFTER FIELD mmax010
            {<point name="construct.a.page1.mmax010" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.default_search" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt401_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmawdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.delete" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt401_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_mmaw_m.mmawdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN ammt401_cl USING g_enterprise,g_mmaw_m.mmawdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT ammt401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmaw_m_mask_o.* =  g_mmaw_m.*
   CALL ammt401_mmaw_t_mask()
   LET g_mmaw_m_mask_n.* =  g_mmaw_m.*
   
   CALL ammt401_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL ammt401_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
 
      DELETE FROM mmaw_t
       WHERE mmawent = g_enterprise AND mmawdocno = g_mmaw_m.mmawdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_mmaw_m.mmawdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmax_t
       WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmax_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE ammt401_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_mmax_d.clear() 
 
     
      CALL ammt401_ui_browser_refresh()  
      #CALL ammt401_ui_headershow()  
      #CALL ammt401_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL ammt401_browser_fill("")
         CALL ammt401_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE ammt401_cl
 
   #功能已完成,通報訊息中心
   CALL ammt401_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="ammt401.delete_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt401_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmax_t
       WHERE mmaxent = g_enterprise AND
         mmaxdocno = ps_keys_bak[1] AND mmaxseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmax_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.description" ver="57" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:7,PR版次:7) Build-000424
#+ 
#+ Filename...: ammt401
#+ Description: 會員卡發行維護作業
#+ Creator....: 02296(2013-08-02 18:30:41)
#+ Modifier...: 02003(2015-06-08 14:03:21) -SD/PR-
]]>
  </section>
  <section id="ammt401.detail_reproduce" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt401_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmax_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt401_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt401_detail AS ",
                "SELECT * FROM mmax_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt401_detail SELECT * FROM mmax_t 
                                         WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmawdocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt401_detail 
      #更新key欄位
      SET mmaxdocno = g_mmaw_m.mmawdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO mmax_t SELECT * FROM ammt401_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt401_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt401_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.fetch" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt401_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmaw_m.mmawdocno = g_browser[g_current_idx].b_mmawdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

   
   #遮罩相關處理
   LET g_mmaw_m_mask_o.* =  g_mmaw_m.*
   CALL ammt401_mmaw_t_mask()
   LET g_mmaw_m_mask_n.* =  g_mmaw_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt401_set_act_visible()   
   CALL ammt401_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_mmaw_m_t.* = g_mmaw_m.*
   LET g_mmaw_m_o.* = g_mmaw_m.*
   
   LET g_data_owner = g_mmaw_m.mmawownid      
   LET g_data_dept  = g_mmaw_m.mmawowndp
   
   #重新顯示   
   CALL ammt401_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt401_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.filter" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION ammt401_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmawdocno,mmawdocdt,mmawsite,mmaw001
                          FROM s_browse[1].b_mmawdocno,s_browse[1].b_mmawdocdt,s_browse[1].b_mmawsite, 
                              s_browse[1].b_mmaw001
 
         BEFORE CONSTRUCT
               DISPLAY ammt401_filter_parser('mmawdocno') TO s_browse[1].b_mmawdocno
            DISPLAY ammt401_filter_parser('mmawdocdt') TO s_browse[1].b_mmawdocdt
            DISPLAY ammt401_filter_parser('mmawsite') TO s_browse[1].b_mmawsite
            DISPLAY ammt401_filter_parser('mmaw001') TO s_browse[1].b_mmaw001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt401_filter_show('mmawdocno')
   CALL ammt401_filter_show('mmawdocdt')
   CALL ammt401_filter_show('mmawsite')
   CALL ammt401_filter_show('mmaw001')
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt401_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt401_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt401_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.global" ver="23" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:35)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmaw_m        RECORD
       mmawsite LIKE mmaw_t.mmawsite, 
   mmawsite_desc LIKE type_t.chr80, 
   mmawdocdt LIKE mmaw_t.mmawdocdt, 
   mmawdocno LIKE mmaw_t.mmawdocno, 
   mmaw001 LIKE mmaw_t.mmaw001, 
   mmawunit LIKE mmaw_t.mmawunit, 
   mmawstus LIKE mmaw_t.mmawstus, 
   mmawownid LIKE mmaw_t.mmawownid, 
   mmawownid_desc LIKE type_t.chr80, 
   mmawowndp LIKE mmaw_t.mmawowndp, 
   mmawowndp_desc LIKE type_t.chr80, 
   mmawcrtid LIKE mmaw_t.mmawcrtid, 
   mmawcrtid_desc LIKE type_t.chr80, 
   mmawcrtdp LIKE mmaw_t.mmawcrtdp, 
   mmawcrtdp_desc LIKE type_t.chr80, 
   mmawcrtdt LIKE mmaw_t.mmawcrtdt, 
   mmawmodid LIKE mmaw_t.mmawmodid, 
   mmawmodid_desc LIKE type_t.chr80, 
   mmawmoddt LIKE mmaw_t.mmawmoddt, 
   mmawcnfid LIKE mmaw_t.mmawcnfid, 
   mmawcnfid_desc LIKE type_t.chr80, 
   mmawcnfdt LIKE mmaw_t.mmawcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmax_d        RECORD
       mmaxseq LIKE mmax_t.mmaxseq, 
   mmax001 LIKE mmax_t.mmax001, 
   mmax001_desc LIKE type_t.chr500, 
   mman066 LIKE type_t.chr10, 
   mmax002 LIKE mmax_t.mmax002, 
   mmax003 LIKE mmax_t.mmax003, 
   mmax004 LIKE mmax_t.mmax004, 
   mmax005 LIKE mmax_t.mmax005, 
   mmax006 LIKE mmax_t.mmax006, 
   mmax007 LIKE mmax_t.mmax007, 
   mmax008 LIKE mmax_t.mmax008, 
   mmax009 LIKE mmax_t.mmax009, 
   mmax009_desc LIKE type_t.chr500, 
   mmax010 LIKE mmax_t.mmax010, 
   mmax010_desc LIKE type_t.chr500, 
   mmaxsite LIKE mmax_t.mmaxsite, 
   mmaxunit LIKE mmax_t.mmaxunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_mmawdocno LIKE mmaw_t.mmawdocno,
      b_mmawdocdt LIKE mmaw_t.mmawdocdt,
      b_mmawsite LIKE mmaw_t.mmawsite,
   b_mmawsite_desc LIKE type_t.chr80,
      b_mmaw001 LIKE mmaw_t.mmaw001
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_mmaw_m          type_g_mmaw_m
DEFINE g_mmaw_m_t        type_g_mmaw_m
DEFINE g_mmaw_m_o        type_g_mmaw_m
DEFINE g_mmaw_m_mask_o   type_g_mmaw_m #轉換遮罩前資料
DEFINE g_mmaw_m_mask_n   type_g_mmaw_m #轉換遮罩後資料
 
   DEFINE g_mmawdocno_t LIKE mmaw_t.mmawdocno
 
 
DEFINE g_mmax_d          DYNAMIC ARRAY OF type_g_mmax_d
DEFINE g_mmax_d_t        type_g_mmax_d
DEFINE g_mmax_d_o        type_g_mmax_d
DEFINE g_mmax_d_mask_o   DYNAMIC ARRAY OF type_g_mmax_d #轉換遮罩前資料
DEFINE g_mmax_d_mask_n   DYNAMIC ARRAY OF type_g_mmax_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammt401.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION ammt401_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmax_d.getLength() THEN
         LET g_detail_idx = g_mmax_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmax_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmax_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt401_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('mmawstus','13','N,Y,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL ammt401_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammt401.input" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt401_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001, 
       g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdp_desc, 
       g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid, 
       g_mmaw_m.mmawcnfid_desc,g_mmaw_m.mmawcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmaxseq,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006,mmax007,mmax008, 
       mmax009,mmax010,mmaxsite,mmaxunit FROM mmax_t WHERE mmaxent=? AND mmaxdocno=? AND mmaxseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt401_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt401_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt401_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit, 
       g_mmaw_m.mmawstus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="ammt401.input.body" ver="21" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmax_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmax_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_mmax_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt401_cl USING g_enterprise,g_mmaw_m.mmawdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmax_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmax_d[l_ac].mmaxseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmax_d_t.* = g_mmax_d[l_ac].*  #BACKUP
               LET g_mmax_d_o.* = g_mmax_d[l_ac].*  #BACKUP
               CALL ammt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt401_set_no_entry_b(l_cmd)
               IF NOT ammt401_lock_b("mmax_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt401_bcl INTO g_mmax_d[l_ac].mmaxseq,g_mmax_d[l_ac].mmax001,g_mmax_d[l_ac].mmax002, 
                      g_mmax_d[l_ac].mmax003,g_mmax_d[l_ac].mmax004,g_mmax_d[l_ac].mmax005,g_mmax_d[l_ac].mmax006, 
                      g_mmax_d[l_ac].mmax007,g_mmax_d[l_ac].mmax008,g_mmax_d[l_ac].mmax009,g_mmax_d[l_ac].mmax010, 
                      g_mmax_d[l_ac].mmaxsite,g_mmax_d[l_ac].mmaxunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_mmax_d_t.mmaxseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmax_d_mask_o[l_ac].* =  g_mmax_d[l_ac].*
                  CALL ammt401_mmax_t_mask()
                  LET g_mmax_d_mask_n[l_ac].* =  g_mmax_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmax_d[l_ac].* TO NULL 
            INITIALIZE g_mmax_d_t.* TO NULL 
            INITIALIZE g_mmax_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_mmax_d_t.* = g_mmax_d[l_ac].*     #新輸入資料
            LET g_mmax_d_o.* = g_mmax_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmax_d[li_reproduce_target].* = g_mmax_d[li_reproduce].*
 
               LET g_mmax_d[li_reproduce_target].mmaxseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmax_t 
             WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno
 
               AND mmaxseq = g_mmax_d[l_ac].mmaxseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaw_m.mmawdocno
               LET gs_keys[2] = g_mmax_d[g_detail_idx].mmaxseq
               CALL ammt401_insert_b('mmax_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mmax_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmax_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmaw_m.mmawdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_mmax_d_t.mmaxseq
 
            
               #刪除同層單身
               IF NOT ammt401_delete_b('mmax_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt401_key_delete_b(gs_keys,'mmax_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt401_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_mmax_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmax_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaxseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmax_d[l_ac].mmaxseq,"1","1","","","azz-00079",1) THEN
               NEXT FIELD mmaxseq
            END IF 
 
 
            #add-point:AFTER FIELD mmaxseq
            {<point name="input.a.page1.mmaxseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaxseq
            #add-point:BEFORE FIELD mmaxseq
            {<point name="input.b.page1.mmaxseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaxseq
            #add-point:ON CHANGE mmaxseq
            {<point name="input.g.page1.mmaxseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax001
            
            #add-point:AFTER FIELD mmax001
            {<point name="input.a.page1.mmax001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax001
            #add-point:BEFORE FIELD mmax001
            {<point name="input.b.page1.mmax001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax001
            #add-point:ON CHANGE mmax001
            {<point name="input.g.page1.mmax001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax002
            #add-point:BEFORE FIELD mmax002
            {<point name="input.b.page1.mmax002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax002
            
            #add-point:AFTER FIELD mmax002
            {<point name="input.a.page1.mmax002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax002
            #add-point:ON CHANGE mmax002
            {<point name="input.g.page1.mmax002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax003
            #add-point:BEFORE FIELD mmax003
            {<point name="input.b.page1.mmax003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax003
            
            #add-point:AFTER FIELD mmax003
            {<point name="input.a.page1.mmax003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax003
            #add-point:ON CHANGE mmax003
            {<point name="input.g.page1.mmax003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax004
            #add-point:BEFORE FIELD mmax004
            {<point name="input.b.page1.mmax004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax004
            
            #add-point:AFTER FIELD mmax004
            {<point name="input.a.page1.mmax004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax004
            #add-point:ON CHANGE mmax004
            {<point name="input.g.page1.mmax004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax005
            #add-point:BEFORE FIELD mmax005
            {<point name="input.b.page1.mmax005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax005
            
            #add-point:AFTER FIELD mmax005
            {<point name="input.a.page1.mmax005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax005
            #add-point:ON CHANGE mmax005
            {<point name="input.g.page1.mmax005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax006
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmax_d[l_ac].mmax006,"1","1","","","azz-00079",1) THEN
               NEXT FIELD mmax006
            END IF 
 
 
            #add-point:AFTER FIELD mmax006
            {<point name="input.a.page1.mmax006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax006
            #add-point:BEFORE FIELD mmax006
            {<point name="input.b.page1.mmax006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax006
            #add-point:ON CHANGE mmax006
            {<point name="input.g.page1.mmax006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax007
            #add-point:BEFORE FIELD mmax007
            {<point name="input.b.page1.mmax007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax007
            
            #add-point:AFTER FIELD mmax007
            {<point name="input.a.page1.mmax007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax007
            #add-point:ON CHANGE mmax007
            {<point name="input.g.page1.mmax007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax008
            #add-point:BEFORE FIELD mmax008
            {<point name="input.b.page1.mmax008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax008
            
            #add-point:AFTER FIELD mmax008
            {<point name="input.a.page1.mmax008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax008
            #add-point:ON CHANGE mmax008
            {<point name="input.g.page1.mmax008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax009
            
            #add-point:AFTER FIELD mmax009
            {<point name="input.a.page1.mmax009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax009
            #add-point:BEFORE FIELD mmax009
            {<point name="input.b.page1.mmax009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax009
            #add-point:ON CHANGE mmax009
            {<point name="input.g.page1.mmax009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmax010
            
            #add-point:AFTER FIELD mmax010
            {<point name="input.a.page1.mmax010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmax010
            #add-point:BEFORE FIELD mmax010
            {<point name="input.b.page1.mmax010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmax010
            #add-point:ON CHANGE mmax010
            {<point name="input.g.page1.mmax010" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.mmaxseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaxseq
            #add-point:ON ACTION controlp INFIELD mmaxseq
            {<point name="input.c.page1.mmaxseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax001
            #add-point:ON ACTION controlp INFIELD mmax001
            {<point name="input.c.page1.mmax001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax002
            #add-point:ON ACTION controlp INFIELD mmax002
            {<point name="input.c.page1.mmax002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax003
            #add-point:ON ACTION controlp INFIELD mmax003
            {<point name="input.c.page1.mmax003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax004
            #add-point:ON ACTION controlp INFIELD mmax004
            {<point name="input.c.page1.mmax004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax005
            #add-point:ON ACTION controlp INFIELD mmax005
            {<point name="input.c.page1.mmax005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax006
            #add-point:ON ACTION controlp INFIELD mmax006
            {<point name="input.c.page1.mmax006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax007
            #add-point:ON ACTION controlp INFIELD mmax007
            {<point name="input.c.page1.mmax007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax008
            #add-point:ON ACTION controlp INFIELD mmax008
            {<point name="input.c.page1.mmax008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax009
            #add-point:ON ACTION controlp INFIELD mmax009
            {<point name="input.c.page1.mmax009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmax010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmax010
            #add-point:ON ACTION controlp INFIELD mmax010
            {<point name="input.c.page1.mmax010" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mmax_d[l_ac].* = g_mmax_d_t.*
               CLOSE ammt401_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mmax_d[l_ac].mmaxseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mmax_d[l_ac].* = g_mmax_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL ammt401_mmax_t_mask_restore('restore_mask_o')
      
               UPDATE mmax_t SET (mmaxdocno,mmaxseq,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006, 
                   mmax007,mmax008,mmax009,mmax010,mmaxsite,mmaxunit) = (g_mmaw_m.mmawdocno,g_mmax_d[l_ac].mmaxseq, 
                   g_mmax_d[l_ac].mmax001,g_mmax_d[l_ac].mmax002,g_mmax_d[l_ac].mmax003,g_mmax_d[l_ac].mmax004, 
                   g_mmax_d[l_ac].mmax005,g_mmax_d[l_ac].mmax006,g_mmax_d[l_ac].mmax007,g_mmax_d[l_ac].mmax008, 
                   g_mmax_d[l_ac].mmax009,g_mmax_d[l_ac].mmax010,g_mmax_d[l_ac].mmaxsite,g_mmax_d[l_ac].mmaxunit) 

                WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmaw_m.mmawdocno 
 
                  AND mmaxseq = g_mmax_d_t.mmaxseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmax_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_mmax_d[l_ac].* = g_mmax_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmax_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_mmax_d[l_ac].* = g_mmax_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmaw_m.mmawdocno
               LET gs_keys_bak[1] = g_mmawdocno_t
               LET gs_keys[2] = g_mmax_d[g_detail_idx].mmaxseq
               LET gs_keys_bak[2] = g_mmax_d_t.mmaxseq
               CALL ammt401_update_b('mmax_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL ammt401_mmax_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_mmax_d[g_detail_idx].mmaxseq = g_mmax_d_t.mmaxseq 
 
                  ) THEN
                  LET gs_keys[01] = g_mmaw_m.mmawdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mmax_d_t.mmaxseq
 
                  CALL ammt401_key_update_b(gs_keys,'mmax_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmaw_m),util.JSON.stringify(g_mmax_d_t)
               LET g_log2 = util.JSON.stringify(g_mmaw_m),util.JSON.stringify(g_mmax_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt401_unlock_b("mmax_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmax_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmax_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="ammt401.input.head" ver="21" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit, 
          g_mmaw_m.mmawstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN ammt401_cl USING g_enterprise,g_mmaw_m.mmawdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE ammt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL ammt401_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL ammt401_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawsite
            
            #add-point:AFTER FIELD mmawsite
            {<point name="input.a.mmawsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawsite
            #add-point:BEFORE FIELD mmawsite
            {<point name="input.b.mmawsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmawsite
            #add-point:ON CHANGE mmawsite
            {<point name="input.g.mmawsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawdocdt
            #add-point:BEFORE FIELD mmawdocdt
            {<point name="input.b.mmawdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawdocdt
            
            #add-point:AFTER FIELD mmawdocdt
            {<point name="input.a.mmawdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmawdocdt
            #add-point:ON CHANGE mmawdocdt
            {<point name="input.g.mmawdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawdocno
            #add-point:BEFORE FIELD mmawdocno
            {<point name="input.b.mmawdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawdocno
            
            #add-point:AFTER FIELD mmawdocno
            {<point name="input.a.mmawdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmawdocno
            #add-point:ON CHANGE mmawdocno
            {<point name="input.g.mmawdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmaw001
            #add-point:BEFORE FIELD mmaw001
            {<point name="input.b.mmaw001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmaw001
            
            #add-point:AFTER FIELD mmaw001
            {<point name="input.a.mmaw001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmaw001
            #add-point:ON CHANGE mmaw001
            {<point name="input.g.mmaw001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawunit
            #add-point:BEFORE FIELD mmawunit
            {<point name="input.b.mmawunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawunit
            
            #add-point:AFTER FIELD mmawunit
            {<point name="input.a.mmawunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmawunit
            #add-point:ON CHANGE mmawunit
            {<point name="input.g.mmawunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD mmawstus
            #add-point:BEFORE FIELD mmawstus
            {<point name="input.b.mmawstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD mmawstus
            
            #add-point:AFTER FIELD mmawstus
            {<point name="input.a.mmawstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE mmawstus
            #add-point:ON CHANGE mmawstus
            {<point name="input.g.mmawstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.mmawsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawsite
            #add-point:ON ACTION controlp INFIELD mmawsite
            {<point name="input.c.mmawsite" />}
            #END add-point
 
         #Ctrlp:input.c.mmawdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawdocdt
            #add-point:ON ACTION controlp INFIELD mmawdocdt
            {<point name="input.c.mmawdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmawdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawdocno
            #add-point:ON ACTION controlp INFIELD mmawdocno
            {<point name="input.c.mmawdocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmaw001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmaw001
            #add-point:ON ACTION controlp INFIELD mmaw001
            {<point name="input.c.mmaw001" />}
            #END add-point
 
         #Ctrlp:input.c.mmawunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawunit
            #add-point:ON ACTION controlp INFIELD mmawunit
            {<point name="input.c.mmawunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmawstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD mmawstus
            #add-point:ON ACTION controlp INFIELD mmawstus
            {<point name="input.c.mmawstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_mmaw_m.mmawdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmaw_t (mmawent,mmawsite,mmawdocdt,mmawdocno,mmaw001,mmawunit,mmawstus,mmawownid, 
                   mmawowndp,mmawcrtid,mmawcrtdp,mmawcrtdt,mmawmodid,mmawmoddt,mmawcnfid,mmawcnfdt)
               VALUES (g_enterprise,g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001, 
                   g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp,g_mmaw_m.mmawcrtid, 
                   g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid, 
                   g_mmaw_m.mmawcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_mmaw_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt401_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL ammt401_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL ammt401_mmaw_t_mask_restore('restore_mask_o')
               
               UPDATE mmaw_t SET (mmawsite,mmawdocdt,mmawdocno,mmaw001,mmawunit,mmawstus,mmawownid,mmawowndp, 
                   mmawcrtid,mmawcrtdp,mmawcrtdt,mmawmodid,mmawmoddt,mmawcnfid,mmawcnfdt) = (g_mmaw_m.mmawsite, 
                   g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus, 
                   g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt, 
                   g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt)
                WHERE mmawent = g_enterprise AND mmawdocno = g_mmawdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "mmaw_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL ammt401_mmaw_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_mmaw_m_t)
               LET g_log2 = util.JSON.stringify(g_mmaw_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="ammt401.input.other" ver="11" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD mmawdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmaxseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.insert" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt401_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmax_d.clear()   
 
 
   INITIALIZE g_mmaw_m.* LIKE mmaw_t.*             #DEFAULT 設定
   
   LET g_mmawdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_mmaw_m.mmawownid = g_user
      LET g_mmaw_m.mmawowndp = g_dept
      LET g_mmaw_m.mmawcrtid = g_user
      LET g_mmaw_m.mmawcrtdp = g_dept 
      LET g_mmaw_m.mmawcrtdt = cl_get_current()
      LET g_mmaw_m.mmawmodid = g_user
      LET g_mmaw_m.mmawmoddt = cl_get_current()
      LET g_mmaw_m.mmawstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmaw_m.mmawstus = "N"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_mmaw_m_t.* = g_mmaw_m.*
      LET g_mmaw_m_o.* = g_mmaw_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaw_m.mmawstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL ammt401_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_mmaw_m.* TO NULL
         INITIALIZE g_mmax_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL ammt401_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_mmax_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt401_set_act_visible()   
   CALL ammt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmawent = '" ||g_enterprise|| "' AND",
                      " mmawdocno = '", g_mmaw_m.mmawdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE ammt401_cl
   
   CALL ammt401_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

   
   #遮罩相關處理
   LET g_mmaw_m_mask_o.* =  g_mmaw_m.*
   CALL ammt401_mmaw_t_mask()
   LET g_mmaw_m_mask_n.* =  g_mmaw_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001, 
       g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdp_desc, 
       g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid, 
       g_mmaw_m.mmawcnfid_desc,g_mmaw_m.mmawcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL ammt401_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt401_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmax_t
                  (mmaxent,
                   mmaxdocno,
                   mmaxseq
                   ,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006,mmax007,mmax008,mmax009,mmax010,mmaxsite,mmaxunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmax_d[g_detail_idx].mmax001,g_mmax_d[g_detail_idx].mmax002,g_mmax_d[g_detail_idx].mmax003, 
                       g_mmax_d[g_detail_idx].mmax004,g_mmax_d[g_detail_idx].mmax005,g_mmax_d[g_detail_idx].mmax006, 
                       g_mmax_d[g_detail_idx].mmax007,g_mmax_d[g_detail_idx].mmax008,g_mmax_d[g_detail_idx].mmax009, 
                       g_mmax_d[g_detail_idx].mmax010,g_mmax_d[g_detail_idx].mmaxsite,g_mmax_d[g_detail_idx].mmaxunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmax_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmax_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION ammt401_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION ammt401_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt401_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL ammt401_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmax_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt401_bcl USING g_enterprise,
                                       g_mmaw_m.mmawdocno,g_mmax_d[g_detail_idx].mmaxseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt401_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.main" ver="17" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmawsite,'',mmawdocdt,mmawdocno,mmaw001,mmawunit,mmawstus,mmawownid,'', 
       mmawowndp,'',mmawcrtid,'',mmawcrtdp,'',mmawcrtdt,mmawmodid,'',mmawmoddt,mmawcnfid,'',mmawcnfdt", 
        
                      " FROM mmaw_t",
                      " WHERE mmawent= ? AND mmawdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt401_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.mmawsite,t0.mmawdocdt,t0.mmawdocno,t0.mmaw001,t0.mmawunit,t0.mmawstus, 
       t0.mmawownid,t0.mmawowndp,t0.mmawcrtid,t0.mmawcrtdp,t0.mmawcrtdt,t0.mmawmodid,t0.mmawmoddt,t0.mmawcnfid, 
       t0.mmawcnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooag011", 

               " FROM mmaw_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.mmawsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.mmawownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.mmawowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.mmawcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.mmawcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.mmawmodid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.mmawcnfid  ",
 
               " WHERE t0.mmawent = '" ||g_enterprise|| "' AND t0.mmawdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt401_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt401 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt401_init()   
 
      #進入選單 Menu (="N")
      CALL ammt401_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt401
      
   END IF 
   
   CLOSE ammt401_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="ammt401.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/amm/ammt401_mask.4gl"
]]>
  </section>
  <section id="ammt401.modify" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt401_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_mmaw_m_t.* = g_mmaw_m.*
   LET g_mmaw_m_o.* = g_mmaw_m.*
   
   IF g_mmaw_m.mmawdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
   CALL s_transaction_begin()
   
   OPEN ammt401_cl USING g_enterprise,g_mmaw_m.mmawdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT ammt401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmaw_m_mask_o.* =  g_mmaw_m.*
   CALL ammt401_mmaw_t_mask()
   LET g_mmaw_m_mask_n.* =  g_mmaw_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL ammt401_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmaw_m.mmawmodid = g_user 
LET g_mmaw_m.mmawmoddt = cl_get_current()
LET g_mmaw_m.mmawmodid_desc = cl_get_username(g_mmaw_m.mmawmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL ammt401_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE mmaw_t SET (mmawmodid,mmawmoddt) = (g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt)
          WHERE mmawent = g_enterprise AND mmawdocno = g_mmawdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmaw_m.* = g_mmaw_m_t.*
         CALL ammt401_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_mmaw_m.mmawdocno != g_mmawdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmax_t SET mmaxdocno = g_mmaw_m.mmawdocno
 
          WHERE mmaxent = g_enterprise AND mmaxdocno = g_mmawdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmax_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmax_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt401_set_act_visible()   
   CALL ammt401_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " mmawent = '" ||g_enterprise|| "' AND",
                      " mmawdocno = '", g_mmaw_m.mmawdocno, "' "
 
   #填到對應位置
   CALL ammt401_browser_fill("")
 
   CLOSE ammt401_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt401_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="ammt401.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION ammt401_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL ammt401_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_mmaw_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt401.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="ammt401.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammt401.query" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt401_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmax_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL ammt401_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt401_browser_fill("")
      CALL ammt401_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt401_filter_show('mmawdocno')
   CALL ammt401_filter_show('mmawdocdt')
   CALL ammt401_filter_show('mmawsite')
   CALL ammt401_filter_show('mmaw001')
   CALL ammt401_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL ammt401_fetch("F") 
      #顯示單身筆數
      CALL ammt401_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.reproduce" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt401_reproduce()
   DEFINE l_newno     LIKE mmaw_t.mmawdocno 
   DEFINE l_oldno     LIKE mmaw_t.mmawdocno 
 
   DEFINE l_master    RECORD LIKE mmaw_t.*
   DEFINE l_detail    RECORD LIKE mmax_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_mmaw_m.mmawdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
    
   LET g_mmaw_m.mmawdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_mmaw_m.mmawownid = g_user
      LET g_mmaw_m.mmawowndp = g_dept
      LET g_mmaw_m.mmawcrtid = g_user
      LET g_mmaw_m.mmawcrtdp = g_dept 
      LET g_mmaw_m.mmawcrtdt = cl_get_current()
      LET g_mmaw_m.mmawmodid = g_user
      LET g_mmaw_m.mmawmoddt = cl_get_current()
      LET g_mmaw_m.mmawstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaw_m.mmawstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL ammt401_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_mmaw_m.* TO NULL
      INITIALIZE g_mmax_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL ammt401_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt401_set_act_visible()   
   CALL ammt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmawdocno_t = g_mmaw_m.mmawdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmawent = '" ||g_enterprise|| "' AND",
                      " mmawdocno = '", g_mmaw_m.mmawdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL ammt401_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL ammt401_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION ammt401_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION ammt401_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION ammt401_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION ammt401_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt401_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("mmawdocno,mmawdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmawdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt401_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_no_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt401_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmawdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("mmawdocno,mmawdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt401_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammt401.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION ammt401_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmaw_m.mmawdocno
   LET g_pk_array[1].column = 'mmawdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt401.show" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt401_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt401_b_fill() #單身填充
      CALL ammt401_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL ammt401_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_mmaw_m_mask_o.* =  g_mmaw_m.*
   CALL ammt401_mmaw_t_mask()
   LET g_mmaw_m_mask_n.* =  g_mmaw_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001, 
       g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdp_desc, 
       g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid, 
       g_mmaw_m.mmawcnfid_desc,g_mmaw_m.mmawcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_mmaw_m.mmawstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmax_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt401_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.signature" ver="10" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION ammt401_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL ammt401_show()
   CALL ammt401_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_mmaw_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_mmax_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL ammt401_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt401_ui_headershow()
   CALL ammt401_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION ammt401_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt401_ui_headershow()  
   CALL ammt401_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="ammt401.state_change" ver="15" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION ammt401_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmaw_m.mmawdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN ammt401_cl USING g_enterprise,g_mmaw_m.mmawdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

 
   #檢查是否允許此動作
   IF NOT ammt401_action_chk() THEN
      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001, 
       g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdp_desc, 
       g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid, 
       g_mmaw_m.mmawcnfid_desc,g_mmaw_m.mmawcnfdt
 
   CASE g_mmaw_m.mmawstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmaw_m.mmawstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT ammt401_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE ammt401_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT ammt401_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE ammt401_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_mmaw_m.mmawstus = lc_state OR cl_null(lc_state) THEN
      CLOSE ammt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_mmaw_m.mmawmodid = g_user
   LET g_mmaw_m.mmawmoddt = cl_get_current()
   LET g_mmaw_m.mmawstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE mmaw_t 
      SET (mmawstus,mmawmodid,mmawmoddt) 
        = (g_mmaw_m.mmawstus,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt)     
    WHERE mmawent = g_enterprise AND mmawdocno = g_mmaw_m.mmawdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
          g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid, 
          g_mmaw_m.mmawowndp,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid, 
          g_mmaw_m.mmawmoddt,g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc, 
          g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc, 
          g_mmaw_m.mmawcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_mmaw_m.mmawsite,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawdocdt,g_mmaw_m.mmawdocno, 
          g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawownid_desc, 
          g_mmaw_m.mmawowndp,g_mmaw_m.mmawowndp_desc,g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp, 
          g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawmoddt, 
          g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfid_desc,g_mmaw_m.mmawcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE ammt401_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt401_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammt401.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ammt401_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="ammt401.ui_browser_refresh" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt401_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmawdocno = g_mmaw_m.mmawdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt401_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammt401.ui_dialog" ver="47" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt401_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt401_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_mmaw_m.* TO NULL
         CALL g_mmax_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL ammt401_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt401_fetch('') # reload data
               LET l_ac = 1
               CALL ammt401_ui_detailshow() #Setting the current row 
         
               CALL ammt401_idx_chk()
               #NEXT FIELD mmaxseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_mmax_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt401_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL ammt401_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL ammt401_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt401_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt401_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt401_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt401_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL ammt401_set_act_visible()   
            CALL ammt401_set_act_no_visible()
            IF NOT (g_mmaw_m.mmawdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " mmawent = '" ||g_enterprise|| "' AND",
                                  " mmawdocno = '", g_mmaw_m.mmawdocno, "' "
 
               #填到對應位置
               CALL ammt401_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt401_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt401_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL ammt401_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt401_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL ammt401_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt401_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL ammt401_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt401_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL ammt401_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt401_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL ammt401_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt401_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL ammt401_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt401_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmax_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmaxseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION demo2
            LET g_action_choice="demo2"
            IF cl_auth_chk_act("demo2") THEN
               
               #add-point:ON ACTION demo2
               {<point name="menu.demo2" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt401_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt401_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION demo
            LET g_action_choice="demo"
            IF cl_auth_chk_act("demo") THEN
               
               #add-point:ON ACTION demo
               {<point name="menu.demo" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt401_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt401_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/amm/ammt401_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL ammt401_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt401_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL ammt401_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt401_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt401_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmaw_m.mmawdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammt401.ui_headershow" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt401_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_mmaw_m.mmawdocno = g_browser[g_current_idx].b_mmawdocno   
 
   EXECUTE ammt401_master_referesh USING g_mmaw_m.mmawdocno INTO g_mmaw_m.mmawsite,g_mmaw_m.mmawdocdt, 
       g_mmaw_m.mmawdocno,g_mmaw_m.mmaw001,g_mmaw_m.mmawunit,g_mmaw_m.mmawstus,g_mmaw_m.mmawownid,g_mmaw_m.mmawowndp, 
       g_mmaw_m.mmawcrtid,g_mmaw_m.mmawcrtdp,g_mmaw_m.mmawcrtdt,g_mmaw_m.mmawmodid,g_mmaw_m.mmawmoddt, 
       g_mmaw_m.mmawcnfid,g_mmaw_m.mmawcnfdt,g_mmaw_m.mmawsite_desc,g_mmaw_m.mmawownid_desc,g_mmaw_m.mmawowndp_desc, 
       g_mmaw_m.mmawcrtid_desc,g_mmaw_m.mmawcrtdp_desc,g_mmaw_m.mmawmodid_desc,g_mmaw_m.mmawcnfid_desc 

   CALL ammt401_mmaw_t_mask()
   CALL ammt401_show()
      
END FUNCTION
]]>
  </section>
  <section id="ammt401.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt401_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt401_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammt401.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt401_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmax_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL ammt401_mmax_t_mask_restore('restore_mask_o')
               
      UPDATE mmax_t 
         SET (mmaxdocno,
              mmaxseq
              ,mmax001,mmax002,mmax003,mmax004,mmax005,mmax006,mmax007,mmax008,mmax009,mmax010,mmaxsite,mmaxunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmax_d[g_detail_idx].mmax001,g_mmax_d[g_detail_idx].mmax002,g_mmax_d[g_detail_idx].mmax003, 
                  g_mmax_d[g_detail_idx].mmax004,g_mmax_d[g_detail_idx].mmax005,g_mmax_d[g_detail_idx].mmax006, 
                  g_mmax_d[g_detail_idx].mmax007,g_mmax_d[g_detail_idx].mmax008,g_mmax_d[g_detail_idx].mmax009, 
                  g_mmax_d[g_detail_idx].mmax010,g_mmax_d[g_detail_idx].mmaxsite,g_mmax_d[g_detail_idx].mmaxunit)  

         WHERE mmaxent = g_enterprise AND mmaxdocno = ps_keys_bak[1] AND mmaxseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmax_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmax_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt401_mmax_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
