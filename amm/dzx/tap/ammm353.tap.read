<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammm353" std_prog="ammm353" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.mmbt001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '4'
            CALL q_mmbt001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbt001  #顯示到畫面上

            NEXT FIELD mmbt001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbt005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbt005  #顯示到畫面上

            NEXT FIELD mmbt005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcnfid  #顯示到畫面上

            NEXT FIELD mmbtcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcrtdp  #顯示到畫面上

            NEXT FIELD mmbtcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcrtid  #顯示到畫面上

            NEXT FIELD mmbtcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtmodid  #顯示到畫面上

            NEXT FIELD mmbtmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtowndp  #顯示到畫面上

            NEXT FIELD mmbtowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtownid  #顯示到畫面上

            NEXT FIELD mmbtownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtunit  #顯示到畫面上

            NEXT FIELD mmbtunit                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmcm005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcm005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcm005  #顯示到畫面上

            NEXT FIELD mmcm005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbx004  #顯示到畫面上

            NEXT FIELD mmbx004                     #返回原欄位

]]>
  </point>
  <point name="input.a.mmbt001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbt_t WHERE "||"mmbtent = '" ||g_enterprise|| "' AND "||"mmbt001 = '"||g_mmbt_m.mmbt001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.mmbt005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbt005
            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbt005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbt005_desc
]]>
  </point>
  <point name="input.a.mmbt012" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtunit_desc
]]>
  </point>
  <point name="input.a.page1.mmcl003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl_d[g_detail_idx].mmcl003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl_d[g_detail_idx].mmcl003 != g_mmcl_d_t.mmcl003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcl_t WHERE "||"mmclent = '" ||g_enterprise|| "' AND "||"mmcl001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcl003 = '"||g_mmcl_d[g_detail_idx].mmcl003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.mmcl004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl_d[l_ac].mmcl004) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.mmcl005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl_d[l_ac].mmcl005) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.mmcm003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm003 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm004 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl2_d[g_detail_idx].mmcm003 != g_mmcl2_d_t.mmcm003 OR g_mmcl2_d[g_detail_idx].mmcm004 != g_mmcl2_d_t.mmcm004 OR g_mmcl2_d[g_detail_idx].mmcm005 != g_mmcl2_d_t.mmcm005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcm_t WHERE "||"mmcment = '" ||g_enterprise|| "' AND "||"mmcm001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcm003 = '"||g_mmcl2_d[g_detail_idx].mmcm003 ||"' AND "|| "mmcm004 = '"||g_mmcl2_d[g_detail_idx].mmcm004 ||"' AND "|| "mmcm005 = '"||g_mmcl2_d[g_detail_idx].mmcm005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmcm004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm003 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm004 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl2_d[g_detail_idx].mmcm003 != g_mmcl2_d_t.mmcm003 OR g_mmcl2_d[g_detail_idx].mmcm004 != g_mmcl2_d_t.mmcm004 OR g_mmcl2_d[g_detail_idx].mmcm005 != g_mmcl2_d_t.mmcm005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcm_t WHERE "||"mmcment = '" ||g_enterprise|| "' AND "||"mmcm001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcm003 = '"||g_mmcl2_d[g_detail_idx].mmcm003 ||"' AND "|| "mmcm004 = '"||g_mmcl2_d[g_detail_idx].mmcm004 ||"' AND "|| "mmcm005 = '"||g_mmcl2_d[g_detail_idx].mmcm005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmcm005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm003 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm004 IS NOT NULL AND g_mmcl2_d[g_detail_idx].mmcm005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl2_d[g_detail_idx].mmcm003 != g_mmcl2_d_t.mmcm003 OR g_mmcl2_d[g_detail_idx].mmcm004 != g_mmcl2_d_t.mmcm004 OR g_mmcl2_d[g_detail_idx].mmcm005 != g_mmcl2_d_t.mmcm005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcm_t WHERE "||"mmcment = '" ||g_enterprise|| "' AND "||"mmcm001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcm003 = '"||g_mmcl2_d[g_detail_idx].mmcm003 ||"' AND "|| "mmcm004 = '"||g_mmcl2_d[g_detail_idx].mmcm004 ||"' AND "|| "mmcm005 = '"||g_mmcl2_d[g_detail_idx].mmcm005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmcm007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl2_d[l_ac].mmcm007) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.mmcm009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl2_d[l_ac].mmcm009) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.mmcm010" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl2_d[l_ac].mmcm010) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.mmcm011" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcl2_d[l_ac].mmcm011) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page3.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcl3_d[l_ac].mmbx004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcl3_d[l_ac].mmbx004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcl3_d[l_ac].mmbx004_desc

            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl3_d[g_detail_idx].mmbx004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl3_d[g_detail_idx].mmbx004 != g_mmcl3_d_t.mmbx004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbx_t WHERE "||"mmbxent = '" ||g_enterprise|| "' AND "||"mmbx001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmbx004 = '"||g_mmcl3_d[g_detail_idx].mmbx004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.mmcn003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcl4_d[g_detail_idx].mmcn003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcl4_d[g_detail_idx].mmcn003 != g_mmcl4_d_t.mmcn003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcn_t WHERE "||"mmcnent = '" ||g_enterprise|| "' AND "||"mmcn001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcn003 = '"||g_mmcl4_d[g_detail_idx].mmcn003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.mmbt005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbt_m.mmbt005             #給予default值

            #給予arg

            CALL q_mman001()                                #呼叫開窗

            LET g_mmbt_m.mmbt005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbt_m.mmbt005 TO mmbt005              #顯示到畫面上

            NEXT FIELD mmbt005                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbt_m.mmbtunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmbt_m.mmbtunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbt_m.mmbtunit TO mmbtunit              #顯示到畫面上

            NEXT FIELD mmbtunit                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'

            LET g_qryparam.default1 = g_mmcl3_d[l_ac].mmbx004             #給予default值

            #給予arg

            CALL q_ooef001_4()                                #呼叫開窗

            LET g_mmcl3_d[l_ac].mmbx004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcl3_d[l_ac].mmbx004 TO mmbx004              #顯示到畫面上

            NEXT FIELD mmbx004                          #返回原欄位

]]>
  </point>
  <point name="show.body3.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcl3_d[l_ac].mmbx004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcl3_d[l_ac].mmbx004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcl3_d[l_ac].mmbx004_desc
]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbt_m.mmbt001
   CALL ap_ref_array2(g_ref_fields," SELECT mmbtl003,mmbtl004 FROM mmbtl_t WHERE mmbtlent = '"||g_enterprise||"' AND mmbtl001 = ? AND mmbtl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_mmbt_m.mmbtl003 = g_rtn_fields[1] 
   LET g_mmbt_m.mmbtl004 = g_rtn_fields[2] 
   DISPLAY g_mmbt_m.mmbtl003 TO mmbtl003
   DISPLAY g_mmbt_m.mmbtl004 TO mmbtl004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbt005
            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbt005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbt005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtunit_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcnfid_desc
]]>
  </point>
  <point name="function.ammm353_mmcm005_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION ammm353_mmcm005_ref()
DEFINE l_oocq001   LIKE oocq_t.oocq001

   IF cl_null(g_mmcl2_d[l_ac].mmcm004) THEN
      RETURN
   END IF
   CASE g_mmcl2_d[l_ac].mmcm004
      WHEN '6'
         LET l_oocq001 = '2000'
      WHEN '7'
         LET l_oocq001 = '2001'
      WHEN '8'
         LET l_oocq001 = '2002'
      WHEN '9'
         LET l_oocq001 = '2003'
      WHEN 'A'
         LET l_oocq001 = '2004'
      WHEN 'B'
         LET l_oocq001 = '2005'
      WHEN 'C'
         LET l_oocq001 = '2006'
      WHEN 'D'
         LET l_oocq001 = '2007'
      WHEN 'E'
         LET l_oocq001 = '2008'
      WHEN 'F'
         LET l_oocq001 = '2009'
      WHEN 'G'
         LET l_oocq001 = '2010'
      WHEN 'H'
         LET l_oocq001 = '2011'
      WHEN 'I'
         LET l_oocq001 = '2012'
      WHEN 'J'
         LET l_oocq001 = '2013'
      WHEN 'K'
         LET l_oocq001 = '2014'
      WHEN 'L'
         LET l_oocq001 = '2015'
   END CASE
   CASE g_mmcl2_d[l_ac].mmcm004
      WHEN '4'
         SELECT imaal003 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM imaal_t
          WHERE imaalent = g_enterprise AND imaal001 = g_mmcl2_d[l_ac].mmcm005 AND imaal002 = g_dlang
      WHEN '5'
         SELECT rtaxl003 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM rtaxl_t
          WHERE rtaxlent = g_enterprise AND rtaxl001 = g_mmcl2_d[l_ac].mmcm005 AND rtaxl002 = g_dlang
      WHEN 'M'
         SELECT gcafl003 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM gcafl_t
          WHERE gcaflent = g_enterprise AND gcafl001 = g_mmcl2_d[l_ac].mmcm005 AND gcafl002 = g_dlang
      WHEN 'N'
         SELECT mmanl003 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM mmanl_t
          WHERE mmanlent = g_enterprise AND mmanl001 = g_mmcl2_d[l_ac].mmcm005 AND mmanl002 = g_dlang
      WHEN 'O'
         LET g_mmcl2_d[l_ac].mmcm005_desc = ''
      WHEN 'P'
         SELECT imaal003 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM imaal_t
          WHERE imaalent = g_enterprise AND imaal001 = g_mmcl2_d[l_ac].mmcm005 AND imaal002 = g_dlang
      OTHERWISE
         SELECT oocql004 INTO g_mmcl2_d[l_ac].mmcm005_desc
           FROM oocql_t
          WHERE oocqlent = g_enterprise AND oocql001 = l_oocq001 AND oocql002 = g_mmcl2_d[l_ac].mmcm005 AND oocql003 = g_dlang
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.ammm353_set_combo" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION ammm353_set_combo()
DEFINE l_values   STRING
DEFINE l_items    STRING
DEFINE l_gzcb002  LIKE gzcb_t.gzcb002
DEFINE l_gzcbl004 LIKE gzcbl_t.gzcbl004

   LET l_values = NULL
   LET l_items = NULL
   LET l_gzcb002 = NULL
   LET l_gzcbl004 = NULL
   DECLARE agct300_gzcb_cs1 CURSOR FOR
    SELECT gzcb002,gzcbl004 FROM gzcb_t,gzcbl_t
     WHERE gzcb001 = gzcbl001 AND gzcb002 = gzcbl002
       AND gzcb001 = '6517'   AND gzcbl003 = g_dlang
       AND gzcb002 IN ('4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P')
     ORDER BY gzcb002
   FOREACH agct300_gzcb_cs1 INTO l_gzcb002,l_gzcbl004
      LET l_values = l_values CLIPPED ,",",l_gzcb002
      LET l_items  = l_items CLIPPED ,",",l_gzcb002 CLIPPED,':',l_gzcbl004
   END FOREACH
   CALL cl_set_combo_items("b_mmcm004",l_values,l_items)
   CALL cl_set_combo_items("mmcm004",l_values,l_items)
END FUNCTION]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_wc = l_wc CLIPPED," AND mmbt004 = '4' AND mmbt009 = '0' "
   LET g_wc = g_wc CLIPPED," AND mmbt004 = '4' AND mmbt009 = '0' "]]>
  </point>
  <point name="construct.a.mmbt016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.b.mmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            NEXT FIELD mmbt001]]>
  </point>
  <point name="construct.b.mmbt009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            NEXT FIELD mmbt010]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '4' TO mmbt004
            DISPLAY '0' TO mmbt009]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_mmbt004','6516') 
   CALL ammm353_set_combo()]]>
  </point>
  <point name="menu.issue" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_transaction_begin()
               CALL s_ammm353_issue_chk(g_mmbt_m.mmbt001,g_mmbt_m.mmbt017) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  CALL cl_err(g_mmbt_m.mmbt001,l_errno,1)
               ELSE
                  IF NOT cl_ask_confirm('amm-00178') THEN 
                  ELSE
                     CALL s_ammm353_issue_upd(g_mmbt_m.mmbt001) RETURNING l_success
                  END IF
               END IF
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
               ELSE      
                  CALL s_transaction_end('Y','0')
               END IF]]>
  </point>
  <point name="menu.remark" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL aooi360_02('99','ammm353',g_mmbt_m.mmbt001,'','','','','','','','','')]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL ammm353_mmcm005_ref()]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   RETURN]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_errno     LIKE type_t.chr10]]>
  </point>
  <section id="ammm353.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammm353_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmcl_d.clear()    #g_mmcl_d 單頭及單身 
   CALL g_mmcl2_d.clear()
   CALL g_mmcl3_d.clear()
   CALL g_mmcl4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammm353_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmcl002,mmcl003,mmcl004,mmcl005,mmclstus  FROM mmcl_t",   
                  " INNER JOIN mmbt_t ON mmbt001 = mmcl001 ",
 
                  #"",
                  
                  "",
                  
                  " WHERE mmclent=? AND mmcl001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcl_t.mmcl003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm353_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammm353_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs INTO g_mmcl_d[l_ac].mmcl002,g_mmcl_d[l_ac].mmcl003,g_mmcl_d[l_ac].mmcl004,g_mmcl_d[l_ac].mmcl005, 
          g_mmcl_d[l_ac].mmclstus
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammm353_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmcm002,mmcm003,mmcm004,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010, 
          mmcm011,mmcm012,mmcmstus  FROM mmcm_t",   
                  " INNER JOIN mmbt_t ON mmbt001 = mmcm001 ",
 
                  "",
                  
                  
                  " WHERE mmcment=? AND mmcm001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcm_t.mmcm003,mmcm_t.mmcm004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm353_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammm353_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs2 INTO g_mmcl2_d[l_ac].mmcm002,g_mmcl2_d[l_ac].mmcm003,g_mmcl2_d[l_ac].mmcm004, 
          g_mmcl2_d[l_ac].mmcm005,g_mmcl2_d[l_ac].mmcm006,g_mmcl2_d[l_ac].mmcm007,g_mmcl2_d[l_ac].mmcm008, 
          g_mmcl2_d[l_ac].mmcm009,g_mmcl2_d[l_ac].mmcm010,g_mmcl2_d[l_ac].mmcm011,g_mmcl2_d[l_ac].mmcm012, 
          g_mmcl2_d[l_ac].mmcmstus
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammm353_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE mmbx002,mmbx003,mmbx004,mmbx005,mmbxstus ,t1.ooefl003 FROM mmbx_t", 
             
                  " INNER JOIN mmbt_t ON mmbt001 = mmbx001 ",
 
                  "",
                  
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbx004 AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE mmbxent=? AND mmbx001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmbx_t.mmbx004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm353_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR ammm353_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs3 INTO g_mmcl3_d[l_ac].mmbx002,g_mmcl3_d[l_ac].mmbx003,g_mmcl3_d[l_ac].mmbx004, 
          g_mmcl3_d[l_ac].mmbx005,g_mmcl3_d[l_ac].mmbxstus,g_mmcl3_d[l_ac].mmbx004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammm353_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE mmcn002,mmcn003,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus  FROM mmcn_t", 
             
                  " INNER JOIN mmbt_t ON mmbt001 = mmcn001 ",
 
                  "",
                  
                  
                  " WHERE mmcnent=? AND mmcn001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcn_t.mmcn003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm353_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR ammm353_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs4 INTO g_mmcl4_d[l_ac].mmcn002,g_mmcl4_d[l_ac].mmcn003,g_mmcl4_d[l_ac].mmcn004, 
          g_mmcl4_d[l_ac].mmcn005,g_mmcl4_d[l_ac].mmcn006,g_mmcl4_d[l_ac].mmcn007,g_mmcl4_d[l_ac].mmcn008, 
          g_mmcl4_d[l_ac].mmcn009,g_mmcl4_d[l_ac].mmcnstus
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmcl_d.deleteElement(g_mmcl_d.getLength())
   CALL g_mmcl2_d.deleteElement(g_mmcl2_d.getLength())
   CALL g_mmcl3_d.deleteElement(g_mmcl3_d.getLength())
   CALL g_mmcl4_d.deleteElement(g_mmcl4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammm353_pb
   FREE ammm353_pb2
 
   FREE ammm353_pb3
 
   FREE ammm353_pb4
 
 
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammm353_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammm353_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.browser_fill" ver="8" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammm353_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbt_m.* TO NULL
   CALL g_mmcl_d.clear()        
   CALL g_mmcl2_d.clear() 
   CALL g_mmcl3_d.clear() 
   CALL g_mmcl4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmbt001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmbt001 ",
                      " FROM mmbt_t ",
                      " ",
                      " LEFT JOIN mmcl_t ON mmclent = mmbtent AND mmbt001 = mmcl001 ",
                      " LEFT JOIN mmcm_t ON mmcment = mmbtent AND mmbt001 = mmcm001", 
 
                      " LEFT JOIN mmbx_t ON mmbxent = mmbtent AND mmbt001 = mmbx001", 
 
                      " LEFT JOIN mmcn_t ON mmcnent = mmbtent AND mmbt001 = mmcn001", 
 
 
 
                      " LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE mmbtent = '" ||g_enterprise|| "' AND mmclent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbt_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmbt001 ",
                      " FROM mmbt_t ", 
                      "  ",
                      "  LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ",
                      " WHERE mmbtent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmbt_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmbt004,mmbt001,mmbt002,mmbt005,'',mmbt006,mmbt009,mmbt010,mmbt011,mmbt012,mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,'',mmbt017 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmbtstus,mmbt004,mmbt001,mmbt002,mmbt005,'',mmbt006,mmbt009,mmbt010, 
       mmbt011,mmbt012,mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,'',mmbt017,t1.mmanl003 ,t2.ooefl003 ", 

               " FROM mmbt_t ",
               "  ",
               "  LEFT JOIN mmcl_t ON mmclent = mmbtent AND mmbt001 = mmcl001 ",
               "  LEFT JOIN mmcm_t ON mmcment = mmbtent AND mmbt001 = mmcm001",
 
               "  LEFT JOIN mmbx_t ON mmbxent = mmbtent AND mmbt001 = mmbx001",
 
               "  LEFT JOIN mmcn_t ON mmcnent = mmbtent AND mmbt001 = mmcn001",
 
 
 
               "  LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmbt005 AND t1.mmanl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=mmbtunit AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE mmbtent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmbt_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbt004,g_browser[g_cnt].b_mmbt001, 
       g_browser[g_cnt].b_mmbt002,g_browser[g_cnt].b_mmbt005,g_browser[g_cnt].b_mmbt005_desc,g_browser[g_cnt].b_mmbt006, 
       g_browser[g_cnt].b_mmbt009,g_browser[g_cnt].b_mmbt010,g_browser[g_cnt].b_mmbt011,g_browser[g_cnt].b_mmbt012, 
       g_browser[g_cnt].b_mmbt013,g_browser[g_cnt].b_mmbt014,g_browser[g_cnt].b_mmbt015,g_browser[g_cnt].b_mmbt016, 
       g_browser[g_cnt].b_mmbtunit,g_browser[g_cnt].b_mmbtunit_desc,g_browser[g_cnt].b_mmbt017,g_browser[g_cnt].b_mmbt005_desc, 
       g_browser[g_cnt].b_mmbtunit_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammm353_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmbt001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammm353_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.construct" ver="7" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammm353_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbt_m.* TO NULL
   CALL g_mmcl_d.clear()        
   CALL g_mmcl2_d.clear() 
   CALL g_mmcl3_d.clear() 
   CALL g_mmcl4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbt004,mmbt001,mmbt002,mmbtl003,mmbtl004,mmbt005,mmbt006,mmbt009,mmbt010, 
          mmbt011,mmbt012,mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp, 
          mmbtcrtid,mmbtcrtdp,mmbtcrtdt,mmbtmodid,mmbtmoddt,mmbtcnfid,mmbtcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmbtcrtdt>>----
         AFTER FIELD mmbtcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtmoddt>>----
         AFTER FIELD mmbtmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtcnfdt>>----
         AFTER FIELD mmbtcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbt004
            #add-point:BEFORE FIELD mmbt004
            {<point name="construct.b.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt004
            
            #add-point:AFTER FIELD mmbt004
            {<point name="construct.a.mmbt004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt004
         ON ACTION controlp INFIELD mmbt004
            #add-point:ON ACTION controlp INFIELD mmbt004
            {<point name="construct.c.mmbt004" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbt001
         ON ACTION controlp INFIELD mmbt001
            #add-point:ON ACTION controlp INFIELD mmbt001
            {<point name="construct.c.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt001
            #add-point:BEFORE FIELD mmbt001
            {<point name="construct.b.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt001
            
            #add-point:AFTER FIELD mmbt001
            {<point name="construct.a.mmbt001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt002
            #add-point:BEFORE FIELD mmbt002
            {<point name="construct.b.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt002
            
            #add-point:AFTER FIELD mmbt002
            {<point name="construct.a.mmbt002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt002
         ON ACTION controlp INFIELD mmbt002
            #add-point:ON ACTION controlp INFIELD mmbt002
            {<point name="construct.c.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl003
            #add-point:BEFORE FIELD mmbtl003
            {<point name="construct.b.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl003
            
            #add-point:AFTER FIELD mmbtl003
            {<point name="construct.a.mmbtl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtl003
         ON ACTION controlp INFIELD mmbtl003
            #add-point:ON ACTION controlp INFIELD mmbtl003
            {<point name="construct.c.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl004
            #add-point:BEFORE FIELD mmbtl004
            {<point name="construct.b.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl004
            
            #add-point:AFTER FIELD mmbtl004
            {<point name="construct.a.mmbtl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtl004
         ON ACTION controlp INFIELD mmbtl004
            #add-point:ON ACTION controlp INFIELD mmbtl004
            {<point name="construct.c.mmbtl004" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbt005
         ON ACTION controlp INFIELD mmbt005
            #add-point:ON ACTION controlp INFIELD mmbt005
            {<point name="construct.c.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt005
            #add-point:BEFORE FIELD mmbt005
            {<point name="construct.b.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt005
            
            #add-point:AFTER FIELD mmbt005
            {<point name="construct.a.mmbt005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt006
            #add-point:BEFORE FIELD mmbt006
            {<point name="construct.b.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt006
            
            #add-point:AFTER FIELD mmbt006
            {<point name="construct.a.mmbt006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt006
         ON ACTION controlp INFIELD mmbt006
            #add-point:ON ACTION controlp INFIELD mmbt006
            {<point name="construct.c.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt009
            #add-point:BEFORE FIELD mmbt009
            {<point name="construct.b.mmbt009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt009
            
            #add-point:AFTER FIELD mmbt009
            {<point name="construct.a.mmbt009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt009
         ON ACTION controlp INFIELD mmbt009
            #add-point:ON ACTION controlp INFIELD mmbt009
            {<point name="construct.c.mmbt009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt010
            #add-point:BEFORE FIELD mmbt010
            {<point name="construct.b.mmbt010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt010
            
            #add-point:AFTER FIELD mmbt010
            {<point name="construct.a.mmbt010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt010
         ON ACTION controlp INFIELD mmbt010
            #add-point:ON ACTION controlp INFIELD mmbt010
            {<point name="construct.c.mmbt010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt011
            #add-point:BEFORE FIELD mmbt011
            {<point name="construct.b.mmbt011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt011
            
            #add-point:AFTER FIELD mmbt011
            {<point name="construct.a.mmbt011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt011
         ON ACTION controlp INFIELD mmbt011
            #add-point:ON ACTION controlp INFIELD mmbt011
            {<point name="construct.c.mmbt011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt012
            #add-point:BEFORE FIELD mmbt012
            {<point name="construct.b.mmbt012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt012
            
            #add-point:AFTER FIELD mmbt012
            {<point name="construct.a.mmbt012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt012
         ON ACTION controlp INFIELD mmbt012
            #add-point:ON ACTION controlp INFIELD mmbt012
            {<point name="construct.c.mmbt012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt013
            #add-point:BEFORE FIELD mmbt013
            {<point name="construct.b.mmbt013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt013
            
            #add-point:AFTER FIELD mmbt013
            {<point name="construct.a.mmbt013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt013
         ON ACTION controlp INFIELD mmbt013
            #add-point:ON ACTION controlp INFIELD mmbt013
            {<point name="construct.c.mmbt013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt014
            #add-point:BEFORE FIELD mmbt014
            {<point name="construct.b.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt014
            
            #add-point:AFTER FIELD mmbt014
            {<point name="construct.a.mmbt014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt014
         ON ACTION controlp INFIELD mmbt014
            #add-point:ON ACTION controlp INFIELD mmbt014
            {<point name="construct.c.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt015
            #add-point:BEFORE FIELD mmbt015
            {<point name="construct.b.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt015
            
            #add-point:AFTER FIELD mmbt015
            {<point name="construct.a.mmbt015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt015
         ON ACTION controlp INFIELD mmbt015
            #add-point:ON ACTION controlp INFIELD mmbt015
            {<point name="construct.c.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt016
            #add-point:BEFORE FIELD mmbt016
            {<point name="construct.b.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt016
            
            #add-point:AFTER FIELD mmbt016
            {<point name="construct.a.mmbt016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt016
         ON ACTION controlp INFIELD mmbt016
            #add-point:ON ACTION controlp INFIELD mmbt016
            {<point name="construct.c.mmbt016" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtunit
         ON ACTION controlp INFIELD mmbtunit
            #add-point:ON ACTION controlp INFIELD mmbtunit
            {<point name="construct.c.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtunit
            #add-point:BEFORE FIELD mmbtunit
            {<point name="construct.b.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtunit
            
            #add-point:AFTER FIELD mmbtunit
            {<point name="construct.a.mmbtunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt017
            #add-point:BEFORE FIELD mmbt017
            {<point name="construct.b.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt017
            
            #add-point:AFTER FIELD mmbt017
            {<point name="construct.a.mmbt017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt017
         ON ACTION controlp INFIELD mmbt017
            #add-point:ON ACTION controlp INFIELD mmbt017
            {<point name="construct.c.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtstus
            #add-point:BEFORE FIELD mmbtstus
            {<point name="construct.b.mmbtstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtstus
            
            #add-point:AFTER FIELD mmbtstus
            {<point name="construct.a.mmbtstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtstus
         ON ACTION controlp INFIELD mmbtstus
            #add-point:ON ACTION controlp INFIELD mmbtstus
            {<point name="construct.c.mmbtstus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtownid
         ON ACTION controlp INFIELD mmbtownid
            #add-point:ON ACTION controlp INFIELD mmbtownid
            {<point name="construct.c.mmbtownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtownid
            #add-point:BEFORE FIELD mmbtownid
            {<point name="construct.b.mmbtownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtownid
            
            #add-point:AFTER FIELD mmbtownid
            {<point name="construct.a.mmbtownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtowndp
         ON ACTION controlp INFIELD mmbtowndp
            #add-point:ON ACTION controlp INFIELD mmbtowndp
            {<point name="construct.c.mmbtowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtowndp
            #add-point:BEFORE FIELD mmbtowndp
            {<point name="construct.b.mmbtowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtowndp
            
            #add-point:AFTER FIELD mmbtowndp
            {<point name="construct.a.mmbtowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtcrtid
         ON ACTION controlp INFIELD mmbtcrtid
            #add-point:ON ACTION controlp INFIELD mmbtcrtid
            {<point name="construct.c.mmbtcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtid
            #add-point:BEFORE FIELD mmbtcrtid
            {<point name="construct.b.mmbtcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcrtid
            
            #add-point:AFTER FIELD mmbtcrtid
            {<point name="construct.a.mmbtcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtcrtdp
         ON ACTION controlp INFIELD mmbtcrtdp
            #add-point:ON ACTION controlp INFIELD mmbtcrtdp
            {<point name="construct.c.mmbtcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtdp
            #add-point:BEFORE FIELD mmbtcrtdp
            {<point name="construct.b.mmbtcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcrtdp
            
            #add-point:AFTER FIELD mmbtcrtdp
            {<point name="construct.a.mmbtcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtdt
            #add-point:BEFORE FIELD mmbtcrtdt
            {<point name="construct.b.mmbtcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtmodid
         ON ACTION controlp INFIELD mmbtmodid
            #add-point:ON ACTION controlp INFIELD mmbtmodid
            {<point name="construct.c.mmbtmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtmodid
            #add-point:BEFORE FIELD mmbtmodid
            {<point name="construct.b.mmbtmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtmodid
            
            #add-point:AFTER FIELD mmbtmodid
            {<point name="construct.a.mmbtmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtmoddt
            #add-point:BEFORE FIELD mmbtmoddt
            {<point name="construct.b.mmbtmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtcnfid
         ON ACTION controlp INFIELD mmbtcnfid
            #add-point:ON ACTION controlp INFIELD mmbtcnfid
            {<point name="construct.c.mmbtcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcnfid
            #add-point:BEFORE FIELD mmbtcnfid
            {<point name="construct.b.mmbtcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcnfid
            
            #add-point:AFTER FIELD mmbtcnfid
            {<point name="construct.a.mmbtcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcnfdt
            #add-point:BEFORE FIELD mmbtcnfdt
            {<point name="construct.b.mmbtcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcl002,mmcl003,mmcl004,mmcl005,mmclstus
           FROM s_detail1[1].mmcl002,s_detail1[1].mmcl003,s_detail1[1].mmcl004,s_detail1[1].mmcl005, 
               s_detail1[1].mmclstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<mmclcrtdt>>----
         
         #----<<mmclmoddt>>----
         
         #----<<mmclcnfdt>>----
         
         #----<<mmclpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD mmcl002
            #add-point:BEFORE FIELD mmcl002
            {<point name="construct.b.page1.mmcl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl002
            
            #add-point:AFTER FIELD mmcl002
            {<point name="construct.a.page1.mmcl002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcl002
         ON ACTION controlp INFIELD mmcl002
            #add-point:ON ACTION controlp INFIELD mmcl002
            {<point name="construct.c.page1.mmcl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl003
            #add-point:BEFORE FIELD mmcl003
            {<point name="construct.b.page1.mmcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl003
            
            #add-point:AFTER FIELD mmcl003
            {<point name="construct.a.page1.mmcl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcl003
         ON ACTION controlp INFIELD mmcl003
            #add-point:ON ACTION controlp INFIELD mmcl003
            {<point name="construct.c.page1.mmcl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl004
            #add-point:BEFORE FIELD mmcl004
            {<point name="construct.b.page1.mmcl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl004
            
            #add-point:AFTER FIELD mmcl004
            {<point name="construct.a.page1.mmcl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcl004
         ON ACTION controlp INFIELD mmcl004
            #add-point:ON ACTION controlp INFIELD mmcl004
            {<point name="construct.c.page1.mmcl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl005
            #add-point:BEFORE FIELD mmcl005
            {<point name="construct.b.page1.mmcl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl005
            
            #add-point:AFTER FIELD mmcl005
            {<point name="construct.a.page1.mmcl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcl005
         ON ACTION controlp INFIELD mmcl005
            #add-point:ON ACTION controlp INFIELD mmcl005
            {<point name="construct.c.page1.mmcl005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmclstus
            #add-point:BEFORE FIELD mmclstus
            {<point name="construct.b.page1.mmclstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmclstus
            
            #add-point:AFTER FIELD mmclstus
            {<point name="construct.a.page1.mmclstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmclstus
         ON ACTION controlp INFIELD mmclstus
            #add-point:ON ACTION controlp INFIELD mmclstus
            {<point name="construct.c.page1.mmclstus" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmcm002,mmcm003,mmcm004,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010, 
          mmcm011,mmcm012,mmcmstus
           FROM s_detail2[1].mmcm002,s_detail2[1].mmcm003,s_detail2[1].mmcm004,s_detail2[1].mmcm005, 
               s_detail2[1].mmcm006,s_detail2[1].mmcm007,s_detail2[1].mmcm008,s_detail2[1].mmcm009,s_detail2[1].mmcm010, 
               s_detail2[1].mmcm011,s_detail2[1].mmcm012,s_detail2[1].mmcmstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #此段落由子樣板a11產生
         ##----<<mmcmcrtdt>>----
         
         #----<<mmcmmoddt>>----
         
         #----<<mmcmcnfdt>>----
         
         #----<<mmcmpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmcm002
            #add-point:BEFORE FIELD mmcm002
            {<point name="construct.b.page2.mmcm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm002
            
            #add-point:AFTER FIELD mmcm002
            {<point name="construct.a.page2.mmcm002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm002
         ON ACTION controlp INFIELD mmcm002
            #add-point:ON ACTION controlp INFIELD mmcm002
            {<point name="construct.c.page2.mmcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm003
            #add-point:BEFORE FIELD mmcm003
            {<point name="construct.b.page2.mmcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm003
            
            #add-point:AFTER FIELD mmcm003
            {<point name="construct.a.page2.mmcm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm003
         ON ACTION controlp INFIELD mmcm003
            #add-point:ON ACTION controlp INFIELD mmcm003
            {<point name="construct.c.page2.mmcm003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm004
            #add-point:BEFORE FIELD mmcm004
            {<point name="construct.b.page2.mmcm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm004
            
            #add-point:AFTER FIELD mmcm004
            {<point name="construct.a.page2.mmcm004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm004
         ON ACTION controlp INFIELD mmcm004
            #add-point:ON ACTION controlp INFIELD mmcm004
            {<point name="construct.c.page2.mmcm004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.mmcm005
         ON ACTION controlp INFIELD mmcm005
            #add-point:ON ACTION controlp INFIELD mmcm005
            {<point name="construct.c.page2.mmcm005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm005
            #add-point:BEFORE FIELD mmcm005
            {<point name="construct.b.page2.mmcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm005
            
            #add-point:AFTER FIELD mmcm005
            {<point name="construct.a.page2.mmcm005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm006
            #add-point:BEFORE FIELD mmcm006
            {<point name="construct.b.page2.mmcm006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm006
            
            #add-point:AFTER FIELD mmcm006
            {<point name="construct.a.page2.mmcm006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm006
         ON ACTION controlp INFIELD mmcm006
            #add-point:ON ACTION controlp INFIELD mmcm006
            {<point name="construct.c.page2.mmcm006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm007
            #add-point:BEFORE FIELD mmcm007
            {<point name="construct.b.page2.mmcm007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm007
            
            #add-point:AFTER FIELD mmcm007
            {<point name="construct.a.page2.mmcm007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm007
         ON ACTION controlp INFIELD mmcm007
            #add-point:ON ACTION controlp INFIELD mmcm007
            {<point name="construct.c.page2.mmcm007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm008
            #add-point:BEFORE FIELD mmcm008
            {<point name="construct.b.page2.mmcm008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm008
            
            #add-point:AFTER FIELD mmcm008
            {<point name="construct.a.page2.mmcm008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm008
         ON ACTION controlp INFIELD mmcm008
            #add-point:ON ACTION controlp INFIELD mmcm008
            {<point name="construct.c.page2.mmcm008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm009
            #add-point:BEFORE FIELD mmcm009
            {<point name="construct.b.page2.mmcm009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm009
            
            #add-point:AFTER FIELD mmcm009
            {<point name="construct.a.page2.mmcm009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm009
         ON ACTION controlp INFIELD mmcm009
            #add-point:ON ACTION controlp INFIELD mmcm009
            {<point name="construct.c.page2.mmcm009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm010
            #add-point:BEFORE FIELD mmcm010
            {<point name="construct.b.page2.mmcm010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm010
            
            #add-point:AFTER FIELD mmcm010
            {<point name="construct.a.page2.mmcm010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm010
         ON ACTION controlp INFIELD mmcm010
            #add-point:ON ACTION controlp INFIELD mmcm010
            {<point name="construct.c.page2.mmcm010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm011
            #add-point:BEFORE FIELD mmcm011
            {<point name="construct.b.page2.mmcm011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm011
            
            #add-point:AFTER FIELD mmcm011
            {<point name="construct.a.page2.mmcm011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm011
         ON ACTION controlp INFIELD mmcm011
            #add-point:ON ACTION controlp INFIELD mmcm011
            {<point name="construct.c.page2.mmcm011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm012
            #add-point:BEFORE FIELD mmcm012
            {<point name="construct.b.page2.mmcm012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm012
            
            #add-point:AFTER FIELD mmcm012
            {<point name="construct.a.page2.mmcm012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcm012
         ON ACTION controlp INFIELD mmcm012
            #add-point:ON ACTION controlp INFIELD mmcm012
            {<point name="construct.c.page2.mmcm012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcmstus
            #add-point:BEFORE FIELD mmcmstus
            {<point name="construct.b.page2.mmcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcmstus
            
            #add-point:AFTER FIELD mmcmstus
            {<point name="construct.a.page2.mmcmstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcmstus
         ON ACTION controlp INFIELD mmcmstus
            #add-point:ON ACTION controlp INFIELD mmcmstus
            {<point name="construct.c.page2.mmcmstus" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmbx002,mmbx003,mmbx004,mmbx005,mmbxstus
           FROM s_detail3[1].mmbx002,s_detail3[1].mmbx003,s_detail3[1].mmbx004,s_detail3[1].mmbx005, 
               s_detail3[1].mmbxstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       #此段落由子樣板a11產生
         ##----<<mmbxcrtdt>>----
         
         #----<<mmbxmoddt>>----
         
         #----<<mmbxcnfdt>>----
         
         #----<<mmbxpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmbx002
            #add-point:BEFORE FIELD mmbx002
            {<point name="construct.b.page3.mmbx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx002
            
            #add-point:AFTER FIELD mmbx002
            {<point name="construct.a.page3.mmbx002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbx002
         ON ACTION controlp INFIELD mmbx002
            #add-point:ON ACTION controlp INFIELD mmbx002
            {<point name="construct.c.page3.mmbx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx003
            #add-point:BEFORE FIELD mmbx003
            {<point name="construct.b.page3.mmbx003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx003
            
            #add-point:AFTER FIELD mmbx003
            {<point name="construct.a.page3.mmbx003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbx003
         ON ACTION controlp INFIELD mmbx003
            #add-point:ON ACTION controlp INFIELD mmbx003
            {<point name="construct.c.page3.mmbx003" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.mmbx004
         ON ACTION controlp INFIELD mmbx004
            #add-point:ON ACTION controlp INFIELD mmbx004
            {<point name="construct.c.page3.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx004
            #add-point:BEFORE FIELD mmbx004
            {<point name="construct.b.page3.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx004
            
            #add-point:AFTER FIELD mmbx004
            {<point name="construct.a.page3.mmbx004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx005
            #add-point:BEFORE FIELD mmbx005
            {<point name="construct.b.page3.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx005
            
            #add-point:AFTER FIELD mmbx005
            {<point name="construct.a.page3.mmbx005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbx005
         ON ACTION controlp INFIELD mmbx005
            #add-point:ON ACTION controlp INFIELD mmbx005
            {<point name="construct.c.page3.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbxstus
            #add-point:BEFORE FIELD mmbxstus
            {<point name="construct.b.page3.mmbxstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbxstus
            
            #add-point:AFTER FIELD mmbxstus
            {<point name="construct.a.page3.mmbxstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbxstus
         ON ACTION controlp INFIELD mmbxstus
            #add-point:ON ACTION controlp INFIELD mmbxstus
            {<point name="construct.c.page3.mmbxstus" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON mmcn002,mmcn003,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus 

           FROM s_detail4[1].mmcn002,s_detail4[1].mmcn003,s_detail4[1].mmcn004,s_detail4[1].mmcn005, 
               s_detail4[1].mmcn006,s_detail4[1].mmcn007,s_detail4[1].mmcn008,s_detail4[1].mmcn009,s_detail4[1].mmcnstus 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       #此段落由子樣板a11產生
         ##----<<mmcncrtdt>>----
         
         #----<<mmcnmoddt>>----
         
         #----<<mmcncnfdt>>----
         
         #----<<mmcnpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmcn002
            #add-point:BEFORE FIELD mmcn002
            {<point name="construct.b.page4.mmcn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn002
            
            #add-point:AFTER FIELD mmcn002
            {<point name="construct.a.page4.mmcn002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn002
         ON ACTION controlp INFIELD mmcn002
            #add-point:ON ACTION controlp INFIELD mmcn002
            {<point name="construct.c.page4.mmcn002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn003
            #add-point:BEFORE FIELD mmcn003
            {<point name="construct.b.page4.mmcn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn003
            
            #add-point:AFTER FIELD mmcn003
            {<point name="construct.a.page4.mmcn003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn003
         ON ACTION controlp INFIELD mmcn003
            #add-point:ON ACTION controlp INFIELD mmcn003
            {<point name="construct.c.page4.mmcn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn004
            #add-point:BEFORE FIELD mmcn004
            {<point name="construct.b.page4.mmcn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn004
            
            #add-point:AFTER FIELD mmcn004
            {<point name="construct.a.page4.mmcn004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn004
         ON ACTION controlp INFIELD mmcn004
            #add-point:ON ACTION controlp INFIELD mmcn004
            {<point name="construct.c.page4.mmcn004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn005
            #add-point:BEFORE FIELD mmcn005
            {<point name="construct.b.page4.mmcn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn005
            
            #add-point:AFTER FIELD mmcn005
            {<point name="construct.a.page4.mmcn005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn005
         ON ACTION controlp INFIELD mmcn005
            #add-point:ON ACTION controlp INFIELD mmcn005
            {<point name="construct.c.page4.mmcn005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn006
            #add-point:BEFORE FIELD mmcn006
            {<point name="construct.b.page4.mmcn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn006
            
            #add-point:AFTER FIELD mmcn006
            {<point name="construct.a.page4.mmcn006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn006
         ON ACTION controlp INFIELD mmcn006
            #add-point:ON ACTION controlp INFIELD mmcn006
            {<point name="construct.c.page4.mmcn006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn007
            #add-point:BEFORE FIELD mmcn007
            {<point name="construct.b.page4.mmcn007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn007
            
            #add-point:AFTER FIELD mmcn007
            {<point name="construct.a.page4.mmcn007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn007
         ON ACTION controlp INFIELD mmcn007
            #add-point:ON ACTION controlp INFIELD mmcn007
            {<point name="construct.c.page4.mmcn007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn008
            #add-point:BEFORE FIELD mmcn008
            {<point name="construct.b.page4.mmcn008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn008
            
            #add-point:AFTER FIELD mmcn008
            {<point name="construct.a.page4.mmcn008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn008
         ON ACTION controlp INFIELD mmcn008
            #add-point:ON ACTION controlp INFIELD mmcn008
            {<point name="construct.c.page4.mmcn008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn009
            #add-point:BEFORE FIELD mmcn009
            {<point name="construct.b.page4.mmcn009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn009
            
            #add-point:AFTER FIELD mmcn009
            {<point name="construct.a.page4.mmcn009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcn009
         ON ACTION controlp INFIELD mmcn009
            #add-point:ON ACTION controlp INFIELD mmcn009
            {<point name="construct.c.page4.mmcn009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcnstus
            #add-point:BEFORE FIELD mmcnstus
            {<point name="construct.b.page4.mmcnstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcnstus
            
            #add-point:AFTER FIELD mmcnstus
            {<point name="construct.a.page4.mmcnstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcnstus
         ON ACTION controlp INFIELD mmcnstus
            #add-point:ON ACTION controlp INFIELD mmcnstus
            {<point name="construct.c.page4.mmcnstus" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammm353_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmbt001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammm353_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.mmbtl001 = g_mmbt_m.mmbt001
LET g_master_multi_table_t.mmbtl003 = g_mmbt_m.mmbtl003
LET g_master_multi_table_t.mmbtl004 = g_mmbt_m.mmbtl004
 
 
   CALL ammm353_show()
   
   CALL s_transaction_begin()
 
   OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
   IF STATUS THEN
      CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
      CLOSE ammm353_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammm353_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
       g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp, 
       g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt, 
       g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc, 
       g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammm353_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmbt001_t = g_mmbt_m.mmbt001
 
 
      DELETE FROM mmbt_t
       WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt_m.mmbt001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmcl_t
       WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt_m.mmbt001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmcm_t
       WHERE mmcment = g_enterprise AND
             mmcm001 = g_mmbt_m.mmbt001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcm_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmbx_t
       WHERE mmbxent = g_enterprise AND
             mmbx001 = g_mmbt_m.mmbt001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM mmcn_t
       WHERE mmcnent = g_enterprise AND
             mmcn001 = g_mmbt_m.mmbt001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcn_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmcl_d.clear() 
      CALL g_mmcl2_d.clear()       
      CALL g_mmcl3_d.clear()       
      CALL g_mmcl4_d.clear()       
 
     
      #CALL ammm353_ui_browser_refresh()  
      CALL ammm353_ui_headershow()  
      CALL ammm353_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammm353_browser_fill("")
         CALL ammm353_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammm353_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
   LET l_field_keys[01] = 'mmbtl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'mmbtl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mmbtl_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammm353_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmbt_m.mmbt001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="ammm353.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammm353_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcl_t
       WHERE mmclent = g_enterprise AND
         mmcl001 = ps_keys_bak[1] AND mmcl003 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcm_t
       WHERE mmcment = g_enterprise AND
         mmcm001 = ps_keys_bak[1] AND mmcm003 = ps_keys_bak[2] AND mmcm004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcm_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmbx_t
       WHERE mmbxent = g_enterprise AND
         mmbx001 = ps_keys_bak[1] AND mmbx004 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcn_t
       WHERE mmcnent = g_enterprise AND
         mmcn001 = ps_keys_bak[1] AND mmcn003 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.description" ver="16" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000068
#+ 
#+ Filename...: ammm353
#+ Description: 換贈規則維護作業-累計積點
#+ Creator....: 01726(2013/12/25)
#+ Modifier...: 01726(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="ammm353.detail_reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammm353_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmcl_t.*
   DEFINE l_detail2    RECORD LIKE mmcm_t.*
 
   DEFINE l_detail3    RECORD LIKE mmbx_t.*
 
   DEFINE l_detail4    RECORD LIKE mmcn_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammm353_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammm353_detail AS ",
                "SELECT * FROM mmcl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm353_detail SELECT * FROM mmcl_t 
                                         WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt001_t
 
   
   #將key修正為調整後   
   UPDATE ammm353_detail 
      #更新key欄位
      SET mmcl001 = g_mmbt_m.mmbt001
 
      #更新共用欄位
      #此段落由子樣板a13產生
      #, mmclstus = "Y"
 
#此段落由子樣板a13產生
      #, mmcmstus = "Y"
 
#此段落由子樣板a13產生
      #, mmbxstus = "Y"
 
#此段落由子樣板a13產生
      #, mmcnstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO mmcl_t SELECT * FROM ammm353_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm353_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammm353_detail AS ",
      "SELECT * FROM mmcm_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm353_detail SELECT * FROM mmcm_t
                                         WHERE mmcment = g_enterprise AND mmcm001 = g_mmbt001_t
 
 
   #將key修正為調整後   
   UPDATE ammm353_detail SET mmcm001 = g_mmbt_m.mmbt001
 
  
   #將資料塞回原table   
   INSERT INTO mmcm_t SELECT * FROM ammm353_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm353_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammm353_detail AS ",
      "SELECT * FROM mmbx_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm353_detail SELECT * FROM mmbx_t
                                         WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt001_t
 
 
   #將key修正為調整後   
   UPDATE ammm353_detail SET mmbx001 = g_mmbt_m.mmbt001
 
  
   #將資料塞回原table   
   INSERT INTO mmbx_t SELECT * FROM ammm353_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm353_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammm353_detail AS ",
      "SELECT * FROM mmcn_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm353_detail SELECT * FROM mmcn_t
                                         WHERE mmcnent = g_enterprise AND mmcn001 = g_mmbt001_t
 
 
   #將key修正為調整後   
   UPDATE ammm353_detail SET mmcn001 = g_mmbt_m.mmbt001
 
  
   #將資料塞回原table   
   INSERT INTO mmcn_t SELECT * FROM ammm353_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm353_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   
   DROP TABLE ammm353_detail
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammm353_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammm353_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbt_m.mmbt001 = g_browser[g_current_idx].b_mmbt001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammm353_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
       g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp, 
       g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt, 
       g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc, 
       g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("mmbt_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmbt_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammm353_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammm353_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammm353_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmbt004,mmbt001,mmbt002,mmbt005,mmbt006,mmbt009,mmbt010,mmbt011,mmbt012, 
          mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017
                          FROM s_browse[1].b_mmbt004,s_browse[1].b_mmbt001,s_browse[1].b_mmbt002,s_browse[1].b_mmbt005, 
                              s_browse[1].b_mmbt006,s_browse[1].b_mmbt009,s_browse[1].b_mmbt010,s_browse[1].b_mmbt011, 
                              s_browse[1].b_mmbt012,s_browse[1].b_mmbt013,s_browse[1].b_mmbt014,s_browse[1].b_mmbt015, 
                              s_browse[1].b_mmbt016,s_browse[1].b_mmbtunit,s_browse[1].b_mmbt017
 
         BEFORE CONSTRUCT
               DISPLAY ammm353_filter_parser('mmbt004') TO s_browse[1].b_mmbt004
            DISPLAY ammm353_filter_parser('mmbt001') TO s_browse[1].b_mmbt001
            DISPLAY ammm353_filter_parser('mmbt002') TO s_browse[1].b_mmbt002
            DISPLAY ammm353_filter_parser('mmbt005') TO s_browse[1].b_mmbt005
            DISPLAY ammm353_filter_parser('mmbt006') TO s_browse[1].b_mmbt006
            DISPLAY ammm353_filter_parser('mmbt009') TO s_browse[1].b_mmbt009
            DISPLAY ammm353_filter_parser('mmbt010') TO s_browse[1].b_mmbt010
            DISPLAY ammm353_filter_parser('mmbt011') TO s_browse[1].b_mmbt011
            DISPLAY ammm353_filter_parser('mmbt012') TO s_browse[1].b_mmbt012
            DISPLAY ammm353_filter_parser('mmbt013') TO s_browse[1].b_mmbt013
            DISPLAY ammm353_filter_parser('mmbt014') TO s_browse[1].b_mmbt014
            DISPLAY ammm353_filter_parser('mmbt015') TO s_browse[1].b_mmbt015
            DISPLAY ammm353_filter_parser('mmbt016') TO s_browse[1].b_mmbt016
            DISPLAY ammm353_filter_parser('mmbtunit') TO s_browse[1].b_mmbtunit
            DISPLAY ammm353_filter_parser('mmbt017') TO s_browse[1].b_mmbt017
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammm353_filter_show('mmbt004')
   CALL ammm353_filter_show('mmbt001')
   CALL ammm353_filter_show('mmbt002')
   CALL ammm353_filter_show('mmbt005')
   CALL ammm353_filter_show('mmbt006')
   CALL ammm353_filter_show('mmbt009')
   CALL ammm353_filter_show('mmbt010')
   CALL ammm353_filter_show('mmbt011')
   CALL ammm353_filter_show('mmbt012')
   CALL ammm353_filter_show('mmbt013')
   CALL ammm353_filter_show('mmbt014')
   CALL ammm353_filter_show('mmbt015')
   CALL ammm353_filter_show('mmbt016')
   CALL ammm353_filter_show('mmbtunit')
   CALL ammm353_filter_show('mmbt017')
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammm353_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammm353_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammm353_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.global" ver="8" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbt_m        RECORD
       mmbt004 LIKE mmbt_t.mmbt004, 
   mmbt001 LIKE mmbt_t.mmbt001, 
   mmbt002 LIKE mmbt_t.mmbt002, 
   mmbtl003 LIKE mmbtl_t.mmbtl003, 
   mmbtl004 LIKE mmbtl_t.mmbtl004, 
   mmbt005 LIKE mmbt_t.mmbt005, 
   mmbt005_desc LIKE type_t.chr80, 
   mmbt006 LIKE mmbt_t.mmbt006, 
   mmbt009 LIKE mmbt_t.mmbt009, 
   mmbt010 LIKE mmbt_t.mmbt010, 
   mmbt011 LIKE mmbt_t.mmbt011, 
   mmbt012 LIKE mmbt_t.mmbt012, 
   mmbt013 LIKE mmbt_t.mmbt013, 
   mmbt014 LIKE mmbt_t.mmbt014, 
   mmbt015 LIKE mmbt_t.mmbt015, 
   mmbt016 DATETIME YEAR TO SECOND, 
   mmbtunit LIKE mmbt_t.mmbtunit, 
   mmbtunit_desc LIKE type_t.chr80, 
   mmbt017 LIKE mmbt_t.mmbt017, 
   mmbtstus LIKE mmbt_t.mmbtstus, 
   mmbtownid LIKE mmbt_t.mmbtownid, 
   mmbtownid_desc LIKE type_t.chr80, 
   mmbtowndp LIKE mmbt_t.mmbtowndp, 
   mmbtowndp_desc LIKE type_t.chr80, 
   mmbtcrtid LIKE mmbt_t.mmbtcrtid, 
   mmbtcrtid_desc LIKE type_t.chr80, 
   mmbtcrtdp LIKE mmbt_t.mmbtcrtdp, 
   mmbtcrtdp_desc LIKE type_t.chr80, 
   mmbtcrtdt DATETIME YEAR TO SECOND, 
   mmbtmodid LIKE mmbt_t.mmbtmodid, 
   mmbtmodid_desc LIKE type_t.chr80, 
   mmbtmoddt DATETIME YEAR TO SECOND, 
   mmbtcnfid LIKE mmbt_t.mmbtcnfid, 
   mmbtcnfid_desc LIKE type_t.chr80, 
   mmbtcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmcl_d        RECORD
       mmcl002 LIKE mmcl_t.mmcl002, 
   mmcl003 LIKE mmcl_t.mmcl003, 
   mmcl004 LIKE mmcl_t.mmcl004, 
   mmcl005 LIKE mmcl_t.mmcl005, 
   mmclstus LIKE mmcl_t.mmclstus
       END RECORD
PRIVATE TYPE type_g_mmcl2_d RECORD
       mmcm002 LIKE mmcm_t.mmcm002, 
   mmcm003 LIKE mmcm_t.mmcm003, 
   mmcm004 LIKE mmcm_t.mmcm004, 
   mmcm005 LIKE mmcm_t.mmcm005, 
   mmcm005_desc LIKE type_t.chr80, 
   mmcm006 LIKE mmcm_t.mmcm006, 
   mmcm007 LIKE mmcm_t.mmcm007, 
   mmcm008 LIKE mmcm_t.mmcm008, 
   mmcm009 LIKE mmcm_t.mmcm009, 
   mmcm010 LIKE mmcm_t.mmcm010, 
   mmcm011 LIKE mmcm_t.mmcm011, 
   mmcm012 LIKE mmcm_t.mmcm012, 
   mmcmstus LIKE mmcm_t.mmcmstus
       END RECORD
PRIVATE TYPE type_g_mmcl3_d RECORD
       mmbx002 LIKE mmbx_t.mmbx002, 
   mmbx003 LIKE mmbx_t.mmbx003, 
   mmbx004 LIKE mmbx_t.mmbx004, 
   mmbx004_desc LIKE type_t.chr500, 
   mmbx005 LIKE mmbx_t.mmbx005, 
   mmbxstus LIKE mmbx_t.mmbxstus
       END RECORD
PRIVATE TYPE type_g_mmcl4_d RECORD
       mmcn002 LIKE mmcn_t.mmcn002, 
   mmcn003 LIKE mmcn_t.mmcn003, 
   mmcn004 LIKE mmcn_t.mmcn004, 
   mmcn005 LIKE mmcn_t.mmcn005, 
   mmcn006 LIKE mmcn_t.mmcn006, 
   mmcn007 LIKE mmcn_t.mmcn007, 
   mmcn008 LIKE mmcn_t.mmcn008, 
   mmcn009 LIKE mmcn_t.mmcn009, 
   mmcnstus LIKE mmcn_t.mmcnstus
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmbt_m          type_g_mmbt_m
DEFINE g_mmbt_m_t        type_g_mmbt_m
 
   DEFINE g_mmbt001_t LIKE mmbt_t.mmbt001
 
 
DEFINE g_mmcl_d          DYNAMIC ARRAY OF type_g_mmcl_d
DEFINE g_mmcl_d_t        type_g_mmcl_d
DEFINE g_mmcl2_d   DYNAMIC ARRAY OF type_g_mmcl2_d
DEFINE g_mmcl2_d_t type_g_mmcl2_d
DEFINE g_mmcl3_d   DYNAMIC ARRAY OF type_g_mmcl3_d
DEFINE g_mmcl3_d_t type_g_mmcl3_d
DEFINE g_mmcl4_d   DYNAMIC ARRAY OF type_g_mmcl4_d
DEFINE g_mmcl4_d_t type_g_mmcl4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbt004 LIKE mmbt_t.mmbt004,
      b_mmbt001 LIKE mmbt_t.mmbt001,
      b_mmbt002 LIKE mmbt_t.mmbt002,
      b_mmbt005 LIKE mmbt_t.mmbt005,
   b_mmbt005_desc LIKE type_t.chr80,
      b_mmbt006 LIKE mmbt_t.mmbt006,
      b_mmbt009 LIKE mmbt_t.mmbt009,
      b_mmbt010 LIKE mmbt_t.mmbt010,
      b_mmbt011 LIKE mmbt_t.mmbt011,
      b_mmbt012 LIKE mmbt_t.mmbt012,
      b_mmbt013 LIKE mmbt_t.mmbt013,
      b_mmbt014 LIKE mmbt_t.mmbt014,
      b_mmbt015 LIKE mmbt_t.mmbt015,
      b_mmbt016 LIKE mmbt_t.mmbt016,
      b_mmbtunit LIKE mmbt_t.mmbtunit,
   b_mmbtunit_desc LIKE type_t.chr80,
      b_mmbt017 LIKE mmbt_t.mmbt017
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbt004 LIKE mmbt_t.mmbt004,
      b_mmbt001 LIKE mmbt_t.mmbt001,
      b_mmbt002 LIKE mmbt_t.mmbt002,
      b_mmbt005 LIKE mmbt_t.mmbt005,
   b_mmbt005_desc LIKE type_t.chr80,
      b_mmbt006 LIKE mmbt_t.mmbt006,
      b_mmbt009 LIKE mmbt_t.mmbt009,
      b_mmbt010 LIKE mmbt_t.mmbt010,
      b_mmbt011 LIKE mmbt_t.mmbt011,
      b_mmbt012 LIKE mmbt_t.mmbt012,
      b_mmbt013 LIKE mmbt_t.mmbt013,
      b_mmbt014 LIKE mmbt_t.mmbt014,
      b_mmbt015 LIKE mmbt_t.mmbt015,
      b_mmbt016 LIKE mmbt_t.mmbt016,
      b_mmbtunit LIKE mmbt_t.mmbtunit,
   b_mmbtunit_desc LIKE type_t.chr80,
      b_mmbt017 LIKE mmbt_t.mmbt017
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      mmbtl001 LIKE mmbtl_t.mmbtl001,
      mmbtl003 LIKE mmbtl_t.mmbtl003,
      mmbtl004 LIKE mmbtl_t.mmbtl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammm353.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammm353_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmcl_d.getLength() THEN
         LET g_detail_idx = g_mmcl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmcl2_d.getLength() THEN
         LET g_detail_idx = g_mmcl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmcl3_d.getLength() THEN
         LET g_detail_idx = g_mmcl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcl3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_mmcl4_d.getLength() THEN
         LET g_detail_idx = g_mmcl4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcl4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcl4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammm353_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmbtstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('mmbt004','6516') 
   CALL cl_set_combo_scc('mmbt009','6534') 
   CALL cl_set_combo_scc('mmbt010','6535') 
   CALL cl_set_combo_scc('mmbt011','6536') 
   CALL cl_set_combo_scc('mmcm004','6517') 
   CALL cl_set_combo_scc('mmcm008','6537') 
   CALL cl_set_combo_scc('mmcm012','6538') 
   CALL cl_set_combo_scc('mmcn008','6520') 
   CALL cl_set_combo_scc('mmcn009','30') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammm353_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammm353.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammm353_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmcl002,mmcl003,mmcl004,mmcl005,mmclstus FROM mmcl_t WHERE mmclent=? AND  
       mmcl001=? AND mmcl003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm353_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcm002,mmcm003,mmcm004,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010, 
       mmcm011,mmcm012,mmcmstus FROM mmcm_t WHERE mmcment=? AND mmcm001=? AND mmcm003=? AND mmcm004=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm353_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmbx002,mmbx003,mmbx004,mmbx005,mmbxstus FROM mmbx_t WHERE mmbxent=? AND  
       mmbx001=? AND mmbx004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm353_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcn002,mmcn003,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus  
       FROM mmcn_t WHERE mmcnent=? AND mmcn001=? AND mmcn003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm353_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammm353_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammm353_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
       g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="ammm353.input.body" ver="7" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmcl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm353_b_fill()
            LET g_rec_b = g_mmcl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
               CLOSE ammm353_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcl_d[l_ac].mmcl003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmcl_d_t.* = g_mmcl_d[l_ac].*  #BACKUP
               CALL ammm353_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammm353_set_no_entry_b(l_cmd)
               IF NOT ammm353_lock_b("mmcl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm353_bcl INTO g_mmcl_d[l_ac].mmcl002,g_mmcl_d[l_ac].mmcl003,g_mmcl_d[l_ac].mmcl004, 
                      g_mmcl_d[l_ac].mmcl005,g_mmcl_d[l_ac].mmclstus
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmcl_d_t.mmcl003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm353_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcl_d[l_ac].* TO NULL 
                  LET g_mmcl_d[l_ac].mmcl003 = "1"
      LET g_mmcl_d[l_ac].mmcl004 = "0"
      LET g_mmcl_d[l_ac].mmcl005 = "1"
      LET g_mmcl_d[l_ac].mmclstus = "Y"
 
            LET g_mmcl_d_t.* = g_mmcl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm353_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm353_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcl_d[li_reproduce_target].* = g_mmcl_d[li_reproduce].*
 
               LET g_mmcl_d[li_reproduce_target].mmcl003 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_mmcl_d[l_ac].mmclstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcl_t 
             WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt_m.mmbt001
 
               AND mmcl003 = g_mmcl_d[l_ac].mmcl003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl_d[g_detail_idx].mmcl003
               CALL ammm353_insert_b('mmcl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm353_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcl_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcl_d.deleteElement(l_ac)
               NEXT FIELD mmcl003
            END IF
         
            IF g_mmcl_d[l_ac].mmcl003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmcl_t
                WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt_m.mmbt001 AND
 
                      mmcl003 = g_mmcl_d_t.mmcl003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm353_bcl
               LET l_count = g_mmcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl_d[g_detail_idx].mmcl003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammm353_delete_b('mmcl_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcl002
            #add-point:BEFORE FIELD mmcl002
            {<point name="input.b.page1.mmcl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl002
            
            #add-point:AFTER FIELD mmcl002
            {<point name="input.a.page1.mmcl002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcl002
            #add-point:ON CHANGE mmcl002
            {<point name="input.g.page1.mmcl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl003
            #add-point:BEFORE FIELD mmcl003
            {<point name="input.b.page1.mmcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl003
            
            #add-point:AFTER FIELD mmcl003
            {<point name="input.a.page1.mmcl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcl003
            #add-point:ON CHANGE mmcl003
            {<point name="input.g.page1.mmcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl_d[l_ac].mmcl004,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmcl004
            END IF
 
 
            #add-point:AFTER FIELD mmcl004
            {<point name="input.a.page1.mmcl004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl004
            #add-point:BEFORE FIELD mmcl004
            {<point name="input.b.page1.mmcl004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcl004
            #add-point:ON CHANGE mmcl004
            {<point name="input.g.page1.mmcl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcl005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl_d[l_ac].mmcl005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmcl005
            END IF
 
 
            #add-point:AFTER FIELD mmcl005
            {<point name="input.a.page1.mmcl005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcl005
            #add-point:BEFORE FIELD mmcl005
            {<point name="input.b.page1.mmcl005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcl005
            #add-point:ON CHANGE mmcl005
            {<point name="input.g.page1.mmcl005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmclstus
            #add-point:BEFORE FIELD mmclstus
            {<point name="input.b.page1.mmclstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmclstus
            
            #add-point:AFTER FIELD mmclstus
            {<point name="input.a.page1.mmclstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmclstus
            #add-point:ON CHANGE mmclstus
            {<point name="input.g.page1.mmclstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmcl002
         ON ACTION controlp INFIELD mmcl002
            #add-point:ON ACTION controlp INFIELD mmcl002
            {<point name="input.c.page1.mmcl002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcl003
         ON ACTION controlp INFIELD mmcl003
            #add-point:ON ACTION controlp INFIELD mmcl003
            {<point name="input.c.page1.mmcl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcl004
         ON ACTION controlp INFIELD mmcl004
            #add-point:ON ACTION controlp INFIELD mmcl004
            {<point name="input.c.page1.mmcl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcl005
         ON ACTION controlp INFIELD mmcl005
            #add-point:ON ACTION controlp INFIELD mmcl005
            {<point name="input.c.page1.mmcl005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmclstus
         ON ACTION controlp INFIELD mmclstus
            #add-point:ON ACTION controlp INFIELD mmclstus
            {<point name="input.c.page1.mmclstus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcl_d[l_ac].* = g_mmcl_d_t.*
               CLOSE ammm353_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmcl_d[l_ac].mmcl003,-263,1)
               LET g_mmcl_d[l_ac].* = g_mmcl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
 
      
               UPDATE mmcl_t SET (mmcl001,mmcl002,mmcl003,mmcl004,mmcl005,mmclstus) = (g_mmbt_m.mmbt001, 
                   g_mmcl_d[l_ac].mmcl002,g_mmcl_d[l_ac].mmcl003,g_mmcl_d[l_ac].mmcl004,g_mmcl_d[l_ac].mmcl005, 
                   g_mmcl_d[l_ac].mmclstus)
                WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt_m.mmbt001 
 
                  AND mmcl003 = g_mmcl_d_t.mmcl003 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcl_d[l_ac].* = g_mmcl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcl_t",SQLCA.sqlcode,1)
                     LET g_mmcl_d[l_ac].* = g_mmcl_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcl_d[g_detail_idx].mmcl003
               LET gs_keys_bak[2] = g_mmcl_d_t.mmcl003
               CALL ammm353_update_b('mmcl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammm353_unlock_b("mmcl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmcl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmcl2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcl2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm353_b_fill()
            LET g_rec_b = g_mmcl2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcl2_d[l_ac].* TO NULL 
                  LET g_mmcl2_d[l_ac].mmcm003 = "1"
      LET g_mmcl2_d[l_ac].mmcm004 = "4"
      LET g_mmcl2_d[l_ac].mmcm007 = "1"
      LET g_mmcl2_d[l_ac].mmcm008 = "0"
      LET g_mmcl2_d[l_ac].mmcm009 = "0"
      LET g_mmcl2_d[l_ac].mmcm010 = "0"
      LET g_mmcl2_d[l_ac].mmcm012 = "1"
      LET g_mmcl2_d[l_ac].mmcmstus = "Y"
 
            LET g_mmcl2_d_t.* = g_mmcl2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm353_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm353_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcl2_d[li_reproduce_target].* = g_mmcl2_d[li_reproduce].*
 
               LET g_mmcl2_d[li_reproduce_target].mmcm003 = NULL
               LET g_mmcl2_d[li_reproduce_target].mmcm004 = NULL
            END IF
            #公用欄位給值(單身2)
            #此段落由子樣板a14產生    
      LET g_mmcl2_d[l_ac].mmcmstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
               CLOSE ammm353_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcl2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcl2_d[l_ac].mmcm003 IS NOT NULL
               AND g_mmcl2_d[l_ac].mmcm004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmcl2_d_t.* = g_mmcl2_d[l_ac].*  #BACKUP
               CALL ammm353_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammm353_set_no_entry_b(l_cmd)
               IF NOT ammm353_lock_b("mmcm_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm353_bcl2 INTO g_mmcl2_d[l_ac].mmcm002,g_mmcl2_d[l_ac].mmcm003,g_mmcl2_d[l_ac].mmcm004, 
                      g_mmcl2_d[l_ac].mmcm005,g_mmcl2_d[l_ac].mmcm006,g_mmcl2_d[l_ac].mmcm007,g_mmcl2_d[l_ac].mmcm008, 
                      g_mmcl2_d[l_ac].mmcm009,g_mmcl2_d[l_ac].mmcm010,g_mmcl2_d[l_ac].mmcm011,g_mmcl2_d[l_ac].mmcm012, 
                      g_mmcl2_d[l_ac].mmcmstus
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm353_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcl2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcl2_d.deleteElement(l_ac)
               NEXT FIELD mmcm003
            END IF
         
            IF g_mmcl2_d[l_ac].mmcm003 IS NOT NULL
               AND g_mmcl2_d_t.mmcm004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmcm_t
                WHERE mmcment = g_enterprise AND mmcm001 = g_mmbt_m.mmbt001 AND
                      mmcm003 = g_mmcl2_d_t.mmcm003
                  AND mmcm004 = g_mmcl2_d_t.mmcm004
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm353_bcl
               LET l_count = g_mmcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl2_d[g_detail_idx].mmcm003
               LET gs_keys[3] = g_mmcl2_d[g_detail_idx].mmcm004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL ammm353_delete_b('mmcm_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcm_t 
             WHERE mmcment = g_enterprise AND mmcm001 = g_mmbt_m.mmbt001
               AND mmcm003 = g_mmcl2_d[l_ac].mmcm003
               AND mmcm004 = g_mmcl2_d[l_ac].mmcm004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl2_d[g_detail_idx].mmcm003
               LET gs_keys[3] = g_mmcl2_d[g_detail_idx].mmcm004
               CALL ammm353_insert_b('mmcm_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcm_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm353_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcl2_d[l_ac].* = g_mmcl2_d_t.*
               CLOSE ammm353_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmcl2_d[l_ac].* = g_mmcl2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
 
               
               UPDATE mmcm_t SET (mmcm001,mmcm002,mmcm003,mmcm004,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009, 
                   mmcm010,mmcm011,mmcm012,mmcmstus) = (g_mmbt_m.mmbt001,g_mmcl2_d[l_ac].mmcm002,g_mmcl2_d[l_ac].mmcm003, 
                   g_mmcl2_d[l_ac].mmcm004,g_mmcl2_d[l_ac].mmcm005,g_mmcl2_d[l_ac].mmcm006,g_mmcl2_d[l_ac].mmcm007, 
                   g_mmcl2_d[l_ac].mmcm008,g_mmcl2_d[l_ac].mmcm009,g_mmcl2_d[l_ac].mmcm010,g_mmcl2_d[l_ac].mmcm011, 
                   g_mmcl2_d[l_ac].mmcm012,g_mmcl2_d[l_ac].mmcmstus) #自訂欄位頁簽
                WHERE mmcment = g_enterprise AND mmcm001 = g_mmbt_m.mmbt001
                  AND mmcm003 = g_mmcl2_d_t.mmcm003 #項次 
                  AND mmcm004 = g_mmcl2_d_t.mmcm004
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcm_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcl2_d[l_ac].* = g_mmcl2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcm_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmcl2_d[l_ac].* = g_mmcl2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcl2_d[g_detail_idx].mmcm003
               LET gs_keys_bak[2] = g_mmcl2_d_t.mmcm003
               LET gs_keys[3] = g_mmcl2_d[g_detail_idx].mmcm004
               LET gs_keys_bak[3] = g_mmcl2_d_t.mmcm004
               CALL ammm353_update_b('mmcm_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl2_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcm002
            #add-point:BEFORE FIELD mmcm002
            {<point name="input.b.page2.mmcm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm002
            
            #add-point:AFTER FIELD mmcm002
            {<point name="input.a.page2.mmcm002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm002
            #add-point:ON CHANGE mmcm002
            {<point name="input.g.page2.mmcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm003
            #add-point:BEFORE FIELD mmcm003
            {<point name="input.b.page2.mmcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm003
            
            #add-point:AFTER FIELD mmcm003
            {<point name="input.a.page2.mmcm003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm003
            #add-point:ON CHANGE mmcm003
            {<point name="input.g.page2.mmcm003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm004
            #add-point:BEFORE FIELD mmcm004
            {<point name="input.b.page2.mmcm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm004
            
            #add-point:AFTER FIELD mmcm004
            {<point name="input.a.page2.mmcm004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm004
            #add-point:ON CHANGE mmcm004
            {<point name="input.g.page2.mmcm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm005
            #add-point:BEFORE FIELD mmcm005
            {<point name="input.b.page2.mmcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm005
            
            #add-point:AFTER FIELD mmcm005
            {<point name="input.a.page2.mmcm005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm005
            #add-point:ON CHANGE mmcm005
            {<point name="input.g.page2.mmcm005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm006
            #add-point:BEFORE FIELD mmcm006
            {<point name="input.b.page2.mmcm006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm006
            
            #add-point:AFTER FIELD mmcm006
            {<point name="input.a.page2.mmcm006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm006
            #add-point:ON CHANGE mmcm006
            {<point name="input.g.page2.mmcm006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl2_d[l_ac].mmcm007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmcm007
            END IF
 
 
            #add-point:AFTER FIELD mmcm007
            {<point name="input.a.page2.mmcm007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm007
            #add-point:BEFORE FIELD mmcm007
            {<point name="input.b.page2.mmcm007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm007
            #add-point:ON CHANGE mmcm007
            {<point name="input.g.page2.mmcm007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm008
            #add-point:BEFORE FIELD mmcm008
            {<point name="input.b.page2.mmcm008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm008
            
            #add-point:AFTER FIELD mmcm008
            {<point name="input.a.page2.mmcm008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm008
            #add-point:ON CHANGE mmcm008
            {<point name="input.g.page2.mmcm008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl2_d[l_ac].mmcm009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmcm009
            END IF
 
 
            #add-point:AFTER FIELD mmcm009
            {<point name="input.a.page2.mmcm009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm009
            #add-point:BEFORE FIELD mmcm009
            {<point name="input.b.page2.mmcm009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm009
            #add-point:ON CHANGE mmcm009
            {<point name="input.g.page2.mmcm009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl2_d[l_ac].mmcm010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmcm010
            END IF
 
 
            #add-point:AFTER FIELD mmcm010
            {<point name="input.a.page2.mmcm010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm010
            #add-point:BEFORE FIELD mmcm010
            {<point name="input.b.page2.mmcm010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm010
            #add-point:ON CHANGE mmcm010
            {<point name="input.g.page2.mmcm010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmcl2_d[l_ac].mmcm011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmcm011
            END IF
 
 
            #add-point:AFTER FIELD mmcm011
            {<point name="input.a.page2.mmcm011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm011
            #add-point:BEFORE FIELD mmcm011
            {<point name="input.b.page2.mmcm011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm011
            #add-point:ON CHANGE mmcm011
            {<point name="input.g.page2.mmcm011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcm012
            #add-point:BEFORE FIELD mmcm012
            {<point name="input.b.page2.mmcm012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcm012
            
            #add-point:AFTER FIELD mmcm012
            {<point name="input.a.page2.mmcm012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcm012
            #add-point:ON CHANGE mmcm012
            {<point name="input.g.page2.mmcm012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcmstus
            #add-point:BEFORE FIELD mmcmstus
            {<point name="input.b.page2.mmcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcmstus
            
            #add-point:AFTER FIELD mmcmstus
            {<point name="input.a.page2.mmcmstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcmstus
            #add-point:ON CHANGE mmcmstus
            {<point name="input.g.page2.mmcmstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.mmcm002
         ON ACTION controlp INFIELD mmcm002
            #add-point:ON ACTION controlp INFIELD mmcm002
            {<point name="input.c.page2.mmcm002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm003
         ON ACTION controlp INFIELD mmcm003
            #add-point:ON ACTION controlp INFIELD mmcm003
            {<point name="input.c.page2.mmcm003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm004
         ON ACTION controlp INFIELD mmcm004
            #add-point:ON ACTION controlp INFIELD mmcm004
            {<point name="input.c.page2.mmcm004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm005
         ON ACTION controlp INFIELD mmcm005
            #add-point:ON ACTION controlp INFIELD mmcm005
            {<point name="input.c.page2.mmcm005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm006
         ON ACTION controlp INFIELD mmcm006
            #add-point:ON ACTION controlp INFIELD mmcm006
            {<point name="input.c.page2.mmcm006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm007
         ON ACTION controlp INFIELD mmcm007
            #add-point:ON ACTION controlp INFIELD mmcm007
            {<point name="input.c.page2.mmcm007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm008
         ON ACTION controlp INFIELD mmcm008
            #add-point:ON ACTION controlp INFIELD mmcm008
            {<point name="input.c.page2.mmcm008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm009
         ON ACTION controlp INFIELD mmcm009
            #add-point:ON ACTION controlp INFIELD mmcm009
            {<point name="input.c.page2.mmcm009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm010
         ON ACTION controlp INFIELD mmcm010
            #add-point:ON ACTION controlp INFIELD mmcm010
            {<point name="input.c.page2.mmcm010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm011
         ON ACTION controlp INFIELD mmcm011
            #add-point:ON ACTION controlp INFIELD mmcm011
            {<point name="input.c.page2.mmcm011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcm012
         ON ACTION controlp INFIELD mmcm012
            #add-point:ON ACTION controlp INFIELD mmcm012
            {<point name="input.c.page2.mmcm012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcmstus
         ON ACTION controlp INFIELD mmcmstus
            #add-point:ON ACTION controlp INFIELD mmcmstus
            {<point name="input.c.page2.mmcmstus" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmcl2_d[l_ac].* = g_mmcl2_d_t.*
               END IF
               CLOSE ammm353_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammm353_unlock_b("mmcm_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmcl2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcl2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmcl3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcl3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm353_b_fill()
            LET g_rec_b = g_mmcl3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcl3_d[l_ac].* TO NULL 
                  LET g_mmcl3_d[l_ac].mmbx005 = "N"
      LET g_mmcl3_d[l_ac].mmbxstus = "Y"
 
            LET g_mmcl3_d_t.* = g_mmcl3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm353_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm353_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcl3_d[li_reproduce_target].* = g_mmcl3_d[li_reproduce].*
 
               LET g_mmcl3_d[li_reproduce_target].mmbx004 = NULL
            END IF
            #公用欄位給值(單身3)
            #此段落由子樣板a14產生    
      LET g_mmcl3_d[l_ac].mmbxstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
               CLOSE ammm353_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcl3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcl3_d[l_ac].mmbx004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmcl3_d_t.* = g_mmcl3_d[l_ac].*  #BACKUP
               CALL ammm353_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammm353_set_no_entry_b(l_cmd)
               IF NOT ammm353_lock_b("mmbx_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm353_bcl3 INTO g_mmcl3_d[l_ac].mmbx002,g_mmcl3_d[l_ac].mmbx003,g_mmcl3_d[l_ac].mmbx004, 
                      g_mmcl3_d[l_ac].mmbx005,g_mmcl3_d[l_ac].mmbxstus
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm353_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcl3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcl3_d.deleteElement(l_ac)
               NEXT FIELD mmbx004
            END IF
         
            IF g_mmcl3_d[l_ac].mmbx004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmbx_t
                WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001 AND
                      mmbx004 = g_mmcl3_d_t.mmbx004
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm353_bcl
               LET l_count = g_mmcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl3_d[g_detail_idx].mmbx004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL ammm353_delete_b('mmbx_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmbx_t 
             WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001
               AND mmbx004 = g_mmcl3_d[l_ac].mmbx004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl3_d[g_detail_idx].mmbx004
               CALL ammm353_insert_b('mmbx_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm353_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcl3_d[l_ac].* = g_mmcl3_d_t.*
               CLOSE ammm353_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmcl3_d[l_ac].* = g_mmcl3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
 
               
               UPDATE mmbx_t SET (mmbx001,mmbx002,mmbx003,mmbx004,mmbx005,mmbxstus) = (g_mmbt_m.mmbt001, 
                   g_mmcl3_d[l_ac].mmbx002,g_mmcl3_d[l_ac].mmbx003,g_mmcl3_d[l_ac].mmbx004,g_mmcl3_d[l_ac].mmbx005, 
                   g_mmcl3_d[l_ac].mmbxstus) #自訂欄位頁簽
                WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001
                  AND mmbx004 = g_mmcl3_d_t.mmbx004 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmbx_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcl3_d[l_ac].* = g_mmcl3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmcl3_d[l_ac].* = g_mmcl3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcl3_d[g_detail_idx].mmbx004
               LET gs_keys_bak[2] = g_mmcl3_d_t.mmbx004
               CALL ammm353_update_b('mmbx_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl3_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbx002
            #add-point:BEFORE FIELD mmbx002
            {<point name="input.b.page3.mmbx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx002
            
            #add-point:AFTER FIELD mmbx002
            {<point name="input.a.page3.mmbx002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx002
            #add-point:ON CHANGE mmbx002
            {<point name="input.g.page3.mmbx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx003
            #add-point:BEFORE FIELD mmbx003
            {<point name="input.b.page3.mmbx003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx003
            
            #add-point:AFTER FIELD mmbx003
            {<point name="input.a.page3.mmbx003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx003
            #add-point:ON CHANGE mmbx003
            {<point name="input.g.page3.mmbx003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx004
            
            #add-point:AFTER FIELD mmbx004
            {<point name="input.a.page3.mmbx004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx004
            #add-point:BEFORE FIELD mmbx004
            {<point name="input.b.page3.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx004
            #add-point:ON CHANGE mmbx004
            {<point name="input.g.page3.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx005
            #add-point:BEFORE FIELD mmbx005
            {<point name="input.b.page3.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx005
            
            #add-point:AFTER FIELD mmbx005
            {<point name="input.a.page3.mmbx005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx005
            #add-point:ON CHANGE mmbx005
            {<point name="input.g.page3.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbxstus
            #add-point:BEFORE FIELD mmbxstus
            {<point name="input.b.page3.mmbxstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbxstus
            
            #add-point:AFTER FIELD mmbxstus
            {<point name="input.a.page3.mmbxstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbxstus
            #add-point:ON CHANGE mmbxstus
            {<point name="input.g.page3.mmbxstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.mmbx002
         ON ACTION controlp INFIELD mmbx002
            #add-point:ON ACTION controlp INFIELD mmbx002
            {<point name="input.c.page3.mmbx002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbx003
         ON ACTION controlp INFIELD mmbx003
            #add-point:ON ACTION controlp INFIELD mmbx003
            {<point name="input.c.page3.mmbx003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbx004
         ON ACTION controlp INFIELD mmbx004
            #add-point:ON ACTION controlp INFIELD mmbx004
            {<point name="input.c.page3.mmbx004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbx005
         ON ACTION controlp INFIELD mmbx005
            #add-point:ON ACTION controlp INFIELD mmbx005
            {<point name="input.c.page3.mmbx005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbxstus
         ON ACTION controlp INFIELD mmbxstus
            #add-point:ON ACTION controlp INFIELD mmbxstus
            {<point name="input.c.page3.mmbxstus" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmcl3_d[l_ac].* = g_mmcl3_d_t.*
               END IF
               CLOSE ammm353_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammm353_unlock_b("mmbx_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmcl3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcl3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmcl4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcl4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm353_b_fill()
            LET g_rec_b = g_mmcl4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcl4_d[l_ac].* TO NULL 
                  LET g_mmcl4_d[l_ac].mmcn003 = "1"
      LET g_mmcl4_d[l_ac].mmcnstus = "Y"
 
            LET g_mmcl4_d_t.* = g_mmcl4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm353_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm353_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcl4_d[li_reproduce_target].* = g_mmcl4_d[li_reproduce].*
 
               LET g_mmcl4_d[li_reproduce_target].mmcn003 = NULL
            END IF
            #公用欄位給值(單身4)
            #此段落由子樣板a14產生    
      LET g_mmcl4_d[l_ac].mmcnstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
               CLOSE ammm353_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcl4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcl4_d[l_ac].mmcn003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmcl4_d_t.* = g_mmcl4_d[l_ac].*  #BACKUP
               CALL ammm353_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL ammm353_set_no_entry_b(l_cmd)
               IF NOT ammm353_lock_b("mmcn_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm353_bcl4 INTO g_mmcl4_d[l_ac].mmcn002,g_mmcl4_d[l_ac].mmcn003,g_mmcl4_d[l_ac].mmcn004, 
                      g_mmcl4_d[l_ac].mmcn005,g_mmcl4_d[l_ac].mmcn006,g_mmcl4_d[l_ac].mmcn007,g_mmcl4_d[l_ac].mmcn008, 
                      g_mmcl4_d[l_ac].mmcn009,g_mmcl4_d[l_ac].mmcnstus
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm353_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcl4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcl4_d.deleteElement(l_ac)
               NEXT FIELD mmcn003
            END IF
         
            IF g_mmcl4_d[l_ac].mmcn003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmcn_t
                WHERE mmcnent = g_enterprise AND mmcn001 = g_mmbt_m.mmbt001 AND
                      mmcn003 = g_mmcl4_d_t.mmcn003
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm353_bcl
               LET l_count = g_mmcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl4_d[g_detail_idx].mmcn003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL ammm353_delete_b('mmcn_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcn_t 
             WHERE mmcnent = g_enterprise AND mmcn001 = g_mmbt_m.mmbt001
               AND mmcn003 = g_mmcl4_d[l_ac].mmcn003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcl4_d[g_detail_idx].mmcn003
               CALL ammm353_insert_b('mmcn_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm353_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcl4_d[l_ac].* = g_mmcl4_d_t.*
               CLOSE ammm353_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmcl4_d[l_ac].* = g_mmcl4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
 
               
               UPDATE mmcn_t SET (mmcn001,mmcn002,mmcn003,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009, 
                   mmcnstus) = (g_mmbt_m.mmbt001,g_mmcl4_d[l_ac].mmcn002,g_mmcl4_d[l_ac].mmcn003,g_mmcl4_d[l_ac].mmcn004, 
                   g_mmcl4_d[l_ac].mmcn005,g_mmcl4_d[l_ac].mmcn006,g_mmcl4_d[l_ac].mmcn007,g_mmcl4_d[l_ac].mmcn008, 
                   g_mmcl4_d[l_ac].mmcn009,g_mmcl4_d[l_ac].mmcnstus) #自訂欄位頁簽
                WHERE mmcnent = g_enterprise AND mmcn001 = g_mmbt_m.mmbt001
                  AND mmcn003 = g_mmcl4_d_t.mmcn003 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcn_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcl4_d[l_ac].* = g_mmcl4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcn_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmcl4_d[l_ac].* = g_mmcl4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcl4_d[g_detail_idx].mmcn003
               LET gs_keys_bak[2] = g_mmcl4_d_t.mmcn003
               CALL ammm353_update_b('mmcn_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl4_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcl4_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcn002
            #add-point:BEFORE FIELD mmcn002
            {<point name="input.b.page4.mmcn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn002
            
            #add-point:AFTER FIELD mmcn002
            {<point name="input.a.page4.mmcn002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn002
            #add-point:ON CHANGE mmcn002
            {<point name="input.g.page4.mmcn002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn003
            #add-point:BEFORE FIELD mmcn003
            {<point name="input.b.page4.mmcn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn003
            
            #add-point:AFTER FIELD mmcn003
            {<point name="input.a.page4.mmcn003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn003
            #add-point:ON CHANGE mmcn003
            {<point name="input.g.page4.mmcn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn004
            #add-point:BEFORE FIELD mmcn004
            {<point name="input.b.page4.mmcn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn004
            
            #add-point:AFTER FIELD mmcn004
            {<point name="input.a.page4.mmcn004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn004
            #add-point:ON CHANGE mmcn004
            {<point name="input.g.page4.mmcn004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn005
            #add-point:BEFORE FIELD mmcn005
            {<point name="input.b.page4.mmcn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn005
            
            #add-point:AFTER FIELD mmcn005
            {<point name="input.a.page4.mmcn005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn005
            #add-point:ON CHANGE mmcn005
            {<point name="input.g.page4.mmcn005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn006
            #add-point:BEFORE FIELD mmcn006
            {<point name="input.b.page4.mmcn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn006
            
            #add-point:AFTER FIELD mmcn006
            {<point name="input.a.page4.mmcn006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn006
            #add-point:ON CHANGE mmcn006
            {<point name="input.g.page4.mmcn006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn007
            #add-point:BEFORE FIELD mmcn007
            {<point name="input.b.page4.mmcn007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn007
            
            #add-point:AFTER FIELD mmcn007
            {<point name="input.a.page4.mmcn007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn007
            #add-point:ON CHANGE mmcn007
            {<point name="input.g.page4.mmcn007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn008
            #add-point:BEFORE FIELD mmcn008
            {<point name="input.b.page4.mmcn008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn008
            
            #add-point:AFTER FIELD mmcn008
            {<point name="input.a.page4.mmcn008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn008
            #add-point:ON CHANGE mmcn008
            {<point name="input.g.page4.mmcn008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcn009
            #add-point:BEFORE FIELD mmcn009
            {<point name="input.b.page4.mmcn009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcn009
            
            #add-point:AFTER FIELD mmcn009
            {<point name="input.a.page4.mmcn009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcn009
            #add-point:ON CHANGE mmcn009
            {<point name="input.g.page4.mmcn009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcnstus
            #add-point:BEFORE FIELD mmcnstus
            {<point name="input.b.page4.mmcnstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcnstus
            
            #add-point:AFTER FIELD mmcnstus
            {<point name="input.a.page4.mmcnstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcnstus
            #add-point:ON CHANGE mmcnstus
            {<point name="input.g.page4.mmcnstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.mmcn002
         ON ACTION controlp INFIELD mmcn002
            #add-point:ON ACTION controlp INFIELD mmcn002
            {<point name="input.c.page4.mmcn002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn003
         ON ACTION controlp INFIELD mmcn003
            #add-point:ON ACTION controlp INFIELD mmcn003
            {<point name="input.c.page4.mmcn003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn004
         ON ACTION controlp INFIELD mmcn004
            #add-point:ON ACTION controlp INFIELD mmcn004
            {<point name="input.c.page4.mmcn004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn005
         ON ACTION controlp INFIELD mmcn005
            #add-point:ON ACTION controlp INFIELD mmcn005
            {<point name="input.c.page4.mmcn005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn006
         ON ACTION controlp INFIELD mmcn006
            #add-point:ON ACTION controlp INFIELD mmcn006
            {<point name="input.c.page4.mmcn006" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn007
         ON ACTION controlp INFIELD mmcn007
            #add-point:ON ACTION controlp INFIELD mmcn007
            {<point name="input.c.page4.mmcn007" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn008
         ON ACTION controlp INFIELD mmcn008
            #add-point:ON ACTION controlp INFIELD mmcn008
            {<point name="input.c.page4.mmcn008" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcn009
         ON ACTION controlp INFIELD mmcn009
            #add-point:ON ACTION controlp INFIELD mmcn009
            {<point name="input.c.page4.mmcn009" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmcnstus
         ON ACTION controlp INFIELD mmcnstus
            #add-point:ON ACTION controlp INFIELD mmcnstus
            {<point name="input.c.page4.mmcnstus" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmcl4_d[l_ac].* = g_mmcl4_d_t.*
               END IF
               CLOSE ammm353_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammm353_unlock_b("mmcn_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmcl4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcl4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="ammm353.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
          g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
          g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
          g_mmbt_m.mmbtstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.mmbtl001 = g_mmbt_m.mmbt001
LET g_master_multi_table_t.mmbtl003 = g_mmbt_m.mmbtl003
LET g_master_multi_table_t.mmbtl004 = g_mmbt_m.mmbtl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.mmbtl001 = ''
LET g_master_multi_table_t.mmbtl003 = ''
LET g_master_multi_table_t.mmbtl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbt004
            #add-point:BEFORE FIELD mmbt004
            {<point name="input.b.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt004
            
            #add-point:AFTER FIELD mmbt004
            {<point name="input.a.mmbt004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt004
            #add-point:ON CHANGE mmbt004
            {<point name="input.g.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt001
            #add-point:BEFORE FIELD mmbt001
            {<point name="input.b.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt001
            
            #add-point:AFTER FIELD mmbt001
            {<point name="input.a.mmbt001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt001
            #add-point:ON CHANGE mmbt001
            {<point name="input.g.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt002
            #add-point:BEFORE FIELD mmbt002
            {<point name="input.b.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt002
            
            #add-point:AFTER FIELD mmbt002
            {<point name="input.a.mmbt002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt002
            #add-point:ON CHANGE mmbt002
            {<point name="input.g.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl003
            #add-point:BEFORE FIELD mmbtl003
            {<point name="input.b.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl003
            
            #add-point:AFTER FIELD mmbtl003
            {<point name="input.a.mmbtl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtl003
            #add-point:ON CHANGE mmbtl003
            {<point name="input.g.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl004
            #add-point:BEFORE FIELD mmbtl004
            {<point name="input.b.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl004
            
            #add-point:AFTER FIELD mmbtl004
            {<point name="input.a.mmbtl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtl004
            #add-point:ON CHANGE mmbtl004
            {<point name="input.g.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt005
            
            #add-point:AFTER FIELD mmbt005
            {<point name="input.a.mmbt005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt005
            #add-point:BEFORE FIELD mmbt005
            {<point name="input.b.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt005
            #add-point:ON CHANGE mmbt005
            {<point name="input.g.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt006
            #add-point:BEFORE FIELD mmbt006
            {<point name="input.b.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt006
            
            #add-point:AFTER FIELD mmbt006
            {<point name="input.a.mmbt006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt006
            #add-point:ON CHANGE mmbt006
            {<point name="input.g.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt009
            #add-point:BEFORE FIELD mmbt009
            {<point name="input.b.mmbt009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt009
            
            #add-point:AFTER FIELD mmbt009
            {<point name="input.a.mmbt009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt009
            #add-point:ON CHANGE mmbt009
            {<point name="input.g.mmbt009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt010
            #add-point:BEFORE FIELD mmbt010
            {<point name="input.b.mmbt010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt010
            
            #add-point:AFTER FIELD mmbt010
            {<point name="input.a.mmbt010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt010
            #add-point:ON CHANGE mmbt010
            {<point name="input.g.mmbt010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt011
            #add-point:BEFORE FIELD mmbt011
            {<point name="input.b.mmbt011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt011
            
            #add-point:AFTER FIELD mmbt011
            {<point name="input.a.mmbt011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt011
            #add-point:ON CHANGE mmbt011
            {<point name="input.g.mmbt011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmbt_m.mmbt012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmbt012
            END IF
 
 
            #add-point:AFTER FIELD mmbt012
            {<point name="input.a.mmbt012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt012
            #add-point:BEFORE FIELD mmbt012
            {<point name="input.b.mmbt012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt012
            #add-point:ON CHANGE mmbt012
            {<point name="input.g.mmbt012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt013
            #add-point:BEFORE FIELD mmbt013
            {<point name="input.b.mmbt013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt013
            
            #add-point:AFTER FIELD mmbt013
            {<point name="input.a.mmbt013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt013
            #add-point:ON CHANGE mmbt013
            {<point name="input.g.mmbt013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt014
            #add-point:BEFORE FIELD mmbt014
            {<point name="input.b.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt014
            
            #add-point:AFTER FIELD mmbt014
            {<point name="input.a.mmbt014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt014
            #add-point:ON CHANGE mmbt014
            {<point name="input.g.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt015
            #add-point:BEFORE FIELD mmbt015
            {<point name="input.b.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt015
            
            #add-point:AFTER FIELD mmbt015
            {<point name="input.a.mmbt015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt015
            #add-point:ON CHANGE mmbt015
            {<point name="input.g.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt016
            #add-point:BEFORE FIELD mmbt016
            {<point name="input.b.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt016
            
            #add-point:AFTER FIELD mmbt016
            {<point name="input.a.mmbt016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt016
            #add-point:ON CHANGE mmbt016
            {<point name="input.g.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtunit
            
            #add-point:AFTER FIELD mmbtunit
            {<point name="input.a.mmbtunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtunit
            #add-point:BEFORE FIELD mmbtunit
            {<point name="input.b.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtunit
            #add-point:ON CHANGE mmbtunit
            {<point name="input.g.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt017
            #add-point:BEFORE FIELD mmbt017
            {<point name="input.b.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt017
            
            #add-point:AFTER FIELD mmbt017
            {<point name="input.a.mmbt017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt017
            #add-point:ON CHANGE mmbt017
            {<point name="input.g.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtstus
            #add-point:BEFORE FIELD mmbtstus
            {<point name="input.b.mmbtstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtstus
            
            #add-point:AFTER FIELD mmbtstus
            {<point name="input.a.mmbtstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtstus
            #add-point:ON CHANGE mmbtstus
            {<point name="input.g.mmbtstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmbt004
         ON ACTION controlp INFIELD mmbt004
            #add-point:ON ACTION controlp INFIELD mmbt004
            {<point name="input.c.mmbt004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt001
         ON ACTION controlp INFIELD mmbt001
            #add-point:ON ACTION controlp INFIELD mmbt001
            {<point name="input.c.mmbt001" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt002
         ON ACTION controlp INFIELD mmbt002
            #add-point:ON ACTION controlp INFIELD mmbt002
            {<point name="input.c.mmbt002" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtl003
         ON ACTION controlp INFIELD mmbtl003
            #add-point:ON ACTION controlp INFIELD mmbtl003
            {<point name="input.c.mmbtl003" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtl004
         ON ACTION controlp INFIELD mmbtl004
            #add-point:ON ACTION controlp INFIELD mmbtl004
            {<point name="input.c.mmbtl004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt005
         ON ACTION controlp INFIELD mmbt005
            #add-point:ON ACTION controlp INFIELD mmbt005
            {<point name="input.c.mmbt005" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt006
         ON ACTION controlp INFIELD mmbt006
            #add-point:ON ACTION controlp INFIELD mmbt006
            {<point name="input.c.mmbt006" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt009
         ON ACTION controlp INFIELD mmbt009
            #add-point:ON ACTION controlp INFIELD mmbt009
            {<point name="input.c.mmbt009" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt010
         ON ACTION controlp INFIELD mmbt010
            #add-point:ON ACTION controlp INFIELD mmbt010
            {<point name="input.c.mmbt010" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt011
         ON ACTION controlp INFIELD mmbt011
            #add-point:ON ACTION controlp INFIELD mmbt011
            {<point name="input.c.mmbt011" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt012
         ON ACTION controlp INFIELD mmbt012
            #add-point:ON ACTION controlp INFIELD mmbt012
            {<point name="input.c.mmbt012" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt013
         ON ACTION controlp INFIELD mmbt013
            #add-point:ON ACTION controlp INFIELD mmbt013
            {<point name="input.c.mmbt013" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt014
         ON ACTION controlp INFIELD mmbt014
            #add-point:ON ACTION controlp INFIELD mmbt014
            {<point name="input.c.mmbt014" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt015
         ON ACTION controlp INFIELD mmbt015
            #add-point:ON ACTION controlp INFIELD mmbt015
            {<point name="input.c.mmbt015" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt016
         ON ACTION controlp INFIELD mmbt016
            #add-point:ON ACTION controlp INFIELD mmbt016
            {<point name="input.c.mmbt016" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtunit
         ON ACTION controlp INFIELD mmbtunit
            #add-point:ON ACTION controlp INFIELD mmbtunit
            {<point name="input.c.mmbtunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt017
         ON ACTION controlp INFIELD mmbt017
            #add-point:ON ACTION controlp INFIELD mmbt017
            {<point name="input.c.mmbt017" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtstus
         ON ACTION controlp INFIELD mmbtstus
            #add-point:ON ACTION controlp INFIELD mmbtstus
            {<point name="input.c.mmbtstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmbt_m.mmbt001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmbt_t (mmbtent,mmbt004,mmbt001,mmbt002,mmbt005,mmbt006,mmbt009,mmbt010,mmbt011, 
                   mmbt012,mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp, 
                   mmbtcrtid,mmbtcrtdp,mmbtcrtdt,mmbtcnfid,mmbtcnfdt)
               VALUES (g_enterprise,g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbt005, 
                   g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
                   g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit, 
                   g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid, 
                   g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmbt_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbt_m.mmbt001 = g_master_multi_table_t.mmbtl001 AND
         g_mmbt_m.mmbtl003 = g_master_multi_table_t.mmbtl003 AND 
         g_mmbt_m.mmbtl004 = g_master_multi_table_t.mmbtl004  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbt_m.mmbt001
            LET l_field_keys[01] = 'mmbtl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbtl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbt_m.mmbtl003
            LET l_fields[01] = 'mmbtl003'
            LET l_vars[02] = g_mmbt_m.mmbtl004
            LET l_fields[02] = 'mmbtl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbtlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbtl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammm353_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmbt_t SET (mmbt004,mmbt001,mmbt002,mmbt005,mmbt006,mmbt009,mmbt010,mmbt011,mmbt012, 
                   mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid, 
                   mmbtcrtdp,mmbtcrtdt,mmbtcnfid,mmbtcnfdt) = (g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
                   g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011, 
                   g_mmbt_m.mmbt012,g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016, 
                   g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp, 
                   g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt) 

                WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmbt_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbt_m.mmbt001 = g_master_multi_table_t.mmbtl001 AND
         g_mmbt_m.mmbtl003 = g_master_multi_table_t.mmbtl003 AND 
         g_mmbt_m.mmbtl004 = g_master_multi_table_t.mmbtl004  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbt_m.mmbt001
            LET l_field_keys[01] = 'mmbtl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbtl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbt_m.mmbtl003
            LET l_fields[01] = 'mmbtl003'
            LET l_vars[02] = g_mmbt_m.mmbtl004
            LET l_fields[02] = 'mmbtl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbtlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbtl_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmbt001_t = g_mmbt_m.mmbt001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="ammm353.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbt001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcl002
               WHEN "s_detail2"
                  NEXT FIELD mmcm002
               WHEN "s_detail3"
                  NEXT FIELD mmbx002
               WHEN "s_detail4"
                  NEXT FIELD mmcn002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammm353_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmcl_d.clear()   
   CALL g_mmcl2_d.clear()  
   CALL g_mmcl3_d.clear()  
   CALL g_mmcl4_d.clear()  
 
 
   INITIALIZE g_mmbt_m.* LIKE mmbt_t.*             #DEFAULT 設定
   
   LET g_mmbt001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmbt_m.mmbtownid = g_user
      LET g_mmbt_m.mmbtowndp = g_dept
      LET g_mmbt_m.mmbtcrtid = g_user
      LET g_mmbt_m.mmbtcrtdp = g_dept 
      LET g_mmbt_m.mmbtcrtdt = cl_get_current()
      LET g_mmbt_m.mmbtmodid = ""
      LET g_mmbt_m.mmbtmoddt = ""
      LET g_mmbt_m.mmbtstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmbt_m.mmbt004 = "2"
      LET g_mmbt_m.mmbt002 = "1"
      LET g_mmbt_m.mmbt009 = "0"
      LET g_mmbt_m.mmbt010 = "1"
      LET g_mmbt_m.mmbt011 = "1"
      LET g_mmbt_m.mmbt013 = "N"
      LET g_mmbt_m.mmbtstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammm353_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbt_m.* = g_mmbt_m_t.*
         CALL ammm353_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmcl_d.clear()
      CALL g_mmcl2_d.clear()
      CALL g_mmcl3_d.clear()
      CALL g_mmcl4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   
   LET g_wc = g_wc,  
              " OR ( mmbtent = '" ||g_enterprise|| "' AND",
              " mmbt001 = '", g_mmbt_m.mmbt001 CLIPPED, "' "
 
              , ") "
   
   CLOSE ammm353_cl
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammm353_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcl_t
                  (mmclent,
                   mmcl001,
                   mmcl003
                   ,mmcl002,mmcl004,mmcl005,mmclstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcl_d[g_detail_idx].mmcl002,g_mmcl_d[g_detail_idx].mmcl004,g_mmcl_d[g_detail_idx].mmcl005, 
                       g_mmcl_d[g_detail_idx].mmclstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcm_t
                  (mmcment,
                   mmcm001,
                   mmcm003,mmcm004
                   ,mmcm002,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010,mmcm011,mmcm012,mmcmstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmcl2_d[g_detail_idx].mmcm002,g_mmcl2_d[g_detail_idx].mmcm005,g_mmcl2_d[g_detail_idx].mmcm006, 
                       g_mmcl2_d[g_detail_idx].mmcm007,g_mmcl2_d[g_detail_idx].mmcm008,g_mmcl2_d[g_detail_idx].mmcm009, 
                       g_mmcl2_d[g_detail_idx].mmcm010,g_mmcl2_d[g_detail_idx].mmcm011,g_mmcl2_d[g_detail_idx].mmcm012, 
                       g_mmcl2_d[g_detail_idx].mmcmstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcm_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO mmbx_t
                  (mmbxent,
                   mmbx001,
                   mmbx004
                   ,mmbx002,mmbx003,mmbx005,mmbxstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcl3_d[g_detail_idx].mmbx002,g_mmcl3_d[g_detail_idx].mmbx003,g_mmcl3_d[g_detail_idx].mmbx005, 
                       g_mmcl3_d[g_detail_idx].mmbxstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcn_t
                  (mmcnent,
                   mmcn001,
                   mmcn003
                   ,mmcn002,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcl4_d[g_detail_idx].mmcn002,g_mmcl4_d[g_detail_idx].mmcn004,g_mmcl4_d[g_detail_idx].mmcn005, 
                       g_mmcl4_d[g_detail_idx].mmcn006,g_mmcl4_d[g_detail_idx].mmcn007,g_mmcl4_d[g_detail_idx].mmcn008, 
                       g_mmcl4_d[g_detail_idx].mmcn009,g_mmcl4_d[g_detail_idx].mmcnstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammm353_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammm353_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmcl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammm353_bcl USING g_enterprise,
                                       g_mmbt_m.mmbt001,g_mmcl_d[g_detail_idx].mmcl003     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm353_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmcm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammm353_bcl2 USING g_enterprise,
                                             g_mmbt_m.mmbt001,g_mmcl2_d[g_detail_idx].mmcm003,g_mmcl2_d[g_detail_idx].mmcm004 

      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm353_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmbx_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammm353_bcl3 USING g_enterprise,
                                             g_mmbt_m.mmbt001,g_mmcl3_d[g_detail_idx].mmbx004
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm353_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "mmcn_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammm353_bcl4 USING g_enterprise,
                                             g_mmbt_m.mmbt001,g_mmcl4_d[g_detail_idx].mmcn003
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm353_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmbt004,mmbt001,mmbt002,'','',mmbt005,'',mmbt006,mmbt009,mmbt010,mmbt011, 
       mmbt012,mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,'',mmbt017,mmbtstus,mmbtownid,'',mmbtowndp,'', 
       mmbtcrtid,'',mmbtcrtdp,'',mmbtcrtdt,mmbtmodid,'',mmbtmoddt,mmbtcnfid,'',mmbtcnfdt", 
                      " FROM mmbt_t",
                      " WHERE mmbtent= ? AND mmbt001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm353_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmbt004,mmbt001,mmbt002,mmbt005,mmbt006,mmbt009,mmbt010,mmbt011,mmbt012, 
       mmbt013,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid,mmbtcrtdp, 
       mmbtcrtdt,mmbtmodid,mmbtmoddt,mmbtcnfid,mmbtcnfdt,t1.mmanl003 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 , 
       t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM mmbt_t",
                              " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmbt005 AND t1.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=mmbtunit AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=mmbtownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=mmbtowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=mmbtcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=mmbtcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=mmbtmodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmbtcnfid  ",
 
               " WHERE mmbtent = '" ||g_enterprise|| "' AND mmbt001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammm353_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammm353 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammm353_init()   
 
      #進入選單 Menu (="N")
      CALL ammm353_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammm353
      
   END IF 
   
   CLOSE ammm353_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="ammm353.modify" ver="8" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammm353_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   CALL s_transaction_begin()
   
   OPEN ammm353_cl USING g_enterprise,g_mmbt_m.mmbt001
   IF STATUS THEN
      CALL cl_err("OPEN ammm353_cl:", STATUS, 1)
      CLOSE ammm353_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammm353_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
       g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp, 
       g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt, 
       g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc, 
       g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0)
      CLOSE ammm353_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammm353_show()
   WHILE TRUE
      LET g_mmbt001_t = g_mmbt_m.mmbt001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbt_m.mmbtmodid = g_user 
LET g_mmbt_m.mmbtmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammm353_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbt_m.* = g_mmbt_m_t.*
         CALL ammm353_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmbt_t SET (mmbtmodid,mmbtmoddt) = (g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt)
       WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt001_t
 
                  
      #若單頭key欄位有變更
      IF g_mmbt_m.mmbt001 != g_mmbt001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmcl_t SET mmcl001 = g_mmbt_m.mmbt001
 
          WHERE mmclent = g_enterprise AND mmcl001 = g_mmbt001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmcm_t
            SET mmcm001 = g_mmbt_m.mmbt001
 
          WHERE mmcment = g_enterprise AND
                mmcm001 = g_mmbt001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcm_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcm_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE mmbx_t
            SET mmbx001 = g_mmbt_m.mmbt001
 
          WHERE mmbxent = g_enterprise AND
                mmbx001 = g_mmbt001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmbx_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE mmcn_t
            SET mmcn001 = g_mmbt_m.mmbt001
 
          WHERE mmcnent = g_enterprise AND
                mmcn001 = g_mmbt001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcn_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmbt_m.mmbt001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammm353_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmbt_m.mmbt001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="ammm353.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammm353.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammm353.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammm353_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmcl_d.clear()
   CALL g_mmcl2_d.clear()
   CALL g_mmcl3_d.clear()
   CALL g_mmcl4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammm353_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammm353_browser_fill("")
      CALL ammm353_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammm353_filter_show('mmbt004')
   CALL ammm353_filter_show('mmbt001')
   CALL ammm353_filter_show('mmbt002')
   CALL ammm353_filter_show('mmbt005')
   CALL ammm353_filter_show('mmbt006')
   CALL ammm353_filter_show('mmbt009')
   CALL ammm353_filter_show('mmbt010')
   CALL ammm353_filter_show('mmbt011')
   CALL ammm353_filter_show('mmbt012')
   CALL ammm353_filter_show('mmbt013')
   CALL ammm353_filter_show('mmbt014')
   CALL ammm353_filter_show('mmbt015')
   CALL ammm353_filter_show('mmbt016')
   CALL ammm353_filter_show('mmbtunit')
   CALL ammm353_filter_show('mmbt017')
   CALL ammm353_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammm353_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammm353_reproduce()
   DEFINE l_newno     LIKE mmbt_t.mmbt001 
   DEFINE l_oldno     LIKE mmbt_t.mmbt001 
 
   DEFINE l_master    RECORD LIKE mmbt_t.*
   DEFINE l_detail    RECORD LIKE mmcl_t.*
   DEFINE l_detail2    RECORD LIKE mmcm_t.*
 
   DEFINE l_detail3    RECORD LIKE mmbx_t.*
 
   DEFINE l_detail4    RECORD LIKE mmcn_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
    
   LET g_mmbt_m.mmbt001 = ""
 
    
   CALL ammm353_set_entry('a')
   CALL ammm353_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmbt_m.mmbtownid = g_user
      LET g_mmbt_m.mmbtowndp = g_dept
      LET g_mmbt_m.mmbtcrtid = g_user
      LET g_mmbt_m.mmbtcrtdp = g_dept 
      LET g_mmbt_m.mmbtcrtdt = cl_get_current()
      LET g_mmbt_m.mmbtmodid = ""
      LET g_mmbt_m.mmbtmoddt = ""
      LET g_mmbt_m.mmbtstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammm353_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmbt001 = '", g_mmbt_m.mmbt001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammm353_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbt001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammm353_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammm353.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammm353_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbt001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammm353_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammm353.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammm353_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbt_m.mmbt001
   LET g_pk_array[1].column = 'mmbt001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammm353.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammm353_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmbt_m_t.* = g_mmbt_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammm353_b_fill() #單身填充
      CALL ammm353_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmbt_m.mmbtownid_desc = cl_get_username(g_mmbt_m.mmbtownid)
      #LET g_mmbt_m.mmbtowndp_desc = cl_get_deptname(g_mmbt_m.mmbtowndp)
      #LET g_mmbt_m.mmbtcrtid_desc = cl_get_username(g_mmbt_m.mmbtcrtid)
      #LET g_mmbt_m.mmbtcrtdp_desc = cl_get_deptname(g_mmbt_m.mmbtcrtdp)
      #LET g_mmbt_m.mmbtmodid_desc = cl_get_username(g_mmbt_m.mmbtmodid)
      #LET g_mmbt_m.mmbtcnfid_desc = cl_get_deptname(g_mmbt_m.mmbtcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammm353_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011, 
       g_mmbt_m.mmbt012,g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit, 
       g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtownid_desc, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp, 
       g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtmoddt, 
       g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfid_desc,g_mmbt_m.mmbtcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmbt_m.mmbtstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmcl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmcl2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmcl3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmcl4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammm353_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammm353.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammm353_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbt_m.mmbtstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmbt_t SET mmbtstus = lc_state 
    WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt_m.mmbt001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_mmbt_m.mmbtstus = lc_state
      DISPLAY BY NAME g_mmbt_m.mmbtstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="ammm353.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammm353_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbt001 = g_mmbt_m.mmbt001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammm353_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.ui_dialog" ver="9" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammm353_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammm353_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmbt001 = g_mmbt001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammm353_fetch('') # reload data
               LET l_ac = 1
               CALL ammm353_ui_detailshow() #Setting the current row 
      
               CALL ammm353_idx_chk()
               #NEXT FIELD mmcl003
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmcl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammm353_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammm353_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmcl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammm353_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammm353_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmcl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammm353_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL ammm353_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmcl4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammm353_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL ammm353_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammm353_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammm353_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammm353_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammm353_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammm353_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammm353_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammm353_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammm353_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammm353_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm353_idx_chk()
            
         ON ACTION previous
            CALL ammm353_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm353_idx_chk()
            
         ON ACTION jump
            CALL ammm353_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm353_idx_chk()
            
         ON ACTION next
            CALL ammm353_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm353_idx_chk()
            
         ON ACTION last
            CALL ammm353_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm353_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmcl003
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION issue
            LET g_action_choice="issue"
            IF cl_auth_chk_act("issue") THEN
               
               #add-point:ON ACTION issue
               {<point name="menu.issue" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammm353_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION remark
            LET g_action_choice="remark"
            IF cl_auth_chk_act("remark") THEN
               
               #add-point:ON ACTION remark
               {<point name="menu.remark" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammm353_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammm353_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammm353_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammm353.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammm353_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmbt_m.mmbt001 = g_browser[g_current_idx].b_mmbt001   
 
   EXECUTE ammm353_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt005,g_mmbt_m.mmbt006,g_mmbt_m.mmbt009,g_mmbt_m.mmbt010,g_mmbt_m.mmbt011,g_mmbt_m.mmbt012, 
       g_mmbt_m.mmbt013,g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp, 
       g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt, 
       g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc, 
       g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc 

   CALL ammm353_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammm353.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammm353_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm353_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm353_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm353_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm353_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammm353.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammm353_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmcl_t 
         SET (mmcl001,
              mmcl003
              ,mmcl002,mmcl004,mmcl005,mmclstus) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcl_d[g_detail_idx].mmcl002,g_mmcl_d[g_detail_idx].mmcl004,g_mmcl_d[g_detail_idx].mmcl005, 
                  g_mmcl_d[g_detail_idx].mmclstus) 
         WHERE mmclent = g_enterprise AND mmcl001 = ps_keys_bak[1] AND mmcl003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcl_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcl_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcm_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmcm_t 
         SET (mmcm001,
              mmcm003,mmcm004
              ,mmcm002,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010,mmcm011,mmcm012,mmcmstus) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmcl2_d[g_detail_idx].mmcm002,g_mmcl2_d[g_detail_idx].mmcm005,g_mmcl2_d[g_detail_idx].mmcm006, 
                  g_mmcl2_d[g_detail_idx].mmcm007,g_mmcl2_d[g_detail_idx].mmcm008,g_mmcl2_d[g_detail_idx].mmcm009, 
                  g_mmcl2_d[g_detail_idx].mmcm010,g_mmcl2_d[g_detail_idx].mmcm011,g_mmcl2_d[g_detail_idx].mmcm012, 
                  g_mmcl2_d[g_detail_idx].mmcmstus) 
         WHERE mmcment = g_enterprise AND mmcm001 = ps_keys_bak[1] AND mmcm003 = ps_keys_bak[2] AND mmcm004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcm_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcm_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbx_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE mmbx_t 
         SET (mmbx001,
              mmbx004
              ,mmbx002,mmbx003,mmbx005,mmbxstus) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcl3_d[g_detail_idx].mmbx002,g_mmcl3_d[g_detail_idx].mmbx003,g_mmcl3_d[g_detail_idx].mmbx005, 
                  g_mmcl3_d[g_detail_idx].mmbxstus) 
         WHERE mmbxent = g_enterprise AND mmbx001 = ps_keys_bak[1] AND mmbx004 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmbx_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE mmcn_t 
         SET (mmcn001,
              mmcn003
              ,mmcn002,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcl4_d[g_detail_idx].mmcn002,g_mmcl4_d[g_detail_idx].mmcn004,g_mmcl4_d[g_detail_idx].mmcn005, 
                  g_mmcl4_d[g_detail_idx].mmcn006,g_mmcl4_d[g_detail_idx].mmcn007,g_mmcl4_d[g_detail_idx].mmcn008, 
                  g_mmcl4_d[g_detail_idx].mmcn009,g_mmcl4_d[g_detail_idx].mmcnstus) 
         WHERE mmcnent = g_enterprise AND mmcn001 = ps_keys_bak[1] AND mmcn003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcn_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcn_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
