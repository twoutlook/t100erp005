<add_points prog="ammt355" std_prog="ammt355" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '6'
            CALL q_mmbo001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbo001  #顯示到畫面上

            NEXT FIELD mmbo001                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbo005  #顯示到畫面上

            NEXT FIELD mmbo005                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbocnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbocnfid  #顯示到畫面上

            NEXT FIELD mmbocnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbocrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbocrtdp  #顯示到畫面上

            NEXT FIELD mmbocrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbocrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbocrtid  #顯示到畫面上

            NEXT FIELD mmbocrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '6'
            CALL q_mmbodocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbodocno  #顯示到畫面上

            NEXT FIELD mmbodocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbomodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbomodid  #顯示到畫面上

            NEXT FIELD mmbomodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmboowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmboowndp  #顯示到畫面上

            NEXT FIELD mmboowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmboownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmboownid  #顯示到畫面上

            NEXT FIELD mmboownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbounit  #顯示到畫面上

            NEXT FIELD mmbounit                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcj005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcj005  #顯示到畫面上

            NEXT FIELD mmcj005                     #返回原欄位

]]>
</point>
  <point name="construct.c.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbs004  #顯示到畫面上

            NEXT FIELD mmbs004                     #返回原欄位

]]>
</point>
  <point name="input.a.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmbo_m.mmbo005_desc = ' '
            DISPLAY BY NAME g_mmbo_m.mmbo005_desc
            IF NOT cl_null(g_mmbo_m.mmbo005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_mmbo_m.mmbo005 != g_mmbo_m_t.mmbo005 OR g_mmbo_m_t.mmbo005 IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_mmbo_m.mmbo005
                  IF NOT cl_chk_exist("v_mman001_2") THEN
                     LET g_mmbo_m.mmbo005 = g_mmbo_m_t.mmbo005
                     CALL ammt355_mmbo005_ref()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_mmbo_m_t.mmbo005) THEN
                     IF NOT ammt355_mmbo005_chk('a') THEN
                        LET g_mmbo_m.mmbo005 = g_mmbo_m_t.mmbo005
                        CALL ammt355_mmbo005_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            CALL ammt355_mmbo005_ref()]]>
</point>
  <point name="input.a.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo012) THEN 
            END IF 
]]>
</point>
  <point name="input.a.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF p_cmd = 'a' AND NOT cl_null(g_mmbo_m.mmbodocno) THEN 
               IF NOT s_aooi200_chk_slip(g_site,'',g_mmbo_m.mmbodocno,g_prog) THEN
                  LET g_mmbo_m.mmbodocno = g_mmbo_m_t.mmbodocno
                  DISPLAY BY NAME g_mmbo_m.mmbodocno
                  NEXT FIELD CURRENT
               END IF
            END IF
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbo_m.mmbodocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbo_t WHERE "||"mmboent = '" ||g_enterprise|| "' AND "||"mmbodocno = '"||g_mmbo_m.mmbodocno ||"'",'std-00004',0) THEN 
                     LET g_mmbo_m.mmbodocno = g_mmbo_m_t.mmbodocno
                     DISPLAY BY NAME g_mmbo_m.mmbodocno
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmbo_m.mmbounit_desc = ' '
            DISPLAY BY NAME g_mmbo_m.mmbounit_desc
            IF NOT cl_null(g_mmbo_m.mmbounit) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_mmbo_m.mmbounit != g_mmbo_m_t.mmbounit OR g_mmbo_m_t.mmbounit IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_mmbo_m.mmbounit
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_mmbo_m.mmbounit = g_mmbo_m_t.mmbounit
                     CALL ammt355_mmbounit_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL ammt355_mmbounit_ref()
            LET g_mmbo_m.mmbosite = g_mmbo_m.mmbounit]]>
</point>
  <point name="input.a.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a05產生
            IF  g_mmbo_m.mmbodocno IS NOT NULL AND g_mmci_d[g_detail_idx].mmci003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t OR g_mmci_d[g_detail_idx].mmci003 != g_mmci_d_t.mmci003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmci_t WHERE "||"mmcient = '" ||g_enterprise|| "' AND "||"mmcidocno = '"||g_mmbo_m.mmbodocno ||"' AND "|| "mmci003 = '"||g_mmci_d[g_detail_idx].mmci003 ||"'",'std-00004',0) THEN 
                     LET g_mmci_d[l_ac].mmci003 = g_mmci_d_t.mmci003
                     DISPLAY BY NAME g_mmci_d[l_ac].mmci003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci_d[l_ac].mmci004) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci_d[l_ac].mmci005) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a05產生
            IF  g_mmbo_m.mmbodocno IS NOT NULL AND g_mmci2_d[g_detail_idx].mmcj003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t OR g_mmci2_d[g_detail_idx].mmcj003 != g_mmci2_d_t.mmcj003 OR g_mmci2_d[g_detail_idx].mmcj004 != g_mmci2_d_t.mmcj004)) THEN 
                  IF NOT cl_null(g_mmci2_d[l_ac].mmcj004) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcj_t WHERE "||"mmcjent = '" ||g_enterprise|| "' AND "||"mmcjdocno = '"||g_mmbo_m.mmbodocno ||"' AND "|| "mmcj003 = '"||g_mmci2_d[g_detail_idx].mmcj003 ||"' AND "|| "mmcj004 = '"||g_mmci2_d[g_detail_idx].mmcj004 ||"'",'std-00004',0) THEN 
                        LET g_mmci2_d[l_ac].mmcj003 = g_mmci2_d_t.mmcj003
                        DISPLAY BY NAME g_mmci2_d[l_ac].mmcj003
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  CALL ammt355_mmcj003_chk()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmci2_d[l_ac].mmcj003,g_errno,1)
                     LET g_mmci2_d[l_ac].mmcj003 = g_mmci2_d_t.mmcj003
                     DISPLAY BY NAME g_mmci2_d[l_ac].mmcj003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj007) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj009) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj010) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj011) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmci3_d[l_ac].mmbs004_desc = ''
            DISPLAY BY NAME g_mmci3_d[l_ac].mmbs004_desc
            #此段落由子樣板a05產生
            IF  g_mmbo_m.mmbodocno IS NOT NULL AND g_mmci3_d[g_detail_idx].mmbs004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t OR g_mmci3_d[g_detail_idx].mmbs004 != g_mmci3_d_t.mmbs004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbs_t WHERE "||"mmbsent = '" ||g_enterprise|| "' AND "||"mmbsdocno = '"||g_mmbo_m.mmbodocno ||"' AND "|| "mmbs004 = '"||g_mmci3_d[g_detail_idx].mmbs004 ||"'",'std-00004',0) THEN 
                     LET g_mmci3_d[l_ac].mmbs004 = g_mmci3_d_t.mmbs004
                     DISPLAY BY NAME g_mmci3_d[l_ac].mmbs004
                     NEXT FIELD CURRENT
                  END IF
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_mmci3_d[l_ac].mmbs004
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_mmbo_m.mmbounit
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_mmci3_d[l_ac].mmbs004 = g_mmci3_d_t.mmbs004
                     CALL ammt355_mmbs004_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL ammt355_mmbs004_ref()]]>
</point>
  <point name="input.a.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a05產生
            IF  g_mmbo_m.mmbodocno IS NOT NULL AND g_mmci4_d[g_detail_idx].mmck003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t OR g_mmci4_d[g_detail_idx].mmck003 != g_mmci4_d_t.mmck003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmck_t WHERE "||"mmckent = '" ||g_enterprise|| "' AND "||"mmckdocno = '"||g_mmbo_m.mmbodocno ||"' AND "|| "mmck003 = '"||g_mmci4_d[g_detail_idx].mmck003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbo_m.mmbo005             #給予default值

            #給予arg

            CALL q_mman001_3()                                #呼叫開窗

            LET g_mmbo_m.mmbo005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbo_m.mmbo005 TO mmbo005              #顯示到畫面上
            
            CALL ammt355_mmbo005_ref()

            NEXT FIELD mmbo005                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_mmbo_m.mmbodocno             #給予default值
            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = "ammt355" #
            CALL q_ooba002_1()                                       #呼叫開窗
            LET g_mmbo_m.mmbodocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_mmbo_m.mmbodocno TO mmbodocno                  #顯示到畫面上
            NEXT FIELD mmbodocno                                     #返回原欄位]]>
</point>
  <point name="input.c.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbo_m.mmbounit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = '2'

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmbo_m.mmbounit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbo_m.mmbounit TO mmbounit              #顯示到畫面上
            
            CALL ammt355_mmbounit_ref()

            NEXT FIELD mmbounit                          #返回原欄位

]]>
</point>
  <point name="input.c.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmci3_d[l_ac].mmbs004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_mmbo_m.mmbosite #
            LET g_qryparam.arg2 = '2'

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmci3_d[l_ac].mmbs004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmci3_d[l_ac].mmbs004 TO mmbs004              #顯示到畫面上
            
            CALL ammt355_mmbs004_ref()

            NEXT FIELD mmbs004                          #返回原欄位

]]>
</point>
  <point name="show.body3.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            CALL ammt355_mmbs004_ref()]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbo_m.mmbodocno
   CALL ap_ref_array2(g_ref_fields," SELECT mmbol002,mmbol003 FROM mmbol_t WHERE mmbolent = '"||g_enterprise||"' AND mmboldocno = ? AND mmbol001 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_mmbo_m.mmbol002 = g_rtn_fields[1] 
   LET g_mmbo_m.mmbol003 = g_rtn_fields[2] 
   DISPLAY g_mmbo_m.mmbol002 TO mmbol002
   DISPLAY g_mmbo_m.mmbol003 TO mmbol003

#   CALL ammt355_mmbo005_ref()
#
#   CALL ammt355_mmbounit_ref()
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmboownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmboownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmboownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmboowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmboowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmboowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmbocrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmbocrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmbocrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmbocrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmbocrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmbocrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmbomodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmbomodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmbomodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbo_m.mmbocnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbo_m.mmbocnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbo_m.mmbocnfid_desc
]]>
</point>
  <point name="function.ammt355_mmbo000_init" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo000_init()
   
   IF cl_null(g_mmbo_m.mmbo001) THEN
      RETURN
   END IF
   INITIALIZE g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbo004,g_mmbo_m.mmbo005,
              g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,
              g_mmbo_m.mmbo012,g_mmbo_m.mmbo013,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015
           TO NULL
   LET g_mmbo_m.mmbo004 = "5"
   LET g_mmbo_m.mmbo002 = "1"
   LET g_mmbo_m.mmbo009 = "1"
   LET g_mmbo_m.mmbo010 = "1"
   LET g_mmbo_m.mmbo011 = "1"
   LET g_mmbo_m.mmbo012 = ""
   LET g_mmbo_m.mmbo013 = "N"
   LET g_mmbo_m.mmboacti = "Y"
   CALL ammt355_show()
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbodocno_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbodocno_chk()
DEFINE l_oobastus   LIKE ooba_t.oobastus
DEFINE l_ooef004    LIKE ooef_t.ooef004

   INITIALIZE g_errno TO NULL
   SELECT ooef004 INTO l_ooef004
     FROM ooef_t
    WHERE ooef001 = g_site AND ooefent = g_enterprise
   IF cl_null(l_ooef004) THEN
      LET g_errno = 'art-00007' #當前登入組織設定的"單據別使用參照表"尚未設定
   ELSE
      SELECT oobastus INTO l_oobastus
        FROM ooba_t,oobl_t
       WHERE oobaent = ooblent AND ooba001 = oobl001 AND ooba002 = oobl002
         AND ooba001 = l_ooef004
         AND ooba002 = g_mmbo_m.mmbodocno
         AND oobaent = g_enterprise
         AND oobl003 = 'ammt355'
      CASE
         WHEN SQLCA.sqlcode = 100 LET g_errno = 'sub-00113' #在單據別主檔中不存在
         WHEN l_oobastus <> 'Y'   LET g_errno = 'sub-00114' #此單據別無效！
         OTHERWISE LET g_errno = SQLCA.sqlcode USING '---------'
      END CASE
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbo001_init" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo001_init()
   
   IF cl_null(g_mmbo_m.mmbo000) OR cl_null(g_mmbo_m.mmbo001) THEN
      RETURN
   END IF
   
   CASE g_mmbo_m.mmbo000
      WHEN 'U'
         IF NOT cl_null(g_mmbo_m.mmbo001) THEN
            SELECT mmbtl003,mmbtl004 INTO g_mmbo_m.mmbol002,g_mmbo_m.mmbol003
              FROM mmbtl_t
             WHERE mmbtlent = g_enterprise AND mmbtl001 = g_mmbo_m.mmbo001 AND mmbtl002 = g_dlang
            SELECT CASE mmbtstus WHEN 'X' THEN 'N' ELSE 'Y' END,
                   CASE WHEN mmbt002 IS NULL THEN 2 ELSE mmbt002 +1 END,
                   mmbt004,mmbt005,mmbt006,mmbt009,mmbt010,mmbt011,mmbt012,mmbt013,mmbt014,mmbt015
              INTO g_mmbo_m.mmboacti,
                   g_mmbo_m.mmbo002,
                   g_mmbo_m.mmbo004,g_mmbo_m.mmbo005,g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,
                   g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo013,
                   g_mmbo_m.mmbo014,g_mmbo_m.mmbo015
              FROM mmbt_t
             WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbo_m.mmbo001
            LET g_mmbo_m.mmbo002 = g_mmbo_m.mmbo002 USING '<<<<<<<#'
         ELSE
            INITIALIZE g_mmbo_m.mmbol002,g_mmbo_m.mmbol003 TO NULL
            INITIALIZE g_mmbo_m.mmboacti,g_mmbo_m.mmbo002,g_mmbo_m.mmbo004,g_mmbo_m.mmbo005,
                       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,
                       g_mmbo_m.mmbo012,g_mmbo_m.mmbo013,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015
                    TO NULL
            LET g_mmbo_m.mmbo004 = "5"
            LET g_mmbo_m.mmbo002 = "1"
            LET g_mmbo_m.mmbo009 = "1"
            LET g_mmbo_m.mmbo010 = "1"
            LET g_mmbo_m.mmbo011 = "1"
            LET g_mmbo_m.mmbo012 = ""
            LET g_mmbo_m.mmbo013 = "N"
            LET g_mmbo_m.mmboacti = "Y"
         END IF
   END CASE
   DISPLAY BY NAME g_mmbo_m.mmboacti,g_mmbo_m.mmbo002,g_mmbo_m.mmbo004,g_mmbo_m.mmbo005,
                   g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,
                   g_mmbo_m.mmbo012,g_mmbo_m.mmbo013,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,
                   g_mmbo_m.mmbol002,g_mmbo_m.mmbol003
   
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbo001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo001_chk()
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_mmbtunit LIKE mmbt_t.mmbtunit

   #初始化
   INITIALIZE g_errno TO NULL
   LET l_cnt = 0
   
   #检查：该规则编号是否存在未确认单据
   SELECT COUNT(*) INTO l_cnt
     FROM mmbo_t
    WHERE mmboent = g_enterprise AND mmbo001 = g_mmbo_m.mmbo001 AND mmbostus = 'N'
   IF l_cnt > 0 THEN
      LET g_errno = 'amm-00152' #当前规则编号仍存在未审核的单据,不允许输入 -- 请至[卡活动规则基本资料维护作业ammm350/ammm352/ammm353/ammm354]中查询后重新输入!
      RETURN
   END IF
   
   #检查规则编号
   LET l_cnt = 0
   CASE g_mmbo_m.mmbo000
      WHEN 'I'
         SELECT COUNT(*) INTO l_cnt
           FROM mmbt_t
          WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbo_m.mmbo001
         IF l_cnt > 0 THEN 
            LET g_errno = 'amm-00153' #申请类别为I.新增时,规则编号不可存在于[卡活動規則單頭檔]中 -- 请至[卡活动规则基本资料维护作业ammm350/ammm352/ammm353/ammm354]中查询后重新输入!
         END IF
      WHEN 'U'
         SELECT COUNT(*) INTO l_cnt
           FROM mmbt_t
          WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbo_m.mmbo001 AND mmbt004 = '6'
         IF l_cnt = 0 THEN 
            LET g_errno = 'amm-00154' #申请类别为U.修改时,规则编号必须存在于[卡活動規則單頭檔]中 -- 请至[卡活动规则基本资料维护作业ammm350/ammm352/ammm353/ammm354]中查询后重新输入!
            RETURN
         END IF
         SELECT mmbtunit INTO l_mmbtunit
           FROM mmbt_t
          WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbo_m.mmbo001
         IF cl_null(l_mmbtunit) OR l_mmbtunit <> g_site THEN
            LET g_errno = '' #该券种制定营运组织非当前组织,不可异动
         END IF
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbo005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo005_ref()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbo_m.mmbo005
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbo_m.mmbo005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbo_m.mmbo005_desc
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbo014_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo014_chk()
DEFINE l_cnt   LIKE type_t.num5

   INITIALIZE g_errno TO NULL
   
   IF cl_null(g_mmbo_m.mmbo014) OR cl_null(g_mmbo_m.mmbo015) THEN
      RETURN
   END IF
   
   IF g_mmbo_m.mmbo014 > g_mmbo_m.mmbo015 THEN
      CASE
         WHEN INFIELD(mmbo014) 
            LET g_errno = 'amm-00080' #开始日期必须小于等于结束日期
         WHEN INFIELD(mmbo015)
            LET g_errno = 'amm-00081' #结束日期必须大於等於开始日期
      END CASE
   END IF
      
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM mmck_t
    WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno 
      AND ((mmck004 < g_mmbo_m.mmbo014) OR (mmck005 > g_mmbo_m.mmbo015))
      
   IF l_cnt > 0 THEN
      LET g_errno = 'amm-00244' #生效时段设定中存在不符合单头日期区间的资料,请检查
      RETURN
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbounit_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbounit_ref()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbo_m.mmbounit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbo_m.mmbounit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbo_m.mmbounit_desc
END FUNCTION]]>
</point>
  <point name="function.ammt355_detail_count" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_detail_count()
DEFINE l_success    LIKE type_t.num5
DEFINE l_cnt1       LIKE type_t.num5
DEFINE l_cnt2       LIKE type_t.num5
DEFINE l_cnt3       LIKE type_t.num5
DEFINE l_cnt4       LIKE type_t.num5
   
   LET l_success = TRUE
   IF cl_null(g_mmbo_m.mmbodocno) THEN
      LET l_success = TRUE
      RETURN l_success
   END IF
   SELECT COUNT(*) INTO l_cnt1
     FROM mmci_t
    WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno
   SELECT COUNT(*) INTO l_cnt2
     FROM mmbs_t
    WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
   SELECT COUNT(*) INTO l_cnt3
     FROM mmcj_t
    WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno
   SELECT COUNT(*) INTO l_cnt4
     FROM mmck_t
    WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno
   IF l_cnt1 > 0 OR l_cnt2 > 0 OR l_cnt3 > 0 OR l_cnt4 > 0 THEN
      LET l_success = FALSE
      RETURN l_success
   END IF
   RETURN l_success
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmci003_init" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmci003_init()
   SELECT MAX(mmci003)+1 INTO g_mmci_d[l_ac].mmci003
     FROM mmci_t
    WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno
   IF cl_null(g_mmci_d[l_ac].mmci003) THEN
      LET g_mmci_d[l_ac].mmci003 = 1
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj003_init" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj003_init()
   SELECT MAX(mmcj003)+1 INTO g_mmci2_d[l_ac].mmcj003
     FROM mmcj_t
    WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno
   IF cl_null(g_mmci2_d[l_ac].mmcj003) THEN
      LET g_mmci2_d[l_ac].mmcj003 = 1
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj003_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj003_chk()
DEFINE l_cnt   LIKE type_t.num5

   INITIALIZE g_errno TO NULL
   
   SELECT COUNT(*) INTO l_cnt
     FROM mmci_t
    WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno AND mmci003 = g_mmci2_d[l_ac].mmcj003
   IF l_cnt = 0 THEN
      LET g_errno = 'amm-00192' #输入的换赠组别必须存在于[换赠规则申请单身档mmci_t]中
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_set_combo" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_set_combo()
DEFINE l_values   STRING
DEFINE l_items    STRING
DEFINE l_gzcb002  LIKE gzcb_t.gzcb002
DEFINE l_gzcbl004 LIKE gzcbl_t.gzcbl004

   LET l_values = NULL
   LET l_items = NULL
   LET l_gzcb002 = NULL
   LET l_gzcbl004 = NULL
   DECLARE agct300_gzcb_cs1 CURSOR FOR
    SELECT gzcb002,gzcbl004 FROM gzcb_t,gzcbl_t
     WHERE gzcb001 = gzcbl001 AND gzcb002 = gzcbl002
       AND gzcb001 = '6517'   AND gzcbl003 = g_dlang
       AND gzcb002 IN ('4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P')
     ORDER BY gzcb002
   FOREACH agct300_gzcb_cs1 INTO l_gzcb002,l_gzcbl004
      LET l_values = l_values CLIPPED ,",",l_gzcb002
      LET l_items  = l_items CLIPPED ,",",l_gzcb002 CLIPPED,':',l_gzcbl004
   END FOREACH
   CALL cl_set_combo_items("mmcj004",l_values,l_items)
   
   LET l_values = NULL
   LET l_items = NULL
   LET l_gzcb002 = NULL
   LET l_gzcbl004 = NULL
   DECLARE agct300_gzcb_cs2 CURSOR FOR
    SELECT gzcb002,gzcbl004 FROM gzcb_t,gzcbl_t
     WHERE gzcb001 = gzcbl001 AND gzcb002 = gzcbl002
       AND gzcb001 = '6534'   AND gzcbl003 = g_dlang
       AND gzcb002 IN ('1','2','3','4')
     ORDER BY gzcb002
   FOREACH agct300_gzcb_cs2 INTO l_gzcb002,l_gzcbl004
      LET l_values = l_values CLIPPED ,",",l_gzcb002
      LET l_items  = l_items CLIPPED ,",",l_gzcb002 CLIPPED,':',l_gzcbl004
   END FOREACH
   CALL cl_set_combo_items("b_mmbo009",l_values,l_items)
   CALL cl_set_combo_items("mmbo009",l_values,l_items)
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj005_chk()
DEFINE l_rtax005   LIKE rtax_t.rtax005
DEFINE l_stus      LIKE type_t.chr1
DEFINE l_oocq001   LIKE oocq_t.oocq001
DEFINE l_success   LIKE type_t.num5
DEFINE l_mman003   LIKE mman_t.mman003

   INITIALIZE g_errno TO NULL
   LET l_success = TRUE
   IF cl_null(g_mmci2_d[l_ac].mmcj004) THEN
      RETURN l_success
   END IF
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         SELECT rtdxstus INTO l_stus
           FROM rtdx_t
          WHERE rtdxent = g_enterprise AND rtdxsite = g_mmbo_m.mmbosite AND rtdx001 = g_mmci2_d[l_ac].mmcj005
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'agc-00013' #该商品不存在或在当前组织不可使用
            WHEN l_stus <> 'Y'       LET g_errno = 'agc-00014' #该商品在当前组织已无效
            OTHERWISE LET g_errno = SQLCA.sqlcode USING '---------'
         END CASE
      WHEN '5'
         SELECT rtax005,rtaxstus INTO l_rtax005,l_stus
           FROM rtax_t
          WHERE rtaxent = g_enterprise AND rtax001 = g_mmci2_d[l_ac].mmcj005
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'agc-00027' #该品类编号不存在
            WHEN l_stus <> 'Y'       LET g_errno = 'agc-00028' #该品类编号已无效
            WHEN l_rtax005 <> 0      LET g_errno = 'agc-00029' #该品类编号存在下级品类
            OTHERWISE LET g_errno = SQLCA.sqlcode USING '---------'
         END CASE
      WHEN '6'
         LET l_oocq001 = '2000'
      WHEN '7'
         LET l_oocq001 = '2001'
      WHEN '8'
         LET l_oocq001 = '2002'
      WHEN '9'
         LET l_oocq001 = '2003'
      WHEN 'A'
         LET l_oocq001 = '2004'
      WHEN 'B'
         LET l_oocq001 = '2005'
      WHEN 'C'
         LET l_oocq001 = '2006'
      WHEN 'D'
         LET l_oocq001 = '2007'
      WHEN 'E'
         LET l_oocq001 = '2008'
      WHEN 'F'
         LET l_oocq001 = '2009'
      WHEN 'G'
         LET l_oocq001 = '2010'
      WHEN 'H'
         LET l_oocq001 = '2011'
      WHEN 'I'
         LET l_oocq001 = '2012'
      WHEN 'J'
         LET l_oocq001 = '2013'
      WHEN 'K'
         LET l_oocq001 = '2014'
      WHEN 'L'
         LET l_oocq001 = '2015'
      WHEN 'M'
         SELECT mmanstus,mman003 INTO l_stus,l_mman003
           FROM mman_t
          WHERE mmanent = g_enterprise AND mman001 = g_mmci2_d[l_ac].mmcj005
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'amm-00195' #该卡种编号不存在
            WHEN l_stus <> 'Y'       LET g_errno = 'amm-00004' #该卡种编号已无效
            WHEN l_mman003 <> 'Y'    LET g_errno = 'amm-00206' #此卡種不可以對應為外社卡！
            OTHERWISE LET g_errno = SQLCA.sqlcode USING '---------'
         END CASE
      WHEN 'N'
         SELECT gcafstus INTO l_stus
           FROM gcaf_t
          WHERE gcafent = g_enterprise AND gcaf001 = g_mmci2_d[l_ac].mmcj005
         CASE
            WHEN SQLCA.sqlcode = 100 LET g_errno = 'amm-00193' #该券种编号不存在
            WHEN l_stus <> 'Y'       LET g_errno = 'amm-00194' #该券种编号已无效
            OTHERWISE LET g_errno = SQLCA.sqlcode USING '---------'
         END CASE
   END CASE
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_mmci2_d[l_ac].mmcj005,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      WHEN '5'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_mmci2_d[l_ac].mmcj005,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      WHEN 'M'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_mmci2_d[l_ac].mmcj005,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      WHEN 'N'
         IF NOT cl_null(g_errno) THEN
            CALL cl_err(g_mmci2_d[l_ac].mmcj005,g_errno,1)
            LET l_success = FALSE
            RETURN l_success
         END IF
      WHEN 'O'
      WHEN 'P'
      OTHERWISE
         IF NOT s_azzi650_chk_exist(l_oocq001,g_mmci2_d[l_ac].mmcj005) THEN
            LET l_success = FALSE
            RETURN l_success
         END IF
   END CASE
   RETURN l_success
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj005_ref()
DEFINE l_oocq001   LIKE oocq_t.oocq001

   IF cl_null(g_mmci2_d[l_ac].mmcj004) THEN
      RETURN
   END IF
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '6'
         LET l_oocq001 = '2000'
      WHEN '7'
         LET l_oocq001 = '2001'
      WHEN '8'
         LET l_oocq001 = '2002'
      WHEN '9'
         LET l_oocq001 = '2003'
      WHEN 'A'
         LET l_oocq001 = '2004'
      WHEN 'B'
         LET l_oocq001 = '2005'
      WHEN 'C'
         LET l_oocq001 = '2006'
      WHEN 'D'
         LET l_oocq001 = '2007'
      WHEN 'E'
         LET l_oocq001 = '2008'
      WHEN 'F'
         LET l_oocq001 = '2009'
      WHEN 'G'
         LET l_oocq001 = '2010'
      WHEN 'H'
         LET l_oocq001 = '2011'
      WHEN 'I'
         LET l_oocq001 = '2012'
      WHEN 'J'
         LET l_oocq001 = '2013'
      WHEN 'K'
         LET l_oocq001 = '2014'
      WHEN 'L'
         LET l_oocq001 = '2015'
   END CASE
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         SELECT imaal003 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM imaal_t
          WHERE imaalent = g_enterprise AND imaal001 = g_mmci2_d[l_ac].mmcj005 AND imaal002 = g_dlang
      WHEN '5'
         SELECT rtaxl003 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM rtaxl_t
          WHERE rtaxlent = g_enterprise AND rtaxl001 = g_mmci2_d[l_ac].mmcj005 AND rtaxl002 = g_dlang
      WHEN 'M'
         SELECT mmanl003 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM mmanl_t
          WHERE mmanlent = g_enterprise AND mmanl001 = g_mmci2_d[l_ac].mmcj005 AND mmanl002 = g_dlang
      WHEN 'N'
         SELECT gcafl003 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM gcafl_t
          WHERE gcaflent = g_enterprise AND gcafl001 = g_mmci2_d[l_ac].mmcj005 AND gcafl002 = g_dlang
      WHEN 'O'
         LET g_mmci2_d[l_ac].mmcj005_desc = ''
      WHEN 'P'
         SELECT imaal003 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM imaal_t
          WHERE imaalent = g_enterprise AND imaal001 = g_mmci2_d[l_ac].mmcj005 AND imaal002 = g_dlang
      OTHERWISE
         SELECT oocql004 INTO g_mmci2_d[l_ac].mmcj005_desc
           FROM oocql_t
          WHERE oocqlent = g_enterprise AND oocql001 = l_oocq001 AND oocql002 = g_mmci2_d[l_ac].mmcj005 AND oocql003 = g_dlang
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj005_ctp" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj005_ctp()
   
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         LET g_qryparam.arg1 = g_mmbo_m.mmbosite
      WHEN '6'
         LET g_qryparam.arg1 = '2000'
      WHEN '7'
         LET g_qryparam.arg1 = '2001'
      WHEN '8'
         LET g_qryparam.arg1 = '2002'
      WHEN '9'
         LET g_qryparam.arg1 = '2003'
      WHEN 'A'
         LET g_qryparam.arg1 = '2004'
      WHEN 'B'
         LET g_qryparam.arg1 = '2005'
      WHEN 'C'
         LET g_qryparam.arg1 = '2006'
      WHEN 'D'
         LET g_qryparam.arg1 = '2007'
      WHEN 'E'
         LET g_qryparam.arg1 = '2008'
      WHEN 'F'
         LET g_qryparam.arg1 = '2009'
      WHEN 'G'
         LET g_qryparam.arg1 = '2010'
      WHEN 'H'
         LET g_qryparam.arg1 = '2011'
      WHEN 'I'
         LET g_qryparam.arg1 = '2012'
      WHEN 'J'
         LET g_qryparam.arg1 = '2013'
      WHEN 'K'
         LET g_qryparam.arg1 = '2014'
      WHEN 'L'
         LET g_qryparam.arg1 = '2015'
   END CASE
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         CALL q_rtdx001_1()
      WHEN '5'
         CALL q_rtax001()
      WHEN 'M'
         CALL q_mman001_3()
      WHEN 'N'
         CALL q_gcaf001()
      OTHERWISE
         CALL q_oocq002()
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj006_init" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj006_init()
  
   CASE g_mmci2_d[l_ac].mmcj004
      WHEN '4'
         IF NOT cl_null(g_mmci2_d[l_ac].mmcj005) THEN
            SELECT rtdx033 INTO g_mmci2_d[l_ac].mmcj006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise AND rtdxsite = g_mmbo_m.mmbosite AND rtdx001 = g_mmci2_d[l_ac].mmcj005
         END IF
      WHEN 'M'
         IF NOT cl_null(g_mmci2_d[l_ac].mmcj005) THEN
            SELECT rtdx033 INTO g_mmci2_d[l_ac].mmcj006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise AND rtdxsite = g_mmbo_m.mmbosite 
               AND EXISTS (SELECT 1
                             FROM mman_t
                            WHERE mmanent = g_enterprise AND mman001= g_mmbo_m.mmbo005 AND mman053 = rtdx001)
         END IF
      WHEN 'N'
         IF NOT cl_null(g_mmci2_d[l_ac].mmcj005) THEN
            SELECT rtdx033 INTO g_mmci2_d[l_ac].mmcj006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise AND rtdxsite = g_mmbo_m.mmbosite 
               AND EXISTS (SELECT 1 
                             FROM gcaf_t
                            WHERE gcafent = g_enterprise AND gcaf001 = g_mmci2_d[l_ac].mmcj005 AND gcaf013 = rtdx001)
         END IF
      WHEN 'P'
         SELECT mman054 INTO g_mmci2_d[l_ac].mmcj005
           FROM mman_t
          WHERE mmanent = g_enterprise AND mman001= g_mmbo_m.mmbo005
         CALL ammt355_mmcj005_ref()
         IF NOT cl_null(g_mmci2_d[l_ac].mmcj005) THEN
            SELECT rtdx033 INTO g_mmci2_d[l_ac].mmcj006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise AND rtdxsite = g_mmbo_m.mmbosite 
               AND EXISTS (SELECT 1
                             FROM mman_t
                            WHERE mmanent = g_enterprise AND mman001= g_mmbo_m.mmbo005 AND mman054 = rtdx001)
         END IF
      OTHERWISE
         LET g_mmci2_d[l_ac].mmcj006 = ''
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbs004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbs004_ref()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmci3_d[l_ac].mmbs004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmci3_d[l_ac].mmbs004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmci3_d[l_ac].mmbs004_desc
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmck003_init" cite_std="N" status="" ver="1" src="s" new="Y" order="18" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmck003_init()
   SELECT MAX(mmck003)+1 INTO g_mmci4_d[l_ac].mmck003
     FROM mmck_t
    WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno
   IF cl_null(g_mmci4_d[l_ac].mmck003) THEN
      LET g_mmci4_d[l_ac].mmck003 = 1
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmck004_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="19" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmck004_chk(p_mmck004)
DEFINE p_mmck004   LIKE mmck_t.mmck004

   INITIALIZE g_errno TO NULL
   
   IF cl_null(p_mmck004) THEN RETURN END IF
   
   CASE
      WHEN INFIELD(mmck004)
         IF p_mmck004 < g_mmbo_m.mmbo014 THEN
            LET g_errno = 'amm-00065' #
            RETURN
         END IF
         IF NOT cl_null(g_mmci4_d[l_ac].mmck005) AND p_mmck004 > g_mmci4_d[l_ac].mmck005 THEN
            LET g_errno = 'amm-00080' #
            RETURN
         END IF
      WHEN INFIELD(mmck005)
         IF p_mmck004 > g_mmbo_m.mmbo015 THEN
            LET g_errno = 'amm-00066' #
            RETURN
         END IF
         IF NOT cl_null(g_mmci4_d[l_ac].mmck004) AND p_mmck004 < g_mmci4_d[l_ac].mmck004 THEN
            LET g_errno = 'amm-00081' #
            RETURN
         END IF
   END CASE
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbs_count" cite_std="N" status="" ver="1" src="s" new="Y" order="20" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbs_count()
DEFINE l_cnt   LIKE type_t.num5

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM mmbs_t
    WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
   
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   
   RETURN l_cnt
END FUNCTION]]>
</point>
  <point name="function.ammt355_detail_init" cite_std="N" status="" ver="1" src="s" new="Y" order="21" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_detail_init()
   
   IF g_mmbo_m.mmbo000 <> 'U' THEN
      RETURN
   END IF
   
   #换赠规则设定
   INSERT INTO mmci_t (mmcient,mmcisite,mmciunit,mmcidocno,mmci001,mmci002,mmci003,mmci004,mmci005,mmciacti)
   SELECT g_enterprise,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit,g_mmbo_m.mmbodocno,
          mmcl001,mmcl002,mmcl003,mmcl004,mmcl005,mmclstus
     FROM mmcl_t
    WHERE mmclent = g_enterprise AND mmcl001 = g_mmbo_m.mmbo001
      
   #赠品资讯设定
   INSERT INTO mmcj_t (mmcjent,mmcjsite,mmcjunit,mmcjdocno,mmcj001,mmcj002,mmcj003,mmcj004,mmcj005,mmcj006,mmcj007,mmcj008,
                       mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti)
   SELECT g_enterprise,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit,g_mmbo_m.mmbodocno,
          mmcm001,mmcm002,mmcm003,mmcm004,mmcm005,mmcm006,mmcm007,mmcm008,mmcm009,mmcm010,mmcm011,mmcm012,mmcmstus
     FROM mmcm_t
    WHERE mmcment = g_enterprise AND mmcm001 = g_mmbo_m.mmbo001
    
   #生效营运据点
   INSERT INTO mmbs_t (mmbsent,mmbssite,mmbsunit,mmbsdocno,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005,mmbsacti)
   SELECT g_enterprise,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit,g_mmbo_m.mmbodocno,
          mmbx001,mmbx002,mmbx003,mmbx004,mmbx005,mmbxstus
     FROM mmbx_t
    WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbo_m.mmbo001
   
   #生效时段设定
   INSERT INTO mmck_t (mmckent,mmcksite,mmckunit,mmckdocno,mmck001,mmck002,mmck003,mmck004,mmck005,mmck006,mmck007,mmck008,mmck009,mmckacti)
   SELECT g_enterprise,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit,g_mmbo_m.mmbodocno,
          mmcn001,mmcn002,mmcn003,mmcn004,mmcn005,mmcn006,mmcn007,mmcn008,mmcn009,mmcnstus
     FROM mmcn_t
    WHERE mmcnent = g_enterprise AND mmcn001 = g_mmbo_m.mmbo001
   
   #单身填充
   CALL ammt355_b_fill()
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj005_init" cite_std="N" status="" ver="1" src="s" new="Y" order="22" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj005_init()
   INITIALIZE g_mmci2_d[l_ac].mmcj005,g_mmci2_d[l_ac].mmcj005_desc,g_mmci2_d[l_ac].mmcj006,
              g_mmci2_d[l_ac].mmcj007,g_mmci2_d[l_ac].mmcj008,g_mmci2_d[l_ac].mmcj009,
              g_mmci2_d[l_ac].mmcj010,g_mmci2_d[l_ac].mmcj011,g_mmci2_d[l_ac].mmcj012
           TO NULL
   LET g_mmci2_d[l_ac].mmcj007 = "1"
   LET g_mmci2_d[l_ac].mmcj008 = "0"
   LET g_mmci2_d[l_ac].mmcj009 = "0"
   LET g_mmci2_d[l_ac].mmcj010 = "0"
   LET g_mmci2_d[l_ac].mmcj012 = "1"
   LET g_mmci2_d[l_ac].mmcjacti = "Y"
END FUNCTION]]>
</point>
  <point name="function.ammt355_mmcj_count" cite_std="N" status="" ver="1" src="s" new="Y" order="23" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmcj_count()
DEFINE l_cnt   LIKE type_t.num5

   LET l_cnt = 0

   SELECT COUNT(*) INTO l_cnt
     FROM mmcj_t
    WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno AND mmcj003 = g_mmci_d_t.mmci003
    
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   
   RETURN l_cnt

END FUNCTION]]>
</point>
  <point name="function.ammt355_mmbo005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="24" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION ammt355_mmbo005_chk(p_cmd)
DEFINE p_cmd     LIKE type_t.chr1
DEFINE l_success LIKE type_t.num5

   LET l_success = TRUE
   
   IF cl_null(g_mmbo_m_t.mmbo005) OR g_mmbo_m_t.mmbo005 = g_mmbo_m.mmbo005 THEN
      RETURN l_success
   END IF
   
   IF NOT ammt355_detail_count() THEN
      CASE p_cmd
         WHEN 'a'
            IF NOT cl_ask_confirm('amm-00242') THEN #已存在该卡种的换赠设定,异动将会删除对应资料,是否异动?
               LET l_success = FALSE
            ELSE
               LET l_success = TRUE
            END IF
            RETURN l_success
         WHEN 'd'
            DELETE FROM mmci_t
             WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno
            DELETE FROM mmbs_t
             WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
            DELETE FROM mmcj_t
             WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno
            DELETE FROM mmck_t
             WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno
            
      END CASE
   END IF
   RETURN l_success
END FUNCTION]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.body2.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.body3.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.body4.fill_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="b_fill2.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  CALL ammt355_mmcj005_ref()]]>
</point>
  <point name="b_fill3.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  CALL ammt355_mmbs004_ref()]]>
</point>
  <point name="b_fill4.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET l_wc = l_wc CLIPPED," AND mmbo004 = '6' "
   LET g_wc = g_wc CLIPPED," AND mmbo004 = '6' "]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="construct.a.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbocnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbocrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbocrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbomodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmboowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmboownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        NEXT FIELD mmbo001]]>
</point>
  <point name="construct.b.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbocnfdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbocnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbocrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbocrtdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbocrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbomoddt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbomodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmboowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmboownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.body3.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.body4.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        DISPLAY '6' TO mmbo004]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.a_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #刪除備註
     #IF NOT s_aooi360_del('6',g_mmbo_m.mmbodocno,'','','','','','','','','','') THEN
     #   CALL s_transaction_end('N','0')
     #   RETURN
     #END IF]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.b_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.b_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.b_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.m_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.m_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.body.m_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.a_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.a_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.a_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.b_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.b_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.b_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.m_delete3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.m_delete4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table2.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table2.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table2.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table3.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table3.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table3.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table4.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table4.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.body.table4.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_mmbo_m.mmbostus = 'Y' OR g_mmbo_m.mmbostus = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_mmbo_m_o            type_g_mmbo_m
DEFINE g_mmci2_d_o           type_g_mmci2_d]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_combo_scc('b_mmbo000','32')
   CALL cl_set_combo_scc('b_mmbo004','6516')
   CALL ammt355_set_combo()]]>
</point>
  <point name="input.a.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo000) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmbo_m.mmbo000 != g_mmbo_m_t.mmbo000)) THEN
                  IF g_mmbo_m.mmbo000 != g_mmbo_m_o.mmbo000 OR cl_null(g_mmbo_m_o.mmbo000) THEN
                     CALL ammt355_mmbo000_init()
                  END IF
               END IF
            END IF
            LET g_mmbo_m_o.* = g_mmbo_m.*      #
            CALL ammt355_set_entry(p_cmd)
            CALL ammt355_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo001) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmbo_m.mmbo001 != g_mmbo_m_t.mmbo001)) THEN
                  CALL ammt355_mmbo001_chk()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_mmbo_m.mmbo001,g_errno,1)
                     LET g_mmbo_m.mmbo001 = g_mmbo_m_t.mmbo001
                     DISPLAY BY NAME g_mmbo_m.mmbo001
                     NEXT FIELD CURRENT
                  END IF
                  IF g_mmbo_m.mmbo001 != g_mmbo_m_o.mmbo001 OR cl_null(g_mmbo_m_o.mmbo001) THEN
                     CALL ammt355_mmbo001_init()
                  END IF
               END IF
            END IF
            LET g_mmbo_m_o.* = g_mmbo_m.*      #
            CALL ammt355_set_entry(p_cmd)
            CALL ammt355_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo011) THEN
               IF g_mmbo_m.mmbo011 = '1' THEN
                  LET g_mmbo_m.mmbo012 = ''
               END IF
            END IF
            CALL ammt355_set_entry(p_cmd)
            CALL ammt355_set_no_entry(p_cmd)]]>
</point>
  <point name="input.a.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo014) THEN
               CALL ammt355_mmbo014_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbo_m.mmbo014,g_errno,1)
                  LET g_mmbo_m.mmbo014 = g_mmbo_m_t.mmbo014
                  DISPLAY BY NAME g_mmbo_m.mmbo014
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmbo_m.mmbo015) THEN
               CALL ammt355_mmbo014_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbo_m.mmbo015,g_errno,1)
                  LET g_mmbo_m.mmbo015 = g_mmbo_m_t.mmbo015
                  DISPLAY BY NAME g_mmbo_m.mmbo015
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj004) THEN
               IF NOT cl_null(g_mmci2_d[l_ac].mmcj003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbo_m.mmbodocno != g_mmbodocno_t OR g_mmci2_d[g_detail_idx].mmcj003 != g_mmci2_d_t.mmcj003 OR g_mmci2_d[g_detail_idx].mmcj004 != g_mmci2_d_t.mmcj004)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcj_t WHERE "||"mmcjent = '" ||g_enterprise|| "' AND "||"mmcjdocno = '"||g_mmbo_m.mmbodocno ||"' AND "|| "mmcj003 = '"||g_mmci2_d[g_detail_idx].mmcj003 ||"' AND "|| "mmcj004 = '"||g_mmci2_d[g_detail_idx].mmcj004 ||"'",'std-00004',0) THEN 
                        LET g_mmci2_d[l_ac].mmcj003 = g_mmci2_d_t.mmcj003
                        DISPLAY BY NAME g_mmci2_d[l_ac].mmcj003
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmci2_d[l_ac].mmcj004 != g_mmci2_d_t.mmcj004) THEN
                  IF g_mmci2_d[l_ac].mmcj004 != g_mmci2_d_o.mmcj004 THEN
                     CALL ammt355_mmcj005_init()
                     CALL ammt355_mmcj006_init()
                  END IF
               END IF
            END IF
            LET g_mmci2_d_o.* = g_mmci2_d[l_ac].*
            CALL ammt355_set_entry_b(l_cmd)
            CALL ammt355_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.a.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmci2_d[l_ac].mmcj005_desc = ''
            DISPLAY BY NAME g_mmci2_d[l_ac].mmcj005_desc
            IF NOT cl_null(g_mmci2_d[l_ac].mmcj005) THEN
               IF NOT ammt355_mmcj005_chk() THEN
                  LET g_mmci2_d[l_ac].mmcj005 = g_mmci2_d_t.mmcj005
                  DISPLAY BY NAME g_mmci2_d[l_ac].mmcj005
                  CALL ammt355_mmcj005_ref()
                  CALL ammt355_mmcj006_init()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt355_mmcj005_ref()
            CALL ammt355_mmcj006_init()]]>
</point>
  <point name="input.a.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj008) THEN
               IF g_mmci2_d[l_ac].mmcj008 = '0' THEN
                  LET g_mmci2_d[l_ac].mmcj009 = ''
                  LET g_mmci2_d[l_ac].mmcj010 = ''
               END IF
            END IF
            CALL ammt355_set_entry_b(l_cmd)
            CALL ammt355_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.a.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci4_d[l_ac].mmck004) THEN
               CALL ammt355_mmck004_chk(g_mmci4_d[l_ac].mmck004)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmci4_d[l_ac].mmck004,g_errno,1)
                  LET g_mmci4_d[l_ac].mmck004 = g_mmci4_d_t.mmck004
                  DISPLAY BY NAME g_mmci4_d[l_ac].mmck004
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci4_d[l_ac].mmck005) THEN
               CALL ammt355_mmck004_chk(g_mmci4_d[l_ac].mmck005)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmci4_d[l_ac].mmck005,g_errno,1)
                  LET g_mmci4_d[l_ac].mmck005 = g_mmci4_d_t.mmck005
                  DISPLAY BY NAME g_mmci4_d[l_ac].mmck005
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci4_d[l_ac].mmck006) THEN
               IF NOT cl_null(g_mmci4_d[l_ac].mmck007) THEN
                  IF g_mmci4_d[l_ac].mmck006 > g_mmci4_d[l_ac].mmck007 THEN
                     CALL cl_err(g_mmci4_d[l_ac].mmck006,'amm-00093',1) #
                     LET g_mmci4_d[l_ac].mmck006 = g_mmci4_d_t.mmck006
                     DISPLAY BY NAME g_mmci4_d[l_ac].mmck006
                     NEXT FIELD mmck006
                  END IF
               END IF
            END IF
            CALL ammt355_set_entry_b(p_cmd)
            CALL ammt355_set_no_entry_b(p_cmd)]]>
</point>
  <point name="input.a.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci4_d[l_ac].mmck007) THEN
               IF NOT cl_null(g_mmci4_d[l_ac].mmck006) THEN
                  IF g_mmci4_d[l_ac].mmck006 > g_mmci4_d[l_ac].mmck007 THEN
                     CALL cl_err(g_mmci4_d[l_ac].mmck006,'amm-00094',1) #
                     LET g_mmci4_d[l_ac].mmck007 = g_mmci4_d_t.mmck007
                     DISPLAY BY NAME g_mmci4_d[l_ac].mmck007
                     NEXT FIELD mmck007
                  END IF
               END IF
            END IF
            CALL ammt355_set_entry_b(p_cmd)
            CALL ammt355_set_no_entry_b(p_cmd)]]>
</point>
  <point name="input.a.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_define_sql3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_define_sql4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.b.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_mmbo_m_o.* = g_mmbo_m.*      #]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              IF ammt355_mmcj_count() > 0 THEN
                  IF NOT cl_ask_confirm("amm-00203") THEN #當前換贈組別已存在贈品資訊設定資料，刪除將會一併刪除對應贈品資訊資料，是否刪除（Y/N）?
                     CANCEL DELETE
                  END IF
               END IF
               DELETE FROM mmcj_t
                WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno AND mmcj003 = g_mmci_d_t.mmci003
               CALL ammt355_b_fill()]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_current_page = 1]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL ammt355_mmci003_init()
            LET g_mmci_d[l_ac].mmcisite = g_mmbo_m.mmbosite
            LET g_mmci_d[l_ac].mmciunit = g_mmbo_m.mmbounit
            LET g_mmci_d[l_ac].mmci001  = g_mmbo_m.mmbo001
            LET g_mmci_d[l_ac].mmci002  = g_mmbo_m.mmbo005]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.body2.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body2.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body2.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body2.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body2.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_current_page = 2]]>
</point>
  <point name="input.body2.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmci2_d[l_ac].mmcjsite = g_mmbo_m.mmbosite
            LET g_mmci2_d[l_ac].mmcjunit = g_mmbo_m.mmbounit
            LET g_mmci2_d[l_ac].mmcj001  = g_mmbo_m.mmbo001
            LET g_mmci2_d[l_ac].mmcj002  = g_mmbo_m.mmbo005
            LET g_mmci2_d_o.* = g_mmci2_d[l_ac].*]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmci2_d_o.* = g_mmci2_d[l_ac].*]]>
</point>
  <point name="input.body2.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body2.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body2.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.body3.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_current_page = 3]]>
</point>
  <point name="input.body3.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_mmci3_d[l_ac].mmbssite = g_mmbo_m.mmbosite
            LET g_mmci3_d[l_ac].mmbsunit = g_mmbo_m.mmbounit
            LET g_mmci3_d[l_ac].mmbs001  = g_mmbo_m.mmbo001
            LET g_mmci3_d[l_ac].mmbs002  = g_mmbo_m.mmbo004
            LET g_mmci3_d[l_ac].mmbs003  = g_mmbo_m.mmbo005]]>
</point>
  <point name="input.body3.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body3.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body3.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.body4.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.after_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.after_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        LET g_current_page = 4]]>
</point>
  <point name="input.body4.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL ammt355_mmck003_init()
            LET g_mmci4_d[l_ac].mmcksite = g_mmbo_m.mmbosite
            LET g_mmci4_d[l_ac].mmckunit = g_mmbo_m.mmbounit
            LET g_mmci4_d[l_ac].mmck001  = g_mmbo_m.mmbo001
            LET g_mmci4_d[l_ac].mmck002  = g_mmbo_m.mmbo005
            LET g_mmci4_d[l_ac].mmck004  = g_mmbo_m.mmbo014
            LET g_mmci4_d[l_ac].mmck005  = g_mmbo_m.mmbo015]]>
</point>
  <point name="input.body4.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body4.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body4.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.c.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF g_mmbo_m.mmbo000 = 'U' THEN
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_mmbo_m.mmbo001
               LET g_qryparam.arg1 = '6'
               CALL q_mmbt001()
               LET g_mmbo_m.mmbo001 = g_qryparam.return1
               DISPLAY BY NAME g_mmbo_m.mmbo001
            END IF]]>
</point>
  <point name="input.c.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_mmci2_d[l_ac].mmcj004) THEN
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_mmci2_d[l_ac].mmcj005   #給予default值
               CALL ammt355_mmcj005_ctp()                          #呼叫開窗
               LET g_mmci2_d[l_ac].mmcj005 = g_qryparam.return1    #將開窗取得的值回傳到變數
               DISPLAY BY NAME g_mmci2_d[l_ac].mmcj005             #顯示到畫面上
               CALL ammt355_mmcj005_ref()                          #說明
               NEXT FIELD mmcj005                                  #返回原欄位
            END IF]]>
</point>
  <point name="input.c.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DEFINE  l_ooef004       LIKE ooef_t.ooef004
   DEFINE  l_success       LIKE type_t.chr1]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.define_sql3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.define_sql4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.g.mmbo000" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbo015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmboacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbodocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbol002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbol003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbosite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbostus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.mmbounit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmci001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmci002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmci003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmci004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmci005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmciacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmcisite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page1.mmciunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcj012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcjacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcjsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page2.mmcjunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbs001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbs002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbs003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbs004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbs005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbsacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbssite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page3.mmbsunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmckacti" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.page4.mmckunit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 IF g_mmbo_m.mmbo000 = 'U' THEN
                     CALL ammt355_detail_init()
                  END IF]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              IF NOT ammt355_mmbo005_chk('d') THEN
                  CALL s_transaction_end('N','0')
               END IF]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                                 CALL s_aooi200_gen_docno(g_site,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_prog) RETURNING l_success,g_mmbo_m.mmbodocno
                  IF NOT l_success THEN
                     CALL cl_err(g_mmbo_m.mmbodocno,'apm-00003',1)
                     NEXT FIELD mmbodocno
                  END IF]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL ammt355_set_entry(p_cmd)
            CALL ammt355_set_no_entry(p_cmd)]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                           IF NOT cl_null(g_mmbo_m.mmbodocno) THEN
                  CALL n_mmbol(g_mmbo_m.mmbodocno)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_mmbo_m.mmbodocno
                  CALL ap_ref_array2(g_ref_fields," SELECT mmbol002,mmbol003 FROM mmbol_t WHERE mmboldocno = ? AND mmbol001 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_mmbo_m.mmbol002 = g_rtn_fields[1]
                  LET g_mmbo_m.mmbol003 = g_rtn_fields[2]
                  DISPLAY BY NAME g_mmbo_m.mmbol002
                  DISPLAY BY NAME g_mmbo_m.mmbol003
               END IF]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_mmbo_m_t.* TO NULL
      INITIALIZE g_mmbo_m_o.* TO NULL
      LET g_mmbo_m.mmbodocdt = g_today
      LET g_mmbo_m.mmbounit  = g_site
      LET g_mmbo_m.mmbosite  = g_site
      CALL ammt355_mmbounit_ref()]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.after_insert3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.after_insert4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.before_insert3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.before_insert4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.m_insert3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.m_insert4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.remark" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              CALL aooi360_01('6',g_mmbo_m.mmbodocno,'','','','','','','','','')]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.a_fk_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.a_fk_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.a_fk_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.b_fk_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.b_fk_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.b_fk_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.m_fk_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.m_fk_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.body.m_fk_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("mmbo012",TRUE)
   CALL cl_set_comp_entry("mmboacti",TRUE)
   CALL cl_set_comp_entry("mmbounit",TRUE)]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL cl_set_comp_entry("mmbounit",TRUE)
      CALL cl_set_comp_entry("mmbo000",TRUE)
      CALL cl_set_comp_entry("mmbodocdt",TRUE)
      CALL cl_set_comp_entry("mmbo001",TRUE)]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_current_page = 2 THEN
      CALL cl_set_comp_entry("mmcj005",TRUE)
      CALL cl_set_comp_entry("mmcj009",TRUE)
      CALL cl_set_comp_entry("mmcj010",TRUE)
   END IF
   IF g_current_page = 4 THEN
      CALL cl_set_comp_required("mmck006,mmck007",TRUE)
   END IF]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF cl_null(g_mmbo_m.mmbo011) OR g_mmbo_m.mmbo011 = '1' THEN
      CALL cl_set_comp_entry("mmbo012",FALSE)
   END IF
   IF cl_null(g_mmbo_m.mmbo000) OR g_mmbo_m.mmbo000 = 'I' THEN
      CALL cl_set_comp_entry("mmboacti",FALSE)
   END IF
   IF ammt355_mmbs_count() > 0 THEN
      CALL cl_set_comp_entry("mmbounit",FALSE)
   END IF]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT ammt355_detail_count() THEN
         CALL cl_set_comp_entry("mmbo000",FALSE)
         CALL cl_set_comp_entry("mmbounit",FALSE)
         CALL cl_set_comp_entry("mmbo001",FALSE)
      END IF
      IF NOT cl_null(g_mmbo_m.mmbodocno) THEN
         CALL cl_set_comp_entry("mmbodocdt",FALSE)
      END IF]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_current_page = 2 THEN
      IF g_mmci2_d[l_ac].mmcj004 = 'O' OR g_mmci2_d[l_ac].mmcj004 = 'P' THEN
         CALL cl_set_comp_entry("mmcj005",FALSE)
      END IF
      IF g_mmci2_d[l_ac].mmcj008 = '0' THEN
         CALL cl_set_comp_entry("mmcj009",FALSE)
         CALL cl_set_comp_entry("mmcj010",FALSE)
      END IF
   END IF
   IF g_current_page = 4 THEN
      IF cl_null(g_mmci4_d[l_ac].mmck006) THEN
         CALL cl_set_comp_required("mmck007",FALSE)
      END IF
      IF cl_null(g_mmci4_d[l_ac].mmck007) THEN
         CALL cl_set_comp_required("mmck006",FALSE)
      END IF
   END IF]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_mmbo_m_o.* = g_mmbo_m.*      #]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt355_mmcj005_ref()]]>
</point>
  <point name="show.body4.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT l_success THEN
      CALL s_transaction_end('N','0')
   ELSE      
      CALL s_transaction_end('Y','0')
   END IF]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_ammt355_conf_chk(g_mmbo_m.mmbodocno,g_mmbo_m.mmbostus) RETURNING l_success,l_errno
      IF NOT l_success THEN
         CALL cl_err(g_mmbo_m.mmbodocno,l_errno,1)
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_ammt355_conf_upd(g_mmbo_m.mmbodocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'X' THEN
      CALL s_ammt355_void_chk(g_mmbo_m.mmbodocno,g_mmbo_m.mmbostus) RETURNING l_success,l_errno
      IF NOT l_success THEN
         CALL cl_err(g_mmbo_m.mmbodocno,l_errno,1)
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_ammt355_void_upd(g_mmbo_m.mmbodocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_mmbo_m.mmbostus != 'N' THEN
      RETURN
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DEFINE l_success   LIKE type_t.num5
   DEFINE l_errno     LIKE type_t.chr10]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.body3.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.body3.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.body3.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.body4.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.body4.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.body4.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.after_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.after_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.before_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.before_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.m_update3" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.m_update4" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body4.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body4.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.reconciliate" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unreconciliate" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.before_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="ammt355.b_fill" ver="5" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt355_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmci_d.clear()    #g_mmci_d 單頭及單身 
   CALL g_mmci2_d.clear()
   CALL g_mmci3_d.clear()
   CALL g_mmci4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt355_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmcisite,mmciunit,mmci001,mmci002,mmci003,mmci004,mmci005,mmciacti  FROM mmci_t", 
             
                  " INNER JOIN mmbo_t ON mmbodocno = mmcidocno ",
 
                  #"",
                  
                  "",
                  
                  " WHERE mmcient=? AND mmcidocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmci_t.mmci003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt355_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt355_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmbo_m.mmbodocno
                                               
      FOREACH b_fill_cs INTO g_mmci_d[l_ac].mmcisite,g_mmci_d[l_ac].mmciunit,g_mmci_d[l_ac].mmci001, 
          g_mmci_d[l_ac].mmci002,g_mmci_d[l_ac].mmci003,g_mmci_d[l_ac].mmci004,g_mmci_d[l_ac].mmci005, 
          g_mmci_d[l_ac].mmciacti
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammt355_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj003,mmcj004,mmcj005,mmcj006, 
          mmcj007,mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti  FROM mmcj_t",   
                  " INNER JOIN mmbo_t ON mmbodocno = mmcjdocno ",
 
                  "",
                  
                  
                  " WHERE mmcjent=? AND mmcjdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcj_t.mmcj003,mmcj_t.mmcj004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt355_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammt355_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmbo_m.mmbodocno
                                               
      FOREACH b_fill_cs2 INTO g_mmci2_d[l_ac].mmcjsite,g_mmci2_d[l_ac].mmcjunit,g_mmci2_d[l_ac].mmcj001, 
          g_mmci2_d[l_ac].mmcj002,g_mmci2_d[l_ac].mmcj003,g_mmci2_d[l_ac].mmcj004,g_mmci2_d[l_ac].mmcj005, 
          g_mmci2_d[l_ac].mmcj006,g_mmci2_d[l_ac].mmcj007,g_mmci2_d[l_ac].mmcj008,g_mmci2_d[l_ac].mmcj009, 
          g_mmci2_d[l_ac].mmcj010,g_mmci2_d[l_ac].mmcj011,g_mmci2_d[l_ac].mmcj012,g_mmci2_d[l_ac].mmcjacti 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt355_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005,mmbsacti , 
          t1.ooefl003 FROM mmbs_t",   
                  " INNER JOIN mmbo_t ON mmbodocno = mmbsdocno ",
 
                  "",
                  
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbs004 AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE mmbsent=? AND mmbsdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmbs_t.mmbs004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt355_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR ammt355_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmbo_m.mmbodocno
                                               
      FOREACH b_fill_cs3 INTO g_mmci3_d[l_ac].mmbssite,g_mmci3_d[l_ac].mmbsunit,g_mmci3_d[l_ac].mmbs001, 
          g_mmci3_d[l_ac].mmbs002,g_mmci3_d[l_ac].mmbs003,g_mmci3_d[l_ac].mmbs004,g_mmci3_d[l_ac].mmbs005, 
          g_mmci3_d[l_ac].mmbsacti,g_mmci3_d[l_ac].mmbs004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt355_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE mmcksite,mmckunit,mmck001,mmck002,mmck003,mmck004,mmck005,mmck006, 
          mmck007,mmck008,mmck009,mmckacti  FROM mmck_t",   
                  " INNER JOIN mmbo_t ON mmbodocno = mmckdocno ",
 
                  "",
                  
                  
                  " WHERE mmckent=? AND mmckdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmck_t.mmck003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt355_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR ammt355_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_mmbo_m.mmbodocno
                                               
      FOREACH b_fill_cs4 INTO g_mmci4_d[l_ac].mmcksite,g_mmci4_d[l_ac].mmckunit,g_mmci4_d[l_ac].mmck001, 
          g_mmci4_d[l_ac].mmck002,g_mmci4_d[l_ac].mmck003,g_mmci4_d[l_ac].mmck004,g_mmci4_d[l_ac].mmck005, 
          g_mmci4_d[l_ac].mmck006,g_mmci4_d[l_ac].mmck007,g_mmci4_d[l_ac].mmck008,g_mmci4_d[l_ac].mmck009, 
          g_mmci4_d[l_ac].mmckacti
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmci_d.deleteElement(g_mmci_d.getLength())
   CALL g_mmci2_d.deleteElement(g_mmci2_d.getLength())
   CALL g_mmci3_d.deleteElement(g_mmci3_d.getLength())
   CALL g_mmci4_d.deleteElement(g_mmci4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt355_pb
   FREE ammt355_pb2
 
   FREE ammt355_pb3
 
   FREE ammt355_pb4
 
 
   
END FUNCTION
]]>
</section>
  <section id="ammt355.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt355_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt355_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt355.browser_fill" ver="6" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt355_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbo_m.* TO NULL
   CALL g_mmci_d.clear()        
   CALL g_mmci2_d.clear() 
   CALL g_mmci3_d.clear() 
   CALL g_mmci4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmbodocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmbodocno ",
                      " FROM mmbo_t ",
                      " ",
                      " LEFT JOIN mmci_t ON mmcient = mmboent AND mmbodocno = mmcidocno ",
                      " LEFT JOIN mmcj_t ON mmcjent = mmboent AND mmbodocno = mmcjdocno", 
 
                      " LEFT JOIN mmbs_t ON mmbsent = mmboent AND mmbodocno = mmbsdocno", 
 
                      " LEFT JOIN mmck_t ON mmckent = mmboent AND mmbodocno = mmckdocno", 
 
 
 
                      " LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ", 
                      " ", 
                      " WHERE mmboent = '" ||g_enterprise|| "' AND mmcient = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbo_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmbodocno ",
                      " FROM mmbo_t ", 
                      "  ",
                      "  LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ",
                      " WHERE mmboent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmbo_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbo005,'',mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,'',mmbo013,mmboacti Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmbostus,mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbo005, 
       '',mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,'',mmbo013,mmboacti,t1.mmanl003 , 
       t2.ooefl003 ",
               " FROM mmbo_t ",
               "  ",
               "  LEFT JOIN mmci_t ON mmcient = mmboent AND mmbodocno = mmcidocno ",
               "  LEFT JOIN mmcj_t ON mmcjent = mmboent AND mmbodocno = mmcjdocno",
 
               "  LEFT JOIN mmbs_t ON mmbsent = mmboent AND mmbodocno = mmbsdocno",
 
               "  LEFT JOIN mmck_t ON mmckent = mmboent AND mmbodocno = mmckdocno",
 
 
 
               "  LEFT JOIN mmbol_t ON mmbodocno = mmboldocno AND mmbol001 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmbo005 AND t1.mmanl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=mmbounit AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE mmboent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmbo_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbo000,g_browser[g_cnt].b_mmbodocno, 
       g_browser[g_cnt].b_mmbodocdt,g_browser[g_cnt].b_mmbo004,g_browser[g_cnt].b_mmbo001,g_browser[g_cnt].b_mmbo002, 
       g_browser[g_cnt].b_mmbo005,g_browser[g_cnt].b_mmbo005_desc,g_browser[g_cnt].b_mmbo006,g_browser[g_cnt].b_mmbo009, 
       g_browser[g_cnt].b_mmbo010,g_browser[g_cnt].b_mmbo011,g_browser[g_cnt].b_mmbo012,g_browser[g_cnt].b_mmbo014, 
       g_browser[g_cnt].b_mmbo015,g_browser[g_cnt].b_mmbounit,g_browser[g_cnt].b_mmbounit_desc,g_browser[g_cnt].b_mmbo013, 
       g_browser[g_cnt].b_mmboacti,g_browser[g_cnt].b_mmbo005_desc,g_browser[g_cnt].b_mmbounit_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="ammt355.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammt355_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmbodocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammt355_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt355.construct" ver="7" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt355_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbo_m.* TO NULL
   CALL g_mmci_d.clear()        
   CALL g_mmci2_d.clear() 
   CALL g_mmci3_d.clear() 
   CALL g_mmci4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbol002,mmbol003, 
          mmbosite,mmbo005,mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,mmbo013, 
          mmboacti,mmbostus,mmboownid,mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid, 
          mmbocnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmbocrtdt>>----
         AFTER FIELD mmbocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbomoddt>>----
         AFTER FIELD mmbomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbocnfdt>>----
         AFTER FIELD mmbocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbopstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbo000
            #add-point:BEFORE FIELD mmbo000
            {<point name="construct.b.mmbo000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo000
            
            #add-point:AFTER FIELD mmbo000
            {<point name="construct.a.mmbo000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo000
         ON ACTION controlp INFIELD mmbo000
            #add-point:ON ACTION controlp INFIELD mmbo000
            {<point name="construct.c.mmbo000" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbodocno
         ON ACTION controlp INFIELD mmbodocno
            #add-point:ON ACTION controlp INFIELD mmbodocno
            {<point name="construct.c.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocno
            #add-point:BEFORE FIELD mmbodocno
            {<point name="construct.b.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocno
            
            #add-point:AFTER FIELD mmbodocno
            {<point name="construct.a.mmbodocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocdt
            #add-point:BEFORE FIELD mmbodocdt
            {<point name="construct.b.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocdt
            
            #add-point:AFTER FIELD mmbodocdt
            {<point name="construct.a.mmbodocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbodocdt
         ON ACTION controlp INFIELD mmbodocdt
            #add-point:ON ACTION controlp INFIELD mmbodocdt
            {<point name="construct.c.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo004
            #add-point:BEFORE FIELD mmbo004
            {<point name="construct.b.mmbo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo004
            
            #add-point:AFTER FIELD mmbo004
            {<point name="construct.a.mmbo004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo004
         ON ACTION controlp INFIELD mmbo004
            #add-point:ON ACTION controlp INFIELD mmbo004
            {<point name="construct.c.mmbo004" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbo001
         ON ACTION controlp INFIELD mmbo001
            #add-point:ON ACTION controlp INFIELD mmbo001
            {<point name="construct.c.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo001
            #add-point:BEFORE FIELD mmbo001
            {<point name="construct.b.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo001
            
            #add-point:AFTER FIELD mmbo001
            {<point name="construct.a.mmbo001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo002
            #add-point:BEFORE FIELD mmbo002
            {<point name="construct.b.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo002
            
            #add-point:AFTER FIELD mmbo002
            {<point name="construct.a.mmbo002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo002
         ON ACTION controlp INFIELD mmbo002
            #add-point:ON ACTION controlp INFIELD mmbo002
            {<point name="construct.c.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol002
            #add-point:BEFORE FIELD mmbol002
            {<point name="construct.b.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol002
            
            #add-point:AFTER FIELD mmbol002
            {<point name="construct.a.mmbol002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbol002
         ON ACTION controlp INFIELD mmbol002
            #add-point:ON ACTION controlp INFIELD mmbol002
            {<point name="construct.c.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol003
            #add-point:BEFORE FIELD mmbol003
            {<point name="construct.b.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol003
            
            #add-point:AFTER FIELD mmbol003
            {<point name="construct.a.mmbol003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbol003
         ON ACTION controlp INFIELD mmbol003
            #add-point:ON ACTION controlp INFIELD mmbol003
            {<point name="construct.c.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbosite
            #add-point:BEFORE FIELD mmbosite
            {<point name="construct.b.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbosite
            
            #add-point:AFTER FIELD mmbosite
            {<point name="construct.a.mmbosite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbosite
         ON ACTION controlp INFIELD mmbosite
            #add-point:ON ACTION controlp INFIELD mmbosite
            {<point name="construct.c.mmbosite" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbo005
         ON ACTION controlp INFIELD mmbo005
            #add-point:ON ACTION controlp INFIELD mmbo005
            {<point name="construct.c.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo005
            #add-point:BEFORE FIELD mmbo005
            {<point name="construct.b.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo005
            
            #add-point:AFTER FIELD mmbo005
            {<point name="construct.a.mmbo005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo006
            #add-point:BEFORE FIELD mmbo006
            {<point name="construct.b.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo006
            
            #add-point:AFTER FIELD mmbo006
            {<point name="construct.a.mmbo006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo006
         ON ACTION controlp INFIELD mmbo006
            #add-point:ON ACTION controlp INFIELD mmbo006
            {<point name="construct.c.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo009
            #add-point:BEFORE FIELD mmbo009
            {<point name="construct.b.mmbo009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo009
            
            #add-point:AFTER FIELD mmbo009
            {<point name="construct.a.mmbo009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo009
         ON ACTION controlp INFIELD mmbo009
            #add-point:ON ACTION controlp INFIELD mmbo009
            {<point name="construct.c.mmbo009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo010
            #add-point:BEFORE FIELD mmbo010
            {<point name="construct.b.mmbo010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo010
            
            #add-point:AFTER FIELD mmbo010
            {<point name="construct.a.mmbo010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo010
         ON ACTION controlp INFIELD mmbo010
            #add-point:ON ACTION controlp INFIELD mmbo010
            {<point name="construct.c.mmbo010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo011
            #add-point:BEFORE FIELD mmbo011
            {<point name="construct.b.mmbo011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo011
            
            #add-point:AFTER FIELD mmbo011
            {<point name="construct.a.mmbo011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo011
         ON ACTION controlp INFIELD mmbo011
            #add-point:ON ACTION controlp INFIELD mmbo011
            {<point name="construct.c.mmbo011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo012
            #add-point:BEFORE FIELD mmbo012
            {<point name="construct.b.mmbo012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo012
            
            #add-point:AFTER FIELD mmbo012
            {<point name="construct.a.mmbo012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo012
         ON ACTION controlp INFIELD mmbo012
            #add-point:ON ACTION controlp INFIELD mmbo012
            {<point name="construct.c.mmbo012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo014
            #add-point:BEFORE FIELD mmbo014
            {<point name="construct.b.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo014
            
            #add-point:AFTER FIELD mmbo014
            {<point name="construct.a.mmbo014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo014
         ON ACTION controlp INFIELD mmbo014
            #add-point:ON ACTION controlp INFIELD mmbo014
            {<point name="construct.c.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo015
            #add-point:BEFORE FIELD mmbo015
            {<point name="construct.b.mmbo015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo015
            
            #add-point:AFTER FIELD mmbo015
            {<point name="construct.a.mmbo015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo015
         ON ACTION controlp INFIELD mmbo015
            #add-point:ON ACTION controlp INFIELD mmbo015
            {<point name="construct.c.mmbo015" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbounit
         ON ACTION controlp INFIELD mmbounit
            #add-point:ON ACTION controlp INFIELD mmbounit
            {<point name="construct.c.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbounit
            #add-point:BEFORE FIELD mmbounit
            {<point name="construct.b.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbounit
            
            #add-point:AFTER FIELD mmbounit
            {<point name="construct.a.mmbounit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo013
            #add-point:BEFORE FIELD mmbo013
            {<point name="construct.b.mmbo013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo013
            
            #add-point:AFTER FIELD mmbo013
            {<point name="construct.a.mmbo013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbo013
         ON ACTION controlp INFIELD mmbo013
            #add-point:ON ACTION controlp INFIELD mmbo013
            {<point name="construct.c.mmbo013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboacti
            #add-point:BEFORE FIELD mmboacti
            {<point name="construct.b.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboacti
            
            #add-point:AFTER FIELD mmboacti
            {<point name="construct.a.mmboacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmboacti
         ON ACTION controlp INFIELD mmboacti
            #add-point:ON ACTION controlp INFIELD mmboacti
            {<point name="construct.c.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbostus
            #add-point:BEFORE FIELD mmbostus
            {<point name="construct.b.mmbostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbostus
            
            #add-point:AFTER FIELD mmbostus
            {<point name="construct.a.mmbostus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbostus
         ON ACTION controlp INFIELD mmbostus
            #add-point:ON ACTION controlp INFIELD mmbostus
            {<point name="construct.c.mmbostus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmboownid
         ON ACTION controlp INFIELD mmboownid
            #add-point:ON ACTION controlp INFIELD mmboownid
            {<point name="construct.c.mmboownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboownid
            #add-point:BEFORE FIELD mmboownid
            {<point name="construct.b.mmboownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboownid
            
            #add-point:AFTER FIELD mmboownid
            {<point name="construct.a.mmboownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmboowndp
         ON ACTION controlp INFIELD mmboowndp
            #add-point:ON ACTION controlp INFIELD mmboowndp
            {<point name="construct.c.mmboowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboowndp
            #add-point:BEFORE FIELD mmboowndp
            {<point name="construct.b.mmboowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboowndp
            
            #add-point:AFTER FIELD mmboowndp
            {<point name="construct.a.mmboowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbocrtid
         ON ACTION controlp INFIELD mmbocrtid
            #add-point:ON ACTION controlp INFIELD mmbocrtid
            {<point name="construct.c.mmbocrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtid
            #add-point:BEFORE FIELD mmbocrtid
            {<point name="construct.b.mmbocrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocrtid
            
            #add-point:AFTER FIELD mmbocrtid
            {<point name="construct.a.mmbocrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbocrtdp
         ON ACTION controlp INFIELD mmbocrtdp
            #add-point:ON ACTION controlp INFIELD mmbocrtdp
            {<point name="construct.c.mmbocrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtdp
            #add-point:BEFORE FIELD mmbocrtdp
            {<point name="construct.b.mmbocrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocrtdp
            
            #add-point:AFTER FIELD mmbocrtdp
            {<point name="construct.a.mmbocrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocrtdt
            #add-point:BEFORE FIELD mmbocrtdt
            {<point name="construct.b.mmbocrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbomodid
         ON ACTION controlp INFIELD mmbomodid
            #add-point:ON ACTION controlp INFIELD mmbomodid
            {<point name="construct.c.mmbomodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbomodid
            #add-point:BEFORE FIELD mmbomodid
            {<point name="construct.b.mmbomodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbomodid
            
            #add-point:AFTER FIELD mmbomodid
            {<point name="construct.a.mmbomodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbomoddt
            #add-point:BEFORE FIELD mmbomoddt
            {<point name="construct.b.mmbomoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbocnfid
         ON ACTION controlp INFIELD mmbocnfid
            #add-point:ON ACTION controlp INFIELD mmbocnfid
            {<point name="construct.c.mmbocnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocnfid
            #add-point:BEFORE FIELD mmbocnfid
            {<point name="construct.b.mmbocnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbocnfid
            
            #add-point:AFTER FIELD mmbocnfid
            {<point name="construct.a.mmbocnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbocnfdt
            #add-point:BEFORE FIELD mmbocnfdt
            {<point name="construct.b.mmbocnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcisite,mmciunit,mmci001,mmci002,mmci003,mmci004,mmci005,mmciacti
           FROM s_detail1[1].mmcisite,s_detail1[1].mmciunit,s_detail1[1].mmci001,s_detail1[1].mmci002, 
               s_detail1[1].mmci003,s_detail1[1].mmci004,s_detail1[1].mmci005,s_detail1[1].mmciacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD mmcisite
            #add-point:BEFORE FIELD mmcisite
            {<point name="construct.b.page1.mmcisite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcisite
            
            #add-point:AFTER FIELD mmcisite
            {<point name="construct.a.page1.mmcisite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmcisite
         ON ACTION controlp INFIELD mmcisite
            #add-point:ON ACTION controlp INFIELD mmcisite
            {<point name="construct.c.page1.mmcisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmciunit
            #add-point:BEFORE FIELD mmciunit
            {<point name="construct.b.page1.mmciunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmciunit
            
            #add-point:AFTER FIELD mmciunit
            {<point name="construct.a.page1.mmciunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmciunit
         ON ACTION controlp INFIELD mmciunit
            #add-point:ON ACTION controlp INFIELD mmciunit
            {<point name="construct.c.page1.mmciunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci001
            #add-point:BEFORE FIELD mmci001
            {<point name="construct.b.page1.mmci001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci001
            
            #add-point:AFTER FIELD mmci001
            {<point name="construct.a.page1.mmci001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmci001
         ON ACTION controlp INFIELD mmci001
            #add-point:ON ACTION controlp INFIELD mmci001
            {<point name="construct.c.page1.mmci001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci002
            #add-point:BEFORE FIELD mmci002
            {<point name="construct.b.page1.mmci002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci002
            
            #add-point:AFTER FIELD mmci002
            {<point name="construct.a.page1.mmci002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmci002
         ON ACTION controlp INFIELD mmci002
            #add-point:ON ACTION controlp INFIELD mmci002
            {<point name="construct.c.page1.mmci002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci003
            #add-point:BEFORE FIELD mmci003
            {<point name="construct.b.page1.mmci003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci003
            
            #add-point:AFTER FIELD mmci003
            {<point name="construct.a.page1.mmci003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmci003
         ON ACTION controlp INFIELD mmci003
            #add-point:ON ACTION controlp INFIELD mmci003
            {<point name="construct.c.page1.mmci003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci004
            #add-point:BEFORE FIELD mmci004
            {<point name="construct.b.page1.mmci004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci004
            
            #add-point:AFTER FIELD mmci004
            {<point name="construct.a.page1.mmci004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmci004
         ON ACTION controlp INFIELD mmci004
            #add-point:ON ACTION controlp INFIELD mmci004
            {<point name="construct.c.page1.mmci004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci005
            #add-point:BEFORE FIELD mmci005
            {<point name="construct.b.page1.mmci005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci005
            
            #add-point:AFTER FIELD mmci005
            {<point name="construct.a.page1.mmci005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmci005
         ON ACTION controlp INFIELD mmci005
            #add-point:ON ACTION controlp INFIELD mmci005
            {<point name="construct.c.page1.mmci005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmciacti
            #add-point:BEFORE FIELD mmciacti
            {<point name="construct.b.page1.mmciacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmciacti
            
            #add-point:AFTER FIELD mmciacti
            {<point name="construct.a.page1.mmciacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmciacti
         ON ACTION controlp INFIELD mmciacti
            #add-point:ON ACTION controlp INFIELD mmciacti
            {<point name="construct.c.page1.mmciacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj003,mmcj004,mmcj005,mmcj006,mmcj007, 
          mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti
           FROM s_detail2[1].mmcjsite,s_detail2[1].mmcjunit,s_detail2[1].mmcj001,s_detail2[1].mmcj002, 
               s_detail2[1].mmcj003,s_detail2[1].mmcj004,s_detail2[1].mmcj005,s_detail2[1].mmcj006,s_detail2[1].mmcj007, 
               s_detail2[1].mmcj008,s_detail2[1].mmcj009,s_detail2[1].mmcj010,s_detail2[1].mmcj011,s_detail2[1].mmcj012, 
               s_detail2[1].mmcjacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmcjsite
            #add-point:BEFORE FIELD mmcjsite
            {<point name="construct.b.page2.mmcjsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjsite
            
            #add-point:AFTER FIELD mmcjsite
            {<point name="construct.a.page2.mmcjsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcjsite
         ON ACTION controlp INFIELD mmcjsite
            #add-point:ON ACTION controlp INFIELD mmcjsite
            {<point name="construct.c.page2.mmcjsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcjunit
            #add-point:BEFORE FIELD mmcjunit
            {<point name="construct.b.page2.mmcjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjunit
            
            #add-point:AFTER FIELD mmcjunit
            {<point name="construct.a.page2.mmcjunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcjunit
         ON ACTION controlp INFIELD mmcjunit
            #add-point:ON ACTION controlp INFIELD mmcjunit
            {<point name="construct.c.page2.mmcjunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj001
            #add-point:BEFORE FIELD mmcj001
            {<point name="construct.b.page2.mmcj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj001
            
            #add-point:AFTER FIELD mmcj001
            {<point name="construct.a.page2.mmcj001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj001
         ON ACTION controlp INFIELD mmcj001
            #add-point:ON ACTION controlp INFIELD mmcj001
            {<point name="construct.c.page2.mmcj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj002
            #add-point:BEFORE FIELD mmcj002
            {<point name="construct.b.page2.mmcj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj002
            
            #add-point:AFTER FIELD mmcj002
            {<point name="construct.a.page2.mmcj002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj002
         ON ACTION controlp INFIELD mmcj002
            #add-point:ON ACTION controlp INFIELD mmcj002
            {<point name="construct.c.page2.mmcj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj003
            #add-point:BEFORE FIELD mmcj003
            {<point name="construct.b.page2.mmcj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj003
            
            #add-point:AFTER FIELD mmcj003
            {<point name="construct.a.page2.mmcj003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj003
         ON ACTION controlp INFIELD mmcj003
            #add-point:ON ACTION controlp INFIELD mmcj003
            {<point name="construct.c.page2.mmcj003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj004
            #add-point:BEFORE FIELD mmcj004
            {<point name="construct.b.page2.mmcj004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj004
            
            #add-point:AFTER FIELD mmcj004
            {<point name="construct.a.page2.mmcj004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj004
         ON ACTION controlp INFIELD mmcj004
            #add-point:ON ACTION controlp INFIELD mmcj004
            {<point name="construct.c.page2.mmcj004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.mmcj005
         ON ACTION controlp INFIELD mmcj005
            #add-point:ON ACTION controlp INFIELD mmcj005
            {<point name="construct.c.page2.mmcj005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj005
            #add-point:BEFORE FIELD mmcj005
            {<point name="construct.b.page2.mmcj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj005
            
            #add-point:AFTER FIELD mmcj005
            {<point name="construct.a.page2.mmcj005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj006
            #add-point:BEFORE FIELD mmcj006
            {<point name="construct.b.page2.mmcj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj006
            
            #add-point:AFTER FIELD mmcj006
            {<point name="construct.a.page2.mmcj006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj006
         ON ACTION controlp INFIELD mmcj006
            #add-point:ON ACTION controlp INFIELD mmcj006
            {<point name="construct.c.page2.mmcj006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj007
            #add-point:BEFORE FIELD mmcj007
            {<point name="construct.b.page2.mmcj007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj007
            
            #add-point:AFTER FIELD mmcj007
            {<point name="construct.a.page2.mmcj007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj007
         ON ACTION controlp INFIELD mmcj007
            #add-point:ON ACTION controlp INFIELD mmcj007
            {<point name="construct.c.page2.mmcj007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj008
            #add-point:BEFORE FIELD mmcj008
            {<point name="construct.b.page2.mmcj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj008
            
            #add-point:AFTER FIELD mmcj008
            {<point name="construct.a.page2.mmcj008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj008
         ON ACTION controlp INFIELD mmcj008
            #add-point:ON ACTION controlp INFIELD mmcj008
            {<point name="construct.c.page2.mmcj008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj009
            #add-point:BEFORE FIELD mmcj009
            {<point name="construct.b.page2.mmcj009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj009
            
            #add-point:AFTER FIELD mmcj009
            {<point name="construct.a.page2.mmcj009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj009
         ON ACTION controlp INFIELD mmcj009
            #add-point:ON ACTION controlp INFIELD mmcj009
            {<point name="construct.c.page2.mmcj009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj010
            #add-point:BEFORE FIELD mmcj010
            {<point name="construct.b.page2.mmcj010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj010
            
            #add-point:AFTER FIELD mmcj010
            {<point name="construct.a.page2.mmcj010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj010
         ON ACTION controlp INFIELD mmcj010
            #add-point:ON ACTION controlp INFIELD mmcj010
            {<point name="construct.c.page2.mmcj010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj011
            #add-point:BEFORE FIELD mmcj011
            {<point name="construct.b.page2.mmcj011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj011
            
            #add-point:AFTER FIELD mmcj011
            {<point name="construct.a.page2.mmcj011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj011
         ON ACTION controlp INFIELD mmcj011
            #add-point:ON ACTION controlp INFIELD mmcj011
            {<point name="construct.c.page2.mmcj011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj012
            #add-point:BEFORE FIELD mmcj012
            {<point name="construct.b.page2.mmcj012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj012
            
            #add-point:AFTER FIELD mmcj012
            {<point name="construct.a.page2.mmcj012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcj012
         ON ACTION controlp INFIELD mmcj012
            #add-point:ON ACTION controlp INFIELD mmcj012
            {<point name="construct.c.page2.mmcj012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcjacti
            #add-point:BEFORE FIELD mmcjacti
            {<point name="construct.b.page2.mmcjacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjacti
            
            #add-point:AFTER FIELD mmcjacti
            {<point name="construct.a.page2.mmcjacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.mmcjacti
         ON ACTION controlp INFIELD mmcjacti
            #add-point:ON ACTION controlp INFIELD mmcjacti
            {<point name="construct.c.page2.mmcjacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005,mmbsacti
           FROM s_detail3[1].mmbssite,s_detail3[1].mmbsunit,s_detail3[1].mmbs001,s_detail3[1].mmbs002, 
               s_detail3[1].mmbs003,s_detail3[1].mmbs004,s_detail3[1].mmbs005,s_detail3[1].mmbsacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmbssite
            #add-point:BEFORE FIELD mmbssite
            {<point name="construct.b.page3.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbssite
            
            #add-point:AFTER FIELD mmbssite
            {<point name="construct.a.page3.mmbssite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbssite
         ON ACTION controlp INFIELD mmbssite
            #add-point:ON ACTION controlp INFIELD mmbssite
            {<point name="construct.c.page3.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsunit
            #add-point:BEFORE FIELD mmbsunit
            {<point name="construct.b.page3.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsunit
            
            #add-point:AFTER FIELD mmbsunit
            {<point name="construct.a.page3.mmbsunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbsunit
         ON ACTION controlp INFIELD mmbsunit
            #add-point:ON ACTION controlp INFIELD mmbsunit
            {<point name="construct.c.page3.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs001
            #add-point:BEFORE FIELD mmbs001
            {<point name="construct.b.page3.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs001
            
            #add-point:AFTER FIELD mmbs001
            {<point name="construct.a.page3.mmbs001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbs001
         ON ACTION controlp INFIELD mmbs001
            #add-point:ON ACTION controlp INFIELD mmbs001
            {<point name="construct.c.page3.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs002
            #add-point:BEFORE FIELD mmbs002
            {<point name="construct.b.page3.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs002
            
            #add-point:AFTER FIELD mmbs002
            {<point name="construct.a.page3.mmbs002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbs002
         ON ACTION controlp INFIELD mmbs002
            #add-point:ON ACTION controlp INFIELD mmbs002
            {<point name="construct.c.page3.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs003
            #add-point:BEFORE FIELD mmbs003
            {<point name="construct.b.page3.mmbs003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs003
            
            #add-point:AFTER FIELD mmbs003
            {<point name="construct.a.page3.mmbs003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbs003
         ON ACTION controlp INFIELD mmbs003
            #add-point:ON ACTION controlp INFIELD mmbs003
            {<point name="construct.c.page3.mmbs003" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.mmbs004
         ON ACTION controlp INFIELD mmbs004
            #add-point:ON ACTION controlp INFIELD mmbs004
            {<point name="construct.c.page3.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs004
            #add-point:BEFORE FIELD mmbs004
            {<point name="construct.b.page3.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs004
            
            #add-point:AFTER FIELD mmbs004
            {<point name="construct.a.page3.mmbs004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs005
            #add-point:BEFORE FIELD mmbs005
            {<point name="construct.b.page3.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs005
            
            #add-point:AFTER FIELD mmbs005
            {<point name="construct.a.page3.mmbs005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbs005
         ON ACTION controlp INFIELD mmbs005
            #add-point:ON ACTION controlp INFIELD mmbs005
            {<point name="construct.c.page3.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsacti
            #add-point:BEFORE FIELD mmbsacti
            {<point name="construct.b.page3.mmbsacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsacti
            
            #add-point:AFTER FIELD mmbsacti
            {<point name="construct.a.page3.mmbsacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.mmbsacti
         ON ACTION controlp INFIELD mmbsacti
            #add-point:ON ACTION controlp INFIELD mmbsacti
            {<point name="construct.c.page3.mmbsacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON mmcksite,mmckunit,mmck001,mmck002,mmck003,mmck004,mmck005,mmck006,mmck007, 
          mmck008,mmck009,mmckacti
           FROM s_detail4[1].mmcksite,s_detail4[1].mmckunit,s_detail4[1].mmck001,s_detail4[1].mmck002, 
               s_detail4[1].mmck003,s_detail4[1].mmck004,s_detail4[1].mmck005,s_detail4[1].mmck006,s_detail4[1].mmck007, 
               s_detail4[1].mmck008,s_detail4[1].mmck009,s_detail4[1].mmckacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD mmcksite
            #add-point:BEFORE FIELD mmcksite
            {<point name="construct.b.page4.mmcksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcksite
            
            #add-point:AFTER FIELD mmcksite
            {<point name="construct.a.page4.mmcksite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmcksite
         ON ACTION controlp INFIELD mmcksite
            #add-point:ON ACTION controlp INFIELD mmcksite
            {<point name="construct.c.page4.mmcksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmckunit
            #add-point:BEFORE FIELD mmckunit
            {<point name="construct.b.page4.mmckunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmckunit
            
            #add-point:AFTER FIELD mmckunit
            {<point name="construct.a.page4.mmckunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmckunit
         ON ACTION controlp INFIELD mmckunit
            #add-point:ON ACTION controlp INFIELD mmckunit
            {<point name="construct.c.page4.mmckunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck001
            #add-point:BEFORE FIELD mmck001
            {<point name="construct.b.page4.mmck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck001
            
            #add-point:AFTER FIELD mmck001
            {<point name="construct.a.page4.mmck001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck001
         ON ACTION controlp INFIELD mmck001
            #add-point:ON ACTION controlp INFIELD mmck001
            {<point name="construct.c.page4.mmck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck002
            #add-point:BEFORE FIELD mmck002
            {<point name="construct.b.page4.mmck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck002
            
            #add-point:AFTER FIELD mmck002
            {<point name="construct.a.page4.mmck002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck002
         ON ACTION controlp INFIELD mmck002
            #add-point:ON ACTION controlp INFIELD mmck002
            {<point name="construct.c.page4.mmck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck003
            #add-point:BEFORE FIELD mmck003
            {<point name="construct.b.page4.mmck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck003
            
            #add-point:AFTER FIELD mmck003
            {<point name="construct.a.page4.mmck003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck003
         ON ACTION controlp INFIELD mmck003
            #add-point:ON ACTION controlp INFIELD mmck003
            {<point name="construct.c.page4.mmck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck004
            #add-point:BEFORE FIELD mmck004
            {<point name="construct.b.page4.mmck004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck004
            
            #add-point:AFTER FIELD mmck004
            {<point name="construct.a.page4.mmck004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck004
         ON ACTION controlp INFIELD mmck004
            #add-point:ON ACTION controlp INFIELD mmck004
            {<point name="construct.c.page4.mmck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck005
            #add-point:BEFORE FIELD mmck005
            {<point name="construct.b.page4.mmck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck005
            
            #add-point:AFTER FIELD mmck005
            {<point name="construct.a.page4.mmck005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck005
         ON ACTION controlp INFIELD mmck005
            #add-point:ON ACTION controlp INFIELD mmck005
            {<point name="construct.c.page4.mmck005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck006
            #add-point:BEFORE FIELD mmck006
            {<point name="construct.b.page4.mmck006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck006
            
            #add-point:AFTER FIELD mmck006
            {<point name="construct.a.page4.mmck006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck006
         ON ACTION controlp INFIELD mmck006
            #add-point:ON ACTION controlp INFIELD mmck006
            {<point name="construct.c.page4.mmck006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck007
            #add-point:BEFORE FIELD mmck007
            {<point name="construct.b.page4.mmck007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck007
            
            #add-point:AFTER FIELD mmck007
            {<point name="construct.a.page4.mmck007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck007
         ON ACTION controlp INFIELD mmck007
            #add-point:ON ACTION controlp INFIELD mmck007
            {<point name="construct.c.page4.mmck007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck008
            #add-point:BEFORE FIELD mmck008
            {<point name="construct.b.page4.mmck008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck008
            
            #add-point:AFTER FIELD mmck008
            {<point name="construct.a.page4.mmck008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck008
         ON ACTION controlp INFIELD mmck008
            #add-point:ON ACTION controlp INFIELD mmck008
            {<point name="construct.c.page4.mmck008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck009
            #add-point:BEFORE FIELD mmck009
            {<point name="construct.b.page4.mmck009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck009
            
            #add-point:AFTER FIELD mmck009
            {<point name="construct.a.page4.mmck009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmck009
         ON ACTION controlp INFIELD mmck009
            #add-point:ON ACTION controlp INFIELD mmck009
            {<point name="construct.c.page4.mmck009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmckacti
            #add-point:BEFORE FIELD mmckacti
            {<point name="construct.b.page4.mmckacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmckacti
            
            #add-point:AFTER FIELD mmckacti
            {<point name="construct.a.page4.mmckacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.mmckacti
         ON ACTION controlp INFIELD mmckacti
            #add-point:ON ACTION controlp INFIELD mmckacti
            {<point name="construct.c.page4.mmckacti" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt355.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt355_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmbodocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt355.delete" ver="9" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt355_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.mmboldocno = g_mmbo_m.mmbodocno
LET g_master_multi_table_t.mmbol002 = g_mmbo_m.mmbol002
LET g_master_multi_table_t.mmbol003 = g_mmbo_m.mmbol003
 
 
   CALL ammt355_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt355_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbounit_desc, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp_desc, 
       g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbocnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbo_m.mmbodocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt355_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
 
      DELETE FROM mmbo_t
       WHERE mmboent = g_enterprise AND mmbodocno = g_mmbo_m.mmbodocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmbo_m.mmbodocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmci_t
       WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmci_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmcj_t
       WHERE mmcjent = g_enterprise AND
             mmcjdocno = g_mmbo_m.mmbodocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcj_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmbs_t
       WHERE mmbsent = g_enterprise AND
             mmbsdocno = g_mmbo_m.mmbodocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbs_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM mmck_t
       WHERE mmckent = g_enterprise AND
             mmckdocno = g_mmbo_m.mmbodocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmck_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmci_d.clear() 
      CALL g_mmci2_d.clear()       
      CALL g_mmci3_d.clear()       
      CALL g_mmci4_d.clear()       
 
     
      #CALL ammt355_ui_browser_refresh()  
      CALL ammt355_ui_headershow()  
      CALL ammt355_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt355_browser_fill("")
         CALL ammt355_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt355_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
   LET l_field_keys[01] = 'mmboldocno'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'mmbol001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mmbol_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt355_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmbo_m.mmbodocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="ammt355.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt355_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmci_t
       WHERE mmcient = g_enterprise AND
         mmcidocno = ps_keys_bak[1] AND mmci003 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcj_t
       WHERE mmcjent = g_enterprise AND
         mmcjdocno = ps_keys_bak[1] AND mmcj003 = ps_keys_bak[2] AND mmcj004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmbs_t
       WHERE mmbsent = g_enterprise AND
         mmbsdocno = ps_keys_bak[1] AND mmbs004 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbs_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM mmck_t
       WHERE mmckent = g_enterprise AND
         mmckdocno = ps_keys_bak[1] AND mmck003 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmck_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt355.description" ver="24" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000079
#+ 
#+ Filename...: ammt355
#+ Description: 換贈規則申請維護作業-外社卡累計消費額
#+ Creator....: 01726(2014/01/22)
#+ Modifier...: 01726(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammt355.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt355_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmci_t.*
   DEFINE l_detail2    RECORD LIKE mmcj_t.*
 
   DEFINE l_detail3    RECORD LIKE mmbs_t.*
 
   DEFINE l_detail4    RECORD LIKE mmck_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt355_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt355_detail AS ",
                "SELECT * FROM mmci_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt355_detail SELECT * FROM mmci_t 
                                         WHERE mmcient = g_enterprise AND mmcidocno = g_mmbodocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt355_detail 
      #更新key欄位
      SET mmcidocno = g_mmbo_m.mmbodocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmci_t SELECT * FROM ammt355_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt355_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt355_detail AS ",
      "SELECT * FROM mmcj_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt355_detail SELECT * FROM mmcj_t
                                         WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbodocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt355_detail SET mmcjdocno = g_mmbo_m.mmbodocno
 
  
   #將資料塞回原table   
   INSERT INTO mmcj_t SELECT * FROM ammt355_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt355_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt355_detail AS ",
      "SELECT * FROM mmbs_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt355_detail SELECT * FROM mmbs_t
                                         WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbodocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt355_detail SET mmbsdocno = g_mmbo_m.mmbodocno
 
  
   #將資料塞回原table   
   INSERT INTO mmbs_t SELECT * FROM ammt355_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt355_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammt355_detail AS ",
      "SELECT * FROM mmck_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt355_detail SELECT * FROM mmck_t
                                         WHERE mmckent = g_enterprise AND mmckdocno = g_mmbodocno_t
 
 
   #將key修正為調整後   
   UPDATE ammt355_detail SET mmckdocno = g_mmbo_m.mmbodocno
 
  
   #將資料塞回原table   
   INSERT INTO mmck_t SELECT * FROM ammt355_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt355_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   
   DROP TABLE ammt355_detail
   
END FUNCTION
]]>
</section>
  <section id="ammt355.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt355_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt355.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt355_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbo_m.mmbodocno = g_browser[g_current_idx].b_mmbodocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt355_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbounit_desc, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp_desc, 
       g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbocnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("mmbo_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmbo_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammt355_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="ammt355.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt355_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="ammt355.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt355_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbo005,mmbo006,mmbo009, 
          mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,mmbo013,mmboacti
                          FROM s_browse[1].b_mmbo000,s_browse[1].b_mmbodocno,s_browse[1].b_mmbodocdt, 
                              s_browse[1].b_mmbo004,s_browse[1].b_mmbo001,s_browse[1].b_mmbo002,s_browse[1].b_mmbo005, 
                              s_browse[1].b_mmbo006,s_browse[1].b_mmbo009,s_browse[1].b_mmbo010,s_browse[1].b_mmbo011, 
                              s_browse[1].b_mmbo012,s_browse[1].b_mmbo014,s_browse[1].b_mmbo015,s_browse[1].b_mmbounit, 
                              s_browse[1].b_mmbo013,s_browse[1].b_mmboacti
 
         BEFORE CONSTRUCT
               DISPLAY ammt355_filter_parser('mmbo000') TO s_browse[1].b_mmbo000
            DISPLAY ammt355_filter_parser('mmbodocno') TO s_browse[1].b_mmbodocno
            DISPLAY ammt355_filter_parser('mmbodocdt') TO s_browse[1].b_mmbodocdt
            DISPLAY ammt355_filter_parser('mmbo004') TO s_browse[1].b_mmbo004
            DISPLAY ammt355_filter_parser('mmbo001') TO s_browse[1].b_mmbo001
            DISPLAY ammt355_filter_parser('mmbo002') TO s_browse[1].b_mmbo002
            DISPLAY ammt355_filter_parser('mmbo005') TO s_browse[1].b_mmbo005
            DISPLAY ammt355_filter_parser('mmbo006') TO s_browse[1].b_mmbo006
            DISPLAY ammt355_filter_parser('mmbo009') TO s_browse[1].b_mmbo009
            DISPLAY ammt355_filter_parser('mmbo010') TO s_browse[1].b_mmbo010
            DISPLAY ammt355_filter_parser('mmbo011') TO s_browse[1].b_mmbo011
            DISPLAY ammt355_filter_parser('mmbo012') TO s_browse[1].b_mmbo012
            DISPLAY ammt355_filter_parser('mmbo014') TO s_browse[1].b_mmbo014
            DISPLAY ammt355_filter_parser('mmbo015') TO s_browse[1].b_mmbo015
            DISPLAY ammt355_filter_parser('mmbounit') TO s_browse[1].b_mmbounit
            DISPLAY ammt355_filter_parser('mmbo013') TO s_browse[1].b_mmbo013
            DISPLAY ammt355_filter_parser('mmboacti') TO s_browse[1].b_mmboacti
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt355_filter_show('mmbo000')
   CALL ammt355_filter_show('mmbodocno')
   CALL ammt355_filter_show('mmbodocdt')
   CALL ammt355_filter_show('mmbo004')
   CALL ammt355_filter_show('mmbo001')
   CALL ammt355_filter_show('mmbo002')
   CALL ammt355_filter_show('mmbo005')
   CALL ammt355_filter_show('mmbo006')
   CALL ammt355_filter_show('mmbo009')
   CALL ammt355_filter_show('mmbo010')
   CALL ammt355_filter_show('mmbo011')
   CALL ammt355_filter_show('mmbo012')
   CALL ammt355_filter_show('mmbo014')
   CALL ammt355_filter_show('mmbo015')
   CALL ammt355_filter_show('mmbounit')
   CALL ammt355_filter_show('mmbo013')
   CALL ammt355_filter_show('mmboacti')
 
END FUNCTION
]]>
</section>
  <section id="ammt355.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt355_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="ammt355.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt355_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt355_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="ammt355.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbo_m        RECORD
       mmbo000 LIKE mmbo_t.mmbo000, 
   mmbodocno LIKE mmbo_t.mmbodocno, 
   mmbodocdt LIKE mmbo_t.mmbodocdt, 
   mmbo004 LIKE mmbo_t.mmbo004, 
   mmbo001 LIKE mmbo_t.mmbo001, 
   mmbo002 LIKE mmbo_t.mmbo002, 
   mmbol002 LIKE mmbol_t.mmbol002, 
   mmbol003 LIKE mmbol_t.mmbol003, 
   mmbosite LIKE mmbo_t.mmbosite, 
   mmbo005 LIKE mmbo_t.mmbo005, 
   mmbo005_desc LIKE type_t.chr80, 
   mmbo006 LIKE mmbo_t.mmbo006, 
   mmbo009 LIKE mmbo_t.mmbo009, 
   mmbo010 LIKE mmbo_t.mmbo010, 
   mmbo011 LIKE mmbo_t.mmbo011, 
   mmbo012 LIKE mmbo_t.mmbo012, 
   mmbo014 LIKE mmbo_t.mmbo014, 
   mmbo015 LIKE mmbo_t.mmbo015, 
   mmbounit LIKE mmbo_t.mmbounit, 
   mmbounit_desc LIKE type_t.chr80, 
   mmbo013 LIKE mmbo_t.mmbo013, 
   mmboacti LIKE mmbo_t.mmboacti, 
   mmbostus LIKE mmbo_t.mmbostus, 
   mmboownid LIKE mmbo_t.mmboownid, 
   mmboownid_desc LIKE type_t.chr80, 
   mmboowndp LIKE mmbo_t.mmboowndp, 
   mmboowndp_desc LIKE type_t.chr80, 
   mmbocrtid LIKE mmbo_t.mmbocrtid, 
   mmbocrtid_desc LIKE type_t.chr80, 
   mmbocrtdp LIKE mmbo_t.mmbocrtdp, 
   mmbocrtdp_desc LIKE type_t.chr80, 
   mmbocrtdt DATETIME YEAR TO SECOND, 
   mmbomodid LIKE mmbo_t.mmbomodid, 
   mmbomodid_desc LIKE type_t.chr80, 
   mmbomoddt DATETIME YEAR TO SECOND, 
   mmbocnfid LIKE mmbo_t.mmbocnfid, 
   mmbocnfid_desc LIKE type_t.chr80, 
   mmbocnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmci_d        RECORD
       mmcisite LIKE mmci_t.mmcisite, 
   mmciunit LIKE mmci_t.mmciunit, 
   mmci001 LIKE mmci_t.mmci001, 
   mmci002 LIKE mmci_t.mmci002, 
   mmci003 LIKE mmci_t.mmci003, 
   mmci004 LIKE mmci_t.mmci004, 
   mmci005 LIKE mmci_t.mmci005, 
   mmciacti LIKE mmci_t.mmciacti
       END RECORD
PRIVATE TYPE type_g_mmci2_d RECORD
       mmcjsite LIKE mmcj_t.mmcjsite, 
   mmcjunit LIKE mmcj_t.mmcjunit, 
   mmcj001 LIKE mmcj_t.mmcj001, 
   mmcj002 LIKE mmcj_t.mmcj002, 
   mmcj003 LIKE mmcj_t.mmcj003, 
   mmcj004 LIKE mmcj_t.mmcj004, 
   mmcj005 LIKE mmcj_t.mmcj005, 
   mmcj005_desc LIKE type_t.chr80, 
   mmcj006 LIKE mmcj_t.mmcj006, 
   mmcj007 LIKE mmcj_t.mmcj007, 
   mmcj008 LIKE mmcj_t.mmcj008, 
   mmcj009 LIKE mmcj_t.mmcj009, 
   mmcj010 LIKE mmcj_t.mmcj010, 
   mmcj011 LIKE mmcj_t.mmcj011, 
   mmcj012 LIKE mmcj_t.mmcj012, 
   mmcjacti LIKE mmcj_t.mmcjacti
       END RECORD
PRIVATE TYPE type_g_mmci3_d RECORD
       mmbssite LIKE mmbs_t.mmbssite, 
   mmbsunit LIKE mmbs_t.mmbsunit, 
   mmbs001 LIKE mmbs_t.mmbs001, 
   mmbs002 LIKE mmbs_t.mmbs002, 
   mmbs003 LIKE mmbs_t.mmbs003, 
   mmbs004 LIKE mmbs_t.mmbs004, 
   mmbs004_desc LIKE type_t.chr500, 
   mmbs005 LIKE mmbs_t.mmbs005, 
   mmbsacti LIKE mmbs_t.mmbsacti
       END RECORD
PRIVATE TYPE type_g_mmci4_d RECORD
       mmcksite LIKE mmck_t.mmcksite, 
   mmckunit LIKE mmck_t.mmckunit, 
   mmck001 LIKE mmck_t.mmck001, 
   mmck002 LIKE mmck_t.mmck002, 
   mmck003 LIKE mmck_t.mmck003, 
   mmck004 LIKE mmck_t.mmck004, 
   mmck005 LIKE mmck_t.mmck005, 
   mmck006 LIKE mmck_t.mmck006, 
   mmck007 LIKE mmck_t.mmck007, 
   mmck008 LIKE mmck_t.mmck008, 
   mmck009 LIKE mmck_t.mmck009, 
   mmckacti LIKE mmck_t.mmckacti
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmbo_m          type_g_mmbo_m
DEFINE g_mmbo_m_t        type_g_mmbo_m
 
   DEFINE g_mmbodocno_t LIKE mmbo_t.mmbodocno
 
 
DEFINE g_mmci_d          DYNAMIC ARRAY OF type_g_mmci_d
DEFINE g_mmci_d_t        type_g_mmci_d
DEFINE g_mmci2_d   DYNAMIC ARRAY OF type_g_mmci2_d
DEFINE g_mmci2_d_t type_g_mmci2_d
DEFINE g_mmci3_d   DYNAMIC ARRAY OF type_g_mmci3_d
DEFINE g_mmci3_d_t type_g_mmci3_d
DEFINE g_mmci4_d   DYNAMIC ARRAY OF type_g_mmci4_d
DEFINE g_mmci4_d_t type_g_mmci4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbo000 LIKE mmbo_t.mmbo000,
      b_mmbodocno LIKE mmbo_t.mmbodocno,
      b_mmbodocdt LIKE mmbo_t.mmbodocdt,
      b_mmbo004 LIKE mmbo_t.mmbo004,
      b_mmbo001 LIKE mmbo_t.mmbo001,
      b_mmbo002 LIKE mmbo_t.mmbo002,
      b_mmbo005 LIKE mmbo_t.mmbo005,
   b_mmbo005_desc LIKE type_t.chr80,
      b_mmbo006 LIKE mmbo_t.mmbo006,
      b_mmbo009 LIKE mmbo_t.mmbo009,
      b_mmbo010 LIKE mmbo_t.mmbo010,
      b_mmbo011 LIKE mmbo_t.mmbo011,
      b_mmbo012 LIKE mmbo_t.mmbo012,
      b_mmbo014 LIKE mmbo_t.mmbo014,
      b_mmbo015 LIKE mmbo_t.mmbo015,
      b_mmbounit LIKE mmbo_t.mmbounit,
   b_mmbounit_desc LIKE type_t.chr80,
      b_mmbo013 LIKE mmbo_t.mmbo013,
      b_mmboacti LIKE mmbo_t.mmboacti
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbo000 LIKE mmbo_t.mmbo000,
      b_mmbodocno LIKE mmbo_t.mmbodocno,
      b_mmbodocdt LIKE mmbo_t.mmbodocdt,
      b_mmbo004 LIKE mmbo_t.mmbo004,
      b_mmbo001 LIKE mmbo_t.mmbo001,
      b_mmbo002 LIKE mmbo_t.mmbo002,
      b_mmbo005 LIKE mmbo_t.mmbo005,
   b_mmbo005_desc LIKE type_t.chr80,
      b_mmbo006 LIKE mmbo_t.mmbo006,
      b_mmbo009 LIKE mmbo_t.mmbo009,
      b_mmbo010 LIKE mmbo_t.mmbo010,
      b_mmbo011 LIKE mmbo_t.mmbo011,
      b_mmbo012 LIKE mmbo_t.mmbo012,
      b_mmbo014 LIKE mmbo_t.mmbo014,
      b_mmbo015 LIKE mmbo_t.mmbo015,
      b_mmbounit LIKE mmbo_t.mmbounit,
   b_mmbounit_desc LIKE type_t.chr80,
      b_mmbo013 LIKE mmbo_t.mmbo013,
      b_mmboacti LIKE mmbo_t.mmboacti
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      mmboldocno LIKE mmbol_t.mmboldocno,
      mmbol002 LIKE mmbol_t.mmbol002,
      mmbol003 LIKE mmbol_t.mmbol003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammt355.idx_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammt355_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmci_d.getLength() THEN
         LET g_detail_idx = g_mmci_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmci_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmci_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmci2_d.getLength() THEN
         LET g_detail_idx = g_mmci2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmci2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmci2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmci3_d.getLength() THEN
         LET g_detail_idx = g_mmci3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmci3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmci3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_mmci4_d.getLength() THEN
         LET g_detail_idx = g_mmci4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmci4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmci4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt355.init" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt355_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmbostus','13','N,X,Y,A,D,R,W,J,K')
 
      CALL cl_set_combo_scc('mmbo000','32') 
   CALL cl_set_combo_scc('mmbo004','6516') 
   CALL cl_set_combo_scc('mmbo009','6534') 
   CALL cl_set_combo_scc('mmbo010','6535') 
   CALL cl_set_combo_scc('mmbo011','6536') 
   CALL cl_set_combo_scc('mmcj004','6517') 
   CALL cl_set_combo_scc('mmcj008','6537') 
   CALL cl_set_combo_scc('mmcj012','6538') 
   CALL cl_set_combo_scc('mmck008','6520') 
   CALL cl_set_combo_scc('mmck009','30') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammt355_default_search()
    
END FUNCTION
]]>
</section>
  <section id="ammt355.input" ver="4" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt355_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmcisite,mmciunit,mmci001,mmci002,mmci003,mmci004,mmci005,mmciacti FROM  
       mmci_t WHERE mmcient=? AND mmcidocno=? AND mmci003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt355_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj003,mmcj004,mmcj005,mmcj006,mmcj007, 
       mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti FROM mmcj_t WHERE mmcjent=? AND mmcjdocno=?  
       AND mmcj003=? AND mmcj004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt355_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005,mmbsacti FROM  
       mmbs_t WHERE mmbsent=? AND mmbsdocno=? AND mmbs004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt355_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmcksite,mmckunit,mmck001,mmck002,mmck003,mmck004,mmck005,mmck006,mmck007, 
       mmck008,mmck009,mmckacti FROM mmck_t WHERE mmckent=? AND mmckdocno=? AND mmck003=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt355_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt355_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt355_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001, 
       g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo006, 
       g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015, 
       g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="ammt355.input.body" ver="7" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmci_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmci_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt355_b_fill()
            LET g_rec_b = g_mmci_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
               CLOSE ammt355_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmci_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmci_d[l_ac].mmci003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmci_d_t.* = g_mmci_d[l_ac].*  #BACKUP
               CALL ammt355_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt355_set_no_entry_b(l_cmd)
               IF NOT ammt355_lock_b("mmci_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt355_bcl INTO g_mmci_d[l_ac].mmcisite,g_mmci_d[l_ac].mmciunit,g_mmci_d[l_ac].mmci001, 
                      g_mmci_d[l_ac].mmci002,g_mmci_d[l_ac].mmci003,g_mmci_d[l_ac].mmci004,g_mmci_d[l_ac].mmci005, 
                      g_mmci_d[l_ac].mmciacti
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmci_d_t.mmci003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt355_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmci_d[l_ac].* TO NULL 
                  LET g_mmci_d[l_ac].mmci003 = "1"
      LET g_mmci_d[l_ac].mmci004 = "0"
      LET g_mmci_d[l_ac].mmci005 = "1"
      LET g_mmci_d[l_ac].mmciacti = "Y"
 
            LET g_mmci_d_t.* = g_mmci_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt355_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt355_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmci_d[li_reproduce_target].* = g_mmci_d[li_reproduce].*
 
               LET g_mmci_d[li_reproduce_target].mmci003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmci_t 
             WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno
 
               AND mmci003 = g_mmci_d[l_ac].mmci003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci_d[g_detail_idx].mmci003
               CALL ammt355_insert_b('mmci_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmci_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmci_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt355_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmci_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmci_d.deleteElement(l_ac)
               NEXT FIELD mmci003
            END IF
         
            IF g_mmci_d[l_ac].mmci003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmci_t
                WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno AND
 
                      mmci003 = g_mmci_d_t.mmci003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmci_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt355_bcl
               LET l_count = g_mmci_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci_d[g_detail_idx].mmci003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt355_delete_b('mmci_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcisite
            #add-point:BEFORE FIELD mmcisite
            {<point name="input.b.page1.mmcisite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcisite
            
            #add-point:AFTER FIELD mmcisite
            {<point name="input.a.page1.mmcisite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcisite
            #add-point:ON CHANGE mmcisite
            {<point name="input.g.page1.mmcisite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmciunit
            #add-point:BEFORE FIELD mmciunit
            {<point name="input.b.page1.mmciunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmciunit
            
            #add-point:AFTER FIELD mmciunit
            {<point name="input.a.page1.mmciunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmciunit
            #add-point:ON CHANGE mmciunit
            {<point name="input.g.page1.mmciunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci001
            #add-point:BEFORE FIELD mmci001
            {<point name="input.b.page1.mmci001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci001
            
            #add-point:AFTER FIELD mmci001
            {<point name="input.a.page1.mmci001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmci001
            #add-point:ON CHANGE mmci001
            {<point name="input.g.page1.mmci001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci002
            #add-point:BEFORE FIELD mmci002
            {<point name="input.b.page1.mmci002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci002
            
            #add-point:AFTER FIELD mmci002
            {<point name="input.a.page1.mmci002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmci002
            #add-point:ON CHANGE mmci002
            {<point name="input.g.page1.mmci002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci003
            #add-point:BEFORE FIELD mmci003
            {<point name="input.b.page1.mmci003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci003
            
            #add-point:AFTER FIELD mmci003
            {<point name="input.a.page1.mmci003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmci003
            #add-point:ON CHANGE mmci003
            {<point name="input.g.page1.mmci003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci_d[l_ac].mmci004,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmci004
            END IF
 
 
            #add-point:AFTER FIELD mmci004
            {<point name="input.a.page1.mmci004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci004
            #add-point:BEFORE FIELD mmci004
            {<point name="input.b.page1.mmci004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmci004
            #add-point:ON CHANGE mmci004
            {<point name="input.g.page1.mmci004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmci005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci_d[l_ac].mmci005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmci005
            END IF
 
 
            #add-point:AFTER FIELD mmci005
            {<point name="input.a.page1.mmci005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmci005
            #add-point:BEFORE FIELD mmci005
            {<point name="input.b.page1.mmci005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmci005
            #add-point:ON CHANGE mmci005
            {<point name="input.g.page1.mmci005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmciacti
            #add-point:BEFORE FIELD mmciacti
            {<point name="input.b.page1.mmciacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmciacti
            
            #add-point:AFTER FIELD mmciacti
            {<point name="input.a.page1.mmciacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmciacti
            #add-point:ON CHANGE mmciacti
            {<point name="input.g.page1.mmciacti" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmcisite
         ON ACTION controlp INFIELD mmcisite
            #add-point:ON ACTION controlp INFIELD mmcisite
            {<point name="input.c.page1.mmcisite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmciunit
         ON ACTION controlp INFIELD mmciunit
            #add-point:ON ACTION controlp INFIELD mmciunit
            {<point name="input.c.page1.mmciunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmci001
         ON ACTION controlp INFIELD mmci001
            #add-point:ON ACTION controlp INFIELD mmci001
            {<point name="input.c.page1.mmci001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmci002
         ON ACTION controlp INFIELD mmci002
            #add-point:ON ACTION controlp INFIELD mmci002
            {<point name="input.c.page1.mmci002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmci003
         ON ACTION controlp INFIELD mmci003
            #add-point:ON ACTION controlp INFIELD mmci003
            {<point name="input.c.page1.mmci003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmci004
         ON ACTION controlp INFIELD mmci004
            #add-point:ON ACTION controlp INFIELD mmci004
            {<point name="input.c.page1.mmci004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmci005
         ON ACTION controlp INFIELD mmci005
            #add-point:ON ACTION controlp INFIELD mmci005
            {<point name="input.c.page1.mmci005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmciacti
         ON ACTION controlp INFIELD mmciacti
            #add-point:ON ACTION controlp INFIELD mmciacti
            {<point name="input.c.page1.mmciacti" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmci_d[l_ac].* = g_mmci_d_t.*
               CLOSE ammt355_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmci_d[l_ac].mmci003,-263,1)
               LET g_mmci_d[l_ac].* = g_mmci_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmci_t SET (mmcidocno,mmcisite,mmciunit,mmci001,mmci002,mmci003,mmci004,mmci005, 
                   mmciacti) = (g_mmbo_m.mmbodocno,g_mmci_d[l_ac].mmcisite,g_mmci_d[l_ac].mmciunit,g_mmci_d[l_ac].mmci001, 
                   g_mmci_d[l_ac].mmci002,g_mmci_d[l_ac].mmci003,g_mmci_d[l_ac].mmci004,g_mmci_d[l_ac].mmci005, 
                   g_mmci_d[l_ac].mmciacti)
                WHERE mmcient = g_enterprise AND mmcidocno = g_mmbo_m.mmbodocno 
 
                  AND mmci003 = g_mmci_d_t.mmci003 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmci_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmci_d[l_ac].* = g_mmci_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmci_t",SQLCA.sqlcode,1)
                     LET g_mmci_d[l_ac].* = g_mmci_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmci_d[g_detail_idx].mmci003
               LET gs_keys_bak[2] = g_mmci_d_t.mmci003
               CALL ammt355_update_b('mmci_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt355_unlock_b("mmci_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmci_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmci_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmci2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmci2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt355_b_fill()
            LET g_rec_b = g_mmci2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmci2_d[l_ac].* TO NULL 
                  LET g_mmci2_d[l_ac].mmcj007 = "1"
      LET g_mmci2_d[l_ac].mmcj008 = "1"
      LET g_mmci2_d[l_ac].mmcj009 = "0"
      LET g_mmci2_d[l_ac].mmcj010 = "0"
      LET g_mmci2_d[l_ac].mmcj012 = "1"
      LET g_mmci2_d[l_ac].mmcjacti = "Y"
 
            LET g_mmci2_d_t.* = g_mmci2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt355_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt355_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmci2_d[li_reproduce_target].* = g_mmci2_d[li_reproduce].*
 
               LET g_mmci2_d[li_reproduce_target].mmcj003 = NULL
               LET g_mmci2_d[li_reproduce_target].mmcj004 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
               CLOSE ammt355_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmci2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmci2_d[l_ac].mmcj003 IS NOT NULL
               AND g_mmci2_d[l_ac].mmcj004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmci2_d_t.* = g_mmci2_d[l_ac].*  #BACKUP
               CALL ammt355_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammt355_set_no_entry_b(l_cmd)
               IF NOT ammt355_lock_b("mmcj_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt355_bcl2 INTO g_mmci2_d[l_ac].mmcjsite,g_mmci2_d[l_ac].mmcjunit,g_mmci2_d[l_ac].mmcj001, 
                      g_mmci2_d[l_ac].mmcj002,g_mmci2_d[l_ac].mmcj003,g_mmci2_d[l_ac].mmcj004,g_mmci2_d[l_ac].mmcj005, 
                      g_mmci2_d[l_ac].mmcj006,g_mmci2_d[l_ac].mmcj007,g_mmci2_d[l_ac].mmcj008,g_mmci2_d[l_ac].mmcj009, 
                      g_mmci2_d[l_ac].mmcj010,g_mmci2_d[l_ac].mmcj011,g_mmci2_d[l_ac].mmcj012,g_mmci2_d[l_ac].mmcjacti 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt355_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmci2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmci2_d.deleteElement(l_ac)
               NEXT FIELD mmcj003
            END IF
         
            IF g_mmci2_d[l_ac].mmcj003 IS NOT NULL
               AND g_mmci2_d_t.mmcj004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmcj_t
                WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno AND
                      mmcj003 = g_mmci2_d_t.mmcj003
                  AND mmcj004 = g_mmci2_d_t.mmcj004
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmci_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt355_bcl
               LET l_count = g_mmci_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci2_d[g_detail_idx].mmcj003
               LET gs_keys[3] = g_mmci2_d[g_detail_idx].mmcj004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL ammt355_delete_b('mmcj_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcj_t 
             WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno
               AND mmcj003 = g_mmci2_d[l_ac].mmcj003
               AND mmcj004 = g_mmci2_d[l_ac].mmcj004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci2_d[g_detail_idx].mmcj003
               LET gs_keys[3] = g_mmci2_d[g_detail_idx].mmcj004
               CALL ammt355_insert_b('mmcj_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmci_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt355_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmci2_d[l_ac].* = g_mmci2_d_t.*
               CLOSE ammt355_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmci2_d[l_ac].* = g_mmci2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE mmcj_t SET (mmcjdocno,mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj003,mmcj004,mmcj005, 
                   mmcj006,mmcj007,mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti) = (g_mmbo_m.mmbodocno, 
                   g_mmci2_d[l_ac].mmcjsite,g_mmci2_d[l_ac].mmcjunit,g_mmci2_d[l_ac].mmcj001,g_mmci2_d[l_ac].mmcj002, 
                   g_mmci2_d[l_ac].mmcj003,g_mmci2_d[l_ac].mmcj004,g_mmci2_d[l_ac].mmcj005,g_mmci2_d[l_ac].mmcj006, 
                   g_mmci2_d[l_ac].mmcj007,g_mmci2_d[l_ac].mmcj008,g_mmci2_d[l_ac].mmcj009,g_mmci2_d[l_ac].mmcj010, 
                   g_mmci2_d[l_ac].mmcj011,g_mmci2_d[l_ac].mmcj012,g_mmci2_d[l_ac].mmcjacti) #自訂欄位頁簽 

                WHERE mmcjent = g_enterprise AND mmcjdocno = g_mmbo_m.mmbodocno
                  AND mmcj003 = g_mmci2_d_t.mmcj003 #項次 
                  AND mmcj004 = g_mmci2_d_t.mmcj004
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcj_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmci2_d[l_ac].* = g_mmci2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcj_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmci2_d[l_ac].* = g_mmci2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmci2_d[g_detail_idx].mmcj003
               LET gs_keys_bak[2] = g_mmci2_d_t.mmcj003
               LET gs_keys[3] = g_mmci2_d[g_detail_idx].mmcj004
               LET gs_keys_bak[3] = g_mmci2_d_t.mmcj004
               CALL ammt355_update_b('mmcj_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci2_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcjsite
            #add-point:BEFORE FIELD mmcjsite
            {<point name="input.b.page2.mmcjsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjsite
            
            #add-point:AFTER FIELD mmcjsite
            {<point name="input.a.page2.mmcjsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcjsite
            #add-point:ON CHANGE mmcjsite
            {<point name="input.g.page2.mmcjsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcjunit
            #add-point:BEFORE FIELD mmcjunit
            {<point name="input.b.page2.mmcjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjunit
            
            #add-point:AFTER FIELD mmcjunit
            {<point name="input.a.page2.mmcjunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcjunit
            #add-point:ON CHANGE mmcjunit
            {<point name="input.g.page2.mmcjunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj001
            #add-point:BEFORE FIELD mmcj001
            {<point name="input.b.page2.mmcj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj001
            
            #add-point:AFTER FIELD mmcj001
            {<point name="input.a.page2.mmcj001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj001
            #add-point:ON CHANGE mmcj001
            {<point name="input.g.page2.mmcj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj002
            #add-point:BEFORE FIELD mmcj002
            {<point name="input.b.page2.mmcj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj002
            
            #add-point:AFTER FIELD mmcj002
            {<point name="input.a.page2.mmcj002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj002
            #add-point:ON CHANGE mmcj002
            {<point name="input.g.page2.mmcj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj003
            #add-point:BEFORE FIELD mmcj003
            {<point name="input.b.page2.mmcj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj003
            
            #add-point:AFTER FIELD mmcj003
            {<point name="input.a.page2.mmcj003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj003
            #add-point:ON CHANGE mmcj003
            {<point name="input.g.page2.mmcj003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj004
            #add-point:BEFORE FIELD mmcj004
            {<point name="input.b.page2.mmcj004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj004
            
            #add-point:AFTER FIELD mmcj004
            {<point name="input.a.page2.mmcj004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj004
            #add-point:ON CHANGE mmcj004
            {<point name="input.g.page2.mmcj004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj005
            #add-point:BEFORE FIELD mmcj005
            {<point name="input.b.page2.mmcj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj005
            
            #add-point:AFTER FIELD mmcj005
            {<point name="input.a.page2.mmcj005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj005
            #add-point:ON CHANGE mmcj005
            {<point name="input.g.page2.mmcj005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj006
            #add-point:BEFORE FIELD mmcj006
            {<point name="input.b.page2.mmcj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj006
            
            #add-point:AFTER FIELD mmcj006
            {<point name="input.a.page2.mmcj006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj006
            #add-point:ON CHANGE mmcj006
            {<point name="input.g.page2.mmcj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci2_d[l_ac].mmcj007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmcj007
            END IF
 
 
            #add-point:AFTER FIELD mmcj007
            {<point name="input.a.page2.mmcj007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj007
            #add-point:BEFORE FIELD mmcj007
            {<point name="input.b.page2.mmcj007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj007
            #add-point:ON CHANGE mmcj007
            {<point name="input.g.page2.mmcj007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj008
            #add-point:BEFORE FIELD mmcj008
            {<point name="input.b.page2.mmcj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj008
            
            #add-point:AFTER FIELD mmcj008
            {<point name="input.a.page2.mmcj008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj008
            #add-point:ON CHANGE mmcj008
            {<point name="input.g.page2.mmcj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci2_d[l_ac].mmcj009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmcj009
            END IF
 
 
            #add-point:AFTER FIELD mmcj009
            {<point name="input.a.page2.mmcj009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj009
            #add-point:BEFORE FIELD mmcj009
            {<point name="input.b.page2.mmcj009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj009
            #add-point:ON CHANGE mmcj009
            {<point name="input.g.page2.mmcj009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci2_d[l_ac].mmcj010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD mmcj010
            END IF
 
 
            #add-point:AFTER FIELD mmcj010
            {<point name="input.a.page2.mmcj010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj010
            #add-point:BEFORE FIELD mmcj010
            {<point name="input.b.page2.mmcj010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj010
            #add-point:ON CHANGE mmcj010
            {<point name="input.g.page2.mmcj010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmci2_d[l_ac].mmcj011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmcj011
            END IF
 
 
            #add-point:AFTER FIELD mmcj011
            {<point name="input.a.page2.mmcj011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj011
            #add-point:BEFORE FIELD mmcj011
            {<point name="input.b.page2.mmcj011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj011
            #add-point:ON CHANGE mmcj011
            {<point name="input.g.page2.mmcj011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcj012
            #add-point:BEFORE FIELD mmcj012
            {<point name="input.b.page2.mmcj012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcj012
            
            #add-point:AFTER FIELD mmcj012
            {<point name="input.a.page2.mmcj012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcj012
            #add-point:ON CHANGE mmcj012
            {<point name="input.g.page2.mmcj012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcjacti
            #add-point:BEFORE FIELD mmcjacti
            {<point name="input.b.page2.mmcjacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcjacti
            
            #add-point:AFTER FIELD mmcjacti
            {<point name="input.a.page2.mmcjacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcjacti
            #add-point:ON CHANGE mmcjacti
            {<point name="input.g.page2.mmcjacti" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.mmcjsite
         ON ACTION controlp INFIELD mmcjsite
            #add-point:ON ACTION controlp INFIELD mmcjsite
            {<point name="input.c.page2.mmcjsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcjunit
         ON ACTION controlp INFIELD mmcjunit
            #add-point:ON ACTION controlp INFIELD mmcjunit
            {<point name="input.c.page2.mmcjunit" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj001
         ON ACTION controlp INFIELD mmcj001
            #add-point:ON ACTION controlp INFIELD mmcj001
            {<point name="input.c.page2.mmcj001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj002
         ON ACTION controlp INFIELD mmcj002
            #add-point:ON ACTION controlp INFIELD mmcj002
            {<point name="input.c.page2.mmcj002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj003
         ON ACTION controlp INFIELD mmcj003
            #add-point:ON ACTION controlp INFIELD mmcj003
            {<point name="input.c.page2.mmcj003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj004
         ON ACTION controlp INFIELD mmcj004
            #add-point:ON ACTION controlp INFIELD mmcj004
            {<point name="input.c.page2.mmcj004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj005
         ON ACTION controlp INFIELD mmcj005
            #add-point:ON ACTION controlp INFIELD mmcj005
            {<point name="input.c.page2.mmcj005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj006
         ON ACTION controlp INFIELD mmcj006
            #add-point:ON ACTION controlp INFIELD mmcj006
            {<point name="input.c.page2.mmcj006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj007
         ON ACTION controlp INFIELD mmcj007
            #add-point:ON ACTION controlp INFIELD mmcj007
            {<point name="input.c.page2.mmcj007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj008
         ON ACTION controlp INFIELD mmcj008
            #add-point:ON ACTION controlp INFIELD mmcj008
            {<point name="input.c.page2.mmcj008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj009
         ON ACTION controlp INFIELD mmcj009
            #add-point:ON ACTION controlp INFIELD mmcj009
            {<point name="input.c.page2.mmcj009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj010
         ON ACTION controlp INFIELD mmcj010
            #add-point:ON ACTION controlp INFIELD mmcj010
            {<point name="input.c.page2.mmcj010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj011
         ON ACTION controlp INFIELD mmcj011
            #add-point:ON ACTION controlp INFIELD mmcj011
            {<point name="input.c.page2.mmcj011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcj012
         ON ACTION controlp INFIELD mmcj012
            #add-point:ON ACTION controlp INFIELD mmcj012
            {<point name="input.c.page2.mmcj012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmcjacti
         ON ACTION controlp INFIELD mmcjacti
            #add-point:ON ACTION controlp INFIELD mmcjacti
            {<point name="input.c.page2.mmcjacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmci2_d[l_ac].* = g_mmci2_d_t.*
               END IF
               CLOSE ammt355_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt355_unlock_b("mmcj_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmci2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmci2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmci3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmci3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt355_b_fill()
            LET g_rec_b = g_mmci3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmci3_d[l_ac].* TO NULL 
                  LET g_mmci3_d[l_ac].mmbs005 = "N"
      LET g_mmci3_d[l_ac].mmbsacti = "Y"
 
            LET g_mmci3_d_t.* = g_mmci3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt355_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt355_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmci3_d[li_reproduce_target].* = g_mmci3_d[li_reproduce].*
 
               LET g_mmci3_d[li_reproduce_target].mmbs004 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
               CLOSE ammt355_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmci3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmci3_d[l_ac].mmbs004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmci3_d_t.* = g_mmci3_d[l_ac].*  #BACKUP
               CALL ammt355_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammt355_set_no_entry_b(l_cmd)
               IF NOT ammt355_lock_b("mmbs_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt355_bcl3 INTO g_mmci3_d[l_ac].mmbssite,g_mmci3_d[l_ac].mmbsunit,g_mmci3_d[l_ac].mmbs001, 
                      g_mmci3_d[l_ac].mmbs002,g_mmci3_d[l_ac].mmbs003,g_mmci3_d[l_ac].mmbs004,g_mmci3_d[l_ac].mmbs005, 
                      g_mmci3_d[l_ac].mmbsacti
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt355_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmci3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmci3_d.deleteElement(l_ac)
               NEXT FIELD mmbs004
            END IF
         
            IF g_mmci3_d[l_ac].mmbs004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmbs_t
                WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno AND
                      mmbs004 = g_mmci3_d_t.mmbs004
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmci_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt355_bcl
               LET l_count = g_mmci_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci3_d[g_detail_idx].mmbs004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL ammt355_delete_b('mmbs_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmbs_t 
             WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
               AND mmbs004 = g_mmci3_d[l_ac].mmbs004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci3_d[g_detail_idx].mmbs004
               CALL ammt355_insert_b('mmbs_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmci_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmbs_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt355_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmci3_d[l_ac].* = g_mmci3_d_t.*
               CLOSE ammt355_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmci3_d[l_ac].* = g_mmci3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE mmbs_t SET (mmbsdocno,mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs004,mmbs005, 
                   mmbsacti) = (g_mmbo_m.mmbodocno,g_mmci3_d[l_ac].mmbssite,g_mmci3_d[l_ac].mmbsunit, 
                   g_mmci3_d[l_ac].mmbs001,g_mmci3_d[l_ac].mmbs002,g_mmci3_d[l_ac].mmbs003,g_mmci3_d[l_ac].mmbs004, 
                   g_mmci3_d[l_ac].mmbs005,g_mmci3_d[l_ac].mmbsacti) #自訂欄位頁簽
                WHERE mmbsent = g_enterprise AND mmbsdocno = g_mmbo_m.mmbodocno
                  AND mmbs004 = g_mmci3_d_t.mmbs004 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmbs_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmci3_d[l_ac].* = g_mmci3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmbs_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmci3_d[l_ac].* = g_mmci3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmci3_d[g_detail_idx].mmbs004
               LET gs_keys_bak[2] = g_mmci3_d_t.mmbs004
               CALL ammt355_update_b('mmbs_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci3_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbssite
            #add-point:BEFORE FIELD mmbssite
            {<point name="input.b.page3.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbssite
            
            #add-point:AFTER FIELD mmbssite
            {<point name="input.a.page3.mmbssite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbssite
            #add-point:ON CHANGE mmbssite
            {<point name="input.g.page3.mmbssite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsunit
            #add-point:BEFORE FIELD mmbsunit
            {<point name="input.b.page3.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsunit
            
            #add-point:AFTER FIELD mmbsunit
            {<point name="input.a.page3.mmbsunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbsunit
            #add-point:ON CHANGE mmbsunit
            {<point name="input.g.page3.mmbsunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs001
            #add-point:BEFORE FIELD mmbs001
            {<point name="input.b.page3.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs001
            
            #add-point:AFTER FIELD mmbs001
            {<point name="input.a.page3.mmbs001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs001
            #add-point:ON CHANGE mmbs001
            {<point name="input.g.page3.mmbs001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs002
            #add-point:BEFORE FIELD mmbs002
            {<point name="input.b.page3.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs002
            
            #add-point:AFTER FIELD mmbs002
            {<point name="input.a.page3.mmbs002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs002
            #add-point:ON CHANGE mmbs002
            {<point name="input.g.page3.mmbs002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs003
            #add-point:BEFORE FIELD mmbs003
            {<point name="input.b.page3.mmbs003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs003
            
            #add-point:AFTER FIELD mmbs003
            {<point name="input.a.page3.mmbs003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs003
            #add-point:ON CHANGE mmbs003
            {<point name="input.g.page3.mmbs003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs004
            
            #add-point:AFTER FIELD mmbs004
            {<point name="input.a.page3.mmbs004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs004
            #add-point:BEFORE FIELD mmbs004
            {<point name="input.b.page3.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs004
            #add-point:ON CHANGE mmbs004
            {<point name="input.g.page3.mmbs004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbs005
            #add-point:BEFORE FIELD mmbs005
            {<point name="input.b.page3.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbs005
            
            #add-point:AFTER FIELD mmbs005
            {<point name="input.a.page3.mmbs005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbs005
            #add-point:ON CHANGE mmbs005
            {<point name="input.g.page3.mmbs005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbsacti
            #add-point:BEFORE FIELD mmbsacti
            {<point name="input.b.page3.mmbsacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbsacti
            
            #add-point:AFTER FIELD mmbsacti
            {<point name="input.a.page3.mmbsacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbsacti
            #add-point:ON CHANGE mmbsacti
            {<point name="input.g.page3.mmbsacti" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.mmbssite
         ON ACTION controlp INFIELD mmbssite
            #add-point:ON ACTION controlp INFIELD mmbssite
            {<point name="input.c.page3.mmbssite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbsunit
         ON ACTION controlp INFIELD mmbsunit
            #add-point:ON ACTION controlp INFIELD mmbsunit
            {<point name="input.c.page3.mmbsunit" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbs001
         ON ACTION controlp INFIELD mmbs001
            #add-point:ON ACTION controlp INFIELD mmbs001
            {<point name="input.c.page3.mmbs001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbs002
         ON ACTION controlp INFIELD mmbs002
            #add-point:ON ACTION controlp INFIELD mmbs002
            {<point name="input.c.page3.mmbs002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbs003
         ON ACTION controlp INFIELD mmbs003
            #add-point:ON ACTION controlp INFIELD mmbs003
            {<point name="input.c.page3.mmbs003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbs004
         ON ACTION controlp INFIELD mmbs004
            #add-point:ON ACTION controlp INFIELD mmbs004
            {<point name="input.c.page3.mmbs004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbs005
         ON ACTION controlp INFIELD mmbs005
            #add-point:ON ACTION controlp INFIELD mmbs005
            {<point name="input.c.page3.mmbs005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmbsacti
         ON ACTION controlp INFIELD mmbsacti
            #add-point:ON ACTION controlp INFIELD mmbsacti
            {<point name="input.c.page3.mmbsacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmci3_d[l_ac].* = g_mmci3_d_t.*
               END IF
               CLOSE ammt355_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt355_unlock_b("mmbs_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmci3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmci3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmci4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmci4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt355_b_fill()
            LET g_rec_b = g_mmci4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmci4_d[l_ac].* TO NULL 
                  LET g_mmci4_d[l_ac].mmck003 = "1"
      LET g_mmci4_d[l_ac].mmckacti = "Y"
 
            LET g_mmci4_d_t.* = g_mmci4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt355_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt355_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmci4_d[li_reproduce_target].* = g_mmci4_d[li_reproduce].*
 
               LET g_mmci4_d[li_reproduce_target].mmck003 = NULL
            END IF
            #公用欄位給值(單身4)
            
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
               CLOSE ammt355_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmci4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmci4_d[l_ac].mmck003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmci4_d_t.* = g_mmci4_d[l_ac].*  #BACKUP
               CALL ammt355_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL ammt355_set_no_entry_b(l_cmd)
               IF NOT ammt355_lock_b("mmck_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt355_bcl4 INTO g_mmci4_d[l_ac].mmcksite,g_mmci4_d[l_ac].mmckunit,g_mmci4_d[l_ac].mmck001, 
                      g_mmci4_d[l_ac].mmck002,g_mmci4_d[l_ac].mmck003,g_mmci4_d[l_ac].mmck004,g_mmci4_d[l_ac].mmck005, 
                      g_mmci4_d[l_ac].mmck006,g_mmci4_d[l_ac].mmck007,g_mmci4_d[l_ac].mmck008,g_mmci4_d[l_ac].mmck009, 
                      g_mmci4_d[l_ac].mmckacti
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt355_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmci4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmci4_d.deleteElement(l_ac)
               NEXT FIELD mmck003
            END IF
         
            IF g_mmci4_d[l_ac].mmck003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmck_t
                WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno AND
                      mmck003 = g_mmci4_d_t.mmck003
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmci_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt355_bcl
               LET l_count = g_mmci_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci4_d[g_detail_idx].mmck003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL ammt355_delete_b('mmck_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmck_t 
             WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno
               AND mmck003 = g_mmci4_d[l_ac].mmck003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys[2] = g_mmci4_d[g_detail_idx].mmck003
               CALL ammt355_insert_b('mmck_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmci_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmck_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt355_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmci4_d[l_ac].* = g_mmci4_d_t.*
               CLOSE ammt355_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmci4_d[l_ac].* = g_mmci4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               UPDATE mmck_t SET (mmckdocno,mmcksite,mmckunit,mmck001,mmck002,mmck003,mmck004,mmck005, 
                   mmck006,mmck007,mmck008,mmck009,mmckacti) = (g_mmbo_m.mmbodocno,g_mmci4_d[l_ac].mmcksite, 
                   g_mmci4_d[l_ac].mmckunit,g_mmci4_d[l_ac].mmck001,g_mmci4_d[l_ac].mmck002,g_mmci4_d[l_ac].mmck003, 
                   g_mmci4_d[l_ac].mmck004,g_mmci4_d[l_ac].mmck005,g_mmci4_d[l_ac].mmck006,g_mmci4_d[l_ac].mmck007, 
                   g_mmci4_d[l_ac].mmck008,g_mmci4_d[l_ac].mmck009,g_mmci4_d[l_ac].mmckacti) #自訂欄位頁簽 

                WHERE mmckent = g_enterprise AND mmckdocno = g_mmbo_m.mmbodocno
                  AND mmck003 = g_mmci4_d_t.mmck003 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmck_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmci4_d[l_ac].* = g_mmci4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmck_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmci4_d[l_ac].* = g_mmci4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbo_m.mmbodocno
               LET gs_keys_bak[1] = g_mmbodocno_t
               LET gs_keys[2] = g_mmci4_d[g_detail_idx].mmck003
               LET gs_keys_bak[2] = g_mmci4_d_t.mmck003
               CALL ammt355_update_b('mmck_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci4_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbo_m),util.JSON.stringify(g_mmci4_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcksite
            #add-point:BEFORE FIELD mmcksite
            {<point name="input.b.page4.mmcksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcksite
            
            #add-point:AFTER FIELD mmcksite
            {<point name="input.a.page4.mmcksite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcksite
            #add-point:ON CHANGE mmcksite
            {<point name="input.g.page4.mmcksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmckunit
            #add-point:BEFORE FIELD mmckunit
            {<point name="input.b.page4.mmckunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmckunit
            
            #add-point:AFTER FIELD mmckunit
            {<point name="input.a.page4.mmckunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmckunit
            #add-point:ON CHANGE mmckunit
            {<point name="input.g.page4.mmckunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck001
            #add-point:BEFORE FIELD mmck001
            {<point name="input.b.page4.mmck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck001
            
            #add-point:AFTER FIELD mmck001
            {<point name="input.a.page4.mmck001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck001
            #add-point:ON CHANGE mmck001
            {<point name="input.g.page4.mmck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck002
            #add-point:BEFORE FIELD mmck002
            {<point name="input.b.page4.mmck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck002
            
            #add-point:AFTER FIELD mmck002
            {<point name="input.a.page4.mmck002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck002
            #add-point:ON CHANGE mmck002
            {<point name="input.g.page4.mmck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck003
            #add-point:BEFORE FIELD mmck003
            {<point name="input.b.page4.mmck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck003
            
            #add-point:AFTER FIELD mmck003
            {<point name="input.a.page4.mmck003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck003
            #add-point:ON CHANGE mmck003
            {<point name="input.g.page4.mmck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck004
            #add-point:BEFORE FIELD mmck004
            {<point name="input.b.page4.mmck004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck004
            
            #add-point:AFTER FIELD mmck004
            {<point name="input.a.page4.mmck004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck004
            #add-point:ON CHANGE mmck004
            {<point name="input.g.page4.mmck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck005
            #add-point:BEFORE FIELD mmck005
            {<point name="input.b.page4.mmck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck005
            
            #add-point:AFTER FIELD mmck005
            {<point name="input.a.page4.mmck005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck005
            #add-point:ON CHANGE mmck005
            {<point name="input.g.page4.mmck005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck006
            #add-point:BEFORE FIELD mmck006
            {<point name="input.b.page4.mmck006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck006
            
            #add-point:AFTER FIELD mmck006
            {<point name="input.a.page4.mmck006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck006
            #add-point:ON CHANGE mmck006
            {<point name="input.g.page4.mmck006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck007
            #add-point:BEFORE FIELD mmck007
            {<point name="input.b.page4.mmck007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck007
            
            #add-point:AFTER FIELD mmck007
            {<point name="input.a.page4.mmck007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck007
            #add-point:ON CHANGE mmck007
            {<point name="input.g.page4.mmck007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck008
            #add-point:BEFORE FIELD mmck008
            {<point name="input.b.page4.mmck008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck008
            
            #add-point:AFTER FIELD mmck008
            {<point name="input.a.page4.mmck008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck008
            #add-point:ON CHANGE mmck008
            {<point name="input.g.page4.mmck008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmck009
            #add-point:BEFORE FIELD mmck009
            {<point name="input.b.page4.mmck009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmck009
            
            #add-point:AFTER FIELD mmck009
            {<point name="input.a.page4.mmck009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmck009
            #add-point:ON CHANGE mmck009
            {<point name="input.g.page4.mmck009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmckacti
            #add-point:BEFORE FIELD mmckacti
            {<point name="input.b.page4.mmckacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmckacti
            
            #add-point:AFTER FIELD mmckacti
            {<point name="input.a.page4.mmckacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmckacti
            #add-point:ON CHANGE mmckacti
            {<point name="input.g.page4.mmckacti" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.mmcksite
         ON ACTION controlp INFIELD mmcksite
            #add-point:ON ACTION controlp INFIELD mmcksite
            {<point name="input.c.page4.mmcksite" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmckunit
         ON ACTION controlp INFIELD mmckunit
            #add-point:ON ACTION controlp INFIELD mmckunit
            {<point name="input.c.page4.mmckunit" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck001
         ON ACTION controlp INFIELD mmck001
            #add-point:ON ACTION controlp INFIELD mmck001
            {<point name="input.c.page4.mmck001" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck002
         ON ACTION controlp INFIELD mmck002
            #add-point:ON ACTION controlp INFIELD mmck002
            {<point name="input.c.page4.mmck002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck003
         ON ACTION controlp INFIELD mmck003
            #add-point:ON ACTION controlp INFIELD mmck003
            {<point name="input.c.page4.mmck003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck004
         ON ACTION controlp INFIELD mmck004
            #add-point:ON ACTION controlp INFIELD mmck004
            {<point name="input.c.page4.mmck004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck005
         ON ACTION controlp INFIELD mmck005
            #add-point:ON ACTION controlp INFIELD mmck005
            {<point name="input.c.page4.mmck005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck006
         ON ACTION controlp INFIELD mmck006
            #add-point:ON ACTION controlp INFIELD mmck006
            {<point name="input.c.page4.mmck006" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck007
         ON ACTION controlp INFIELD mmck007
            #add-point:ON ACTION controlp INFIELD mmck007
            {<point name="input.c.page4.mmck007" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck008
         ON ACTION controlp INFIELD mmck008
            #add-point:ON ACTION controlp INFIELD mmck008
            {<point name="input.c.page4.mmck008" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmck009
         ON ACTION controlp INFIELD mmck009
            #add-point:ON ACTION controlp INFIELD mmck009
            {<point name="input.c.page4.mmck009" />}
            #END add-point
 
         #Ctrlp:input.c.page4.mmckacti
         ON ACTION controlp INFIELD mmckacti
            #add-point:ON ACTION controlp INFIELD mmckacti
            {<point name="input.c.page4.mmckacti" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmci4_d[l_ac].* = g_mmci4_d_t.*
               END IF
               CLOSE ammt355_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt355_unlock_b("mmck_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmci4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmci4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="ammt355.input.head" ver="6" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001, 
          g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo006, 
          g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015, 
          g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.mmboldocno = g_mmbo_m.mmbodocno
LET g_master_multi_table_t.mmbol002 = g_mmbo_m.mmbol002
LET g_master_multi_table_t.mmbol003 = g_mmbo_m.mmbol003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.mmboldocno = ''
LET g_master_multi_table_t.mmbol002 = ''
LET g_master_multi_table_t.mmbol003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbo000
            #add-point:BEFORE FIELD mmbo000
            {<point name="input.b.mmbo000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo000
            
            #add-point:AFTER FIELD mmbo000
            {<point name="input.a.mmbo000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo000
            #add-point:ON CHANGE mmbo000
            {<point name="input.g.mmbo000" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocno
            #add-point:BEFORE FIELD mmbodocno
            {<point name="input.b.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocno
            
            #add-point:AFTER FIELD mmbodocno
            {<point name="input.a.mmbodocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbodocno
            #add-point:ON CHANGE mmbodocno
            {<point name="input.g.mmbodocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbodocdt
            #add-point:BEFORE FIELD mmbodocdt
            {<point name="input.b.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbodocdt
            
            #add-point:AFTER FIELD mmbodocdt
            {<point name="input.a.mmbodocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbodocdt
            #add-point:ON CHANGE mmbodocdt
            {<point name="input.g.mmbodocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo004
            #add-point:BEFORE FIELD mmbo004
            {<point name="input.b.mmbo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo004
            
            #add-point:AFTER FIELD mmbo004
            {<point name="input.a.mmbo004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo004
            #add-point:ON CHANGE mmbo004
            {<point name="input.g.mmbo004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo001
            #add-point:BEFORE FIELD mmbo001
            {<point name="input.b.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo001
            
            #add-point:AFTER FIELD mmbo001
            {<point name="input.a.mmbo001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo001
            #add-point:ON CHANGE mmbo001
            {<point name="input.g.mmbo001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo002
            #add-point:BEFORE FIELD mmbo002
            {<point name="input.b.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo002
            
            #add-point:AFTER FIELD mmbo002
            {<point name="input.a.mmbo002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo002
            #add-point:ON CHANGE mmbo002
            {<point name="input.g.mmbo002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol002
            #add-point:BEFORE FIELD mmbol002
            {<point name="input.b.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol002
            
            #add-point:AFTER FIELD mmbol002
            {<point name="input.a.mmbol002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbol002
            #add-point:ON CHANGE mmbol002
            {<point name="input.g.mmbol002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbol003
            #add-point:BEFORE FIELD mmbol003
            {<point name="input.b.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbol003
            
            #add-point:AFTER FIELD mmbol003
            {<point name="input.a.mmbol003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbol003
            #add-point:ON CHANGE mmbol003
            {<point name="input.g.mmbol003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbosite
            #add-point:BEFORE FIELD mmbosite
            {<point name="input.b.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbosite
            
            #add-point:AFTER FIELD mmbosite
            {<point name="input.a.mmbosite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbosite
            #add-point:ON CHANGE mmbosite
            {<point name="input.g.mmbosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo005
            
            #add-point:AFTER FIELD mmbo005
            {<point name="input.a.mmbo005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo005
            #add-point:BEFORE FIELD mmbo005
            {<point name="input.b.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo005
            #add-point:ON CHANGE mmbo005
            {<point name="input.g.mmbo005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo006
            #add-point:BEFORE FIELD mmbo006
            {<point name="input.b.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo006
            
            #add-point:AFTER FIELD mmbo006
            {<point name="input.a.mmbo006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo006
            #add-point:ON CHANGE mmbo006
            {<point name="input.g.mmbo006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo009
            #add-point:BEFORE FIELD mmbo009
            {<point name="input.b.mmbo009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo009
            
            #add-point:AFTER FIELD mmbo009
            {<point name="input.a.mmbo009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo009
            #add-point:ON CHANGE mmbo009
            {<point name="input.g.mmbo009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo010
            #add-point:BEFORE FIELD mmbo010
            {<point name="input.b.mmbo010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo010
            
            #add-point:AFTER FIELD mmbo010
            {<point name="input.a.mmbo010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo010
            #add-point:ON CHANGE mmbo010
            {<point name="input.g.mmbo010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo011
            #add-point:BEFORE FIELD mmbo011
            {<point name="input.b.mmbo011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo011
            
            #add-point:AFTER FIELD mmbo011
            {<point name="input.a.mmbo011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo011
            #add-point:ON CHANGE mmbo011
            {<point name="input.g.mmbo011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_mmbo_m.mmbo012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD mmbo012
            END IF
 
 
            #add-point:AFTER FIELD mmbo012
            {<point name="input.a.mmbo012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo012
            #add-point:BEFORE FIELD mmbo012
            {<point name="input.b.mmbo012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo012
            #add-point:ON CHANGE mmbo012
            {<point name="input.g.mmbo012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo014
            #add-point:BEFORE FIELD mmbo014
            {<point name="input.b.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo014
            
            #add-point:AFTER FIELD mmbo014
            {<point name="input.a.mmbo014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo014
            #add-point:ON CHANGE mmbo014
            {<point name="input.g.mmbo014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo015
            #add-point:BEFORE FIELD mmbo015
            {<point name="input.b.mmbo015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo015
            
            #add-point:AFTER FIELD mmbo015
            {<point name="input.a.mmbo015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo015
            #add-point:ON CHANGE mmbo015
            {<point name="input.g.mmbo015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbounit
            
            #add-point:AFTER FIELD mmbounit
            {<point name="input.a.mmbounit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbounit
            #add-point:BEFORE FIELD mmbounit
            {<point name="input.b.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbounit
            #add-point:ON CHANGE mmbounit
            {<point name="input.g.mmbounit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbo013
            #add-point:BEFORE FIELD mmbo013
            {<point name="input.b.mmbo013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbo013
            
            #add-point:AFTER FIELD mmbo013
            {<point name="input.a.mmbo013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbo013
            #add-point:ON CHANGE mmbo013
            {<point name="input.g.mmbo013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmboacti
            #add-point:BEFORE FIELD mmboacti
            {<point name="input.b.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmboacti
            
            #add-point:AFTER FIELD mmboacti
            {<point name="input.a.mmboacti" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmboacti
            #add-point:ON CHANGE mmboacti
            {<point name="input.g.mmboacti" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbostus
            #add-point:BEFORE FIELD mmbostus
            {<point name="input.b.mmbostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbostus
            
            #add-point:AFTER FIELD mmbostus
            {<point name="input.a.mmbostus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbostus
            #add-point:ON CHANGE mmbostus
            {<point name="input.g.mmbostus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmbo000
         ON ACTION controlp INFIELD mmbo000
            #add-point:ON ACTION controlp INFIELD mmbo000
            {<point name="input.c.mmbo000" />}
            #END add-point
 
         #Ctrlp:input.c.mmbodocno
         ON ACTION controlp INFIELD mmbodocno
            #add-point:ON ACTION controlp INFIELD mmbodocno
            {<point name="input.c.mmbodocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmbodocdt
         ON ACTION controlp INFIELD mmbodocdt
            #add-point:ON ACTION controlp INFIELD mmbodocdt
            {<point name="input.c.mmbodocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo004
         ON ACTION controlp INFIELD mmbo004
            #add-point:ON ACTION controlp INFIELD mmbo004
            {<point name="input.c.mmbo004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo001
         ON ACTION controlp INFIELD mmbo001
            #add-point:ON ACTION controlp INFIELD mmbo001
            {<point name="input.c.mmbo001" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo002
         ON ACTION controlp INFIELD mmbo002
            #add-point:ON ACTION controlp INFIELD mmbo002
            {<point name="input.c.mmbo002" />}
            #END add-point
 
         #Ctrlp:input.c.mmbol002
         ON ACTION controlp INFIELD mmbol002
            #add-point:ON ACTION controlp INFIELD mmbol002
            {<point name="input.c.mmbol002" />}
            #END add-point
 
         #Ctrlp:input.c.mmbol003
         ON ACTION controlp INFIELD mmbol003
            #add-point:ON ACTION controlp INFIELD mmbol003
            {<point name="input.c.mmbol003" />}
            #END add-point
 
         #Ctrlp:input.c.mmbosite
         ON ACTION controlp INFIELD mmbosite
            #add-point:ON ACTION controlp INFIELD mmbosite
            {<point name="input.c.mmbosite" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo005
         ON ACTION controlp INFIELD mmbo005
            #add-point:ON ACTION controlp INFIELD mmbo005
            {<point name="input.c.mmbo005" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo006
         ON ACTION controlp INFIELD mmbo006
            #add-point:ON ACTION controlp INFIELD mmbo006
            {<point name="input.c.mmbo006" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo009
         ON ACTION controlp INFIELD mmbo009
            #add-point:ON ACTION controlp INFIELD mmbo009
            {<point name="input.c.mmbo009" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo010
         ON ACTION controlp INFIELD mmbo010
            #add-point:ON ACTION controlp INFIELD mmbo010
            {<point name="input.c.mmbo010" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo011
         ON ACTION controlp INFIELD mmbo011
            #add-point:ON ACTION controlp INFIELD mmbo011
            {<point name="input.c.mmbo011" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo012
         ON ACTION controlp INFIELD mmbo012
            #add-point:ON ACTION controlp INFIELD mmbo012
            {<point name="input.c.mmbo012" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo014
         ON ACTION controlp INFIELD mmbo014
            #add-point:ON ACTION controlp INFIELD mmbo014
            {<point name="input.c.mmbo014" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo015
         ON ACTION controlp INFIELD mmbo015
            #add-point:ON ACTION controlp INFIELD mmbo015
            {<point name="input.c.mmbo015" />}
            #END add-point
 
         #Ctrlp:input.c.mmbounit
         ON ACTION controlp INFIELD mmbounit
            #add-point:ON ACTION controlp INFIELD mmbounit
            {<point name="input.c.mmbounit" />}
            #END add-point
 
         #Ctrlp:input.c.mmbo013
         ON ACTION controlp INFIELD mmbo013
            #add-point:ON ACTION controlp INFIELD mmbo013
            {<point name="input.c.mmbo013" />}
            #END add-point
 
         #Ctrlp:input.c.mmboacti
         ON ACTION controlp INFIELD mmboacti
            #add-point:ON ACTION controlp INFIELD mmboacti
            {<point name="input.c.mmboacti" />}
            #END add-point
 
         #Ctrlp:input.c.mmbostus
         ON ACTION controlp INFIELD mmbostus
            #add-point:ON ACTION controlp INFIELD mmbostus
            {<point name="input.c.mmbostus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmbo_m.mmbodocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmbo_t (mmboent,mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbosite, 
                   mmbo005,mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,mmbo013, 
                   mmboacti,mmbostus,mmboownid,mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbocnfid,mmbocnfdt) 

               VALUES (g_enterprise,g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004, 
                   g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo006, 
                   g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
                   g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus, 
                   g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt, 
                   g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmbo_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbo_m.mmbodocno = g_master_multi_table_t.mmboldocno AND
         g_mmbo_m.mmbol002 = g_master_multi_table_t.mmbol002 AND 
         g_mmbo_m.mmbol003 = g_master_multi_table_t.mmbol003  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbo_m.mmbodocno
            LET l_field_keys[01] = 'mmboldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbol001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbo_m.mmbol002
            LET l_fields[01] = 'mmbol002'
            LET l_vars[02] = g_mmbo_m.mmbol003
            LET l_fields[02] = 'mmbol003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbolent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbol_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt355_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmbo_t SET (mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbosite,mmbo005, 
                   mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,mmbo013,mmboacti, 
                   mmbostus,mmboownid,mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbocnfid,mmbocnfdt) = (g_mmbo_m.mmbo000, 
                   g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002, 
                   g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010, 
                   g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014,g_mmbo_m.mmbo015,g_mmbo_m.mmbounit, 
                   g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboowndp, 
                   g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt) 

                WHERE mmboent = g_enterprise AND mmbodocno = g_mmbodocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmbo_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbo_m.mmbodocno = g_master_multi_table_t.mmboldocno AND
         g_mmbo_m.mmbol002 = g_master_multi_table_t.mmbol002 AND 
         g_mmbo_m.mmbol003 = g_master_multi_table_t.mmbol003  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbo_m.mmbodocno
            LET l_field_keys[01] = 'mmboldocno'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmboldocno
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbol001'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbo_m.mmbol002
            LET l_fields[01] = 'mmbol002'
            LET l_vars[02] = g_mmbo_m.mmbol003
            LET l_fields[02] = 'mmbol003'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbolent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbol_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_mmbo_m_t)
               LET g_log2 = util.JSON.stringify(g_mmbo_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="ammt355.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbodocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcisite
               WHEN "s_detail2"
                  NEXT FIELD mmcjsite
               WHEN "s_detail3"
                  NEXT FIELD mmbssite
               WHEN "s_detail4"
                  NEXT FIELD mmcksite
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="ammt355.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt355_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmci_d.clear()   
   CALL g_mmci2_d.clear()  
   CALL g_mmci3_d.clear()  
   CALL g_mmci4_d.clear()  
 
 
   INITIALIZE g_mmbo_m.* LIKE mmbo_t.*             #DEFAULT 設定
   
   LET g_mmbodocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmbo_m.mmboownid = g_user
      LET g_mmbo_m.mmboowndp = g_dept
      LET g_mmbo_m.mmbocrtid = g_user
      LET g_mmbo_m.mmbocrtdp = g_dept 
      LET g_mmbo_m.mmbocrtdt = cl_get_current()
      LET g_mmbo_m.mmbomodid = ""
      LET g_mmbo_m.mmbomoddt = ""
      LET g_mmbo_m.mmbostus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmbo_m.mmbo000 = "I"
      LET g_mmbo_m.mmbo004 = "6"
      LET g_mmbo_m.mmbo002 = "1"
      LET g_mmbo_m.mmbo009 = "1"
      LET g_mmbo_m.mmbo010 = "1"
      LET g_mmbo_m.mmbo011 = "1"
      LET g_mmbo_m.mmbo013 = "N"
      LET g_mmbo_m.mmboacti = "Y"
      LET g_mmbo_m.mmbostus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt355_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbo_m.* = g_mmbo_m_t.*
         CALL ammt355_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmci_d.clear()
      CALL g_mmci2_d.clear()
      CALL g_mmci3_d.clear()
      CALL g_mmci4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmboent = '" ||g_enterprise|| "' AND",
              " mmbodocno = '", g_mmbo_m.mmbodocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt355_cl
   
END FUNCTION
]]>
</section>
  <section id="ammt355.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt355_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmci_t
                  (mmcient,
                   mmcidocno,
                   mmci003
                   ,mmcisite,mmciunit,mmci001,mmci002,mmci004,mmci005,mmciacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmci_d[g_detail_idx].mmcisite,g_mmci_d[g_detail_idx].mmciunit,g_mmci_d[g_detail_idx].mmci001, 
                       g_mmci_d[g_detail_idx].mmci002,g_mmci_d[g_detail_idx].mmci004,g_mmci_d[g_detail_idx].mmci005, 
                       g_mmci_d[g_detail_idx].mmciacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmci_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcj_t
                  (mmcjent,
                   mmcjdocno,
                   mmcj003,mmcj004
                   ,mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj005,mmcj006,mmcj007,mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmci2_d[g_detail_idx].mmcjsite,g_mmci2_d[g_detail_idx].mmcjunit,g_mmci2_d[g_detail_idx].mmcj001, 
                       g_mmci2_d[g_detail_idx].mmcj002,g_mmci2_d[g_detail_idx].mmcj005,g_mmci2_d[g_detail_idx].mmcj006, 
                       g_mmci2_d[g_detail_idx].mmcj007,g_mmci2_d[g_detail_idx].mmcj008,g_mmci2_d[g_detail_idx].mmcj009, 
                       g_mmci2_d[g_detail_idx].mmcj010,g_mmci2_d[g_detail_idx].mmcj011,g_mmci2_d[g_detail_idx].mmcj012, 
                       g_mmci2_d[g_detail_idx].mmcjacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO mmbs_t
                  (mmbsent,
                   mmbsdocno,
                   mmbs004
                   ,mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs005,mmbsacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmci3_d[g_detail_idx].mmbssite,g_mmci3_d[g_detail_idx].mmbsunit,g_mmci3_d[g_detail_idx].mmbs001, 
                       g_mmci3_d[g_detail_idx].mmbs002,g_mmci3_d[g_detail_idx].mmbs003,g_mmci3_d[g_detail_idx].mmbs005, 
                       g_mmci3_d[g_detail_idx].mmbsacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbs_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO mmck_t
                  (mmckent,
                   mmckdocno,
                   mmck003
                   ,mmcksite,mmckunit,mmck001,mmck002,mmck004,mmck005,mmck006,mmck007,mmck008,mmck009,mmckacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmci4_d[g_detail_idx].mmcksite,g_mmci4_d[g_detail_idx].mmckunit,g_mmci4_d[g_detail_idx].mmck001, 
                       g_mmci4_d[g_detail_idx].mmck002,g_mmci4_d[g_detail_idx].mmck004,g_mmci4_d[g_detail_idx].mmck005, 
                       g_mmci4_d[g_detail_idx].mmck006,g_mmci4_d[g_detail_idx].mmck007,g_mmci4_d[g_detail_idx].mmck008, 
                       g_mmci4_d[g_detail_idx].mmck009,g_mmci4_d[g_detail_idx].mmckacti)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmck_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="ammt355.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt355_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt355_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmci_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt355_bcl USING g_enterprise,
                                       g_mmbo_m.mmbodocno,g_mmci_d[g_detail_idx].mmci003     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt355_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmcj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt355_bcl2 USING g_enterprise,
                                             g_mmbo_m.mmbodocno,g_mmci2_d[g_detail_idx].mmcj003,g_mmci2_d[g_detail_idx].mmcj004 

      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt355_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmbs_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt355_bcl3 USING g_enterprise,
                                             g_mmbo_m.mmbodocno,g_mmci3_d[g_detail_idx].mmbs004
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt355_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "mmck_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt355_bcl4 USING g_enterprise,
                                             g_mmbo_m.mmbodocno,g_mmci4_d[g_detail_idx].mmck003
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt355_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt355.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,'','',mmbosite,mmbo005, 
       '',mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,'',mmbo013,mmboacti,mmbostus, 
       mmboownid,'',mmboowndp,'',mmbocrtid,'',mmbocrtdp,'',mmbocrtdt,mmbomodid,'',mmbomoddt,mmbocnfid, 
       '',mmbocnfdt", 
                      " FROM mmbo_t",
                      " WHERE mmboent= ? AND mmbodocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt355_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmbo000,mmbodocno,mmbodocdt,mmbo004,mmbo001,mmbo002,mmbosite,mmbo005, 
       mmbo006,mmbo009,mmbo010,mmbo011,mmbo012,mmbo014,mmbo015,mmbounit,mmbo013,mmboacti,mmbostus,mmboownid, 
       mmboowndp,mmbocrtid,mmbocrtdp,mmbocrtdt,mmbomodid,mmbomoddt,mmbocnfid,mmbocnfdt,t1.mmanl003 , 
       t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM mmbo_t",
                              " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmbo005 AND t1.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=mmbounit AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=mmboownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=mmboowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=mmbocrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=mmbocrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=mmbomodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmbocnfid  ",
 
               " WHERE mmboent = '" ||g_enterprise|| "' AND mmbodocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt355_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt355 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt355_init()   
 
      #進入選單 Menu (="N")
      CALL ammt355_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt355
      
   END IF 
   
   CLOSE ammt355_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="ammt355.modify" ver="10" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt355_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
   CALL s_transaction_begin()
   
   OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt355_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbounit_desc, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp_desc, 
       g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbocnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbo_m.mmbodocno,SQLCA.sqlcode,0)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt355_show()
   WHILE TRUE
      LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbo_m.mmbomodid = g_user 
LET g_mmbo_m.mmbomoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammt355_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbo_m.* = g_mmbo_m_t.*
         CALL ammt355_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmbo_t SET (mmbomodid,mmbomoddt) = (g_mmbo_m.mmbomodid,g_mmbo_m.mmbomoddt)
       WHERE mmboent = g_enterprise AND mmbodocno = g_mmbodocno_t
 
                  
      #若單頭key欄位有變更
      IF g_mmbo_m.mmbodocno != g_mmbodocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmci_t SET mmcidocno = g_mmbo_m.mmbodocno
 
          WHERE mmcient = g_enterprise AND mmcidocno = g_mmbodocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmci_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmci_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmcj_t
            SET mmcjdocno = g_mmbo_m.mmbodocno
 
          WHERE mmcjent = g_enterprise AND
                mmcjdocno = g_mmbodocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcj_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE mmbs_t
            SET mmbsdocno = g_mmbo_m.mmbodocno
 
          WHERE mmbsent = g_enterprise AND
                mmbsdocno = g_mmbodocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmbs_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmbs_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE mmck_t
            SET mmckdocno = g_mmbo_m.mmbodocno
 
          WHERE mmckent = g_enterprise AND
                mmckdocno = g_mmbodocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmck_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmck_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmbo_m.mmbodocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammt355_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmbo_m.mmbodocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="ammt355.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="ammt355.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="ammt355.query" ver="5" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt355_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmci_d.clear()
   CALL g_mmci2_d.clear()
   CALL g_mmci3_d.clear()
   CALL g_mmci4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt355_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt355_browser_fill("")
      CALL ammt355_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt355_filter_show('mmbo000')
   CALL ammt355_filter_show('mmbodocno')
   CALL ammt355_filter_show('mmbodocdt')
   CALL ammt355_filter_show('mmbo004')
   CALL ammt355_filter_show('mmbo001')
   CALL ammt355_filter_show('mmbo002')
   CALL ammt355_filter_show('mmbo005')
   CALL ammt355_filter_show('mmbo006')
   CALL ammt355_filter_show('mmbo009')
   CALL ammt355_filter_show('mmbo010')
   CALL ammt355_filter_show('mmbo011')
   CALL ammt355_filter_show('mmbo012')
   CALL ammt355_filter_show('mmbo014')
   CALL ammt355_filter_show('mmbo015')
   CALL ammt355_filter_show('mmbounit')
   CALL ammt355_filter_show('mmbo013')
   CALL ammt355_filter_show('mmboacti')
   CALL ammt355_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammt355_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt355.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt355_reproduce()
   DEFINE l_newno     LIKE mmbo_t.mmbodocno 
   DEFINE l_oldno     LIKE mmbo_t.mmbodocno 
 
   DEFINE l_master    RECORD LIKE mmbo_t.*
   DEFINE l_detail    RECORD LIKE mmci_t.*
   DEFINE l_detail2    RECORD LIKE mmcj_t.*
 
   DEFINE l_detail3    RECORD LIKE mmbs_t.*
 
   DEFINE l_detail4    RECORD LIKE mmck_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmbodocno_t = g_mmbo_m.mmbodocno
 
    
   LET g_mmbo_m.mmbodocno = ""
 
    
   CALL ammt355_set_entry('a')
   CALL ammt355_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmbo_m.mmboownid = g_user
      LET g_mmbo_m.mmboowndp = g_dept
      LET g_mmbo_m.mmbocrtid = g_user
      LET g_mmbo_m.mmbocrtdp = g_dept 
      LET g_mmbo_m.mmbocrtdt = cl_get_current()
      LET g_mmbo_m.mmbomodid = ""
      LET g_mmbo_m.mmbomoddt = ""
      LET g_mmbo_m.mmbostus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt355_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmbodocno = '", g_mmbo_m.mmbodocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt355.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt355_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbodocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt355.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt355_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="ammt355.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt355_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbodocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt355.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt355_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="ammt355.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt355_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbo_m.mmbodocno
   LET g_pk_array[1].column = 'mmbodocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="ammt355.show" ver="6" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt355_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmbo_m_t.* = g_mmbo_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammt355_b_fill() #單身填充
      CALL ammt355_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmbo_m.mmboownid_desc = cl_get_username(g_mmbo_m.mmboownid)
      #LET g_mmbo_m.mmboowndp_desc = cl_get_deptname(g_mmbo_m.mmboowndp)
      #LET g_mmbo_m.mmbocrtid_desc = cl_get_username(g_mmbo_m.mmbocrtid)
      #LET g_mmbo_m.mmbocrtdp_desc = cl_get_deptname(g_mmbo_m.mmbocrtdp)
      #LET g_mmbo_m.mmbomodid_desc = cl_get_username(g_mmbo_m.mmbomodid)
      #LET g_mmbo_m.mmbocnfid_desc = cl_get_deptname(g_mmbo_m.mmbocnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt355_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001, 
       g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo005_desc, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit_desc,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti, 
       g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc, 
       g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt, 
       g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc, 
       g_mmbo_m.mmbocnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmbo_m.mmbostus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmci_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmci2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmci3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmci4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt355_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt355.signature" ver="2" status="" src="s">
<![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION ammt355_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE ammt355_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbounit_desc, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp_desc, 
       g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbocnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH ammt355_cl INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001, 
       g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo005_desc, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit_desc,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti, 
       g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc, 
       g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt, 
       g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc, 
       g_mmbo_m.mmbocnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbo_m.mmbodocno,SQLCA.sqlcode,0)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
 
 
   CALL ammt355_show()
   CALL ammt355_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_mmbo_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_mmci_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_mmci2_d))   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_mmci3_d))   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_mmci4_d))
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE ammt355_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL ammt355_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt355_ui_headershow()
   CALL ammt355_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION ammt355_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN ammt355_cl USING g_enterprise,g_mmbo_m.mmbodocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt355_cl:", STATUS, 1)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH ammt355_cl INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno,g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001, 
       g_mmbo_m.mmbo002,g_mmbo_m.mmbol002,g_mmbo_m.mmbol003,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005,g_mmbo_m.mmbo005_desc, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbounit_desc,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti, 
       g_mmbo_m.mmbostus,g_mmbo_m.mmboownid,g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp,g_mmbo_m.mmboowndp_desc, 
       g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdp_desc,g_mmbo_m.mmbocrtdt, 
       g_mmbo_m.mmbomodid,g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfid_desc, 
       g_mmbo_m.mmbocnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbo_m.mmbodocno,SQLCA.sqlcode,0)
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE ammt355_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE ammt355_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt355_ui_headershow()  
   CALL ammt355_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
</section>
  <section id="ammt355.state_change" ver="5" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt355_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbo_m.mmbodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbo_m.mmbostus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT ammt355_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT ammt355_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmbo_t SET mmbostus = lc_state 
    WHERE mmboent = g_enterprise AND mmbodocno = g_mmbo_m.mmbodocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_mmbo_m.mmbostus = lc_state
      DISPLAY BY NAME g_mmbo_m.mmbostus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="ammt355.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt355_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbodocno = g_mmbo_m.mmbodocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="ammt355.ui_detailshow" ver="2" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt355_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammt355.ui_dialog" ver="12" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt355_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt355_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt355_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmbodocno = g_mmbodocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt355_fetch('') # reload data
               LET l_ac = 1
               CALL ammt355_ui_detailshow() #Setting the current row 
      
               CALL ammt355_idx_chk()
               #NEXT FIELD mmci003
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmci_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt355_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt355_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmci2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt355_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammt355_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmci3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt355_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL ammt355_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmci4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt355_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL ammt355_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt355_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt355_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt355_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt355_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt355_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt355_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammt355_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt355_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt355_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt355_idx_chk()
            
         ON ACTION previous
            CALL ammt355_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt355_idx_chk()
            
         ON ACTION jump
            CALL ammt355_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt355_idx_chk()
            
         ON ACTION next
            CALL ammt355_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt355_idx_chk()
            
         ON ACTION last
            CALL ammt355_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt355_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmci003
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt355_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt355_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt355_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt355_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL ammt355_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt355_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION remark
            LET g_action_choice="remark"
            IF cl_auth_chk_act("remark") THEN
               
               #add-point:ON ACTION remark
               {<point name="menu.remark" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt355_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt355_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt355_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmbo_m.mmbodocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="ammt355.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt355_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmbo_m.mmbodocno = g_browser[g_current_idx].b_mmbodocno   
 
   EXECUTE ammt355_master_referesh USING g_mmbo_m.mmbodocno INTO g_mmbo_m.mmbo000,g_mmbo_m.mmbodocno, 
       g_mmbo_m.mmbodocdt,g_mmbo_m.mmbo004,g_mmbo_m.mmbo001,g_mmbo_m.mmbo002,g_mmbo_m.mmbosite,g_mmbo_m.mmbo005, 
       g_mmbo_m.mmbo006,g_mmbo_m.mmbo009,g_mmbo_m.mmbo010,g_mmbo_m.mmbo011,g_mmbo_m.mmbo012,g_mmbo_m.mmbo014, 
       g_mmbo_m.mmbo015,g_mmbo_m.mmbounit,g_mmbo_m.mmbo013,g_mmbo_m.mmboacti,g_mmbo_m.mmbostus,g_mmbo_m.mmboownid, 
       g_mmbo_m.mmboowndp,g_mmbo_m.mmbocrtid,g_mmbo_m.mmbocrtdp,g_mmbo_m.mmbocrtdt,g_mmbo_m.mmbomodid, 
       g_mmbo_m.mmbomoddt,g_mmbo_m.mmbocnfid,g_mmbo_m.mmbocnfdt,g_mmbo_m.mmbo005_desc,g_mmbo_m.mmbounit_desc, 
       g_mmbo_m.mmboownid_desc,g_mmbo_m.mmboowndp_desc,g_mmbo_m.mmbocrtid_desc,g_mmbo_m.mmbocrtdp_desc, 
       g_mmbo_m.mmbomodid_desc,g_mmbo_m.mmbocnfid_desc
   CALL ammt355_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt355.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt355_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt355_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt355_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt355_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt355_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt355.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt355_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmci_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmci_t 
         SET (mmcidocno,
              mmci003
              ,mmcisite,mmciunit,mmci001,mmci002,mmci004,mmci005,mmciacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmci_d[g_detail_idx].mmcisite,g_mmci_d[g_detail_idx].mmciunit,g_mmci_d[g_detail_idx].mmci001, 
                  g_mmci_d[g_detail_idx].mmci002,g_mmci_d[g_detail_idx].mmci004,g_mmci_d[g_detail_idx].mmci005, 
                  g_mmci_d[g_detail_idx].mmciacti) 
         WHERE mmcient = g_enterprise AND mmcidocno = ps_keys_bak[1] AND mmci003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmci_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmci_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmcj_t 
         SET (mmcjdocno,
              mmcj003,mmcj004
              ,mmcjsite,mmcjunit,mmcj001,mmcj002,mmcj005,mmcj006,mmcj007,mmcj008,mmcj009,mmcj010,mmcj011,mmcj012,mmcjacti) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmci2_d[g_detail_idx].mmcjsite,g_mmci2_d[g_detail_idx].mmcjunit,g_mmci2_d[g_detail_idx].mmcj001, 
                  g_mmci2_d[g_detail_idx].mmcj002,g_mmci2_d[g_detail_idx].mmcj005,g_mmci2_d[g_detail_idx].mmcj006, 
                  g_mmci2_d[g_detail_idx].mmcj007,g_mmci2_d[g_detail_idx].mmcj008,g_mmci2_d[g_detail_idx].mmcj009, 
                  g_mmci2_d[g_detail_idx].mmcj010,g_mmci2_d[g_detail_idx].mmcj011,g_mmci2_d[g_detail_idx].mmcj012, 
                  g_mmci2_d[g_detail_idx].mmcjacti) 
         WHERE mmcjent = g_enterprise AND mmcjdocno = ps_keys_bak[1] AND mmcj003 = ps_keys_bak[2] AND mmcj004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcj_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcj_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbs_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE mmbs_t 
         SET (mmbsdocno,
              mmbs004
              ,mmbssite,mmbsunit,mmbs001,mmbs002,mmbs003,mmbs005,mmbsacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmci3_d[g_detail_idx].mmbssite,g_mmci3_d[g_detail_idx].mmbsunit,g_mmci3_d[g_detail_idx].mmbs001, 
                  g_mmci3_d[g_detail_idx].mmbs002,g_mmci3_d[g_detail_idx].mmbs003,g_mmci3_d[g_detail_idx].mmbs005, 
                  g_mmci3_d[g_detail_idx].mmbsacti) 
         WHERE mmbsent = g_enterprise AND mmbsdocno = ps_keys_bak[1] AND mmbs004 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmbs_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmbs_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmck_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE mmck_t 
         SET (mmckdocno,
              mmck003
              ,mmcksite,mmckunit,mmck001,mmck002,mmck004,mmck005,mmck006,mmck007,mmck008,mmck009,mmckacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmci4_d[g_detail_idx].mmcksite,g_mmci4_d[g_detail_idx].mmckunit,g_mmci4_d[g_detail_idx].mmck001, 
                  g_mmci4_d[g_detail_idx].mmck002,g_mmci4_d[g_detail_idx].mmck004,g_mmci4_d[g_detail_idx].mmck005, 
                  g_mmci4_d[g_detail_idx].mmck006,g_mmci4_d[g_detail_idx].mmck007,g_mmci4_d[g_detail_idx].mmck008, 
                  g_mmci4_d[g_detail_idx].mmck009,g_mmci4_d[g_detail_idx].mmckacti) 
         WHERE mmckent = g_enterprise AND mmckdocno = ps_keys_bak[1] AND mmck003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmck_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmck_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>