<add_points prog="ammt423" std_prog="ammt423" erpver="1.0" module="AMM" ver="4" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.mmbm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2056'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbm001  #顯示到畫面上

            NEXT FIELD mmbm001                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbm002  #顯示到畫面上

            NEXT FIELD mmbm002                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            #CALL q_ooea001_4()                           #呼叫開窗
            LET g_qryparam.arg1 = 'F'
            CALL q_ooef001_3()
            DISPLAY g_qryparam.return1 TO mmbm004  #顯示到畫面上

            NEXT FIELD mmbm004                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmcnfid  #顯示到畫面上

            NEXT FIELD mmbmcnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            #CALL q_ooea001_1()                           #呼叫開窗
            LET g_qryparam.arg1 = 'H'
            CALL q_ooef001_3()
            DISPLAY g_qryparam.return1 TO mmbmcrtdp  #顯示到畫面上

            NEXT FIELD mmbmcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmcrtid  #顯示到畫面上

            NEXT FIELD mmbmcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmmodid  #顯示到畫面上

            NEXT FIELD mmbmmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            #CALL q_ooea001_1()                           #呼叫開窗
            LET g_qryparam.arg1 = 'H'
            CALL q_ooef001_3()
            DISPLAY g_qryparam.return1 TO mmbmowndp  #顯示到畫面上

            NEXT FIELD mmbmowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmownid  #顯示到畫面上

            NEXT FIELD mmbmownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.mmbmsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmsite  #顯示到畫面上

            NEXT FIELD mmbmsite                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmbn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mmbn001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbn001  #顯示到畫面上

            NEXT FIELD mmbn001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmbn002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " mmafstus = 'Y' "
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbn002  #顯示到畫面上
            LET g_qryparam.where = ''
            NEXT FIELD mmbn002                     #返回原欄位
            
]]>
</point>
  <point name="construct.c.page1.mmbn005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbn005  #顯示到畫面上

            NEXT FIELD mmbn005                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.mmbn006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            #CALL q_ooea001_4()                           #呼叫開窗
            LET g_qryparam.arg1 = 'F'
            CALL q_ooef001_3()
            DISPLAY g_qryparam.return1 TO mmbn006  #顯示到畫面上

            NEXT FIELD mmbn006                     #返回原欄位

]]>
</point>
  <point name="input.a.mmbm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbm001_desc('')
            IF NOT cl_null(g_mmbm_m.mmbm001) THEN            
               CALL ammt423_mmbm001_chk(g_mmbm_m.mmbm001)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbm_m.mmbm001,g_errno,1)
                  LET g_mmbm_m.mmbm001 = g_mmbm_m_t.mmbm001
                  CALL ammt423_mmbm001_desc(g_mmbm_m.mmbm001)
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt423_mmbm001_desc(g_mmbm_m.mmbm001)
]]>
</point>
  <point name="input.a.mmbm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbm002_desc('')
            IF NOT cl_null(g_mmbm_m.mmbm002) THEN 
               CALL ammt423_mmbm002_chk(g_mmbm_m.mmbm002)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbm_m.mmbm002,g_errno,1)
                  LET g_mmbm_m.mmbm002 = g_mmbm_m_t.mmbm002
                  CALL ammt423_mmbm002_desc(g_mmbm_m.mmbm002)
                  NEXT FIELD CURRENT
               END IF
            END IF    
            CALL ammt423_mmbm002_desc(g_mmbm_m.mmbm002)
]]>
</point>
  <point name="input.a.mmbm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbm004_desc('')
            IF NOT cl_null(g_mmbm_m.mmbm004) THEN            
               CALL ammt423_mmbm004_chk(g_mmbm_m.mmbm004)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbm_m.mmbm004,g_errno,1)
                  LET g_mmbm_m.mmbm004 = g_mmbm_m_t.mmbm004
                  CALL ammt423_mmbm004_desc(g_mmbm_m.mmbm004)
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt423_mmbm004_desc(g_mmbm_m.mmbm004)
]]>
</point>
  <point name="input.a.mmbmcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmcnfid_desc
]]>
</point>
  <point name="input.a.mmbmcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmcrtdp_desc
]]>
</point>
  <point name="input.a.mmbmcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmcrtid_desc
]]>
</point>
  <point name="input.a.mmbmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbm_m.mmbmdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmbm_m.mmbmdocno != g_mmbmdocno_t ))) THEN
                  IF NOT s_aooi200_chk_slip(g_site,'',g_mmbm_m.mmbmdocno,g_prog) THEN
                     LET g_mmbm_m.mmbmdocno = g_mmbmdocno_t
                     DISPLAY BY NAME g_mmbm_m.mmbmdocno
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.mmbmmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmmodid_desc
]]>
</point>
  <point name="input.a.mmbmowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmowndp_desc
]]>
</point>
  <point name="input.a.mmbmownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbm_m.mmbmownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbm_m.mmbmownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbm_m.mmbmownid_desc
]]>
</point>
  <point name="input.a.mmbmsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生



]]>
</point>
  <point name="input.a.page1.mmbn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbn001_desc('')
            IF NOT cl_null(g_mmbn_d[l_ac].mmbn001) AND (l_cmd = 'a' OR (l_cmd = 'u' AND g_mmbn_d[l_ac].mmbn001 != g_mmbn_d_t.mmbn001 )) THEN
               CALL ammt423_mmbn001_chk(g_mmbn_d[l_ac].mmbn001)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbn_d[l_ac].mmbn001,g_errno,1)
                  LET g_mmbn_d[l_ac].mmbn001 = g_mmbn_d_t.mmbn001
                  CALL ammt423_mmbn001_desc(g_mmbn_d[l_ac].mmbn001)
                  NEXT FIELD CURRENT
               END IF
            END IF   
            CALL ammt423_mmbn001_desc(g_mmbn_d[l_ac].mmbn001)
]]>
</point>
  <point name="input.a.page1.mmbn002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.mmbn005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbn005_desc('')
            IF NOT cl_null(g_mmbn_d[l_ac].mmbn005) THEN
               CALL ammt423_mmbm002_chk(g_mmbn_d[l_ac].mmbn005)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_mmbn_d[l_ac].mmbn005,g_errno,1)
                  LET g_mmbn_d[l_ac].mmbn005 = g_mmbn_d_t.mmbn005
                  CALL ammt423_mmbn005_desc(g_mmbn_d[l_ac].mmbn005)
                  NEXT FIELD CURRENT
               END IF
            END IF   
            CALL ammt423_mmbn005_desc(g_mmbn_d[l_ac].mmbn005)
]]>
</point>
  <point name="input.a.page1.mmbn006" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_mmbn006_desc('')
            IF NOT cl_null(g_mmbn_d[l_ac].mmbn006) THEN
               #CALL ammt423_mmbn006_chk(g_mmbn_d[l_ac].mmbn006)
               #IF NOT cl_null(g_errno) THEN
               #   CALL cl_err(g_mmbn_d[l_ac].mmbn006,g_errno,1)
               #   LET g_mmbn_d[l_ac].mmbn006 = g_mmbn_d_t.mmbn006
               #   CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006)
               #   NEXT FIELD CURRENT
               #END IF
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_mmbn_d[l_ac].mmbn006
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_mmbm_m.mmbm004
               IF NOT cl_chk_exist("v_ooed004") THEN
                  LET g_mmbn_d[l_ac].mmbn006 = g_mmbn_d_t.mmbn006
                  CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006)
                  NEXT FIELD CURRENT
               END IF
            END IF  
            CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006)   ]]>
</point>
  <point name="input.a.page1.mmbnseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生


]]>
</point>
  <point name="input.c.mmbm001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbm_m.mmbm001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2056" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmbm_m.mmbm001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbm_m.mmbm001 TO mmbm001              #顯示到畫面上
            CALL ammt423_mmbm001_desc(g_mmbm_m.mmbm001) 
            NEXT FIELD mmbm001                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbm_m.mmbm002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2055" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmbm_m.mmbm002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbm_m.mmbm002 TO mmbm002              #顯示到畫面上
            CALL ammt423_mmbm002_desc(g_mmbm_m.mmbm002)  
            NEXT FIELD mmbm002                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbm_m.mmbm004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = '2'

            CALL q_ooed004()                                #呼叫開窗

            LET g_mmbm_m.mmbm004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbm_m.mmbm004 TO mmbm004              #顯示到畫面上
            CALL ammt423_mmbm004_desc(g_mmbm_m.mmbm004)
            NEXT FIELD mmbm004                          #返回原欄位

]]>
</point>
  <point name="input.c.mmbmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbm_m.mmbmdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #參照表編號
            LET g_qryparam.arg2 = "ammt423" #對應程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmbm_m.mmbmdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbm_m.mmbmdocno TO mmbmdocno              #顯示到畫面上

            NEXT FIELD mmbmdocno                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmbn001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbn_d[l_ac].mmbn001             #給予default值

            #給予arg

            CALL q_mmaq001()                                #呼叫開窗

            LET g_mmbn_d[l_ac].mmbn001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbn_d[l_ac].mmbn001 TO mmbn001              #顯示到畫面上
            CALL ammt423_mmbn001_desc(g_mmbn_d[l_ac].mmbn001) 
            NEXT FIELD mmbn001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmbn005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbn_d[l_ac].mmbn005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2055" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmbn_d[l_ac].mmbn005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbn_d[l_ac].mmbn005 TO mmbn005              #顯示到畫面上
            CALL ammt423_mmbn005_desc(g_mmbn_d[l_ac].mmbn005) 
            NEXT FIELD mmbn005                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.mmbn006" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_mmbn_d[l_ac].mmbn006             #給予default值

            #給予arg
           #LET g_qryparam.arg1 = 'F'
           #CALL q_ooef001_3()
            #CALL q_ooea001_4()                                #呼叫開窗
            LET g_qryparam.arg1 = g_mmbm_m.mmbm004
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()

            LET g_mmbn_d[l_ac].mmbn006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbn_d[l_ac].mmbn006 TO mmbn006              #顯示到畫面上
            CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006) 
            NEXT FIELD mmbn006                          #返回原欄位

]]>
</point>
  <point name="function.ammt423_mmbn001_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#會員卡號帶出卡種編號、會員編號、會員名稱、有效期至
PRIVATE FUNCTION ammt423_mmbn001_desc(p_mmbn001)
DEFINE p_mmbn001   LIKE mmbn_t.mmbn001
DEFINE l_mmaq005   LIKE mmaq_t.mmaq005
   IF cl_null(p_mmbn001) THEN
      LET g_mmbn_d[l_ac].mmbn003 = ''
      LET g_mmbn_d[l_ac].mmbn001_desc = ''
      LET g_mmbn_d[l_ac].mmbn002 = ''
      CALL ammt423_mmbn001_desc_desc('')
      CALL ammt423_mmbn002_desc('')
   ELSE
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_mmbn001
      CALL ap_ref_array2(g_ref_fields,"SELECT mmaq002,mmaq003 FROM mmaq_t WHERE mmaqent='"||g_enterprise||"' AND mmaq001=? ","") RETURNING g_rtn_fields

      LET g_mmbn_d[l_ac].mmbn001_desc = '', g_rtn_fields[1] , ''
      LET g_mmbn_d[l_ac].mmbn002 = '', g_rtn_fields[2] , ''
      SELECT mmaq005 INTO l_mmaq005 FROM mmaq_t
       WHERE mmaqent = g_enterprise AND mmaq001 = p_mmbn001
             
      LET g_mmbn_d[l_ac].mmbn003 = l_mmaq005
      CALL ammt423_mmbn001_desc_desc(g_mmbn_d[l_ac].mmbn001_desc)
      CALL ammt423_mmbn002_desc(g_mmbn_d[l_ac].mmbn002)
   END IF    
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn003
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn001_desc
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn002
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#理由碼顯示名稱
PRIVATE FUNCTION ammt423_mmbm002_desc(p_mmbm002)
DEFINE p_mmbm002   LIKE mmbm_t.mmbm002
   IF cl_null(p_mmbm002) THEN
      LET g_mmbm_m.mmbm002_desc = ''
   ELSE      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmbm_m.mmbm002
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbm_m.mmbm002_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbm_m.mmbm002_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm002_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#理由碼檢查
PRIVATE FUNCTION ammt423_mmbm002_chk(p_mmbm002)
DEFINE l_cnt     LIKE type_t.num5
DEFINE p_mmbm002 LIKE mmbm_t.mmbm002
DEFINE l_oocqstus LIKE oocq_t.oocqstus
   LET g_errno = null
   SELECT COUNT(oocq001) INTO l_cnt FROM oocq_t 
    WHERE oocqent = g_enterprise 
      AND oocq002 = p_mmbm002
   IF l_cnt = 0 THEN
      LET g_errno = 'amm-00026'
      RETURN
   END IF   
   SELECT oocqstus INTO l_oocqstus FROM oocq_t 
    WHERE oocqent = g_enterprise 
      AND oocq002 = p_mmbm002
      AND oocq001 = '2055'
   IF cl_null(l_oocqstus) THEN
      LET g_errno = 'amm-00027'
      RETURN
   END IF
   IF l_oocqstus <> 'Y' THEN
      LET g_errno = 'amm-00028'
      RETURN
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn005_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#單身理由碼顯示說明
PRIVATE FUNCTION ammt423_mmbn005_desc(p_mmbn005)
DEFINE p_mmbn005    LIKE mmbn_t.mmbn005 
   IF cl_null(p_mmbn005) THEN 
      LET g_mmbn_d[l_ac].mmbn005_desc = ''
   ELSE
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmbn_d[l_ac].mmbn005
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbn_d[l_ac].mmbn005_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn005_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn006_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[#檢查需求營運中心
PRIVATE FUNCTION ammt423_mmbn006_chk(p_mmbn006)
DEFINE   l_cnt       LIKE type_t.num5
DEFINE   p_mmbn006   LIKE mmbn_t.mmbn006
DEFINE   l_ooeastus  LIKE ooea_t.ooeastus
DEFINE   l_ooea004   LIKE ooea_t.ooea004
DEFINE   l_ooefstus  LIKE ooef_t.ooefstus
DEFINE   l_ooee003   LIKE ooee_t.ooee003
DEFINE   l_n         LIKE type_t.num5
DEFINE   l_sql       STRING
   LET g_errno = NULL
   LET l_cnt = 0
#   SELECT ooea004,ooeastus INTO l_ooea004,l_ooeastus
#     FROM ooea_t WHERE ooea001 = p_mmbn006 AND ooeaent = g_enterprise
#     
#   CASE WHEN SQLCA.SQLCODE = 100       LET g_errno = 'aim-00060'
#        WHEN l_ooeastus='N'            LET g_errno = 'aoo-00012'      
#        WHEN l_ooea004 = 'N'           LET g_errno = 'amm-00059'        
#   END CASE
   SELECT ooefstus INTO l_ooefstus
     FROM ooef_t 
    WHERE ooef001 = p_mmbn006 AND ooefent = g_enterprise
     
   CASE WHEN SQLCA.SQLCODE = 100       LET g_errno = 'aim-00060'
        WHEN l_ooefstus='N'            LET g_errno = 'aoo-00012'              
   END CASE
   LET l_n = 0
   SELECT COUNT(*) INTO l_n FROM ooef_t,ooee_t
    WHERE ooefent = ooeeent AND ooef001 = ooee001
      AND ooefent = g_enterprise
      AND ooef001 = p_mmbn006
      AND ooee002 = '2'
      AND ooee003 = 'F'
   IF l_n < 1 THEN
      LET g_errno = 'amm-00059'
   END IF
   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
   LET l_sql = " SELECT COUNT(ooed004) FROM ooed_t where ooed004 = '",p_mmbn006 ,"'",
               "  START WITH ooed004 = '",g_mmbm_m.mmbm004 ,"'",
               "  CONNECT BY NOCYCLE PRIOR ooed004 = ooed005  " 
   PREPARE ooed_pre FROM l_sql
   EXECUTE ooed_pre INTO l_cnt   
   IF l_cnt = 0 THEN
      LET g_errno = "amm-00089"
      RETURN
   END IF        
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn001_desc_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[#卡種編號帶出卡種說明
PRIVATE FUNCTION ammt423_mmbn001_desc_desc(p_mmbn001_desc)
DEFINE p_mmbn001_desc   LIKE mman_t.mman001
   IF cl_null(p_mmbn001_desc) THEN
      LET g_mmbn_d[l_ac].mmbn001_desc_desc = ''
   ELSE   
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_mmbn001_desc
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbn_d[l_ac].mmbn001_desc_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn001_desc_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[#會員編號帶出會員名稱
PRIVATE FUNCTION ammt423_mmbn002_desc(p_mmbn002)
DEFINE p_mmbn002   LIKE mmbn_t.mmbn002
   IF cl_null(p_mmbn002) THEN
      LET g_mmbn_d[l_ac].mmbn002_desc = ''
   ELSE   
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_mmbn002
      CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
      LET g_mmbn_d[l_ac].mmbn002_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn002_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm001_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[# 異動來源名稱
PRIVATE FUNCTION ammt423_mmbm001_desc(p_mmbm001)
DEFINE p_mmbm001    LIKE mmbm_t.mmbm001
   IF cl_null(p_mmbm001) THEN
      LET g_mmbm_m.mmbm001_desc = ''
   ELSE   
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmbm_m.mmbm001
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2056' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbm_m.mmbm001_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbm_m.mmbm001_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbmdocno_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[#單號檢查
PRIVATE FUNCTION ammt423_mmbmdocno_chk()
DEFINE l_stus   LIKE ooba_t.oobastus
   LET g_errno = null
   SELECT oobastus INTO l_stus  FROM ooba_t,oobl_t 
    WHERE oobaent = ooblent  AND ooba001 = oobl001
      AND ooba002 = oobl002   AND oobl003 = 'ammt423'
      AND oobl001 = g_ooef004 AND oobl002= g_mmbm_m.mmbmdocno
      AND ooblent = g_enterprise
      
   CASE WHEN SQLCA.SQLCODE = 100   LET g_errno = 'aim-00056'
        WHEN l_stus='N'            LET g_errno = 'aoo-00102'       
   END CASE       
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[#異動來源查詢
PRIVATE FUNCTION ammt423_mmbm001_chk(p_mmbm001)
DEFINE l_cnt      LIKE type_t.num5
DEFINE p_mmbm001  LIKE mmbm_t.mmbm001
DEFINE l_oocq001  LIKE oocq_t.oocq001
DEFINE l_oocqstus LIKE oocq_t.oocqstus
   LET g_errno = null
   SELECT COUNT(oocq001) INTO l_cnt FROM oocq_t 
    WHERE oocqent = g_enterprise 
      AND oocq002 = p_mmbm001
   IF l_cnt = 0 THEN
      LET g_errno = 'amm-00029'
      RETURN
   END IF   
   SELECT oocqstus INTO l_oocqstus FROM oocq_t 
    WHERE oocqent = g_enterprise 
      AND oocq002 = p_mmbm001
      AND oocq001 = '2056'
   IF cl_null(l_oocqstus) THEN
      LET g_errno = 'amm-00030'
      RETURN
   END IF
   IF l_oocqstus <> 'Y' THEN
      LET g_errno = 'amm-00031'
      RETURN
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn006_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[#需求營運中心顯示
PRIVATE FUNCTION ammt423_mmbn006_desc(p_mmbn006)
DEFINE p_mmbn006   LIKE mmbn_t.mmbn006
   IF cl_null(p_mmbn006) THEN
      LET g_mmbn_d[l_ac].mmbn006_desc = ''
   ELSE    
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_mmbn006
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbn_d[l_ac].mmbn006_desc = '', g_rtn_fields[1] , ''
   END IF   
   DISPLAY BY NAME g_mmbn_d[l_ac].mmbn006_desc
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbn001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[#檢查會員卡號
PRIVATE FUNCTION ammt423_mmbn001_chk(p_mmbn001)
DEFINE p_mmbn001        LIKE mmbn_t.mmbn001
DEFINE l_mmaq005        LIKE mmaq_t.mmaq005
DEFINE l_mmaq006        LIKE mmaq_t.mmaq006
DEFINE l_mman023        LIKE mman_t.mman023
DEFINE l_cnt            LIKE type_t.num5
   LET g_errno = ''
   
   SELECT mmaq005,mmaq006,mman023 INTO l_mmaq005,l_mmaq006,l_mman023 FROM mmaq_t,mman_t
    WHERE mmaq001 = p_mmbn001 AND mmanent = mmaqent AND mman001 = mmaq002
   IF cL_null(l_mmaq006) THEN
      LET g_errno = 'amm-00032'
      RETURN
   END IF
   IF l_mmaq006 != '2' AND l_mmaq006 != '3' THEN
   　 LET g_errno = 'amm-00033'
      RETURN　
   END IF 
   IF l_mman023 = 'N' OR cl_null(l_mman023) THEN 
      LET g_errno = 'amm-00060'
      RETURN
   END IF
   SELECT COUNT(mmbn001) INTO l_cnt FROM mmbn_t 
    WHERE mmbnent = g_enterprise  
      AND mmbndocno = g_mmbm_m.mmbmdocno 
      AND mmbn001 = p_mmbn001      
   IF l_cnt > 0 THEN
      LET g_errno = 'amm-00034'
      RETURN　
   END IF 
   SELECT COUNT(*) INTO l_cnt FROM mmbm_t,mmbn_t 
    WHERE mmbment = mmbnent 
      AND mmbmdocno = mmbndocno AND mmbmstus = 'N'
      AND mmbn001 = p_mmbn001    
      AND mmbmdocno <> g_mmbm_m.mmbmdocno 
   IF l_cnt > 0 THEN
     LET g_errno = 'amm-00035'
      RETURN　
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm004_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[#顯示營運據點名稱
PRIVATE FUNCTION ammt423_mmbm004_desc(p_mmbm004)
DEFINE p_mmbm004   LIKE mmbm_t.mmbm004
   IF cl_null(p_mmbm004) THEN
      LET g_mmbm_m.mmbm004_desc = ''
   ELSE
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmbm_m.mmbm004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_mmbm_m.mmbm004_desc = '', g_rtn_fields[1] , ''          
   END IF
   DISPLAY BY NAME g_mmbm_m.mmbm004_desc

END FUNCTION]]>
</point>
  <point name="function.ammt423_mmbm004_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[#營運據點檢查
PRIVATE FUNCTION ammt423_mmbm004_chk(p_mmbm004)
DEFINE p_mmbm004  LIKE mmbm_t.mmbm004
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_cnt1     LIKE type_t.num5 
DEFINE l_sql      STRING

   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   LET l_sql="SELECT COUNT(*)  FROM ooed_t WHERE ooed004 ='",p_mmbm004,"' AND ooed001='2' ",
             #"   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null) ",
             "   AND CAST(ooed006 AS DATE)<='",g_today,"' AND (CAST(ooed007 AS DATE)>='",g_today,"' or ooed007 is null) ",
             "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_site,"' CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
             #"   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "   AND CAST(ooed006 AS DATE)<='",g_today,"' AND (CAST(ooed007 AS DATE)>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"'))"
   PREPARE agct300_sql_ooef_pre1 FROM l_sql
   EXECUTE agct300_sql_ooef_pre1 INTO l_cnt   
   IF l_cnt <= 0 THEN
      LET g_errno = "aoo-00163"
   ELSE
      #LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooea_t WHERE ooea001=ooed004 AND ooed004 ='",p_mmbm004,"' AND ooed001='2' AND ooeastus='Y' ",
      LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooef_t WHERE ooef001=ooed004 AND ooed004 ='",p_mmbm004,"' AND ooed001='2' AND ooefstus='Y' ",
             #"   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null)",
             "   AND CAST(ooed006 AS DATE)<='",g_today,"' AND (CAST(ooed007 AS DATE)>='",g_today,"' or ooed007 is null)",
             "   AND ooef001 IN ((select DISTINCT ooed004 FROM ooed_t START WITH ooed005='",g_site,"' CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
             #"   AND TO_CHAR(ooed006,'YYYY/MM/DD')<='",g_today,"' AND (TO_CHAR(ooed007,'YYYY/MM/DD')>='",g_today,"' or ooed007 is null))",
             "   AND CAST(ooed006 AS DATE)<='",g_today,"' AND (CAST(ooed007 AS DATE)>='",g_today,"' or ooed007 is null))",
             "          UNION ",
             #"         (SELECT ooea001 FROM ooea_t WHERE ooea001='",g_site,"'))"
             "         (SELECT ooef001 FROM ooef_t WHERE ooef001='",g_site,"'))"
      PREPARE agct300_sql_ooef_pre2 FROM l_sql
      EXECUTE agct300_sql_ooef_pre2 INTO l_cnt1       
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
</point>
  <point name="function.ammt423_batch" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[#批量產生單身
PRIVATE FUNCTION ammt423_batch()
DEFINE l_success   LIKE type_t.num5
   LET l_success = TRUE 
   LET g_errno = ''

   IF g_mmbm_m.mmbmstus <> 'N' THEN
      CALL cl_err(g_mmbm_m.mmbmdocno,'amm-00058',1)
      RETURN
   END IF 
   CALL s_transaction_begin()
   CALL ammt423_01(g_enterprise,g_mmbm_m.mmbmdocno,0) RETURNING l_success
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   CALL s_transaction_end('Y','0')  
END FUNCTION]]>
</point>
  <point name="construct.c.mmbmdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mmbmdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbmdocno  #顯示到畫面上

            NEXT FIELD mmbmdocno                     #返回原欄位]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_mmbm_m.mmbmstus = 'N' THEN
      CALL cl_set_act_visible("modify,delete",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete",FALSE)
   END IF ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004]]>
</point>
  <point name="input.a.page1.mmbn004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_mmbn_d[l_ac].mmbn003) AND NOT cl_null(g_mmbn_d[l_ac].mmbn004) THEN
               IF g_mmbn_d[l_ac].mmbn004 <= g_mmbn_d[l_ac].mmbn003 THEN
                  CALL cl_err(g_mmbn_d[l_ac].mmbn004,'amm-00055',1) 
                  LET g_mmbn_d[l_ac].mmbn004 = g_mmbn_d_t.mmbn004
                  NEXT FIELD CURRENT
               END IF   
            END IF ]]>
</point>
  <point name="input.b.mmbm002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[ ]]>
</point>
  <point name="input.b.mmbm004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(mmbnseq)+1 INTO g_mmbn_d[l_ac].mmbnseq FROM mmbn_t
             WHERE mmbnent = g_enterprise 
               AND mmbndocno = g_mmbm_m.mmbmdocno  
            IF cl_null(g_mmbn_d[l_ac].mmbnseq) THEN 
               LET g_mmbn_d[l_ac].mmbnseq = 1
            END IF     
            LET g_mmbn_d[l_ac].mmbn006 = g_mmbm_m.mmbm004 
            LET g_mmbn_d_t.mmbn006 = g_mmbn_d[l_ac].mmbn006            
            CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006)  
            IF NOT cl_null(g_mmbm_m.mmbm002) THEN
               LET g_mmbn_d[l_ac].mmbn005 = g_mmbm_m.mmbm002
               CALL ammt423_mmbn005_desc(g_mmbn_d[l_ac].mmbn005)              
            END IF]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success        LIKE type_t.num5]]>
</point>
  <point name="input.detail_input.page1.batch_production" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_mmbm_m.mmbmdocno) THEN
                  CALL ammt423_01(g_enterprise,g_mmbm_m.mmbmdocno,1) RETURNING l_success
                  IF l_success THEN 
                     CALL ammt423_show() 
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt FROM mmbn_t 
                      WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbm_m.mmbmdocno
                     IF l_cmd = 'a' AND l_ac <= l_cnt  THEN 
                       #DELETE FROM mmbn_t where mmbndocno = g_mmbm_m.mmbmdocno AND mmbnseq = g_mmbn_d[l_ac].mmbnseq                
                     END IF
                     IF cl_null(g_mmbn_d[l_ac].mmbnseq) THEN 
                        SELECT MAX(mmbnseq)+1 INTO g_mmbn_d[l_ac].mmbnseq FROM mmbn_t
                         WHERE mmbnent = g_enterprise 
                           AND mmbndocno = g_mmbm_m.mmbmdocno  
                        IF cl_null(g_mmbn_d[l_ac].mmbnseq) THEN 
                           LET g_mmbn_d[l_ac].mmbnseq = 1
                        END IF     
                        LET g_mmbn_d[l_ac].mmbn006 = g_mmbm_m.mmbm004  
                        CALL ammt423_mmbn006_desc(g_mmbn_d[l_ac].mmbn006)  
                        IF NOT cl_null(g_mmbm_m.mmbm002) THEN
                           LET g_mmbn_d[l_ac].mmbn005 = g_mmbm_m.mmbm002
                           CALL ammt423_mmbn005_desc(g_mmbn_d[l_ac].mmbn005)              
                        END IF
                     END IF   
                     CALL s_transaction_end('Y','0')
                     DISPLAY BY NAME g_mmbn_d[l_ac].*
                     EXIT DIALOG
                  ELSE
                     CALL s_transaction_end('N','0')
                     DISPLAY BY NAME g_mmbn_d[l_ac].*
                     ACCEPT DIALOG
                  END IF                       
               END IF  ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  LET g_mmbm_m_t.* = g_mmbm_m.*

                  LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  IF NOT cl_null(g_mmbm_m.mmbmdocno) THEN
                     CALL s_aooi200_gen_docno(g_site,g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt,g_prog) 
                     RETURNING  g_success,g_mmbm_m.mmbmdocno
                     IF g_success<>'1' THEN
                        call cl_err(g_mmbm_m.mmbmdocno,"amm-00001",1)
                        LET g_mmbm_m.mmbmdocno = g_mmbmdocno_t
                        NEXT FIELD mmbmdocno
                     ELSE
                        IF NOT ap_chk_notDup(g_mmbm_m.mmbmdocno,"SELECT COUNT(*) FROM mmbm_t WHERE "||"mmbment = '" ||g_enterprise|| "' AND "||"mmbmdocno = '"||g_mmbm_m.mmbmdocno ||"'",'std-00004',0) THEN 
                           LET g_mmbm_m.mmbmdocno = g_mmbmdocno_t
                           NEXT FIELD mmbmdocno
                        END IF    
                                      
                     END IF
                  END IF]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL ammt423_set_entry(p_cmd)
            CALL ammt423_set_no_entry(p_cmd)]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
      END IF   ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_mmbm_m.mmbmstus = "N"
      LET g_mmbm_m.mmbmdocdt =g_today #cl_get_current()
      LET g_mmbm_m.mmbm004 = g_site
      LET g_mmbm_m_t.* = g_mmbm_m.* 
      CALL ammt423_mmbm004_desc(g_mmbm_m.mmbm004)]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT ooef004 INTO g_ooef004  FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise]]>
</point>
  <point name="menu.batch_production" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL ammt423_batch()                ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
      END IF  ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   RETURN]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("mmbmdocdt",TRUE) 
   CALL cl_set_comp_entry('mmbm004',TRUE)    
   CALL cl_set_comp_entry('mmbm002',TRUE)  ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[     ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("mmbn005",TRUE)　               ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_mmbm_m.mmbmdocno) THEN
      CALL cl_set_comp_entry("mmbmdocdt",FALSE)
   END IF
   LET l_n = 0
   SELECT COUNT(*) INTO l_n FROM mmbn_t 
    WHERE mmbnent = g_enterprise 
      AND mmbndocno = g_mmbm_m.mmbmdocno
   IF l_n > 0 THEN
      CALL cl_set_comp_entry('mmbm004',FALSE)    
      CALL cl_set_comp_entry('mmbm002',FALSE)  
   END IF ]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_n     LIKE type_t.num5]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_mmbm_m.mmbm002) THEN
      CALL cl_set_comp_entry("mmbn005",FALSE)
   END IF   　　]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbn_d[l_ac].mmbn006
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbn_d[l_ac].mmbn006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbn_d[l_ac].mmbn006_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbn_d[l_ac].mmbn001
#            CALL ap_ref_array2(g_ref_fields,"SELECT mmaq002 FROM mmaq_t WHERE mmaqent='"||g_enterprise||"' AND mmaq001=? ","") RETURNING g_rtn_fields
#            LET g_mmbn_d[l_ac].mmbn001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbn_d[l_ac].mmbn001_desc
            CALL ammt423_mmbn001_desc_desc(g_mmbn_d[l_ac].mmbn001_desc)
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbn_d[l_ac].mmbn002
#            CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
#            LET g_mmbn_d[l_ac].mmbn002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbn_d[l_ac].mmbn002_desc

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbn_d[l_ac].mmbn005
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbn_d[l_ac].mmbn005_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbn_d[l_ac].mmbn005_desc
              ]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[           

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbm001
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2056' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbm001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbm001_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbm002
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbm002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbm002_desc
#            CALL ammt423_mmbm004_desc(g_mmbm_m.mmbm004)
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbm_m.mmbmcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbm_m.mmbmcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbm_m.mmbmcnfid_desc
]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF SQLCA.sqlcode = 0 THEN 
      CALL s_transaction_end('Y','1')
   END IF  ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt423_conf_chk(g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_ammt423_conf_upd(g_mmbm_m.mmbmdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            CALL cl_err(g_mmbm_m.mmbmdocno,g_errno,1)
            RETURN            
         END IF
                
      WHEN 'X'
         CALL s_ammt423_void_chk(g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt423_void_upd(g_mmbm_m.mmbmdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmbm_m.mmbmdocno,g_errno,1)
            RETURN    
         END IF
      WHEN 'N'
         CALL s_ammt423_unconf_chk(g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_ammt423_unconf_upd(g_mmbm_m.mmbmdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmbm_m.mmbmdocno,g_errno,1)
            RETURN    
         END IF
   END CASE]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_mmbm_m.mmbmstus = 'X' THEN
      RETURN
   END IF
   CALL cl_set_act_visible("invalid",TRUE) 
   IF g_mmbm_m.mmbmstus = 'Y' THEN
      CALL cl_set_act_visible("invalid",FALSE)     
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_act_visible("invalid",TRUE) 
      IF g_mmbm_m.mmbmstus = 'Y' THEN
         CALL cl_set_act_visible("invalid",FALSE)     
      END IF               ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmbm003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.mmbmstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.mmbmcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.mmbmcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmbn003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.mmbn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.mmbn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmbmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmbmdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmbm004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmbm002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.mmbm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.mmbm001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.mmbmdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmbn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmbn006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmbn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmbn001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.mmbn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.mmbn005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.mmbn004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="ammt423.b_fill" ver="5" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammt423_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmbn_d.clear()    #g_mmbn_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammt423_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmbnseq,mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005 ,t1.ooefl003 , 
          t2.mmaq002 ,t4.mmaf008 ,t5.oocql004 FROM mmbn_t",   
                  " INNER JOIN mmbm_t ON mmbmdocno = mmbndocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbn006 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mmaq_t t2 ON t2.mmaqent='"||g_enterprise||"' AND t2.mmaq001=mmbn001  ",
               " LEFT JOIN mmaf_t t4 ON t4.mmafent='"||g_enterprise||"' AND t4.mmaf001=mmbn002  ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2055' AND t5.oocql002=mmbn005 AND t5.oocql003='"||g_dlang||"' ",
 
                  " WHERE mmbnent=? AND mmbndocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmbn_t.mmbnseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammt423_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammt423_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmbm_m.mmbmdocno
                                               
      FOREACH b_fill_cs INTO g_mmbn_d[l_ac].mmbnseq,g_mmbn_d[l_ac].mmbn006,g_mmbn_d[l_ac].mmbn001,g_mmbn_d[l_ac].mmbn002, 
          g_mmbn_d[l_ac].mmbn003,g_mmbn_d[l_ac].mmbn004,g_mmbn_d[l_ac].mmbn005,g_mmbn_d[l_ac].mmbn006_desc, 
          g_mmbn_d[l_ac].mmbn001_desc,g_mmbn_d[l_ac].mmbn002_desc,g_mmbn_d[l_ac].mmbn005_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmbn_d.deleteElement(g_mmbn_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt423_pb
 
   
END FUNCTION
]]>
</section>
  <section id="ammt423.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammt423_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt423_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt423.browser_fill" ver="9" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt423_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbm_m.* TO NULL
   CALL g_mmbn_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmbmdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmbmdocno ",
                      " FROM mmbm_t ",
                      " ",
                      " LEFT JOIN mmbn_t ON mmbnent = mmbment AND mmbmdocno = mmbndocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE mmbment = '" ||g_enterprise|| "' AND mmbnent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbm_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmbmdocno ",
                      " FROM mmbm_t ", 
                      "  ",
                      "  ",
                      " WHERE mmbment = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmbm_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmbmdocno,mmbmdocdt,mmbm004,'',mmbm002,'',mmbm001,'',mmbm003 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmbmstus,mmbmdocno,mmbmdocdt,mmbm004,'',mmbm002,'',mmbm001,'',mmbm003, 
       t1.ooefl003 ,t2.oocql004 ,t3.oocql004 ",
               " FROM mmbm_t ",
               "  ",
               "  LEFT JOIN mmbn_t ON mmbnent = mmbment AND mmbmdocno = mmbndocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbm004 AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2055' AND t2.oocql002=mmbm002 AND t2.oocql003='"||g_lang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2056' AND t3.oocql002=mmbm001 AND t3.oocql003='"||g_lang||"' ",
 
               " WHERE mmbment = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmbm_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbmdocno,g_browser[g_cnt].b_mmbmdocdt, 
       g_browser[g_cnt].b_mmbm004,g_browser[g_cnt].b_mmbm004_desc,g_browser[g_cnt].b_mmbm002,g_browser[g_cnt].b_mmbm002_desc, 
       g_browser[g_cnt].b_mmbm001,g_browser[g_cnt].b_mmbm001_desc,g_browser[g_cnt].b_mmbm003,g_browser[g_cnt].b_mmbm004_desc, 
       g_browser[g_cnt].b_mmbm002_desc,g_browser[g_cnt].b_mmbm001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="ammt423.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammt423_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmbmdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammt423_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt423.construct" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammt423_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbm_m.* TO NULL
   CALL g_mmbn_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbmdocno,mmbmdocdt,mmbm004,mmbm002,mmbm001,mmbm003,mmbmstus,mmbmownid, 
          mmbmowndp,mmbmcrtid,mmbmcrtdp,mmbmcrtdt,mmbmmodid,mmbmmoddt,mmbmcnfid,mmbmcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmbmcrtdt>>----
         AFTER FIELD mmbmcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbmmoddt>>----
         AFTER FIELD mmbmmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbmcnfdt>>----
         AFTER FIELD mmbmcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbmpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmbmdocno
         ON ACTION controlp INFIELD mmbmdocno
            #add-point:ON ACTION controlp INFIELD mmbmdocno
            {<point name="construct.c.mmbmdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmdocno
            #add-point:BEFORE FIELD mmbmdocno
            {<point name="construct.b.mmbmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmdocno
            
            #add-point:AFTER FIELD mmbmdocno
            {<point name="construct.a.mmbmdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmdocdt
            #add-point:BEFORE FIELD mmbmdocdt
            {<point name="construct.b.mmbmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmdocdt
            
            #add-point:AFTER FIELD mmbmdocdt
            {<point name="construct.a.mmbmdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbmdocdt
         ON ACTION controlp INFIELD mmbmdocdt
            #add-point:ON ACTION controlp INFIELD mmbmdocdt
            {<point name="construct.c.mmbmdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbm004
         ON ACTION controlp INFIELD mmbm004
            #add-point:ON ACTION controlp INFIELD mmbm004
            {<point name="construct.c.mmbm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm004
            #add-point:BEFORE FIELD mmbm004
            {<point name="construct.b.mmbm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm004
            
            #add-point:AFTER FIELD mmbm004
            {<point name="construct.a.mmbm004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbm002
         ON ACTION controlp INFIELD mmbm002
            #add-point:ON ACTION controlp INFIELD mmbm002
            {<point name="construct.c.mmbm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm002
            #add-point:BEFORE FIELD mmbm002
            {<point name="construct.b.mmbm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm002
            
            #add-point:AFTER FIELD mmbm002
            {<point name="construct.a.mmbm002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbm001
         ON ACTION controlp INFIELD mmbm001
            #add-point:ON ACTION controlp INFIELD mmbm001
            {<point name="construct.c.mmbm001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm001
            #add-point:BEFORE FIELD mmbm001
            {<point name="construct.b.mmbm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm001
            
            #add-point:AFTER FIELD mmbm001
            {<point name="construct.a.mmbm001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm003
            #add-point:BEFORE FIELD mmbm003
            {<point name="construct.b.mmbm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm003
            
            #add-point:AFTER FIELD mmbm003
            {<point name="construct.a.mmbm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbm003
         ON ACTION controlp INFIELD mmbm003
            #add-point:ON ACTION controlp INFIELD mmbm003
            {<point name="construct.c.mmbm003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmstus
            #add-point:BEFORE FIELD mmbmstus
            {<point name="construct.b.mmbmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmstus
            
            #add-point:AFTER FIELD mmbmstus
            {<point name="construct.a.mmbmstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbmstus
         ON ACTION controlp INFIELD mmbmstus
            #add-point:ON ACTION controlp INFIELD mmbmstus
            {<point name="construct.c.mmbmstus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbmownid
         ON ACTION controlp INFIELD mmbmownid
            #add-point:ON ACTION controlp INFIELD mmbmownid
            {<point name="construct.c.mmbmownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmownid
            #add-point:BEFORE FIELD mmbmownid
            {<point name="construct.b.mmbmownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmownid
            
            #add-point:AFTER FIELD mmbmownid
            {<point name="construct.a.mmbmownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbmowndp
         ON ACTION controlp INFIELD mmbmowndp
            #add-point:ON ACTION controlp INFIELD mmbmowndp
            {<point name="construct.c.mmbmowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmowndp
            #add-point:BEFORE FIELD mmbmowndp
            {<point name="construct.b.mmbmowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmowndp
            
            #add-point:AFTER FIELD mmbmowndp
            {<point name="construct.a.mmbmowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbmcrtid
         ON ACTION controlp INFIELD mmbmcrtid
            #add-point:ON ACTION controlp INFIELD mmbmcrtid
            {<point name="construct.c.mmbmcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmcrtid
            #add-point:BEFORE FIELD mmbmcrtid
            {<point name="construct.b.mmbmcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmcrtid
            
            #add-point:AFTER FIELD mmbmcrtid
            {<point name="construct.a.mmbmcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbmcrtdp
         ON ACTION controlp INFIELD mmbmcrtdp
            #add-point:ON ACTION controlp INFIELD mmbmcrtdp
            {<point name="construct.c.mmbmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmcrtdp
            #add-point:BEFORE FIELD mmbmcrtdp
            {<point name="construct.b.mmbmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmcrtdp
            
            #add-point:AFTER FIELD mmbmcrtdp
            {<point name="construct.a.mmbmcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmcrtdt
            #add-point:BEFORE FIELD mmbmcrtdt
            {<point name="construct.b.mmbmcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbmmodid
         ON ACTION controlp INFIELD mmbmmodid
            #add-point:ON ACTION controlp INFIELD mmbmmodid
            {<point name="construct.c.mmbmmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmmodid
            #add-point:BEFORE FIELD mmbmmodid
            {<point name="construct.b.mmbmmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmmodid
            
            #add-point:AFTER FIELD mmbmmodid
            {<point name="construct.a.mmbmmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmmoddt
            #add-point:BEFORE FIELD mmbmmoddt
            {<point name="construct.b.mmbmmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbmcnfid
         ON ACTION controlp INFIELD mmbmcnfid
            #add-point:ON ACTION controlp INFIELD mmbmcnfid
            {<point name="construct.c.mmbmcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmcnfid
            #add-point:BEFORE FIELD mmbmcnfid
            {<point name="construct.b.mmbmcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmcnfid
            
            #add-point:AFTER FIELD mmbmcnfid
            {<point name="construct.a.mmbmcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmcnfdt
            #add-point:BEFORE FIELD mmbmcnfdt
            {<point name="construct.b.mmbmcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005
           FROM s_detail1[1].mmbn006,s_detail1[1].mmbn001,s_detail1[1].mmbn002,s_detail1[1].mmbn003, 
               s_detail1[1].mmbn004,s_detail1[1].mmbn005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.mmbn006
         ON ACTION controlp INFIELD mmbn006
            #add-point:ON ACTION controlp INFIELD mmbn006
            {<point name="construct.c.page1.mmbn006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn006
            #add-point:BEFORE FIELD mmbn006
            {<point name="construct.b.page1.mmbn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn006
            
            #add-point:AFTER FIELD mmbn006
            {<point name="construct.a.page1.mmbn006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbn001
         ON ACTION controlp INFIELD mmbn001
            #add-point:ON ACTION controlp INFIELD mmbn001
            {<point name="construct.c.page1.mmbn001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn001
            #add-point:BEFORE FIELD mmbn001
            {<point name="construct.b.page1.mmbn001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn001
            
            #add-point:AFTER FIELD mmbn001
            {<point name="construct.a.page1.mmbn001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbn002
         ON ACTION controlp INFIELD mmbn002
            #add-point:ON ACTION controlp INFIELD mmbn002
            {<point name="construct.c.page1.mmbn002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn002
            #add-point:BEFORE FIELD mmbn002
            {<point name="construct.b.page1.mmbn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn002
            
            #add-point:AFTER FIELD mmbn002
            {<point name="construct.a.page1.mmbn002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn003
            #add-point:BEFORE FIELD mmbn003
            {<point name="construct.b.page1.mmbn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn003
            
            #add-point:AFTER FIELD mmbn003
            {<point name="construct.a.page1.mmbn003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbn003
         ON ACTION controlp INFIELD mmbn003
            #add-point:ON ACTION controlp INFIELD mmbn003
            {<point name="construct.c.page1.mmbn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn004
            #add-point:BEFORE FIELD mmbn004
            {<point name="construct.b.page1.mmbn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn004
            
            #add-point:AFTER FIELD mmbn004
            {<point name="construct.a.page1.mmbn004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mmbn004
         ON ACTION controlp INFIELD mmbn004
            #add-point:ON ACTION controlp INFIELD mmbn004
            {<point name="construct.c.page1.mmbn004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.mmbn005
         ON ACTION controlp INFIELD mmbn005
            #add-point:ON ACTION controlp INFIELD mmbn005
            {<point name="construct.c.page1.mmbn005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn005
            #add-point:BEFORE FIELD mmbn005
            {<point name="construct.b.page1.mmbn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn005
            
            #add-point:AFTER FIELD mmbn005
            {<point name="construct.a.page1.mmbn005" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt423.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammt423_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmbmdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt423.delete" ver="10" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammt423_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmbm_m.mmbmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL ammt423_show()
   
   CALL s_transaction_begin()
 
   OPEN ammt423_cl USING g_enterprise,g_mmbm_m.mmbmdocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt423_cl:", STATUS, 1)
      CLOSE ammt423_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt423_master_referesh USING g_mmbm_m.mmbmdocno INTO g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt, 
       g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid, 
       g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmmodid, 
       g_mmbm_m.mmbmmoddt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt,g_mmbm_m.mmbm004_desc,g_mmbm_m.mmbm002_desc, 
       g_mmbm_m.mmbm001_desc,g_mmbm_m.mmbmownid_desc,g_mmbm_m.mmbmowndp_desc,g_mmbm_m.mmbmcrtid_desc, 
       g_mmbm_m.mmbmcrtdp_desc,g_mmbm_m.mmbmmodid_desc,g_mmbm_m.mmbmcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbm_m.mmbmdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammt423_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
 
      DELETE FROM mmbm_t
       WHERE mmbment = g_enterprise AND mmbmdocno = g_mmbm_m.mmbmdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmbm_m.mmbmdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmbn_t
       WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbm_m.mmbmdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbn_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmbn_d.clear() 
 
     
      #CALL ammt423_ui_browser_refresh()  
      CALL ammt423_ui_headershow()  
      CALL ammt423_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammt423_browser_fill("")
         CALL ammt423_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammt423_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammt423_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmbm_m.mmbmdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="ammt423.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt423_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmbn_t
       WHERE mmbnent = g_enterprise AND
         mmbndocno = ps_keys_bak[1] AND mmbnseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt423.description" ver="17" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:4,PR版次:4) Build-000284
#+ 
#+ Filename...: ammt423
#+ Description: 會員卡續期維護作業
#+ Creator....: 02331(2013/09/09)
#+ Modifier...: 01726(2014/07/03)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="ammt423.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammt423_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmbn_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt423_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt423_detail AS ",
                "SELECT * FROM mmbn_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt423_detail SELECT * FROM mmbn_t 
                                         WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbmdocno_t
 
   
   #將key修正為調整後   
   UPDATE ammt423_detail 
      #更新key欄位
      SET mmbndocno = g_mmbm_m.mmbmdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO mmbn_t SELECT * FROM ammt423_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt423_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
   
   DROP TABLE ammt423_detail
   
END FUNCTION
]]>
</section>
  <section id="ammt423.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammt423_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt423.fetch" ver="5" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt423_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbm_m.mmbmdocno = g_browser[g_current_idx].b_mmbmdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt423_master_referesh USING g_mmbm_m.mmbmdocno INTO g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt, 
       g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid, 
       g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmmodid, 
       g_mmbm_m.mmbmmoddt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt,g_mmbm_m.mmbm004_desc,g_mmbm_m.mmbm002_desc, 
       g_mmbm_m.mmbm001_desc,g_mmbm_m.mmbmownid_desc,g_mmbm_m.mmbmowndp_desc,g_mmbm_m.mmbmcrtid_desc, 
       g_mmbm_m.mmbmcrtdp_desc,g_mmbm_m.mmbmmodid_desc,g_mmbm_m.mmbmcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("mmbm_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmbm_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_mmbm_m_t.* = g_mmbm_m.*
   LET g_mmbm_m_o.* = g_mmbm_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammt423_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="ammt423.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammt423_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="ammt423.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammt423_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmbmdocno,mmbmdocdt,mmbm004,mmbm002,mmbm001,mmbm003
                          FROM s_browse[1].b_mmbmdocno,s_browse[1].b_mmbmdocdt,s_browse[1].b_mmbm004, 
                              s_browse[1].b_mmbm002,s_browse[1].b_mmbm001,s_browse[1].b_mmbm003
 
         BEFORE CONSTRUCT
               DISPLAY ammt423_filter_parser('mmbmdocno') TO s_browse[1].b_mmbmdocno
            DISPLAY ammt423_filter_parser('mmbmdocdt') TO s_browse[1].b_mmbmdocdt
            DISPLAY ammt423_filter_parser('mmbm004') TO s_browse[1].b_mmbm004
            DISPLAY ammt423_filter_parser('mmbm002') TO s_browse[1].b_mmbm002
            DISPLAY ammt423_filter_parser('mmbm001') TO s_browse[1].b_mmbm001
            DISPLAY ammt423_filter_parser('mmbm003') TO s_browse[1].b_mmbm003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt423_filter_show('mmbmdocno')
   CALL ammt423_filter_show('mmbmdocdt')
   CALL ammt423_filter_show('mmbm004')
   CALL ammt423_filter_show('mmbm002')
   CALL ammt423_filter_show('mmbm001')
   CALL ammt423_filter_show('mmbm003')
 
END FUNCTION
]]>
</section>
  <section id="ammt423.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammt423_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="ammt423.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammt423_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt423_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="ammt423.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbm_m        RECORD
       mmbmdocno LIKE mmbm_t.mmbmdocno, 
   mmbmdocdt LIKE mmbm_t.mmbmdocdt, 
   mmbm004 LIKE mmbm_t.mmbm004, 
   mmbm004_desc LIKE type_t.chr80, 
   mmbm002 LIKE mmbm_t.mmbm002, 
   mmbm002_desc LIKE type_t.chr80, 
   mmbm001 LIKE mmbm_t.mmbm001, 
   mmbm001_desc LIKE type_t.chr80, 
   mmbm003 LIKE mmbm_t.mmbm003, 
   mmbmstus LIKE mmbm_t.mmbmstus, 
   mmbmownid LIKE mmbm_t.mmbmownid, 
   mmbmownid_desc LIKE type_t.chr80, 
   mmbmowndp LIKE mmbm_t.mmbmowndp, 
   mmbmowndp_desc LIKE type_t.chr80, 
   mmbmcrtid LIKE mmbm_t.mmbmcrtid, 
   mmbmcrtid_desc LIKE type_t.chr80, 
   mmbmcrtdp LIKE mmbm_t.mmbmcrtdp, 
   mmbmcrtdp_desc LIKE type_t.chr80, 
   mmbmcrtdt DATETIME YEAR TO SECOND, 
   mmbmmodid LIKE mmbm_t.mmbmmodid, 
   mmbmmodid_desc LIKE type_t.chr80, 
   mmbmmoddt DATETIME YEAR TO SECOND, 
   mmbmcnfid LIKE mmbm_t.mmbmcnfid, 
   mmbmcnfid_desc LIKE type_t.chr80, 
   mmbmcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmbn_d        RECORD
       mmbnseq LIKE mmbn_t.mmbnseq, 
   mmbn006 LIKE mmbn_t.mmbn006, 
   mmbn006_desc LIKE type_t.chr500, 
   mmbn001 LIKE mmbn_t.mmbn001, 
   mmbn001_desc LIKE type_t.chr500, 
   mmbn001_desc_desc LIKE type_t.chr500, 
   mmbn002 LIKE mmbn_t.mmbn002, 
   mmbn002_desc LIKE type_t.chr500, 
   mmbn003 LIKE mmbn_t.mmbn003, 
   mmbn004 LIKE mmbn_t.mmbn004, 
   mmbn005 LIKE mmbn_t.mmbn005, 
   mmbn005_desc LIKE type_t.chr500
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmbm_m          type_g_mmbm_m
DEFINE g_mmbm_m_t        type_g_mmbm_m
DEFINE g_mmbm_m_o        type_g_mmbm_m
 
   DEFINE g_mmbmdocno_t LIKE mmbm_t.mmbmdocno
 
 
DEFINE g_mmbn_d          DYNAMIC ARRAY OF type_g_mmbn_d
DEFINE g_mmbn_d_t        type_g_mmbn_d
DEFINE g_mmbn_d_o        type_g_mmbn_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbmdocno LIKE mmbm_t.mmbmdocno,
      b_mmbmdocdt LIKE mmbm_t.mmbmdocdt,
      b_mmbm004 LIKE mmbm_t.mmbm004,
   b_mmbm004_desc LIKE type_t.chr80,
      b_mmbm002 LIKE mmbm_t.mmbm002,
   b_mmbm002_desc LIKE type_t.chr80,
      b_mmbm001 LIKE mmbm_t.mmbm001,
   b_mmbm001_desc LIKE type_t.chr80,
      b_mmbm003 LIKE mmbm_t.mmbm003
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbmdocno LIKE mmbm_t.mmbmdocno,
      b_mmbmdocdt LIKE mmbm_t.mmbmdocdt,
      b_mmbm004 LIKE mmbm_t.mmbm004,
   b_mmbm004_desc LIKE type_t.chr80,
      b_mmbm002 LIKE mmbm_t.mmbm002,
   b_mmbm002_desc LIKE type_t.chr80,
      b_mmbm001 LIKE mmbm_t.mmbm001,
   b_mmbm001_desc LIKE type_t.chr80,
      b_mmbm003 LIKE mmbm_t.mmbm003
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="ammt423.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammt423_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmbn_d.getLength() THEN
         LET g_detail_idx = g_mmbn_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmbn_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmbn_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="ammt423.init" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt423_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmbmstus','13','Y,N,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammt423_default_search()
    
END FUNCTION
]]>
</section>
  <section id="ammt423.input" ver="5" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammt423_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmbnseq,mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005 FROM mmbn_t WHERE  
       mmbnent=? AND mmbndocno=? AND mmbnseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt423_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt423_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammt423_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt,g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001 

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="ammt423.input.body" ver="5" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmbn_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION batch_production
            LET g_action_choice="batch_production"
            IF cl_auth_chk_act("batch_production") THEN
               
               #add-point:ON ACTION batch_production
               {<point name="input.detail_input.page1.batch_production" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmbn_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt423_b_fill()
            LET g_rec_b = g_mmbn_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt423_cl USING g_enterprise,g_mmbm_m.mmbmdocno
            IF STATUS THEN
               CALL cl_err("OPEN ammt423_cl:", STATUS, 1)
               CLOSE ammt423_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmbn_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmbn_d[l_ac].mmbnseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmbn_d_t.* = g_mmbn_d[l_ac].*  #BACKUP
               LET g_mmbn_d_o.* = g_mmbn_d[l_ac].*  #BACKUP
               CALL ammt423_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammt423_set_no_entry_b(l_cmd)
               IF NOT ammt423_lock_b("mmbn_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt423_bcl INTO g_mmbn_d[l_ac].mmbnseq,g_mmbn_d[l_ac].mmbn006,g_mmbn_d[l_ac].mmbn001, 
                      g_mmbn_d[l_ac].mmbn002,g_mmbn_d[l_ac].mmbn003,g_mmbn_d[l_ac].mmbn004,g_mmbn_d[l_ac].mmbn005 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmbn_d_t.mmbnseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt423_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmbn_d[l_ac].* TO NULL 
			INITIALIZE g_mmbn_d_t.* TO NULL 
            INITIALIZE g_mmbn_d_o.* TO NULL 
            
            LET g_mmbn_d_t.* = g_mmbn_d[l_ac].*     #新輸入資料
            LET g_mmbn_d_o.* = g_mmbn_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt423_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammt423_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmbn_d[li_reproduce_target].* = g_mmbn_d[li_reproduce].*
 
               LET g_mmbn_d[li_reproduce_target].mmbnseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmbn_t 
             WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbm_m.mmbmdocno
 
               AND mmbnseq = g_mmbn_d[l_ac].mmbnseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbm_m.mmbmdocno
               LET gs_keys[2] = g_mmbn_d[g_detail_idx].mmbnseq
               CALL ammt423_insert_b('mmbn_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmbn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmbn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt423_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmbn_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmbn_d.deleteElement(l_ac)
               NEXT FIELD mmbnseq
            END IF
         
            IF g_mmbn_d[l_ac].mmbnseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmbn_t
                WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbm_m.mmbmdocno AND
 
                      mmbnseq = g_mmbn_d_t.mmbnseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmbn_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt423_bcl
               LET l_count = g_mmbn_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbm_m.mmbmdocno
               LET gs_keys[2] = g_mmbn_d[g_detail_idx].mmbnseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammt423_delete_b('mmbn_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD mmbn006
            
            #add-point:AFTER FIELD mmbn006
            {<point name="input.a.page1.mmbn006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn006
            #add-point:BEFORE FIELD mmbn006
            {<point name="input.b.page1.mmbn006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbn006
            #add-point:ON CHANGE mmbn006
            {<point name="input.g.page1.mmbn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn001
            
            #add-point:AFTER FIELD mmbn001
            {<point name="input.a.page1.mmbn001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn001
            #add-point:BEFORE FIELD mmbn001
            {<point name="input.b.page1.mmbn001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbn001
            #add-point:ON CHANGE mmbn001
            {<point name="input.g.page1.mmbn001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn004
            #add-point:BEFORE FIELD mmbn004
            {<point name="input.b.page1.mmbn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn004
            
            #add-point:AFTER FIELD mmbn004
            {<point name="input.a.page1.mmbn004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbn004
            #add-point:ON CHANGE mmbn004
            {<point name="input.g.page1.mmbn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbn005
            
            #add-point:AFTER FIELD mmbn005
            {<point name="input.a.page1.mmbn005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbn005
            #add-point:BEFORE FIELD mmbn005
            {<point name="input.b.page1.mmbn005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbn005
            #add-point:ON CHANGE mmbn005
            {<point name="input.g.page1.mmbn005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmbn006
         ON ACTION controlp INFIELD mmbn006
            #add-point:ON ACTION controlp INFIELD mmbn006
            {<point name="input.c.page1.mmbn006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmbn001
         ON ACTION controlp INFIELD mmbn001
            #add-point:ON ACTION controlp INFIELD mmbn001
            {<point name="input.c.page1.mmbn001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmbn004
         ON ACTION controlp INFIELD mmbn004
            #add-point:ON ACTION controlp INFIELD mmbn004
            {<point name="input.c.page1.mmbn004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmbn005
         ON ACTION controlp INFIELD mmbn005
            #add-point:ON ACTION controlp INFIELD mmbn005
            {<point name="input.c.page1.mmbn005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmbn_d[l_ac].* = g_mmbn_d_t.*
               CLOSE ammt423_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmbn_d[l_ac].mmbnseq,-263,1)
               LET g_mmbn_d[l_ac].* = g_mmbn_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE mmbn_t SET (mmbndocno,mmbnseq,mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005) = (g_mmbm_m.mmbmdocno, 
                   g_mmbn_d[l_ac].mmbnseq,g_mmbn_d[l_ac].mmbn006,g_mmbn_d[l_ac].mmbn001,g_mmbn_d[l_ac].mmbn002, 
                   g_mmbn_d[l_ac].mmbn003,g_mmbn_d[l_ac].mmbn004,g_mmbn_d[l_ac].mmbn005)
                WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbm_m.mmbmdocno 
 
                  AND mmbnseq = g_mmbn_d_t.mmbnseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmbn_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmbn_d[l_ac].* = g_mmbn_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmbn_t",SQLCA.sqlcode,1)
                     LET g_mmbn_d[l_ac].* = g_mmbn_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbm_m.mmbmdocno
               LET gs_keys_bak[1] = g_mmbmdocno_t
               LET gs_keys[2] = g_mmbn_d[g_detail_idx].mmbnseq
               LET gs_keys_bak[2] = g_mmbn_d_t.mmbnseq
               CALL ammt423_update_b('mmbn_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbm_m),util.JSON.stringify(g_mmbn_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbm_m),util.JSON.stringify(g_mmbn_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammt423_unlock_b("mmbn_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmbn_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmbn_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="ammt423.input.head" ver="5" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt,g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbmdocno
            #add-point:BEFORE FIELD mmbmdocno
            {<point name="input.b.mmbmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmdocno
            
            #add-point:AFTER FIELD mmbmdocno
            {<point name="input.a.mmbmdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbmdocno
            #add-point:ON CHANGE mmbmdocno
            {<point name="input.g.mmbmdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbmdocdt
            #add-point:BEFORE FIELD mmbmdocdt
            {<point name="input.b.mmbmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbmdocdt
            
            #add-point:AFTER FIELD mmbmdocdt
            {<point name="input.a.mmbmdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbmdocdt
            #add-point:ON CHANGE mmbmdocdt
            {<point name="input.g.mmbmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm004
            
            #add-point:AFTER FIELD mmbm004
            {<point name="input.a.mmbm004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm004
            #add-point:BEFORE FIELD mmbm004
            {<point name="input.b.mmbm004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbm004
            #add-point:ON CHANGE mmbm004
            {<point name="input.g.mmbm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm002
            
            #add-point:AFTER FIELD mmbm002
            {<point name="input.a.mmbm002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm002
            #add-point:BEFORE FIELD mmbm002
            {<point name="input.b.mmbm002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbm002
            #add-point:ON CHANGE mmbm002
            {<point name="input.g.mmbm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbm001
            
            #add-point:AFTER FIELD mmbm001
            {<point name="input.a.mmbm001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbm001
            #add-point:BEFORE FIELD mmbm001
            {<point name="input.b.mmbm001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbm001
            #add-point:ON CHANGE mmbm001
            {<point name="input.g.mmbm001" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmbmdocno
         ON ACTION controlp INFIELD mmbmdocno
            #add-point:ON ACTION controlp INFIELD mmbmdocno
            {<point name="input.c.mmbmdocno" />}
            #END add-point
 
         #Ctrlp:input.c.mmbmdocdt
         ON ACTION controlp INFIELD mmbmdocdt
            #add-point:ON ACTION controlp INFIELD mmbmdocdt
            {<point name="input.c.mmbmdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.mmbm004
         ON ACTION controlp INFIELD mmbm004
            #add-point:ON ACTION controlp INFIELD mmbm004
            {<point name="input.c.mmbm004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbm002
         ON ACTION controlp INFIELD mmbm002
            #add-point:ON ACTION controlp INFIELD mmbm002
            {<point name="input.c.mmbm002" />}
            #END add-point
 
         #Ctrlp:input.c.mmbm001
         ON ACTION controlp INFIELD mmbm001
            #add-point:ON ACTION controlp INFIELD mmbm001
            {<point name="input.c.mmbm001" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmbm_m.mmbmdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmbm_t (mmbment,mmbmdocno,mmbmdocdt,mmbm004,mmbm002,mmbm001,mmbm003,mmbmstus, 
                   mmbmownid,mmbmowndp,mmbmcrtid,mmbmcrtdp,mmbmcrtdt,mmbmcnfid,mmbmcnfdt)
               VALUES (g_enterprise,g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt,g_mmbm_m.mmbm004,g_mmbm_m.mmbm002, 
                   g_mmbm_m.mmbm001,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid,g_mmbm_m.mmbmowndp, 
                   g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmbm_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt423_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmbm_t SET (mmbmdocno,mmbmdocdt,mmbm004,mmbm002,mmbm001,mmbm003,mmbmstus,mmbmownid, 
                   mmbmowndp,mmbmcrtid,mmbmcrtdp,mmbmcrtdt,mmbmcnfid,mmbmcnfdt) = (g_mmbm_m.mmbmdocno, 
                   g_mmbm_m.mmbmdocdt,g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001,g_mmbm_m.mmbm003, 
                   g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid,g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp, 
                   g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt)
                WHERE mmbment = g_enterprise AND mmbmdocno = g_mmbmdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmbm_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_mmbm_m_t)
               LET g_log2 = util.JSON.stringify(g_mmbm_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="ammt423.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbmdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmbnseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="ammt423.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION ammt423_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmbn_d.clear()   
 
 
   INITIALIZE g_mmbm_m.* LIKE mmbm_t.*             #DEFAULT 設定
   
   LET g_mmbmdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmbm_m.mmbmownid = g_user
      LET g_mmbm_m.mmbmowndp = g_dept
      LET g_mmbm_m.mmbmcrtid = g_user
      LET g_mmbm_m.mmbmcrtdp = g_dept 
      LET g_mmbm_m.mmbmcrtdt = cl_get_current()
      LET g_mmbm_m.mmbmmodid = ""
      LET g_mmbm_m.mmbmmoddt = ""
      LET g_mmbm_m.mmbmstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmbm_m.mmbm003 = "N"
      LET g_mmbm_m.mmbmstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammt423_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbm_m.* = g_mmbm_m_t.*
         CALL ammt423_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmbn_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
   
   LET g_wc = g_wc,  
              " OR ( mmbment = '" ||g_enterprise|| "' AND",
              " mmbmdocno = '", g_mmbm_m.mmbmdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE ammt423_cl
   
END FUNCTION
]]>
</section>
  <section id="ammt423.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt423_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmbn_t
                  (mmbnent,
                   mmbndocno,
                   mmbnseq
                   ,mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmbn_d[g_detail_idx].mmbn006,g_mmbn_d[g_detail_idx].mmbn001,g_mmbn_d[g_detail_idx].mmbn002, 
                       g_mmbn_d[g_detail_idx].mmbn003,g_mmbn_d[g_detail_idx].mmbn004,g_mmbn_d[g_detail_idx].mmbn005) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="ammt423.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt423_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammt423_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmbn_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt423_bcl USING g_enterprise,
                                       g_mmbm_m.mmbmdocno,g_mmbn_d[g_detail_idx].mmbnseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammt423_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="ammt423.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmbmdocno,mmbmdocdt,mmbm004,'',mmbm002,'',mmbm001,'',mmbm003,mmbmstus, 
       mmbmownid,'',mmbmowndp,'',mmbmcrtid,'',mmbmcrtdp,'',mmbmcrtdt,mmbmmodid,'',mmbmmoddt,mmbmcnfid, 
       '',mmbmcnfdt", 
                      " FROM mmbm_t",
                      " WHERE mmbment= ? AND mmbmdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt423_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmbmdocno,mmbmdocdt,mmbm004,mmbm002,mmbm001,mmbm003,mmbmstus,mmbmownid, 
       mmbmowndp,mmbmcrtid,mmbmcrtdp,mmbmcrtdt,mmbmmodid,mmbmmoddt,mmbmcnfid,mmbmcnfdt,t1.ooefl003 , 
       t2.oocql004 ,t3.oocql004 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.oofa011", 

               " FROM mmbm_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbm004 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2055' AND t2.oocql002=mmbm002 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2056' AND t3.oocql002=mmbm001 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=mmbmownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=mmbmowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=mmbmcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=mmbmcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmbmmodid  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=mmbmcnfid  ",
 
               " WHERE mmbment = '" ||g_enterprise|| "' AND mmbmdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammt423_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt423 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt423_init()   
 
      #進入選單 Menu (="N")
      CALL ammt423_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt423
      
   END IF 
   
   CLOSE ammt423_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="ammt423.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION ammt423_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmbm_m.mmbmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
   CALL s_transaction_begin()
   
   OPEN ammt423_cl USING g_enterprise,g_mmbm_m.mmbmdocno
   IF STATUS THEN
      CALL cl_err("OPEN ammt423_cl:", STATUS, 1)
      CLOSE ammt423_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt423_master_referesh USING g_mmbm_m.mmbmdocno INTO g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt, 
       g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid, 
       g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmmodid, 
       g_mmbm_m.mmbmmoddt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt,g_mmbm_m.mmbm004_desc,g_mmbm_m.mmbm002_desc, 
       g_mmbm_m.mmbm001_desc,g_mmbm_m.mmbmownid_desc,g_mmbm_m.mmbmowndp_desc,g_mmbm_m.mmbmcrtid_desc, 
       g_mmbm_m.mmbmcrtdp_desc,g_mmbm_m.mmbmmodid_desc,g_mmbm_m.mmbmcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbm_m.mmbmdocno,SQLCA.sqlcode,0)
      CLOSE ammt423_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammt423_show()
   WHILE TRUE
      LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbm_m.mmbmmodid = g_user 
LET g_mmbm_m.mmbmmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammt423_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbm_m.* = g_mmbm_m_t.*
         CALL ammt423_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmbm_t SET (mmbmmodid,mmbmmoddt) = (g_mmbm_m.mmbmmodid,g_mmbm_m.mmbmmoddt)
       WHERE mmbment = g_enterprise AND mmbmdocno = g_mmbmdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_mmbm_m.mmbmdocno != g_mmbmdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmbn_t SET mmbndocno = g_mmbm_m.mmbmdocno
 
          WHERE mmbnent = g_enterprise AND mmbndocno = g_mmbmdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmbn_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmbn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmbm_m.mmbmdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammt423_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmbm_m.mmbmdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="ammt423.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="ammt423.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="ammt423.query" ver="4" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt423_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmbn_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammt423_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammt423_browser_fill("")
      CALL ammt423_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt423_filter_show('mmbmdocno')
   CALL ammt423_filter_show('mmbmdocdt')
   CALL ammt423_filter_show('mmbm004')
   CALL ammt423_filter_show('mmbm002')
   CALL ammt423_filter_show('mmbm001')
   CALL ammt423_filter_show('mmbm003')
   CALL ammt423_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammt423_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="ammt423.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION ammt423_reproduce()
   DEFINE l_newno     LIKE mmbm_t.mmbmdocno 
   DEFINE l_oldno     LIKE mmbm_t.mmbmdocno 
 
   DEFINE l_master    RECORD LIKE mmbm_t.*
   DEFINE l_detail    RECORD LIKE mmbn_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmbm_m.mmbmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmbmdocno_t = g_mmbm_m.mmbmdocno
 
    
   LET g_mmbm_m.mmbmdocno = ""
 
    
   CALL ammt423_set_entry('a')
   CALL ammt423_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmbm_m.mmbmownid = g_user
      LET g_mmbm_m.mmbmowndp = g_dept
      LET g_mmbm_m.mmbmcrtid = g_user
      LET g_mmbm_m.mmbmcrtdp = g_dept 
      LET g_mmbm_m.mmbmcrtdt = cl_get_current()
      LET g_mmbm_m.mmbmmodid = ""
      LET g_mmbm_m.mmbmmoddt = ""
      LET g_mmbm_m.mmbmstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammt423_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmbmdocno = '", g_mmbm_m.mmbmdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt423.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt423_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbmdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt423.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt423_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="ammt423.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt423_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbmdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="ammt423.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt423_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="ammt423.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammt423_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbm_m.mmbmdocno
   LET g_pk_array[1].column = 'mmbmdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="ammt423.show" ver="8" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt423_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt423_b_fill() #單身填充
      CALL ammt423_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmbm_m.mmbmownid_desc = cl_get_username(g_mmbm_m.mmbmownid)
      #LET g_mmbm_m.mmbmowndp_desc = cl_get_deptname(g_mmbm_m.mmbmowndp)
      #LET g_mmbm_m.mmbmcrtid_desc = cl_get_username(g_mmbm_m.mmbmcrtid)
      #LET g_mmbm_m.mmbmcrtdp_desc = cl_get_deptname(g_mmbm_m.mmbmcrtdp)
      #LET g_mmbm_m.mmbmmodid_desc = cl_get_username(g_mmbm_m.mmbmmodid)
      #LET g_mmbm_m.mmbmcnfid_desc = cl_get_deptname(g_mmbm_m.mmbmcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammt423_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt,g_mmbm_m.mmbm004,g_mmbm_m.mmbm004_desc,g_mmbm_m.mmbm002, 
       g_mmbm_m.mmbm002_desc,g_mmbm_m.mmbm001,g_mmbm_m.mmbm001_desc,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus, 
       g_mmbm_m.mmbmownid,g_mmbm_m.mmbmownid_desc,g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmowndp_desc,g_mmbm_m.mmbmcrtid, 
       g_mmbm_m.mmbmcrtid_desc,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdp_desc,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmmodid, 
       g_mmbm_m.mmbmmodid_desc,g_mmbm_m.mmbmmoddt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfid_desc,g_mmbm_m.mmbmcnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmbm_m.mmbmstus
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmbn_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt423_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="ammt423.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="ammt423.state_change" ver="5" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammt423_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbm_m.mmbmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbm_m.mmbmstus
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "Y" 
      AND lc_state <> "N"
      AND lc_state <> "X"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmbm_t SET mmbmstus = lc_state 
    WHERE mmbment = g_enterprise AND mmbmdocno = g_mmbm_m.mmbmdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
      LET g_mmbm_m.mmbmstus = lc_state
      DISPLAY BY NAME g_mmbm_m.mmbmstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="ammt423.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt423_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbmdocno = g_mmbm_m.mmbmdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="ammt423.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammt423_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="ammt423.ui_dialog" ver="12" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION ammt423_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt423_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammt423_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmbmdocno = g_mmbmdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt423_fetch('') # reload data
               LET l_ac = 1
               CALL ammt423_ui_detailshow() #Setting the current row 
      
               CALL ammt423_idx_chk()
               #NEXT FIELD mmbnseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmbn_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammt423_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammt423_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt423_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt423_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt423_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt423_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammt423_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammt423_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammt423_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammt423_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammt423_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt423_idx_chk()
            
         ON ACTION previous
            CALL ammt423_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt423_idx_chk()
            
         ON ACTION jump
            CALL ammt423_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt423_idx_chk()
            
         ON ACTION next
            CALL ammt423_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt423_idx_chk()
            
         ON ACTION last
            CALL ammt423_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt423_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmbnseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt423_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt423_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION batch_production
            LET g_action_choice="batch_production"
            IF cl_auth_chk_act("batch_production") THEN
               
               #add-point:ON ACTION batch_production
               {<point name="menu.batch_production" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt423_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt423_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt423_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammt423_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt423_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt423_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_mmbm_m.mmbmdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="ammt423.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt423_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmbm_m.mmbmdocno = g_browser[g_current_idx].b_mmbmdocno   
 
   EXECUTE ammt423_master_referesh USING g_mmbm_m.mmbmdocno INTO g_mmbm_m.mmbmdocno,g_mmbm_m.mmbmdocdt, 
       g_mmbm_m.mmbm004,g_mmbm_m.mmbm002,g_mmbm_m.mmbm001,g_mmbm_m.mmbm003,g_mmbm_m.mmbmstus,g_mmbm_m.mmbmownid, 
       g_mmbm_m.mmbmowndp,g_mmbm_m.mmbmcrtid,g_mmbm_m.mmbmcrtdp,g_mmbm_m.mmbmcrtdt,g_mmbm_m.mmbmmodid, 
       g_mmbm_m.mmbmmoddt,g_mmbm_m.mmbmcnfid,g_mmbm_m.mmbmcnfdt,g_mmbm_m.mmbm004_desc,g_mmbm_m.mmbm002_desc, 
       g_mmbm_m.mmbm001_desc,g_mmbm_m.mmbmownid_desc,g_mmbm_m.mmbmowndp_desc,g_mmbm_m.mmbmcrtid_desc, 
       g_mmbm_m.mmbmcrtdp_desc,g_mmbm_m.mmbmmodid_desc,g_mmbm_m.mmbmcnfid_desc
   CALL ammt423_show()
   
END FUNCTION
]]>
</section>
  <section id="ammt423.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt423_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt423_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="ammt423.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt423_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmbn_t 
         SET (mmbndocno,
              mmbnseq
              ,mmbn006,mmbn001,mmbn002,mmbn003,mmbn004,mmbn005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmbn_d[g_detail_idx].mmbn006,g_mmbn_d[g_detail_idx].mmbn001,g_mmbn_d[g_detail_idx].mmbn002, 
                  g_mmbn_d[g_detail_idx].mmbn003,g_mmbn_d[g_detail_idx].mmbn004,g_mmbn_d[g_detail_idx].mmbn005)  

         WHERE mmbnent = g_enterprise AND mmbndocno = ps_keys_bak[1] AND mmbnseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmbn_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmbn_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>