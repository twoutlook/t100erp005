<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ammm356" std_prog="ammm356" erpver="1.0" module="AMM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.mmbt001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '3'
            CALL q_mmbt001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbt001  #顯示到畫面上

            NEXT FIELD mmbt001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbt004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.mmbt005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbt005  #顯示到畫面上

            NEXT FIELD mmbt005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbt007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbt007  #顯示到畫面上

            NEXT FIELD mmbt007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcnfid  #顯示到畫面上

            NEXT FIELD mmbtcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcrtdp  #顯示到畫面上

            NEXT FIELD mmbtcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtcrtid  #顯示到畫面上

            NEXT FIELD mmbtcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtmodid  #顯示到畫面上

            NEXT FIELD mmbtmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtowndp  #顯示到畫面上

            NEXT FIELD mmbtowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtownid  #顯示到畫面上

            NEXT FIELD mmbtownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbtunit  #顯示到畫面上

            NEXT FIELD mmbtunit                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbx004  #顯示到畫面上

            NEXT FIELD mmbx004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mmbx006" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbx006  #顯示到畫面上

            NEXT FIELD mmbx006                     #返回原欄位

]]>
  </point>
  <point name="input.a.mmbt001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbt_t WHERE "||"mmbtent = '" ||g_enterprise|| "' AND "||"mmbt001 = '"||g_mmbt_m.mmbt001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.mmbt004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           
]]>
  </point>
  <point name="input.a.mmbt007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[     
           
]]>
  </point>
  <point name="input.a.mmbtcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcnfid_desc
]]>
  </point>
  <point name="input.a.mmbtcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcrtdp_desc
]]>
  </point>
  <point name="input.a.mmbtcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtcrtid_desc
]]>
  </point>
  <point name="input.a.mmbtmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtmodid_desc
]]>
  </point>
  <point name="input.a.mmbtowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtowndp_desc
]]>
  </point>
  <point name="input.a.mmbtownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbtownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbtownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbtownid_desc
]]>
  </point>
  <point name="input.a.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
]]>
  </point>
  <point name="input.a.page1.mmcg003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) AND NOT cl_null(g_mmcg_d[l_ac].mmcg003) AND NOT cl_null(g_mmcg_d[l_ac].mmcg004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg_d[l_ac].mmcg003 != g_mmcg_d_t.mmcg003 OR g_mmcg_d[l_ac].mmcg004 != g_mmcg_d_t.mmcg004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcg_t WHERE "||"mmcgent = '" ||g_enterprise|| "' AND "||"mmcg001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcg003 = '"||g_mmcg_d[l_ac].mmcg003 ||"' AND "|| "mmcg004 = '"||g_mmcg_d[l_ac].mmcg004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.mmcg004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) AND NOT cl_null(g_mmcg_d[l_ac].mmcg003) AND NOT cl_null(g_mmcg_d[l_ac].mmcg004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg_d[l_ac].mmcg003 != g_mmcg_d_t.mmcg003 OR g_mmcg_d[l_ac].mmcg004 != g_mmcg_d_t.mmcg004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcg_t WHERE "||"mmcgent = '" ||g_enterprise|| "' AND "||"mmcg001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmcg003 = '"||g_mmcg_d[l_ac].mmcg003 ||"' AND "|| "mmcg004 = '"||g_mmcg_d[l_ac].mmcg004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD mmcg004
                  END IF
               END IF
              
               LET g_mmcg_d[l_ac].mmcg004_desc = ''
               IF NOT ammm356_mmcg004_chk(g_mmcg_d[l_ac].mmcg004) THEN
                  LET g_mmcg_d[l_ac].mmcg004 = g_mmcg_d_t.mmcg004
                  LET g_mmcg_d[l_ac].mmcg004_desc= ammm356_mmcg004_ref(g_mmbt_m.mmbt007,g_mmcg_d[l_ac].mmcg004)
                  NEXT FIELD mmcg004
               END IF
               LET g_mmcg_d[l_ac].mmcg004_desc= ammm356_mmcg004_ref(g_mmbt_m.mmbt007,g_mmcg_d[l_ac].mmcg004)              
            END IF

]]>
  </point>
  <point name="input.a.page2.mmbx001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmbx001 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmbx004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg2_d[g_detail_idx].mmbx001 != g_mmcg2_d_t.mmbx001 OR g_mmcg2_d[g_detail_idx].mmbx004 != g_mmcg2_d_t.mmbx004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbx_t WHERE "||"mmbxent = '" ||g_enterprise|| "' AND "||"mmbx001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmbx004 = '"||g_mmcg2_d[g_detail_idx].mmbx001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg2_d[l_ac].mmbx004) THEN
               IF NOT ammm356_mmbx004_chk(g_enterprise,g_mmcg2_d[l_ac].mmbx004) THEN
                  LET g_mmcg2_d[l_ac].mmbx004 = g_mmcg2_d_t.mmbx004
                  NEXT FIELD mmbx004
               END IF
            END IF
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) AND NOT cl_null(g_mmcg2_d[l_ac].mmbx004)  THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg2_d[l_ac].mmbx004 != g_mmcg2_d_t.mmbx004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbx_t WHERE "||"mmbxent = '" ||g_enterprise|| "' AND "||"mmbx001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmbx004 = '"||g_mmcg2_d[l_ac].mmbx004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
]]>
  </point>
  <point name="input.a.page2.mmbx006" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            
            
]]>
  </point>
  <point name="input.a.page2.mmbxseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
        

]]>
  </point>
  <point name="input.a.page2.mmch003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmch003 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmch004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg2_d[g_detail_idx].mmch003 != g_mmcg2_d_t.mmch003 OR g_mmcg2_d[g_detail_idx].mmch004 != g_mmcg2_d_t.mmch004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmch_t WHERE "||"mmchent = '" ||g_enterprise|| "' AND "||"mmch001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmch003 = '"||g_mmcg2_d[g_detail_idx].mmch003 ||"' AND "|| "mmch004 = '"||g_mmcg2_d[g_detail_idx].mmch004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mmch004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mmbt_m.mmbt001 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmch003 IS NOT NULL AND g_mmcg2_d[g_detail_idx].mmch004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg2_d[g_detail_idx].mmch003 != g_mmcg2_d_t.mmch003 OR g_mmcg2_d[g_detail_idx].mmch004 != g_mmcg2_d_t.mmch004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmch_t WHERE "||"mmchent = '" ||g_enterprise|| "' AND "||"mmch001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmch003 = '"||g_mmcg2_d[g_detail_idx].mmch003 ||"' AND "|| "mmch004 = '"||g_mmcg2_d[g_detail_idx].mmch004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.mmch003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) AND NOT cl_null(g_mmcg3_d[l_ac].mmch003) AND NOT cl_null(g_mmcg3_d[l_ac].mmch004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg3_d[l_ac].mmch003 != g_mmcg3_d_t.mmch003 OR g_mmcg3_d[l_ac].mmch004 != g_mmcg3_d_t.mmch004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmch_t WHERE "||"mmchent = '" ||g_enterprise|| "' AND "||"mmch001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmch003 = '"||g_mmcg3_d[l_ac].mmch003 ||"' AND "|| "mmch004 = '"||g_mmcg3_d[l_ac].mmch004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            

]]>
  </point>
  <point name="input.a.page3.mmch004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbt_m.mmbt001) AND NOT cl_null(g_mmcg3_d[l_ac].mmch003) AND NOT cl_null(g_mmcg3_d[l_ac].mmch004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_mmbt_m.mmbt001 != g_mmbt001_t OR g_mmcg3_d[l_ac].mmch003 != g_mmcg3_d_t.mmch003 OR g_mmcg3_d[l_ac].mmch004 != g_mmcg3_d_t.mmch004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmch_t WHERE "||"mmchent = '" ||g_enterprise|| "' AND "||"mmch001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmch003 = '"||g_mmcg3_d[l_ac].mmch003 ||"' AND "|| "mmch004 = '"||g_mmcg3_d[l_ac].mmch004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               LET g_mmcg3_d[l_ac].mmch004_desc = ''
               IF NOT ammm356_mmch004_chk(g_mmcg3_d[l_ac].mmch004) THEN
                  LET g_mmcg3_d[l_ac].mmch004 = g_mmcg3_d_t.mmch004
                  LET g_mmcg3_d[l_ac].mmch004_desc = ammm356_mmch004_ref(g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004)
                  NEXT FIELD mmch004
               END IF
               LET g_mmcg3_d[l_ac].mmch004_desc = ammm356_mmch004_ref(g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004) 
            END IF

]]>
  </point>
  <point name="input.c.mmbt004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
          

]]>
  </point>
  <point name="input.c.mmbt005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbt_m.mmbt005             #給予default值

            #給予arg

            CALL q_mman001()                                #呼叫開窗

            LET g_mmbt_m.mmbt005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbt_m.mmbt005 TO mmbt005              #顯示到畫面上

            NEXT FIELD mmbt005                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmbt007" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbt_m.mmbt007             #給予default值

            #給予arg

            CALL q_mman001()                                #呼叫開窗

            LET g_mmbt_m.mmbt007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbt_m.mmbt007 TO mmbt007              #顯示到畫面上

            NEXT FIELD mmbt007                          #返回原欄位

]]>
  </point>
  <point name="input.c.mmbtunit" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.page2.mmbx004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.page2.mmbx006" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            
]]>
  </point>
  <point name="function.ammm356_mmbx004_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 營運據點檢查
PUBLIC FUNCTION ammm356_mmbx004_chk(p_ooeaent,p_ooea001)
   DEFINE p_ooeaent   LIKE ooea_t.ooeaent
   DEFINE p_ooea001   LIKE ooea_t.ooea001
   DEFINE l_ooeastus  LIKE ooea_t.ooeastus
   
   SELECT ooeastus INTO l_ooeastus FROM ooea_t 
    WHERE ooeaent = p_ooeaent AND ooea001 = p_ooea001  AND ooea004 = 'Y'
    
   IF status = 100 THEN
      CALL cl_err('','aoo-00163',0)
      RETURN FALSE
   END IF  
   IF l_ooeastus = 'N' THEN 
      CALL cl_err('','aoo-00012',0)
      RETURN FALSE
   END IF
   RETURN TRUE    
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmbt005_chk" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 卡種檢查
PUBLIC FUNCTION ammm356_mmbt005_chk(p_mmanent,p_mman001)
   DEFINE  p_mmanent  LIKE mman_t.mmanent  #企业编号
   DEFINE  p_mman001  LIKE mman_t.mman001  #卡种
   DEFINE  l_mmanstus LIKE mman_t.mmanstus #有效码
   DEFINE  l_errmsg   STRING               #报错

   SELECT mmanstus INTO l_mmanstus FROM mman_t 
    WHERE mmanent = p_mmanent AND mman001 = p_mman001

   IF status = 100 THEN
      CALL cl_err('','amm-00003',0)
      RETURN FALSE
   END IF 
   IF l_mmanstus = 'N' THEN
      CALL cl_err('','amm-00004',0)
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmcg004_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ chk 規則編號
PUBLIC FUNCTION ammm356_mmcg004_chk(p_mmcg004)
DEFINE p_mmcg004  LIKE mmcg_t.mmcg004
DEFINE l_oocqstus LIKE oocq_t.oocqstus
DEFINE l_ooiastus LIKE ooia_t.ooiastus
DEFINE l_imaastus LIKE imaa_t.imaastus
DEFINE l_rtaxstus LIKE rtax_t.rtaxstus
DEFINE l_rtax005  LIKE rtax_t.rtax005
DEFINE l_n        LIKE type_t.num5

    CASE g_mmbt_m.mmbt007
       WHEN  '1'
          #會員等級
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2024' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','amm-00076',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','amm-00077',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  '2' 
          #會員類型
          
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2025' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','amm-00074',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','amm-00075',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '3'
          #款別類型
          
          SELECT ooiastus INTO l_ooiastus FROM ooia_t WHERE ooiaent = g_enterprise AND ooia001 = p_mmcg004
          IF STATUS = 100 OR cl_null(l_ooiastus) THEN
             CALL cl_err('','aoo-00195',1)
             RETURN FALSE
          ELSE
             IF l_ooiastus = 'N' THEN
                CALL cl_err('','aoo-00196',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '4'
          #商品編號
          SELECT imaastus INTO l_imaastus FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = p_mmcg004
           IF STATUS = 100 OR cl_null(l_imaastus) THEN
             CALL cl_err('','art-00016',1)
             RETURN FALSE
          ELSE
             IF l_imaastus = 'N' THEN
                CALL cl_err('','art-00050',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '5'
          #商品分類
           SELECT rtaxstus ,rtax005 INTO l_rtaxstus,l_rtax005 FROM rtax_t WHERE rtaxent = g_enterprise AND rtax001 = p_mmcg004
           IF STATUS = 100 OR cl_null(l_rtaxstus) THEN
             CALL cl_err('','art-00059',1)
             RETURN FALSE
          ELSE
             IF l_rtaxstus = 'N' THEN
                CALL cl_err('','art-00048',1)
                RETURN FALSE
             END IF
             IF l_rtax005 <> 0 THEN
                CALL cl_err('','art-00003',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '6'
          #商品屬性-產地分類
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2000' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00077',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00078',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
          
       WHEN  '7'
          #商品屬性-價格帶
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2001' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00079',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00080',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '8'
          #商品屬性-品牌
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2002' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00081',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00082',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '9'
          #商品屬性-系列
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2003' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00083',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00084',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'A'
          #商品屬性-型別
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2004' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00085',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00086',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'B'
          #商品屬性-功能
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2005' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00087',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00088',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'C'
          #商品屬性-其它屬性一
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2006' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00089',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00090',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'D'
          #商品屬性-其它屬性二
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2007' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00091',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00092',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'E'
          #商品屬性-其它屬性三
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2008' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00093',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00094',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'F'
          #商品屬性-其它屬性四
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2009' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00095',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00096',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'G'
          #商品屬性-其它屬性五
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2010' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00097',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00098',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'H'
          #商品屬性-其它屬性六
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2011' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00099',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00100',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'I'
          #商品屬性-其它屬性七
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2012' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00101',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00102',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'J'
          #商品屬性-其它屬性八
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2013' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00103',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00104',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'K'
          #商品屬性-其它屬性九
            SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2014' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00105',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00106',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'L'
          #商品屬性-其它屬性十
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2015' AND oocq002 = p_mmcg004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00107',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00108',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN 'U'
         #庫區類別
         SELECT COUNT(*) INTO l_n FROM gzcb_t WHERE gzcb001 = '6200' AND gzcb002 = p_mmcg004
         IF l_n = 0 THEN
            CALL cl_err('','amm-00114',1)
            RETURN FALSE
         END IF
         RETURN TRUE
       WHEN 'V' 
         #庫區品類(层级未添加）
          SELECT rtaxstus ,rtax005 INTO l_rtaxstus,l_rtax005 FROM rtax_t WHERE rtaxent = g_enterprise AND rtax001 = p_mmcg004
           IF STATUS = 100 OR cl_null(l_rtaxstus) THEN
             CALL cl_err('','art-00059',1)
             RETURN FALSE
          ELSE
             IF l_rtaxstus = 'N' THEN
                CALL cl_err('','art-00048',1)
                RETURN FALSE
             END IF
             IF l_rtax005 <> 0 THEN
                CALL cl_err('','art-00003',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
         
         
    END CASE
    RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmcg004_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#
PUBLIC FUNCTION ammm356_mmcg004_ref(p_mmbt007,p_mmcg004)
DEFINE p_mmbt007       LIKE mmbt_t.mmbt007
DEFINE p_mmcg004       LIKE mmcg_t.mmcg004
DEFINE l_mmcg004_desc  LIKE type_t.chr80

    CASE p_mmbt007
       WHEN  '1' #會員等級
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2024' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang
           
        
       WHEN  '2' #會員類型
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2025' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang
       
       WHEN  '3' #款別類型
          SELECT ooial003 INTO l_mmcg004_desc FROM ooial_t
           WHERE ooialent = g_enterprise AND ooial001 =  p_mmcg004 AND ooial002 = g_dlang
       
       WHEN '4' #商品編號
          SELECT imaal003 INTO l_mmcg004_desc FROM imaal_t
           WHERE imaalent = g_enterprise AND imaal001 = p_mmcg004 AND imaal002 = g_dlang
           
       WHEN '5' #商品分類
           SELECT rtaxl003 INTO l_mmcg004_desc FROM rtaxl_t
            WHERE rtaxlent = g_enterprise AND rtaxl001 = p_mmcg004 AND rtaxl002 = g_dlang 

       WHEN '6' #商品屬性-產地分類
           SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2000' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang
           
       WHEN '7' #商品屬性-價格帶
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2001' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang
           
       WHEN '8' #商品屬性-品牌
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2002' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  

       WHEN '9' #商品屬性-系列
           SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2003' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang   

       WHEN 'A' #商品屬性-型別
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2004' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang 

       WHEN 'B' #商品屬性-功能
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2005' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang 
       
       WHEN 'C' #商品屬性-其它屬性一
         SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2006' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  

       WHEN 'D' #商品屬性-其它屬性二
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2007' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  
   
       WHEN 'E' #商品屬性-其它屬性三
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2008' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  
       WHEN 'F' #商品屬性-其它屬性四
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2009' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  
       WHEN 'G' #商品屬性-其它屬性五
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2010' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  
        
       WHEN 'H' #商品屬性-其它屬性六
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2011' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang  
           
       WHEN 'I' #商品屬性-其它屬性七
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2012' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang   
       WHEN 'J' #商品屬性-其它屬性八
           SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2013' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang           
      
       WHEN 'K' #商品屬性-其它屬性九
           SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2014' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang   

       WHEN 'L' #商品屬性-其它屬性十
          SELECT oocql004 INTO l_mmcg004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2014' AND oocql002 = p_mmcg004 AND oocql003 = g_dlang 
           
       WHEN 'U'
         #庫區類別
           SELECT gzcbl004 INTO l_mmcg004_desc FROM gzcbl_t 
            WHERE gzcbl001 = '6200' AND gzcbl002 = p_mmcg004 AND gzcbl003 =  g_dlang 
       WHEN 'V' 
         #庫區品類 
           SELECT rtaxl003 INTO l_mmcg004_desc FROM rtaxl_t
            WHERE rtaxlent = g_enterprise AND rtaxl001 = p_mmcg004 AND rtaxl002 = g_dlang 
    END CASE 
    RETURN  l_mmcg004_desc   
END FUNCTION]]>
  </point>
  <point name="function.ammm356_set_required_b" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION ammm356_set_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   IF g_mmcg3_d[l_ac].mmch005 = 'Y' THEN
      CALL cl_set_comp_required("mmch006",TRUE)
   END IF
   IF g_mmcg3_d[l_ac].mmch007 = '3' THEN
      CALL cl_set_comp_required("mmch008,mmch009",TRUE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.ammm356_set_no_required_b" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION ammm356_set_no_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmch004_chk" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION ammm356_mmch004_chk(p_mmch004)
DEFINE p_mmch004   LIKE mmch_t.mmch004

DEFINE l_oocqstus LIKE oocq_t.oocqstus
DEFINE l_ooiastus LIKE ooia_t.ooiastus
DEFINE l_imaastus LIKE imaa_t.imaastus
DEFINE l_rtaxstus LIKE rtax_t.rtaxstus
DEFINE l_rtax005  LIKE rtax_t.rtax005
DEFINE l_n        LIKE type_t.num5
DEFINE l_ooeastus LIKE ooea_t.ooeastus
DEFINE l_inaastus LIKE inaa_t.inaastus

    CASE g_mmcg3_d[l_ac].mmch003
       WHEN  '1'
          #會員等級
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2024' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','amm-00076',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','amm-00077',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  '2' 
          #會員類型
          
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2025' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','amm-00074',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','amm-00075',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '3'
          #款別類型
          
          SELECT ooiastus INTO l_ooiastus FROM ooia_t WHERE ooiaent = g_enterprise AND ooia001 = p_mmch004
          IF STATUS = 100 OR cl_null(l_ooiastus) THEN
             CALL cl_err('','aoo-00195',1)
             RETURN FALSE
          ELSE
             IF l_ooiastus = 'N' THEN
                CALL cl_err('','aoo-00196',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '4'
          #商品編號
          SELECT imaastus INTO l_imaastus FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = p_mmch004
           IF STATUS = 100 OR cl_null(l_imaastus) THEN
             CALL cl_err('','art-00016',1)
             RETURN FALSE
          ELSE
             IF l_imaastus = 'N' THEN
                CALL cl_err('','art-00050',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '5'
          #商品分類
           SELECT rtaxstus ,rtax005 INTO l_rtaxstus,l_rtax005 FROM rtax_t WHERE rtaxent = g_enterprise AND rtax001 = p_mmch004
           IF STATUS = 100 OR cl_null(l_rtaxstus) THEN
             CALL cl_err('','art-00059',1)
             RETURN FALSE
          ELSE
             IF l_rtaxstus = 'N' THEN
                CALL cl_err('','art-00048',1)
                RETURN FALSE
             END IF
             IF l_rtax005 <> 0 THEN
                CALL cl_err('','art-00003',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '6'
          #商品屬性-產地分類
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2000' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00077',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00078',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
          
       WHEN  '7'
          #商品屬性-價格帶
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2001' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00079',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00080',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '8'
          #商品屬性-品牌
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2002' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00081',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00082',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  '9'
          #商品屬性-系列
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2003' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00083',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00084',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'A'
          #商品屬性-型別
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2004' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00085',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00086',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'B'
          #商品屬性-功能
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2005' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00087',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00088',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'C'
          #商品屬性-其它屬性一
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2006' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00089',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00090',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'D'
          #商品屬性-其它屬性二
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2007' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00091',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00092',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'E'
          #商品屬性-其它屬性三
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2008' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00093',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00094',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'F'
          #商品屬性-其它屬性四
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2009' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00095',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00096',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'G'
          #商品屬性-其它屬性五
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2010' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00097',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00098',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN  'H'
          #商品屬性-其它屬性六
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2011' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00099',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00100',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'I'
          #商品屬性-其它屬性七
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2012' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00101',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00102',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'J'
          #商品屬性-其它屬性八
           SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2013' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00103',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00104',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'K'
          #商品屬性-其它屬性九
            SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2014' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00105',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00106',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN  'L'
          #商品屬性-其它屬性十
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2015' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err('','art-00107',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','art-00108',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
          
       WHEN 'Q'
         #紀念日
          SELECT oocqstus INTO l_oocqstus FROM oocq_t
           WHERE oocqent =  g_enterprise AND oocq001 = '2050' AND oocq002 = p_mmch004
    
          IF STATUS = 100 OR cl_null(l_oocqstus) THEN
             CALL cl_err_msg('','amm-00121','2050',1)
             RETURN FALSE
          ELSE
             IF l_oocqstus = 'N' THEN
                CALL cl_err('','amm-00117',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
       WHEN 'R'
         #促銷活動檔期
       WHEN 'S'
         #營運據點
         SELECT ooeastus INTO l_ooeastus FROM ooea_t 
          WHERE ooeaent = g_enterprise AND ooea001 =p_mmch004   AND ooea004 = 'Y'
         IF status = 100 THEN
            CALL cl_err('','aoo-00163',0)
            RETURN FALSE
         END IF  
         IF l_ooeastus = 'N' THEN 
            CALL cl_err('','aoo-00012',0)
            RETURN FALSE
         END IF
         RETURN TRUE    
         
       WHEN 'T'
         #庫位編號
         SELECT inaastus INTO l_inaastus FROM inaa_t
          WHERE inaaent = g_enterprise AND inaa001 = p_mmch004 AND inaasite = g_site
         IF status = 100 THEN
            CALL cl_err('','amm-00087',1)
            RETURN FALSE
         ELSE
            IF l_inaastus = 'N' THEN
               CALL cl_err('','amm-00088',1)
               RETURN FALSE
            END IF
         END IF
         RETURN TRUE
       WHEN 'U'
         #庫區類別
         SELECT COUNT(*) INTO l_n FROM gzcb_t WHERE gzcb001 = '6200' AND gzcb002 = p_mmch004
         IF l_n = 0 THEN
            CALL cl_err('','amm-00114',1)
            RETURN FALSE
         END IF
         RETURN TRUE
       WHEN 'V' 
         #庫區品類(层级未添加）
          SELECT rtaxstus ,rtax005 INTO l_rtaxstus,l_rtax005 FROM rtax_t WHERE rtaxent = g_enterprise AND rtax001 = p_mmch004
           IF STATUS = 100 OR cl_null(l_rtaxstus) THEN
             CALL cl_err('','art-00059',1)
             RETURN FALSE
          ELSE
             IF l_rtaxstus = 'N' THEN
                CALL cl_err('','art-00048',1)
                RETURN FALSE
             END IF
             IF l_rtax005 <> 0 THEN
                CALL cl_err('','art-00003',1)
                RETURN FALSE
             END IF
          END IF
          RETURN TRUE
         
         
    END CASE
    RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmch004_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION ammm356_mmch004_ref(p_mmch003,p_mmch004)
DEFINE p_mmch003  LIKE mmch_t.mmch003
DEFINE p_mmch004  LIKE mmch_t.mmch004
DEFINE l_mmch004_desc LIKE type_t.chr80

   CASE p_mmch003
       WHEN  '1' #會員等級
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2024' AND oocql002 = p_mmch004 AND oocql003 = g_dlang
            
       WHEN  '2' #會員類型
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2025' AND oocql002 = p_mmch004 AND oocql003 = g_dlang
       
       WHEN  '3' #款別類型
          SELECT ooial003 INTO l_mmch004_desc FROM ooial_t
           WHERE ooialent = g_enterprise AND ooial001 =  p_mmch004 AND ooial002 = g_dlang
       
       WHEN '4' #商品編號
          SELECT imaal003 INTO l_mmch004_desc FROM imaal_t
           WHERE imaalent = g_enterprise AND imaal001 = p_mmch004 AND imaal002 = g_dlang
           
       WHEN '5' #商品分類
           SELECT rtaxl003 INTO l_mmch004_desc FROM rtaxl_t
            WHERE rtaxlent = g_enterprise AND rtaxl001 = p_mmch004 AND rtaxl002 = g_dlang 

       WHEN '6' #商品屬性-產地分類
           SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2000' AND oocql002 = p_mmch004 AND oocql003 = g_dlang
           
       WHEN '7' #商品屬性-價格帶
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2001' AND oocql002 = p_mmch004 AND oocql003 = g_dlang
           
       WHEN '8' #商品屬性-品牌
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2002' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  

       WHEN '9' #商品屬性-系列
           SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2003' AND oocql002 = p_mmch004 AND oocql003 = g_dlang   

       WHEN 'A' #商品屬性-型別
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2004' AND oocql002 = p_mmch004 AND oocql003 = g_dlang 

       WHEN 'B' #商品屬性-功能
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2005' AND oocql002 = p_mmch004 AND oocql003 = g_dlang 
       
       WHEN 'C' #商品屬性-其它屬性一
         SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2006' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  

       WHEN 'D' #商品屬性-其它屬性二
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2007' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  
   
       WHEN 'E' #商品屬性-其它屬性三
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2008' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  
       WHEN 'F' #商品屬性-其它屬性四
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2009' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  
       WHEN 'G' #商品屬性-其它屬性五
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2010' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  
        
       WHEN 'H' #商品屬性-其它屬性六
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2011' AND oocql002 = p_mmch004 AND oocql003 = g_dlang  
           
       WHEN 'I' #商品屬性-其它屬性七
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2012' AND oocql002 = p_mmch004 AND oocql003 = g_dlang   
       WHEN 'J' #商品屬性-其它屬性八
           SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2013' AND oocql002 = p_mmch004 AND oocql003 = g_dlang           
      
       WHEN 'K' #商品屬性-其它屬性九
           SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2014' AND oocql002 = p_mmch004 AND oocql003 = g_dlang   

       WHEN 'L' #商品屬性-其它屬性十
          SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2014' AND oocql002 = p_mmch004 AND oocql003 = g_dlang 
       
       WHEN 'Q' #紀念日
           SELECT oocql004 INTO l_mmch004_desc FROM oocql_t 
           WHERE oocqlent = g_enterprise AND oocql001 = '2050' AND oocql002 = p_mmch004 AND oocql003 = g_dlang 
           
       WHEN 'R' #促銷活動檔期
       
       WHEN 'S' #營運據點
           SELECT ooefl003 INTO l_mmch004_desc FROM ooefl_t
            WHERE ooeflent = g_enterprise AND ooefl001 = p_mmch004 AND ooefl002 = g_dlang
        
       WHEN 'T' #庫位編號
           SELECT inaa003 INTO l_mmch004_desc FROM inaa_t
            WHERE inaaent = g_enterprise AND inaa001 = p_mmch004 AND inaasite = g_site
       WHEN 'U'
         #庫區類別
           SELECT gzcbl004 INTO  l_mmch004_desc FROM gzcbl_t 
            WHERE gzcbl001 = '6200' AND gzcbl002 = p_mmch004 AND gzcbl003 =  g_dlang 
       WHEN 'V' 
         #庫區品類 
           SELECT rtaxl003 INTO l_mmch004_desc FROM rtaxl_t
            WHERE rtaxlent = g_enterprise AND rtaxl001 = p_mmch004 AND rtaxl002 = g_dlang 
    END CASE
    RETURN  l_mmch004_desc   
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmbtunit_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammm356_mmbtunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbt_m.mmbtunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbt_m.mmbtunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbt_m.mmbtunit_desc
END FUNCTION]]>
  </point>
  <point name="function.ammm356_mmbx004_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammm356_mmbx004_ref()
   LET g_mmcg2_d_t.mmbx004 = g_mmcg2_d[l_ac].mmbx004
   LET g_ref_fields[1] = g_mmcg2_d[l_ac].mmbx004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcg2_d[l_ac].mmbx004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcg2_d[l_ac].mmbx004_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[        LET g_mmcg_d[l_ac].mmcg004_desc = ammm356_mmcg004_ref(g_mmbt_m.mmbt007,g_mmcg_d[l_ac].mmcg004)]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CALL ammm356_mmbx004_ref()]]>
  </point>
  <point name="b_fill3.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET g_mmcg3_d[l_ac].mmch004_desc = ammm356_mmch004_ref(g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004)]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_wc = l_wc CLIPPED," AND mmbt004 = '3' "
   LET g_wc = g_wc CLIPPED," AND mmbt004 = '3' "]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_browser[g_cnt].b_mmbt004 <> '3' THEN
         CONTINUE FOREACH
      END IF]]>
  </point>
  <point name="construct.a.mmbt015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="construct.a.mmbt016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.b.mmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="construct.b.mmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '3' TO mmbt004
            NEXT FIELD mmbt001]]>
  </point>
  <point name="construct.c.page1.mmcg004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcg004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcg004  #顯示到畫面上

            NEXT FIELD mmcg004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.mmch004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmch004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmch004  #顯示到畫面上

            NEXT FIELD mmch004                     #返回原欄位

]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '3' TO mmbt004]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="filter.cs_ctrl" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY '3' TO b_mmbt004
         BEFORE FIELD b_mmbt004
            NEXT FIELD b_mmbt005 
            
            AFTER FIELD b_mmbt016
                 CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
                 IF NOT cl_null(ls_result) THEN
                   IF NOT cl_chk_date_symbol(ls_result) THEN
                      LET ls_result = cl_add_date_extra_cond(ls_result)
                   END IF
                 END IF
                 CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   DEFINE ls_result   STRING ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE comb_value     STRING,
          comb_item      STRING ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('mmbt003','6046')
   CALL cl_set_combo_scc('b_mmbt004','6516')
   CALL cl_set_combo_scc_part('b_mmbt007','6517',"0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,U,V")
   CALL cl_set_combo_scc_part('b_mmbt008','6517',"0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,U,V")
   
   CALL cl_set_combo_scc_part('mmbt007','6517',"0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,U,V")
   CALL cl_set_combo_scc_part('mmbt008','6517',"0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,U,V")
   CALL cl_set_combo_scc_part('mmch003','6517',"1,2,3,Q,R,T,U,V")
   CALL cl_set_combo_scc('mmch007','6518')
   CALL cl_set_combo_scc('mmch015','6520')
   CALL cl_set_combo_scc('mmch016','30')
   CALL cl_set_combo_scc('mmch015_1','6520')
   CALL cl_set_combo_scc('mmch016_1','30')]]>
  </point>
  <point name="input.a.mmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt005) THEN
              IF NOT ammm356_mmbt005_chk(g_enterprise,g_mmbt_m.mmbt005) THEN
                 LET g_mmbt_m.mmbt005 = g_mmbt_m_t.mmbt005
                 NEXT FIELD mmbt005
              END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmbt_m.mmbt005
            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmbt_m.mmbt005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmbt_m.mmbt005_desc]]>
  </point>
  <point name="input.a.mmbt014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt014) THEN
               IF g_mmbt_m.mmbt015 <  g_mmbt_m.mmbt014 THEN
                  CALL cl_err('','art-00020',0)
                  NEXT FIELD mmbt014
               END IF
               SELECT COUNT(*) INTO l_n FROM mmch_t
                WHERE mmch011 >g_mmbt_m.mmbt014 AND mmchent = g_enterprise 
                  AND mmch001 = g_mmbt_m.mmbt001
               IF l_n > 0 THEN
                  CALL cl_err('','amm-00065',0)
                  NEXT FIELD mmbt014
               END IF
            END IF]]>
  </point>
  <point name="input.a.mmbt015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt015) THEN
               IF g_mmbt_m.mmbt015 <  g_mmbt_m.mmbt014 THEN
                  CALL cl_err('','art-00020',0)
                  NEXT FIELD mmbt015
               END IF
               SELECT COUNT(*) INTO l_n FROM mmch_t
                WHERE mmch012 <g_mmbt_m.mmbt015 AND mmchent = g_enterprise 
                  AND mmch001 = g_mmbt_m.mmbt001
               IF l_n > 0 THEN
                  CALL cl_err('','amm-00066',0)
                  NEXT FIELD mmbt015
               END IF
            END IF]]>
  </point>
  <point name="input.a.mmbt016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt015) THEN
               IF g_mmbt_m.mmbt016 <  g_mmbt_m.mmbt015 THEN
                  CALL cl_err('','art-00020',0)
                  NEXT FIELD mmbt016
               END IF
            END IF]]>
  </point>
  <point name="input.a.page3.mmch006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch006) THEN
               IF g_mmcg3_d[l_ac].mmch006 <= 0 THEN
                  CALL cl_err('','aim-00003',0)
                  LET g_mmcg3_d[l_ac].mmch006 = g_mmcg3_d_t.mmch006
                  NEXT FIELD mmch006
               END IF
               IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmch_t WHERE "||"mmchent = '" ||g_enterprise|| "' AND "||"mmch001 = '"||g_mmbt_m.mmbt001 ||"' AND "|| "mmch006 = '"||g_mmcg3_d[l_ac].mmch006 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
               END IF
            END IF            ]]>
  </point>
  <point name="input.a.page3.mmch008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch008) THEN 
               IF g_mmcg3_d[l_ac].mmch008 < 0 THEN
                  CALL cl_err('','aoo-00005',0)
                  LET g_mmcg3_d[l_ac].mmch008 = g_mmcg3_d_t.mmch008
                  NEXT FIELD mmch008
               END IF
            END IF            ]]>
  </point>
  <point name="input.a.page3.mmch009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             IF NOT cl_null(g_mmcg3_d[l_ac].mmch009) THEN 
               IF g_mmcg3_d[l_ac].mmch009 < 0 THEN
                  CALL cl_err('','aoo-00005',0)
                  LET g_mmcg3_d[l_ac].mmch009 = g_mmcg3_d_t.mmch009
                  NEXT FIELD mmch009
               END IF
            END IF  ]]>
  </point>
  <point name="input.a.page3.mmch011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch011)  THEN
              IF g_mmcg3_d[l_ac].mmch011 < g_mmbt_m.mmbt014 THEN
                 CALL cl_err('','amm-00065',0) 
                 NEXT FIELD mmch011
              END IF
              IF NOT cl_null(g_mmcg3_d[l_ac].mmch012) THEN
                 IF g_mmcg3_d[l_ac].mmch011 > g_mmcg3_d[l_ac].mmch012 THEN
                    CALL cl_err('','art-00020',0)
                    NEXT FIELD mmch011
                 END IF
              END IF 
            END IF]]>
  </point>
  <point name="input.a.page3.mmch012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch012)  THEN
              IF g_mmcg3_d[l_ac].mmch012 > g_mmbt_m.mmbt015 THEN
                 CALL cl_err('','amm-00066',0) 
                 NEXT FIELD mmch012
              END IF
              IF NOT cl_null(g_mmcg3_d[l_ac].mmch012) THEN
                 IF g_mmcg3_d[l_ac].mmch011 > g_mmcg3_d[l_ac].mmch012 THEN
                    CALL cl_err('','art-00020',0)
                    NEXT FIELD mmch012
                 END IF
              END IF 
            END IF]]>
  </point>
  <point name="input.a.page3.mmch013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch013) AND NOT cl_null(g_mmcg3_d[l_ac].mmch014) THEN
               IF g_mmcg3_d[l_ac].mmch013 > g_mmcg3_d[l_ac].mmch014 THEN
                  CALL cl_err('','amm-00067',0)
                  NEXT FIELD mmch013
               END IF               
            END IF]]>
  </point>
  <point name="input.a.page3.mmch014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch013) AND NOT cl_null(g_mmcg3_d[l_ac].mmch014) THEN
               IF g_mmcg3_d[l_ac].mmch013 > g_mmcg3_d[l_ac].mmch014 THEN
                  CALL cl_err('','amm-00067',0)
                  NEXT FIELD mmch014
               END IF               
            END IF]]>
  </point>
  <point name="input.b.mmbt009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[        ]]>
  </point>
  <point name="input.b.mmbt016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="input.b.page1.mmcg004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.b.page2.mmbx006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null( g_mmcg2_d[l_ac].mmbx004) THEN
               NEXT FIELD mmbx004
            END IF
           ]]>
  </point>
  <point name="input.b.page3.mmch006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page3.mmch014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET  g_mmcg_d[l_ac].mmcg003 = g_mmbt_m.mmbt008
            LET  g_mmcg_d[l_ac].mmcgstus = 'Y'
            LET g_mmcg_d_t.* = g_mmcg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm356_set_entry_b(l_cmd)
            CALL ammm356_set_no_required_b(l_cmd)
            CALL ammm356_set_required_b(l_cmd)
            CALL ammm356_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL ammm356_set_entry_b(l_cmd)
             CALL ammm356_set_no_required_b(l_cmd)
             CALL ammm356_set_required_b(l_cmd)
             CALL ammm356_set_no_entry_b(l_cmd)
             LET g_mmcg_d_t.* = g_mmcg_d[l_ac].*]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mmcg3_d[l_ac].mmch003 = 'Q'
            LET g_mmcg3_d[l_ac].mmch005 = 'Y'
            LET g_mmcg3_d[l_ac].mmchstus = 'Y'
            LET g_mmcg3_d_t.* = g_mmcg3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm356_set_entry_b(l_cmd)
            CALL ammm356_set_no_required_b(l_cmd)
            CALL ammm356_set_required_b(l_cmd)
            CALL ammm356_set_no_entry_b(l_cmd)
            ]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.c.page1.mmcg004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_qryparam.reqry = FALSE
            CASE g_mmbt_m.mmbt007
                WHEN '1'
                   LET g_qryparam.arg1 = '2024'
                   CALL q_oocq002()
                WHEN '2'
                   LET g_qryparam.arg1 = '2025'
                   CALL q_oocq002()  
                WHEN '3'
                   #CALL q_ooia()
                WHEN '4'
                   #CALL q_imaa()
                WHEN '5'
                   CALL q_rtax001()
                WHEN '6'
                   LET g_qryparam.arg1 = '2000'
                   CALL q_oocq002() 
                WHEN '7'
                   LET g_qryparam.arg1 = '2001'
                   CALL q_oocq002() 
                WHEN '8'
                   LET g_qryparam.arg1 = '2002'
                   CALL q_oocq002() 
                WHEN '9'
                   LET g_qryparam.arg1 = '2003'
                   CALL q_oocq002() 
                WHEN 'A'
                   LET g_qryparam.arg1 = '2004'
                   CALL q_oocq002() 
                WHEN 'B'
                   LET g_qryparam.arg1 = '2005'
                   CALL q_oocq002() 
                WHEN 'C'
                   LET g_qryparam.arg1 = '2006'
                   CALL q_oocq002() 
                WHEN 'D'
                   LET g_qryparam.arg1 = '2007'
                   CALL q_oocq002() 
                WHEN 'E'
                   LET g_qryparam.arg1 = '2008'
                   CALL q_oocq002() 
                WHEN 'F'
                   LET g_qryparam.arg1 = '2009'
                   CALL q_oocq002() 
                WHEN 'G'
                   LET g_qryparam.arg1 = '2010'
                   CALL q_oocq002() 
                WHEN 'H'
                   LET g_qryparam.arg1 = '2011'
                    CALL q_oocq002() 
                WHEN 'I'
                   LET g_qryparam.arg1 = '2012'
                   CALL q_oocq002() 
                WHEN 'J'
                   LET g_qryparam.arg1 = '2013'
                   CALL q_oocq002() 
                WHEN 'K'
                   LET g_qryparam.arg1 = '2014'
                   CALL q_oocq002() 
                WHEN 'L'
                   LET g_qryparam.arg1 = '2015'
                   CALL q_oocq002() 
                WHEN 'U'
                   
                WHEN 'V'
                  
            END CASE
            LET g_mmcg_d[l_ac].mmcg004 = g_qryparam.return1
            DISPLAY g_qryparam.return1 TO  mmcg004     #顯示到畫面上
            NEXT FIELD mmcg004                     #返回原欄位



]]>
  </point>
  <point name="input.c.page3.mmch004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_qryparam.reqry = FALSE
            CASE g_mmcg3_d[l_ac].mmch003
                WHEN '1'
                   LET g_qryparam.arg1 = '2024'
                   CALL q_oocq002()
                WHEN '2'
                   LET g_qryparam.arg1 = '2025'
                   CALL q_oocq002()  
                WHEN '3'
                   #CALL q_ooia()
                WHEN '4'
                   #CALL q_imaa()
                WHEN '5'
                   CALL q_rtax001()
                WHEN '6'
                   LET g_qryparam.arg1 = '2000'
                   CALL q_oocq002() 
                WHEN '7'
                   LET g_qryparam.arg1 = '2001'
                   CALL q_oocq002() 
                WHEN '8'
                   LET g_qryparam.arg1 = '2002'
                   CALL q_oocq002() 
                WHEN '9'
                   LET g_qryparam.arg1 = '2003'
                   CALL q_oocq002() 
                WHEN 'A'
                   LET g_qryparam.arg1 = '2004'
                   CALL q_oocq002() 
                WHEN 'B'
                   LET g_qryparam.arg1 = '2005'
                   CALL q_oocq002() 
                WHEN 'C'
                   LET g_qryparam.arg1 = '2006'
                   CALL q_oocq002() 
                WHEN 'D'
                   LET g_qryparam.arg1 = '2007'
                   CALL q_oocq002() 
                WHEN 'E'
                   LET g_qryparam.arg1 = '2008'
                   CALL q_oocq002() 
                WHEN 'F'
                   LET g_qryparam.arg1 = '2009'
                   CALL q_oocq002() 
                WHEN 'G'
                   LET g_qryparam.arg1 = '2010'
                   CALL q_oocq002() 
                WHEN 'H'
                   LET g_qryparam.arg1 = '2011'
                    CALL q_oocq002() 
                WHEN 'I'
                   LET g_qryparam.arg1 = '2012'
                   CALL q_oocq002() 
                WHEN 'J'
                   LET g_qryparam.arg1 = '2013'
                   CALL q_oocq002() 
                WHEN 'K'
                   LET g_qryparam.arg1 = '2014'
                   CALL q_oocq002() 
                WHEN 'L'
                   LET g_qryparam.arg1 = '2015'
                   CALL q_oocq002() 
                WHEN 'Q'
                   LET g_qryparam.arg1 = '2050'
                   CALL q_oocq002() 
                WHEN 'U'
                   LET g_qryparam.arg1 = '6200'
                   CALL q_gzcb001()
                WHEN 'V'
                   CALL q_rtax001()
                WHEN 'R'
                   
                WHEN 'S'
                   LET g_qryparam.arg1 = '2'
                   CALL q_ooef001_4()
                WHEN 'T'
                   CALL q_inaa001_1()
            END CASE
            LET g_mmcg3_d[l_ac].mmch004 = g_qryparam.return1
            DISPLAY g_qryparam.return1 TO  mmch004     #顯示到畫面上
            NEXT FIELD mmch004                     #返回原欄位]]>
  </point>
  <point name="input.g.mmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmbt_m.mmbt007) THEN
               IF p_cmd = 'u' AND g_mmbt_m.mmbt007 <> g_mmbt_m_t.mmbt007 THEN
                  IF g_rec_b > 0 THEN 
                     IF cl_ask_confirm('amm-00064') THEN
                        CALL g_mmcg_d.clear()
                        LET g_rec_b = 0
                        DELETE FROM mmcg_t WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt_m.mmbt001
                     ELSE
                        LET g_mmbt_m.mmbt007 = g_mmbt_m_t.mmbt007
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.g.mmbt008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page2.mmbx004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page2.mmbx005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg2_d[l_ac].mmbx005) THEN
             
            END IF]]>
  </point>
  <point name="input.g.page3.mmch003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_mmcg3_d[l_ac].mmch004) THEN
               LET g_mmcg3_d[l_ac].mmch004 = ''
               LET g_mmcg3_d[l_ac].mmch004_desc = ''
            END IF  ]]>
  </point>
  <point name="input.g.page3.mmch005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_mmcg3_d[l_ac].mmch005 = 'N' THEN
               CALL cl_set_comp_entry("mmch006",FALSE)
               LET  g_mmcg3_d[l_ac].mmch006 =''
            ELSE
               CALL cl_set_comp_entry("mmch006",TRUE)
               CALL cl_set_comp_required("mmch006",TRUE)
            END IF]]>
  </point>
  <point name="input.g.page3.mmch007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             IF g_mmcg3_d[l_ac].mmch007 = '3' THEN
                CALL cl_set_comp_entry("mmch008,mmch009",TRUE)
                CALL cl_set_comp_required("mmch008,mmch009",TRUE)
             ELSE
                CALL cl_set_comp_entry("mmch008,mmch009",FALSE)
                LET g_mmcg3_d[l_ac].mmch008 = ''
                LET g_mmcg3_d[l_ac].mmch009 = ''
             END IF ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_mmbt_m.mmbt004 = '3'
      LET g_mmbt_m.mmbt002 = 0
      LET g_mmbt_m.mmbt007 = '0'
      LET g_mmbt_m.mmbt008 = '0'
      LET g_mmbt_m.mmbtstus = 'N'
      LET g_mmbt_m.mmbtunit = g_site
      LET g_mmbt_m.mmbt017 = 'N']]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="menu.exclude" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      
               CALL ammm350_01(g_mmbt_m.mmbt001)   
            ]]>
  </point>
  <point name="menu.issue" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_ammm356_issue_chk(g_mmbt_m.mmbt001) RETURNING l_success,g_errno
               IF l_success THEN
                  IF cl_ask_confirm('lib-018') THEN
                     CALL s_transaction_begin()
                     CALL s_ammm356_issue_upd(g_mmbt_m.mmbt001) RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','1')
                     END IF     
                  END IF
               ELSE
                  CALL cl_err(g_mmbt_m.mmbt001,g_errno,1) 
               END IF]]>
  </point>
  <point name="menu.remarks" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL aooi360_02('99','ammm356',g_mmbt_m.mmbt001,'','','','','','','','','')]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   
   IF g_mmbt_m.mmbt007 <> '0' THEN
      CALL cl_set_comp_entry('mmcg004',TRUE)
   END IF

   IF g_mmcg3_d[l_ac].mmch005 = 'Y' THEN
      CALL cl_set_comp_entry("mmch006",TRUE)
   END IF
   IF g_mmcg3_d[l_ac].mmch007 = '3' THEN
      CALL cl_set_comp_entry("mmch008,mmch009",TRUE)
   END IF
 ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_mmcg3_d[l_ac].mmch005 = 'N' THEN
      CALL cl_set_comp_entry("mmch006",FALSE)
      LET  g_mmcg3_d[l_ac].mmch006 =''
   END IF
   IF g_mmcg3_d[l_ac].mmch007 <> '3' THEN
      CALL cl_set_comp_entry("mmch008,mmch009",FALSE)
      LET g_mmcg3_d[l_ac].mmch008 = ''
      LET g_mmcg3_d[l_ac].mmch009 = ''
   END IF

   
   IF g_mmbt_m.mmbt007 = '0' THEN
      LET g_mmcg_d[l_ac].mmcg004 = 'ALL'
      CALL cl_set_comp_entry('mmcg004',FALSE)
   END IF

 ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET  g_mmcg_d[l_ac].mmcg004_desc = ammm356_mmcg004_ref(g_mmbt_m.mmbt007,g_mmcg_d[l_ac].mmcg004) ]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#       CALL ammm356_mmbx004_ref()

       
]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       LET  g_mmcg3_d[l_ac].mmch004_desc = ammm356_mmch004_ref(g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004) ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          INITIALIZE g_ref_fields TO NULL
          LET g_ref_fields[1] = g_mmbt_m.mmbt001
          CALL ap_ref_array2(g_ref_fields," SELECT mmbtl003,mmbtl004 FROM mmbtl_t WHERE mmbtlent = '"||g_enterprise||"' AND mmbtl001 = ? AND mmbtl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
          LET g_mmbt_m.mmbtl003 = g_rtn_fields[1] 
          LET g_mmbt_m.mmbtl004 = g_rtn_fields[2] 
          DISPLAY g_mmbt_m.mmbtl003 TO mmbtl002
          DISPLAY g_mmbt_m.mmbtl004 TO mmbtl003


#           CALL  ammm356_mmbtunit_ref()  
#            
#            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbt005
#            CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbt005_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbt005_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_mmbt_m.mmbtcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_mmbt_m.mmbtcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_mmbt_m.mmbtcnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   CASE lc_state
      WHEN 'Y'
         CALL s_ammm356_conf_chk(g_mmbt_m.mmbt001) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_ammm356_conf_upd(g_mmbt_m.mmbt001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmbt_m.mmbt001,g_errno,1)
            RETURN
         END IF
      WHEN 'X'
         CALL s_ammm356_invalid_chk(g_mmbt_m.mmbt001) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammm356_invalid_upd(g_mmbt_m.mmbt001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmbt_m.mmbt001,g_errno,1)
            RETURN
         END IF   
       WHEN 'N'
         CALL s_ammm356_unconf_chk(g_mmbt_m.mmbt001) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammm356_unconf_upd(g_mmbt_m.mmbt001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_mmbt_m.mmbt001,g_errno,1)
            RETURN
         END IF   
          
     END CASE     ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_mmbt_m.mmbtstus <> 'N' THEN RETURN END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5 ]]>
  </point>
  <point name="ui_dialog.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(l_ac) OR l_ac <= 0 THEN LET l_ac = 1 END IF
            IF l_ac>0 THEN
               LET g_mmbt_m.mmch004_1 = g_mmcg3_d[l_ac].mmch004
               LET g_mmbt_m.mmch004_desc_1 = g_mmcg3_d[l_ac].mmch004_desc 
               LET g_mmbt_m.mmch011_1 = g_mmcg3_d[l_ac].mmch011 
               LET g_mmbt_m.mmch012_1 = g_mmcg3_d[l_ac].mmch012 
               LET g_mmbt_m.mmch013_1 = g_mmcg3_d[l_ac].mmch013 
               LET g_mmbt_m.mmch014_1 = g_mmcg3_d[l_ac].mmch014 
               LET g_mmbt_m.mmch015_1 = g_mmcg3_d[l_ac].mmch015 
               LET g_mmbt_m.mmch016_1 = g_mmcg3_d[l_ac].mmch016 
               CALL ammm356_show()
            END IF]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success like type_t.num5]]>
  </point>
  <section id="ammm356.b_fill" ver="6" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION ammm356_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_mmcg_d.clear()    #g_mmcg_d 單頭及單身 
   CALL g_mmcg2_d.clear()
   CALL g_mmcg3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF ammm356_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE mmcg003,mmcg004,mmcg005,mmcgstus  FROM mmcg_t",   
                  " INNER JOIN mmbt_t ON mmbt001 = mmcg001 ",
 
                  #"",
                  
                  "",
                  
                  " WHERE mmcgent=? AND mmcg001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmcg_t.mmcg003,mmcg_t.mmcg004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm356_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR ammm356_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs INTO g_mmcg_d[l_ac].mmcg003,g_mmcg_d[l_ac].mmcg004,g_mmcg_d[l_ac].mmcg005,g_mmcg_d[l_ac].mmcgstus 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF ammm356_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE mmbx004,mmbx005,mmbxstus ,t1.ooefl003 FROM mmbx_t",   
                  " INNER JOIN mmbt_t ON mmbt001 = mmbx001 ",
 
                  "",
                  
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mmbx004 AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE mmbxent=? AND mmbx001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmbx_t.mmbx004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm356_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR ammm356_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs2 INTO g_mmcg2_d[l_ac].mmbx004,g_mmcg2_d[l_ac].mmbx005,g_mmcg2_d[l_ac].mmbxstus, 
          g_mmcg2_d[l_ac].mmbx004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammm356_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE mmch003,mmch004,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010,mmch011, 
          mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus  FROM mmch_t",   
                  " INNER JOIN mmbt_t ON mmbt001 = mmch001 ",
 
                  "",
                  
                  
                  " WHERE mmchent=? AND mmch001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY mmch_t.mmch003,mmch_t.mmch004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE ammm356_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR ammm356_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_mmbt_m.mmbt001
                                               
      FOREACH b_fill_cs3 INTO g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004,g_mmcg3_d[l_ac].mmch005, 
          g_mmcg3_d[l_ac].mmch006,g_mmcg3_d[l_ac].mmch007,g_mmcg3_d[l_ac].mmch008,g_mmcg3_d[l_ac].mmch009, 
          g_mmcg3_d[l_ac].mmch010,g_mmcg3_d[l_ac].mmch011,g_mmcg3_d[l_ac].mmch012,g_mmcg3_d[l_ac].mmch013, 
          g_mmcg3_d[l_ac].mmch014,g_mmcg3_d[l_ac].mmch015,g_mmcg3_d[l_ac].mmch016,g_mmcg3_d[l_ac].mmchstus 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_mmcg_d.deleteElement(g_mmcg_d.getLength())
   CALL g_mmcg2_d.deleteElement(g_mmcg2_d.getLength())
   CALL g_mmcg3_d.deleteElement(g_mmcg3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammm356_pb
   FREE ammm356_pb2
 
   FREE ammm356_pb3
 
 
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION ammm356_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammm356_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.browser_fill" ver="8" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammm356_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbt_m.* TO NULL
   CALL g_mmcg_d.clear()        
   CALL g_mmcg2_d.clear() 
   CALL g_mmcg3_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mmbt001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mmbt001 ",
                      " FROM mmbt_t ",
                      " ",
                      " LEFT JOIN mmcg_t ON mmcgent = mmbtent AND mmbt001 = mmcg001 ",
                      " LEFT JOIN mmbx_t ON mmbxent = mmbtent AND mmbt001 = mmbx001", 
 
                      " LEFT JOIN mmch_t ON mmchent = mmbtent AND mmbt001 = mmch001", 
 
 
 
                      " LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE mmbtent = '" ||g_enterprise|| "' AND mmcgent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbt_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mmbt001 ",
                      " FROM mmbt_t ", 
                      "  ",
                      "  LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ",
                      " WHERE mmbtent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mmbt_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照mmbt001,'',mmbt002,mmbt004,mmbt005,mmbt006,mmbt007,mmbt008,mmbt015,mmbt016,mmbt017 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT mmbtstus,mmbt001,'',mmbt002,mmbt004,mmbt005,mmbt006,mmbt007,mmbt008, 
       mmbt015,mmbt016,mmbt017,t1.mmbtl003 ",
               " FROM mmbt_t ",
               "  ",
               "  LEFT JOIN mmcg_t ON mmcgent = mmbtent AND mmbt001 = mmcg001 ",
               "  LEFT JOIN mmbx_t ON mmbxent = mmbtent AND mmbt001 = mmbx001",
 
               "  LEFT JOIN mmch_t ON mmchent = mmbtent AND mmbt001 = mmch001",
 
 
 
               "  LEFT JOIN mmbtl_t ON mmbt001 = mmbtl001 AND mmbtl002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN mmbtl_t t1 ON t1.mmbtlent='"||g_enterprise||"' AND t1.mmbtl001=mmbt001 AND t1.mmbtl002='"||g_lang||"' ",
 
               " WHERE mmbtent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmbt_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbt001,g_browser[g_cnt].b_mmbt001_desc, 
       g_browser[g_cnt].b_mmbt002,g_browser[g_cnt].b_mmbt004,g_browser[g_cnt].b_mmbt005,g_browser[g_cnt].b_mmbt006, 
       g_browser[g_cnt].b_mmbt007,g_browser[g_cnt].b_mmbt008,g_browser[g_cnt].b_mmbt015,g_browser[g_cnt].b_mmbt016, 
       g_browser[g_cnt].b_mmbt017,g_browser[g_cnt].b_mmbt001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION ammm356_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mmbt001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL ammm356_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.construct" ver="8" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION ammm356_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbt_m.* TO NULL
   CALL g_mmcg_d.clear()        
   CALL g_mmcg2_d.clear() 
   CALL g_mmcg3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbt004,mmbt001,mmbt002,mmbtl003,mmbtl004,mmbt006,mmbt003,mmbt005,mmbt007, 
          mmbt008,mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid,mmbtcrtdp, 
          mmbtcrtdt,mmbtmodid,mmbtmoddt,mmbtcnfid,mmbtcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mmbtcrtdt>>----
         AFTER FIELD mmbtcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtmoddt>>----
         AFTER FIELD mmbtmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtcnfdt>>----
         AFTER FIELD mmbtcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbtpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbt004
            #add-point:BEFORE FIELD mmbt004
            {<point name="construct.b.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt004
            
            #add-point:AFTER FIELD mmbt004
            {<point name="construct.a.mmbt004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt004
         ON ACTION controlp INFIELD mmbt004
            #add-point:ON ACTION controlp INFIELD mmbt004
            {<point name="construct.c.mmbt004" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbt001
         ON ACTION controlp INFIELD mmbt001
            #add-point:ON ACTION controlp INFIELD mmbt001
            {<point name="construct.c.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt001
            #add-point:BEFORE FIELD mmbt001
            {<point name="construct.b.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt001
            
            #add-point:AFTER FIELD mmbt001
            {<point name="construct.a.mmbt001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt002
            #add-point:BEFORE FIELD mmbt002
            {<point name="construct.b.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt002
            
            #add-point:AFTER FIELD mmbt002
            {<point name="construct.a.mmbt002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt002
         ON ACTION controlp INFIELD mmbt002
            #add-point:ON ACTION controlp INFIELD mmbt002
            {<point name="construct.c.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl003
            #add-point:BEFORE FIELD mmbtl003
            {<point name="construct.b.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl003
            
            #add-point:AFTER FIELD mmbtl003
            {<point name="construct.a.mmbtl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtl003
         ON ACTION controlp INFIELD mmbtl003
            #add-point:ON ACTION controlp INFIELD mmbtl003
            {<point name="construct.c.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl004
            #add-point:BEFORE FIELD mmbtl004
            {<point name="construct.b.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl004
            
            #add-point:AFTER FIELD mmbtl004
            {<point name="construct.a.mmbtl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtl004
         ON ACTION controlp INFIELD mmbtl004
            #add-point:ON ACTION controlp INFIELD mmbtl004
            {<point name="construct.c.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt006
            #add-point:BEFORE FIELD mmbt006
            {<point name="construct.b.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt006
            
            #add-point:AFTER FIELD mmbt006
            {<point name="construct.a.mmbt006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt006
         ON ACTION controlp INFIELD mmbt006
            #add-point:ON ACTION controlp INFIELD mmbt006
            {<point name="construct.c.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt003
            #add-point:BEFORE FIELD mmbt003
            {<point name="construct.b.mmbt003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt003
            
            #add-point:AFTER FIELD mmbt003
            {<point name="construct.a.mmbt003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt003
         ON ACTION controlp INFIELD mmbt003
            #add-point:ON ACTION controlp INFIELD mmbt003
            {<point name="construct.c.mmbt003" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbt005
         ON ACTION controlp INFIELD mmbt005
            #add-point:ON ACTION controlp INFIELD mmbt005
            {<point name="construct.c.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt005
            #add-point:BEFORE FIELD mmbt005
            {<point name="construct.b.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt005
            
            #add-point:AFTER FIELD mmbt005
            {<point name="construct.a.mmbt005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt007
            #add-point:BEFORE FIELD mmbt007
            {<point name="construct.b.mmbt007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt007
            
            #add-point:AFTER FIELD mmbt007
            {<point name="construct.a.mmbt007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt007
         ON ACTION controlp INFIELD mmbt007
            #add-point:ON ACTION controlp INFIELD mmbt007
            {<point name="construct.c.mmbt007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt008
            #add-point:BEFORE FIELD mmbt008
            {<point name="construct.b.mmbt008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt008
            
            #add-point:AFTER FIELD mmbt008
            {<point name="construct.a.mmbt008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt008
         ON ACTION controlp INFIELD mmbt008
            #add-point:ON ACTION controlp INFIELD mmbt008
            {<point name="construct.c.mmbt008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt014
            #add-point:BEFORE FIELD mmbt014
            {<point name="construct.b.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt014
            
            #add-point:AFTER FIELD mmbt014
            {<point name="construct.a.mmbt014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt014
         ON ACTION controlp INFIELD mmbt014
            #add-point:ON ACTION controlp INFIELD mmbt014
            {<point name="construct.c.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt015
            #add-point:BEFORE FIELD mmbt015
            {<point name="construct.b.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt015
            
            #add-point:AFTER FIELD mmbt015
            {<point name="construct.a.mmbt015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt015
         ON ACTION controlp INFIELD mmbt015
            #add-point:ON ACTION controlp INFIELD mmbt015
            {<point name="construct.c.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt016
            #add-point:BEFORE FIELD mmbt016
            {<point name="construct.b.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt016
            
            #add-point:AFTER FIELD mmbt016
            {<point name="construct.a.mmbt016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt016
         ON ACTION controlp INFIELD mmbt016
            #add-point:ON ACTION controlp INFIELD mmbt016
            {<point name="construct.c.mmbt016" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtunit
         ON ACTION controlp INFIELD mmbtunit
            #add-point:ON ACTION controlp INFIELD mmbtunit
            {<point name="construct.c.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtunit
            #add-point:BEFORE FIELD mmbtunit
            {<point name="construct.b.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtunit
            
            #add-point:AFTER FIELD mmbtunit
            {<point name="construct.a.mmbtunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt017
            #add-point:BEFORE FIELD mmbt017
            {<point name="construct.b.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt017
            
            #add-point:AFTER FIELD mmbt017
            {<point name="construct.a.mmbt017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbt017
         ON ACTION controlp INFIELD mmbt017
            #add-point:ON ACTION controlp INFIELD mmbt017
            {<point name="construct.c.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtstus
            #add-point:BEFORE FIELD mmbtstus
            {<point name="construct.b.mmbtstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtstus
            
            #add-point:AFTER FIELD mmbtstus
            {<point name="construct.a.mmbtstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtstus
         ON ACTION controlp INFIELD mmbtstus
            #add-point:ON ACTION controlp INFIELD mmbtstus
            {<point name="construct.c.mmbtstus" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtownid
         ON ACTION controlp INFIELD mmbtownid
            #add-point:ON ACTION controlp INFIELD mmbtownid
            {<point name="construct.c.mmbtownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtownid
            #add-point:BEFORE FIELD mmbtownid
            {<point name="construct.b.mmbtownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtownid
            
            #add-point:AFTER FIELD mmbtownid
            {<point name="construct.a.mmbtownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtowndp
         ON ACTION controlp INFIELD mmbtowndp
            #add-point:ON ACTION controlp INFIELD mmbtowndp
            {<point name="construct.c.mmbtowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtowndp
            #add-point:BEFORE FIELD mmbtowndp
            {<point name="construct.b.mmbtowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtowndp
            
            #add-point:AFTER FIELD mmbtowndp
            {<point name="construct.a.mmbtowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtcrtid
         ON ACTION controlp INFIELD mmbtcrtid
            #add-point:ON ACTION controlp INFIELD mmbtcrtid
            {<point name="construct.c.mmbtcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtid
            #add-point:BEFORE FIELD mmbtcrtid
            {<point name="construct.b.mmbtcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcrtid
            
            #add-point:AFTER FIELD mmbtcrtid
            {<point name="construct.a.mmbtcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.mmbtcrtdp
         ON ACTION controlp INFIELD mmbtcrtdp
            #add-point:ON ACTION controlp INFIELD mmbtcrtdp
            {<point name="construct.c.mmbtcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtdp
            #add-point:BEFORE FIELD mmbtcrtdp
            {<point name="construct.b.mmbtcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcrtdp
            
            #add-point:AFTER FIELD mmbtcrtdp
            {<point name="construct.a.mmbtcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcrtdt
            #add-point:BEFORE FIELD mmbtcrtdt
            {<point name="construct.b.mmbtcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtmodid
         ON ACTION controlp INFIELD mmbtmodid
            #add-point:ON ACTION controlp INFIELD mmbtmodid
            {<point name="construct.c.mmbtmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtmodid
            #add-point:BEFORE FIELD mmbtmodid
            {<point name="construct.b.mmbtmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtmodid
            
            #add-point:AFTER FIELD mmbtmodid
            {<point name="construct.a.mmbtmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtmoddt
            #add-point:BEFORE FIELD mmbtmoddt
            {<point name="construct.b.mmbtmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.mmbtcnfid
         ON ACTION controlp INFIELD mmbtcnfid
            #add-point:ON ACTION controlp INFIELD mmbtcnfid
            {<point name="construct.c.mmbtcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcnfid
            #add-point:BEFORE FIELD mmbtcnfid
            {<point name="construct.b.mmbtcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtcnfid
            
            #add-point:AFTER FIELD mmbtcnfid
            {<point name="construct.a.mmbtcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtcnfdt
            #add-point:BEFORE FIELD mmbtcnfdt
            {<point name="construct.b.mmbtcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcg003,mmcg004,mmcg005,mmcgstus
           FROM s_detail1[1].mmcg003,s_detail1[1].mmcg004,s_detail1[1].mmcg005,s_detail1[1].mmcgstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<mmcgcrtdt>>----
         
         #----<<mmcgmoddt>>----
         
         #----<<mmcgcnfdt>>----
         
         #----<<mmcgpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmbx004,mmbx005,mmbxstus
           FROM s_detail2[1].mmbx004,s_detail2[1].mmbx005,s_detail2[1].mmbxstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #此段落由子樣板a11產生
         ##----<<mmbxcrtdt>>----
         
         #----<<mmbxmoddt>>----
         
         #----<<mmbxcnfdt>>----
         
         #----<<mmbxpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmch003,mmch004,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010,mmch011, 
          mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus
           FROM s_detail3[1].mmch003,s_detail3[1].mmch004,s_detail3[1].mmch005,s_detail3[1].mmch006, 
               s_detail3[1].mmch007,s_detail3[1].mmch008,s_detail3[1].mmch009,s_detail3[1].mmch010,s_detail3[1].mmch011, 
               s_detail3[1].mmch012,s_detail3[1].mmch013,s_detail3[1].mmch014,s_detail3[1].mmch015,s_detail3[1].mmch016, 
               s_detail3[1].mmchstus
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       #此段落由子樣板a11產生
         ##----<<mmchcrtdt>>----
         
         #----<<mmchmoddt>>----
         
         #----<<mmchcnfdt>>----
         
         #----<<mmchpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.default_search" ver="3" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION ammm356_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmbt001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION ammm356_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
   
   LET g_master_multi_table_t.mmbtl001 = g_mmbt_m.mmbt001
LET g_master_multi_table_t.mmbtl003 = g_mmbt_m.mmbtl003
LET g_master_multi_table_t.mmbtl004 = g_mmbt_m.mmbtl004
 
 
   CALL ammm356_show()
   
   CALL s_transaction_begin()
 
   OPEN ammm356_cl USING g_enterprise,g_mmbt_m.mmbt001
   IF STATUS THEN
      CALL cl_err("OPEN ammm356_cl:", STATUS, 1)
      CLOSE ammm356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL ammm356_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_mmbt001_t = g_mmbt_m.mmbt001
 
 
      DELETE FROM mmbt_t
       WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt_m.mmbt001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mmcg_t
       WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt_m.mmbt001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcg_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM mmbx_t
       WHERE mmbxent = g_enterprise AND
             mmbx001 = g_mmbt_m.mmbt001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM mmch_t
       WHERE mmchent = g_enterprise AND
             mmch001 = g_mmbt_m.mmbt001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmch_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_mmcg_d.clear() 
      CALL g_mmcg2_d.clear()       
      CALL g_mmcg3_d.clear()       
 
     
      #CALL ammm356_ui_browser_refresh()  
      CALL ammm356_ui_headershow()  
      CALL ammm356_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL ammm356_browser_fill("")
         CALL ammm356_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL ammm356_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
   LET l_field_keys[01] = 'mmbtl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'mmbtl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mmbtl_t')
 
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE ammm356_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mmbt_m.mmbt001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="ammm356.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammm356_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM mmcg_t
       WHERE mmcgent = g_enterprise AND
         mmcg001 = ps_keys_bak[1] AND mmcg003 = ps_keys_bak[2] AND mmcg004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM mmbx_t
       WHERE mmbxent = g_enterprise AND
         mmbx001 = ps_keys_bak[1] AND mmbx004 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM mmch_t
       WHERE mmchent = g_enterprise AND
         mmch001 = ps_keys_bak[1] AND mmch003 = ps_keys_bak[2] AND mmch004 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmch_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.description" ver="44" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000046
#+ 
#+ Filename...: ammm356
#+ Description: 會員卡折扣規則設定維護作業
#+ Creator....: 03247(2014/04/02)
#+ Modifier...: 03247(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="ammm356.detail_reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION ammm356_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmcg_t.*
   DEFINE l_detail2    RECORD LIKE mmbx_t.*
 
   DEFINE l_detail3    RECORD LIKE mmch_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammm356_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammm356_detail AS ",
                "SELECT * FROM mmcg_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm356_detail SELECT * FROM mmcg_t 
                                         WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt001_t
 
   
   #將key修正為調整後   
   UPDATE ammm356_detail 
      #更新key欄位
      SET mmcg001 = g_mmbt_m.mmbt001
 
      #更新共用欄位
      #此段落由子樣板a13產生
      #, mmcgstus = "Y"
 
#此段落由子樣板a13產生
      #, mmbxstus = "Y"
 
#此段落由子樣板a13產生
      #, mmchstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO mmcg_t SELECT * FROM ammm356_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm356_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammm356_detail AS ",
      "SELECT * FROM mmbx_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm356_detail SELECT * FROM mmbx_t
                                         WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt001_t
 
 
   #將key修正為調整後   
   UPDATE ammm356_detail SET mmbx001 = g_mmbt_m.mmbt001
 
  
   #將資料塞回原table   
   INSERT INTO mmbx_t SELECT * FROM ammm356_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm356_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE ammm356_detail AS ",
      "SELECT * FROM mmch_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammm356_detail SELECT * FROM mmch_t
                                         WHERE mmchent = g_enterprise AND mmch001 = g_mmbt001_t
 
 
   #將key修正為調整後   
   UPDATE ammm356_detail SET mmch001 = g_mmbt_m.mmbt001
 
  
   #將資料塞回原table   
   INSERT INTO mmch_t SELECT * FROM ammm356_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammm356_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   
   DROP TABLE ammm356_detail
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.detail_show" ver="3" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION ammm356_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.fetch" ver="6" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammm356_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbt_m.mmbt001 = g_browser[g_current_idx].b_mmbt001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("mmbt_t",SQLCA.sqlcode,1)
      INITIALIZE g_mmbt_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL ammm356_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION ammm356_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION ammm356_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmbt001,mmbt002,mmbt004,mmbt005,mmbt006,mmbt007,mmbt008,mmbt015,mmbt016, 
          mmbt017
                          FROM s_browse[1].b_mmbt001,s_browse[1].b_mmbt002,s_browse[1].b_mmbt004,s_browse[1].b_mmbt005, 
                              s_browse[1].b_mmbt006,s_browse[1].b_mmbt007,s_browse[1].b_mmbt008,s_browse[1].b_mmbt015, 
                              s_browse[1].b_mmbt016,s_browse[1].b_mmbt017
 
         BEFORE CONSTRUCT
               DISPLAY ammm356_filter_parser('mmbt001') TO s_browse[1].b_mmbt001
            DISPLAY ammm356_filter_parser('mmbt002') TO s_browse[1].b_mmbt002
            DISPLAY ammm356_filter_parser('mmbt004') TO s_browse[1].b_mmbt004
            DISPLAY ammm356_filter_parser('mmbt005') TO s_browse[1].b_mmbt005
            DISPLAY ammm356_filter_parser('mmbt006') TO s_browse[1].b_mmbt006
            DISPLAY ammm356_filter_parser('mmbt007') TO s_browse[1].b_mmbt007
            DISPLAY ammm356_filter_parser('mmbt008') TO s_browse[1].b_mmbt008
            DISPLAY ammm356_filter_parser('mmbt015') TO s_browse[1].b_mmbt015
            DISPLAY ammm356_filter_parser('mmbt016') TO s_browse[1].b_mmbt016
            DISPLAY ammm356_filter_parser('mmbt017') TO s_browse[1].b_mmbt017
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammm356_filter_show('mmbt001')
   CALL ammm356_filter_show('mmbt002')
   CALL ammm356_filter_show('mmbt004')
   CALL ammm356_filter_show('mmbt005')
   CALL ammm356_filter_show('mmbt006')
   CALL ammm356_filter_show('mmbt007')
   CALL ammm356_filter_show('mmbt008')
   CALL ammm356_filter_show('mmbt015')
   CALL ammm356_filter_show('mmbt016')
   CALL ammm356_filter_show('mmbt017')
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION ammm356_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION ammm356_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammm356_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.global" ver="7" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbt_m        RECORD
       mmbt004 LIKE mmbt_t.mmbt004, 
   mmbt001 LIKE mmbt_t.mmbt001, 
   mmbt002 LIKE mmbt_t.mmbt002, 
   mmbtl003 LIKE mmbtl_t.mmbtl003, 
   mmbtl004 LIKE mmbtl_t.mmbtl004, 
   mmbt006 LIKE mmbt_t.mmbt006, 
   mmbt003 LIKE mmbt_t.mmbt003, 
   mmbt005 LIKE mmbt_t.mmbt005, 
   mmbt005_desc LIKE type_t.chr80, 
   mmbt007 LIKE mmbt_t.mmbt007, 
   mmbt008 LIKE mmbt_t.mmbt008, 
   mmbt014 LIKE mmbt_t.mmbt014, 
   mmbt015 LIKE mmbt_t.mmbt015, 
   mmbt016 DATETIME YEAR TO SECOND, 
   mmbtunit LIKE mmbt_t.mmbtunit, 
   mmbtunit_desc LIKE type_t.chr80, 
   mmbt017 LIKE mmbt_t.mmbt017, 
   mmbtstus LIKE mmbt_t.mmbtstus, 
   mmbtownid LIKE mmbt_t.mmbtownid, 
   mmbtownid_desc LIKE type_t.chr80, 
   mmbtowndp LIKE mmbt_t.mmbtowndp, 
   mmbtowndp_desc LIKE type_t.chr80, 
   mmbtcrtid LIKE mmbt_t.mmbtcrtid, 
   mmbtcrtid_desc LIKE type_t.chr80, 
   mmbtcrtdp LIKE mmbt_t.mmbtcrtdp, 
   mmbtcrtdp_desc LIKE type_t.chr80, 
   mmbtcrtdt DATETIME YEAR TO SECOND, 
   mmbtmodid LIKE mmbt_t.mmbtmodid, 
   mmbtmodid_desc LIKE type_t.chr80, 
   mmbtmoddt DATETIME YEAR TO SECOND, 
   mmbtcnfid LIKE mmbt_t.mmbtcnfid, 
   mmbtcnfid_desc LIKE type_t.chr80, 
   mmbtcnfdt DATETIME YEAR TO SECOND, 
   mmch004_1 LIKE type_t.chr80, 
   mmch011_1 LIKE type_t.chr80, 
   mmch013_1 LIKE type_t.chr80, 
   mmch015_1 LIKE type_t.chr80, 
   mmch004_desc_1 LIKE type_t.chr80, 
   mmch012_1 LIKE type_t.chr80, 
   mmch014_1 LIKE type_t.chr80, 
   mmch016_1 LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmcg_d        RECORD
       mmcg003 LIKE mmcg_t.mmcg003, 
   mmcg004 LIKE mmcg_t.mmcg004, 
   mmcg004_desc LIKE type_t.chr80, 
   mmcg005 LIKE mmcg_t.mmcg005, 
   mmcgstus LIKE mmcg_t.mmcgstus
       END RECORD
PRIVATE TYPE type_g_mmcg2_d RECORD
       mmbx004 LIKE mmbx_t.mmbx004, 
   mmbx004_desc LIKE type_t.chr500, 
   mmbx005 LIKE mmbx_t.mmbx005, 
   mmbxstus LIKE mmbx_t.mmbxstus
       END RECORD
PRIVATE TYPE type_g_mmcg3_d RECORD
       mmch003 LIKE mmch_t.mmch003, 
   mmch004 LIKE mmch_t.mmch004, 
   mmch004_desc LIKE type_t.chr80, 
   mmch005 LIKE mmch_t.mmch005, 
   mmch006 LIKE mmch_t.mmch006, 
   mmch007 LIKE mmch_t.mmch007, 
   mmch008 LIKE mmch_t.mmch008, 
   mmch009 LIKE mmch_t.mmch009, 
   mmch010 LIKE mmch_t.mmch010, 
   mmch011 LIKE mmch_t.mmch011, 
   mmch012 LIKE mmch_t.mmch012, 
   mmch013 LIKE mmch_t.mmch013, 
   mmch014 LIKE mmch_t.mmch014, 
   mmch015 LIKE mmch_t.mmch015, 
   mmch016 LIKE mmch_t.mmch016, 
   mmchstus LIKE mmch_t.mmchstus
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_mmbt_m          type_g_mmbt_m
DEFINE g_mmbt_m_t        type_g_mmbt_m
 
   DEFINE g_mmbt001_t LIKE mmbt_t.mmbt001
 
 
DEFINE g_mmcg_d          DYNAMIC ARRAY OF type_g_mmcg_d
DEFINE g_mmcg_d_t        type_g_mmcg_d
DEFINE g_mmcg2_d   DYNAMIC ARRAY OF type_g_mmcg2_d
DEFINE g_mmcg2_d_t type_g_mmcg2_d
DEFINE g_mmcg3_d   DYNAMIC ARRAY OF type_g_mmcg3_d
DEFINE g_mmcg3_d_t type_g_mmcg3_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbt001 LIKE mmbt_t.mmbt001,
   b_mmbt001_desc LIKE type_t.chr80,
      b_mmbt002 LIKE mmbt_t.mmbt002,
      b_mmbt004 LIKE mmbt_t.mmbt004,
      b_mmbt005 LIKE mmbt_t.mmbt005,
      b_mmbt006 LIKE mmbt_t.mmbt006,
      b_mmbt007 LIKE mmbt_t.mmbt007,
      b_mmbt008 LIKE mmbt_t.mmbt008,
      b_mmbt015 LIKE mmbt_t.mmbt015,
      b_mmbt016 LIKE mmbt_t.mmbt016,
      b_mmbt017 LIKE mmbt_t.mmbt017
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_mmbt001 LIKE mmbt_t.mmbt001,
   b_mmbt001_desc LIKE type_t.chr80,
      b_mmbt002 LIKE mmbt_t.mmbt002,
      b_mmbt004 LIKE mmbt_t.mmbt004,
      b_mmbt005 LIKE mmbt_t.mmbt005,
      b_mmbt006 LIKE mmbt_t.mmbt006,
      b_mmbt007 LIKE mmbt_t.mmbt007,
      b_mmbt008 LIKE mmbt_t.mmbt008,
      b_mmbt015 LIKE mmbt_t.mmbt015,
      b_mmbt016 LIKE mmbt_t.mmbt016,
      b_mmbt017 LIKE mmbt_t.mmbt017
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      mmbtl001 LIKE mmbtl_t.mmbtl001,
      mmbtl003 LIKE mmbtl_t.mmbtl003,
      mmbtl004 LIKE mmbtl_t.mmbtl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ammm356.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION ammm356_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmcg_d.getLength() THEN
         LET g_detail_idx = g_mmcg_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcg_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcg_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmcg2_d.getLength() THEN
         LET g_detail_idx = g_mmcg2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcg2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcg2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmcg3_d.getLength() THEN
         LET g_detail_idx = g_mmcg3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcg3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcg3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammm356_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('mmbtstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('mmbt004','6516') 
   CALL cl_set_combo_scc('mmbt007','6517') 
   CALL cl_set_combo_scc('mmbt008','6517') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL ammm356_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="ammm356.input" ver="6" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION ammm356_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mmcg003,mmcg004,mmcg005,mmcgstus FROM mmcg_t WHERE mmcgent=? AND mmcg001=?  
       AND mmcg003=? AND mmcg004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm356_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmbx004,mmbx005,mmbxstus FROM mmbx_t WHERE mmbxent=? AND mmbx001=? AND  
       mmbx004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm356_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT mmch003,mmch004,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010,mmch011, 
       mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus FROM mmch_t WHERE mmchent=? AND mmch001=? AND  
       mmch003=? AND mmch004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm356_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammm356_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL ammm356_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="ammm356.input.body" ver="9" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmcg_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcg_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm356_b_fill()
            LET g_rec_b = g_mmcg_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm356_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm356_cl:", STATUS, 1)
               CLOSE ammm356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcg_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcg_d[l_ac].mmcg003 IS NOT NULL
               AND g_mmcg_d[l_ac].mmcg004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmcg_d_t.* = g_mmcg_d[l_ac].*  #BACKUP
               CALL ammm356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL ammm356_set_no_entry_b(l_cmd)
               IF NOT ammm356_lock_b("mmcg_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm356_bcl INTO g_mmcg_d[l_ac].mmcg003,g_mmcg_d[l_ac].mmcg004,g_mmcg_d[l_ac].mmcg005, 
                      g_mmcg_d[l_ac].mmcgstus
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_mmcg_d_t.mmcg003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcg_d[l_ac].* TO NULL 
                  LET g_mmcg_d[l_ac].mmcg005 = "100"
      LET g_mmcg_d[l_ac].mmcgstus = "Y"
 
            LET g_mmcg_d_t.* = g_mmcg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcg_d[li_reproduce_target].* = g_mmcg_d[li_reproduce].*
 
               LET g_mmcg_d[li_reproduce_target].mmcg003 = NULL
               LET g_mmcg_d[li_reproduce_target].mmcg004 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_mmcg_d[l_ac].mmcgstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmcg_t 
             WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt_m.mmbt001
 
               AND mmcg003 = g_mmcg_d[l_ac].mmcg003
               AND mmcg004 = g_mmcg_d[l_ac].mmcg004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg_d[g_detail_idx].mmcg003
               LET gs_keys[3] = g_mmcg_d[g_detail_idx].mmcg004
               CALL ammm356_insert_b('mmcg_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmcg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm356_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcg_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcg_d.deleteElement(l_ac)
               NEXT FIELD mmcg003
            END IF
         
            IF g_mmcg_d[l_ac].mmcg003 IS NOT NULL
               AND g_mmcg_d_t.mmcg004 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM mmcg_t
                WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt_m.mmbt001 AND
 
                      mmcg003 = g_mmcg_d_t.mmcg003
                  AND mmcg004 = g_mmcg_d_t.mmcg004
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm356_bcl
               LET l_count = g_mmcg_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg_d[g_detail_idx].mmcg003
               LET gs_keys[3] = g_mmcg_d[g_detail_idx].mmcg004
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL ammm356_delete_b('mmcg_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmcg003
            #add-point:BEFORE FIELD mmcg003
            {<point name="input.b.page1.mmcg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcg003
            
            #add-point:AFTER FIELD mmcg003
            {<point name="input.a.page1.mmcg003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcg003
            #add-point:ON CHANGE mmcg003
            {<point name="input.g.page1.mmcg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcg004
            #add-point:BEFORE FIELD mmcg004
            {<point name="input.b.page1.mmcg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcg004
            
            #add-point:AFTER FIELD mmcg004
            {<point name="input.a.page1.mmcg004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcg004
            #add-point:ON CHANGE mmcg004
            {<point name="input.g.page1.mmcg004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcg005
            #add-point:BEFORE FIELD mmcg005
            {<point name="input.b.page1.mmcg005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcg005
            
            #add-point:AFTER FIELD mmcg005
            {<point name="input.a.page1.mmcg005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcg005
            #add-point:ON CHANGE mmcg005
            {<point name="input.g.page1.mmcg005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmcgstus
            #add-point:BEFORE FIELD mmcgstus
            {<point name="input.b.page1.mmcgstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmcgstus
            
            #add-point:AFTER FIELD mmcgstus
            {<point name="input.a.page1.mmcgstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmcgstus
            #add-point:ON CHANGE mmcgstus
            {<point name="input.g.page1.mmcgstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.mmcg003
         ON ACTION controlp INFIELD mmcg003
            #add-point:ON ACTION controlp INFIELD mmcg003
            {<point name="input.c.page1.mmcg003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcg004
         ON ACTION controlp INFIELD mmcg004
            #add-point:ON ACTION controlp INFIELD mmcg004
            {<point name="input.c.page1.mmcg004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcg005
         ON ACTION controlp INFIELD mmcg005
            #add-point:ON ACTION controlp INFIELD mmcg005
            {<point name="input.c.page1.mmcg005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.mmcgstus
         ON ACTION controlp INFIELD mmcgstus
            #add-point:ON ACTION controlp INFIELD mmcgstus
            {<point name="input.c.page1.mmcgstus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcg_d[l_ac].* = g_mmcg_d_t.*
               CLOSE ammm356_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mmcg_d[l_ac].mmcg003,-263,1)
               LET g_mmcg_d[l_ac].* = g_mmcg_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
 
      
               UPDATE mmcg_t SET (mmcg001,mmcg003,mmcg004,mmcg005,mmcgstus) = (g_mmbt_m.mmbt001,g_mmcg_d[l_ac].mmcg003, 
                   g_mmcg_d[l_ac].mmcg004,g_mmcg_d[l_ac].mmcg005,g_mmcg_d[l_ac].mmcgstus)
                WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt_m.mmbt001 
 
                  AND mmcg003 = g_mmcg_d_t.mmcg003 #項次   
                  AND mmcg004 = g_mmcg_d_t.mmcg004  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmcg_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcg_d[l_ac].* = g_mmcg_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmcg_t",SQLCA.sqlcode,1)
                     LET g_mmcg_d[l_ac].* = g_mmcg_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcg_d[g_detail_idx].mmcg003
               LET gs_keys_bak[2] = g_mmcg_d_t.mmcg003
               LET gs_keys[3] = g_mmcg_d[g_detail_idx].mmcg004
               LET gs_keys_bak[3] = g_mmcg_d_t.mmcg004
               CALL ammm356_update_b('mmcg_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL ammm356_unlock_b("mmcg_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_mmcg_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcg_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmcg2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcg2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm356_b_fill()
            LET g_rec_b = g_mmcg2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcg2_d[l_ac].* TO NULL 
                  LET g_mmcg2_d[l_ac].mmbx005 = "N"
      LET g_mmcg2_d[l_ac].mmbxstus = "Y"
 
            LET g_mmcg2_d_t.* = g_mmcg2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcg2_d[li_reproduce_target].* = g_mmcg2_d[li_reproduce].*
 
               LET g_mmcg2_d[li_reproduce_target].mmbx004 = NULL
            END IF
            #公用欄位給值(單身2)
            #此段落由子樣板a14產生    
      LET g_mmcg2_d[l_ac].mmbxstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm356_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm356_cl:", STATUS, 1)
               CLOSE ammm356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcg2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcg2_d[l_ac].mmbx004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmcg2_d_t.* = g_mmcg2_d[l_ac].*  #BACKUP
               CALL ammm356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL ammm356_set_no_entry_b(l_cmd)
               IF NOT ammm356_lock_b("mmbx_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm356_bcl2 INTO g_mmcg2_d[l_ac].mmbx004,g_mmcg2_d[l_ac].mmbx005,g_mmcg2_d[l_ac].mmbxstus 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcg2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcg2_d.deleteElement(l_ac)
               NEXT FIELD mmbx004
            END IF
         
            IF g_mmcg2_d[l_ac].mmbx004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmbx_t
                WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001 AND
                      mmbx004 = g_mmcg2_d_t.mmbx004
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm356_bcl
               LET l_count = g_mmcg_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg2_d[g_detail_idx].mmbx004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL ammm356_delete_b('mmbx_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmbx_t 
             WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001
               AND mmbx004 = g_mmcg2_d[l_ac].mmbx004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg2_d[g_detail_idx].mmbx004
               CALL ammm356_insert_b('mmbx_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm356_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcg2_d[l_ac].* = g_mmcg2_d_t.*
               CLOSE ammm356_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmcg2_d[l_ac].* = g_mmcg2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
 
               
               UPDATE mmbx_t SET (mmbx001,mmbx004,mmbx005,mmbxstus) = (g_mmbt_m.mmbt001,g_mmcg2_d[l_ac].mmbx004, 
                   g_mmcg2_d[l_ac].mmbx005,g_mmcg2_d[l_ac].mmbxstus) #自訂欄位頁簽
                WHERE mmbxent = g_enterprise AND mmbx001 = g_mmbt_m.mmbt001
                  AND mmbx004 = g_mmcg2_d_t.mmbx004 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmbx_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcg2_d[l_ac].* = g_mmcg2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmcg2_d[l_ac].* = g_mmcg2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcg2_d[g_detail_idx].mmbx004
               LET gs_keys_bak[2] = g_mmcg2_d_t.mmbx004
               CALL ammm356_update_b('mmbx_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg2_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD mmbx004
            
            #add-point:AFTER FIELD mmbx004
            {<point name="input.a.page2.mmbx004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx004
            #add-point:BEFORE FIELD mmbx004
            {<point name="input.b.page2.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx004
            #add-point:ON CHANGE mmbx004
            {<point name="input.g.page2.mmbx004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbx005
            #add-point:BEFORE FIELD mmbx005
            {<point name="input.b.page2.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbx005
            
            #add-point:AFTER FIELD mmbx005
            {<point name="input.a.page2.mmbx005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbx005
            #add-point:ON CHANGE mmbx005
            {<point name="input.g.page2.mmbx005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbxstus
            #add-point:BEFORE FIELD mmbxstus
            {<point name="input.b.page2.mmbxstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbxstus
            
            #add-point:AFTER FIELD mmbxstus
            {<point name="input.a.page2.mmbxstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbxstus
            #add-point:ON CHANGE mmbxstus
            {<point name="input.g.page2.mmbxstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.mmbx004
         ON ACTION controlp INFIELD mmbx004
            #add-point:ON ACTION controlp INFIELD mmbx004
            {<point name="input.c.page2.mmbx004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmbx005
         ON ACTION controlp INFIELD mmbx005
            #add-point:ON ACTION controlp INFIELD mmbx005
            {<point name="input.c.page2.mmbx005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.mmbxstus
         ON ACTION controlp INFIELD mmbxstus
            #add-point:ON ACTION controlp INFIELD mmbxstus
            {<point name="input.c.page2.mmbxstus" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmcg2_d[l_ac].* = g_mmcg2_d_t.*
               END IF
               CLOSE ammm356_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammm356_unlock_b("mmbx_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmcg2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcg2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_mmcg3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcg3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammm356_b_fill()
            LET g_rec_b = g_mmcg3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcg3_d[l_ac].* TO NULL 
                  LET g_mmcg3_d[l_ac].mmch003 = "Q"
      LET g_mmcg3_d[l_ac].mmch005 = "Y"
      LET g_mmcg3_d[l_ac].mmch007 = "1"
      LET g_mmcg3_d[l_ac].mmch010 = "0"
      LET g_mmcg3_d[l_ac].mmchstus = "Y"
 
            LET g_mmcg3_d_t.* = g_mmcg3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammm356_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL ammm356_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcg3_d[li_reproduce_target].* = g_mmcg3_d[li_reproduce].*
 
               LET g_mmcg3_d[li_reproduce_target].mmch003 = NULL
               LET g_mmcg3_d[li_reproduce_target].mmch004 = NULL
            END IF
            #公用欄位給值(單身3)
            #此段落由子樣板a14產生    
      LET g_mmcg3_d[l_ac].mmchstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammm356_cl USING g_enterprise,g_mmbt_m.mmbt001
            IF STATUS THEN
               CALL cl_err("OPEN ammm356_cl:", STATUS, 1)
               CLOSE ammm356_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmcg3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcg3_d[l_ac].mmch003 IS NOT NULL
               AND g_mmcg3_d[l_ac].mmch004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmcg3_d_t.* = g_mmcg3_d[l_ac].*  #BACKUP
               CALL ammm356_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL ammm356_set_no_entry_b(l_cmd)
               IF NOT ammm356_lock_b("mmch_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammm356_bcl3 INTO g_mmcg3_d[l_ac].mmch003,g_mmcg3_d[l_ac].mmch004,g_mmcg3_d[l_ac].mmch005, 
                      g_mmcg3_d[l_ac].mmch006,g_mmcg3_d[l_ac].mmch007,g_mmcg3_d[l_ac].mmch008,g_mmcg3_d[l_ac].mmch009, 
                      g_mmcg3_d[l_ac].mmch010,g_mmcg3_d[l_ac].mmch011,g_mmcg3_d[l_ac].mmch012,g_mmcg3_d[l_ac].mmch013, 
                      g_mmcg3_d[l_ac].mmch014,g_mmcg3_d[l_ac].mmch015,g_mmcg3_d[l_ac].mmch016,g_mmcg3_d[l_ac].mmchstus 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammm356_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmcg3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmcg3_d.deleteElement(l_ac)
               NEXT FIELD mmch003
            END IF
         
            IF g_mmcg3_d[l_ac].mmch003 IS NOT NULL
               AND g_mmcg3_d_t.mmch004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM mmch_t
                WHERE mmchent = g_enterprise AND mmch001 = g_mmbt_m.mmbt001 AND
                      mmch003 = g_mmcg3_d_t.mmch003
                  AND mmch004 = g_mmcg3_d_t.mmch004
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmcg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammm356_bcl
               LET l_count = g_mmcg_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg3_d[g_detail_idx].mmch003
               LET gs_keys[3] = g_mmcg3_d[g_detail_idx].mmch004
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL ammm356_delete_b('mmch_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmch_t 
             WHERE mmchent = g_enterprise AND mmch001 = g_mmbt_m.mmbt001
               AND mmch003 = g_mmcg3_d[l_ac].mmch003
               AND mmch004 = g_mmcg3_d[l_ac].mmch004
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys[2] = g_mmcg3_d[g_detail_idx].mmch003
               LET gs_keys[3] = g_mmcg3_d[g_detail_idx].mmch004
               CALL ammm356_insert_b('mmch_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mmcg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mmch_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammm356_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mmcg3_d[l_ac].* = g_mmcg3_d_t.*
               CLOSE ammm356_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_mmcg3_d[l_ac].* = g_mmcg3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
 
               
               UPDATE mmch_t SET (mmch001,mmch003,mmch004,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010, 
                   mmch011,mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus) = (g_mmbt_m.mmbt001,g_mmcg3_d[l_ac].mmch003, 
                   g_mmcg3_d[l_ac].mmch004,g_mmcg3_d[l_ac].mmch005,g_mmcg3_d[l_ac].mmch006,g_mmcg3_d[l_ac].mmch007, 
                   g_mmcg3_d[l_ac].mmch008,g_mmcg3_d[l_ac].mmch009,g_mmcg3_d[l_ac].mmch010,g_mmcg3_d[l_ac].mmch011, 
                   g_mmcg3_d[l_ac].mmch012,g_mmcg3_d[l_ac].mmch013,g_mmcg3_d[l_ac].mmch014,g_mmcg3_d[l_ac].mmch015, 
                   g_mmcg3_d[l_ac].mmch016,g_mmcg3_d[l_ac].mmchstus) #自訂欄位頁簽
                WHERE mmchent = g_enterprise AND mmch001 = g_mmbt_m.mmbt001
                  AND mmch003 = g_mmcg3_d_t.mmch003 #項次 
                  AND mmch004 = g_mmcg3_d_t.mmch004
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mmch_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_mmcg3_d[l_ac].* = g_mmcg3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mmch_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_mmcg3_d[l_ac].* = g_mmcg3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbt_m.mmbt001
               LET gs_keys_bak[1] = g_mmbt001_t
               LET gs_keys[2] = g_mmcg3_d[g_detail_idx].mmch003
               LET gs_keys_bak[2] = g_mmcg3_d_t.mmch003
               LET gs_keys[3] = g_mmcg3_d[g_detail_idx].mmch004
               LET gs_keys_bak[3] = g_mmcg3_d_t.mmch004
               CALL ammm356_update_b('mmch_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg3_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m),util.JSON.stringify(g_mmcg3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD mmch003
            #add-point:BEFORE FIELD mmch003
            {<point name="input.b.page3.mmch003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch003
            
            #add-point:AFTER FIELD mmch003
            {<point name="input.a.page3.mmch003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch003
            #add-point:ON CHANGE mmch003
            {<point name="input.g.page3.mmch003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch004
            #add-point:BEFORE FIELD mmch004
            {<point name="input.b.page3.mmch004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch004
            
            #add-point:AFTER FIELD mmch004
            {<point name="input.a.page3.mmch004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch004
            #add-point:ON CHANGE mmch004
            {<point name="input.g.page3.mmch004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch005
            #add-point:BEFORE FIELD mmch005
            {<point name="input.b.page3.mmch005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch005
            
            #add-point:AFTER FIELD mmch005
            {<point name="input.a.page3.mmch005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch005
            #add-point:ON CHANGE mmch005
            {<point name="input.g.page3.mmch005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch006
            #add-point:BEFORE FIELD mmch006
            {<point name="input.b.page3.mmch006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch006
            
            #add-point:AFTER FIELD mmch006
            {<point name="input.a.page3.mmch006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch006
            #add-point:ON CHANGE mmch006
            {<point name="input.g.page3.mmch006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch007
            #add-point:BEFORE FIELD mmch007
            {<point name="input.b.page3.mmch007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch007
            
            #add-point:AFTER FIELD mmch007
            {<point name="input.a.page3.mmch007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch007
            #add-point:ON CHANGE mmch007
            {<point name="input.g.page3.mmch007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch008
            #add-point:BEFORE FIELD mmch008
            {<point name="input.b.page3.mmch008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch008
            
            #add-point:AFTER FIELD mmch008
            {<point name="input.a.page3.mmch008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch008
            #add-point:ON CHANGE mmch008
            {<point name="input.g.page3.mmch008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch009
            #add-point:BEFORE FIELD mmch009
            {<point name="input.b.page3.mmch009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch009
            
            #add-point:AFTER FIELD mmch009
            {<point name="input.a.page3.mmch009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch009
            #add-point:ON CHANGE mmch009
            {<point name="input.g.page3.mmch009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch010
            #add-point:BEFORE FIELD mmch010
            {<point name="input.b.page3.mmch010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch010
            
            #add-point:AFTER FIELD mmch010
            {<point name="input.a.page3.mmch010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch010
            #add-point:ON CHANGE mmch010
            {<point name="input.g.page3.mmch010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch011
            #add-point:BEFORE FIELD mmch011
            {<point name="input.b.page3.mmch011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch011
            
            #add-point:AFTER FIELD mmch011
            {<point name="input.a.page3.mmch011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch011
            #add-point:ON CHANGE mmch011
            {<point name="input.g.page3.mmch011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch012
            #add-point:BEFORE FIELD mmch012
            {<point name="input.b.page3.mmch012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch012
            
            #add-point:AFTER FIELD mmch012
            {<point name="input.a.page3.mmch012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch012
            #add-point:ON CHANGE mmch012
            {<point name="input.g.page3.mmch012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch013
            #add-point:BEFORE FIELD mmch013
            {<point name="input.b.page3.mmch013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch013
            
            #add-point:AFTER FIELD mmch013
            {<point name="input.a.page3.mmch013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch013
            #add-point:ON CHANGE mmch013
            {<point name="input.g.page3.mmch013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch014
            #add-point:BEFORE FIELD mmch014
            {<point name="input.b.page3.mmch014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch014
            
            #add-point:AFTER FIELD mmch014
            {<point name="input.a.page3.mmch014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch014
            #add-point:ON CHANGE mmch014
            {<point name="input.g.page3.mmch014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch015
            #add-point:BEFORE FIELD mmch015
            {<point name="input.b.page3.mmch015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch015
            
            #add-point:AFTER FIELD mmch015
            {<point name="input.a.page3.mmch015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch015
            #add-point:ON CHANGE mmch015
            {<point name="input.g.page3.mmch015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmch016
            #add-point:BEFORE FIELD mmch016
            {<point name="input.b.page3.mmch016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmch016
            
            #add-point:AFTER FIELD mmch016
            {<point name="input.a.page3.mmch016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmch016
            #add-point:ON CHANGE mmch016
            {<point name="input.g.page3.mmch016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmchstus
            #add-point:BEFORE FIELD mmchstus
            {<point name="input.b.page3.mmchstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmchstus
            
            #add-point:AFTER FIELD mmchstus
            {<point name="input.a.page3.mmchstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmchstus
            #add-point:ON CHANGE mmchstus
            {<point name="input.g.page3.mmchstus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.mmch003
         ON ACTION controlp INFIELD mmch003
            #add-point:ON ACTION controlp INFIELD mmch003
            {<point name="input.c.page3.mmch003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch004
         ON ACTION controlp INFIELD mmch004
            #add-point:ON ACTION controlp INFIELD mmch004
            {<point name="input.c.page3.mmch004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch005
         ON ACTION controlp INFIELD mmch005
            #add-point:ON ACTION controlp INFIELD mmch005
            {<point name="input.c.page3.mmch005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch006
         ON ACTION controlp INFIELD mmch006
            #add-point:ON ACTION controlp INFIELD mmch006
            {<point name="input.c.page3.mmch006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch007
         ON ACTION controlp INFIELD mmch007
            #add-point:ON ACTION controlp INFIELD mmch007
            {<point name="input.c.page3.mmch007" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch008
         ON ACTION controlp INFIELD mmch008
            #add-point:ON ACTION controlp INFIELD mmch008
            {<point name="input.c.page3.mmch008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch009
         ON ACTION controlp INFIELD mmch009
            #add-point:ON ACTION controlp INFIELD mmch009
            {<point name="input.c.page3.mmch009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch010
         ON ACTION controlp INFIELD mmch010
            #add-point:ON ACTION controlp INFIELD mmch010
            {<point name="input.c.page3.mmch010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch011
         ON ACTION controlp INFIELD mmch011
            #add-point:ON ACTION controlp INFIELD mmch011
            {<point name="input.c.page3.mmch011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch012
         ON ACTION controlp INFIELD mmch012
            #add-point:ON ACTION controlp INFIELD mmch012
            {<point name="input.c.page3.mmch012" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch013
         ON ACTION controlp INFIELD mmch013
            #add-point:ON ACTION controlp INFIELD mmch013
            {<point name="input.c.page3.mmch013" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch014
         ON ACTION controlp INFIELD mmch014
            #add-point:ON ACTION controlp INFIELD mmch014
            {<point name="input.c.page3.mmch014" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch015
         ON ACTION controlp INFIELD mmch015
            #add-point:ON ACTION controlp INFIELD mmch015
            {<point name="input.c.page3.mmch015" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmch016
         ON ACTION controlp INFIELD mmch016
            #add-point:ON ACTION controlp INFIELD mmch016
            {<point name="input.c.page3.mmch016" />}
            #END add-point
 
         #Ctrlp:input.c.page3.mmchstus
         ON ACTION controlp INFIELD mmchstus
            #add-point:ON ACTION controlp INFIELD mmchstus
            {<point name="input.c.page3.mmchstus" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmcg3_d[l_ac].* = g_mmcg3_d_t.*
               END IF
               CLOSE ammm356_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammm356_unlock_b("mmch_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmcg3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmcg3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="ammm356.input.head" ver="8" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
          g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
          g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.mmbtl001 = g_mmbt_m.mmbt001
LET g_master_multi_table_t.mmbtl003 = g_mmbt_m.mmbtl003
LET g_master_multi_table_t.mmbtl004 = g_mmbt_m.mmbtl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.mmbtl001 = ''
LET g_master_multi_table_t.mmbtl003 = ''
LET g_master_multi_table_t.mmbtl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD mmbt004
            #add-point:BEFORE FIELD mmbt004
            {<point name="input.b.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt004
            
            #add-point:AFTER FIELD mmbt004
            {<point name="input.a.mmbt004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt004
            #add-point:ON CHANGE mmbt004
            {<point name="input.g.mmbt004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt001
            #add-point:BEFORE FIELD mmbt001
            {<point name="input.b.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt001
            
            #add-point:AFTER FIELD mmbt001
            {<point name="input.a.mmbt001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt001
            #add-point:ON CHANGE mmbt001
            {<point name="input.g.mmbt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt002
            #add-point:BEFORE FIELD mmbt002
            {<point name="input.b.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt002
            
            #add-point:AFTER FIELD mmbt002
            {<point name="input.a.mmbt002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt002
            #add-point:ON CHANGE mmbt002
            {<point name="input.g.mmbt002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl003
            #add-point:BEFORE FIELD mmbtl003
            {<point name="input.b.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl003
            
            #add-point:AFTER FIELD mmbtl003
            {<point name="input.a.mmbtl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtl003
            #add-point:ON CHANGE mmbtl003
            {<point name="input.g.mmbtl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtl004
            #add-point:BEFORE FIELD mmbtl004
            {<point name="input.b.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtl004
            
            #add-point:AFTER FIELD mmbtl004
            {<point name="input.a.mmbtl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtl004
            #add-point:ON CHANGE mmbtl004
            {<point name="input.g.mmbtl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt006
            #add-point:BEFORE FIELD mmbt006
            {<point name="input.b.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt006
            
            #add-point:AFTER FIELD mmbt006
            {<point name="input.a.mmbt006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt006
            #add-point:ON CHANGE mmbt006
            {<point name="input.g.mmbt006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt003
            #add-point:BEFORE FIELD mmbt003
            {<point name="input.b.mmbt003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt003
            
            #add-point:AFTER FIELD mmbt003
            {<point name="input.a.mmbt003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt003
            #add-point:ON CHANGE mmbt003
            {<point name="input.g.mmbt003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt005
            
            #add-point:AFTER FIELD mmbt005
            {<point name="input.a.mmbt005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt005
            #add-point:BEFORE FIELD mmbt005
            {<point name="input.b.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt005
            #add-point:ON CHANGE mmbt005
            {<point name="input.g.mmbt005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt007
            #add-point:BEFORE FIELD mmbt007
            {<point name="input.b.mmbt007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt007
            
            #add-point:AFTER FIELD mmbt007
            {<point name="input.a.mmbt007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt007
            #add-point:ON CHANGE mmbt007
            {<point name="input.g.mmbt007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt008
            #add-point:BEFORE FIELD mmbt008
            {<point name="input.b.mmbt008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt008
            
            #add-point:AFTER FIELD mmbt008
            {<point name="input.a.mmbt008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt008
            #add-point:ON CHANGE mmbt008
            {<point name="input.g.mmbt008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt014
            #add-point:BEFORE FIELD mmbt014
            {<point name="input.b.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt014
            
            #add-point:AFTER FIELD mmbt014
            {<point name="input.a.mmbt014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt014
            #add-point:ON CHANGE mmbt014
            {<point name="input.g.mmbt014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt015
            #add-point:BEFORE FIELD mmbt015
            {<point name="input.b.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt015
            
            #add-point:AFTER FIELD mmbt015
            {<point name="input.a.mmbt015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt015
            #add-point:ON CHANGE mmbt015
            {<point name="input.g.mmbt015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt016
            #add-point:BEFORE FIELD mmbt016
            {<point name="input.b.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt016
            
            #add-point:AFTER FIELD mmbt016
            {<point name="input.a.mmbt016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt016
            #add-point:ON CHANGE mmbt016
            {<point name="input.g.mmbt016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtunit
            
            #add-point:AFTER FIELD mmbtunit
            {<point name="input.a.mmbtunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtunit
            #add-point:BEFORE FIELD mmbtunit
            {<point name="input.b.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtunit
            #add-point:ON CHANGE mmbtunit
            {<point name="input.g.mmbtunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbt017
            #add-point:BEFORE FIELD mmbt017
            {<point name="input.b.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbt017
            
            #add-point:AFTER FIELD mmbt017
            {<point name="input.a.mmbt017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbt017
            #add-point:ON CHANGE mmbt017
            {<point name="input.g.mmbt017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mmbtstus
            #add-point:BEFORE FIELD mmbtstus
            {<point name="input.b.mmbtstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mmbtstus
            
            #add-point:AFTER FIELD mmbtstus
            {<point name="input.a.mmbtstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mmbtstus
            #add-point:ON CHANGE mmbtstus
            {<point name="input.g.mmbtstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.mmbt004
         ON ACTION controlp INFIELD mmbt004
            #add-point:ON ACTION controlp INFIELD mmbt004
            {<point name="input.c.mmbt004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt001
         ON ACTION controlp INFIELD mmbt001
            #add-point:ON ACTION controlp INFIELD mmbt001
            {<point name="input.c.mmbt001" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt002
         ON ACTION controlp INFIELD mmbt002
            #add-point:ON ACTION controlp INFIELD mmbt002
            {<point name="input.c.mmbt002" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtl003
         ON ACTION controlp INFIELD mmbtl003
            #add-point:ON ACTION controlp INFIELD mmbtl003
            {<point name="input.c.mmbtl003" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtl004
         ON ACTION controlp INFIELD mmbtl004
            #add-point:ON ACTION controlp INFIELD mmbtl004
            {<point name="input.c.mmbtl004" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt006
         ON ACTION controlp INFIELD mmbt006
            #add-point:ON ACTION controlp INFIELD mmbt006
            {<point name="input.c.mmbt006" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt003
         ON ACTION controlp INFIELD mmbt003
            #add-point:ON ACTION controlp INFIELD mmbt003
            {<point name="input.c.mmbt003" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt005
         ON ACTION controlp INFIELD mmbt005
            #add-point:ON ACTION controlp INFIELD mmbt005
            {<point name="input.c.mmbt005" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt007
         ON ACTION controlp INFIELD mmbt007
            #add-point:ON ACTION controlp INFIELD mmbt007
            {<point name="input.c.mmbt007" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt008
         ON ACTION controlp INFIELD mmbt008
            #add-point:ON ACTION controlp INFIELD mmbt008
            {<point name="input.c.mmbt008" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt014
         ON ACTION controlp INFIELD mmbt014
            #add-point:ON ACTION controlp INFIELD mmbt014
            {<point name="input.c.mmbt014" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt015
         ON ACTION controlp INFIELD mmbt015
            #add-point:ON ACTION controlp INFIELD mmbt015
            {<point name="input.c.mmbt015" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt016
         ON ACTION controlp INFIELD mmbt016
            #add-point:ON ACTION controlp INFIELD mmbt016
            {<point name="input.c.mmbt016" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtunit
         ON ACTION controlp INFIELD mmbtunit
            #add-point:ON ACTION controlp INFIELD mmbtunit
            {<point name="input.c.mmbtunit" />}
            #END add-point
 
         #Ctrlp:input.c.mmbt017
         ON ACTION controlp INFIELD mmbt017
            #add-point:ON ACTION controlp INFIELD mmbt017
            {<point name="input.c.mmbt017" />}
            #END add-point
 
         #Ctrlp:input.c.mmbtstus
         ON ACTION controlp INFIELD mmbtstus
            #add-point:ON ACTION controlp INFIELD mmbtstus
            {<point name="input.c.mmbtstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_mmbt_m.mmbt001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO mmbt_t (mmbtent,mmbt004,mmbt001,mmbt002,mmbt006,mmbt003,mmbt005,mmbt007,mmbt008, 
                   mmbt014,mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid,mmbtcrtdp, 
                   mmbtcrtdt,mmbtcnfid,mmbtcnfdt)
               VALUES (g_enterprise,g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbt006, 
                   g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
                   g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus, 
                   g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt, 
                   g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_mmbt_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbt_m.mmbt001 = g_master_multi_table_t.mmbtl001 AND
         g_mmbt_m.mmbtl003 = g_master_multi_table_t.mmbtl003 AND 
         g_mmbt_m.mmbtl004 = g_master_multi_table_t.mmbtl004  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbt_m.mmbt001
            LET l_field_keys[01] = 'mmbtl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbtl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbt_m.mmbtl003
            LET l_fields[01] = 'mmbtl003'
            LET l_vars[02] = g_mmbt_m.mmbtl004
            LET l_fields[02] = 'mmbtl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbtlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbtl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammm356_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE mmbt_t SET (mmbt004,mmbt001,mmbt002,mmbt006,mmbt003,mmbt005,mmbt007,mmbt008,mmbt014, 
                   mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid,mmbtcrtdp, 
                   mmbtcrtdt,mmbtcnfid,mmbtcnfdt) = (g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
                   g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008, 
                   g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017, 
                   g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp, 
                   g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt)
                WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("mmbt_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_mmbt_m.mmbt001 = g_master_multi_table_t.mmbtl001 AND
         g_mmbt_m.mmbtl003 = g_master_multi_table_t.mmbtl003 AND 
         g_mmbt_m.mmbtl004 = g_master_multi_table_t.mmbtl004  THEN
         ELSE 
            LET l_var_keys[01] = g_mmbt_m.mmbt001
            LET l_field_keys[01] = 'mmbtl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.mmbtl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'mmbtl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_mmbt_m.mmbtl003
            LET l_fields[01] = 'mmbtl003'
            LET l_vars[02] = g_mmbt_m.mmbtl004
            LET l_fields[02] = 'mmbtl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mmbtlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mmbtl_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_mmbt_m_t)
               LET g_log2 = util.JSON.stringify(g_mmbt_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_mmbt001_t = g_mmbt_m.mmbt001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="ammm356.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbt001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcg003
               WHEN "s_detail2"
                  NEXT FIELD mmbx004
               WHEN "s_detail3"
                  NEXT FIELD mmch003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.insert" ver="5" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION ammm356_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmcg_d.clear()   
   CALL g_mmcg2_d.clear()  
   CALL g_mmcg3_d.clear()  
 
 
   INITIALIZE g_mmbt_m.* LIKE mmbt_t.*             #DEFAULT 設定
   
   LET g_mmbt001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_mmbt_m.mmbtownid = g_user
      LET g_mmbt_m.mmbtowndp = g_dept
      LET g_mmbt_m.mmbtcrtid = g_user
      LET g_mmbt_m.mmbtcrtdp = g_dept 
      LET g_mmbt_m.mmbtcrtdt = cl_get_current()
      LET g_mmbt_m.mmbtmodid = ""
      LET g_mmbt_m.mmbtmoddt = ""
      LET g_mmbt_m.mmbtstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmbt_m.mmbt004 = "3"
      LET g_mmbt_m.mmbt003 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL ammm356_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbt_m.* = g_mmbt_m_t.*
         CALL ammm356_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_mmcg_d.clear()
      CALL g_mmcg2_d.clear()
      CALL g_mmcg3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   
   LET g_wc = g_wc,  
              " OR ( mmbtent = '" ||g_enterprise|| "' AND",
              " mmbt001 = '", g_mmbt_m.mmbt001 CLIPPED, "' "
 
              , ") "
   
   CLOSE ammm356_cl
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.insert_b" ver="3" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION ammm356_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO mmcg_t
                  (mmcgent,
                   mmcg001,
                   mmcg003,mmcg004
                   ,mmcg005,mmcgstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmcg_d[g_detail_idx].mmcg005,g_mmcg_d[g_detail_idx].mmcgstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmcg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO mmbx_t
                  (mmbxent,
                   mmbx001,
                   mmbx004
                   ,mmbx005,mmbxstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcg2_d[g_detail_idx].mmbx005,g_mmcg2_d[g_detail_idx].mmbxstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmbx_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO mmch_t
                  (mmchent,
                   mmch001,
                   mmch003,mmch004
                   ,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010,mmch011,mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmcg3_d[g_detail_idx].mmch005,g_mmcg3_d[g_detail_idx].mmch006,g_mmcg3_d[g_detail_idx].mmch007, 
                       g_mmcg3_d[g_detail_idx].mmch008,g_mmcg3_d[g_detail_idx].mmch009,g_mmcg3_d[g_detail_idx].mmch010, 
                       g_mmcg3_d[g_detail_idx].mmch011,g_mmcg3_d[g_detail_idx].mmch012,g_mmcg3_d[g_detail_idx].mmch013, 
                       g_mmcg3_d[g_detail_idx].mmch014,g_mmcg3_d[g_detail_idx].mmch015,g_mmcg3_d[g_detail_idx].mmch016, 
                       g_mmcg3_d[g_detail_idx].mmchstus)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("mmch_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammm356_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL ammm356_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmcg_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammm356_bcl USING g_enterprise,
                                       g_mmbt_m.mmbt001,g_mmcg_d[g_detail_idx].mmcg003,g_mmcg_d[g_detail_idx].mmcg004  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm356_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmbx_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammm356_bcl2 USING g_enterprise,
                                             g_mmbt_m.mmbt001,g_mmcg2_d[g_detail_idx].mmbx004
      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm356_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmch_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammm356_bcl3 USING g_enterprise,
                                             g_mmbt_m.mmbt001,g_mmcg3_d[g_detail_idx].mmch003,g_mmcg3_d[g_detail_idx].mmch004 

      IF SQLCA.sqlcode THEN
         CALL cl_err("ammm356_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.main" ver="8" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT mmbt004,mmbt001,mmbt002,'','',mmbt006,mmbt003,mmbt005,'',mmbt007,mmbt008, 
       mmbt014,mmbt015,mmbt016,mmbtunit,'',mmbt017,mmbtstus,mmbtownid,'',mmbtowndp,'',mmbtcrtid,'',mmbtcrtdp, 
       '',mmbtcrtdt,mmbtmodid,'',mmbtmoddt,mmbtcnfid,'',mmbtcnfdt,'','','','','','','',''", 
                      " FROM mmbt_t",
                      " WHERE mmbtent= ? AND mmbt001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammm356_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE mmbt004,mmbt001,mmbt002,mmbt006,mmbt003,mmbt005,mmbt007,mmbt008,mmbt014, 
       mmbt015,mmbt016,mmbtunit,mmbt017,mmbtstus,mmbtownid,mmbtowndp,mmbtcrtid,mmbtcrtdp,mmbtcrtdt,mmbtmodid, 
       mmbtmoddt,mmbtcnfid,mmbtcnfdt,t1.mmanl003 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 , 
       t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM mmbt_t",
                              " LEFT JOIN mmanl_t t1 ON t1.mmanlent='"||g_enterprise||"' AND t1.mmanl001=mmbt005 AND t1.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=mmbtunit AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=mmbtownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=mmbtowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=mmbtcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=mmbtcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=mmbtmodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=mmbtcnfid  ",
 
               " WHERE mmbtent = '" ||g_enterprise|| "' AND mmbt001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ammm356_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammm356 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammm356_init()   
 
      #進入選單 Menu (="N")
      CALL ammm356_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammm356
      
   END IF 
   
   CLOSE ammm356_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="ammm356.modify" ver="8" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION ammm356_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
 
   ERROR ""
  
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
   CALL s_transaction_begin()
   
   OPEN ammm356_cl USING g_enterprise,g_mmbt_m.mmbt001
   IF STATUS THEN
      CALL cl_err("OPEN ammm356_cl:", STATUS, 1)
      CLOSE ammm356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mmbt_m.mmbt001,SQLCA.sqlcode,0)
      CLOSE ammm356_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL ammm356_show()
   WHILE TRUE
      LET g_mmbt001_t = g_mmbt_m.mmbt001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbt_m.mmbtmodid = g_user 
LET g_mmbt_m.mmbtmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL ammm356_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mmbt_m.* = g_mmbt_m_t.*
         CALL ammm356_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE mmbt_t SET (mmbtmodid,mmbtmoddt) = (g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmoddt)
       WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt001_t
 
                  
      #若單頭key欄位有變更
      IF g_mmbt_m.mmbt001 != g_mmbt001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE mmcg_t SET mmcg001 = g_mmbt_m.mmbt001
 
          WHERE mmcgent = g_enterprise AND mmcg001 = g_mmbt001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmcg_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmcg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE mmbx_t
            SET mmbx001 = g_mmbt_m.mmbt001
 
          WHERE mmbxent = g_enterprise AND
                mmbx001 = g_mmbt001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmbx_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE mmch_t
            SET mmch001 = g_mmbt_m.mmbt001
 
          WHERE mmchent = g_enterprise AND
                mmch001 = g_mmbt001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mmch_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mmch_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_mmbt_m.mmbt001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE ammm356_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mmbt_m.mmbt001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="ammm356.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammm356.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ammm356.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammm356_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmcg_d.clear()
   CALL g_mmcg2_d.clear()
   CALL g_mmcg3_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL ammm356_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL ammm356_browser_fill("")
      CALL ammm356_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammm356_filter_show('mmbt001')
   CALL ammm356_filter_show('mmbt002')
   CALL ammm356_filter_show('mmbt004')
   CALL ammm356_filter_show('mmbt005')
   CALL ammm356_filter_show('mmbt006')
   CALL ammm356_filter_show('mmbt007')
   CALL ammm356_filter_show('mmbt008')
   CALL ammm356_filter_show('mmbt015')
   CALL ammm356_filter_show('mmbt016')
   CALL ammm356_filter_show('mmbt017')
   CALL ammm356_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL ammm356_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.reproduce" ver="5" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION ammm356_reproduce()
   DEFINE l_newno     LIKE mmbt_t.mmbt001 
   DEFINE l_oldno     LIKE mmbt_t.mmbt001 
 
   DEFINE l_master    RECORD LIKE mmbt_t.*
   DEFINE l_detail    RECORD LIKE mmcg_t.*
   DEFINE l_detail2    RECORD LIKE mmbx_t.*
 
   DEFINE l_detail3    RECORD LIKE mmch_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_mmbt001_t = g_mmbt_m.mmbt001
 
    
   LET g_mmbt_m.mmbt001 = ""
 
    
   CALL ammm356_set_entry('a')
   CALL ammm356_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_mmbt_m.mmbtownid = g_user
      LET g_mmbt_m.mmbtowndp = g_dept
      LET g_mmbt_m.mmbtcrtid = g_user
      LET g_mmbt_m.mmbtcrtdp = g_dept 
      LET g_mmbt_m.mmbtcrtdt = cl_get_current()
      LET g_mmbt_m.mmbtmodid = ""
      LET g_mmbt_m.mmbtmoddt = ""
      LET g_mmbt_m.mmbtstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL ammm356_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " mmbt001 = '", g_mmbt_m.mmbt001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammm356_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbt001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION ammm356_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="ammm356.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammm356_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbt001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION ammm356_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="ammm356.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION ammm356_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbt_m.mmbt001
   LET g_pk_array[1].column = 'mmbt001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="ammm356.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammm356_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_mmbt_m_t.* = g_mmbt_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL ammm356_b_fill() #單身填充
      CALL ammm356_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_mmbt_m.mmbtownid_desc = cl_get_username(g_mmbt_m.mmbtownid)
      #LET g_mmbt_m.mmbtowndp_desc = cl_get_deptname(g_mmbt_m.mmbtowndp)
      #LET g_mmbt_m.mmbtcrtid_desc = cl_get_username(g_mmbt_m.mmbtcrtid)
      #LET g_mmbt_m.mmbtcrtdp_desc = cl_get_deptname(g_mmbt_m.mmbtcrtdp)
      #LET g_mmbt_m.mmbtmodid_desc = cl_get_username(g_mmbt_m.mmbtmodid)
      #LET g_mmbt_m.mmbtcnfid_desc = cl_get_deptname(g_mmbt_m.mmbtcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL ammm356_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002,g_mmbt_m.mmbtl003,g_mmbt_m.mmbtl004, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008, 
       g_mmbt_m.mmbt014,g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbtunit_desc,g_mmbt_m.mmbt017, 
       g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid,g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtowndp_desc, 
       g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdp_desc,g_mmbt_m.mmbtcrtdt, 
       g_mmbt_m.mmbtmodid,g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfid_desc, 
       g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmch004_1,g_mmbt_m.mmch011_1,g_mmbt_m.mmch013_1,g_mmbt_m.mmch015_1, 
       g_mmbt_m.mmch004_desc_1,g_mmbt_m.mmch012_1,g_mmbt_m.mmch014_1,g_mmbt_m.mmch016_1
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_mmbt_m.mmbtstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmcg_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmcg2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmcg3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammm356_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="ammm356.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION ammm356_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbt_m.mmbt001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbt_m.mmbtstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE mmbt_t SET mmbtstus = lc_state 
    WHERE mmbtent = g_enterprise AND mmbt001 = g_mmbt_m.mmbt001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_mmbt_m.mmbtstus = lc_state
      DISPLAY BY NAME g_mmbt_m.mmbtstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="ammm356.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammm356_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbt001 = g_mmbt_m.mmbt001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION ammm356_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.ui_dialog" ver="21" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION ammm356_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL ammm356_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mmbt001 = g_mmbt001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammm356_fetch('') # reload data
               LET l_ac = 1
               CALL ammm356_ui_detailshow() #Setting the current row 
      
               CALL ammm356_idx_chk()
               #NEXT FIELD mmcg003
         
         END DISPLAY
        
         DISPLAY ARRAY g_mmcg_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL ammm356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL ammm356_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mmcg2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammm356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL ammm356_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_mmcg3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammm356_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL ammm356_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammm356_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammm356_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammm356_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammm356_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL ammm356_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL ammm356_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL ammm356_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL ammm356_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL ammm356_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm356_idx_chk()
            
         ON ACTION previous
            CALL ammm356_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm356_idx_chk()
            
         ON ACTION jump
            CALL ammm356_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm356_idx_chk()
            
         ON ACTION next
            CALL ammm356_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm356_idx_chk()
            
         ON ACTION last
            CALL ammm356_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammm356_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmcg003
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION remarks
            LET g_action_choice="remarks"
            IF cl_auth_chk_act("remarks") THEN
               
               #add-point:ON ACTION remarks
               {<point name="menu.remarks" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION issue
            LET g_action_choice="issue"
            IF cl_auth_chk_act("issue") THEN
               
               #add-point:ON ACTION issue
               {<point name="menu.issue" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammm356_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION exclude
            LET g_action_choice="exclude"
            IF cl_auth_chk_act("exclude") THEN
               
               #add-point:ON ACTION exclude
               {<point name="menu.exclude" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL ammm356_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammm356_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammm356_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="ammm356.ui_headershow" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION ammm356_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mmbt_m.mmbt001 = g_browser[g_current_idx].b_mmbt001   
 
   EXECUTE ammm356_master_referesh USING g_mmbt_m.mmbt001 INTO g_mmbt_m.mmbt004,g_mmbt_m.mmbt001,g_mmbt_m.mmbt002, 
       g_mmbt_m.mmbt006,g_mmbt_m.mmbt003,g_mmbt_m.mmbt005,g_mmbt_m.mmbt007,g_mmbt_m.mmbt008,g_mmbt_m.mmbt014, 
       g_mmbt_m.mmbt015,g_mmbt_m.mmbt016,g_mmbt_m.mmbtunit,g_mmbt_m.mmbt017,g_mmbt_m.mmbtstus,g_mmbt_m.mmbtownid, 
       g_mmbt_m.mmbtowndp,g_mmbt_m.mmbtcrtid,g_mmbt_m.mmbtcrtdp,g_mmbt_m.mmbtcrtdt,g_mmbt_m.mmbtmodid, 
       g_mmbt_m.mmbtmoddt,g_mmbt_m.mmbtcnfid,g_mmbt_m.mmbtcnfdt,g_mmbt_m.mmbt005_desc,g_mmbt_m.mmbtunit_desc, 
       g_mmbt_m.mmbtownid_desc,g_mmbt_m.mmbtowndp_desc,g_mmbt_m.mmbtcrtid_desc,g_mmbt_m.mmbtcrtdp_desc, 
       g_mmbt_m.mmbtmodid_desc,g_mmbt_m.mmbtcnfid_desc
   CALL ammm356_show()
   
END FUNCTION
]]>
  </section>
  <section id="ammm356.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammm356_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm356_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm356_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammm356_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="ammm356.update_b" ver="3" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION ammm356_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE mmcg_t 
         SET (mmcg001,
              mmcg003,mmcg004
              ,mmcg005,mmcgstus) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmcg_d[g_detail_idx].mmcg005,g_mmcg_d[g_detail_idx].mmcgstus) 
         WHERE mmcgent = g_enterprise AND mmcg001 = ps_keys_bak[1] AND mmcg003 = ps_keys_bak[2] AND mmcg004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmcg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmcg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbx_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE mmbx_t 
         SET (mmbx001,
              mmbx004
              ,mmbx005,mmbxstus) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcg2_d[g_detail_idx].mmbx005,g_mmcg2_d[g_detail_idx].mmbxstus) 
         WHERE mmbxent = g_enterprise AND mmbx001 = ps_keys_bak[1] AND mmbx004 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmbx_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmbx_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmch_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE mmch_t 
         SET (mmch001,
              mmch003,mmch004
              ,mmch005,mmch006,mmch007,mmch008,mmch009,mmch010,mmch011,mmch012,mmch013,mmch014,mmch015,mmch016,mmchstus) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmcg3_d[g_detail_idx].mmch005,g_mmcg3_d[g_detail_idx].mmch006,g_mmcg3_d[g_detail_idx].mmch007, 
                  g_mmcg3_d[g_detail_idx].mmch008,g_mmcg3_d[g_detail_idx].mmch009,g_mmcg3_d[g_detail_idx].mmch010, 
                  g_mmcg3_d[g_detail_idx].mmch011,g_mmcg3_d[g_detail_idx].mmch012,g_mmcg3_d[g_detail_idx].mmch013, 
                  g_mmcg3_d[g_detail_idx].mmch014,g_mmcg3_d[g_detail_idx].mmch015,g_mmcg3_d[g_detail_idx].mmch016, 
                  g_mmcg3_d[g_detail_idx].mmchstus) 
         WHERE mmchent = g_enterprise AND mmch001 = ps_keys_bak[1] AND mmch003 = ps_keys_bak[2] AND mmch004 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("mmch_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("mmch_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
