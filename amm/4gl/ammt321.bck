#該程式未解開Section, 採用最新樣板產出!
{<section id="ammt321.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0014(2014-12-08 09:44:40), PR版次:0014(2016-11-21 14:37:12)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000279
#+ Filename...: ammt321
#+ Description: 會員卡開帳維護作業
#+ Creator....: 01533(2013-11-28 15:33:02)
#+ Modifier...: 06137 -SD/PR- 02159
 
{</section>}
 
{<section id="ammt321.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#160318-00025#45  2016/04/19 by 07959   將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160816-00068#5   2016/08/17 By earl    調整transaction
#160818-00017#21  2016/08/24 By 08742   删除修改未重新判断状态码
#161024-00025#7   2016/10/24 by 08742   组织开窗调整
#160824-00007#111 2016/11/21 By sakura  新舊值備份處理
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmbf_m        RECORD
       mmbfsite LIKE mmbf_t.mmbfsite, 
   mmbfsite_desc LIKE type_t.chr80, 
   mmbfdocdt LIKE mmbf_t.mmbfdocdt, 
   mmbfdocno LIKE mmbf_t.mmbfdocno, 
   mmbfunit LIKE mmbf_t.mmbfunit, 
   mmbf001 LIKE mmbf_t.mmbf001, 
   mmbf001_desc LIKE type_t.chr80, 
   mmbfstus LIKE mmbf_t.mmbfstus, 
   mmbfownid LIKE mmbf_t.mmbfownid, 
   mmbfownid_desc LIKE type_t.chr80, 
   mmbfowndp LIKE mmbf_t.mmbfowndp, 
   mmbfowndp_desc LIKE type_t.chr80, 
   mmbfcrtid LIKE mmbf_t.mmbfcrtid, 
   mmbfcrtid_desc LIKE type_t.chr80, 
   mmbfcrtdp LIKE mmbf_t.mmbfcrtdp, 
   mmbfcrtdp_desc LIKE type_t.chr80, 
   mmbfcrtdt LIKE mmbf_t.mmbfcrtdt, 
   mmbfmodid LIKE mmbf_t.mmbfmodid, 
   mmbfmodid_desc LIKE type_t.chr80, 
   mmbfmoddt LIKE mmbf_t.mmbfmoddt, 
   mmbfcnfid LIKE mmbf_t.mmbfcnfid, 
   mmbfcnfid_desc LIKE type_t.chr80, 
   mmbfcnfdt LIKE mmbf_t.mmbfcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmbg_d        RECORD
       mmbg001 LIKE mmbg_t.mmbg001, 
   mmbg002 LIKE mmbg_t.mmbg002, 
   mmbg002_desc LIKE type_t.chr500, 
   mmbg003 LIKE mmbg_t.mmbg003, 
   mmbg003_desc LIKE type_t.chr500, 
   mmbg004 LIKE mmbg_t.mmbg004, 
   mmbg005 LIKE mmbg_t.mmbg005, 
   mmbg006 LIKE mmbg_t.mmbg006, 
   mmbg007 LIKE mmbg_t.mmbg007, 
   mmbg008 LIKE mmbg_t.mmbg008, 
   mmbg009 LIKE mmbg_t.mmbg009, 
   mmbg011 LIKE mmbg_t.mmbg011, 
   mmbg010 LIKE mmbg_t.mmbg010, 
   mmbg012 LIKE mmbg_t.mmbg012, 
   mmbg032 LIKE mmbg_t.mmbg032, 
   mmbg013 LIKE mmbg_t.mmbg013, 
   mmbg014 LIKE mmbg_t.mmbg014, 
   mmbg015 LIKE mmbg_t.mmbg015, 
   mmbg016 LIKE mmbg_t.mmbg016, 
   mmbg017 LIKE mmbg_t.mmbg017, 
   mmbg018 LIKE mmbg_t.mmbg018, 
   mmbg019 LIKE mmbg_t.mmbg019, 
   mmbg020 LIKE mmbg_t.mmbg020, 
   mmbg020_desc LIKE type_t.chr500, 
   mmbg021 LIKE mmbg_t.mmbg021, 
   mmbg022 LIKE mmbg_t.mmbg022, 
   mmbg022_desc LIKE type_t.chr500, 
   mmbg023 LIKE mmbg_t.mmbg023, 
   mmbg024 LIKE mmbg_t.mmbg024, 
   mmbg024_desc LIKE type_t.chr500, 
   mmbg025 LIKE mmbg_t.mmbg025, 
   mmbg026 LIKE mmbg_t.mmbg026, 
   mmbg026_desc LIKE type_t.chr500, 
   mmbg027 LIKE mmbg_t.mmbg027, 
   mmbg028 LIKE mmbg_t.mmbg028, 
   mmbg028_desc LIKE type_t.chr500, 
   mmbg029 LIKE mmbg_t.mmbg029, 
   mmbg030 LIKE mmbg_t.mmbg030, 
   mmbg030_desc LIKE type_t.chr500, 
   mmbg031 LIKE mmbg_t.mmbg031, 
   mmbgunit LIKE mmbg_t.mmbgunit, 
   mmbgsite LIKE mmbg_t.mmbgsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_mmbfdocno LIKE mmbf_t.mmbfdocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_assign_no    LIKE type_t.chr1
DEFINE g_site_flag   LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_mmbf_m          type_g_mmbf_m
DEFINE g_mmbf_m_t        type_g_mmbf_m
DEFINE g_mmbf_m_o        type_g_mmbf_m
DEFINE g_mmbf_m_mask_o   type_g_mmbf_m #轉換遮罩前資料
DEFINE g_mmbf_m_mask_n   type_g_mmbf_m #轉換遮罩後資料
 
   DEFINE g_mmbfdocno_t LIKE mmbf_t.mmbfdocno
 
 
DEFINE g_mmbg_d          DYNAMIC ARRAY OF type_g_mmbg_d
DEFINE g_mmbg_d_t        type_g_mmbg_d
DEFINE g_mmbg_d_o        type_g_mmbg_d
DEFINE g_mmbg_d_mask_o   DYNAMIC ARRAY OF type_g_mmbg_d #轉換遮罩前資料
DEFINE g_mmbg_d_mask_n   DYNAMIC ARRAY OF type_g_mmbg_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="ammt321.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT mmbfsite,'',mmbfdocdt,mmbfdocno,mmbfunit,mmbf001,'',mmbfstus,mmbfownid, 
       '',mmbfowndp,'',mmbfcrtid,'',mmbfcrtdp,'',mmbfcrtdt,mmbfmodid,'',mmbfmoddt,mmbfcnfid,'',mmbfcnfdt", 
        
                      " FROM mmbf_t",
                      " WHERE mmbfent= ? AND mmbfdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt321_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.mmbfsite,t0.mmbfdocdt,t0.mmbfdocno,t0.mmbfunit,t0.mmbf001,t0.mmbfstus, 
       t0.mmbfownid,t0.mmbfowndp,t0.mmbfcrtid,t0.mmbfcrtdp,t0.mmbfcrtdt,t0.mmbfmodid,t0.mmbfmoddt,t0.mmbfcnfid, 
       t0.mmbfcnfdt,t1.ooefl003 ,t2.oocql004",
               " FROM mmbf_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.mmbfsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='2055' AND t2.oocql002=t0.mmbf001 AND t2.oocql003='"||g_dlang||"' ",
 
               " WHERE t0.mmbfent = " ||g_enterprise|| " AND t0.mmbfdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE ammt321_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt321 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt321_init()   
 
      #進入選單 Menu (="N")
      CALL ammt321_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt321
      
   END IF 
   
   CLOSE ammt321_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="ammt321.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt321_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('mmbfstus','13','N,Y,X')
 
      CALL cl_set_combo_scc('mmbg006','6515') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   LET g_ooef004 = ''
   LET g_ooef005 = ''
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF  
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
   
   #初始化搜尋條件
   CALL ammt321_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="ammt321.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION ammt321_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt321_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_mmbf_m.* TO NULL
         CALL g_mmbg_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL ammt321_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_mmbg_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt321_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL ammt321_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL ammt321_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt321_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt321_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt321_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt321_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL ammt321_set_act_visible()   
            CALL ammt321_set_act_no_visible()
            IF NOT (g_mmbf_m.mmbfdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " mmbfent = " ||g_enterprise|| " AND",
                                  " mmbfdocno = '", g_mmbf_m.mmbfdocno, "' "
 
               #填到對應位置
               CALL ammt321_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmbf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmbg_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL ammt321_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmbf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmbg_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL ammt321_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL ammt321_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL ammt321_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt321_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL ammt321_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt321_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL ammt321_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt321_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL ammt321_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt321_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL ammt321_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt321_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmbg_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt321_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt321_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt321_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt321_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/amm/ammt321_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/amm/ammt321_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt321_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL ammt321_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt321_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt321_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_mmbf_m.mmbfdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="ammt321.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt321_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL s_aooi500_sql_where(g_prog,'mmbfsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT mmbfdocno ",
                      " FROM mmbf_t ",
                      " ",
                      " LEFT JOIN mmbg_t ON mmbgent = mmbfent AND mmbfdocno = mmbgdocno ", "  ",
                      #add-point:browser_fill段sql(mmbg_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE mmbfent = " ||g_enterprise|| " AND mmbgent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmbf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT mmbfdocno ",
                      " FROM mmbf_t ", 
                      "  ",
                      "  ",
                      " WHERE mmbfent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("mmbf_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_mmbf_m.* TO NULL
      CALL g_mmbg_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.mmbfdocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.mmbfstus,t0.mmbfdocno ",
                  " FROM mmbf_t t0",
                  "  ",
                  "  LEFT JOIN mmbg_t ON mmbgent = mmbfent AND mmbfdocno = mmbgdocno ", "  ", 
                  #add-point:browser_fill段sql(mmbg_t1) name="browser_fill.join.mmbg_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.mmbfent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmbf_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.mmbfstus,t0.mmbfdocno ",
                  " FROM mmbf_t t0",
                  "  ",
                  
                  " WHERE t0.mmbfent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("mmbf_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY mmbfdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"mmbf_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmbfdocno
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_mmbfdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt321_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_mmbf_m.mmbfdocno = g_browser[g_current_idx].b_mmbfdocno   
 
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
   CALL ammt321_mmbf_t_mask()
   CALL ammt321_show()
      
END FUNCTION
 
{</section>}
 
{<section id="ammt321.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION ammt321_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt321_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmbfdocno = g_mmbf_m.mmbfdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION ammt321_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmbf_m.* TO NULL
   CALL g_mmbg_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmbfsite,mmbfdocdt,mmbfdocno,mmbfunit,mmbf001,mmbfstus,mmbfownid,mmbfowndp, 
          mmbfcrtid,mmbfcrtdp,mmbfcrtdt,mmbfmodid,mmbfmoddt,mmbfcnfid,mmbfcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<mmbfcrtdt>>----
         AFTER FIELD mmbfcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<mmbfmoddt>>----
         AFTER FIELD mmbfmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbfcnfdt>>----
         AFTER FIELD mmbfcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmbfpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmbfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfsite
            #add-point:ON ACTION controlp INFIELD mmbfsite name="construct.c.mmbfsite"
            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbf_m.mmbfsite             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = '2' #
#            LET g_qryparam.where = "ooef201 ='Y'"
#            CALL q_ooef001()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbfsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            LET g_mmbf_m.mmbfsite  = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbf_m.mmbfsite  TO mmbfsite              #顯示到畫面上

            NEXT FIELD mmbfsite                          #返回原欄位 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfsite
            #add-point:BEFORE FIELD mmbfsite name="construct.b.mmbfsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfsite
            
            #add-point:AFTER FIELD mmbfsite name="construct.a.mmbfsite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfdocdt
            #add-point:BEFORE FIELD mmbfdocdt name="construct.b.mmbfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfdocdt
            
            #add-point:AFTER FIELD mmbfdocdt name="construct.a.mmbfdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfdocdt
            #add-point:ON ACTION controlp INFIELD mmbfdocdt name="construct.c.mmbfdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmbfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfdocno
            #add-point:ON ACTION controlp INFIELD mmbfdocno name="construct.c.mmbfdocno"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmbfdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfdocno  #顯示到畫面上

            NEXT FIELD mmbfdocno                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfdocno
            #add-point:BEFORE FIELD mmbfdocno name="construct.b.mmbfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfdocno
            
            #add-point:AFTER FIELD mmbfdocno name="construct.a.mmbfdocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfunit
            #add-point:ON ACTION controlp INFIELD mmbfunit name="construct.c.mmbfunit"
      
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfunit
            #add-point:BEFORE FIELD mmbfunit name="construct.b.mmbfunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfunit
            
            #add-point:AFTER FIELD mmbfunit name="construct.a.mmbfunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbf001
            #add-point:ON ACTION controlp INFIELD mmbf001 name="construct.c.mmbf001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbf001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmbf001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbf001
            #add-point:BEFORE FIELD mmbf001 name="construct.b.mmbf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbf001
            
            #add-point:AFTER FIELD mmbf001 name="construct.a.mmbf001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfstus
            #add-point:BEFORE FIELD mmbfstus name="construct.b.mmbfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfstus
            
            #add-point:AFTER FIELD mmbfstus name="construct.a.mmbfstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfstus
            #add-point:ON ACTION controlp INFIELD mmbfstus name="construct.c.mmbfstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmbfownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfownid
            #add-point:ON ACTION controlp INFIELD mmbfownid name="construct.c.mmbfownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfownid  #顯示到畫面上

            NEXT FIELD mmbfownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfownid
            #add-point:BEFORE FIELD mmbfownid name="construct.b.mmbfownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfownid
            
            #add-point:AFTER FIELD mmbfownid name="construct.a.mmbfownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfowndp
            #add-point:ON ACTION controlp INFIELD mmbfowndp name="construct.c.mmbfowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfowndp  #顯示到畫面上

            NEXT FIELD mmbfowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfowndp
            #add-point:BEFORE FIELD mmbfowndp name="construct.b.mmbfowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfowndp
            
            #add-point:AFTER FIELD mmbfowndp name="construct.a.mmbfowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfcrtid
            #add-point:ON ACTION controlp INFIELD mmbfcrtid name="construct.c.mmbfcrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfcrtid  #顯示到畫面上

            NEXT FIELD mmbfcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfcrtid
            #add-point:BEFORE FIELD mmbfcrtid name="construct.b.mmbfcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfcrtid
            
            #add-point:AFTER FIELD mmbfcrtid name="construct.a.mmbfcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmbfcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfcrtdp
            #add-point:ON ACTION controlp INFIELD mmbfcrtdp name="construct.c.mmbfcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfcrtdp  #顯示到畫面上

            NEXT FIELD mmbfcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfcrtdp
            #add-point:BEFORE FIELD mmbfcrtdp name="construct.b.mmbfcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfcrtdp
            
            #add-point:AFTER FIELD mmbfcrtdp name="construct.a.mmbfcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfcrtdt
            #add-point:BEFORE FIELD mmbfcrtdt name="construct.b.mmbfcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmbfmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfmodid
            #add-point:ON ACTION controlp INFIELD mmbfmodid name="construct.c.mmbfmodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfmodid  #顯示到畫面上

            NEXT FIELD mmbfmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfmodid
            #add-point:BEFORE FIELD mmbfmodid name="construct.b.mmbfmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfmodid
            
            #add-point:AFTER FIELD mmbfmodid name="construct.a.mmbfmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfmoddt
            #add-point:BEFORE FIELD mmbfmoddt name="construct.b.mmbfmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmbfcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfcnfid
            #add-point:ON ACTION controlp INFIELD mmbfcnfid name="construct.c.mmbfcnfid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbfcnfid  #顯示到畫面上

            NEXT FIELD mmbfcnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfcnfid
            #add-point:BEFORE FIELD mmbfcnfid name="construct.b.mmbfcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfcnfid
            
            #add-point:AFTER FIELD mmbfcnfid name="construct.a.mmbfcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfcnfdt
            #add-point:BEFORE FIELD mmbfcnfdt name="construct.b.mmbfcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmbg001,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007,mmbg008,mmbg009, 
          mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017,mmbg018,mmbg019,mmbg020, 
          mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028,mmbg029,mmbg030,mmbg031,mmbgunit, 
          mmbgsite
           FROM s_detail1[1].mmbg001,s_detail1[1].mmbg002,s_detail1[1].mmbg003,s_detail1[1].mmbg004, 
               s_detail1[1].mmbg005,s_detail1[1].mmbg006,s_detail1[1].mmbg007,s_detail1[1].mmbg008,s_detail1[1].mmbg009, 
               s_detail1[1].mmbg011,s_detail1[1].mmbg010,s_detail1[1].mmbg012,s_detail1[1].mmbg032,s_detail1[1].mmbg013, 
               s_detail1[1].mmbg014,s_detail1[1].mmbg015,s_detail1[1].mmbg016,s_detail1[1].mmbg017,s_detail1[1].mmbg018, 
               s_detail1[1].mmbg019,s_detail1[1].mmbg020,s_detail1[1].mmbg021,s_detail1[1].mmbg022,s_detail1[1].mmbg023, 
               s_detail1[1].mmbg024,s_detail1[1].mmbg025,s_detail1[1].mmbg026,s_detail1[1].mmbg027,s_detail1[1].mmbg028, 
               s_detail1[1].mmbg029,s_detail1[1].mmbg030,s_detail1[1].mmbg031,s_detail1[1].mmbgunit, 
               s_detail1[1].mmbgsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.mmbg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg001
            #add-point:ON ACTION controlp INFIELD mmbg001 name="construct.c.page1.mmbg001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmbg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbg001  #顯示到畫面上

            NEXT FIELD mmbg001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg001
            #add-point:BEFORE FIELD mmbg001 name="construct.b.page1.mmbg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg001
            
            #add-point:AFTER FIELD mmbg001 name="construct.a.page1.mmbg001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg002
            #add-point:ON ACTION controlp INFIELD mmbg002 name="construct.c.page1.mmbg002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbg002  #顯示到畫面上

            NEXT FIELD mmbg002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg002
            #add-point:BEFORE FIELD mmbg002 name="construct.b.page1.mmbg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg002
            
            #add-point:AFTER FIELD mmbg002 name="construct.a.page1.mmbg002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg003
            #add-point:ON ACTION controlp INFIELD mmbg003 name="construct.c.page1.mmbg003"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmbg003  #顯示到畫面上

            NEXT FIELD mmbg003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg003
            #add-point:BEFORE FIELD mmbg003 name="construct.b.page1.mmbg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg003
            
            #add-point:AFTER FIELD mmbg003 name="construct.a.page1.mmbg003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg004
            #add-point:BEFORE FIELD mmbg004 name="construct.b.page1.mmbg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg004
            
            #add-point:AFTER FIELD mmbg004 name="construct.a.page1.mmbg004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg004
            #add-point:ON ACTION controlp INFIELD mmbg004 name="construct.c.page1.mmbg004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg005
            #add-point:BEFORE FIELD mmbg005 name="construct.b.page1.mmbg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg005
            
            #add-point:AFTER FIELD mmbg005 name="construct.a.page1.mmbg005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg005
            #add-point:ON ACTION controlp INFIELD mmbg005 name="construct.c.page1.mmbg005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg006
            #add-point:BEFORE FIELD mmbg006 name="construct.b.page1.mmbg006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg006
            
            #add-point:AFTER FIELD mmbg006 name="construct.a.page1.mmbg006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg006
            #add-point:ON ACTION controlp INFIELD mmbg006 name="construct.c.page1.mmbg006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg007
            #add-point:BEFORE FIELD mmbg007 name="construct.b.page1.mmbg007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg007
            
            #add-point:AFTER FIELD mmbg007 name="construct.a.page1.mmbg007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg007
            #add-point:ON ACTION controlp INFIELD mmbg007 name="construct.c.page1.mmbg007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg008
            #add-point:BEFORE FIELD mmbg008 name="construct.b.page1.mmbg008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg008
            
            #add-point:AFTER FIELD mmbg008 name="construct.a.page1.mmbg008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg008
            #add-point:ON ACTION controlp INFIELD mmbg008 name="construct.c.page1.mmbg008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg009
            #add-point:BEFORE FIELD mmbg009 name="construct.b.page1.mmbg009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg009
            
            #add-point:AFTER FIELD mmbg009 name="construct.a.page1.mmbg009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg009
            #add-point:ON ACTION controlp INFIELD mmbg009 name="construct.c.page1.mmbg009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg011
            #add-point:BEFORE FIELD mmbg011 name="construct.b.page1.mmbg011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg011
            
            #add-point:AFTER FIELD mmbg011 name="construct.a.page1.mmbg011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg011
            #add-point:ON ACTION controlp INFIELD mmbg011 name="construct.c.page1.mmbg011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg010
            #add-point:BEFORE FIELD mmbg010 name="construct.b.page1.mmbg010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg010
            
            #add-point:AFTER FIELD mmbg010 name="construct.a.page1.mmbg010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg010
            #add-point:ON ACTION controlp INFIELD mmbg010 name="construct.c.page1.mmbg010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg012
            #add-point:BEFORE FIELD mmbg012 name="construct.b.page1.mmbg012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg012
            
            #add-point:AFTER FIELD mmbg012 name="construct.a.page1.mmbg012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg012
            #add-point:ON ACTION controlp INFIELD mmbg012 name="construct.c.page1.mmbg012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg032
            #add-point:BEFORE FIELD mmbg032 name="construct.b.page1.mmbg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg032
            
            #add-point:AFTER FIELD mmbg032 name="construct.a.page1.mmbg032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg032
            #add-point:ON ACTION controlp INFIELD mmbg032 name="construct.c.page1.mmbg032"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg013
            #add-point:BEFORE FIELD mmbg013 name="construct.b.page1.mmbg013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg013
            
            #add-point:AFTER FIELD mmbg013 name="construct.a.page1.mmbg013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg013
            #add-point:ON ACTION controlp INFIELD mmbg013 name="construct.c.page1.mmbg013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg014
            #add-point:BEFORE FIELD mmbg014 name="construct.b.page1.mmbg014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg014
            
            #add-point:AFTER FIELD mmbg014 name="construct.a.page1.mmbg014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg014
            #add-point:ON ACTION controlp INFIELD mmbg014 name="construct.c.page1.mmbg014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg015
            #add-point:BEFORE FIELD mmbg015 name="construct.b.page1.mmbg015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg015
            
            #add-point:AFTER FIELD mmbg015 name="construct.a.page1.mmbg015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg015
            #add-point:ON ACTION controlp INFIELD mmbg015 name="construct.c.page1.mmbg015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg016
            #add-point:BEFORE FIELD mmbg016 name="construct.b.page1.mmbg016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg016
            
            #add-point:AFTER FIELD mmbg016 name="construct.a.page1.mmbg016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg016
            #add-point:ON ACTION controlp INFIELD mmbg016 name="construct.c.page1.mmbg016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg017
            #add-point:BEFORE FIELD mmbg017 name="construct.b.page1.mmbg017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg017
            
            #add-point:AFTER FIELD mmbg017 name="construct.a.page1.mmbg017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg017
            #add-point:ON ACTION controlp INFIELD mmbg017 name="construct.c.page1.mmbg017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg018
            #add-point:BEFORE FIELD mmbg018 name="construct.b.page1.mmbg018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg018
            
            #add-point:AFTER FIELD mmbg018 name="construct.a.page1.mmbg018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg018
            #add-point:ON ACTION controlp INFIELD mmbg018 name="construct.c.page1.mmbg018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg019
            #add-point:BEFORE FIELD mmbg019 name="construct.b.page1.mmbg019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg019
            
            #add-point:AFTER FIELD mmbg019 name="construct.a.page1.mmbg019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg019
            #add-point:ON ACTION controlp INFIELD mmbg019 name="construct.c.page1.mmbg019"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg020
            #add-point:ON ACTION controlp INFIELD mmbg020 name="construct.c.page1.mmbg020"
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg020') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg020',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001() 
            END IF
            DISPLAY g_qryparam.return1 TO mmbg020  #顯示到畫面上

            NEXT FIELD mmbg020                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg020
            #add-point:BEFORE FIELD mmbg020 name="construct.b.page1.mmbg020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg020
            
            #add-point:AFTER FIELD mmbg020 name="construct.a.page1.mmbg020"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg021
            #add-point:BEFORE FIELD mmbg021 name="construct.b.page1.mmbg021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg021
            
            #add-point:AFTER FIELD mmbg021 name="construct.a.page1.mmbg021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg021
            #add-point:ON ACTION controlp INFIELD mmbg021 name="construct.c.page1.mmbg021"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg022
            #add-point:ON ACTION controlp INFIELD mmbg022 name="construct.c.page1.mmbg022"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 ='2'
#			  LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg022') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg022',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            DISPLAY g_qryparam.return1 TO mmbg022  #顯示到畫面上

            NEXT FIELD mmbg022                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg022
            #add-point:BEFORE FIELD mmbg022 name="construct.b.page1.mmbg022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg022
            
            #add-point:AFTER FIELD mmbg022 name="construct.a.page1.mmbg022"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg023
            #add-point:BEFORE FIELD mmbg023 name="construct.b.page1.mmbg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg023
            
            #add-point:AFTER FIELD mmbg023 name="construct.a.page1.mmbg023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg023
            #add-point:ON ACTION controlp INFIELD mmbg023 name="construct.c.page1.mmbg023"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg024
            #add-point:ON ACTION controlp INFIELD mmbg024 name="construct.c.page1.mmbg024"
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg024') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg024',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            DISPLAY g_qryparam.return1 TO mmbg024  #顯示到畫面上

            NEXT FIELD mmbg024                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg024
            #add-point:BEFORE FIELD mmbg024 name="construct.b.page1.mmbg024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg024
            
            #add-point:AFTER FIELD mmbg024 name="construct.a.page1.mmbg024"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg025
            #add-point:BEFORE FIELD mmbg025 name="construct.b.page1.mmbg025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg025
            
            #add-point:AFTER FIELD mmbg025 name="construct.a.page1.mmbg025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg025
            #add-point:ON ACTION controlp INFIELD mmbg025 name="construct.c.page1.mmbg025"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg026
            #add-point:ON ACTION controlp INFIELD mmbg026 name="construct.c.page1.mmbg026"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 ='Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg026') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg026',g_site,'c') #150308-00001#3 150309 pomelo add 'c')
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            DISPLAY g_qryparam.return1 TO mmbg026  #顯示到畫面上

            NEXT FIELD mmbg026                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg026
            #add-point:BEFORE FIELD mmbg026 name="construct.b.page1.mmbg026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg026
            
            #add-point:AFTER FIELD mmbg026 name="construct.a.page1.mmbg026"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg027
            #add-point:BEFORE FIELD mmbg027 name="construct.b.page1.mmbg027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg027
            
            #add-point:AFTER FIELD mmbg027 name="construct.a.page1.mmbg027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg027
            #add-point:ON ACTION controlp INFIELD mmbg027 name="construct.c.page1.mmbg027"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg028
            #add-point:ON ACTION controlp INFIELD mmbg028 name="construct.c.page1.mmbg028"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg028') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg028',g_site,'c') #150308-00001#3 150309 pomelo add 'c')
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            DISPLAY g_qryparam.return1 TO mmbg028  #顯示到畫面上

            NEXT FIELD mmbg028                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg028
            #add-point:BEFORE FIELD mmbg028 name="construct.b.page1.mmbg028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg028
            
            #add-point:AFTER FIELD mmbg028 name="construct.a.page1.mmbg028"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg029
            #add-point:BEFORE FIELD mmbg029 name="construct.b.page1.mmbg029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg029
            
            #add-point:AFTER FIELD mmbg029 name="construct.a.page1.mmbg029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg029
            #add-point:ON ACTION controlp INFIELD mmbg029 name="construct.c.page1.mmbg029"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmbg030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg030
            #add-point:ON ACTION controlp INFIELD mmbg030 name="construct.c.page1.mmbg030"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg030') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg030',g_site,'c') #150308-00001#3 150309 pomelo add 'c')
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            DISPLAY g_qryparam.return1 TO mmbg030  #顯示到畫面上

            NEXT FIELD mmbg030                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg030
            #add-point:BEFORE FIELD mmbg030 name="construct.b.page1.mmbg030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg030
            
            #add-point:AFTER FIELD mmbg030 name="construct.a.page1.mmbg030"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg031
            #add-point:BEFORE FIELD mmbg031 name="construct.b.page1.mmbg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg031
            
            #add-point:AFTER FIELD mmbg031 name="construct.a.page1.mmbg031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg031
            #add-point:ON ACTION controlp INFIELD mmbg031 name="construct.c.page1.mmbg031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbgunit
            #add-point:BEFORE FIELD mmbgunit name="construct.b.page1.mmbgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbgunit
            
            #add-point:AFTER FIELD mmbgunit name="construct.a.page1.mmbgunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbgunit
            #add-point:ON ACTION controlp INFIELD mmbgunit name="construct.c.page1.mmbgunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbgsite
            #add-point:BEFORE FIELD mmbgsite name="construct.b.page1.mmbgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbgsite
            
            #add-point:AFTER FIELD mmbgsite name="construct.a.page1.mmbgsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmbgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbgsite
            #add-point:ON ACTION controlp INFIELD mmbgsite name="construct.c.page1.mmbgsite"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "mmbf_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmbg_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt321_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmbg_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL ammt321_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL ammt321_browser_fill("")
      CALL ammt321_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL ammt321_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL ammt321_fetch("F") 
      #顯示單身筆數
      CALL ammt321_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt321_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmbf_m.mmbfdocno = g_browser[g_current_idx].b_mmbfdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
   #遮罩相關處理
   LET g_mmbf_m_mask_o.* =  g_mmbf_m.*
   CALL ammt321_mmbf_t_mask()
   LET g_mmbf_m_mask_n.* =  g_mmbf_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt321_set_act_visible()   
   CALL ammt321_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   IF g_mmbf_m.mmbfstus = 'Y' OR g_mmbf_m.mmbfstus  = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   END IF
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_mmbf_m_t.* = g_mmbf_m.*
   LET g_mmbf_m_o.* = g_mmbf_m.*
   
   LET g_data_owner = g_mmbf_m.mmbfownid      
   LET g_data_dept  = g_mmbf_m.mmbfowndp
   
   #重新顯示   
   CALL ammt321_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.insert" >}
#+ 資料新增
PRIVATE FUNCTION ammt321_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   #ken---add---s 需求單號：141125-00002 項次：4
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004 
   DEFINE l_insert      LIKE type_t.num5
   #ken---add---e
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmbg_d.clear()   
 
 
   INITIALIZE g_mmbf_m.* TO NULL             #DEFAULT 設定
   
   LET g_mmbfdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_mmbf_m.mmbfownid = g_user
      LET g_mmbf_m.mmbfowndp = g_dept
      LET g_mmbf_m.mmbfcrtid = g_user
      LET g_mmbf_m.mmbfcrtdp = g_dept 
      LET g_mmbf_m.mmbfcrtdt = cl_get_current()
      LET g_mmbf_m.mmbfmodid = g_user
      LET g_mmbf_m.mmbfmoddt = cl_get_current()
      LET g_mmbf_m.mmbfstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      LET g_mmbf_m.mmbfstus = 'N'
      LET g_mmbf_m.mmbfdocdt = g_today
#      LET g_mmbf_m.mmbfsite = g_site
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'mmbfsite',g_mmbf_m.mmbfsite)
         RETURNING l_insert, g_mmbf_m.mmbfsite
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL ammt321_mmbfsite_ref()
      LET g_mmbf_m.mmbfunit = g_mmbf_m.mmbfsite    #161024-00025#7  2016/10/24 by 08742 ADD
      
      #ken---add---s 需求單號：141125-00002 項次：4
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_mmbf_m.mmbfsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_mmbf_m.mmbfdocno = l_doctype      
      #ken---add---e
      
      LET g_mmbf_m_t.* = g_mmbf_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_mmbf_m_t.* = g_mmbf_m.*
      LET g_mmbf_m_o.* = g_mmbf_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmbf_m.mmbfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL ammt321_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_mmbf_m.* TO NULL
         INITIALIZE g_mmbg_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL ammt321_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_mmbg_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt321_set_act_visible()   
   CALL ammt321_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmbfent = " ||g_enterprise|| " AND",
                      " mmbfdocno = '", g_mmbf_m.mmbfdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt321_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE ammt321_cl
   
   CALL ammt321_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
   
   #遮罩相關處理
   LET g_mmbf_m_mask_o.* =  g_mmbf_m.*
   CALL ammt321_mmbf_t_mask()
   LET g_mmbf_m_mask_n.* =  g_mmbf_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit, 
       g_mmbf_m.mmbf001,g_mmbf_m.mmbf001_desc,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfownid_desc, 
       g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfowndp_desc,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtid_desc,g_mmbf_m.mmbfcrtdp, 
       g_mmbf_m.mmbfcrtdp_desc,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmodid_desc,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfid_desc,g_mmbf_m.mmbfcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_mmbf_m.mmbfownid      
   LET g_data_dept  = g_mmbf_m.mmbfowndp
   
   #功能已完成,通報訊息中心
   CALL ammt321_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.modify" >}
#+ 資料修改
PRIVATE FUNCTION ammt321_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_mmbf_m_t.* = g_mmbf_m.*
   LET g_mmbf_m_o.* = g_mmbf_m.*
   
   IF g_mmbf_m.mmbfdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
   CALL s_transaction_begin()
   
   OPEN ammt321_cl USING g_enterprise,g_mmbf_m.mmbfdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt321_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt321_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
   #檢查是否允許此動作
   IF NOT ammt321_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmbf_m_mask_o.* =  g_mmbf_m.*
   CALL ammt321_mmbf_t_mask()
   LET g_mmbf_m_mask_n.* =  g_mmbf_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL ammt321_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmbf_m.mmbfmodid = g_user 
LET g_mmbf_m.mmbfmoddt = cl_get_current()
LET g_mmbf_m.mmbfmodid_desc = cl_get_username(g_mmbf_m.mmbfmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL ammt321_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE mmbf_t SET (mmbfmodid,mmbfmoddt) = (g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt)
          WHERE mmbfent = g_enterprise AND mmbfdocno = g_mmbfdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_mmbf_m.* = g_mmbf_m_t.*
            CALL ammt321_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_mmbf_m.mmbfdocno != g_mmbf_m_t.mmbfdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE mmbg_t SET mmbgdocno = g_mmbf_m.mmbfdocno
 
          WHERE mmbgent = g_enterprise AND mmbgdocno = g_mmbf_m_t.mmbfdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmbg_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt321_set_act_visible()   
   CALL ammt321_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " mmbfent = " ||g_enterprise|| " AND",
                      " mmbfdocno = '", g_mmbf_m.mmbfdocno, "' "
 
   #填到對應位置
   CALL ammt321_browser_fill("")
 
   CLOSE ammt321_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt321_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="ammt321.input" >}
#+ 資料輸入
PRIVATE FUNCTION ammt321_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_flag LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit, 
       g_mmbf_m.mmbf001,g_mmbf_m.mmbf001_desc,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfownid_desc, 
       g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfowndp_desc,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtid_desc,g_mmbf_m.mmbfcrtdp, 
       g_mmbf_m.mmbfcrtdp_desc,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmodid_desc,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfid_desc,g_mmbf_m.mmbfcnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
 
   #end add-point 
   LET g_forupd_sql = "SELECT mmbg001,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007,mmbg008,mmbg009, 
       mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017,mmbg018,mmbg019,mmbg020, 
       mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028,mmbg029,mmbg030,mmbg031,mmbgunit, 
       mmbgsite FROM mmbg_t WHERE mmbgent=? AND mmbgdocno=? AND mmbg001=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt321_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt321_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL ammt321_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001, 
       g_mmbf_m.mmbfstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET g_ooef004 = ''
   LET g_ooef005 = ''
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF  
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="ammt321.input.head" >}
      #單頭段
      INPUT BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001, 
          g_mmbf_m.mmbfstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN ammt321_cl USING g_enterprise,g_mmbf_m.mmbfdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt321_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt321_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL ammt321_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL ammt321_set_entry(p_cmd)
            CALL ammt321_set_no_entry(p_cmd)
            #end add-point
            CALL ammt321_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfsite
            
            #add-point:AFTER FIELD mmbfsite name="input.a.mmbfsite"
            LET g_mmbf_m.mmbfsite_desc = ' '
            DISPLAY BY NAME g_mmbf_m.mmbfsite_desc
            IF NOT cl_null(g_mmbf_m.mmbfsite) THEN
#                INITIALIZE g_chkparam.* TO NULL
#                  LET g_errshow = '1'
#                  LET g_chkparam.arg1 = g_mmbf_m.mmbfsite
#                  LET g_chkparam.arg2 = '8'
#                  LET g_chkparam.arg3 = g_site
#                  IF NOT cl_chk_exist("v_ooed004") THEN
#                     LET g_mmbf_m.mmbfsite = g_mmbf_m_t.mmbfsite
#                     CALL ammt321_mmbfsite_ref()
#                     NEXT FIELD CURRENT
#                  END IF
               CALL s_aooi500_chk(g_prog,'mmbfsite',g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_mmbf_m.mmbfsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_mmbf_m.mmbfsite = g_mmbf_m_t.mmbfsite
                  CALL s_desc_get_department_desc(g_mmbf_m.mmbfsite) RETURNING g_mmbf_m.mmbfsite_desc
                  DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc
                  NEXT FIELD CURRENT
               END IF

               LET g_site_flag = TRUE
               CALL ammt321_set_entry(p_cmd)
               CALL ammt321_set_no_entry(p_cmd)
            END IF
            CALL ammt321_mmbfsite_ref()
            #LET g_mmbf_m.mmbfunit = g_mmbf_m.mmbfsite   #161024-00025#7  2016/10/24 by 08742 mark
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfsite
            #add-point:BEFORE FIELD mmbfsite name="input.b.mmbfsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbfsite
            #add-point:ON CHANGE mmbfsite name="input.g.mmbfsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfdocdt
            #add-point:BEFORE FIELD mmbfdocdt name="input.b.mmbfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfdocdt
            
            #add-point:AFTER FIELD mmbfdocdt name="input.a.mmbfdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbfdocdt
            #add-point:ON CHANGE mmbfdocdt name="input.g.mmbfdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfdocno
            #add-point:BEFORE FIELD mmbfdocno name="input.b.mmbfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfdocno
            
            #add-point:AFTER FIELD mmbfdocno name="input.a.mmbfdocno"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_mmbf_m.mmbfdocno) THEN 
               IF NOT ammt321_chk_mmbfdocno() AND p_cmd = 'a' THEN
                  LET g_mmbf_m.mmbfdocno = g_mmbf_m_t.mmbfdocno
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmbf_m.mmbfdocno != g_mmbfdocno_t )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbf_t WHERE "||"mmbfent = '" ||g_enterprise|| "' AND "||"mmbfdocno = '"||g_mmbf_m.mmbfdocno ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbfdocno
            #add-point:ON CHANGE mmbfdocno name="input.g.mmbfdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfunit
            #add-point:BEFORE FIELD mmbfunit name="input.b.mmbfunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfunit
            
            #add-point:AFTER FIELD mmbfunit name="input.a.mmbfunit"
         

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbfunit
            #add-point:ON CHANGE mmbfunit name="input.g.mmbfunit"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbf001
            
            #add-point:AFTER FIELD mmbf001 name="input.a.mmbf001"
            
            LET g_mmbf_m.mmbf001_desc = ''
            DISPLAY BY NAME  g_mmbf_m.mmbf001_desc 
            IF NOT cl_null(g_mmbf_m.mmbf001) THEN
               IF NOT s_azzi650_chk_exist('2055',g_mmbf_m.mmbf001) THEN
                  LET g_mmbf_m.mmbf001 = g_mmbf_m_t.mmbf001
                  CALL ammt321_mmbf001_ref()
                  NEXT FIELD mmbf001
               END IF
            END IF 
            CALL ammt321_mmbf001_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbf001
            #add-point:BEFORE FIELD mmbf001 name="input.b.mmbf001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbf001
            #add-point:ON CHANGE mmbf001 name="input.g.mmbf001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbfstus
            #add-point:BEFORE FIELD mmbfstus name="input.b.mmbfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbfstus
            
            #add-point:AFTER FIELD mmbfstus name="input.a.mmbfstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbfstus
            #add-point:ON CHANGE mmbfstus name="input.g.mmbfstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.mmbfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfsite
            #add-point:ON ACTION controlp INFIELD mmbfsite name="input.c.mmbfsite"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbf_m.mmbfsite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = '8' #
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbfsite',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()
            LET g_mmbf_m.mmbfsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbf_m.mmbfsite TO mmbfsite              #顯示到畫面上

            NEXT FIELD mmbfsite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmbfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfdocdt
            #add-point:ON ACTION controlp INFIELD mmbfdocdt name="input.c.mmbfdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.mmbfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfdocno
            #add-point:ON ACTION controlp INFIELD mmbfdocno name="input.c.mmbfdocno"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbf_m.mmbfdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            #LET g_qryparam.arg2 = 'ammt321' #   #160705-00042#4 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#4 160711 by sakura add

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmbf_m.mmbfdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbf_m.mmbfdocno TO mmbfdocno              #顯示到畫面上

            NEXT FIELD mmbfdocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmbfunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfunit
            #add-point:ON ACTION controlp INFIELD mmbfunit name="input.c.mmbfunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.mmbf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbf001
            #add-point:ON ACTION controlp INFIELD mmbf001 name="input.c.mmbf001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbf_m.mmbf001             #給予default值
            LET g_qryparam.default2 = "" #g_mmbf_m.oocq010 #參考欄位七

            #給予arg
            LET g_qryparam.arg1 = '2055' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmbf_m.mmbf001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmbf_m.oocq010 = g_qryparam.return2 #參考欄位七

            DISPLAY g_mmbf_m.mmbf001 TO mmbf001              #顯示到畫面上
            #DISPLAY g_mmbf_m.oocq010 TO oocq010 #參考欄位七

            NEXT FIELD mmbf001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmbfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbfstus
            #add-point:ON ACTION controlp INFIELD mmbfstus name="input.c.mmbfstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_mmbf_m.mmbfdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
                  CALL s_aooi200_gen_docno(g_site,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfdocdt,g_prog) RETURNING l_flag,g_mmbf_m.mmbfdocno
                  IF NOT l_flag THEN
                     NEXT FIELD mmbfdocno
                  END IF
               #end add-point
               
               INSERT INTO mmbf_t (mmbfent,mmbfsite,mmbfdocdt,mmbfdocno,mmbfunit,mmbf001,mmbfstus,mmbfownid, 
                   mmbfowndp,mmbfcrtid,mmbfcrtdp,mmbfcrtdt,mmbfmodid,mmbfmoddt,mmbfcnfid,mmbfcnfdt)
               VALUES (g_enterprise,g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit, 
                   g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfcrtid, 
                   g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt,g_mmbf_m.mmbfcnfid, 
                   g_mmbf_m.mmbfcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_mmbf_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt321_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL ammt321_b_fill()
                  CALL ammt321_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL ammt321_mmbf_t_mask_restore('restore_mask_o')
               
               UPDATE mmbf_t SET (mmbfsite,mmbfdocdt,mmbfdocno,mmbfunit,mmbf001,mmbfstus,mmbfownid,mmbfowndp, 
                   mmbfcrtid,mmbfcrtdp,mmbfcrtdt,mmbfmodid,mmbfmoddt,mmbfcnfid,mmbfcnfdt) = (g_mmbf_m.mmbfsite, 
                   g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus, 
                   g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt, 
                   g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt,g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt)
                WHERE mmbfent = g_enterprise AND mmbfdocno = g_mmbfdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "mmbf_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL ammt321_mmbf_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_mmbf_m_t)
               LET g_log2 = util.JSON.stringify(g_mmbf_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="ammt321.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmbg_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmbg_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt321_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_mmbg_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt321_cl USING g_enterprise,g_mmbf_m.mmbfdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt321_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt321_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmbg_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmbg_d[l_ac].mmbg001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmbg_d_t.* = g_mmbg_d[l_ac].*  #BACKUP
               LET g_mmbg_d_o.* = g_mmbg_d[l_ac].*  #BACKUP
               CALL ammt321_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL ammt321_set_no_entry_b(l_cmd)
               IF NOT ammt321_lock_b("mmbg_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt321_bcl INTO g_mmbg_d[l_ac].mmbg001,g_mmbg_d[l_ac].mmbg002,g_mmbg_d[l_ac].mmbg003, 
                      g_mmbg_d[l_ac].mmbg004,g_mmbg_d[l_ac].mmbg005,g_mmbg_d[l_ac].mmbg006,g_mmbg_d[l_ac].mmbg007, 
                      g_mmbg_d[l_ac].mmbg008,g_mmbg_d[l_ac].mmbg009,g_mmbg_d[l_ac].mmbg011,g_mmbg_d[l_ac].mmbg010, 
                      g_mmbg_d[l_ac].mmbg012,g_mmbg_d[l_ac].mmbg032,g_mmbg_d[l_ac].mmbg013,g_mmbg_d[l_ac].mmbg014, 
                      g_mmbg_d[l_ac].mmbg015,g_mmbg_d[l_ac].mmbg016,g_mmbg_d[l_ac].mmbg017,g_mmbg_d[l_ac].mmbg018, 
                      g_mmbg_d[l_ac].mmbg019,g_mmbg_d[l_ac].mmbg020,g_mmbg_d[l_ac].mmbg021,g_mmbg_d[l_ac].mmbg022, 
                      g_mmbg_d[l_ac].mmbg023,g_mmbg_d[l_ac].mmbg024,g_mmbg_d[l_ac].mmbg025,g_mmbg_d[l_ac].mmbg026, 
                      g_mmbg_d[l_ac].mmbg027,g_mmbg_d[l_ac].mmbg028,g_mmbg_d[l_ac].mmbg029,g_mmbg_d[l_ac].mmbg030, 
                      g_mmbg_d[l_ac].mmbg031,g_mmbg_d[l_ac].mmbgunit,g_mmbg_d[l_ac].mmbgsite
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_mmbg_d_t.mmbg001,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmbg_d_mask_o[l_ac].* =  g_mmbg_d[l_ac].*
                  CALL ammt321_mmbg_t_mask()
                  LET g_mmbg_d_mask_n[l_ac].* =  g_mmbg_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt321_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmbg_d[l_ac].* TO NULL 
            INITIALIZE g_mmbg_d_t.* TO NULL 
            INITIALIZE g_mmbg_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_mmbg_d[l_ac].mmbg007 = "Y"
      LET g_mmbg_d[l_ac].mmbg008 = "100"
      LET g_mmbg_d[l_ac].mmbg009 = "0"
      LET g_mmbg_d[l_ac].mmbg011 = "0"
      LET g_mmbg_d[l_ac].mmbg010 = "0"
      LET g_mmbg_d[l_ac].mmbg012 = "0"
      LET g_mmbg_d[l_ac].mmbg032 = "0"
      LET g_mmbg_d[l_ac].mmbg014 = "0"
      LET g_mmbg_d[l_ac].mmbg015 = "0"
      LET g_mmbg_d[l_ac].mmbg016 = "0"
      LET g_mmbg_d[l_ac].mmbg017 = "0"
      LET g_mmbg_d[l_ac].mmbg018 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_mmbg_d_t.* = g_mmbg_d[l_ac].*     #新輸入資料
            LET g_mmbg_d_o.* = g_mmbg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt321_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL ammt321_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmbg_d[li_reproduce_target].* = g_mmbg_d[li_reproduce].*
 
               LET g_mmbg_d[li_reproduce_target].mmbg001 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_mmbg_d[l_ac].mmbgsite = g_mmbf_m.mmbfsite
            LET g_mmbg_d[l_ac].mmbgunit = g_mmbf_m.mmbfunit
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmbg_t 
             WHERE mmbgent = g_enterprise AND mmbgdocno = g_mmbf_m.mmbfdocno
 
               AND mmbg001 = g_mmbg_d[l_ac].mmbg001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbf_m.mmbfdocno
               LET gs_keys[2] = g_mmbg_d[g_detail_idx].mmbg001
               CALL ammt321_insert_b('mmbg_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_mmbg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt321_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmbf_m.mmbfdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_mmbg_d_t.mmbg001
 
            
               #刪除同層單身
               IF NOT ammt321_delete_b('mmbg_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt321_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt321_key_delete_b(gs_keys,'mmbg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt321_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt321_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_mmbg_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmbg_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg001
            #add-point:BEFORE FIELD mmbg001 name="input.b.page1.mmbg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg001
            
            #add-point:AFTER FIELD mmbg001 name="input.a.page1.mmbg001"
            #此段落由子樣板a05產生
           
            IF g_mmbf_m.mmbfdocno IS NOT NULL AND g_mmbg_d[g_detail_idx].mmbg001 IS NOT NULL THEN 
               #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmbf_m.mmbfdocno != g_mmbfdocno_t OR g_mmbg_d[g_detail_idx].mmbg001 != g_mmbg_d_t.mmbg001)) THEN #160824-00008#111 by sakura mark
               IF g_mmbg_d[l_ac].mmbg001 != g_mmbg_d_o.mmbg001 OR cl_null(g_mmbg_d_o.mmbg001) THEN #160824-00007#111 by sakura add
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmbg_t WHERE "||"mmbgent = '" ||g_enterprise|| "' AND "||"mmbgdocno = '"||g_mmbf_m.mmbfdocno ||"' AND "|| "mmbg001 = '"||g_mmbg_d[g_detail_idx].mmbg001 ||"'",'std-00004',0) THEN 
                     #LET g_mmbg_d[l_ac].mmbg001 = g_mmbg_d_t.mmbg001 #160824-00007#111 by sakura mark
                     LET g_mmbg_d[l_ac].mmbg001 = g_mmbg_d_o.mmbg001  #160824-00007#111 by sakura add
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT ammt321_mmbg001_chk() THEN
                  #LET g_mmbg_d[l_ac].mmbg001 = g_mmbg_d_t.mmbg001 #160824-00007#111 by sakura mark
                  LET g_mmbg_d[l_ac].mmbg001 = g_mmbg_d_o.mmbg001  #160824-00007#111 by sakura add 
                  NEXT FIELD CURRENT
               END IF
            END IF

            LET g_mmbg_d_o.* = g_mmbg_d[l_ac].*  #160824-00007#111 by sakura add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg001
            #add-point:ON CHANGE mmbg001 name="input.g.page1.mmbg001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg002
            
            #add-point:AFTER FIELD mmbg002 name="input.a.page1.mmbg002"
            LET g_mmbg_d[l_ac].mmbg002_desc = ''
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg002) THEN
               IF NOT ammt321_mmbg002_chk() THEN
                  LET g_mmbg_d[l_ac].mmbg002 = g_mmbg_d_t.mmbg002
                  CALL ammt321_mmbg002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt321_mmbg002_ref()
            CALL ammt321_set_entry_b(l_cmd)   
            CALL ammt321_set_no_entry_b(l_cmd)

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg002
            #add-point:BEFORE FIELD mmbg002 name="input.b.page1.mmbg002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg002
            #add-point:ON CHANGE mmbg002 name="input.g.page1.mmbg002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg003
            
            #add-point:AFTER FIELD mmbg003 name="input.a.page1.mmbg003"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg003) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_mmbg_d[l_ac].mmbg003
               IF NOT cl_chk_exist("v_mmaf001") THEN
                  LET g_mmbg_d[l_ac].mmbg003 = g_mmbg_d_t.mmbg003
                  CALL ammt321_mmbg003_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL ammt321_mmbg003_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg003
            #add-point:BEFORE FIELD mmbg003 name="input.b.page1.mmbg003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg003
            #add-point:ON CHANGE mmbg003 name="input.g.page1.mmbg003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg004
            #add-point:BEFORE FIELD mmbg004 name="input.b.page1.mmbg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg004
            
            #add-point:AFTER FIELD mmbg004 name="input.a.page1.mmbg004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg004
            #add-point:ON CHANGE mmbg004 name="input.g.page1.mmbg004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg005
            #add-point:BEFORE FIELD mmbg005 name="input.b.page1.mmbg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg005
            
            #add-point:AFTER FIELD mmbg005 name="input.a.page1.mmbg005"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg005) THEN
               
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg005
            #add-point:ON CHANGE mmbg005 name="input.g.page1.mmbg005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg006
            #add-point:BEFORE FIELD mmbg006 name="input.b.page1.mmbg006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg006
            
            #add-point:AFTER FIELD mmbg006 name="input.a.page1.mmbg006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg006
            #add-point:ON CHANGE mmbg006 name="input.g.page1.mmbg006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg007
            #add-point:BEFORE FIELD mmbg007 name="input.b.page1.mmbg007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg007
            
            #add-point:AFTER FIELD mmbg007 name="input.a.page1.mmbg007"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg007
            #add-point:ON CHANGE mmbg007 name="input.g.page1.mmbg007"
            CALL ammt321_set_entry_b(l_cmd)
            CALL ammt321_set_no_entry_b(l_cmd)
            IF g_mmbg_d[l_ac].mmbg007 = 'N' THEN
               LET g_mmbg_d[l_ac].mmbg008 = 100
               LET g_mmbg_d[l_ac].mmbg009 = 0
               LET g_mmbg_d[l_ac].mmbg010 = 0
               LET g_mmbg_d[l_ac].mmbg011 = 0
               LET g_mmbg_d[l_ac].mmbg012 = 0
               LET g_mmbg_d[l_ac].mmbg032 = 0
            END IF            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg008
            #add-point:BEFORE FIELD mmbg008 name="input.b.page1.mmbg008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg008
            
            #add-point:AFTER FIELD mmbg008 name="input.a.page1.mmbg008"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg008,"0.000","0","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg008= g_mmbg_d_t.mmbg008
               NEXT FIELD mmbg008
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg008
            #add-point:ON CHANGE mmbg008 name="input.g.page1.mmbg008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg009
            #add-point:BEFORE FIELD mmbg009 name="input.b.page1.mmbg009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg009
            
            #add-point:AFTER FIELD mmbg009 name="input.a.page1.mmbg009"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg009,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg009= g_mmbg_d_t.mmbg009
               NEXT FIELD mmbg009
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg009
            #add-point:ON CHANGE mmbg009 name="input.g.page1.mmbg009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg011
            #add-point:BEFORE FIELD mmbg011 name="input.b.page1.mmbg011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg011
            
            #add-point:AFTER FIELD mmbg011 name="input.a.page1.mmbg011"
             IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg011,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg011= g_mmbg_d_t.mmbg011
               NEXT FIELD mmbg011
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg011
            #add-point:ON CHANGE mmbg011 name="input.g.page1.mmbg011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg010
            #add-point:BEFORE FIELD mmbg010 name="input.b.page1.mmbg010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg010
            
            #add-point:AFTER FIELD mmbg010 name="input.a.page1.mmbg010"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg010,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg010= g_mmbg_d_t.mmbg010
               NEXT FIELD mmbg010
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg010
            #add-point:ON CHANGE mmbg010 name="input.g.page1.mmbg010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg012
            #add-point:BEFORE FIELD mmbg012 name="input.b.page1.mmbg012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg012
            
            #add-point:AFTER FIELD mmbg012 name="input.a.page1.mmbg012"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg012,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg012= g_mmbg_d_t.mmbg012
               NEXT FIELD mmbg012
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg012
            #add-point:ON CHANGE mmbg012 name="input.g.page1.mmbg012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg032
            #add-point:BEFORE FIELD mmbg032 name="input.b.page1.mmbg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg032
            
            #add-point:AFTER FIELD mmbg032 name="input.a.page1.mmbg032"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg032,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg032= g_mmbg_d_t.mmbg032
               NEXT FIELD mmbg032
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg032
            #add-point:ON CHANGE mmbg032 name="input.g.page1.mmbg032"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg013
            #add-point:BEFORE FIELD mmbg013 name="input.b.page1.mmbg013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg013
            
            #add-point:AFTER FIELD mmbg013 name="input.a.page1.mmbg013"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg013) THEN
               IF g_mmbg_d[l_ac].mmbg013 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg013 = g_mmbg_d[l_ac].mmbg013
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg013
            #add-point:ON CHANGE mmbg013 name="input.g.page1.mmbg013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg014
            #add-point:BEFORE FIELD mmbg014 name="input.b.page1.mmbg014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg014
            
            #add-point:AFTER FIELD mmbg014 name="input.a.page1.mmbg014"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg014,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg014= g_mmbg_d_t.mmbg014
               NEXT FIELD mmbg014
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg014
            #add-point:ON CHANGE mmbg014 name="input.g.page1.mmbg014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg015
            #add-point:BEFORE FIELD mmbg015 name="input.b.page1.mmbg015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg015
            
            #add-point:AFTER FIELD mmbg015 name="input.a.page1.mmbg015"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg015,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg015= g_mmbg_d_t.mmbg015
               NEXT FIELD mmbg015
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg015
            #add-point:ON CHANGE mmbg015 name="input.g.page1.mmbg015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg016
            #add-point:BEFORE FIELD mmbg016 name="input.b.page1.mmbg016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg016
            
            #add-point:AFTER FIELD mmbg016 name="input.a.page1.mmbg016"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg016,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg016= g_mmbg_d_t.mmbg016
               NEXT FIELD mmbg016
            END IF
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg017) AND NOT cl_null(g_mmbg_d[l_ac].mmbg016) THEN
               LET g_mmbg_d[l_ac].mmbg018 = g_mmbg_d[l_ac].mmbg016 - g_mmbg_d[l_ac].mmbg017
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg016
            #add-point:ON CHANGE mmbg016 name="input.g.page1.mmbg016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg017
            #add-point:BEFORE FIELD mmbg017 name="input.b.page1.mmbg017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg017
            
            #add-point:AFTER FIELD mmbg017 name="input.a.page1.mmbg017"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg017,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg017= g_mmbg_d_t.mmbg017
               NEXT FIELD mmbg017
            END IF
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg017) AND NOT cl_null(g_mmbg_d[l_ac].mmbg016) THEN
               LET g_mmbg_d[l_ac].mmbg018 = g_mmbg_d[l_ac].mmbg016 - g_mmbg_d[l_ac].mmbg017
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg017
            #add-point:ON CHANGE mmbg017 name="input.g.page1.mmbg017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg018
            #add-point:BEFORE FIELD mmbg018 name="input.b.page1.mmbg018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg018
            
            #add-point:AFTER FIELD mmbg018 name="input.a.page1.mmbg018"
            IF NOT cl_ap_chk_Range(g_mmbg_d[l_ac].mmbg018,"0.000","1","","","azz-00079",1) THEN
               LET g_mmbg_d[l_ac].mmbg018= g_mmbg_d_t.mmbg018
               NEXT FIELD mmbg018
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg018
            #add-point:ON CHANGE mmbg018 name="input.g.page1.mmbg018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg019
            #add-point:BEFORE FIELD mmbg019 name="input.b.page1.mmbg019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg019
            
            #add-point:AFTER FIELD mmbg019 name="input.a.page1.mmbg019"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg019) THEN
               IF g_mmbg_d[l_ac].mmbg019 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg019 = g_mmbg_d[l_ac].mmbg019
                  NEXT FIELD CURRENT
               END IF
            END IF  
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg019
            #add-point:ON CHANGE mmbg019 name="input.g.page1.mmbg019"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg020
            
            #add-point:AFTER FIELD mmbg020 name="input.a.page1.mmbg020"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg020) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg020
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg020 = g_mmbg_d_t.mmbg020 
#                  CALL ammt321_mmbg020_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg020') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg020',g_mmbg_d[l_ac].mmbg020,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg020
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg020 = g_mmbg_d_t.mmbg020
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg020) RETURNING g_mmbg_d[l_ac].mmbg020_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg020,g_mmbg_d[l_ac].mmbg020_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg020
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg020 = g_mmbg_d_t.mmbg020 
                     CALL ammt321_mmbg020_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF    
            END IF
            CALL ammt321_mmbg020_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg020
            #add-point:BEFORE FIELD mmbg020 name="input.b.page1.mmbg020"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg020
            #add-point:ON CHANGE mmbg020 name="input.g.page1.mmbg020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg021
            #add-point:BEFORE FIELD mmbg021 name="input.b.page1.mmbg021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg021
            
            #add-point:AFTER FIELD mmbg021 name="input.a.page1.mmbg021"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg021) THEN
               IF g_mmbg_d[l_ac].mmbg021 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg021 = g_mmbg_d[l_ac].mmbg021
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg021
            #add-point:ON CHANGE mmbg021 name="input.g.page1.mmbg021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg022
            
            #add-point:AFTER FIELD mmbg022 name="input.a.page1.mmbg022"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg022) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg022
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg022 = g_mmbg_d_t.mmbg022
#                  CALL ammt321_mmbg022_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg022') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg022',g_mmbg_d[l_ac].mmbg022,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg022
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg022 = g_mmbg_d_t.mmbg022
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg022) RETURNING g_mmbg_d[l_ac].mmbg022_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg022,g_mmbg_d[l_ac].mmbg022_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg022
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg022 = g_mmbg_d_t.mmbg022
                     CALL ammt321_mmbg022_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF
            CALL ammt321_mmbg022_ref()            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg022
            #add-point:BEFORE FIELD mmbg022 name="input.b.page1.mmbg022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg022
            #add-point:ON CHANGE mmbg022 name="input.g.page1.mmbg022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg023
            #add-point:BEFORE FIELD mmbg023 name="input.b.page1.mmbg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg023
            
            #add-point:AFTER FIELD mmbg023 name="input.a.page1.mmbg023"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg023) THEN
               IF g_mmbg_d[l_ac].mmbg023 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg023 = g_mmbg_d[l_ac].mmbg023
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg023
            #add-point:ON CHANGE mmbg023 name="input.g.page1.mmbg023"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg024
            
            #add-point:AFTER FIELD mmbg024 name="input.a.page1.mmbg024"
           IF NOT cl_null(g_mmbg_d[l_ac].mmbg024) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg024
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg024 = g_mmbg_d_t.mmbg024
#                  CALL ammt321_mmbg024_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg024') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg024',g_mmbg_d[l_ac].mmbg024,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg024
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg024 = g_mmbg_d_t.mmbg024
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg024) RETURNING g_mmbg_d[l_ac].mmbg024_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg024,g_mmbg_d[l_ac].mmbg024_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg024
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg024 = g_mmbg_d_t.mmbg024
                     CALL ammt321_mmbg024_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF
            CALL ammt321_mmbg024_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg024
            #add-point:BEFORE FIELD mmbg024 name="input.b.page1.mmbg024"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg024
            #add-point:ON CHANGE mmbg024 name="input.g.page1.mmbg024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg025
            #add-point:BEFORE FIELD mmbg025 name="input.b.page1.mmbg025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg025
            
            #add-point:AFTER FIELD mmbg025 name="input.a.page1.mmbg025"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg025) THEN
               IF g_mmbg_d[l_ac].mmbg025 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg025 = g_mmbg_d[l_ac].mmbg025
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg025
            #add-point:ON CHANGE mmbg025 name="input.g.page1.mmbg025"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg026
            
            #add-point:AFTER FIELD mmbg026 name="input.a.page1.mmbg026"
            IF NOT cl_null(g_mmbg_d[l_ac].mmbg026) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg026
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg026 = g_mmbg_d_t.mmbg026
#                  CALL ammt321_mmbg026_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg026') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg026',g_mmbg_d[l_ac].mmbg026,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg026
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg026 = g_mmbg_d_t.mmbg026
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg026) RETURNING g_mmbg_d[l_ac].mmbg026_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg026,g_mmbg_d[l_ac].mmbg026_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg026
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg026 = g_mmbg_d_t.mmbg026
                     CALL ammt321_mmbg026_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF
            CALL ammt321_mmbg026_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg026
            #add-point:BEFORE FIELD mmbg026 name="input.b.page1.mmbg026"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg026
            #add-point:ON CHANGE mmbg026 name="input.g.page1.mmbg026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg027
            #add-point:BEFORE FIELD mmbg027 name="input.b.page1.mmbg027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg027
            
            #add-point:AFTER FIELD mmbg027 name="input.a.page1.mmbg027"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg027) THEN
               IF g_mmbg_d[l_ac].mmbg027 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg027 = g_mmbg_d[l_ac].mmbg027
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg027
            #add-point:ON CHANGE mmbg027 name="input.g.page1.mmbg027"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg028
            
            #add-point:AFTER FIELD mmbg028 name="input.a.page1.mmbg028"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg028) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg028
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg028 = g_mmbg_d_t.mmbg028
#                  CALL ammt321_mmbg028_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg028') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg028',g_mmbg_d[l_ac].mmbg028,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg028
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg028 = g_mmbg_d_t.mmbg028
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg028) RETURNING g_mmbg_d[l_ac].mmbg028_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg028,g_mmbg_d[l_ac].mmbg028_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg028
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg028 = g_mmbg_d_t.mmbg028
                     CALL ammt321_mmbg028_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF
            CALL ammt321_mmbg028_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg028
            #add-point:BEFORE FIELD mmbg028 name="input.b.page1.mmbg028"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg028
            #add-point:ON CHANGE mmbg028 name="input.g.page1.mmbg028"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg029
            #add-point:BEFORE FIELD mmbg029 name="input.b.page1.mmbg029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg029
            
            #add-point:AFTER FIELD mmbg029 name="input.a.page1.mmbg029"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg029) THEN
               IF g_mmbg_d[l_ac].mmbg029 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg029 = g_mmbg_d[l_ac].mmbg029
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg029
            #add-point:ON CHANGE mmbg029 name="input.g.page1.mmbg029"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg030
            
            #add-point:AFTER FIELD mmbg030 name="input.a.page1.mmbg030"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg030) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg030
#               #LET g_chkparam.arg2='2'
#               IF NOT cl_chk_exist("v_ooef001_20") THEN
#                  LET g_mmbg_d[l_ac].mmbg030 = g_mmbg_d_t.mmbg030
#                  CALL ammt321_mmbg030_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF s_aooi500_setpoint(g_prog,'mmbg030') THEN
                  CALL s_aooi500_chk(g_prog,'mmbg030',g_mmbg_d[l_ac].mmbg030,g_mmbf_m.mmbfsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_mmbg_d[l_ac].mmbg030
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_mmbg_d[l_ac].mmbg030 = g_mmbg_d_t.mmbg030
                     CALL s_desc_get_department_desc(g_mmbg_d[l_ac].mmbg030) RETURNING g_mmbg_d[l_ac].mmbg030_desc
                     DISPLAY BY NAME g_mmbg_d[l_ac].mmbg030,g_mmbg_d[l_ac].mmbg030_desc
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg030
                  #LET g_chkparam.arg2='2'
                  IF NOT cl_chk_exist("v_ooef001_20") THEN
                     LET g_mmbg_d[l_ac].mmbg030 = g_mmbg_d_t.mmbg030
                     CALL ammt321_mmbg030_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF
            CALL ammt321_mmbg030_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg030
            #add-point:BEFORE FIELD mmbg030 name="input.b.page1.mmbg030"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg030
            #add-point:ON CHANGE mmbg030 name="input.g.page1.mmbg030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbg031
            #add-point:BEFORE FIELD mmbg031 name="input.b.page1.mmbg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbg031
            
            #add-point:AFTER FIELD mmbg031 name="input.a.page1.mmbg031"
             IF NOT cl_null(g_mmbg_d[l_ac].mmbg031) THEN
               IF g_mmbg_d[l_ac].mmbg031 >g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00207'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmbg_d[l_ac].mmbg031 = g_mmbg_d[l_ac].mmbg031
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbg031
            #add-point:ON CHANGE mmbg031 name="input.g.page1.mmbg031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbgunit
            #add-point:BEFORE FIELD mmbgunit name="input.b.page1.mmbgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbgunit
            
            #add-point:AFTER FIELD mmbgunit name="input.a.page1.mmbgunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbgunit
            #add-point:ON CHANGE mmbgunit name="input.g.page1.mmbgunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmbgsite
            #add-point:BEFORE FIELD mmbgsite name="input.b.page1.mmbgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmbgsite
            
            #add-point:AFTER FIELD mmbgsite name="input.a.page1.mmbgsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmbgsite
            #add-point:ON CHANGE mmbgsite name="input.g.page1.mmbgsite"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.mmbg001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg001
            #add-point:ON ACTION controlp INFIELD mmbg001 name="input.c.page1.mmbg001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg002
            #add-point:ON ACTION controlp INFIELD mmbg002 name="input.c.page1.mmbg002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg002             #給予default值

            #給予arg

            CALL q_mman001()                                #呼叫開窗

            LET g_mmbg_d[l_ac].mmbg002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg002 TO mmbg002              #顯示到畫面上

            NEXT FIELD mmbg002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg003
            #add-point:ON ACTION controlp INFIELD mmbg003 name="input.c.page1.mmbg003"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg003             #給予default值

            #給予arg

            CALL q_mmaf001_1()                                #呼叫開窗

            LET g_mmbg_d[l_ac].mmbg003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg003 TO mmbg003              #顯示到畫面上

            NEXT FIELD mmbg003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg004
            #add-point:ON ACTION controlp INFIELD mmbg004 name="input.c.page1.mmbg004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg005
            #add-point:ON ACTION controlp INFIELD mmbg005 name="input.c.page1.mmbg005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg006
            #add-point:ON ACTION controlp INFIELD mmbg006 name="input.c.page1.mmbg006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg007
            #add-point:ON ACTION controlp INFIELD mmbg007 name="input.c.page1.mmbg007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg008
            #add-point:ON ACTION controlp INFIELD mmbg008 name="input.c.page1.mmbg008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg009
            #add-point:ON ACTION controlp INFIELD mmbg009 name="input.c.page1.mmbg009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg011
            #add-point:ON ACTION controlp INFIELD mmbg011 name="input.c.page1.mmbg011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg010
            #add-point:ON ACTION controlp INFIELD mmbg010 name="input.c.page1.mmbg010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg012
            #add-point:ON ACTION controlp INFIELD mmbg012 name="input.c.page1.mmbg012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg032
            #add-point:ON ACTION controlp INFIELD mmbg032 name="input.c.page1.mmbg032"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg013
            #add-point:ON ACTION controlp INFIELD mmbg013 name="input.c.page1.mmbg013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg014
            #add-point:ON ACTION controlp INFIELD mmbg014 name="input.c.page1.mmbg014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg015
            #add-point:ON ACTION controlp INFIELD mmbg015 name="input.c.page1.mmbg015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg016
            #add-point:ON ACTION controlp INFIELD mmbg016 name="input.c.page1.mmbg016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg017
            #add-point:ON ACTION controlp INFIELD mmbg017 name="input.c.page1.mmbg017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg018
            #add-point:ON ACTION controlp INFIELD mmbg018 name="input.c.page1.mmbg018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg019
            #add-point:ON ACTION controlp INFIELD mmbg019 name="input.c.page1.mmbg019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg020
            #add-point:ON ACTION controlp INFIELD mmbg020 name="input.c.page1.mmbg020"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg020             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "2" #
#             LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg020') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg020',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF

            LET g_mmbg_d[l_ac].mmbg020 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg020 TO mmbg020              #顯示到畫面上

            NEXT FIELD mmbg020                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg021
            #add-point:ON ACTION controlp INFIELD mmbg021 name="input.c.page1.mmbg021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg022
            #add-point:ON ACTION controlp INFIELD mmbg022 name="input.c.page1.mmbg022"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg022             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "2" #
#            LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg022') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg022',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF

            LET g_mmbg_d[l_ac].mmbg022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg022 TO mmbg022              #顯示到畫面上

            NEXT FIELD mmbg022                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg023
            #add-point:ON ACTION controlp INFIELD mmbg023 name="input.c.page1.mmbg023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg024
            #add-point:ON ACTION controlp INFIELD mmbg024 name="input.c.page1.mmbg024"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg024             #給予default值

            #給予arg
           #LET g_qryparam.arg1 = "2" #
#            LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg024') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg024',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            LET g_mmbg_d[l_ac].mmbg024 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg024 TO mmbg024              #顯示到畫面上

            NEXT FIELD mmbg024                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg025
            #add-point:ON ACTION controlp INFIELD mmbg025 name="input.c.page1.mmbg025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg026
            #add-point:ON ACTION controlp INFIELD mmbg026 name="input.c.page1.mmbg026"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg026             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "2" #
#             LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg026') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg026',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i')
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            LET g_mmbg_d[l_ac].mmbg026 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg026 TO mmbg026              #顯示到畫面上

            NEXT FIELD mmbg026                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg027
            #add-point:ON ACTION controlp INFIELD mmbg027 name="input.c.page1.mmbg027"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg028
            #add-point:ON ACTION controlp INFIELD mmbg028 name="input.c.page1.mmbg028"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg028             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "2" #
#            LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg028') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg028',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            LET g_mmbg_d[l_ac].mmbg028 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg028 TO mmbg028              #顯示到畫面上

            NEXT FIELD mmbg028                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg029
            #add-point:ON ACTION controlp INFIELD mmbg029 name="input.c.page1.mmbg029"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg030
            #add-point:ON ACTION controlp INFIELD mmbg030 name="input.c.page1.mmbg030"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmbg_d[l_ac].mmbg030             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "2" #
#            LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'mmbg030') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmbg030',g_mmbf_m.mmbfsite,'i') #150308-00001#3 150309 pomelo add 'i'
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where = "ooef201 = 'Y'"
               CALL q_ooef001()  
            END IF
            LET g_mmbg_d[l_ac].mmbg030 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmbg_d[l_ac].mmbg030 TO mmbg030              #顯示到畫面上

            NEXT FIELD mmbg030                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbg031
            #add-point:ON ACTION controlp INFIELD mmbg031 name="input.c.page1.mmbg031"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbgunit
            #add-point:ON ACTION controlp INFIELD mmbgunit name="input.c.page1.mmbgunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmbgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmbgsite
            #add-point:ON ACTION controlp INFIELD mmbgsite name="input.c.page1.mmbgsite"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmbg_d[l_ac].* = g_mmbg_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt321_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mmbg_d[l_ac].mmbg001 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmbg_d[l_ac].* = g_mmbg_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL ammt321_mmbg_t_mask_restore('restore_mask_o')
      
               UPDATE mmbg_t SET (mmbgdocno,mmbg001,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007, 
                   mmbg008,mmbg009,mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017, 
                   mmbg018,mmbg019,mmbg020,mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028, 
                   mmbg029,mmbg030,mmbg031,mmbgunit,mmbgsite) = (g_mmbf_m.mmbfdocno,g_mmbg_d[l_ac].mmbg001, 
                   g_mmbg_d[l_ac].mmbg002,g_mmbg_d[l_ac].mmbg003,g_mmbg_d[l_ac].mmbg004,g_mmbg_d[l_ac].mmbg005, 
                   g_mmbg_d[l_ac].mmbg006,g_mmbg_d[l_ac].mmbg007,g_mmbg_d[l_ac].mmbg008,g_mmbg_d[l_ac].mmbg009, 
                   g_mmbg_d[l_ac].mmbg011,g_mmbg_d[l_ac].mmbg010,g_mmbg_d[l_ac].mmbg012,g_mmbg_d[l_ac].mmbg032, 
                   g_mmbg_d[l_ac].mmbg013,g_mmbg_d[l_ac].mmbg014,g_mmbg_d[l_ac].mmbg015,g_mmbg_d[l_ac].mmbg016, 
                   g_mmbg_d[l_ac].mmbg017,g_mmbg_d[l_ac].mmbg018,g_mmbg_d[l_ac].mmbg019,g_mmbg_d[l_ac].mmbg020, 
                   g_mmbg_d[l_ac].mmbg021,g_mmbg_d[l_ac].mmbg022,g_mmbg_d[l_ac].mmbg023,g_mmbg_d[l_ac].mmbg024, 
                   g_mmbg_d[l_ac].mmbg025,g_mmbg_d[l_ac].mmbg026,g_mmbg_d[l_ac].mmbg027,g_mmbg_d[l_ac].mmbg028, 
                   g_mmbg_d[l_ac].mmbg029,g_mmbg_d[l_ac].mmbg030,g_mmbg_d[l_ac].mmbg031,g_mmbg_d[l_ac].mmbgunit, 
                   g_mmbg_d[l_ac].mmbgsite)
                WHERE mmbgent = g_enterprise AND mmbgdocno = g_mmbf_m.mmbfdocno 
 
                  AND mmbg001 = g_mmbg_d_t.mmbg001 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmbg_d[l_ac].* = g_mmbg_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmbg_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmbg_d[l_ac].* = g_mmbg_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmbf_m.mmbfdocno
               LET gs_keys_bak[1] = g_mmbfdocno_t
               LET gs_keys[2] = g_mmbg_d[g_detail_idx].mmbg001
               LET gs_keys_bak[2] = g_mmbg_d_t.mmbg001
               CALL ammt321_update_b('mmbg_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL ammt321_mmbg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_mmbg_d[g_detail_idx].mmbg001 = g_mmbg_d_t.mmbg001 
 
                  ) THEN
                  LET gs_keys[01] = g_mmbf_m.mmbfdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mmbg_d_t.mmbg001
 
                  CALL ammt321_key_update_b(gs_keys,'mmbg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmbf_m),util.JSON.stringify(g_mmbg_d_t)
               LET g_log2 = util.JSON.stringify(g_mmbf_m),util.JSON.stringify(g_mmbg_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL ammt321_unlock_b("mmbg_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmbg_d[li_reproduce_target].* = g_mmbg_d[li_reproduce].*
 
               LET g_mmbg_d[li_reproduce_target].mmbg001 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmbg_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmbg_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="ammt321.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmbfsite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmbg001
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD mmbfdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmbg001
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt321_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt321_b_fill() #單身填充
      CALL ammt321_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL ammt321_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
       #     CALL ammt321_mmbfsite_ref()
       #     CALL ammt321_mmbf001_ref()
       #     
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfownid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfownid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfownid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfowndp
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfowndp_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfowndp_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfcrtid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfcrtid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfcrtid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfcrtdp
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfcrtdp_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfcrtdp_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfmodid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfmodid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfmodid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmbf_m.mmbfcnfid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmbf_m.mmbfcnfid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmbf_m.mmbfcnfid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_mmbf_m_mask_o.* =  g_mmbf_m.*
   CALL ammt321_mmbf_t_mask()
   LET g_mmbf_m_mask_n.* =  g_mmbf_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit, 
       g_mmbf_m.mmbf001,g_mmbf_m.mmbf001_desc,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfownid_desc, 
       g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfowndp_desc,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtid_desc,g_mmbf_m.mmbfcrtdp, 
       g_mmbf_m.mmbfcrtdp_desc,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmodid_desc,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfid_desc,g_mmbf_m.mmbfcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmbf_m.mmbfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmbg_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
     #    CALL  ammt321_mmbg002_ref()
     #    CALL ammt321_mmbg003_ref()
     #    CALL ammt321_mmbg020_ref()
     #    CALL ammt321_mmbg022_ref()
     #    CALL ammt321_mmbg024_ref()
     #    CALL ammt321_mmbg026_ref()
     #    CALL ammt321_mmbg028_ref()
     #    CALL ammt321_mmbg030_ref()
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt321_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION ammt321_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION ammt321_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE mmbf_t.mmbfdocno 
   DEFINE l_oldno     LIKE mmbf_t.mmbfdocno 
 
   DEFINE l_master    RECORD LIKE mmbf_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE mmbg_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_mmbf_m.mmbfdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
    
   LET g_mmbf_m.mmbfdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_mmbf_m.mmbfownid = g_user
      LET g_mmbf_m.mmbfowndp = g_dept
      LET g_mmbf_m.mmbfcrtid = g_user
      LET g_mmbf_m.mmbfcrtdp = g_dept 
      LET g_mmbf_m.mmbfcrtdt = cl_get_current()
      LET g_mmbf_m.mmbfmodid = g_user
      LET g_mmbf_m.mmbfmoddt = cl_get_current()
      LET g_mmbf_m.mmbfstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmbf_m.mmbfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL ammt321_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_mmbf_m.* TO NULL
      INITIALIZE g_mmbg_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL ammt321_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt321_set_act_visible()   
   CALL ammt321_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmbfent = " ||g_enterprise|| " AND",
                      " mmbfdocno = '", g_mmbf_m.mmbfdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt321_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL ammt321_idx_chk()
   
   LET g_data_owner = g_mmbf_m.mmbfownid      
   LET g_data_dept  = g_mmbf_m.mmbfowndp
   
   #功能已完成,通報訊息中心
   CALL ammt321_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION ammt321_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmbg_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt321_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmbg_t
    WHERE mmbgent = g_enterprise AND mmbgdocno = g_mmbfdocno_t
 
    INTO TEMP ammt321_detail
 
   #將key修正為調整後   
   UPDATE ammt321_detail 
      #更新key欄位
      SET mmbgdocno = g_mmbf_m.mmbfdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO mmbg_t SELECT * FROM ammt321_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt321_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.delete" >}
#+ 資料刪除
PRIVATE FUNCTION ammt321_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_mmbf_m.mmbfdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN ammt321_cl USING g_enterprise,g_mmbf_m.mmbfdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt321_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt321_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
   
   #檢查是否允許此動作
   IF NOT ammt321_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmbf_m_mask_o.* =  g_mmbf_m.*
   CALL ammt321_mmbf_t_mask()
   LET g_mmbf_m_mask_n.* =  g_mmbf_m.*
   
   CALL ammt321_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL ammt321_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_mmbfdocno_t = g_mmbf_m.mmbfdocno
 
 
      DELETE FROM mmbf_t
       WHERE mmbfent = g_enterprise AND mmbfdocno = g_mmbf_m.mmbfdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_mmbf_m.mmbfdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM mmbg_t
       WHERE mmbgent = g_enterprise AND mmbgdocno = g_mmbf_m.mmbfdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_mmbf_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE ammt321_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_mmbg_d.clear() 
 
     
      CALL ammt321_ui_browser_refresh()  
      #CALL ammt321_ui_headershow()  
      #CALL ammt321_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL ammt321_browser_fill("")
         CALL ammt321_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE ammt321_cl
 
   #功能已完成,通報訊息中心
   CALL ammt321_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="ammt321.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ammt321_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_mmbg_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF ammt321_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmbg001,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007,mmbg008, 
             mmbg009,mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017,mmbg018, 
             mmbg019,mmbg020,mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028,mmbg029, 
             mmbg030,mmbg031,mmbgunit,mmbgsite ,t1.mmanl003 ,t2.mmaf008 ,t3.ooefl003 ,t4.ooefl003 ,t5.ooefl003 , 
             t6.ooefl003 ,t7.ooefl003 ,t8.ooefl003 FROM mmbg_t",   
                     " INNER JOIN mmbf_t ON mmbfent = " ||g_enterprise|| " AND mmbfdocno = mmbgdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN mmanl_t t1 ON t1.mmanlent="||g_enterprise||" AND t1.mmanl001=mmbg002 AND t1.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN mmaf_t t2 ON t2.mmafent="||g_enterprise||" AND t2.mmaf001=mmbg003  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=mmbg020 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=mmbg022 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=mmbg024 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=mmbg026 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=mmbg028 AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=mmbg030 AND t8.ooefl002='"||g_dlang||"' ",
 
                     " WHERE mmbgent=? AND mmbgdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmbg_t.mmbg001"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt321_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR ammt321_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_mmbf_m.mmbfdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_mmbf_m.mmbfdocno INTO g_mmbg_d[l_ac].mmbg001,g_mmbg_d[l_ac].mmbg002, 
          g_mmbg_d[l_ac].mmbg003,g_mmbg_d[l_ac].mmbg004,g_mmbg_d[l_ac].mmbg005,g_mmbg_d[l_ac].mmbg006, 
          g_mmbg_d[l_ac].mmbg007,g_mmbg_d[l_ac].mmbg008,g_mmbg_d[l_ac].mmbg009,g_mmbg_d[l_ac].mmbg011, 
          g_mmbg_d[l_ac].mmbg010,g_mmbg_d[l_ac].mmbg012,g_mmbg_d[l_ac].mmbg032,g_mmbg_d[l_ac].mmbg013, 
          g_mmbg_d[l_ac].mmbg014,g_mmbg_d[l_ac].mmbg015,g_mmbg_d[l_ac].mmbg016,g_mmbg_d[l_ac].mmbg017, 
          g_mmbg_d[l_ac].mmbg018,g_mmbg_d[l_ac].mmbg019,g_mmbg_d[l_ac].mmbg020,g_mmbg_d[l_ac].mmbg021, 
          g_mmbg_d[l_ac].mmbg022,g_mmbg_d[l_ac].mmbg023,g_mmbg_d[l_ac].mmbg024,g_mmbg_d[l_ac].mmbg025, 
          g_mmbg_d[l_ac].mmbg026,g_mmbg_d[l_ac].mmbg027,g_mmbg_d[l_ac].mmbg028,g_mmbg_d[l_ac].mmbg029, 
          g_mmbg_d[l_ac].mmbg030,g_mmbg_d[l_ac].mmbg031,g_mmbg_d[l_ac].mmbgunit,g_mmbg_d[l_ac].mmbgsite, 
          g_mmbg_d[l_ac].mmbg002_desc,g_mmbg_d[l_ac].mmbg003_desc,g_mmbg_d[l_ac].mmbg020_desc,g_mmbg_d[l_ac].mmbg022_desc, 
          g_mmbg_d[l_ac].mmbg024_desc,g_mmbg_d[l_ac].mmbg026_desc,g_mmbg_d[l_ac].mmbg028_desc,g_mmbg_d[l_ac].mmbg030_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
       #  CALL ammt321_mmbg002_ref()
       #  CALL ammt321_mmbg003_ref()
       #  CALL ammt321_mmbg020_ref()
       #  CALL ammt321_mmbg022_ref()
       #  CALL ammt321_mmbg024_ref()
       #  CALL ammt321_mmbg026_ref()
       #  CALL ammt321_mmbg028_ref()
       #  CALL ammt321_mmbg030_ref()
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_mmbg_d.deleteElement(g_mmbg_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt321_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_mmbg_d.getLength()
      LET g_mmbg_d_mask_o[l_ac].* =  g_mmbg_d[l_ac].*
      CALL ammt321_mmbg_t_mask()
      LET g_mmbg_d_mask_n[l_ac].* =  g_mmbg_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt321_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM mmbg_t
       WHERE mmbgent = g_enterprise AND
         mmbgdocno = ps_keys_bak[1] AND mmbg001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmbg_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt321_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO mmbg_t
                  (mmbgent,
                   mmbgdocno,
                   mmbg001
                   ,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007,mmbg008,mmbg009,mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017,mmbg018,mmbg019,mmbg020,mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028,mmbg029,mmbg030,mmbg031,mmbgunit,mmbgsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmbg_d[g_detail_idx].mmbg002,g_mmbg_d[g_detail_idx].mmbg003,g_mmbg_d[g_detail_idx].mmbg004, 
                       g_mmbg_d[g_detail_idx].mmbg005,g_mmbg_d[g_detail_idx].mmbg006,g_mmbg_d[g_detail_idx].mmbg007, 
                       g_mmbg_d[g_detail_idx].mmbg008,g_mmbg_d[g_detail_idx].mmbg009,g_mmbg_d[g_detail_idx].mmbg011, 
                       g_mmbg_d[g_detail_idx].mmbg010,g_mmbg_d[g_detail_idx].mmbg012,g_mmbg_d[g_detail_idx].mmbg032, 
                       g_mmbg_d[g_detail_idx].mmbg013,g_mmbg_d[g_detail_idx].mmbg014,g_mmbg_d[g_detail_idx].mmbg015, 
                       g_mmbg_d[g_detail_idx].mmbg016,g_mmbg_d[g_detail_idx].mmbg017,g_mmbg_d[g_detail_idx].mmbg018, 
                       g_mmbg_d[g_detail_idx].mmbg019,g_mmbg_d[g_detail_idx].mmbg020,g_mmbg_d[g_detail_idx].mmbg021, 
                       g_mmbg_d[g_detail_idx].mmbg022,g_mmbg_d[g_detail_idx].mmbg023,g_mmbg_d[g_detail_idx].mmbg024, 
                       g_mmbg_d[g_detail_idx].mmbg025,g_mmbg_d[g_detail_idx].mmbg026,g_mmbg_d[g_detail_idx].mmbg027, 
                       g_mmbg_d[g_detail_idx].mmbg028,g_mmbg_d[g_detail_idx].mmbg029,g_mmbg_d[g_detail_idx].mmbg030, 
                       g_mmbg_d[g_detail_idx].mmbg031,g_mmbg_d[g_detail_idx].mmbgunit,g_mmbg_d[g_detail_idx].mmbgsite) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmbg_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt321_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmbg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL ammt321_mmbg_t_mask_restore('restore_mask_o')
               
      UPDATE mmbg_t 
         SET (mmbgdocno,
              mmbg001
              ,mmbg002,mmbg003,mmbg004,mmbg005,mmbg006,mmbg007,mmbg008,mmbg009,mmbg011,mmbg010,mmbg012,mmbg032,mmbg013,mmbg014,mmbg015,mmbg016,mmbg017,mmbg018,mmbg019,mmbg020,mmbg021,mmbg022,mmbg023,mmbg024,mmbg025,mmbg026,mmbg027,mmbg028,mmbg029,mmbg030,mmbg031,mmbgunit,mmbgsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmbg_d[g_detail_idx].mmbg002,g_mmbg_d[g_detail_idx].mmbg003,g_mmbg_d[g_detail_idx].mmbg004, 
                  g_mmbg_d[g_detail_idx].mmbg005,g_mmbg_d[g_detail_idx].mmbg006,g_mmbg_d[g_detail_idx].mmbg007, 
                  g_mmbg_d[g_detail_idx].mmbg008,g_mmbg_d[g_detail_idx].mmbg009,g_mmbg_d[g_detail_idx].mmbg011, 
                  g_mmbg_d[g_detail_idx].mmbg010,g_mmbg_d[g_detail_idx].mmbg012,g_mmbg_d[g_detail_idx].mmbg032, 
                  g_mmbg_d[g_detail_idx].mmbg013,g_mmbg_d[g_detail_idx].mmbg014,g_mmbg_d[g_detail_idx].mmbg015, 
                  g_mmbg_d[g_detail_idx].mmbg016,g_mmbg_d[g_detail_idx].mmbg017,g_mmbg_d[g_detail_idx].mmbg018, 
                  g_mmbg_d[g_detail_idx].mmbg019,g_mmbg_d[g_detail_idx].mmbg020,g_mmbg_d[g_detail_idx].mmbg021, 
                  g_mmbg_d[g_detail_idx].mmbg022,g_mmbg_d[g_detail_idx].mmbg023,g_mmbg_d[g_detail_idx].mmbg024, 
                  g_mmbg_d[g_detail_idx].mmbg025,g_mmbg_d[g_detail_idx].mmbg026,g_mmbg_d[g_detail_idx].mmbg027, 
                  g_mmbg_d[g_detail_idx].mmbg028,g_mmbg_d[g_detail_idx].mmbg029,g_mmbg_d[g_detail_idx].mmbg030, 
                  g_mmbg_d[g_detail_idx].mmbg031,g_mmbg_d[g_detail_idx].mmbgunit,g_mmbg_d[g_detail_idx].mmbgsite)  
 
         WHERE mmbgent = g_enterprise AND mmbgdocno = ps_keys_bak[1] AND mmbg001 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmbg_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmbg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt321_mmbg_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION ammt321_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION ammt321_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt321_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL ammt321_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmbg_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt321_bcl USING g_enterprise,
                                       g_mmbf_m.mmbfdocno,g_mmbg_d[g_detail_idx].mmbg001     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt321_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt321_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt321_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt321_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("mmbfdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmbfdocno",TRUE)
      CALL cl_set_comp_entry("mmbfdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("mmbfdocdt",TRUE)
      CALL cl_set_comp_entry("mmbfsite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt321_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmbfdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("mmbfdocdt",FALSE)
      CALL cl_set_comp_entry("mmbfsite",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("mmbfdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("mmbfdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'mmbfsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("mmbfsite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt321_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   DEFINE l_mman017 LIKE mman_t.mman017
   DEFINE l_mman018 LIKE mman_t.mman018
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   IF NOT cl_null(g_mmbg_d[l_ac].mmbg002) THEN
     SELECT mman042,mman017,mman018 INTO g_mmbg_d[l_ac].mmbg007,l_mman017,l_mman018 FROM mman_t
      WHERE mmanent = g_enterprise AND mman001 = g_mmbg_d[l_ac].mmbg002
     IF g_mmbg_d[l_ac].mmbg007 = 'Y' THEN
        CALL cl_set_comp_entry("mmbg007",TRUE)
     END IF
     
     IF l_mman017 = 'Y' THEN
        CALL cl_set_comp_entry("mmbg004",TRUE)
     END IF
     IF l_mman018 = 'Y' THEN
        CALL cl_set_comp_entry("mmbg005",TRUE)
     END IF
   END IF
   IF g_mmbg_d[l_ac].mmbg007 = 'Y' THEN
      CALL cl_set_comp_entry("mmbg008,mmbg009,mmbg010,mmbg011,mmbg012,mmbg032",TRUE)
   END IF
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt321_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_mman017 LIKE mman_t.mman017
   DEFINE l_mman018 LIKE mman_t.mman018
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF NOT cl_null(g_mmbg_d[l_ac].mmbg002) THEN
     SELECT mman042,mman017,mman018 INTO g_mmbg_d[l_ac].mmbg007,l_mman017,l_mman018 FROM mman_t
      WHERE mmanent = g_enterprise AND mman001 = g_mmbg_d[l_ac].mmbg002
     IF g_mmbg_d[l_ac].mmbg007 = 'N' THEN
        CALL cl_set_comp_entry("mmbg007",FALSE)
        LET g_mmbg_d[l_ac].mmbg008 = 100
        LET g_mmbg_d[l_ac].mmbg009 = 0
        LET g_mmbg_d[l_ac].mmbg010 = 0
        LET g_mmbg_d[l_ac].mmbg011 = 0
        LET g_mmbg_d[l_ac].mmbg012 = 0
        LET g_mmbg_d[l_ac].mmbg032 = 0
     END IF
     IF l_mman017 = 'N' THEN
        CALL cl_set_comp_entry("mmbg004",FALSE)
        LET g_mmbg_d[l_ac].mmbg004 = ''
     END IF
     IF l_mman018 = 'N' THEN
        CALL cl_set_comp_entry("mmbg005",FALSE)
        LET g_mmbg_d[l_ac].mmbg005 = ''
     END IF
     
   END IF
   IF g_mmbg_d[l_ac].mmbg007 = 'N' THEN
      CALL cl_set_comp_entry("mmbg008,mmbg009,mmbg010,mmbg011,mmbg012,mmbg032",FALSE)
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION ammt321_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION ammt321_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_mmbf_m.mmbfstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION ammt321_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION ammt321_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION ammt321_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmbfdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "mmbf_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmbg_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION ammt321_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.chr5 
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
 
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmbf_m.mmbfdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN ammt321_cl USING g_enterprise,g_mmbf_m.mmbfdocno
   IF STATUS THEN
      CLOSE ammt321_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt321_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
       g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfowndp, 
       g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc
   
 
   #檢查是否允許此動作
   IF NOT ammt321_action_chk() THEN
      CLOSE ammt321_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit, 
       g_mmbf_m.mmbf001,g_mmbf_m.mmbf001_desc,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid,g_mmbf_m.mmbfownid_desc, 
       g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfowndp_desc,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtid_desc,g_mmbf_m.mmbfcrtdp, 
       g_mmbf_m.mmbfcrtdp_desc,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmodid_desc,g_mmbf_m.mmbfmoddt, 
       g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfid_desc,g_mmbf_m.mmbfcnfdt
 
   CASE g_mmbf_m.mmbfstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmbf_m.mmbfstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CASE g_mmbf_m.mmbfstus
         WHEN "Y"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "invalid"
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
            
         WHEN "X"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "confirmed"
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
         END CASE
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_mmbf_m.mmbfstus = lc_state OR cl_null(lc_state) THEN
      CLOSE ammt321_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt321_conf_chk(g_mmbf_m.mmbfdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_ammt321_conf_upd(g_mmbf_m.mmbfdocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmbf_m.mmbfdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN            
            END IF
         ELSE
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmbf_m.mmbfdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

            END IF
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_ammt321_void_chk(g_mmbf_m.mmbfdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt321_void_upd(g_mmbf_m.mmbfdocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmbf_m.mmbfdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmbf_m.mmbfdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN    
         END IF
         
    
         
   END CASE
   #end add-point
   
   LET g_mmbf_m.mmbfmodid = g_user
   LET g_mmbf_m.mmbfmoddt = cl_get_current()
   LET g_mmbf_m.mmbfstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE mmbf_t 
      SET (mmbfstus,mmbfmodid,mmbfmoddt) 
        = (g_mmbf_m.mmbfstus,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmoddt)     
    WHERE mmbfent = g_enterprise AND mmbfdocno = g_mmbf_m.mmbfdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE ammt321_master_referesh USING g_mmbf_m.mmbfdocno INTO g_mmbf_m.mmbfsite,g_mmbf_m.mmbfdocdt, 
          g_mmbf_m.mmbfdocno,g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid, 
          g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid, 
          g_mmbf_m.mmbfmoddt,g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfdt,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbf001_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_mmbf_m.mmbfsite,g_mmbf_m.mmbfsite_desc,g_mmbf_m.mmbfdocdt,g_mmbf_m.mmbfdocno, 
          g_mmbf_m.mmbfunit,g_mmbf_m.mmbf001,g_mmbf_m.mmbf001_desc,g_mmbf_m.mmbfstus,g_mmbf_m.mmbfownid, 
          g_mmbf_m.mmbfownid_desc,g_mmbf_m.mmbfowndp,g_mmbf_m.mmbfowndp_desc,g_mmbf_m.mmbfcrtid,g_mmbf_m.mmbfcrtid_desc, 
          g_mmbf_m.mmbfcrtdp,g_mmbf_m.mmbfcrtdp_desc,g_mmbf_m.mmbfcrtdt,g_mmbf_m.mmbfmodid,g_mmbf_m.mmbfmodid_desc, 
          g_mmbf_m.mmbfmoddt,g_mmbf_m.mmbfcnfid,g_mmbf_m.mmbfcnfid_desc,g_mmbf_m.mmbfcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE ammt321_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt321_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt321.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION ammt321_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmbg_d.getLength() THEN
         LET g_detail_idx = g_mmbg_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmbg_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmbg_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ammt321_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt321_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION ammt321_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt321.status_show" >}
PRIVATE FUNCTION ammt321_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="ammt321.mask_functions" >}
&include "erp/amm/ammt321_mask.4gl"
 
{</section>}
 
{<section id="ammt321.signature" >}
   
 
{</section>}
 
{<section id="ammt321.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION ammt321_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmbf_m.mmbfdocno
   LET g_pk_array[1].column = 'mmbfdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt321.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="ammt321.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION ammt321_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL ammt321_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_mmbf_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt321.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION ammt321_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
    #160818-00017#21 add-S
   SELECT mmbfstus  INTO g_mmbf_m.mmbfstus
     FROM mmbf_t
    WHERE mmbfent = g_enterprise
      AND mmbfdocno = g_mmbf_m.mmbfdocno

   IF(g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_mmbf_m.mmbfstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_mmbf_m.mmbfdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL ammt321_set_act_visible()
        CALL ammt321_set_act_no_visible()
        CALL ammt321_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#21 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt321.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt321_chk_mmbfdocno()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_chk_mmbfdocno()
   IF NOT s_aooi200_chk_slip(g_site,'',g_mmbf_m.mmbfdocno,g_prog) THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbfsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbf_m.mmbfsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbf_m.mmbfsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbf_m.mmbfsite_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbf001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbf_m.mmbf001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbf_m.mmbf001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbf_m.mmbf001_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg001_chk()
DEFINE l_n  LIKE type_t.num5

#check  存在會員卡資料檔 時候 err 提示 : 已存在會員卡基本資料檔，不可維護！
   SELECT COUNT(*) INTO l_n FROM mmaq_t
    WHERE mmaqent = g_enterprise AND mmaq001 = g_mmbg_d[l_ac].mmbg001
    
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'amm-00208'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
  
  
#若卡種編號有輸入值需要檢查卡號是否符合卡種編號的編碼規則
   IF NOT cl_null(g_mmbg_d[l_ac].mmbg002) THEN
      IF NOT ammt321_card_no_chk() THEN
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg002
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg002_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg002_chk()
 
 #1.檢查是否存在卡種基本資料檔 
   INITIALIZE g_chkparam.* TO NULL
   LET g_errshow = '1'
   LET g_chkparam.arg1 =g_mmbg_d[l_ac].mmbg002
   IF NOT cl_chk_exist("v_mman001_1") THEN
      RETURN FALSE    
   END IF
 # 2.若會員卡號有值，需要檢查卡號和卡種的編碼規則 是否一致
   IF NOT cl_null(g_mmbg_d[l_ac].mmbg001) THEN
      IF NOT ammt321_card_no_chk() THEN
         RETURN FALSE
      END IF
   END IF   
   RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_card_no_chk()
DEFINE l_mman005  LIKE mman_t.mman005
DEFINE l_mman006  LIKE mman_t.mman006
DEFINE l_mman007  LIKE mman_t.mman007
DEFINE l_mman008  LIKE mman_t.mman008
DEFINE l_str     STRING
DEFINE  l_n      LIKE type_t.num5
DEFINE  l_char    LIKE  mmbg_t.mmbg001
  
  LET  l_char = g_mmbg_d[l_ac].mmbg001
  LET  l_str = g_mmbg_d[l_ac].mmbg001
  SELECT mman005,mman006,mman007,mman008 INTO l_mman005,l_mman006,l_mman007,l_mman008
   FROM mman_t WHERE mmanent= g_enterprise AND mman001 = g_mmbg_d[l_ac].mmbg002
 
  IF l_char[1,l_mman006] <> l_mman007 THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code = 'amm-00138'
     LET g_errparam.extend = ''
     LET g_errparam.popup = TRUE
     CALL cl_err()

     RETURN FALSE
  END IF
  
  IF l_str.getLength() <> l_mman005 THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code = 'amm-00137'
     LET g_errparam.extend = ''
     LET g_errparam.popup = TRUE
     CALL cl_err()

     RETURN FALSE
  END IF
  
  FOR l_n=l_mman006 TO l_mman005-1
      IF l_char[l_n+1,l_n+1] NOT MATCHES '[0123456789]' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'amm-00139'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
  END FOR
  
  RETURN TRUE

END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg003
   CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg003_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg020_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg020
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg020_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg020_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg022_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg022
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg022_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg022_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg024_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg024
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg024_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg024_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg026_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg026
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg026_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg026_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg028_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg028
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg028_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg028_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt321_mmbg030_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmbg_d[l_ac].mmbg030
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmbg_d[l_ac].mmbg030_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmbg_d[l_ac].mmbg030_desc
END FUNCTION

 
{</section>}
 
