#該程式未解開Section, 採用最新樣板產出!
{<section id="ammt405.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0039(2016-12-27 11:10:49), PR版次:0039(2016-12-30 10:27:33)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000917
#+ Filename...: ammt405
#+ Description: 會員卡發卡維護作業
#+ Creator....: 02003(2014-04-19 11:29:25)
#+ Modifier...: 07142 -SD/PR- 02749
 
{</section>}
 
{<section id="ammt405.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#160318-00025#48  2016/04/29 By 07959   將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160517-00034#1   2016/05/23 by 08172   来源单号栏位检查修改
#160620-00011#1   2016/06/21 by 08172   同一卡种重复储值判断修改
#160705-00042#11  2016/07/14 By sakura  程式中寫死g_prog部分改寫MATCHES方式
##160720-00001#1  2016/07/20 by 08172   sql加ent条件
#160604-00009#50  2016/07/22 by 08172   库区预设值
#160816-00068#5   2016/08/18 By earl    調整transaction
#160728-00006#34  2016/08/22 by 08172   组织赠送时调整gcao032=0
#160728-00006#35  2016/08/22 by 08172   会员卡批量发卡按钮，只有ammt405才可以点
#160729-00077#5   2016/08/23 By loir    1.新增欄位：mmea015-mmea016,mmed015-mmed016
#                                       2.s_card_value_cal增加回傳值
#160818-00017#22  2016/08/26 By 08742   删除修改未重新判断状态码
#160830-00037#1   2016/08/31 by 08172   新加单据别参数的逻辑：D-BAS-0083（审核后是否自动过账）
#160905-00007#6   2016/09/05 By 02599   SQL条件增加ent
#161024-00025#7   2016/10/24 by 08742   组织开窗调整
#161109-00052#1   2016/11/09 by 06189   反储值的时候判断卡的余额的大于退款金额，退单的日期后的异动档只能有存储类型或者反储值类型的异动明细
#161111-00028#1   2016/11/11 BY 02481   标准程式定义采用宣告模式,弃用.*写法
#160824-00007#123 2016/11/23 By sakura  新舊值備份處理
#161216-00004#5   2016/12/28 By lori    調用s_artt600_conf_chk、s_artt600_post_chk前須自行宣告匯總錯誤訊息初始化與顯示
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
 
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtia_m        RECORD
       rtiasite LIKE rtia_t.rtiasite, 
   rtiasite_desc LIKE type_t.chr80, 
   rtiadocdt LIKE rtia_t.rtiadocdt, 
   rtiadocno LIKE rtia_t.rtiadocno, 
   rtiaunit LIKE rtia_t.rtiaunit, 
   rtia004 LIKE rtia_t.rtia004, 
   rtia004_desc LIKE type_t.chr80, 
   rtia005 LIKE rtia_t.rtia005, 
   rtia005_desc LIKE type_t.chr80, 
   rtia006 LIKE rtia_t.rtia006, 
   rtia048 LIKE rtia_t.rtia048, 
   rtia001 LIKE rtia_t.rtia001, 
   rtia001_desc LIKE type_t.chr80, 
   rtia002 LIKE rtia_t.rtia002, 
   rtia002_desc LIKE type_t.chr80, 
   rtia050 LIKE rtia_t.rtia050, 
   rtia053 LIKE rtia_t.rtia053, 
   rtia056 LIKE rtia_t.rtia056, 
   rtiastus LIKE rtia_t.rtiastus, 
   rtia007 LIKE rtia_t.rtia007, 
   rtia009 LIKE rtia_t.rtia009, 
   rtia009_desc LIKE type_t.chr80, 
   rtia014 LIKE rtia_t.rtia014, 
   rtia015 LIKE rtia_t.rtia015, 
   rtia041 LIKE rtia_t.rtia041, 
   rtia025 LIKE rtia_t.rtia025, 
   rtia025_desc LIKE type_t.chr80, 
   rtia026 LIKE rtia_t.rtia026, 
   rtia027 LIKE rtia_t.rtia027, 
   rtia028 LIKE rtia_t.rtia028, 
   rtia029 LIKE rtia_t.rtia029, 
   rtia030 LIKE rtia_t.rtia030, 
   rtia032 LIKE rtia_t.rtia032, 
   rtia033 LIKE rtia_t.rtia033, 
   rtia034 LIKE rtia_t.rtia034, 
   rtia035 LIKE rtia_t.rtia035, 
   rtia036 LIKE rtia_t.rtia036, 
   rtia036_desc LIKE type_t.chr80, 
   rtia037 LIKE rtia_t.rtia037, 
   rtia037_desc LIKE type_t.chr80, 
   rtia038 LIKE rtia_t.rtia038, 
   rtia038_desc LIKE type_t.chr80, 
   rtia039 LIKE rtia_t.rtia039, 
   rtiaownid LIKE rtia_t.rtiaownid, 
   rtiaownid_desc LIKE type_t.chr80, 
   rtiaowndp LIKE rtia_t.rtiaowndp, 
   rtiaowndp_desc LIKE type_t.chr80, 
   rtiacrtid LIKE rtia_t.rtiacrtid, 
   rtiacrtid_desc LIKE type_t.chr80, 
   rtiacrtdp LIKE rtia_t.rtiacrtdp, 
   rtiacrtdp_desc LIKE type_t.chr80, 
   rtiacrtdt LIKE rtia_t.rtiacrtdt, 
   rtiamodid LIKE rtia_t.rtiamodid, 
   rtiamodid_desc LIKE type_t.chr80, 
   rtiamoddt LIKE rtia_t.rtiamoddt, 
   rtiacnfid LIKE rtia_t.rtiacnfid, 
   rtiacnfid_desc LIKE type_t.chr80, 
   rtiacnfdt LIKE rtia_t.rtiacnfdt, 
   rtiapstid LIKE rtia_t.rtiapstid, 
   rtiapstid_desc LIKE type_t.chr80, 
   rtiapstdt LIKE rtia_t.rtiapstdt, 
   snum LIKE type_t.chr500, 
   amount LIKE type_t.chr500, 
   amount2 LIKE type_t.chr500, 
   amount3 LIKE type_t.chr500, 
   amount4 LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmea_d        RECORD
       mmeaseq LIKE mmea_t.mmeaseq, 
   mmea001 LIKE mmea_t.mmea001, 
   mmea002 LIKE mmea_t.mmea002, 
   mmea003 LIKE mmea_t.mmea003, 
   mmea003_desc LIKE type_t.chr500, 
   mmak009 LIKE type_t.chr10, 
   mmak010 LIKE type_t.num20_6, 
   mmea004 LIKE mmea_t.mmea004, 
   mmea005 LIKE mmea_t.mmea005, 
   mmea006 LIKE mmea_t.mmea006, 
   mmea007 LIKE mmea_t.mmea007, 
   mmea008 LIKE mmea_t.mmea008, 
   mmea009 LIKE mmea_t.mmea009, 
   mmea010 LIKE mmea_t.mmea010, 
   mmea011 LIKE mmea_t.mmea011, 
   mmea012 LIKE mmea_t.mmea012, 
   mmea013 LIKE mmea_t.mmea013, 
   mmea013_desc LIKE type_t.chr500, 
   mmea014 LIKE type_t.chr1, 
   mmea015 LIKE mmea_t.mmea015, 
   mmea016 LIKE mmea_t.mmea016
       END RECORD
PRIVATE TYPE type_g_mmea10_d RECORD
       rtieseq LIKE rtie_t.rtieseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtieseq1 LIKE rtie_t.rtieseq1, 
   rtie001 LIKE rtie_t.rtie001, 
   rtie002 LIKE rtie_t.rtie002, 
   rtie002_desc LIKE type_t.chr500, 
   rtie006 LIKE rtie_t.rtie006
       END RECORD
PRIVATE TYPE type_g_mmea2_d RECORD
       mmecseq LIKE mmec_t.mmecseq, 
   mmec014 LIKE mmec_t.mmec014, 
   mmec014_desc LIKE type_t.chr500, 
   mmec001 LIKE mmec_t.mmec001, 
   mmec002 LIKE mmec_t.mmec002, 
   mmec002_desc LIKE type_t.chr500, 
   mmec003 LIKE mmec_t.mmec003, 
   mmec004 LIKE mmec_t.mmec004, 
   mmec005 LIKE mmec_t.mmec005, 
   mmec006 LIKE mmec_t.mmec006, 
   mmec007 LIKE mmec_t.mmec007, 
   mmec008 LIKE mmec_t.mmec008, 
   mmec009 LIKE mmec_t.mmec009, 
   mmec009_desc LIKE type_t.chr500, 
   mmec010 LIKE mmec_t.mmec010, 
   mmec011 LIKE mmec_t.mmec011, 
   mmec012 LIKE mmec_t.mmec012, 
   mmec013 LIKE mmec_t.mmec013, 
   inaa001_desc LIKE type_t.chr500, 
   mmec015 LIKE mmec_t.mmec015
       END RECORD
PRIVATE TYPE type_g_mmea3_d RECORD
       mmebseq LIKE mmeb_t.mmebseq, 
   mmeb014 LIKE mmeb_t.mmeb014, 
   mmeb014_desc LIKE type_t.chr500, 
   mmeb001 LIKE mmeb_t.mmeb001, 
   mmeb002 LIKE mmeb_t.mmeb002, 
   mmeb002_desc LIKE type_t.chr500, 
   mmeb003 LIKE mmeb_t.mmeb003, 
   mmeb004 LIKE mmeb_t.mmeb004, 
   mmeb005 LIKE mmeb_t.mmeb005, 
   mmeb006 LIKE mmeb_t.mmeb006, 
   mmeb007 LIKE mmeb_t.mmeb007, 
   mmeb008 LIKE mmeb_t.mmeb008, 
   mmeb009 LIKE mmeb_t.mmeb009, 
   mmeb009_desc LIKE type_t.chr500, 
   mmeb010 LIKE mmeb_t.mmeb010, 
   mmeb011 LIKE mmeb_t.mmeb011, 
   mmeb012 LIKE mmeb_t.mmeb012, 
   mmeb013 LIKE mmeb_t.mmeb013, 
   inaa001_desc03 LIKE type_t.chr500, 
   mmeb015 LIKE mmeb_t.mmeb015
       END RECORD
PRIVATE TYPE type_g_mmea4_d RECORD
       mmedseq LIKE mmed_t.mmedseq, 
   mmed001 LIKE mmed_t.mmed001, 
   mmaq002 LIKE type_t.chr10, 
   mmaq002_desc LIKE type_t.chr500, 
   mmaq003 LIKE type_t.chr30, 
   mmaq003_desc LIKE type_t.chr20, 
   mmaq003_desc_desc LIKE type_t.chr500, 
   mmed002 LIKE mmed_t.mmed002, 
   mmed003 LIKE mmed_t.mmed003, 
   mmed004 LIKE mmed_t.mmed004, 
   mmed005 LIKE mmed_t.mmed005, 
   mmed006 LIKE mmed_t.mmed006, 
   mmed007 LIKE mmed_t.mmed007, 
   mmed008 LIKE mmed_t.mmed008, 
   mmed009 LIKE mmed_t.mmed009, 
   mmed010 LIKE mmed_t.mmed010, 
   mmed012 LIKE mmed_t.mmed012, 
   mmed014 LIKE mmed_t.mmed014, 
   mmed014_desc LIKE type_t.chr500, 
   mmed013 LIKE mmed_t.mmed013, 
   inaa001_desc01 LIKE type_t.chr500, 
   mmed015 LIKE mmed_t.mmed015, 
   mmed016 LIKE mmed_t.mmed016
       END RECORD
PRIVATE TYPE type_g_mmea6_d RECORD
       gcbiseq LIKE gcbi_t.gcbiseq, 
   gcbiseq1 LIKE gcbi_t.gcbiseq1, 
   gcbi001 LIKE gcbi_t.gcbi001, 
   gcbi002 LIKE gcbi_t.gcbi002, 
   gcbi003 LIKE gcbi_t.gcbi003, 
   gcbi003_desc LIKE type_t.chr500, 
   gcbi004 LIKE gcbi_t.gcbi004, 
   oocq009 LIKE type_t.chr500, 
   gcbi005 LIKE gcbi_t.gcbi005, 
   gcbi009 LIKE gcbi_t.gcbi009, 
   gcbi006 LIKE gcbi_t.gcbi006, 
   gcbi007 LIKE gcbi_t.gcbi007, 
   inaa001_desc02 LIKE type_t.chr500, 
   gcbi008 LIKE gcbi_t.gcbi008
       END RECORD
PRIVATE TYPE type_g_mmea7_d RECORD
       rtibseq LIKE rtib_t.rtibseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtib004_desc LIKE type_t.chr500, 
   rtib004_desc_desc LIKE type_t.chr500, 
   rtib006 LIKE rtib_t.rtib006, 
   rtib006_desc LIKE type_t.chr500, 
   rtib008 LIKE rtib_t.rtib008, 
   rtib009 LIKE rtib_t.rtib009, 
   rtib010 LIKE rtib_t.rtib010, 
   rtib012 LIKE rtib_t.rtib012, 
   rtib013 LIKE rtib_t.rtib013, 
   rtib013_desc LIKE type_t.chr500, 
   rtib020 LIKE rtib_t.rtib020, 
   rtib021 LIKE rtib_t.rtib021, 
   rtib031 LIKE rtib_t.rtib031, 
   rtib022 LIKE rtib_t.rtib022, 
   rtib024 LIKE rtib_t.rtib024, 
   rtib024_desc LIKE type_t.chr500, 
   rtib025 LIKE rtib_t.rtib025, 
   rtib025_desc LIKE type_t.chr500, 
   rtib026 LIKE rtib_t.rtib026, 
   rtib027 LIKE rtib_t.rtib027, 
   rtib028 LIKE rtib_t.rtib028, 
   rtib030 LIKE rtib_t.rtib030, 
   rtib039 LIKE rtib_t.rtib039
       END RECORD
PRIVATE TYPE type_g_mmea8_d RECORD
       rticseq LIKE rtic_t.rticseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   rtib013 LIKE rtib_t.rtib013, 
   rtib013_01_desc LIKE type_t.chr500, 
   rtib012 LIKE rtib_t.rtib012, 
   rtib008 LIKE rtib_t.rtib008, 
   rtib010 LIKE rtib_t.rtib010, 
   rtib021 LIKE rtib_t.rtib021, 
   rticseq1 LIKE rtic_t.rticseq1, 
   rtic001 LIKE rtic_t.rtic001, 
   rtic002 LIKE rtic_t.rtic002, 
   rtic003 LIKE rtic_t.rtic003, 
   rtic004 LIKE rtic_t.rtic004, 
   rtic005 LIKE rtic_t.rtic005, 
   rtic006 LIKE rtic_t.rtic006, 
   rtic007 LIKE rtic_t.rtic007, 
   rtic008 LIKE rtic_t.rtic008, 
   rtic009 LIKE rtic_t.rtic009, 
   rtic010 LIKE rtic_t.rtic010, 
   rtic011 LIKE rtic_t.rtic011, 
   rtic012 LIKE rtic_t.rtic012, 
   rtic013 LIKE rtic_t.rtic013, 
   rtic014 LIKE rtic_t.rtic014, 
   rtic015 LIKE rtic_t.rtic015, 
   rtic016 LIKE rtic_t.rtic016, 
   rtic017 LIKE rtic_t.rtic017, 
   rtic018 LIKE rtic_t.rtic018, 
   rtic020 LIKE rtic_t.rtic020
       END RECORD
PRIVATE TYPE type_g_mmea9_d RECORD
       xrcd007 LIKE xrcd_t.xrcd007, 
   xrcdld LIKE xrcd_t.xrcdld, 
   xrcdseq LIKE xrcd_t.xrcdseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtib006 LIKE rtib_t.rtib006, 
   rtib006_02_desc LIKE type_t.chr500, 
   xrcdseq2 LIKE xrcd_t.xrcdseq2, 
   xrcd002 LIKE xrcd_t.xrcd002, 
   xrcd002_desc LIKE type_t.chr500, 
   xrcd003 LIKE xrcd_t.xrcd003, 
   xrcd006 LIKE xrcd_t.xrcd006, 
   xrcd004 LIKE xrcd_t.xrcd004, 
   xrcd104 LIKE xrcd_t.xrcd104
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtiasite LIKE rtia_t.rtiasite,
   b_rtiasite_desc LIKE type_t.chr80,
      b_rtiadocdt LIKE rtia_t.rtiadocdt,
      b_rtiadocno LIKE rtia_t.rtiadocno,
      b_rtia002 LIKE rtia_t.rtia002,
   b_rtia002_desc LIKE type_t.chr80,
      b_rtia006 LIKE rtia_t.rtia006
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_type   LIKE type_t.chr5
DEFINE g_errno  LIKE type_t.chr50
DEFINE g_rate   LIKE ooan_t.ooan005  
DEFINE g_sign   LIKE type_t.chr1
DEFINE g_rtib   RECORD 
       rtib014  LIKE rtib_t.rtib014,
       rtib015  LIKE rtib_t.rtib015,
       rtib016  LIKE rtib_t.rtib016,
       rtib017  LIKE rtib_t.rtib017,
       rtib018  LIKE rtib_t.rtib018,
       rtib019  LIKE rtib_t.rtib019
       END RECORD 
       
 TYPE type_g_mmea5_d RECORD
       mmedseq LIKE mmed_t.mmedseq, 
   mmed014 LIKE mmed_t.mmed014, 
   mmed014_1_desc LIKE type_t.chr500, 
   mmed001 LIKE mmed_t.mmed001, 
   mmaq002 LIKE type_t.chr10, 
   mmaq002_desc LIKE type_t.chr500, 
   mmaq003 LIKE type_t.chr30, 
   mmed002 LIKE mmed_t.mmed002, 
   mmed003 LIKE mmed_t.mmed003, 
   mmed004 LIKE mmed_t.mmed004,   
   mmed005 LIKE mmed_t.mmed005, 
   mmed009 LIKE mmed_t.mmed009, 
   mmed010 LIKE mmed_t.mmed010, 
   mmed012 LIKE mmed_t.mmed012, 
   mmed013 LIKE mmed_t.mmed013,
   mmed013_desc_1  LIKE type_t.chr500
       END RECORD
DEFINE g_mmea5_d   DYNAMIC ARRAY OF type_g_mmea5_d
DEFINE g_mmea5_d_t type_g_mmea5_d
DEFINE g_wc2_table10   STRING
DEFINE g_site_flag   LIKE type_t.num5
DEFINE g_set_comp    LIKE type_t.chr1    #add by yangxf 储值折扣更新标记
DEFINE g_gcbi001     LIKE gcbi_t.gcbi001
DEFINE g_gcbi002     LIKE gcbi_t.gcbi002
DEFINE g_no_chk      LIKE type_t.chr1
#EFINE g_mmaq001     LIKE mmaq_t.mmaq001  #add by diping #批量产生单身会员卡号开始卡号
#EFINE g_mmaq001_2    LIKE mmaq_t.mmaq001  #add by diping #批量产生单身会员卡号结束卡号
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtia_m          type_g_rtia_m
DEFINE g_rtia_m_t        type_g_rtia_m
DEFINE g_rtia_m_o        type_g_rtia_m
DEFINE g_rtia_m_mask_o   type_g_rtia_m #轉換遮罩前資料
DEFINE g_rtia_m_mask_n   type_g_rtia_m #轉換遮罩後資料
 
   DEFINE g_rtiadocno_t LIKE rtia_t.rtiadocno
 
 
DEFINE g_mmea_d          DYNAMIC ARRAY OF type_g_mmea_d
DEFINE g_mmea_d_t        type_g_mmea_d
DEFINE g_mmea_d_o        type_g_mmea_d
DEFINE g_mmea_d_mask_o   DYNAMIC ARRAY OF type_g_mmea_d #轉換遮罩前資料
DEFINE g_mmea_d_mask_n   DYNAMIC ARRAY OF type_g_mmea_d #轉換遮罩後資料
DEFINE g_mmea10_d          DYNAMIC ARRAY OF type_g_mmea10_d
DEFINE g_mmea10_d_t        type_g_mmea10_d
DEFINE g_mmea10_d_o        type_g_mmea10_d
DEFINE g_mmea10_d_mask_o   DYNAMIC ARRAY OF type_g_mmea10_d #轉換遮罩前資料
DEFINE g_mmea10_d_mask_n   DYNAMIC ARRAY OF type_g_mmea10_d #轉換遮罩後資料
DEFINE g_mmea2_d          DYNAMIC ARRAY OF type_g_mmea2_d
DEFINE g_mmea2_d_t        type_g_mmea2_d
DEFINE g_mmea2_d_o        type_g_mmea2_d
DEFINE g_mmea2_d_mask_o   DYNAMIC ARRAY OF type_g_mmea2_d #轉換遮罩前資料
DEFINE g_mmea2_d_mask_n   DYNAMIC ARRAY OF type_g_mmea2_d #轉換遮罩後資料
DEFINE g_mmea3_d          DYNAMIC ARRAY OF type_g_mmea3_d
DEFINE g_mmea3_d_t        type_g_mmea3_d
DEFINE g_mmea3_d_o        type_g_mmea3_d
DEFINE g_mmea3_d_mask_o   DYNAMIC ARRAY OF type_g_mmea3_d #轉換遮罩前資料
DEFINE g_mmea3_d_mask_n   DYNAMIC ARRAY OF type_g_mmea3_d #轉換遮罩後資料
DEFINE g_mmea4_d          DYNAMIC ARRAY OF type_g_mmea4_d
DEFINE g_mmea4_d_t        type_g_mmea4_d
DEFINE g_mmea4_d_o        type_g_mmea4_d
DEFINE g_mmea4_d_mask_o   DYNAMIC ARRAY OF type_g_mmea4_d #轉換遮罩前資料
DEFINE g_mmea4_d_mask_n   DYNAMIC ARRAY OF type_g_mmea4_d #轉換遮罩後資料
DEFINE g_mmea6_d          DYNAMIC ARRAY OF type_g_mmea6_d
DEFINE g_mmea6_d_t        type_g_mmea6_d
DEFINE g_mmea6_d_o        type_g_mmea6_d
DEFINE g_mmea6_d_mask_o   DYNAMIC ARRAY OF type_g_mmea6_d #轉換遮罩前資料
DEFINE g_mmea6_d_mask_n   DYNAMIC ARRAY OF type_g_mmea6_d #轉換遮罩後資料
DEFINE g_mmea7_d          DYNAMIC ARRAY OF type_g_mmea7_d
DEFINE g_mmea7_d_t        type_g_mmea7_d
DEFINE g_mmea7_d_o        type_g_mmea7_d
DEFINE g_mmea7_d_mask_o   DYNAMIC ARRAY OF type_g_mmea7_d #轉換遮罩前資料
DEFINE g_mmea7_d_mask_n   DYNAMIC ARRAY OF type_g_mmea7_d #轉換遮罩後資料
DEFINE g_mmea8_d          DYNAMIC ARRAY OF type_g_mmea8_d
DEFINE g_mmea8_d_t        type_g_mmea8_d
DEFINE g_mmea8_d_o        type_g_mmea8_d
DEFINE g_mmea8_d_mask_o   DYNAMIC ARRAY OF type_g_mmea8_d #轉換遮罩前資料
DEFINE g_mmea8_d_mask_n   DYNAMIC ARRAY OF type_g_mmea8_d #轉換遮罩後資料
DEFINE g_mmea9_d          DYNAMIC ARRAY OF type_g_mmea9_d
DEFINE g_mmea9_d_t        type_g_mmea9_d
DEFINE g_mmea9_d_o        type_g_mmea9_d
DEFINE g_mmea9_d_mask_o   DYNAMIC ARRAY OF type_g_mmea9_d #轉換遮罩前資料
DEFINE g_mmea9_d_mask_n   DYNAMIC ARRAY OF type_g_mmea9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="ammt405.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化 name="main.init"
         LET g_sign = 't'
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
      
   #end add-point
   LET g_forupd_sql = " SELECT rtiasite,'',rtiadocdt,rtiadocno,rtiaunit,rtia004,'',rtia005,'',rtia006, 
       rtia048,rtia001,'',rtia002,'',rtia050,rtia053,rtia056,rtiastus,rtia007,rtia009,'',rtia014,rtia015, 
       rtia041,rtia025,'',rtia026,rtia027,rtia028,rtia029,rtia030,rtia032,rtia033,rtia034,rtia035,rtia036, 
       '',rtia037,'',rtia038,'',rtia039,rtiaownid,'',rtiaowndp,'',rtiacrtid,'',rtiacrtdp,'',rtiacrtdt, 
       rtiamodid,'',rtiamoddt,rtiacnfid,'',rtiacnfdt,rtiapstid,'',rtiapstdt,'','','','',''", 
                      " FROM rtia_t",
                      " WHERE rtiaent= ? AND rtiadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   LET g_type = g_argv[1]
   IF g_type = '1' THEN 
      LET g_prog = 'ammt406'
   END IF 
   IF g_type = '2' THEN 
      LET g_prog = 'ammt407'
   END IF 
   IF g_type = '3' THEN 
      LET g_prog = 'ammt425'
   END IF 
   IF g_type = '4' THEN 
      LET g_prog = 'ammt426'
   END IF 
   IF g_type = '5' THEN 
      LET g_prog = 'agct405'
   END IF 
   IF g_type = '6' THEN 
      LET g_prog = 'agct406'
   END IF 
   IF g_type = '7' THEN 
      LET g_prog = 'ammt429'
   END IF 
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtiaunit,t0.rtia004,t0.rtia005, 
       t0.rtia006,t0.rtia048,t0.rtia001,t0.rtia002,t0.rtia050,t0.rtia053,t0.rtia056,t0.rtiastus,t0.rtia007, 
       t0.rtia009,t0.rtia014,t0.rtia015,t0.rtia041,t0.rtia025,t0.rtia026,t0.rtia027,t0.rtia028,t0.rtia029, 
       t0.rtia030,t0.rtia032,t0.rtia033,t0.rtia034,t0.rtia035,t0.rtia036,t0.rtia037,t0.rtia038,t0.rtia039, 
       t0.rtiaownid,t0.rtiaowndp,t0.rtiacrtid,t0.rtiacrtdp,t0.rtiacrtdt,t0.rtiamodid,t0.rtiamoddt,t0.rtiacnfid, 
       t0.rtiacnfdt,t0.rtiapstid,t0.rtiapstdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.mmaf008 ,t5.pmaal004 , 
       t6.oocql004 ,t7.ooibl004 ,t8.pcaal003 ,t9.pcab003 ,t10.oogd002 ,t11.ooag011 ,t12.ooefl003 ,t13.ooag011 , 
       t14.ooefl003 ,t15.ooag011 ,t16.ooag011 ,t17.ooag011",
               " FROM rtia_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.rtia004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.rtia005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mmaf_t t4 ON t4.mmafent="||g_enterprise||" AND t4.mmaf001=t0.rtia001  ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.rtia002 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='295' AND t6.oocql002=t0.rtia009 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t7 ON t7.ooiblent="||g_enterprise||" AND t7.ooibl002=t0.rtia025 AND t7.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN pcaal_t t8 ON t8.pcaalent="||g_enterprise||" AND t8.pcaalsite=t0.rtiasite AND t8.pcaal001=t0.rtia036 AND t8.pcaal002='"||g_dlang||"' ",
               " LEFT JOIN pcab_t t9 ON t9.pcabent="||g_enterprise||" AND t9.pcab001=t0.rtia037  ",
               " LEFT JOIN oogd_t t10 ON t10.oogdent="||g_enterprise||" AND t10.oogd001=t0.rtia038 AND t10.oogdsite=t0.rtiasite  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.rtiaownid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent="||g_enterprise||" AND t12.ooefl001=t0.rtiaowndp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent="||g_enterprise||" AND t13.ooag001=t0.rtiacrtid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.rtiacrtdp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.rtiamodid  ",
               " LEFT JOIN ooag_t t16 ON t16.ooagent="||g_enterprise||" AND t16.ooag001=t0.rtiacnfid  ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent="||g_enterprise||" AND t17.ooag001=t0.rtiapstid  ",
 
               " WHERE t0.rtiaent = " ||g_enterprise|| " AND t0.rtiadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE ammt405_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
            
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt405 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt405_init()   
 
      #進入選單 Menu (="N")
      CALL ammt405_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
                  
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt405
      
   END IF 
   
   CLOSE ammt405_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="ammt405.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt405_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_msg      STRING
   DEFINE l_success  LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtiastus','13','N,Y,S,Z,A,D,R,W,X')
 
      CALL cl_set_combo_scc('rtia032','6544') 
   CALL cl_set_combo_scc('rtia039','6202') 
   CALL cl_set_combo_scc('rtie001','8310') 
   CALL cl_set_combo_scc('mmec015','6515') 
   CALL cl_set_combo_scc('mmeb015','6515') 
   CALL cl_set_combo_scc('rtic001','6707') 
   CALL cl_set_combo_scc('rtic002','6708') 
   CALL cl_set_combo_scc('rtic006','6564') 
   CALL cl_set_combo_scc('rtic007','6565') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
   CALL g_idx_group.addAttribute("'8',","1")
   CALL g_idx_group.addAttribute("'9',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"

   CALL cl_set_combo_scc('isaf202','')
   CALL cl_set_combo_scc('isaf207','')
   CALL cl_set_combo_scc('mmak009','6505')
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
#      CALL cl_set_comp_visible("rtia001,rtia002,page_6,page_7,page_8,page_9,page_10",FALSE)    #mark by by yagxf
#      CALL cl_set_comp_visible("rtia001,page_6,page_7,page_8,page_9,page_10",FALSE)             #add by yangxf #151202-00007#3 mark
      CALL cl_set_comp_visible("page_6,page_7,page_8,page_9,page_10",FALSE)                      #151202-00007#3 add
#      CALL cl_set_comp_visible("rtia001_desc,rtia001_desc",FALSE)                               #151202-00007#3 mark
#      CALL cl_set_comp_visible("b_rtia002,b_rtia002_desc",FALSE)                               #mark by yangxf
      CALL cl_set_comp_entry("rtia002,rtia002_desc",FALSE)                                      #add  by yangxf
      #CALL cl_set_comp_entry("rtia056",TRUE)      #add by geza 201510105  #mark by geza20151214
      CALL cl_set_comp_visible("rtia056",TRUE)      #add by geza20151214
      CALL cl_set_comp_visible("grid_21",TRUE)             #add by yangxf20160122 
      CALL cl_set_toolbaritem_visible("card_batch",TRUE)      
   ELSE
      CALL cl_set_comp_visible("mmea014",FALSE)                                                 #add  by yangxf
      #CALL cl_set_comp_entry("rtia056",FALSE)     #add by geza 201510105 #mark by geza 20151214
      CALL cl_set_comp_visible("rtia056",FALSE)      #add by geza20151214     
      CALL cl_set_comp_visible("grid_21",FALSE)            #add by yangxf20160122 
      CALL cl_set_toolbaritem_visible("card_batch",FALSE)       
  END IF
   #IF g_prog = 'ammt406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt406' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_getmsg('amm-00353',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtiasite",l_msg)
      CALL cl_getmsg('amm-00353',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("b_rtiasite",l_msg)
      CALL cl_getmsg('amm-00354',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia004",l_msg)
      CALL cl_getmsg('amm-00355',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia005",l_msg)
      CALL cl_getmsg('amm-00413',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtib030",l_msg)
      CALL cl_set_comp_visible("rtia001,rtia002,bpage_1,page_6,page_8,page_9,page_10",FALSE)
      CALL cl_set_comp_visible("rtia001_desc,rtia002_desc",FALSE)
      CALL cl_set_comp_visible("b_rtia002,b_rtia002_desc",FALSE)
      CALL cl_set_comp_visible("rtia050,rtia007",FALSE)                               #add by yangxf
      CALL cl_set_toolbaritem_visible("pay_money",FALSE)   #add by geza  20150727
      CALL cl_set_comp_visible("rtia053",FALSE)     #add by geza  20150727
   END IF 
   #IF g_prog = 'ammt407' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_getmsg('amm-00356',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtiasite",l_msg)
      CALL cl_getmsg('amm-00356',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("b_rtiasite",l_msg)
      CALL cl_getmsg('amm-00357',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia004",l_msg)
      CALL cl_getmsg('amm-00358',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia005",l_msg)
      CALL cl_getmsg('amm-00414',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtib030",l_msg)
      CALL cl_set_comp_visible("rtia001,rtia002,bpage_1,page_7,page_8,page_9,page_10",FALSE)
      CALL cl_set_comp_visible("rtia001_desc,rtia002_desc",FALSE)
      CALL cl_set_comp_visible("b_rtia002,b_rtia002_desc",FALSE)
      CALL cl_set_comp_visible("rtia050,rtia007",FALSE)                               #add by yangxf
      CALL cl_set_toolbaritem_visible("pay_money",FALSE)   #add by geza  20150727
      CALL cl_set_comp_visible("rtia053",FALSE)     #add by geza  20150727
   END IF 
   #IF g_prog = 'ammt425' OR g_prog = 'ammt429' THEN              #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' OR g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_getmsg('amm-00359',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtiasite",l_msg)
      CALL cl_getmsg('amm-00359',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("b_rtiasite",l_msg)
      CALL cl_getmsg('amm-00360',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia004",l_msg)
      CALL cl_getmsg('amm-00361',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia005",l_msg)
      CALL cl_getmsg('amm-00415',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtib030",l_msg)
#      CALL cl_set_comp_visible("rtia001,rtia002,bpage_1,page_6,page_7,page_9,page_10",FALSE) #151202-00007#3 mark
      CALL cl_set_comp_visible("rtia002,bpage_1,page_6,page_7,page_9,page_10",FALSE)  #151202-00007#3 add      
#      CALL cl_set_comp_visible("rtia001_desc,rtia002_desc",FALSE)      #151202-00007#3 mark
      CALL cl_set_comp_visible("rtia002_desc",FALSE)      #151202-00007#3 add      
      CALL cl_set_comp_visible("b_rtia002,b_rtia002_desc",FALSE)
      CALL cl_set_comp_visible("rtia050,rtia007",FALSE)                               #add by yangxf
      #20150702--add by dongsz--#20150702--add by dongsz
      IF g_user <> 'A20142719' THEN
         CALL cl_set_comp_entry("mmed007",FALSE)
      END IF
      #160705-00042#11 160714 by sakura mark(S)
      ##20150702--add by dongsz--天和用
      #IF g_user <> 'A20142719' THEN
      #   CALL cl_set_comp_entry("mmed007",FALSE)
      #END IF
      ##20150702--add by dongsz--天和用
      #160705-00042#11 160714 by sakura mark(E)
   END IF 
   #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_set_comp_visible("rtia007",TRUE)
      CALL cl_set_comp_required("rtia007",TRUE)     
      CALL cl_set_toolbaritem_visible("pay_money",FALSE)   #add by geza  20150727  
      CALL cl_set_comp_visible("rtia053",FALSE)     #add by geza  20150727      
   END IF 
   #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
     
     CALL cl_getmsg('amm-00362',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtiasite",l_msg)
      CALL cl_getmsg('amm-00362',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("b_rtiasite",l_msg)
      CALL cl_getmsg('amm-00363',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia004",l_msg)
      CALL cl_getmsg('amm-00364',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia005",l_msg)
      CALL cl_getmsg('amm-00416',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtib030",l_msg)
      CALL cl_set_comp_visible("rtia001,rtia002,bpage_1,page_6,page_7,page_8,page_10",FALSE)
      CALL cl_set_comp_visible("rtia001_desc,rtia002_desc",FALSE)
      CALL cl_set_comp_visible("b_rtia002,b_rtia002_desc",FALSE)
      CALL cl_set_comp_visible("rtia050,rtia007",FALSE)                               #add by yangxf
      CALL cl_set_toolbaritem_visible("pay_money",FALSE)   #add by geza  20150727
      CALL cl_set_comp_visible("rtia053",FALSE)       #add by geza  20150727
     
   END IF 
   #wangkun
#   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
#      CALL cl_set_toolbaritem_visible("ammt405_10",TRUE)
# 
#   ELSE
#      CALL cl_set_toolbaritem_visible("ammt405_10",FALSE)
#   END IF 
   CALL s_aooi500_create_temp() RETURNING l_success 
   #IF g_prog = 'agct405' OR g_prog = 'agct406' THEN              #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_getmsg('amm-00365',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtiasite",l_msg)
      CALL cl_getmsg('amm-00365',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("b_rtiasite",l_msg)
      CALL cl_getmsg('amm-00366',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia004",l_msg)
      CALL cl_getmsg('amm-00367',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtia005",l_msg)
      CALL cl_getmsg('amm-00417',g_lang) RETURNING l_msg
      CALL cl_set_comp_att_text("rtib030",l_msg)
      CALL cl_set_comp_visible("bpage_1,page_6,page_7,page_8,page_9",FALSE)
   END IF   
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark   
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_set_toolbaritem_visible("ammt405_04",TRUE)
      CALL cl_set_comp_visible("rtia028,rtia029,rtia030,label_2",FALSE)   #160215-00002#7 160414 by sakura add
   ELSE
      CALL cl_set_toolbaritem_visible("ammt405_04",FALSE)
   END IF 
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_set_toolbaritem_visible("ammt405_01,ammt405_03",TRUE)
   ELSE
      CALL cl_set_toolbaritem_visible("ammt405_01,ammt405_03",FALSE)
   END IF 
   #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
     #CALL cl_set_comp_visible("rtia007",FALSE)
      CALL cl_set_toolbaritem_visible("pay_money",FALSE)   #add by geza  20150727
      CALL cl_set_comp_visible("rtia053",FALSE)     #add by geza  20150727
   END IF 
   #end add-point
   
   #初始化搜尋條件
   CALL ammt405_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="ammt405.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION ammt405_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_rtia031      LIKE rtia_t.rtia031
   DEFINE l_n            LIKE type_t.num5
   DEFINE l_s            LIKE type_t.num5
   DEFINE l_mman017      LIKE mman_t.mman017   #150609-00016#1--add by dongsz
   DEFINE l_cnt          LIKE type_t.num10     #add by geza 20150727
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt405_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
                        
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
            
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtia_m.* TO NULL
         CALL g_mmea_d.clear()
         CALL g_mmea10_d.clear()
         CALL g_mmea2_d.clear()
         CALL g_mmea3_d.clear()
         CALL g_mmea4_d.clear()
         CALL g_mmea6_d.clear()
         CALL g_mmea7_d.clear()
         CALL g_mmea8_d.clear()
         CALL g_mmea9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL ammt405_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt405_fetch('') # reload data
               LET l_ac = 1
               CALL ammt405_ui_detailshow() #Setting the current row 
         
               CALL ammt405_idx_chk()
               #NEXT FIELD mmeaseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_mmea_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
                              
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
                        
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_mmea10_d TO s_detail10.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body10.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_current_page = 2
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body10.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body10.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body2.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 3
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body2.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body2.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body3.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 4
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body3.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body3.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body4.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 5
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body4.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body4.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body6.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body6.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body6.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body7.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body7.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body7.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("'8',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body8.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 8
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body8.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body8.action"
                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_mmea9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[9] = l_ac
               CALL g_idx_group.addAttribute("'9',",l_ac)
               
               #add-point:page9, before row動作 name="ui_dialog.body9.before_row"
                              
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 9
               #顯示單身筆數
               CALL ammt405_idx_chk()
               #add-point:page9自定義行為 name="ui_dialog.body9.before_display"
                              
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作 name="menu.detail_show.page9_sub.detail_qrystr"
                  
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_aooi610
                  LET g_action_choice="prog_aooi610"
                  IF cl_auth_chk_act("prog_aooi610") THEN
                     
                     #add-point:ON ACTION prog_aooi610 name="menu.detail_show.page9_sub.prog_aooi610"
               #+ 此段落由子樣板a41產生
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aooi610'
               LET la_param.param[1] = g_mmea9_d[l_ac].xrcd002

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)


                     #END add-point
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page9.detail_qrystr"
               
               #END add-point
 
 
 
 
         
            #add-point:page9自定義行為 name="ui_dialog.body9.action"
                        
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_mmea5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL ammt405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac

               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 10
               CALL ammt405_idx_chk()

         
         END DISPLAY
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL ammt405_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt405_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt405_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt405_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            CALL cl_set_act_visible("reproduce",FALSE)
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt405_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL ammt405_set_act_visible()   
            CALL ammt405_set_act_no_visible()
            IF NOT (g_rtia_m.rtiadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                                  " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
               #填到對應位置
               CALL ammt405_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmea_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmec_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmeb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmed_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "gcbi_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtib_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL ammt405_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmea_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmec_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmeb_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "mmed_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "gcbi_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtib_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL ammt405_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL ammt405_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL ammt405_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL ammt405_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt405_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL ammt405_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt405_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL ammt405_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt405_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL ammt405_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt405_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL ammt405_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt405_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmea_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_mmea10_d)
                  LET g_export_id[2]   = "s_detail10"
                  LET g_export_node[3] = base.typeInfo.create(g_mmea2_d)
                  LET g_export_id[3]   = "s_detail2"
                  LET g_export_node[4] = base.typeInfo.create(g_mmea3_d)
                  LET g_export_id[4]   = "s_detail3"
                  LET g_export_node[5] = base.typeInfo.create(g_mmea4_d)
                  LET g_export_id[5]   = "s_detail4"
                  LET g_export_node[6] = base.typeInfo.create(g_mmea6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_mmea7_d)
                  LET g_export_id[7]   = "s_detail7"
                  LET g_export_node[8] = base.typeInfo.create(g_mmea8_d)
                  LET g_export_id[8]   = "s_detail8"
                  LET g_export_node[9] = base.typeInfo.create(g_mmea9_d)
                  LET g_export_id[9]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  #sakura---add---str---150107-00009#10
                  LET g_export_node[10] = base.typeInfo.create(g_mmea5_d)
                  LET g_export_id[10]   = "s_detail5"                  
                  #sakura---add---end---150107-00009#10
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmeaseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt405_modify()
               #add-point:ON ACTION modify name="menu.modify"
                              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt405_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
                              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION set_password
            LET g_action_choice="set_password"
            IF cl_auth_chk_act("set_password") THEN
               
               #add-point:ON ACTION set_password name="menu.set_password"
               #150609-00016#1--add by dongsz--str---
               IF g_rtia_m.rtiastus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00468'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               SELECT mman017 INTO l_mman017
                 FROM mman_t
                WHERE mmanent = g_enterprise
                  AND mman001 = g_mmea_d[l_ac].mmea003
               IF cl_null(l_mman017) OR l_mman017 <> 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00467'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               CALL ammt405_02('1',g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               #150609-00016#1--add by dongsz--end---
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_01
            LET g_action_choice="ammt405_01"
            IF cl_auth_chk_act("ammt405_01") THEN
               
               #add-point:ON ACTION ammt405_01 name="menu.ammt405_01"
               #記錄贈品
               IF l_ac > 0 THEN 
                  IF g_mmea_d[l_ac].mmea014 = 'N' THEN
                     CALL ammt405_modify_mmea014()
                  ELSE 
                     CALL ammt405_modify_mmea014_1()
                  END IF 
               END IF 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION card_batch
            LET g_action_choice="card_batch"
            IF cl_auth_chk_act("card_batch") THEN
               
               #add-point:ON ACTION card_batch name="menu.card_batch"
               LET l_s = 0
               IF g_prog ='ammt405' AND NOT cl_null(g_rtia_m.rtiadocno) THEN
                  SELECT COUNT (*) INTO l_s FROM rtif_t 
                  WHERE rtifent=g_enterprise AND rtifdocno=g_rtia_m.rtiadocno 
                  IF l_s = 0 AND  g_rtia_m.rtiastus = 'N' THEN                  
                     CALL ammt405_01(g_rtia_m.rtiasite,g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia026,
                     g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia034,g_rtia_m.rtia035)
                     CALL ammt405_b_fill()
                  END IF 
               ELSE
               
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt405_delete()
               #add-point:ON ACTION delete name="menu.delete"
                              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt405_insert()
               #add-point:ON ACTION insert name="menu.insert"
                              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION pay_money
            LET g_action_choice="pay_money"
            IF cl_auth_chk_act("pay_money") THEN
               
               #add-point:ON ACTION pay_money name="menu.pay_money"
               #add by geza 20150727(S)
               IF NOT cl_null(g_rtia_m.rtiadocno) THEN
                  IF g_rtia_m.rtiastus  = 'N' THEN
                     LET l_cnt = 0
                     SELECT COUNT(1) INTO l_cnt
                       FROM rtif_t
                      WHERE rtifent = g_enterprise
                        AND rtifdocno = g_rtia_m.rtiadocno
                     IF l_cnt > 0 THEN    #add by yangxf 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'amm-00484'
                        LET g_errparam.extend = g_rtia_m.rtiadocno
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CONTINUE DIALOG
                     ELSE
                        CALL s_transaction_begin()
                        IF g_rtia_m.rtia053 = 'N' THEN
                           UPDATE rtia_t SET rtia053 = 'Y'
                            WHERE rtiaent = g_enterprise
                              AND rtiadocno = g_rtia_m.rtiadocno
                           IF SQLCA.sqlcode THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "update rtia_t"
                              LET g_errparam.popup = TRUE
                              CALL cl_err()
                              CALL s_transaction_end("N","0")
                              CONTINUE DIALOG
                           END IF 
                           CALL s_transaction_end("Y","0")                            
                        ELSE                           
                           UPDATE rtia_t SET rtia053 = 'N'
                            WHERE rtiaent = g_enterprise
                              AND rtiadocno = g_rtia_m.rtiadocno
                           IF SQLCA.sqlcode THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "update rtia_t"
                              LET g_errparam.popup = TRUE
                              CALL cl_err()
                              CALL s_transaction_end("N","0")
                              CONTINUE DIALOG    
                           END IF 
                           CALL s_transaction_end("Y","0")                            
                        END IF
                     END IF 
                  ELSE   
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "art-00608" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CONTINUE DIALOG 
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "std-00003" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CONTINUE DIALOG             
               END IF
               CALL ammt405_fetch("")
               #add by geza 20150727(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               #160705-00042#11 160714 by sakura mark(S)               
               #CASE g_prog
               #     WHEN 'ammt405'
               #160705-00042#11 160714 by sakura mark(E)
               #160705-00042#11 160714 by sakura add(S)
               CASE 
                    WHEN g_prog MATCHES 'ammt405'
               #160705-00042#11 160714 by sakura add(E)                    
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #WHEN 'ammt406'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt406'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #WHEN 'ammt407'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt407'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #20150706--add by dongsz--s
                    #WHEN 'ammt425'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt425'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #20150706--add by dongsz--e
                    OTHERWISE
                          CONTINUE DIALOG
               END CASE 
               
               #END add-point
               &include "erp/amm/ammt405_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               #160705-00042#11 160714 by sakura mark(S)               
               #CASE g_prog
               #     WHEN 'ammt405'
               #160705-00042#11 160714 by sakura mark(E)
               #160705-00042#11 160714 by sakura add(S)
               CASE 
                    WHEN g_prog MATCHES 'ammt405'
               #160705-00042#11 160714 by sakura add(E)                    
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #WHEN 'ammt406'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt406'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #WHEN 'ammt407'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt407'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #20150706--add by dongsz--s
                    #WHEN 'ammt425'                 #160705-00042#11 160714 by sakura mark
                    WHEN g_prog MATCHES 'ammt425'   #160705-00042#11 160714 by sakura add
                         LET g_rep_wc = " rtiadocno = '",g_rtia_m.rtiadocno,"' AND rtiaent = ",g_enterprise," AND rtiasite = '",g_rtia_m.rtiasite,"' " 
                    #20150706--add by dongsz--e
                    OTHERWISE
                          CONTINUE DIALOG
               END CASE 
               
               #END add-point
               &include "erp/amm/ammt405_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reset_password
            LET g_action_choice="reset_password"
            IF cl_auth_chk_act("reset_password") THEN
               
               #add-point:ON ACTION reset_password name="menu.reset_password"
               #150609-00016#1--add by dongsz--str---
               IF g_rtia_m.rtiastus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00468'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               SELECT mman017 INTO l_mman017
                 FROM mman_t
                WHERE mmanent = g_enterprise
                  AND mman001 = g_mmea_d[l_ac].mmea003
               IF cl_null(l_mman017) OR l_mman017 <> 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00467'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               CALL ammt405_02('2',g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               #150609-00016#1--add by dongsz--end---
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_04
            LET g_action_choice="ammt405_04"
            IF cl_auth_chk_act("ammt405_04") THEN
               
               #add-point:ON ACTION ammt405_04 name="menu.ammt405_04"
               CALL ammt405_04()
               CALL ammt405_b_fill()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_pay_detail
            LET g_action_choice="ammt405_pay_detail"
            IF cl_auth_chk_act("ammt405_pay_detail") THEN
               
               #add-point:ON ACTION ammt405_pay_detail name="menu.ammt405_pay_detail"
               CALL s_pay_09(g_rtia_m.rtiadocno)
               LET g_action_choice= ""
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt405_query()
               #add-point:ON ACTION query name="menu.query"
                              
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail10",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail8",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_03
            LET g_action_choice="ammt405_03"
            IF cl_auth_chk_act("ammt405_03") THEN
               
               #add-point:ON ACTION ammt405_03 name="menu.ammt405_03"
               #判断单据是否为未确认！
               IF g_rtia_m.rtiastus <> 'N' THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'art-00608'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                 #RETURN                  151013-00001#49   MARK BY yangxf 20160114
               ELSE 
                  IF l_ac > 0 THEN 
                     IF g_mmea_d[l_ac].mmea014 = 'Y' THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'art-00604'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     ELSE
                        LET l_n = 0
                        #检查是否存在收款
                        SELECT COUNT(*) INTO l_n
                          FROM rtif_t
                         WHERE rtifent = g_enterprise
                           AND rtifdocno = g_rtia_m.rtiadocno
                        IF l_n > 0 THEN 
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'art-00603'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           CONTINUE DIALOG 
                        END IF 
                        LET g_set_comp = 'Y'
                        CALL ammt405_input("u")
                        LET g_set_comp ='N'
                     END IF 
                  END IF 
               END IF 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_10
            LET g_action_choice="ammt405_10"
            IF cl_auth_chk_act("ammt405_10") THEN
               
               #add-point:ON ACTION ammt405_10 name="menu.ammt405_10"
#               CALL ammt405_10()
#               CALL ammt405_b_fill()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_notecreate
            LET g_action_choice="ammt405_notecreate"
            IF cl_auth_chk_act("ammt405_notecreate") THEN
               
               #add-point:ON ACTION ammt405_notecreate name="menu.ammt405_notecreate"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_pay
            LET g_action_choice="ammt405_pay"
            IF cl_auth_chk_act("ammt405_pay") THEN
               
               #add-point:ON ACTION ammt405_pay name="menu.ammt405_pay"
               IF g_rtia_m.rtiastus = 'X' THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'art-00398'
                  LET g_errparam.extend = g_rtia_m.rtiadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               ELSE
                  IF g_rtia_m.rtia050 = 'N' OR cl_null(g_rtia_m.rtia050) THEN    #add by yangxf 
                     SELECT rtia031 INTO l_rtia031
                       FROM rtia_t
                      WHERE rtiaent = g_enterprise
                        AND rtiadocno = g_rtia_m.rtiadocno
                     IF l_rtia031 >= 0 THEN 
                        CALL s_pay('rtia_t',1,g_rtia_m.rtiadocno)
                     ELSE
                        CALL s_pay('rtia_t',-1,g_rtia_m.rtiadocno)
                     END IF
                  #add by yangxf ---start---                     
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'art-00599'
                     LET g_errparam.extend = g_rtia_m.rtiadocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  END IF 
                  #add by yangxf ---end----
               END IF 
               LET g_action_choice= ""
               #160830-00037#1 -s by 08172
               SELECT rtiastus,rtia048 INTO g_rtia_m.rtiastus,g_rtia_m.rtia048
                 FROM rtia_t 
                WHERE rtiaent = g_enterprise
                  AND rtiadocno =  g_rtia_m.rtiadocno
               CALL ammt405_b_fill()   #150525-00013#1                
               CALL ammt405_show() 
               #160830-00037#1 -e by 08172                  
                 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_note
            LET g_action_choice="ammt405_note"
            IF cl_auth_chk_act("ammt405_note") THEN
               
               #add-point:ON ACTION ammt405_note name="menu.ammt405_note"
               CALL aooi360_02('6',g_prog,g_rtia_m.rtiadocno,'','','','','','','','','')
               CALL s_aooi360_sel('6',g_prog,g_rtia_m.rtiadocno,'','','','','','','','','4') RETURNING l_success,g_rtia_m.rtia041
               DISPLAY BY NAME g_rtia_m.rtia041
               CALL s_transaction_begin()
               OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN ammt405_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE ammt405_cl
                  CALL s_transaction_end('N','0')
               ELSE
                  UPDATE rtia_t SET rtia041 = g_rtia_m.rtia041
                   WHERE rtiaent = g_enterprise
                     AND rtiadocno = g_rtia_m.rtiadocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CLOSE ammt405_cl
                     CALL s_transaction_end('N','0')
                  ELSE
                     CLOSE ammt405_cl
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ammt405_notevoid
            LET g_action_choice="ammt405_notevoid"
            IF cl_auth_chk_act("ammt405_notevoid") THEN
               
               #add-point:ON ACTION ammt405_notevoid name="menu.ammt405_notevoid"
               
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL ammt405_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt405_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt405_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_rtia_m.rtiadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="ammt405.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt405_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING  
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt405' "
   END IF 
   #IF g_prog = 'ammt406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt406' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt406' "
   END IF 
   #IF g_prog = 'ammt407' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt407' "
   END IF 
   #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt425' "
   END IF 
   #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt426' "
   END IF 
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'agct405' "
   END IF 
   #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'agct406' "
   END IF 
   #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt429' "
   END IF 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL s_aooi500_sql_where(g_prog,'rtiasite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim() 
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtiadocno ",
                      " FROM rtia_t ",
                      " LEFT JOIN isaf_t ON isafent = rtiaent AND rtiadocno = isafcomp AND  = isafdocno ",
                      " LEFT JOIN mmea_t ON mmeaent = rtiaent AND rtiadocno = mmeadocno ", "  ",
                      #add-point:browser_fill段sql(mmea_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno", "  ",
                      #add-point:browser_fill段sql(rtie_t1) name="browser_fill.cnt.join.rtie_t1"
                      
                      #end add-point
 
                      " LEFT JOIN mmec_t ON mmecent = rtiaent AND rtiadocno = mmecdocno", "  ",
                      #add-point:browser_fill段sql(mmec_t1) name="browser_fill.cnt.join.mmec_t1"
                      
                      #end add-point
 
                      " LEFT JOIN mmeb_t ON mmebent = rtiaent AND rtiadocno = mmebdocno", "  ",
                      #add-point:browser_fill段sql(mmeb_t1) name="browser_fill.cnt.join.mmeb_t1"
                      
                      #end add-point
 
                      " LEFT JOIN mmed_t ON mmedent = rtiaent AND rtiadocno = mmeddocno", "  ",
                      #add-point:browser_fill段sql(mmed_t1) name="browser_fill.cnt.join.mmed_t1"
                      
                      #end add-point
 
                      " LEFT JOIN gcbi_t ON gcbient = rtiaent AND rtiadocno = gcbidocno", "  ",
                      #add-point:browser_fill段sql(gcbi_t1) name="browser_fill.cnt.join.gcbi_t1"
                      
                      #end add-point
 
                      " LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno", "  ",
                      #add-point:browser_fill段sql(rtib_t1) name="browser_fill.cnt.join.rtib_t1"
                      
                      #end add-point
 
                      " LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno", "  ",
                      #add-point:browser_fill段sql(rtic_t1) name="browser_fill.cnt.join.rtic_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno", "  ",
                      #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.cnt.join.xrcd_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE rtiaent = " ||g_enterprise|| " AND mmeaent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtia_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtiadocno ",
                      " FROM rtia_t ", 
                      "  LEFT JOIN isaf_t ON isafent = rtiaent AND rtiadocno = isafcomp AND  = isafdocno ",
                      "  ",
                      " WHERE rtiaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtia_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtiadocno ",
                        " FROM rtia_t "
#add by yangxf ---start----
      IF g_wc2_table1 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN mmea_t ON mmeaent = rtiaent AND rtiadocno = mmeadocno "
      END IF 
      IF g_wc2_table2 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno"
      END IF 
      IF g_wc2_table3 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN mmec_t ON mmecent = rtiaent AND rtiadocno = mmecdocno"
      END IF 
      IF g_wc2_table4 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN mmeb_t ON mmebent = rtiaent AND rtiadocno = mmebdocno"
      END IF 
      IF g_wc2_table5 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN mmed_t ON mmedent = rtiaent AND rtiadocno = mmeddocno"
      END IF 
      IF g_wc2_table6 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN gcbi_t ON gcbient = rtiaent AND rtiadocno = gcbidocno"
      END IF 
      IF g_wc2_table7 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno"
      END IF 
      IF g_wc2_table8 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno"
      END IF 
      IF g_wc2_table9 <> ' 1=1' THEN 
         LET l_sub_sql = l_sub_sql," LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno"
      END IF 
      LET l_sub_sql = l_sub_sql,
#add by yangxf ----end-----
                       " WHERE rtiaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 , cl_sql_add_filter("rtia_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtiadocno ",
 
                        " FROM rtia_t ", 
                              " ",
                        "WHERE rtiaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED , cl_sql_add_filter("rtia_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtia_m.* TO NULL
      CALL g_mmea_d.clear()        
      CALL g_mmea10_d.clear() 
      CALL g_mmea2_d.clear() 
      CALL g_mmea3_d.clear() 
      CALL g_mmea4_d.clear() 
      CALL g_mmea6_d.clear() 
      CALL g_mmea7_d.clear() 
      CALL g_mmea8_d.clear() 
      CALL g_mmea9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      CALL g_mmea5_d.clear() 
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtiastus,t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006, 
          t1.ooefl003 ,t2.ooefl003 ",
                  " FROM rtia_t t0",
                  "  LEFT JOIN isaf_t ON isafent = rtiaent AND rtiadocno = isafcomp AND  = isafdocno ",
                  "  LEFT JOIN mmea_t ON mmeaent = rtiaent AND rtiadocno = mmeadocno ", "  ", 
                  #add-point:browser_fill段sql(mmea_t1) name="browser_fill.join.mmea_t1"
                  
                  #end add-point
                  "  LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno", "  ", 
                  #add-point:browser_fill段sql(rtie_t1) name="browser_fill.join.rtie_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN mmec_t ON mmecent = rtiaent AND rtiadocno = mmecdocno", "  ", 
                  #add-point:browser_fill段sql(mmec_t1) name="browser_fill.join.mmec_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN mmeb_t ON mmebent = rtiaent AND rtiadocno = mmebdocno", "  ", 
                  #add-point:browser_fill段sql(mmeb_t1) name="browser_fill.join.mmeb_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN mmed_t ON mmedent = rtiaent AND rtiadocno = mmeddocno", "  ", 
                  #add-point:browser_fill段sql(mmed_t1) name="browser_fill.join.mmed_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN gcbi_t ON gcbient = rtiaent AND rtiadocno = gcbidocno", "  ", 
                  #add-point:browser_fill段sql(gcbi_t1) name="browser_fill.join.gcbi_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno", "  ", 
                  #add-point:browser_fill段sql(rtib_t1) name="browser_fill.join.rtib_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno", "  ", 
                  #add-point:browser_fill段sql(rtic_t1) name="browser_fill.join.rtic_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno", "  ", 
                  #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.join.xrcd_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.rtia002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtiaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtia_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtiastus,t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006, 
          t1.ooefl003 ,t2.ooefl003 ",
                  " FROM rtia_t t0",
                  "  LEFT JOIN isaf_t ON isafent = rtiaent AND rtiadocno = isafcomp AND  = isafdocno ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.rtia002 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtiaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtia_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtiadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   #add by yangxf ---start----
   #160713-00020#1 Modify By Ken 160714(S)  效能優化
   #LET g_sql = " SELECT DISTINCT rtiastus,rtiasite,rtiadocdt,rtiadocno,rtia002,rtia006,t1.ooefl003,t2.pmaal004 ",
   #            " FROM rtia_t "
   LET g_sql = " SELECT DISTINCT rtiastus,rtiasite,rtiadocdt,rtiadocno,rtia002,rtia006, ",
               "        (SELECT ooefl003 FROM ooefl_t WHERE ooeflent = rtiaent AND ooefl001 = rtiasite AND ooefl002='"||g_lang||"' )ooefl003 , ",
               "        (SELECT pmaal004 FROM pmaal_t WHERE pmaalent = rtiaent AND pmaal001 = rtia002  AND pmaal002='"||g_lang||"' )pmaal004   ",
               " FROM rtia_t "
   #160713-00020#1 Modify By Ken 160714(E)  效能優化               
   IF g_wc2_table1 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN mmea_t ON mmeaent = rtiaent AND rtiadocno = mmeadocno "
   END IF 
   IF g_wc2_table2 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno"
   END IF 
   IF g_wc2_table3 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN mmec_t ON mmecent = rtiaent AND rtiadocno = mmecdocno"
   END IF 
   IF g_wc2_table4 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN mmeb_t ON mmebent = rtiaent AND rtiadocno = mmebdocno"
   END IF 
   IF g_wc2_table5 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN mmed_t ON mmedent = rtiaent AND rtiadocno = mmeddocno"
   END IF 
   IF g_wc2_table6 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN gcbi_t ON gcbient = rtiaent AND rtiadocno = gcbidocno"
   END IF 
   IF g_wc2_table7 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno"
   END IF 
   IF g_wc2_table8 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno"
   END IF 
   IF g_wc2_table9 <> ' 1=1' THEN 
      LET g_sql = g_sql," LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno"
   END IF 
   #160713-00020#1 Modify By Ken 160714(S)  效能優化
   #LET g_sql = g_sql," LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=rtiasite AND t1.ooefl002='"||g_lang||"' ",
   #                  " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=rtia002 AND t2.pmaal002='"||g_lang||"' ",                              
   #                  " WHERE rtiaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("rtia_t")
   LET g_sql = g_sql," WHERE rtiaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("rtia_t")   
   #160713-00020#1 Modify By Ken 160714(E)  效能優化
   #add by yangxf ----end----
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtia_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
   LET g_cnt = 1
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtiasite,g_browser[g_cnt].b_rtiadocdt, 
          g_browser[g_cnt].b_rtiadocno,g_browser[g_cnt].b_rtia002,g_browser[g_cnt].b_rtia006,g_browser[g_cnt].b_rtiasite_desc, 
          g_browser[g_cnt].b_rtia002_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
      #160713-00020#1 Add By Ken 160714(S)  效能優化
      #INITIALIZE g_ref_fields TO NULL
      #LET g_ref_fields[1] = g_browser[g_cnt].b_rtia002
      #CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      #LET g_browser[g_cnt].b_rtia002_desc = '', g_rtn_fields[1] , ''
      #160713-00020#1 Add By Ken 160714(E)  效能優化
         #end add-point
      
         #遮罩相關處理
         CALL ammt405_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtiadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
      
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt405_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
      
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_rtia_m.rtiadocno = g_browser[g_current_idx].b_rtiadocno   
 
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
                  CALL ammt405_isaf_t('s')
   CALL ammt405_rtia_t_mask()
   CALL ammt405_show()
      
END FUNCTION
 
{</section>}
 
{<section id="ammt405.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION ammt405_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
      
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
      
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail10",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
   END IF 
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt405_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
      
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtiadocno = g_rtia_m.rtiadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION ammt405_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_ooef019   LIKE ooef_t.ooef019
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtia_m.* TO NULL
   CALL g_mmea_d.clear()        
   CALL g_mmea10_d.clear() 
   CALL g_mmea2_d.clear() 
   CALL g_mmea3_d.clear() 
   CALL g_mmea4_d.clear() 
   CALL g_mmea6_d.clear() 
   CALL g_mmea7_d.clear() 
   CALL g_mmea8_d.clear() 
   CALL g_mmea9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
   INITIALIZE g_wc2_table8 TO NULL
 
   INITIALIZE g_wc2_table9 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   CALL g_mmea5_d.clear() 
   INITIALIZE g_wc2_table10 TO NULL
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtiasite,rtiadocdt,rtiadocno,rtiaunit,rtia004,rtia005,rtia006,rtia048, 
          rtia001,rtia002,rtia050,rtia053,rtia056,rtiastus,rtia007,rtia009,rtia014,rtia015,rtia041,rtia025, 
          rtia026,rtia027,rtia028,rtia029,rtia030,rtia032,rtia033,rtia034,rtia035,rtia036,rtia037,rtia038, 
          rtia039,rtiaownid,rtiaowndp,rtiacrtid,rtiacrtdp,rtiacrtdt,rtiamodid,rtiamoddt,rtiacnfid,rtiacnfdt, 
          rtiapstid,rtiapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
                        
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtiacrtdt>>----
         AFTER FIELD rtiacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtiamoddt>>----
         AFTER FIELD rtiamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtiacnfdt>>----
         AFTER FIELD rtiacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtiapstdt>>----
         AFTER FIELD rtiapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtiasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiasite
            #add-point:ON ACTION controlp INFIELD rtiasite name="construct.c.rtiasite"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtiasite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO rtiasite  #顯示到畫面上

            NEXT FIELD rtiasite                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiasite
            #add-point:BEFORE FIELD rtiasite name="construct.b.rtiasite"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiasite
            
            #add-point:AFTER FIELD rtiasite name="construct.a.rtiasite"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocdt
            #add-point:BEFORE FIELD rtiadocdt name="construct.b.rtiadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocdt
            
            #add-point:AFTER FIELD rtiadocdt name="construct.a.rtiadocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocdt
            #add-point:ON ACTION controlp INFIELD rtiadocdt name="construct.c.rtiadocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtiadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocno
            #add-point:ON ACTION controlp INFIELD rtiadocno name="construct.c.rtiadocno"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " rtia000 = '",g_prog,"'"
            CALL q_rtiadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiadocno  #顯示到畫面上

            NEXT FIELD rtiadocno                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocno
            #add-point:BEFORE FIELD rtiadocno name="construct.b.rtiadocno"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocno
            
            #add-point:AFTER FIELD rtiadocno name="construct.a.rtiadocno"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaunit
            #add-point:BEFORE FIELD rtiaunit name="construct.b.rtiaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaunit
            
            #add-point:AFTER FIELD rtiaunit name="construct.a.rtiaunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiaunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaunit
            #add-point:ON ACTION controlp INFIELD rtiaunit name="construct.c.rtiaunit"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtia004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia004
            #add-point:ON ACTION controlp INFIELD rtia004 name="construct.c.rtia004"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia004  #顯示到畫面上

            NEXT FIELD rtia004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia004
            #add-point:BEFORE FIELD rtia004 name="construct.b.rtia004"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia004
            
            #add-point:AFTER FIELD rtia004 name="construct.a.rtia004"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia005
            #add-point:ON ACTION controlp INFIELD rtia005 name="construct.c.rtia005"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_today
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia005  #顯示到畫面上

            NEXT FIELD rtia005                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia005
            #add-point:BEFORE FIELD rtia005 name="construct.b.rtia005"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia005
            
            #add-point:AFTER FIELD rtia005 name="construct.a.rtia005"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia006
            #add-point:BEFORE FIELD rtia006 name="construct.b.rtia006"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia006
            
            #add-point:AFTER FIELD rtia006 name="construct.a.rtia006"
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia006
            #add-point:ON ACTION controlp INFIELD rtia006 name="construct.c.rtia006"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia048
            #add-point:BEFORE FIELD rtia048 name="construct.b.rtia048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia048
            
            #add-point:AFTER FIELD rtia048 name="construct.a.rtia048"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia048
            #add-point:ON ACTION controlp INFIELD rtia048 name="construct.c.rtia048"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtia001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia001
            #add-point:ON ACTION controlp INFIELD rtia001 name="construct.c.rtia001"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaq001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO mmaf014 #會員手機號碼 
               #DISPLAY g_qryparam.return3 TO mmaf015 #會員出生日期 
               #DISPLAY g_qryparam.return4 TO mmaf008 #會員姓名 

            NEXT FIELD rtia001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia001
            #add-point:BEFORE FIELD rtia001 name="construct.b.rtia001"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia001
            
            #add-point:AFTER FIELD rtia001 name="construct.a.rtia001"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia002
            #add-point:ON ACTION controlp INFIELD rtia002 name="construct.c.rtia002"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia002  #顯示到畫面上

            NEXT FIELD rtia002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia002
            #add-point:BEFORE FIELD rtia002 name="construct.b.rtia002"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia002
            
            #add-point:AFTER FIELD rtia002 name="construct.a.rtia002"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia050
            #add-point:BEFORE FIELD rtia050 name="construct.b.rtia050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia050
            
            #add-point:AFTER FIELD rtia050 name="construct.a.rtia050"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia050
            #add-point:ON ACTION controlp INFIELD rtia050 name="construct.c.rtia050"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia053
            #add-point:BEFORE FIELD rtia053 name="construct.b.rtia053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia053
            
            #add-point:AFTER FIELD rtia053 name="construct.a.rtia053"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia053
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia053
            #add-point:ON ACTION controlp INFIELD rtia053 name="construct.c.rtia053"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia056
            #add-point:BEFORE FIELD rtia056 name="construct.b.rtia056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia056
            
            #add-point:AFTER FIELD rtia056 name="construct.a.rtia056"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia056
            #add-point:ON ACTION controlp INFIELD rtia056 name="construct.c.rtia056"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiastus
            #add-point:BEFORE FIELD rtiastus name="construct.b.rtiastus"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiastus
            
            #add-point:AFTER FIELD rtiastus name="construct.a.rtiastus"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiastus
            #add-point:ON ACTION controlp INFIELD rtiastus name="construct.c.rtiastus"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtia007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia007
            #add-point:ON ACTION controlp INFIELD rtia007 name="construct.c.rtia007"
            ### 來源單號查詢### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " rtia000 = '",g_prog,"'"
            CALL q_rtia007()
            DISPLAY g_qryparam.return1 TO rtia007
            ### 來源單號查詢### end ###

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia007
            #add-point:BEFORE FIELD rtia007 name="construct.b.rtia007"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia007
            
            #add-point:AFTER FIELD rtia007 name="construct.a.rtia007"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia009
            #add-point:ON ACTION controlp INFIELD rtia009 name="construct.c.rtia009"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '295'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia009  #顯示到畫面上

            NEXT FIELD rtia009                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia009
            #add-point:BEFORE FIELD rtia009 name="construct.b.rtia009"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia009
            
            #add-point:AFTER FIELD rtia009 name="construct.a.rtia009"
                                    IF NOT cl_null(g_rtia_m.rtia009) THEN 
               CALL ammt405_rtia009_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia009 = g_rtia_m_t.rtia009
                  NEXT FIELD rtia009
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia014
            #add-point:BEFORE FIELD rtia014 name="construct.b.rtia014"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia014
            
            #add-point:AFTER FIELD rtia014 name="construct.a.rtia014"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia014
            #add-point:ON ACTION controlp INFIELD rtia014 name="construct.c.rtia014"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia015
            #add-point:BEFORE FIELD rtia015 name="construct.b.rtia015"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia015
            
            #add-point:AFTER FIELD rtia015 name="construct.a.rtia015"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia015
            #add-point:ON ACTION controlp INFIELD rtia015 name="construct.c.rtia015"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia041
            #add-point:BEFORE FIELD rtia041 name="construct.b.rtia041"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia041
            
            #add-point:AFTER FIELD rtia041 name="construct.a.rtia041"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia041
            #add-point:ON ACTION controlp INFIELD rtia041 name="construct.c.rtia041"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtia025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia025
            #add-point:ON ACTION controlp INFIELD rtia025 name="construct.c.rtia025"
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooib001_1()
            DISPLAY g_qryparam.return1 TO rtia025 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia025
            #add-point:BEFORE FIELD rtia025 name="construct.b.rtia025"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia025
            
            #add-point:AFTER FIELD rtia025 name="construct.a.rtia025"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia026
            #add-point:ON ACTION controlp INFIELD rtia026 name="construct.c.rtia026"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooaj002_2()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia026  #顯示到畫面上
            NEXT FIELD rtia026   
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia026
            #add-point:BEFORE FIELD rtia026 name="construct.b.rtia026"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia026
            
            #add-point:AFTER FIELD rtia026 name="construct.a.rtia026"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia027
            #add-point:BEFORE FIELD rtia027 name="construct.b.rtia027"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia027
            
            #add-point:AFTER FIELD rtia027 name="construct.a.rtia027"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia027
            #add-point:ON ACTION controlp INFIELD rtia027 name="construct.c.rtia027"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtia028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia028
            #add-point:ON ACTION controlp INFIELD rtia028 name="construct.c.rtia028"
            ### 客戶對象慣用交易稅別### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            LET g_qryparam.arg1 = g_site
            CALL q_oodb002_10()
            DISPLAY g_qryparam.return1  TO rtia028
            
            ### 客戶對象慣用交易稅別### end ###
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia028
            #add-point:BEFORE FIELD rtia028 name="construct.b.rtia028"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia028
            
            #add-point:AFTER FIELD rtia028 name="construct.a.rtia028"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia029
            #add-point:BEFORE FIELD rtia029 name="construct.b.rtia029"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia029
            
            #add-point:AFTER FIELD rtia029 name="construct.a.rtia029"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia029
            #add-point:ON ACTION controlp INFIELD rtia029 name="construct.c.rtia029"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia030
            #add-point:BEFORE FIELD rtia030 name="construct.b.rtia030"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia030
            
            #add-point:AFTER FIELD rtia030 name="construct.a.rtia030"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia030
            #add-point:ON ACTION controlp INFIELD rtia030 name="construct.c.rtia030"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia032
            #add-point:BEFORE FIELD rtia032 name="construct.b.rtia032"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia032
            
            #add-point:AFTER FIELD rtia032 name="construct.a.rtia032"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia032
            #add-point:ON ACTION controlp INFIELD rtia032 name="construct.c.rtia032"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtia033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia033
            #add-point:ON ACTION controlp INFIELD rtia033 name="construct.c.rtia033"
                                    #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " rtia000 = '",g_prog,"'"
            CALL q_rtia033()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia033      #顯示到畫面上
            NEXT FIELD rtia033
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia033
            #add-point:BEFORE FIELD rtia033 name="construct.b.rtia033"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia033
            
            #add-point:AFTER FIELD rtia033 name="construct.a.rtia033"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia034
            #add-point:BEFORE FIELD rtia034 name="construct.b.rtia034"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia034
            
            #add-point:AFTER FIELD rtia034 name="construct.a.rtia034"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia034
            #add-point:ON ACTION controlp INFIELD rtia034 name="construct.c.rtia034"
                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia035
            #add-point:BEFORE FIELD rtia035 name="construct.b.rtia035"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia035
            
            #add-point:AFTER FIELD rtia035 name="construct.a.rtia035"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia035
            #add-point:ON ACTION controlp INFIELD rtia035 name="construct.c.rtia035"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtia036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia036
            #add-point:ON ACTION controlp INFIELD rtia036 name="construct.c.rtia036"
                                    ### 收銀機號開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_pcaa001_1()
            DISPLAY g_qryparam.return1 TO rtia036
            ### 收銀機號開窗### end ###

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia036
            #add-point:BEFORE FIELD rtia036 name="construct.b.rtia036"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia036
            
            #add-point:AFTER FIELD rtia036 name="construct.a.rtia036"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia037
            #add-point:BEFORE FIELD rtia037 name="construct.b.rtia037"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia037
            
            #add-point:AFTER FIELD rtia037 name="construct.a.rtia037"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia037
            #add-point:ON ACTION controlp INFIELD rtia037 name="construct.c.rtia037"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pcab001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtia037  #顯示到畫面上

            NEXT FIELD rtia037    
            #END add-point
 
 
         #Ctrlp:construct.c.rtia038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia038
            #add-point:ON ACTION controlp INFIELD rtia038 name="construct.c.rtia038"
            ### 班別編號開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_oogd001_01()
            DISPLAY g_qryparam.return1 TO rtia038
            ### 班別編號開窗### end ###
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia038
            #add-point:BEFORE FIELD rtia038 name="construct.b.rtia038"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia038
            
            #add-point:AFTER FIELD rtia038 name="construct.a.rtia038"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia039
            #add-point:BEFORE FIELD rtia039 name="construct.b.rtia039"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia039
            
            #add-point:AFTER FIELD rtia039 name="construct.a.rtia039"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia039
            #add-point:ON ACTION controlp INFIELD rtia039 name="construct.c.rtia039"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtiaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaownid
            #add-point:ON ACTION controlp INFIELD rtiaownid name="construct.c.rtiaownid"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiaownid  #顯示到畫面上

            NEXT FIELD rtiaownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaownid
            #add-point:BEFORE FIELD rtiaownid name="construct.b.rtiaownid"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaownid
            
            #add-point:AFTER FIELD rtiaownid name="construct.a.rtiaownid"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaowndp
            #add-point:ON ACTION controlp INFIELD rtiaowndp name="construct.c.rtiaowndp"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiaowndp  #顯示到畫面上

            NEXT FIELD rtiaowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaowndp
            #add-point:BEFORE FIELD rtiaowndp name="construct.b.rtiaowndp"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaowndp
            
            #add-point:AFTER FIELD rtiaowndp name="construct.a.rtiaowndp"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacrtid
            #add-point:ON ACTION controlp INFIELD rtiacrtid name="construct.c.rtiacrtid"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiacrtid  #顯示到畫面上

            NEXT FIELD rtiacrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtid
            #add-point:BEFORE FIELD rtiacrtid name="construct.b.rtiacrtid"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacrtid
            
            #add-point:AFTER FIELD rtiacrtid name="construct.a.rtiacrtid"
                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacrtdp
            #add-point:ON ACTION controlp INFIELD rtiacrtdp name="construct.c.rtiacrtdp"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiacrtdp  #顯示到畫面上

            NEXT FIELD rtiacrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtdp
            #add-point:BEFORE FIELD rtiacrtdp name="construct.b.rtiacrtdp"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacrtdp
            
            #add-point:AFTER FIELD rtiacrtdp name="construct.a.rtiacrtdp"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtdt
            #add-point:BEFORE FIELD rtiacrtdt name="construct.b.rtiacrtdt"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtiamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiamodid
            #add-point:ON ACTION controlp INFIELD rtiamodid name="construct.c.rtiamodid"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiamodid  #顯示到畫面上

            NEXT FIELD rtiamodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiamodid
            #add-point:BEFORE FIELD rtiamodid name="construct.b.rtiamodid"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiamodid
            
            #add-point:AFTER FIELD rtiamodid name="construct.a.rtiamodid"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiamoddt
            #add-point:BEFORE FIELD rtiamoddt name="construct.b.rtiamoddt"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtiacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacnfid
            #add-point:ON ACTION controlp INFIELD rtiacnfid name="construct.c.rtiacnfid"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiacnfid  #顯示到畫面上

            NEXT FIELD rtiacnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacnfid
            #add-point:BEFORE FIELD rtiacnfid name="construct.b.rtiacnfid"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacnfid
            
            #add-point:AFTER FIELD rtiacnfid name="construct.a.rtiacnfid"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacnfdt
            #add-point:BEFORE FIELD rtiacnfdt name="construct.b.rtiacnfdt"
                        
            #END add-point
 
 
         #Ctrlp:construct.c.rtiapstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiapstid
            #add-point:ON ACTION controlp INFIELD rtiapstid name="construct.c.rtiapstid"
                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtiapstid  #顯示到畫面上

            NEXT FIELD rtiapstid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiapstid
            #add-point:BEFORE FIELD rtiapstid name="construct.b.rtiapstid"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiapstid
            
            #add-point:AFTER FIELD rtiapstid name="construct.a.rtiapstid"
                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiapstdt
            #add-point:BEFORE FIELD rtiapstdt name="construct.b.rtiapstdt"
                        
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmeaseq,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006,mmea007,mmea008, 
          mmea009,mmea010,mmea011,mmea012,mmea013,mmea013_desc,mmea014,mmea015,mmea016
           FROM s_detail1[1].mmeaseq,s_detail1[1].mmea001,s_detail1[1].mmea002,s_detail1[1].mmea003, 
               s_detail1[1].mmea004,s_detail1[1].mmea005,s_detail1[1].mmea006,s_detail1[1].mmea007,s_detail1[1].mmea008, 
               s_detail1[1].mmea009,s_detail1[1].mmea010,s_detail1[1].mmea011,s_detail1[1].mmea012,s_detail1[1].mmea013, 
               s_detail1[1].mmea013_desc,s_detail1[1].mmea014,s_detail1[1].mmea015,s_detail1[1].mmea016 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeaseq
            #add-point:BEFORE FIELD mmeaseq name="construct.b.page1.mmeaseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeaseq
            
            #add-point:AFTER FIELD mmeaseq name="construct.a.page1.mmeaseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmeaseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeaseq
            #add-point:ON ACTION controlp INFIELD mmeaseq name="construct.c.page1.mmeaseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmea001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea001
            #add-point:ON ACTION controlp INFIELD mmea001 name="construct.c.page1.mmea001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmea001  #顯示到畫面上
            NEXT FIELD mmea001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea001
            #add-point:BEFORE FIELD mmea001 name="construct.b.page1.mmea001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea001
            
            #add-point:AFTER FIELD mmea001 name="construct.a.page1.mmea001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea002
            #add-point:ON ACTION controlp INFIELD mmea002 name="construct.c.page1.mmea002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmea002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmea002  #顯示到畫面上
            NEXT FIELD mmea002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea002
            #add-point:BEFORE FIELD mmea002 name="construct.b.page1.mmea002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea002
            
            #add-point:AFTER FIELD mmea002 name="construct.a.page1.mmea002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea003
            #add-point:ON ACTION controlp INFIELD mmea003 name="construct.c.page1.mmea003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mman001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmea003  #顯示到畫面上
            NEXT FIELD mmea003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea003
            #add-point:BEFORE FIELD mmea003 name="construct.b.page1.mmea003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea003
            
            #add-point:AFTER FIELD mmea003 name="construct.a.page1.mmea003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea004
            #add-point:ON ACTION controlp INFIELD mmea004 name="construct.c.page1.mmea004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmea004  #顯示到畫面上
            NEXT FIELD mmea004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea004
            #add-point:BEFORE FIELD mmea004 name="construct.b.page1.mmea004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea004
            
            #add-point:AFTER FIELD mmea004 name="construct.a.page1.mmea004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea005
            #add-point:BEFORE FIELD mmea005 name="construct.b.page1.mmea005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea005
            
            #add-point:AFTER FIELD mmea005 name="construct.a.page1.mmea005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea005
            #add-point:ON ACTION controlp INFIELD mmea005 name="construct.c.page1.mmea005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea006
            #add-point:BEFORE FIELD mmea006 name="construct.b.page1.mmea006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea006
            
            #add-point:AFTER FIELD mmea006 name="construct.a.page1.mmea006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea006
            #add-point:ON ACTION controlp INFIELD mmea006 name="construct.c.page1.mmea006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea007
            #add-point:BEFORE FIELD mmea007 name="construct.b.page1.mmea007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea007
            
            #add-point:AFTER FIELD mmea007 name="construct.a.page1.mmea007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea007
            #add-point:ON ACTION controlp INFIELD mmea007 name="construct.c.page1.mmea007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea008
            #add-point:BEFORE FIELD mmea008 name="construct.b.page1.mmea008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea008
            
            #add-point:AFTER FIELD mmea008 name="construct.a.page1.mmea008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea008
            #add-point:ON ACTION controlp INFIELD mmea008 name="construct.c.page1.mmea008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea009
            #add-point:BEFORE FIELD mmea009 name="construct.b.page1.mmea009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea009
            
            #add-point:AFTER FIELD mmea009 name="construct.a.page1.mmea009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea009
            #add-point:ON ACTION controlp INFIELD mmea009 name="construct.c.page1.mmea009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea010
            #add-point:BEFORE FIELD mmea010 name="construct.b.page1.mmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea010
            
            #add-point:AFTER FIELD mmea010 name="construct.a.page1.mmea010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea010
            #add-point:ON ACTION controlp INFIELD mmea010 name="construct.c.page1.mmea010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea011
            #add-point:BEFORE FIELD mmea011 name="construct.b.page1.mmea011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea011
            
            #add-point:AFTER FIELD mmea011 name="construct.a.page1.mmea011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea011
            #add-point:ON ACTION controlp INFIELD mmea011 name="construct.c.page1.mmea011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea012
            #add-point:BEFORE FIELD mmea012 name="construct.b.page1.mmea012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea012
            
            #add-point:AFTER FIELD mmea012 name="construct.a.page1.mmea012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea012
            #add-point:ON ACTION controlp INFIELD mmea012 name="construct.c.page1.mmea012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea013
            #add-point:ON ACTION controlp INFIELD mmea013 name="construct.c.page1.mmea013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmea013  #顯示到畫面上
            NEXT FIELD mmea013                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea013
            #add-point:BEFORE FIELD mmea013 name="construct.b.page1.mmea013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea013
            
            #add-point:AFTER FIELD mmea013 name="construct.a.page1.mmea013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea013_desc
            #add-point:BEFORE FIELD mmea013_desc name="construct.b.page1.mmea013_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea013_desc
            
            #add-point:AFTER FIELD mmea013_desc name="construct.a.page1.mmea013_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea013_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea013_desc
            #add-point:ON ACTION controlp INFIELD mmea013_desc name="construct.c.page1.mmea013_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea014
            #add-point:BEFORE FIELD mmea014 name="construct.b.page1.mmea014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea014
            
            #add-point:AFTER FIELD mmea014 name="construct.a.page1.mmea014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea014
            #add-point:ON ACTION controlp INFIELD mmea014 name="construct.c.page1.mmea014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea015
            #add-point:BEFORE FIELD mmea015 name="construct.b.page1.mmea015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea015
            
            #add-point:AFTER FIELD mmea015 name="construct.a.page1.mmea015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea015
            #add-point:ON ACTION controlp INFIELD mmea015 name="construct.c.page1.mmea015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea016
            #add-point:BEFORE FIELD mmea016 name="construct.b.page1.mmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea016
            
            #add-point:AFTER FIELD mmea016 name="construct.a.page1.mmea016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea016
            #add-point:ON ACTION controlp INFIELD mmea016 name="construct.c.page1.mmea016"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtieseq,rtib003_03,rtib004_03,rtieseq1,rtie001,rtie002,rtie006
           FROM s_detail10[1].rtieseq,s_detail10[1].rtib003_03,s_detail10[1].rtib004_03,s_detail10[1].rtieseq1, 
               s_detail10[1].rtie001,s_detail10[1].rtie002,s_detail10[1].rtie006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
                        
            ON ACTION controlp INFIELD rtic001
                ### 促銷單號### start ###
                INITIALIZE g_qryparam.* TO NULL 
                LET g_qryparam.state = "c"
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = "1=1"
                CALL q_rtic001()
                DISPLAY g_qryparam.return1 TO rtic001
                ### 促銷單號### end ###
                
            ON ACTION controlp INFIELD rtic002
                ### 促銷單號### start ###
                INITIALIZE g_qryparam.* TO NULL 
                LET g_qryparam.state = "c"
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = "1=1"
                CALL q_rtic002()
                DISPLAY g_qryparam.return1 TO rtic002
                ### 促銷單號### end ###
                
            ON ACTION controlp INFIELD rtic003
                ### 促銷單號### start ###
                INITIALIZE g_qryparam.* TO NULL 
                LET g_qryparam.state = "c"
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = "1=1"
                CALL q_rtic003()
                DISPLAY g_qryparam.return1 TO rtic003
                ### 促銷單號### end ###
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq
            #add-point:BEFORE FIELD rtieseq name="construct.b.page10.rtieseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq
            
            #add-point:AFTER FIELD rtieseq name="construct.a.page10.rtieseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtieseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq
            #add-point:ON ACTION controlp INFIELD rtieseq name="construct.c.page10.rtieseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib003_03
            #add-point:BEFORE FIELD rtib003_03 name="construct.b.page10.rtib003_03"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib003_03
            
            #add-point:AFTER FIELD rtib003_03 name="construct.a.page10.rtib003_03"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtib003_03
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib003_03
            #add-point:ON ACTION controlp INFIELD rtib003_03 name="construct.c.page10.rtib003_03"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib004_03
            #add-point:BEFORE FIELD rtib004_03 name="construct.b.page10.rtib004_03"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib004_03
            
            #add-point:AFTER FIELD rtib004_03 name="construct.a.page10.rtib004_03"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtib004_03
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib004_03
            #add-point:ON ACTION controlp INFIELD rtib004_03 name="construct.c.page10.rtib004_03"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq1
            #add-point:BEFORE FIELD rtieseq1 name="construct.b.page10.rtieseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq1
            
            #add-point:AFTER FIELD rtieseq1 name="construct.a.page10.rtieseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtieseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq1
            #add-point:ON ACTION controlp INFIELD rtieseq1 name="construct.c.page10.rtieseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie001
            #add-point:BEFORE FIELD rtie001 name="construct.b.page10.rtie001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie001
            
            #add-point:AFTER FIELD rtie001 name="construct.a.page10.rtie001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtie001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie001
            #add-point:ON ACTION controlp INFIELD rtie001 name="construct.c.page10.rtie001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page10.rtie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie002
            #add-point:ON ACTION controlp INFIELD rtie002 name="construct.c.page10.rtie002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtie002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtie002  #顯示到畫面上
            NEXT FIELD rtie002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie002
            #add-point:BEFORE FIELD rtie002 name="construct.b.page10.rtie002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie002
            
            #add-point:AFTER FIELD rtie002 name="construct.a.page10.rtie002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie006
            #add-point:BEFORE FIELD rtie006 name="construct.b.page10.rtie006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie006
            
            #add-point:AFTER FIELD rtie006 name="construct.a.page10.rtie006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.rtie006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie006
            #add-point:ON ACTION controlp INFIELD rtie006 name="construct.c.page10.rtie006"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON mmecseq,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005,mmec006,mmec007, 
          mmec008,mmec009,mmec010,mmec011,mmec012,mmec013
           FROM s_detail2[1].mmecseq,s_detail2[1].mmec014,s_detail2[1].mmec001,s_detail2[1].mmec002, 
               s_detail2[1].mmec003,s_detail2[1].mmec004,s_detail2[1].mmec005,s_detail2[1].mmec006,s_detail2[1].mmec007, 
               s_detail2[1].mmec008,s_detail2[1].mmec009,s_detail2[1].mmec010,s_detail2[1].mmec011,s_detail2[1].mmec012, 
               s_detail2[1].mmec013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            ON ACTION controlp INFIELD xrcd002
                ### 促銷單號### start ###
                INITIALIZE g_qryparam.* TO NULL 
                LET g_qryparam.state = "c"
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = "1=1"
                CALL q_xrcd002()
                DISPLAY g_qryparam.return1 TO xrcd002 
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmecseq
            #add-point:BEFORE FIELD mmecseq name="construct.b.page2.mmecseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmecseq
            
            #add-point:AFTER FIELD mmecseq name="construct.a.page2.mmecseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmecseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmecseq
            #add-point:ON ACTION controlp INFIELD mmecseq name="construct.c.page2.mmecseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.mmec014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec014
            #add-point:ON ACTION controlp INFIELD mmec014 name="construct.c.page2.mmec014"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmec014  #顯示到畫面上
            NEXT FIELD mmec014                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec014
            #add-point:BEFORE FIELD mmec014 name="construct.b.page2.mmec014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec014
            
            #add-point:AFTER FIELD mmec014 name="construct.a.page2.mmec014"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec001
            #add-point:BEFORE FIELD mmec001 name="construct.b.page2.mmec001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec001
            
            #add-point:AFTER FIELD mmec001 name="construct.a.page2.mmec001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec001
            #add-point:ON ACTION controlp INFIELD mmec001 name="construct.c.page2.mmec001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec002
            #add-point:BEFORE FIELD mmec002 name="construct.b.page2.mmec002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec002
            
            #add-point:AFTER FIELD mmec002 name="construct.a.page2.mmec002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec002
            #add-point:ON ACTION controlp INFIELD mmec002 name="construct.c.page2.mmec002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec003
            #add-point:BEFORE FIELD mmec003 name="construct.b.page2.mmec003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec003
            
            #add-point:AFTER FIELD mmec003 name="construct.a.page2.mmec003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec003
            #add-point:ON ACTION controlp INFIELD mmec003 name="construct.c.page2.mmec003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec004
            #add-point:BEFORE FIELD mmec004 name="construct.b.page2.mmec004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec004
            
            #add-point:AFTER FIELD mmec004 name="construct.a.page2.mmec004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec004
            #add-point:ON ACTION controlp INFIELD mmec004 name="construct.c.page2.mmec004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec005
            #add-point:BEFORE FIELD mmec005 name="construct.b.page2.mmec005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec005
            
            #add-point:AFTER FIELD mmec005 name="construct.a.page2.mmec005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec005
            #add-point:ON ACTION controlp INFIELD mmec005 name="construct.c.page2.mmec005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec006
            #add-point:BEFORE FIELD mmec006 name="construct.b.page2.mmec006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec006
            
            #add-point:AFTER FIELD mmec006 name="construct.a.page2.mmec006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec006
            #add-point:ON ACTION controlp INFIELD mmec006 name="construct.c.page2.mmec006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec007
            #add-point:BEFORE FIELD mmec007 name="construct.b.page2.mmec007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec007
            
            #add-point:AFTER FIELD mmec007 name="construct.a.page2.mmec007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec007
            #add-point:ON ACTION controlp INFIELD mmec007 name="construct.c.page2.mmec007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec008
            #add-point:BEFORE FIELD mmec008 name="construct.b.page2.mmec008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec008
            
            #add-point:AFTER FIELD mmec008 name="construct.a.page2.mmec008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec008
            #add-point:ON ACTION controlp INFIELD mmec008 name="construct.c.page2.mmec008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec009
            #add-point:BEFORE FIELD mmec009 name="construct.b.page2.mmec009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec009
            
            #add-point:AFTER FIELD mmec009 name="construct.a.page2.mmec009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec009
            #add-point:ON ACTION controlp INFIELD mmec009 name="construct.c.page2.mmec009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec010
            #add-point:BEFORE FIELD mmec010 name="construct.b.page2.mmec010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec010
            
            #add-point:AFTER FIELD mmec010 name="construct.a.page2.mmec010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec010
            #add-point:ON ACTION controlp INFIELD mmec010 name="construct.c.page2.mmec010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec011
            #add-point:BEFORE FIELD mmec011 name="construct.b.page2.mmec011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec011
            
            #add-point:AFTER FIELD mmec011 name="construct.a.page2.mmec011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec011
            #add-point:ON ACTION controlp INFIELD mmec011 name="construct.c.page2.mmec011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec012
            #add-point:BEFORE FIELD mmec012 name="construct.b.page2.mmec012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec012
            
            #add-point:AFTER FIELD mmec012 name="construct.a.page2.mmec012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmec012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec012
            #add-point:ON ACTION controlp INFIELD mmec012 name="construct.c.page2.mmec012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.mmec013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec013
            #add-point:ON ACTION controlp INFIELD mmec013 name="construct.c.page2.mmec013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmec013  #顯示到畫面上
            NEXT FIELD mmec013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec013
            #add-point:BEFORE FIELD mmec013 name="construct.b.page2.mmec013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec013
            
            #add-point:AFTER FIELD mmec013 name="construct.a.page2.mmec013"
            
            #END add-point
            
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON mmebseq,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005,mmeb006,mmeb007, 
          mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013
           FROM s_detail3[1].mmebseq,s_detail3[1].mmeb014,s_detail3[1].mmeb001,s_detail3[1].mmeb002, 
               s_detail3[1].mmeb003,s_detail3[1].mmeb004,s_detail3[1].mmeb005,s_detail3[1].mmeb006,s_detail3[1].mmeb007, 
               s_detail3[1].mmeb008,s_detail3[1].mmeb009,s_detail3[1].mmeb010,s_detail3[1].mmeb011,s_detail3[1].mmeb012, 
               s_detail3[1].mmeb013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            ON ACTION controlp INFIELD rtie002
                ### 促銷單號### start ###
                INITIALIZE g_qryparam.* TO NULL 
                LET g_qryparam.state = "c"
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = "1=1"
                CALL q_rtie002()
                DISPLAY g_qryparam.return1 TO rtie002 
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmebseq
            #add-point:BEFORE FIELD mmebseq name="construct.b.page3.mmebseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmebseq
            
            #add-point:AFTER FIELD mmebseq name="construct.a.page3.mmebseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmebseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmebseq
            #add-point:ON ACTION controlp INFIELD mmebseq name="construct.c.page3.mmebseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb014
            #add-point:BEFORE FIELD mmeb014 name="construct.b.page3.mmeb014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb014
            
            #add-point:AFTER FIELD mmeb014 name="construct.a.page3.mmeb014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb014
            #add-point:ON ACTION controlp INFIELD mmeb014 name="construct.c.page3.mmeb014"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmeb014  #顯示到畫面上
            NEXT FIELD mmeb014                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb001
            #add-point:BEFORE FIELD mmeb001 name="construct.b.page3.mmeb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb001
            
            #add-point:AFTER FIELD mmeb001 name="construct.a.page3.mmeb001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb001
            #add-point:ON ACTION controlp INFIELD mmeb001 name="construct.c.page3.mmeb001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb002
            #add-point:BEFORE FIELD mmeb002 name="construct.b.page3.mmeb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb002
            
            #add-point:AFTER FIELD mmeb002 name="construct.a.page3.mmeb002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb002
            #add-point:ON ACTION controlp INFIELD mmeb002 name="construct.c.page3.mmeb002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb003
            #add-point:BEFORE FIELD mmeb003 name="construct.b.page3.mmeb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb003
            
            #add-point:AFTER FIELD mmeb003 name="construct.a.page3.mmeb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb003
            #add-point:ON ACTION controlp INFIELD mmeb003 name="construct.c.page3.mmeb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb004
            #add-point:BEFORE FIELD mmeb004 name="construct.b.page3.mmeb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb004
            
            #add-point:AFTER FIELD mmeb004 name="construct.a.page3.mmeb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb004
            #add-point:ON ACTION controlp INFIELD mmeb004 name="construct.c.page3.mmeb004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb005
            #add-point:BEFORE FIELD mmeb005 name="construct.b.page3.mmeb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb005
            
            #add-point:AFTER FIELD mmeb005 name="construct.a.page3.mmeb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb005
            #add-point:ON ACTION controlp INFIELD mmeb005 name="construct.c.page3.mmeb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb006
            #add-point:BEFORE FIELD mmeb006 name="construct.b.page3.mmeb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb006
            
            #add-point:AFTER FIELD mmeb006 name="construct.a.page3.mmeb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb006
            #add-point:ON ACTION controlp INFIELD mmeb006 name="construct.c.page3.mmeb006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb007
            #add-point:BEFORE FIELD mmeb007 name="construct.b.page3.mmeb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb007
            
            #add-point:AFTER FIELD mmeb007 name="construct.a.page3.mmeb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb007
            #add-point:ON ACTION controlp INFIELD mmeb007 name="construct.c.page3.mmeb007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb008
            #add-point:BEFORE FIELD mmeb008 name="construct.b.page3.mmeb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb008
            
            #add-point:AFTER FIELD mmeb008 name="construct.a.page3.mmeb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb008
            #add-point:ON ACTION controlp INFIELD mmeb008 name="construct.c.page3.mmeb008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb009
            #add-point:BEFORE FIELD mmeb009 name="construct.b.page3.mmeb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb009
            
            #add-point:AFTER FIELD mmeb009 name="construct.a.page3.mmeb009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb009
            #add-point:ON ACTION controlp INFIELD mmeb009 name="construct.c.page3.mmeb009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb010
            #add-point:BEFORE FIELD mmeb010 name="construct.b.page3.mmeb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb010
            
            #add-point:AFTER FIELD mmeb010 name="construct.a.page3.mmeb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb010
            #add-point:ON ACTION controlp INFIELD mmeb010 name="construct.c.page3.mmeb010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb011
            #add-point:BEFORE FIELD mmeb011 name="construct.b.page3.mmeb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb011
            
            #add-point:AFTER FIELD mmeb011 name="construct.a.page3.mmeb011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb011
            #add-point:ON ACTION controlp INFIELD mmeb011 name="construct.c.page3.mmeb011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb012
            #add-point:BEFORE FIELD mmeb012 name="construct.b.page3.mmeb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb012
            
            #add-point:AFTER FIELD mmeb012 name="construct.a.page3.mmeb012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.mmeb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb012
            #add-point:ON ACTION controlp INFIELD mmeb012 name="construct.c.page3.mmeb012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.mmeb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb013
            #add-point:ON ACTION controlp INFIELD mmeb013 name="construct.c.page3.mmeb013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmeb013  #顯示到畫面上
            NEXT FIELD mmeb013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb013
            #add-point:BEFORE FIELD mmeb013 name="construct.b.page3.mmeb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb013
            
            #add-point:AFTER FIELD mmeb013 name="construct.a.page3.mmeb013"
            
            #END add-point
            
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON mmedseq,mmed001,mmed002,mmed003,mmed005,mmed006,mmed007,mmed008,mmed009, 
          mmed010,mmed012,mmed014,mmed013,mmed015,mmed016
           FROM s_detail4[1].mmedseq,s_detail4[1].mmed001,s_detail4[1].mmed002,s_detail4[1].mmed003, 
               s_detail4[1].mmed005,s_detail4[1].mmed006,s_detail4[1].mmed007,s_detail4[1].mmed008,s_detail4[1].mmed009, 
               s_detail4[1].mmed010,s_detail4[1].mmed012,s_detail4[1].mmed014,s_detail4[1].mmed013,s_detail4[1].mmed015, 
               s_detail4[1].mmed016
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmedseq
            #add-point:BEFORE FIELD mmedseq name="construct.b.page4.mmedseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmedseq
            
            #add-point:AFTER FIELD mmedseq name="construct.a.page4.mmedseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmedseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmedseq
            #add-point:ON ACTION controlp INFIELD mmedseq name="construct.c.page4.mmedseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed001
            #add-point:BEFORE FIELD mmed001 name="construct.b.page4.mmed001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed001
            
            #add-point:AFTER FIELD mmed001 name="construct.a.page4.mmed001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed001
            #add-point:ON ACTION controlp INFIELD mmed001 name="construct.c.page4.mmed001"
            ### 儲值卡號查詢### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " mmaq006 = '3' AND mmaq007 = 'Y' AND (mmaq005 IS NULL OR mmaq005 >= '",g_today,"')"
            CALL q_mmaq001_7()
            DISPLAY g_qryparam.return1 TO mmed001
            ### 儲值卡號查詢### end ###

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed002
            #add-point:BEFORE FIELD mmed002 name="construct.b.page4.mmed002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed002
            
            #add-point:AFTER FIELD mmed002 name="construct.a.page4.mmed002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed002
            #add-point:ON ACTION controlp INFIELD mmed002 name="construct.c.page4.mmed002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed003
            #add-point:BEFORE FIELD mmed003 name="construct.b.page4.mmed003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed003
            
            #add-point:AFTER FIELD mmed003 name="construct.a.page4.mmed003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed003
            #add-point:ON ACTION controlp INFIELD mmed003 name="construct.c.page4.mmed003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed005
            #add-point:BEFORE FIELD mmed005 name="construct.b.page4.mmed005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed005
            
            #add-point:AFTER FIELD mmed005 name="construct.a.page4.mmed005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed005
            #add-point:ON ACTION controlp INFIELD mmed005 name="construct.c.page4.mmed005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed006
            #add-point:BEFORE FIELD mmed006 name="construct.b.page4.mmed006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed006
            
            #add-point:AFTER FIELD mmed006 name="construct.a.page4.mmed006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed006
            #add-point:ON ACTION controlp INFIELD mmed006 name="construct.c.page4.mmed006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed007
            #add-point:BEFORE FIELD mmed007 name="construct.b.page4.mmed007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed007
            
            #add-point:AFTER FIELD mmed007 name="construct.a.page4.mmed007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed007
            #add-point:ON ACTION controlp INFIELD mmed007 name="construct.c.page4.mmed007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed008
            #add-point:BEFORE FIELD mmed008 name="construct.b.page4.mmed008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed008
            
            #add-point:AFTER FIELD mmed008 name="construct.a.page4.mmed008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed008
            #add-point:ON ACTION controlp INFIELD mmed008 name="construct.c.page4.mmed008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed009
            #add-point:BEFORE FIELD mmed009 name="construct.b.page4.mmed009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed009
            
            #add-point:AFTER FIELD mmed009 name="construct.a.page4.mmed009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed009
            #add-point:ON ACTION controlp INFIELD mmed009 name="construct.c.page4.mmed009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed010
            #add-point:BEFORE FIELD mmed010 name="construct.b.page4.mmed010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed010
            
            #add-point:AFTER FIELD mmed010 name="construct.a.page4.mmed010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed010
            #add-point:ON ACTION controlp INFIELD mmed010 name="construct.c.page4.mmed010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed012
            #add-point:BEFORE FIELD mmed012 name="construct.b.page4.mmed012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed012
            
            #add-point:AFTER FIELD mmed012 name="construct.a.page4.mmed012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed012
            #add-point:ON ACTION controlp INFIELD mmed012 name="construct.c.page4.mmed012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed014
            #add-point:BEFORE FIELD mmed014 name="construct.b.page4.mmed014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed014
            
            #add-point:AFTER FIELD mmed014 name="construct.a.page4.mmed014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed014
            #add-point:ON ACTION controlp INFIELD mmed014 name="construct.c.page4.mmed014"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmed014  #顯示到畫面上
            NEXT FIELD mmed014                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.page4.mmed013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed013
            #add-point:ON ACTION controlp INFIELD mmed013 name="construct.c.page4.mmed013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmed013  #顯示到畫面上
            NEXT FIELD mmed013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed013
            #add-point:BEFORE FIELD mmed013 name="construct.b.page4.mmed013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed013
            
            #add-point:AFTER FIELD mmed013 name="construct.a.page4.mmed013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed015
            #add-point:BEFORE FIELD mmed015 name="construct.b.page4.mmed015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed015
            
            #add-point:AFTER FIELD mmed015 name="construct.a.page4.mmed015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed015
            #add-point:ON ACTION controlp INFIELD mmed015 name="construct.c.page4.mmed015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed016
            #add-point:BEFORE FIELD mmed016 name="construct.b.page4.mmed016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed016
            
            #add-point:AFTER FIELD mmed016 name="construct.a.page4.mmed016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.mmed016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed016
            #add-point:ON ACTION controlp INFIELD mmed016 name="construct.c.page4.mmed016"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON gcbiseq,gcbiseq1,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005,gcbi009,gcbi006, 
          gcbi007,gcbi008
           FROM s_detail6[1].gcbiseq,s_detail6[1].gcbiseq1,s_detail6[1].gcbi001,s_detail6[1].gcbi002, 
               s_detail6[1].gcbi003,s_detail6[1].gcbi004,s_detail6[1].gcbi005,s_detail6[1].gcbi009,s_detail6[1].gcbi006, 
               s_detail6[1].gcbi007,s_detail6[1].gcbi008
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbiseq
            #add-point:BEFORE FIELD gcbiseq name="construct.b.page6.gcbiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbiseq
            
            #add-point:AFTER FIELD gcbiseq name="construct.a.page6.gcbiseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbiseq
            #add-point:ON ACTION controlp INFIELD gcbiseq name="construct.c.page6.gcbiseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbiseq1
            #add-point:BEFORE FIELD gcbiseq1 name="construct.b.page6.gcbiseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbiseq1
            
            #add-point:AFTER FIELD gcbiseq1 name="construct.a.page6.gcbiseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbiseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbiseq1
            #add-point:ON ACTION controlp INFIELD gcbiseq1 name="construct.c.page6.gcbiseq1"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.gcbi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi001
            #add-point:ON ACTION controlp INFIELD gcbi001 name="construct.c.page6.gcbi001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gcao001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gcbi001  #顯示到畫面上
            NEXT FIELD gcbi001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi001
            #add-point:BEFORE FIELD gcbi001 name="construct.b.page6.gcbi001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi001
            
            #add-point:AFTER FIELD gcbi001 name="construct.a.page6.gcbi001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi002
            #add-point:ON ACTION controlp INFIELD gcbi002 name="construct.c.page6.gcbi002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gcao001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gcbi002  #顯示到畫面上
            NEXT FIELD gcbi002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi002
            #add-point:BEFORE FIELD gcbi002 name="construct.b.page6.gcbi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi002
            
            #add-point:AFTER FIELD gcbi002 name="construct.a.page6.gcbi002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi003
            #add-point:BEFORE FIELD gcbi003 name="construct.b.page6.gcbi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi003
            
            #add-point:AFTER FIELD gcbi003 name="construct.a.page6.gcbi003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi003
            #add-point:ON ACTION controlp INFIELD gcbi003 name="construct.c.page6.gcbi003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi004
            #add-point:BEFORE FIELD gcbi004 name="construct.b.page6.gcbi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi004
            
            #add-point:AFTER FIELD gcbi004 name="construct.a.page6.gcbi004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi004
            #add-point:ON ACTION controlp INFIELD gcbi004 name="construct.c.page6.gcbi004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi005
            #add-point:BEFORE FIELD gcbi005 name="construct.b.page6.gcbi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi005
            
            #add-point:AFTER FIELD gcbi005 name="construct.a.page6.gcbi005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi005
            #add-point:ON ACTION controlp INFIELD gcbi005 name="construct.c.page6.gcbi005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi009
            #add-point:BEFORE FIELD gcbi009 name="construct.b.page6.gcbi009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi009
            
            #add-point:AFTER FIELD gcbi009 name="construct.a.page6.gcbi009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi009
            #add-point:ON ACTION controlp INFIELD gcbi009 name="construct.c.page6.gcbi009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi006
            #add-point:BEFORE FIELD gcbi006 name="construct.b.page6.gcbi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi006
            
            #add-point:AFTER FIELD gcbi006 name="construct.a.page6.gcbi006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi006
            #add-point:ON ACTION controlp INFIELD gcbi006 name="construct.c.page6.gcbi006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.gcbi007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi007
            #add-point:ON ACTION controlp INFIELD gcbi007 name="construct.c.page6.gcbi007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gcbi007  #顯示到畫面上
            NEXT FIELD gcbi007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi007
            #add-point:BEFORE FIELD gcbi007 name="construct.b.page6.gcbi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi007
            
            #add-point:AFTER FIELD gcbi007 name="construct.a.page6.gcbi007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi008
            #add-point:BEFORE FIELD gcbi008 name="construct.b.page6.gcbi008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi008
            
            #add-point:AFTER FIELD gcbi008 name="construct.a.page6.gcbi008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.gcbi008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi008
            #add-point:ON ACTION controlp INFIELD gcbi008 name="construct.c.page6.gcbi008"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON rtibseq,rtib003,rtib004,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013, 
          rtib020,rtib021,rtib022,rtib024,rtib025,rtib026,rtib027,rtib028,rtib030,rtib039
           FROM s_detail7[1].rtibseq,s_detail7[1].rtib003,s_detail7[1].rtib004,s_detail7[1].rtib006, 
               s_detail7[1].rtib008,s_detail7[1].rtib009,s_detail7[1].rtib010,s_detail7[1].rtib012,s_detail7[1].rtib013, 
               s_detail7[1].rtib020,s_detail7[1].rtib021,s_detail7[1].rtib022,s_detail7[1].rtib024,s_detail7[1].rtib025, 
               s_detail7[1].rtib026,s_detail7[1].rtib027,s_detail7[1].rtib028,s_detail7[1].rtib030,s_detail7[1].rtib039 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibseq
            #add-point:BEFORE FIELD rtibseq name="construct.b.page7.rtibseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibseq
            
            #add-point:AFTER FIELD rtibseq name="construct.a.page7.rtibseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtibseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibseq
            #add-point:ON ACTION controlp INFIELD rtibseq name="construct.c.page7.rtibseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.rtib003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib003
            #add-point:ON ACTION controlp INFIELD rtib003 name="construct.c.page7.rtib003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib003  #顯示到畫面上
            NEXT FIELD rtib003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib003
            #add-point:BEFORE FIELD rtib003 name="construct.b.page7.rtib003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib003
            
            #add-point:AFTER FIELD rtib003 name="construct.a.page7.rtib003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib004
            #add-point:ON ACTION controlp INFIELD rtib004 name="construct.c.page7.rtib004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib004  #顯示到畫面上
            NEXT FIELD rtib004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib004
            #add-point:BEFORE FIELD rtib004 name="construct.b.page7.rtib004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib004
            
            #add-point:AFTER FIELD rtib004 name="construct.a.page7.rtib004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib006
            #add-point:ON ACTION controlp INFIELD rtib006 name="construct.c.page7.rtib006"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            SELECT ooef019 INTO l_ooef019 
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_site
            LET g_qryparam.arg1 = l_ooef019
            CALL q_rtdx014_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib006  #顯示到畫面上
            NEXT FIELD rtib006                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib006
            #add-point:BEFORE FIELD rtib006 name="construct.b.page7.rtib006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib006
            
            #add-point:AFTER FIELD rtib006 name="construct.a.page7.rtib006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib008
            #add-point:BEFORE FIELD rtib008 name="construct.b.page7.rtib008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib008
            
            #add-point:AFTER FIELD rtib008 name="construct.a.page7.rtib008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib008
            #add-point:ON ACTION controlp INFIELD rtib008 name="construct.c.page7.rtib008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib009
            #add-point:BEFORE FIELD rtib009 name="construct.b.page7.rtib009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib009
            
            #add-point:AFTER FIELD rtib009 name="construct.a.page7.rtib009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib009
            #add-point:ON ACTION controlp INFIELD rtib009 name="construct.c.page7.rtib009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib010
            #add-point:BEFORE FIELD rtib010 name="construct.b.page7.rtib010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib010
            
            #add-point:AFTER FIELD rtib010 name="construct.a.page7.rtib010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib010
            #add-point:ON ACTION controlp INFIELD rtib010 name="construct.c.page7.rtib010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib012
            #add-point:BEFORE FIELD rtib012 name="construct.b.page7.rtib012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib012
            
            #add-point:AFTER FIELD rtib012 name="construct.a.page7.rtib012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib012
            #add-point:ON ACTION controlp INFIELD rtib012 name="construct.c.page7.rtib012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.rtib013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib013
            #add-point:ON ACTION controlp INFIELD rtib013 name="construct.c.page7.rtib013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib013  #顯示到畫面上
            NEXT FIELD rtib013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib013
            #add-point:BEFORE FIELD rtib013 name="construct.b.page7.rtib013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib013
            
            #add-point:AFTER FIELD rtib013 name="construct.a.page7.rtib013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib020
            #add-point:BEFORE FIELD rtib020 name="construct.b.page7.rtib020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib020
            
            #add-point:AFTER FIELD rtib020 name="construct.a.page7.rtib020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib020
            #add-point:ON ACTION controlp INFIELD rtib020 name="construct.c.page7.rtib020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib021
            #add-point:BEFORE FIELD rtib021 name="construct.b.page7.rtib021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib021
            
            #add-point:AFTER FIELD rtib021 name="construct.a.page7.rtib021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib021
            #add-point:ON ACTION controlp INFIELD rtib021 name="construct.c.page7.rtib021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib022
            #add-point:BEFORE FIELD rtib022 name="construct.b.page7.rtib022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib022
            
            #add-point:AFTER FIELD rtib022 name="construct.a.page7.rtib022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib022
            #add-point:ON ACTION controlp INFIELD rtib022 name="construct.c.page7.rtib022"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.rtib024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib024
            #add-point:ON ACTION controlp INFIELD rtib024 name="construct.c.page7.rtib024"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib024  #顯示到畫面上
            NEXT FIELD rtib024                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib024
            #add-point:BEFORE FIELD rtib024 name="construct.b.page7.rtib024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib024
            
            #add-point:AFTER FIELD rtib024 name="construct.a.page7.rtib024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib025
            #add-point:ON ACTION controlp INFIELD rtib025 name="construct.c.page7.rtib025"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_20()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib025  #顯示到畫面上
            NEXT FIELD rtib025                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib025
            #add-point:BEFORE FIELD rtib025 name="construct.b.page7.rtib025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib025
            
            #add-point:AFTER FIELD rtib025 name="construct.a.page7.rtib025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib026
            #add-point:ON ACTION controlp INFIELD rtib026 name="construct.c.page7.rtib026"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag005_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib026  #顯示到畫面上
            NEXT FIELD rtib026                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib026
            #add-point:BEFORE FIELD rtib026 name="construct.b.page7.rtib026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib026
            
            #add-point:AFTER FIELD rtib026 name="construct.a.page7.rtib026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib027
            #add-point:ON ACTION controlp INFIELD rtib027 name="construct.c.page7.rtib027"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib027  #顯示到畫面上
            NEXT FIELD rtib027                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib027
            #add-point:BEFORE FIELD rtib027 name="construct.b.page7.rtib027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib027
            
            #add-point:AFTER FIELD rtib027 name="construct.a.page7.rtib027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib028
            #add-point:ON ACTION controlp INFIELD rtib028 name="construct.c.page7.rtib028"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa120()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtib028  #顯示到畫面上
            NEXT FIELD rtib028                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib028
            #add-point:BEFORE FIELD rtib028 name="construct.b.page7.rtib028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib028
            
            #add-point:AFTER FIELD rtib028 name="construct.a.page7.rtib028"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib030
            #add-point:BEFORE FIELD rtib030 name="construct.b.page7.rtib030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib030
            
            #add-point:AFTER FIELD rtib030 name="construct.a.page7.rtib030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib030
            #add-point:ON ACTION controlp INFIELD rtib030 name="construct.c.page7.rtib030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib039
            #add-point:BEFORE FIELD rtib039 name="construct.b.page7.rtib039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib039
            
            #add-point:AFTER FIELD rtib039 name="construct.a.page7.rtib039"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtib039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib039
            #add-point:ON ACTION controlp INFIELD rtib039 name="construct.c.page7.rtib039"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table8 ON rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
          rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020 
 
           FROM s_detail8[1].rticseq,s_detail8[1].rticseq1,s_detail8[1].rtic001,s_detail8[1].rtic002, 
               s_detail8[1].rtic003,s_detail8[1].rtic004,s_detail8[1].rtic005,s_detail8[1].rtic006,s_detail8[1].rtic007, 
               s_detail8[1].rtic008,s_detail8[1].rtic009,s_detail8[1].rtic010,s_detail8[1].rtic011,s_detail8[1].rtic012, 
               s_detail8[1].rtic013,s_detail8[1].rtic014,s_detail8[1].rtic015,s_detail8[1].rtic016,s_detail8[1].rtic017, 
               s_detail8[1].rtic018,s_detail8[1].rtic020
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body8.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq
            #add-point:BEFORE FIELD rticseq name="construct.b.page8.rticseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq
            
            #add-point:AFTER FIELD rticseq name="construct.a.page8.rticseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rticseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq
            #add-point:ON ACTION controlp INFIELD rticseq name="construct.c.page8.rticseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq1
            #add-point:BEFORE FIELD rticseq1 name="construct.b.page8.rticseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq1
            
            #add-point:AFTER FIELD rticseq1 name="construct.a.page8.rticseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rticseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq1
            #add-point:ON ACTION controlp INFIELD rticseq1 name="construct.c.page8.rticseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic001
            #add-point:BEFORE FIELD rtic001 name="construct.b.page8.rtic001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic001
            
            #add-point:AFTER FIELD rtic001 name="construct.a.page8.rtic001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic001
            #add-point:ON ACTION controlp INFIELD rtic001 name="construct.c.page8.rtic001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic002
            #add-point:BEFORE FIELD rtic002 name="construct.b.page8.rtic002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic002
            
            #add-point:AFTER FIELD rtic002 name="construct.a.page8.rtic002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic002
            #add-point:ON ACTION controlp INFIELD rtic002 name="construct.c.page8.rtic002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic003
            #add-point:BEFORE FIELD rtic003 name="construct.b.page8.rtic003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic003
            
            #add-point:AFTER FIELD rtic003 name="construct.a.page8.rtic003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic003
            #add-point:ON ACTION controlp INFIELD rtic003 name="construct.c.page8.rtic003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic004
            #add-point:BEFORE FIELD rtic004 name="construct.b.page8.rtic004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic004
            
            #add-point:AFTER FIELD rtic004 name="construct.a.page8.rtic004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic004
            #add-point:ON ACTION controlp INFIELD rtic004 name="construct.c.page8.rtic004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic005
            #add-point:BEFORE FIELD rtic005 name="construct.b.page8.rtic005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic005
            
            #add-point:AFTER FIELD rtic005 name="construct.a.page8.rtic005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic005
            #add-point:ON ACTION controlp INFIELD rtic005 name="construct.c.page8.rtic005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic006
            #add-point:BEFORE FIELD rtic006 name="construct.b.page8.rtic006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic006
            
            #add-point:AFTER FIELD rtic006 name="construct.a.page8.rtic006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic006
            #add-point:ON ACTION controlp INFIELD rtic006 name="construct.c.page8.rtic006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic007
            #add-point:BEFORE FIELD rtic007 name="construct.b.page8.rtic007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic007
            
            #add-point:AFTER FIELD rtic007 name="construct.a.page8.rtic007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic007
            #add-point:ON ACTION controlp INFIELD rtic007 name="construct.c.page8.rtic007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic008
            #add-point:BEFORE FIELD rtic008 name="construct.b.page8.rtic008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic008
            
            #add-point:AFTER FIELD rtic008 name="construct.a.page8.rtic008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic008
            #add-point:ON ACTION controlp INFIELD rtic008 name="construct.c.page8.rtic008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic009
            #add-point:BEFORE FIELD rtic009 name="construct.b.page8.rtic009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic009
            
            #add-point:AFTER FIELD rtic009 name="construct.a.page8.rtic009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic009
            #add-point:ON ACTION controlp INFIELD rtic009 name="construct.c.page8.rtic009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic010
            #add-point:BEFORE FIELD rtic010 name="construct.b.page8.rtic010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic010
            
            #add-point:AFTER FIELD rtic010 name="construct.a.page8.rtic010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic010
            #add-point:ON ACTION controlp INFIELD rtic010 name="construct.c.page8.rtic010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic011
            #add-point:BEFORE FIELD rtic011 name="construct.b.page8.rtic011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic011
            
            #add-point:AFTER FIELD rtic011 name="construct.a.page8.rtic011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic011
            #add-point:ON ACTION controlp INFIELD rtic011 name="construct.c.page8.rtic011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic012
            #add-point:BEFORE FIELD rtic012 name="construct.b.page8.rtic012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic012
            
            #add-point:AFTER FIELD rtic012 name="construct.a.page8.rtic012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic012
            #add-point:ON ACTION controlp INFIELD rtic012 name="construct.c.page8.rtic012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic013
            #add-point:BEFORE FIELD rtic013 name="construct.b.page8.rtic013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic013
            
            #add-point:AFTER FIELD rtic013 name="construct.a.page8.rtic013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic013
            #add-point:ON ACTION controlp INFIELD rtic013 name="construct.c.page8.rtic013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic014
            #add-point:BEFORE FIELD rtic014 name="construct.b.page8.rtic014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic014
            
            #add-point:AFTER FIELD rtic014 name="construct.a.page8.rtic014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic014
            #add-point:ON ACTION controlp INFIELD rtic014 name="construct.c.page8.rtic014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic015
            #add-point:BEFORE FIELD rtic015 name="construct.b.page8.rtic015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic015
            
            #add-point:AFTER FIELD rtic015 name="construct.a.page8.rtic015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic015
            #add-point:ON ACTION controlp INFIELD rtic015 name="construct.c.page8.rtic015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic016
            #add-point:BEFORE FIELD rtic016 name="construct.b.page8.rtic016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic016
            
            #add-point:AFTER FIELD rtic016 name="construct.a.page8.rtic016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic016
            #add-point:ON ACTION controlp INFIELD rtic016 name="construct.c.page8.rtic016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic017
            #add-point:BEFORE FIELD rtic017 name="construct.b.page8.rtic017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic017
            
            #add-point:AFTER FIELD rtic017 name="construct.a.page8.rtic017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic017
            #add-point:ON ACTION controlp INFIELD rtic017 name="construct.c.page8.rtic017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic018
            #add-point:BEFORE FIELD rtic018 name="construct.b.page8.rtic018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic018
            
            #add-point:AFTER FIELD rtic018 name="construct.a.page8.rtic018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic018
            #add-point:ON ACTION controlp INFIELD rtic018 name="construct.c.page8.rtic018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic020
            #add-point:BEFORE FIELD rtic020 name="construct.b.page8.rtic020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic020
            
            #add-point:AFTER FIELD rtic020 name="construct.a.page8.rtic020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.rtic020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic020
            #add-point:ON ACTION controlp INFIELD rtic020 name="construct.c.page8.rtic020"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON xrcd007,xrcdld,xrcdseq,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104
           FROM s_detail9[1].xrcd007,s_detail9[1].xrcdld,s_detail9[1].xrcdseq,s_detail9[1].xrcd002,s_detail9[1].xrcd003, 
               s_detail9[1].xrcd006,s_detail9[1].xrcd004,s_detail9[1].xrcd104
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"
                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd007
            #add-point:BEFORE FIELD xrcd007 name="construct.b.page9.xrcd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd007
            
            #add-point:AFTER FIELD xrcd007 name="construct.a.page9.xrcd007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd007
            #add-point:ON ACTION controlp INFIELD xrcd007 name="construct.c.page9.xrcd007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdld
            #add-point:BEFORE FIELD xrcdld name="construct.b.page9.xrcdld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdld
            
            #add-point:AFTER FIELD xrcdld name="construct.a.page9.xrcdld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcdld
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdld
            #add-point:ON ACTION controlp INFIELD xrcdld name="construct.c.page9.xrcdld"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq
            #add-point:BEFORE FIELD xrcdseq name="construct.b.page9.xrcdseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq
            
            #add-point:AFTER FIELD xrcdseq name="construct.a.page9.xrcdseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcdseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq
            #add-point:ON ACTION controlp INFIELD xrcdseq name="construct.c.page9.xrcdseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page9.xrcd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd002
            #add-point:ON ACTION controlp INFIELD xrcd002 name="construct.c.page9.xrcd002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xrcd002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrcd002  #顯示到畫面上
            NEXT FIELD xrcd002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd002
            #add-point:BEFORE FIELD xrcd002 name="construct.b.page9.xrcd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd002
            
            #add-point:AFTER FIELD xrcd002 name="construct.a.page9.xrcd002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd003
            #add-point:BEFORE FIELD xrcd003 name="construct.b.page9.xrcd003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd003
            
            #add-point:AFTER FIELD xrcd003 name="construct.a.page9.xrcd003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcd003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd003
            #add-point:ON ACTION controlp INFIELD xrcd003 name="construct.c.page9.xrcd003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd006
            #add-point:BEFORE FIELD xrcd006 name="construct.b.page9.xrcd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd006
            
            #add-point:AFTER FIELD xrcd006 name="construct.a.page9.xrcd006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd006
            #add-point:ON ACTION controlp INFIELD xrcd006 name="construct.c.page9.xrcd006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd004
            #add-point:BEFORE FIELD xrcd004 name="construct.b.page9.xrcd004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd004
            
            #add-point:AFTER FIELD xrcd004 name="construct.a.page9.xrcd004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcd004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd004
            #add-point:ON ACTION controlp INFIELD xrcd004 name="construct.c.page9.xrcd004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd104
            #add-point:BEFORE FIELD xrcd104 name="construct.b.page9.xrcd104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd104
            
            #add-point:AFTER FIELD xrcd104 name="construct.a.page9.xrcd104"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.xrcd104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd104
            #add-point:ON ACTION controlp INFIELD xrcd104 name="construct.c.page9.xrcd104"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      CONSTRUCT g_wc2_table10 ON mmed014,mmed001,mmed002,mmed003,mmed005,mmed009,mmed010,mmed012,mmed013
           FROM s_detail5[1].mmed014_1,s_detail5[1].mmed001_1,s_detail5[1].mmed002_1,s_detail5[1].mmed003_1,
                s_detail5[1].mmed005_1,s_detail5[1].mmed009_1,
                s_detail5[1].mmed010_1,s_detail5[1].mmed012_1,s_detail5[1].mmed013_1
                      
         BEFORE CONSTRUCT

         ON ACTION controlp INFIELD mmed001_1
            #add-point:ON ACTION controlp INFIELD mmed001
            ### 儲值卡號查詢### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " mmaq006 IN('3','7') AND mmaq007 = 'Y' AND (mmaq005 IS NULL OR mmaq005 >= '",g_today,"')"
            CALL q_mmaq001_7()
            DISPLAY g_qryparam.return1 TO mmed001_1
            
         ON ACTION controlp INFIELD mmaq002_1
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaf001()                          
            DISPLAY g_qryparam.return1 TO mmaq002_1 
            NEXT FIELD mmaq002_1                    

         ON ACTION controlp INFIELD mmaq003_1
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mman001()
            DISPLAY g_qryparam.return1 TO mmaq003_1
            NEXT FIELD mmaq003_1     
    

         ON ACTION controlp INFIELD mmed014_1
            #add-point:ON ACTION controlp INFIELD mmed014_1
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                          
            DISPLAY g_qryparam.return1 TO mmed014_1
            NEXT FIELD mmed014_1

         ON ACTION controlp INFIELD mmed013_1
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5() 
            DISPLAY g_qryparam.return1 TO mmed013_1
            NEXT FIELD mmed013_1                     
            
      END CONSTRUCT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
                  
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
            INITIALIZE g_wc2_table8 TO NULL
 
            INITIALIZE g_wc2_table9 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtia_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmea_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtie_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "mmec_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "mmeb_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "mmed_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "gcbi_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtib_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtic_t" 
                     LET g_wc2_table8 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xrcd_t" 
                     LET g_wc2_table9 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
      
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION ammt405_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   DEFINE ls_result   STRING
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtiasite,rtiadocdt,rtiadocno,rtia002,rtia006
                          FROM s_browse[1].b_rtiasite,s_browse[1].b_rtiadocdt,s_browse[1].b_rtiadocno, 
                              s_browse[1].b_rtia002,s_browse[1].b_rtia006
 
         BEFORE CONSTRUCT
               DISPLAY ammt405_filter_parser('rtiasite') TO s_browse[1].b_rtiasite
            DISPLAY ammt405_filter_parser('rtiadocdt') TO s_browse[1].b_rtiadocdt
            DISPLAY ammt405_filter_parser('rtiadocno') TO s_browse[1].b_rtiadocno
            DISPLAY ammt405_filter_parser('rtia002') TO s_browse[1].b_rtia002
            DISPLAY ammt405_filter_parser('rtia006') TO s_browse[1].b_rtia006
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         DISPLAY '' TO s_browse[1].b_rtia002_desc
         DISPLAY '' TO s_browse[1].b_rtiasite_desc
         
         AFTER FIELD b_rtia006
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
            
         ON ACTION controlp INFIELD b_rtiasite
	         INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	         LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = "8" 
#            CALL q_ooed004() 
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'b_rtiasite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO b_rtiasite  
            NEXT FIELD b_rtiasite            

         ON ACTION controlp INFIELD b_rtiadocno
	         INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	         LET g_qryparam.reqry = FALSE
	         LET g_qryparam.where = " rtia000 = '",g_prog,"'"
            CALL q_rtiadocno()             
            DISPLAY g_qryparam.return1 TO b_rtiadocno 
            NEXT FIELD b_rtiadocno            

         ON ACTION controlp INFIELD b_rtia002
	         INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
	         LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_7()                     
            DISPLAY g_qryparam.return1 TO b_rtia002  
            NEXT FIELD b_rtia002   
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
            
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
                  
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt405_filter_show('rtiasite')
   CALL ammt405_filter_show('rtiadocdt')
   CALL ammt405_filter_show('rtiadocno')
   CALL ammt405_filter_show('rtia002')
   CALL ammt405_filter_show('rtia006')
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION ammt405_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
      
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION ammt405_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt405_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt405_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
      
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmea_d.clear()
   CALL g_mmea10_d.clear()
   CALL g_mmea2_d.clear()
   CALL g_mmea3_d.clear()
   CALL g_mmea4_d.clear()
   CALL g_mmea6_d.clear()
   CALL g_mmea7_d.clear()
   CALL g_mmea8_d.clear()
   CALL g_mmea9_d.clear()
 
   
   #add-point:query段other name="query.other"
      
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL ammt405_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL ammt405_browser_fill("")
      CALL ammt405_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt405_filter_show('rtiasite')
   CALL ammt405_filter_show('rtiadocdt')
   CALL ammt405_filter_show('rtiadocno')
   CALL ammt405_filter_show('rtia002')
   CALL ammt405_filter_show('rtia006')
   CALL ammt405_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL ammt405_fetch("F") 
      #顯示單身筆數
      CALL ammt405_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt405_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
      
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtia_m.rtiadocno = g_browser[g_current_idx].b_rtiadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL ammt405_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt405_set_act_visible()   
   CALL ammt405_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_rtia_m.rtiastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   IF g_rtia_m.rtiastus = 'X' THEN 
      CALL cl_set_act_visible("statechange",FALSE)
   ELSE
      CALL cl_set_act_visible("statechange",TRUE)
   END IF    
   IF NOT cl_bpm_chk() THEN    #此單據不需提交至BPM，則隱藏按鈕 
       CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
   #160604-00009#122
   CALL ammt405_set_act_visible()   
   CALL ammt405_set_act_no_visible()
   #160604-00009#122
   #end add-point  
   
                  CALL ammt405_isaf_t('s')
   
   #add-point:fetch結束前 name="fetch.after"
      
   #end add-point
   
   #保存單頭舊值
   LET g_rtia_m_t.* = g_rtia_m.*
   LET g_rtia_m_o.* = g_rtia_m.*
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #重新顯示   
   CALL ammt405_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.insert" >}
#+ 資料新增
PRIVATE FUNCTION ammt405_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_insert      LIKE type_t.num5 
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   CALL g_mmea5_d.clear()  
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmea_d.clear()   
   CALL g_mmea10_d.clear()  
   CALL g_mmea2_d.clear()  
   CALL g_mmea3_d.clear()  
   CALL g_mmea4_d.clear()  
   CALL g_mmea6_d.clear()  
   CALL g_mmea7_d.clear()  
   CALL g_mmea8_d.clear()  
   CALL g_mmea9_d.clear()  
 
 
   INITIALIZE g_rtia_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtiadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtia_m.rtiaownid = g_user
      LET g_rtia_m.rtiaowndp = g_dept
      LET g_rtia_m.rtiacrtid = g_user
      LET g_rtia_m.rtiacrtdp = g_dept 
      LET g_rtia_m.rtiacrtdt = cl_get_current()
      LET g_rtia_m.rtiamodid = g_user
      LET g_rtia_m.rtiamoddt = cl_get_current()
      LET g_rtia_m.rtiastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtia_m.rtia048 = "N"
      LET g_rtia_m.rtia050 = "N"
      LET g_rtia_m.rtia053 = "N"
      LET g_rtia_m.rtia056 = "N"
      LET g_rtia_m.rtiastus = "N"
      LET g_rtia_m.rtia030 = "N"
      LET g_rtia_m.rtia032 = "1"
      LET g_rtia_m.rtia039 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
#      LET g_rtia_m.rtiasite = g_site
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'rtiasite',g_rtia_m.rtiasite)
         RETURNING l_insert,g_rtia_m.rtiasite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_rtia_m.rtiadocdt = g_today
      LET g_sign = 'a'
      LET g_rtia_m.rtia004 = g_user
      SELECT ooef108 INTO g_rtia_m.rtia002
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_rtia_m.rtiasite
         AND ooefstus = 'Y'
      CALL ammt405_rtia002_display()
      SELECT ooag003 INTO g_rtia_m.rtia005
        FROM ooag_t
       WHERE ooagent = g_enterprise
         AND ooag001 = g_rtia_m.rtia004
         
#add by yangxf ---start----
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtia_m.rtia002
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtia_m.rtia002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtia_m.rtia002_desc
#add by yangxf -----end----
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtia_m.rtia004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_rtia_m.rtia004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtia_m.rtia004_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtia_m.rtia005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooeal003 FROM ooeal_t WHERE ooealent='"||g_enterprise||"' AND ooeal001=? AND ooeal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtia_m.rtia005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtia_m.rtia005_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtia_m.rtiasite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtia_m.rtiasite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtia_m.rtiasite_desc
      LET g_rtia_m_t.* = g_rtia_m.*
      
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_rtia_m.rtiasite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_rtia_m.rtiadocno = l_doctype
      #預設收銀員
      SELECT pcab001,pcab003 INTO g_rtia_m.rtia037,g_rtia_m.rtia037_desc
        FROM pcab_t,pcac_t
       WHERE pcabent = g_enterprise
         AND pcab002 = g_user
         AND pcacent = pcabent
         AND pcac001 = pcab001
         AND pcac002 = g_rtia_m.rtiasite
         AND pcacstus = 'Y'
         AND pcabstus = 'Y'
      DISPLAY BY NAME g_rtia_m.rtia037,g_rtia_m.rtia037_desc
      
      #160705-00042#11 160714 by sakura mark(S)
      ##20150702--add by dongsz--天和用
      #IF g_prog = 'ammt425' AND g_user = 'A20142719' THEN
      #   LET g_rtia_m.rtia048 = 'Y'
      #END IF
      ##20150702--add by dongsz--天和用
      #160705-00042#11 160714 by sakura mark(E)
      LET g_rtia_m.rtia053= "N"       #add by geza 20150727
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtia_m_t.* = g_rtia_m.*
      LET g_rtia_m_o.* = g_rtia_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL ammt405_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      LET g_sign = 't'
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtia_m.* TO NULL
         INITIALIZE g_mmea_d TO NULL
         INITIALIZE g_mmea10_d TO NULL
         INITIALIZE g_mmea2_d TO NULL
         INITIALIZE g_mmea3_d TO NULL
         INITIALIZE g_mmea4_d TO NULL
         INITIALIZE g_mmea6_d TO NULL
         INITIALIZE g_mmea7_d TO NULL
         INITIALIZE g_mmea8_d TO NULL
         INITIALIZE g_mmea9_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL ammt405_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_mmea_d.clear()
      #CALL g_mmea10_d.clear()
      #CALL g_mmea2_d.clear()
      #CALL g_mmea3_d.clear()
      #CALL g_mmea4_d.clear()
      #CALL g_mmea6_d.clear()
      #CALL g_mmea7_d.clear()
      #CALL g_mmea8_d.clear()
      #CALL g_mmea9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt405_set_act_visible()   
   CALL ammt405_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt405_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE ammt405_cl
   
   CALL ammt405_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
                  CALL ammt405_isaf_t('s')
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL ammt405_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia025_desc, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3, 
       g_rtia_m.amount4
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #功能已完成,通報訊息中心
   CALL ammt405_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.modify" >}
#+ 資料修改
PRIVATE FUNCTION ammt405_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_n          LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   #160818-00017#22 add-S
   IF NOT ammt405_action_chk() THEN
       RETURN
   END IF   
   #160818-00017#22 add-E
   
   IF g_rtia_m.rtia048 = 'Y' THEN
      #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "amm-00449"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "art-00374"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
      RETURN 
   END IF 
   #检查是否有收款资料
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM rtif_t
    WHERE rtifent = g_enterprise
      AND rtifdocno = g_rtia_m.rtiadocno   
   IF l_n > 0 THEN 
      #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "amm-00449"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "art-00397"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
      RETURN
   END IF  
   #add by yangxf ----start-----
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      LET l_n = 0
      #检查折扣明细是否存在人工折价
      SELECT COUNT(*) INTO l_n
        FROM rtic_t,rtib_t
       WHERE rticent = rtibent
         AND rticseq = rtibseq
         AND rticdocno = rtibdocno
         AND rtic002 = '10'
         AND rtibdocno = g_rtia_m.rtiadocno
      IF l_n > 0 THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'art-00609'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN 
      END IF 
   END IF 
   #add by yangxf ----end-----
   #end add-point
   
   #保存單頭舊值
   LET g_rtia_m_t.* = g_rtia_m.*
   LET g_rtia_m_o.* = g_rtia_m.*
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   CALL s_transaction_begin()
   
   OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
   
   #檢查是否允許此動作
   IF NOT ammt405_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL ammt405_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
                  CALL ammt405_isaf_t('s')
   
   #add-point:modify段show之前 name="modify.before_show"
   IF g_rtia_m.rtiastus = 'A' OR g_rtia_m.rtiastus = 'W'THEN 
      CALL s_transaction_end('N','0')
      RETURN 
   END IF 

   IF g_rtia_m.rtia048 = 'Y' THEN
      #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "amm-00449"
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "art-00374"
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

       END IF 
      CALL s_transaction_end('N','0')
      RETURN 
   END IF 

   LET l_n = 0
   #检查是否有付款资料
   SELECT COUNT(*) INTO l_n
     FROM rtif_t
    WHERE rtifent = g_enterprise
      AND rtifdocno = g_rtia_m.rtiadocno
   IF l_n > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'amm-00411'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN 
   END IF 
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
 
 
   
   CALL ammt405_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
 
 
    
   WHILE TRUE
      LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtia_m.rtiamodid = g_user 
LET g_rtia_m.rtiamoddt = cl_get_current()
LET g_rtia_m.rtiamodid_desc = cl_get_username(g_rtia_m.rtiamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      LET g_sign = 'u'
      IF g_rtia_m.rtiastus  MATCHES "[DR]" THEN 
         LET g_rtia_m.rtiastus = 'N'
         CALL s_transaction_end('N','0')
      END IF 
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL ammt405_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
                  LET g_sign = 't'
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtia_t SET (rtiamodid,rtiamoddt) = (g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt)
          WHERE rtiaent = g_enterprise AND rtiadocno = g_rtiadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtia_m.* = g_rtia_m_t.*
            CALL ammt405_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtia_m.rtiadocno != g_rtia_m_t.rtiadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
                  
         #end add-point
         
         #更新單身key值
         UPDATE mmea_t SET mmeadocno = g_rtia_m.rtiadocno
 
          WHERE mmeaent = g_enterprise AND mmeadocno = g_rtia_m_t.rtiadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
                  
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmea_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
                  
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
                  
         #end add-point
         
         UPDATE rtie_t
            SET rtiedocno = g_rtia_m.rtiadocno
 
          WHERE rtieent = g_enterprise AND
                rtiedocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtie_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
                  
         #end add-point
         
         UPDATE mmec_t
            SET mmecdocno = g_rtia_m.rtiadocno
 
          WHERE mmecent = g_enterprise AND
                mmecdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmec_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
                  
         #end add-point
         
         UPDATE mmeb_t
            SET mmebdocno = g_rtia_m.rtiadocno
 
          WHERE mmebent = g_enterprise AND
                mmebdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmeb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
                  
         #end add-point
         
         UPDATE mmed_t
            SET mmeddocno = g_rtia_m.rtiadocno
 
          WHERE mmedent = g_enterprise AND
                mmeddocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmed_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
                  
         #end add-point
         
         UPDATE gcbi_t
            SET gcbidocno = g_rtia_m.rtiadocno
 
          WHERE gcbient = g_enterprise AND
                gcbidocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "gcbi_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
                  
         #end add-point
         
         UPDATE rtib_t
            SET rtibdocno = g_rtia_m.rtiadocno
 
          WHERE rtibent = g_enterprise AND
                rtibdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtib_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update8"
                  
         #end add-point
         
         UPDATE rtic_t
            SET rticdocno = g_rtia_m.rtiadocno
 
          WHERE rticent = g_enterprise AND
                rticdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update8"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtic_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update8"
                  
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update9"
                  
         #end add-point
         
         UPDATE xrcd_t
            SET xrcddocno = g_rtia_m.rtiadocno
 
          WHERE xrcdent = g_enterprise AND
                xrcddocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update9"
                  
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xrcd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update9"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt405_set_act_visible()   
   CALL ammt405_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
   #填到對應位置
   CALL ammt405_browser_fill("")
 
   CLOSE ammt405_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt405_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="ammt405.input" >}
#+ 資料輸入
PRIVATE FUNCTION ammt405_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
         DEFINE l_sql            STRING
   DEFINE l_ooef004              LIKE ooef_t.ooef004
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_ooef019              LIKE ooef_t.ooef019
   DEFINE l_xrcd103              LIKE xrcd_t.xrcd103,
          l_xrcd104              LIKE xrcd_t.xrcd104,
          l_xrcd105              LIKE xrcd_t.xrcd105,
          l_xrcd113              LIKE xrcd_t.xrcd113,
          l_xrcd114              LIKE xrcd_t.xrcd114,
          l_xrcd115              LIKE xrcd_t.xrcd115,
          l_imaa005              LIKE imaa_t.imaa005
   DEFINE l_mmaq003              LIKE mmaq_t.mmaq003
   DEFINE l_mmaq002              LIKE mmaq_t.mmaq002
   DEFINE l_card_point           LIKE rtia_t.rtia016
   DEFINE r_success              LIKE type_t.num5
   DEFINE l_oodb011              LIKE oodb_t.oodb011
   DEFINE l_rtib021              LIKE rtib_t.rtib021
   DEFINE l_card                 LIKE mmea_t.mmea001
   DEFINE l_mman015              LIKE mman_t.mman015   
   DEFINE l_mman042              LIKE mman_t.mman042
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE l_mman069              LIKE mman_t.mman069
   DEFINE l_mman017              LIKE mman_t.mman017   #150609-00016#1--add by dongsz
   DEFINE l_t                    INT
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia025_desc, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3, 
       g_rtia_m.amount4
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
      
   #end add-point 
   LET g_forupd_sql = "SELECT mmeaseq,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006,mmea007,mmea008, 
       mmea009,mmea010,mmea011,mmea012,mmea013,mmea014,mmea015,mmea016 FROM mmea_t WHERE mmeaent=? AND  
       mmeadocno=? AND mmeaseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
      
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
      
   #end add-point    
   LET g_forupd_sql = "SELECT rtieseq,rtieseq1,rtie001,rtie002,rtie006 FROM rtie_t WHERE rtieent=? AND  
       rtiedocno=? AND rtieseq=? AND rtieseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
      
   #end add-point    
   LET g_forupd_sql = "SELECT mmecseq,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005,mmec006,mmec007, 
       mmec008,mmec009,mmec010,mmec011,mmec012,mmec013,mmec015 FROM mmec_t WHERE mmecent=? AND mmecdocno=?  
       AND mmecseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
      
   #end add-point    
   LET g_forupd_sql = "SELECT mmebseq,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005,mmeb006,mmeb007, 
       mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013,mmeb015 FROM mmeb_t WHERE mmebent=? AND mmebdocno=?  
       AND mmebseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
      
   #end add-point    
   LET g_forupd_sql = "SELECT mmedseq,mmed001,mmed002,mmed003,mmed004,mmed005,mmed006,mmed007,mmed008, 
       mmed009,mmed010,mmed012,mmed014,mmed013,mmed015,mmed016 FROM mmed_t WHERE mmedent=? AND mmeddocno=?  
       AND mmedseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
      
   #end add-point    
   LET g_forupd_sql = "SELECT gcbiseq,gcbiseq1,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005,gcbi009,gcbi006, 
       gcbi007,gcbi008 FROM gcbi_t WHERE gcbient=? AND gcbidocno=? AND gcbiseq=? AND gcbiseq1=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
      
   #end add-point    
   LET g_forupd_sql = "SELECT rtibseq,rtib003,rtib004,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013, 
       rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib028,rtib030,rtib039 FROM  
       rtib_t WHERE rtibent=? AND rtibdocno=? AND rtibseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl7 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql8"
      
   #end add-point    
   LET g_forupd_sql = "SELECT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
       rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020  
       FROM rtic_t WHERE rticent=? AND rticdocno=? AND rticseq=? AND rticseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql8"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql9"
      
   #end add-point    
   LET g_forupd_sql = "SELECT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104  
       FROM xrcd_t WHERE xrcdent=? AND xrcddocno=? AND xrcdld=? AND xrcdseq=? AND xrcdseq2=? AND xrcd007=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"
      
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt405_bcl9 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   LET g_forupd_sql = "SELECT mmedseq,mmed014,'',mmed001,'','',mmed002,mmed003,mmed005, 
       mmed009,mmed010,mmed012,mmed013 FROM mmed_t WHERE mmedent=? AND mmeddocno=? AND mmedseq=?  
       FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE ammt405_bcl10 CURSOR FROM g_forupd_sql
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt405_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   #add by yangxf ---start---
   IF NOT cl_null(g_rtia_m.rtia025) THEN 
      CALL ammt405_set_required()   
   END IF 
   LET g_no_chk = 'N'
   #add by yangxf ---end----
   #end add-point
   CALL ammt405_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056, 
       g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia026, 
       g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia036,g_rtia_m.rtia037, 
       g_rtia_m.rtia038
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   DISPLAY BY NAME g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia039,
                   g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,
                   g_rtia_m.rtia048
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtia_m.rtiaownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtia_m.rtiaownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtia_m.rtiaownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtia_m.rtiaowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooeal003 FROM ooeal_t WHERE ooealent='"||g_enterprise||"' AND ooeal001=? AND ooeal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtia_m.rtiaowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtia_m.rtiaowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtia_m.rtiacrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtia_m.rtiacrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtia_m.rtiacrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtia_m.rtiacrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooeal003 FROM ooeal_t WHERE ooealent='"||g_enterprise||"' AND ooeal001=? AND ooeal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtia_m.rtiacrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtia_m.rtiacrtdp_desc
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="ammt405.input.head" >}
      #單頭段
      INPUT BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004, 
          g_rtia_m.rtia005,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056, 
          g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia026, 
          g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia036,g_rtia_m.rtia037, 
          g_rtia_m.rtia038 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL ammt405_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
     
            #end add-point
            CALL ammt405_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiasite
            
            #add-point:AFTER FIELD rtiasite name="input.a.rtiasite"
            IF NOT cl_null(g_rtia_m.rtiasite) THEN
#               CALL ammt405_rtiasite_chk()
#               IF NOT cl_null(g_errno) THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = g_errno
#                  LET g_errparam.extend = ''
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#
#                  LET g_rtia_m.rtiasite = g_rtia_m_t.rtiasite
#                  NEXT FIELD rtiasite
#               END IF 
#               CALL cl_set_comp_entry("rtiasite",FALSE)
               CALL s_aooi500_chk(g_prog,'rtiasite',g_rtia_m.rtiasite,g_rtia_m.rtiasite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_rtia_m.rtiasite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtiasite = g_rtia_m_t.rtiasite
                  CALL s_desc_get_department_desc(g_rtia_m.rtiasite) RETURNING g_rtia_m.rtiasite_desc
                  DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc
                  NEXT FIELD CURRENT
               END IF   
               CALL ammt405_rtia002_display()
               LET g_site_flag = TRUE
               CALL ammt405_set_entry(p_cmd)
               CALL ammt405_set_no_entry(p_cmd)
            ELSE 
               NEXT FIELD rtiasite           
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtiasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtiasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtiasite_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiasite
            #add-point:BEFORE FIELD rtiasite name="input.b.rtiasite"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiasite
            #add-point:ON CHANGE rtiasite name="input.g.rtiasite"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocdt
            #add-point:BEFORE FIELD rtiadocdt name="input.b.rtiadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocdt
            
            #add-point:AFTER FIELD rtiadocdt name="input.a.rtiadocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiadocdt
            #add-point:ON CHANGE rtiadocdt name="input.g.rtiadocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocno
            #add-point:BEFORE FIELD rtiadocno name="input.b.rtiadocno"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocno
            
            #add-point:AFTER FIELD rtiadocno name="input.a.rtiadocno"
                                    #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtia_m.rtiadocno) THEN 
                LET l_ooef004 = ""
                SELECT ooef004 INTO l_ooef004
                  FROM ooef_t
                 WHERE ooef001 = g_rtia_m.rtiasite
                   AND ooefent = g_enterprise
               CALL s_aooi200_chk_slip(g_rtia_m.rtiasite,l_ooef004,g_rtia_m.rtiadocno,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtia_m.rtiadocno = g_rtiadocno_t
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtia_t WHERE "||"rtiaent = '" ||g_enterprise|| "' AND "||"rtiadocno = '"||g_rtia_m.rtiadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiadocno
            #add-point:ON CHANGE rtiadocno name="input.g.rtiadocno"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaunit
            #add-point:BEFORE FIELD rtiaunit name="input.b.rtiaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaunit
            
            #add-point:AFTER FIELD rtiaunit name="input.a.rtiaunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiaunit
            #add-point:ON CHANGE rtiaunit name="input.g.rtiaunit"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia004
            
            #add-point:AFTER FIELD rtia004 name="input.a.rtia004"
            IF NOT cl_null(g_rtia_m.rtia004) THEN 
               CALL ammt405_rtia004_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia004 = g_rtia_m_t.rtia004
                  NEXT FIELD rtia004
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia004_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia004
            #add-point:BEFORE FIELD rtia004 name="input.b.rtia004"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia004
            #add-point:ON CHANGE rtia004 name="input.g.rtia004"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia005
            
            #add-point:AFTER FIELD rtia005 name="input.a.rtia005"
            IF NOT cl_null(g_rtia_m.rtia005) THEN 
               CALL ammt405_rtia005_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia005 = g_rtia_m_t.rtia005
                  NEXT FIELD rtia005
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia005_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia005
            #add-point:BEFORE FIELD rtia005 name="input.b.rtia005"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia005
            #add-point:ON CHANGE rtia005 name="input.g.rtia005"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia001
            
            #add-point:AFTER FIELD rtia001 name="input.a.rtia001"
            IF NOT cl_null(g_rtia_m.rtia001) THEN 
               CALL ammt405_rtia001_chk()           
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia001 = g_rtia_m_t.rtia001
                  NEXT FIELD rtia001
               END IF
               LET l_n = 0
               SELECT COUNT(*) INTO l_n 
                 FROM gcbi_t
                WHERE gcbient = g_enterprise
                  AND gcbidocno = g_rtia_m.rtiadocno
               #IF (g_prog = 'agct405' OR g_prog = 'agct406') AND l_n > 0 THEN              #160705-00042#11 160714 by sakura mark 
               IF (g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406') AND l_n > 0 THEN   #160705-00042#11 160714 by sakura add
                  LET l_n = 0
                  IF NOT cl_null(g_rtia_m_t.rtia001) THEN 
                     #检查单身是否存在指定会员卡号
                     SELECT COUNT(*) INTO l_n
                       FROM gcbi_t
                      WHERE gcbient = g_enterprise
                        AND gcbidocno = g_rtia_m.rtiadocno
                        AND gcbi008 IN (SELECT DISTINCT mmaq003 FROM mmaq_t WHERE mmaq001 = g_rtia_m.rtia001
                                        AND mmaqent = g_enterprise #160905-00007#6 add
                                        )
                     IF l_n = 0 THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'amm-00435'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_rtia_m.rtia001 = g_rtia_m_t.rtia001
                        NEXT FIELD rtia001
                     END IF 
                  ELSE
                     INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'amm-00435'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     LET g_rtia_m.rtia001 = g_rtia_m_t.rtia001
                     NEXT FIELD rtia001
                  END IF 
               END IF 
               SELECT mmaq003 INTO l_mmaq003 
                 FROM mmaq_t
                WHERE mmaq001 = g_rtia_m.rtia001
                  AND mmaqent = g_enterprise
               #获取会员姓名及大宗客户编号
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = l_mmaq003
               CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008,mmaf016 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
               LET g_rtia_m.rtia001_desc = g_rtn_fields[1]
               LET g_rtia_m.rtia002 = g_rtn_fields[2]
               
               DISPLAY BY NAME g_rtia_m.rtia001_desc
               IF cl_null(g_rtia_m.rtia002) THEN 
                  #抓取销售据点对应的散客
                  SELECT ooef108 INTO g_rtia_m.rtia002
                    FROM ooef_t
                   WHERE ooefent = g_enterprise
                     AND ooef001 = g_rtia_m.rtiasite
               END IF 
               IF cl_null(g_rtia_m.rtia002) THEN 
                  LET g_rtia_m.rtia001 = g_rtia_m_t.rtia001
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'art-00223'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD rtia001
               ELSE
                  #客户带值
                  CALL ammt405_rtia002_display()
               END IF 
               #抓取客户名称
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtia_m.rtia002
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_rtia_m.rtia002_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc
               CALL cl_set_comp_entry("rtia002",FALSE)
            ELSE
               #IF (g_prog = 'agct405' OR g_prog = 'agct406') AND g_rec_b > 0 THEN              #160705-00042#11 160714 by sakura mark 
               IF (g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406') AND g_rec_b > 0 THEN   #160705-00042#11 160714 by sakura add
                  IF NOT cl_null(g_rtia_m_t.rtia001) THEN 
                     #检查单身是否存在指定会员卡号
                     INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'amm-00435'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     NEXT FIELD rtia001 
                  END IF 
               END IF
               LET g_rtia_m.rtia001_desc =  ''
               DISPLAY BY NAME g_rtia_m.rtia001_desc
               CALL cl_set_comp_entry("rtia002",TRUE)
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia001
            #add-point:BEFORE FIELD rtia001 name="input.b.rtia001"
                                    IF cl_null(g_rtia_m.rtiasite) THEN            
               NEXT FIELD rtiasite
            END IF 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia001
            #add-point:ON CHANGE rtia001 name="input.g.rtia001"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia002
            
            #add-point:AFTER FIELD rtia002 name="input.a.rtia002"
            IF NOT cl_null(g_rtia_m.rtia002) THEN 
#modify by yangxf ---start----
                INITIALIZE g_chkparam.* TO NULL
                LET g_errshow = '1'
                LET g_chkparam.arg1 = g_rtia_m.rtia002
                #160318-00025#48  2016/04/29  by pengxin  add(S)
                LET g_errshow = TRUE #是否開窗 
                LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
                #160318-00025#48  2016/04/29  by pengxin  add(E)
                IF NOT cl_chk_exist("v_pmaa001_10") THEN 
                   LET g_rtia_m.rtia002 = g_rtia_m_t.rtia002
                   NEXT FIELD rtia002
                END IF 
#               IF cl_null(g_rtia_m.rtia001) THEN 
#                  LET l_n = 0 
#                  SELECT COUNT(*) INTO l_n
#                    FROM ooef_t
#                   WHERE ooef108 = g_rtia_m.rtia002
#                     AND ooefent = g_enterprise
#                     AND ooef001 = g_rtia_m.rtiasite
#                  IF l_n = 0 THEN 
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = 'art-00223'
#                     LET g_errparam.extend = ''
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#
#                     NEXT FIELD rtia002
#                  END IF
#               END IF 
#modify by yangxf ----end-----
               #客户带值
               CALL ammt405_rtia002_display()
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia002
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia002_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia002
            #add-point:BEFORE FIELD rtia002 name="input.b.rtia002"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia002
            #add-point:ON CHANGE rtia002 name="input.g.rtia002"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia050
            #add-point:BEFORE FIELD rtia050 name="input.b.rtia050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia050
            
            #add-point:AFTER FIELD rtia050 name="input.a.rtia050"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia050
            #add-point:ON CHANGE rtia050 name="input.g.rtia050"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia053
            #add-point:BEFORE FIELD rtia053 name="input.b.rtia053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia053
            
            #add-point:AFTER FIELD rtia053 name="input.a.rtia053"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia053
            #add-point:ON CHANGE rtia053 name="input.g.rtia053"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia056
            #add-point:BEFORE FIELD rtia056 name="input.b.rtia056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia056
            
            #add-point:AFTER FIELD rtia056 name="input.a.rtia056"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia056
            #add-point:ON CHANGE rtia056 name="input.g.rtia056"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiastus
            #add-point:BEFORE FIELD rtiastus name="input.b.rtiastus"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiastus
            
            #add-point:AFTER FIELD rtiastus name="input.a.rtiastus"
                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiastus
            #add-point:ON CHANGE rtiastus name="input.g.rtiastus"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia007
            #add-point:BEFORE FIELD rtia007 name="input.b.rtia007"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia007
            
            #add-point:AFTER FIELD rtia007 name="input.a.rtia007"
            IF NOT cl_null(g_rtia_m.rtia007) THEN 
               CALL ammt405_rtia007_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_rtia_m.rtia007 = g_rtia_m_t.rtia007
                  NEXT FIELD rtia007
               END IF 
               CALL cl_set_comp_entry("rtia001,rtia002",FALSE)
            ELSE
               CALL cl_set_comp_entry("rtia001,rtia002",TRUE)
               IF NOT cl_null(g_rtia_m.rtia001) THEN 
                  CALL cl_set_comp_entry("rtia002",FALSE)
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia007
            #add-point:ON CHANGE rtia007 name="input.g.rtia007"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia009
            
            #add-point:AFTER FIELD rtia009 name="input.a.rtia009"
            IF NOT cl_null(g_rtia_m.rtia009) THEN 
               CALL ammt405_rtia009_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia009 = g_rtia_m_t.rtia009
                  NEXT FIELD rtia009
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='295' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia009_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia009
            #add-point:BEFORE FIELD rtia009 name="input.b.rtia009"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia009
            #add-point:ON CHANGE rtia009 name="input.g.rtia009"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia041
            #add-point:BEFORE FIELD rtia041 name="input.b.rtia041"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia041
            
            #add-point:AFTER FIELD rtia041 name="input.a.rtia041"
                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia041
            #add-point:ON CHANGE rtia041 name="input.g.rtia041"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia025
            
            #add-point:AFTER FIELD rtia025 name="input.a.rtia025"
            IF NOT cl_null(g_rtia_m.rtia025) THEN 
               CALL ammt405_rtia025_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia025 = g_rtia_m_t.rtia025
                  NEXT FIELD rtia025
               END IF 
                CALL ammt405_set_required()    #add by yangxf 根据收款条
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia025
            CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia025_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia025_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia025
            #add-point:BEFORE FIELD rtia025 name="input.b.rtia025"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia025
            #add-point:ON CHANGE rtia025 name="input.g.rtia025"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia026
            #add-point:BEFORE FIELD rtia026 name="input.b.rtia026"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia026
            
            #add-point:AFTER FIELD rtia026 name="input.a.rtia026"
            IF NOT cl_null(g_rtia_m.rtia026) THEN 
               CALL ammt405_rtia026_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia026 = g_rtia_m_t.rtia026
                  NEXT FIELD rtia026
               END IF 
               LET l_n = 0
               SELECT COUNT(*) INTO l_n
                 FROM rtib_t
                WHERE rtibent = g_enterprise
                  AND rtibdocno = g_rtia_m.rtiadocno
               IF l_n > 0 THEN 
                  #重新计算本币金额
                  UPDATE rtib_t SET rtib031 = rtib021 * g_rtia_m.rtia027
                   WHERE rtibent = g_enterprise
                     AND rtibdocno = g_rtia_m.rtiadocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "rtib_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET g_rtia_m.rtia026 = g_rtia_m_t.rtia026
                     NEXT FIELD rtia026
                  END IF    
                  #更新单头本币应收金额
                  UPDATE rtia_t SET rtia049 = (SELECT SUM(rtib031)
                                                 FROM rtib_t
                                                WHERE rtibent = g_enterprise
                                                  AND rtibdocno = g_rtia_m.rtiadocno)              
                   WHERE rtiaent = g_enterprise
                     AND rtiadocno = g_rtia_m.rtiadocno  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "rtia_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET g_rtia_m.rtia026 = g_rtia_m_t.rtia026
                     NEXT FIELD rtia026
                  END IF                     
               END IF 
            END IF 
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia026
            #add-point:ON CHANGE rtia026 name="input.g.rtia026"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia027
            #add-point:BEFORE FIELD rtia027 name="input.b.rtia027"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia027
            
            #add-point:AFTER FIELD rtia027 name="input.a.rtia027"
            IF NOT cl_null(g_rtia_m.rtia027) THEN 
               LET l_n = 0
               SELECT COUNT(*) INTO l_n
                 FROM rtib_t
                WHERE rtibent = g_enterprise
                  AND rtibdocno = g_rtia_m.rtiadocno
               IF l_n > 0 THEN 
                  #重新计算本币金额
                  UPDATE rtib_t SET rtib031 = rtib021 * g_rtia_m.rtia027
                   WHERE rtibent = g_enterprise
                     AND rtibdocno = g_rtia_m.rtiadocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "rtib_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET g_rtia_m.rtia027 = g_rtia_m_t.rtia027
                     NEXT FIELD rtia027
                  END IF    
                  #更新单头本币应收金额
                  UPDATE rtia_t SET rtia049 = (SELECT SUM(rtib031)
                                                 FROM rtib_t
                                                WHERE rtibent = g_enterprise
                                                  AND rtibdocno = g_rtia_m.rtiadocno)              
                   WHERE rtiaent = g_enterprise
                     AND rtiadocno = g_rtia_m.rtiadocno  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "rtia_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET g_rtia_m.rtia027 = g_rtia_m_t.rtia027
                     NEXT FIELD rtia027
                  END IF                     
               END IF 
            END IF 

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia027
            #add-point:ON CHANGE rtia027 name="input.g.rtia027"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia028
            #add-point:BEFORE FIELD rtia028 name="input.b.rtia028"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia028
            
            #add-point:AFTER FIELD rtia028 name="input.a.rtia028"
            IF NOT cl_null(g_rtia_m.rtia028) THEN 
               IF g_rtia_m.rtia028 != g_rtia_m_t.rtia028 AND g_rtia_m_t.rtia028 IS NOT NULL THEN 
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n
                    FROM xrcd_t
                   WHERE xrcdent = g_enterprise
                     AND xrcddocno = g_rtia_m.rtiadocno
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'amm-00444'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtia_m.rtia028 = g_rtia_m_t.rtia028
                     NEXT FIELD rtia028
                  END IF 
               END IF 
               CALL ammt405_rtia028_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia028 = g_rtia_m_t.rtia028
                  NEXT FIELD rtia028
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia028
            #add-point:ON CHANGE rtia028 name="input.g.rtia028"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia029
            #add-point:BEFORE FIELD rtia029 name="input.b.rtia029"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia029
            
            #add-point:AFTER FIELD rtia029 name="input.a.rtia029"
            IF NOT cl_null(g_rtia_m.rtia029) THEN 
               CALL ammt405_rtia029_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia029 = g_rtia_m_t.rtia029
                  NEXT FIELD rtia029
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia029
            #add-point:ON CHANGE rtia029 name="input.g.rtia029"
                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia030
            #add-point:BEFORE FIELD rtia030 name="input.b.rtia030"
                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia030
            
            #add-point:AFTER FIELD rtia030 name="input.a.rtia030"
                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia030
            #add-point:ON CHANGE rtia030 name="input.g.rtia030"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia036
            
            #add-point:AFTER FIELD rtia036 name="input.a.rtia036"
            IF NOT cl_null(g_rtia_m.rtia036) THEN 
               CALL ammt405_rtia036_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia036 = g_rtia_m_t.rtia036
                  NEXT FIELD rtia036
               END IF 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtia_m.rtia036
               CALL ap_ref_array2(g_ref_fields,"SELECT pcaal003 FROM pcaal_t WHERE pcaalent='"||g_enterprise||"' AND pcaalsite = '"||g_rtia_m.rtiasite||"' AND pcaal001=? AND pcaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_rtia_m.rtia036_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_rtia_m.rtia036_desc
            ELSE
               DISPLAY '' TO rtia036_desc
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia036
            #add-point:BEFORE FIELD rtia036 name="input.b.rtia036"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia036
            #add-point:ON CHANGE rtia036 name="input.g.rtia036"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia037
            
            #add-point:AFTER FIELD rtia037 name="input.a.rtia037"
            IF NOT cl_null(g_rtia_m.rtia037) THEN 
               CALL ammt405_rtia037_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia037 = g_rtia_m_t.rtia037
                  NEXT FIELD rtia037
               END IF 
               SELECT pcab003 INTO g_rtia_m.rtia037_desc
                 FROM pcab_t
                WHERE pcabent = g_enterprise
                  AND pcab001 = g_rtia_m.rtia037
            ELSE
               LET g_rtia_m.rtia037_desc = ''
            END IF
            DISPLAY BY NAME g_rtia_m.rtia037_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia037
            #add-point:BEFORE FIELD rtia037 name="input.b.rtia037"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia037
            #add-point:ON CHANGE rtia037 name="input.g.rtia037"
                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia038
            
            #add-point:AFTER FIELD rtia038 name="input.a.rtia038"
            IF NOT cl_null(g_rtia_m.rtia038) THEN 
               CALL ammt405_rtia038_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtia_m.rtia038
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtia_m.rtia038 = g_rtia_m_t.rtia038 
                  NEXT FIELD rtia038
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia038
            LET g_ref_fields[2] = g_rtia_m.rtiasite
            CALL ap_ref_array2(g_ref_fields,"SELECT oogd002 FROM oogd_t WHERE oogdent='"||g_enterprise||"' AND oogd001=? AND oogdsite=? ","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia038_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia038
            #add-point:BEFORE FIELD rtia038 name="input.b.rtia038"
                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia038
            #add-point:ON CHANGE rtia038 name="input.g.rtia038"
                        
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtiasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiasite
            #add-point:ON ACTION controlp INFIELD rtiasite name="input.c.rtiasite"
                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtia_m.rtiasite             #給予default值
#            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtiasite',g_rtia_m.rtiasite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()
            LET g_rtia_m.rtiasite = g_qryparam.return1      #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtiasite TO rtiasite           #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtiasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtiasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtiasite_desc
            NEXT FIELD rtiasite                             #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtiadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocdt
            #add-point:ON ACTION controlp INFIELD rtiadocdt name="input.c.rtiadocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtiadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocno
            #add-point:ON ACTION controlp INFIELD rtiadocno name="input.c.rtiadocno"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtiadocno             #給予default值
            LET l_ooef004 = ""
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_rtia_m.rtiasite
               AND ooefent = g_enterprise
            #給予arg
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_rtia_m.rtiadocno = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtiadocno TO rtiadocno       #顯示到畫面上
            NEXT FIELD rtiadocno                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtiaunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaunit
            #add-point:ON ACTION controlp INFIELD rtiaunit name="input.c.rtiaunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtia004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia004
            #add-point:ON ACTION controlp INFIELD rtia004 name="input.c.rtia004"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia004             #給予default值
            #給予arg
            CALL q_ooag001()                                #呼叫開窗
            LET g_rtia_m.rtia004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia004 TO rtia004              #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia004_desc
            NEXT FIELD rtia004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtia005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia005
            #add-point:ON ACTION controlp INFIELD rtia005 name="input.c.rtia005"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia005             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_today
            CALL q_ooeg001()                                #呼叫開窗
            LET g_rtia_m.rtia005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia005 TO rtia005              #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia005_desc
            NEXT FIELD rtia005                              #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.rtia001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia001
            #add-point:ON ACTION controlp INFIELD rtia001 name="input.c.rtia001"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia001             #給予default值
            #給予arg
            CALL q_mmaq001_3()                                #呼叫開窗
            LET g_rtia_m.rtia001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia001 TO rtia001  #顯示到畫面上
            SELECT mmaq003 INTO l_mmaq003 
              FROM mmaq_t
             WHERE mmaq001 = g_rtia_m.rtia001
               AND mmaqent = g_enterprise
            #获取会员姓名及大宗客户编号
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = l_mmaq003
            CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008,mmaf016 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia001_desc = '', g_rtn_fields[1] , ''
            LET g_rtia_m.rtia002 = '',g_rtn_fields[2] , ''
            DISPLAY BY NAME g_rtia_m.rtia001_desc,g_rtia_m.rtia002
            NEXT FIELD rtia001                   #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtia002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia002
            #add-point:ON ACTION controlp INFIELD rtia002 name="input.c.rtia002"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
#mark by yangxf ---start---
#			IF NOT cl_null(g_rtia_m.rtiasite) THEN 
#               LET g_qryparam.where = " ooef001 = '",g_rtia_m.rtiasite,"'"
#            END IF 
#mark by yangxf ---end----
            LET g_qryparam.default1 = g_rtia_m.rtia002         #給予default值

            #給予arg

            CALL q_pmaa001_13()                                #呼叫開窗

            LET g_rtia_m.rtia002 = g_qryparam.return1       #將開窗取得的值回傳到
            DISPLAY g_rtia_m.rtia002 TO rtia002             #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia002
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia002_desc
            NEXT FIELD rtia002                              #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtia050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia050
            #add-point:ON ACTION controlp INFIELD rtia050 name="input.c.rtia050"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtia053
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia053
            #add-point:ON ACTION controlp INFIELD rtia053 name="input.c.rtia053"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtia056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia056
            #add-point:ON ACTION controlp INFIELD rtia056 name="input.c.rtia056"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtiastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiastus
            #add-point:ON ACTION controlp INFIELD rtiastus name="input.c.rtiastus"
                        
            #END add-point
 
 
         #Ctrlp:input.c.rtia007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia007
            #add-point:ON ACTION controlp INFIELD rtia007 name="input.c.rtia007"
                                    #開窗i段
	         INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
	         LET g_qryparam.reqry = FALSE
	         LET g_qryparam.default1 = g_rtia_m.rtia007      #給予default值
	         #modify by yangxf ---start----
	         #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
	         IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
	            LET g_qryparam.where = " rtil000 = 'artt500' AND rtil042 = '2' AND rtilstus = 'Y' "
               CALL q_rtildocno()   
	         END IF 
	         #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
	         IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
	            LET g_qryparam.where = " rtil000 = 'artt500' AND rtil042 = '3' AND rtilstus = 'Y' "
               CALL q_rtildocno()   
	         END IF 
	         #IF g_prog = 'agct406' THEN         #160705-00042#11 160714 by sakura mark
	         IF g_prog MATCHES 'agct406' THEN    #160705-00042#11 160714 by sakura add
	            LET g_qryparam.where = " rtia000 = 'agct405' AND rtiastus = 'S' AND rtiasite = '",g_rtia_m.rtiasite,"'"
               CALL q_rtiadocno() 
	         END IF 
	         #IF g_prog = 'ammt429' THEN         #160705-00042#11 160714 by sakura mark
	         IF g_prog MATCHES 'ammt429' THEN    #160705-00042#11 160714 by sakura add
	            LET l_n = 0
	            SELECT COUNT(*) INTO l_n
	              FROM rtia_t
	             WHERE rtiaent = g_enterprise
	               AND rtia000 = 'ammt429'
	            IF l_n > 0 THEN 
	               LET g_qryparam.where = " rtia000 = 'ammt425' AND rtiastus = 'S' AND rtiasite = '",g_rtia_m.rtiasite,"'",
	                                      " AND rtiadocno NOT IN(SELECT rtia007 FROM rtia_t WHERE rtiaent = '",g_enterprise,"'",
	                                      "                         AND rtia000 = 'ammt429') "
	            ELSE
	               LET g_qryparam.where = " rtia000 = 'ammt425' AND rtiastus = 'S' AND rtiasite = '",g_rtia_m.rtiasite,"'"
	            END IF 
	            CALL q_rtiadocno()   
	         END IF 
	         #modify by yangxf ---end----
            LET g_rtia_m.rtia007 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia007 TO rtia007             #顯示到畫面上
            NEXT FIELD rtia007                              #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtia009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia009
            #add-point:ON ACTION controlp INFIELD rtia009 name="input.c.rtia009"
                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia009             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '295'
            CALL q_oocq002()                                #呼叫開窗
            LET g_rtia_m.rtia009 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia009 TO rtia009              #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='295' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia009_desc
            NEXT FIELD rtia009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtia041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia041
            #add-point:ON ACTION controlp INFIELD rtia041 name="input.c.rtia041"
                        
            #END add-point
 
 
         #Ctrlp:input.c.rtia025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia025
            #add-point:ON ACTION controlp INFIELD rtia025 name="input.c.rtia025"
                        			
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.default1 = g_rtia_m.rtia025
			   #IF g_prog = 'agct405' OR g_prog = 'agct406' THEN              #160705-00042#11 160714 by sakura mark 
			   IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
			      LET g_qryparam.arg1 = g_rtia_m.rtia002
			      LET g_qryparam.arg2 = '2'
                  CALL q_pmad002()
            ELSE
			      LET g_qryparam.arg1 = '2'
                  CALL q_pmad002_1()
            END IF 
            LET g_rtia_m.rtia025 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia025 TO rtia025 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia025
            CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia025_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia025_desc
            #END add-point
 
 
         #Ctrlp:input.c.rtia026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia026
            #add-point:ON ACTION controlp INFIELD rtia026 name="input.c.rtia026"
                        			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.default1 = g_rtia_m.rtia026
			LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_ooaj002_2()
            LET g_rtia_m.rtia026 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_rtia_m.rtia026 TO rtia026
            #END add-point
 
 
         #Ctrlp:input.c.rtia027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia027
            #add-point:ON ACTION controlp INFIELD rtia027 name="input.c.rtia027"
                        
            #END add-point
 
 
         #Ctrlp:input.c.rtia028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia028
            #add-point:ON ACTION controlp INFIELD rtia028 name="input.c.rtia028"
                                    ### 稅別### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia028
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_oodb002_10()
            LET g_rtia_m.rtia028 = g_qryparam.return1
            LET g_rtia_m.rtia029 = g_qryparam.return2
            LET g_rtia_m.rtia030 = g_qryparam.return3
            DISPLAY BY NAME g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030
            
            ### 客戶對象慣用交易稅別### end ###

            #END add-point
 
 
         #Ctrlp:input.c.rtia029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia029
            #add-point:ON ACTION controlp INFIELD rtia029 name="input.c.rtia029"
                        
            #END add-point
 
 
         #Ctrlp:input.c.rtia030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia030
            #add-point:ON ACTION controlp INFIELD rtia030 name="input.c.rtia030"
                        
            #END add-point
 
 
         #Ctrlp:input.c.rtia036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia036
            #add-point:ON ACTION controlp INFIELD rtia036 name="input.c.rtia036"
                                    ### 收銀機號開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia036
            LET g_qryparam.where = "1=1 AND pcaastus = 'Y' "
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_pcaa001_1()
            LET g_rtia_m.rtia036 = g_qryparam.return1
            DISPLAY g_rtia_m.rtia036 TO rtia036
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia036
            CALL ap_ref_array2(g_ref_fields,"SELECT pcaal003 FROM pcaal_t WHERE pcaalent='"||g_enterprise||"' AND pcaalsite = '"||g_rtia_m.rtiasite||"' AND pcaal001=? AND pcaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia036_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia036_desc
            ### 收銀機號開窗### end ###
            #END add-point
 
 
         #Ctrlp:input.c.rtia037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia037
            #add-point:ON ACTION controlp INFIELD rtia037 name="input.c.rtia037"
                        			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtia_m.rtia037             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_rtia_m.rtiasite 
            LET g_qryparam.arg2 = g_rtia_m.rtia036
            CALL q_pcab001_1()                                #呼叫開窗
            LET g_rtia_m.rtia037 = g_qryparam.return1         #將開窗取得的值回傳到變數
            LET g_rtia_m.rtia037_desc = g_qryparam.return2
            DISPLAY g_rtia_m.rtia037 TO rtia037              #顯示到畫面上
            DISPLAY g_rtia_m.rtia037_desc TO rtia037_desc
            NEXT FIELD rtia037   
            #END add-point
 
 
         #Ctrlp:input.c.rtia038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia038
            #add-point:ON ACTION controlp INFIELD rtia038 name="input.c.rtia038"
            ### 班別編號開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = "1=1"
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_oogd001_02()
            LET g_rtia_m.rtia038 = g_qryparam.return1
            DISPLAY g_rtia_m.rtia038 TO rtia038
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtia_m.rtia038
            LET g_ref_fields[2] = g_rtia_m.rtiasite
            CALL ap_ref_array2(g_ref_fields,"SELECT oogd002 FROM oogd_t WHERE oogdent='"||g_enterprise||"' AND oogd001=? AND oogdsite=? ","") RETURNING g_rtn_fields
            LET g_rtia_m.rtia038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtia_m.rtia038_desc
            ### 班別編號開窗### end ###

            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtia_m.rtiadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_rtia_m.rtiasite,g_rtia_m.rtiadocno,g_rtia_m.rtiadocdt,g_prog) RETURNING l_success,g_rtia_m.rtiadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_rtia_m.rtiadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD rtiadocno
               END IF
               LET g_rtia_m.rtia033 = g_rtia_m.rtiadocno
               LET g_rtia_m.rtia034 = g_today
               LET g_rtia_m.rtia035 = cl_get_time()
               DISPLAY BY NAME g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035
               LET g_rtia_m.rtiaunit = g_rtia_m.rtiasite   #161024-00025#7  2016/10/24 by 08742 add
               #end add-point
               
               INSERT INTO rtia_t (rtiaent,rtiasite,rtiadocdt,rtiadocno,rtiaunit,rtia004,rtia005,rtia006, 
                   rtia048,rtia001,rtia002,rtia050,rtia053,rtia056,rtiastus,rtia007,rtia009,rtia014, 
                   rtia015,rtia041,rtia025,rtia026,rtia027,rtia028,rtia029,rtia030,rtia032,rtia033,rtia034, 
                   rtia035,rtia036,rtia037,rtia038,rtia039,rtiaownid,rtiaowndp,rtiacrtid,rtiacrtdp,rtiacrtdt, 
                   rtiamodid,rtiamoddt,rtiacnfid,rtiacnfdt,rtiapstid,rtiapstdt)
               VALUES (g_enterprise,g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit, 
                   g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia001, 
                   g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
                   g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041, 
                   g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
                   g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035, 
                   g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid, 
                   g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid, 
                   g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt)  
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtia_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"

               UPDATE rtia_t SET rtia000 = g_prog,
                                 rtiaunit = g_rtia_m.rtiasite
                WHERE rtiadocno = g_rtia_m.rtiadocno
                  AND rtiaent = g_enterprise
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "g_rtia_m"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
  
                   CALL s_transaction_end('N','0')
                   CONTINUE DIALOG
                END IF
               #end add-point
               
                              CALL ammt405_isaf_t('i')
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
                              
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt405_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL ammt405_b_fill()
                  CALL ammt405_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               #新增单身资料
               #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark 
               IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
                  CALL ammt405_rtib_ins_ammt429()
                  CALL ammt405_b_fill()
               END IF 
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
                              
               #end add-point
               
               #將遮罩欄位還原
               CALL ammt405_rtia_t_mask_restore('restore_mask_o')
               
               UPDATE rtia_t SET (rtiasite,rtiadocdt,rtiadocno,rtiaunit,rtia004,rtia005,rtia006,rtia048, 
                   rtia001,rtia002,rtia050,rtia053,rtia056,rtiastus,rtia007,rtia009,rtia014,rtia015, 
                   rtia041,rtia025,rtia026,rtia027,rtia028,rtia029,rtia030,rtia032,rtia033,rtia034,rtia035, 
                   rtia036,rtia037,rtia038,rtia039,rtiaownid,rtiaowndp,rtiacrtid,rtiacrtdp,rtiacrtdt, 
                   rtiamodid,rtiamoddt,rtiacnfid,rtiacnfdt,rtiapstid,rtiapstdt) = (g_rtia_m.rtiasite, 
                   g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005, 
                   g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050, 
                   g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009, 
                   g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia026, 
                   g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
                   g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037, 
                   g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
                   g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid, 
                   g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt)
                WHERE rtiaent = g_enterprise AND rtiadocno = g_rtiadocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtia_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
                              
               #end add-point
               
                              CALL ammt405_isaf_t('u')
               
               
               #將遮罩欄位進行遮蔽
               CALL ammt405_rtia_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
                              
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="ammt405.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmea_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt405_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_mmea_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            LET l_t=0
            SELECT count(*)  INTO l_t FROM mmea_t 
            WHERE mmeaent=g_enterprise AND mmeadocno=g_rtia_m.rtiadocno
            IF l_t=0 THEN
               IF cl_ask_confirm('amm-00768') THEN
                 CALL ammt405_01(g_rtia_m.rtiasite,g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia026,
                  g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia034,g_rtia_m.rtia035)
                  CALL ammt405_b_fill()
                  LET INT_FLAG = 0 
                END IF 
            END IF 


            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmea_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea_d[l_ac].mmeaseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmea_d_t.* = g_mmea_d[l_ac].*  #BACKUP
               LET g_mmea_d_o.* = g_mmea_d[l_ac].*  #BACKUP
               CALL ammt405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               #對應卡種记名卡,可储值
                
               IF NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
                  LET l_card = g_mmea_d[l_ac].mmea001
               ELSE
                  LET l_card = g_mmea_d[l_ac].mmea002
               END IF 
               SELECT mman015,mman042,mman069
                 INTO l_mman015,l_mman042,l_mman069
                 FROM mman_t,mmaq_t
                WHERE mmaqent = mmanent
                  AND mmaq001 = l_card
                  AND mman001 = mmaq002
               IF l_mman015 = 'Y' THEN 
                  CALL cl_set_comp_entry("mmea004",TRUE)
               ELSE
                  IF g_mmea_d[l_ac].mmea008 >= l_mman069 AND l_mman069>0 THEN    ##160604-00009#65 
                     CALL cl_set_comp_entry("mmea004",TRUE)
                  ELSE
                     CALL cl_set_comp_entry("mmea004",FALSE)
                  END IF 
               END IF 
               IF l_mman042 = 'Y' THEN 
                  CALL cl_set_comp_entry("mmea008,mmea010",TRUE)
               ELSE
                  CALL cl_set_comp_entry("mmea008,mmea010",FALSE)
               END IF 
               #end add-point  
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("mmea_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl INTO g_mmea_d[l_ac].mmeaseq,g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002, 
                      g_mmea_d[l_ac].mmea003,g_mmea_d[l_ac].mmea004,g_mmea_d[l_ac].mmea005,g_mmea_d[l_ac].mmea006, 
                      g_mmea_d[l_ac].mmea007,g_mmea_d[l_ac].mmea008,g_mmea_d[l_ac].mmea009,g_mmea_d[l_ac].mmea010, 
                      g_mmea_d[l_ac].mmea011,g_mmea_d[l_ac].mmea012,g_mmea_d[l_ac].mmea013,g_mmea_d[l_ac].mmea014, 
                      g_mmea_d[l_ac].mmea015,g_mmea_d[l_ac].mmea016
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_mmea_d_t.mmeaseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmea_d_mask_o[l_ac].* =  g_mmea_d[l_ac].*
                  CALL ammt405_mmea_t_mask()
                  LET g_mmea_d_mask_n[l_ac].* =  g_mmea_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF l_cmd = 'u' THEN
               SELECT mman009,mman010
                 INTO g_mmea_d[l_ac].mmak009,g_mmea_d[l_ac].mmak010
                 FROM mman_t,mmaq_t
                WHERE mmaqent = mmanent
                  AND mmaq001 = g_mmea_d[l_ac].mmea001
                  AND mman001 = mmaq002
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea_d[l_ac].mmea003
               CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea_d[l_ac].mmea003_desc = '', g_rtn_fields[1] , ''
            END IF 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea_d[l_ac].* TO NULL 
            INITIALIZE g_mmea_d_t.* TO NULL 
            INITIALIZE g_mmea_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_mmea_d[l_ac].mmak009 = "1"
      LET g_mmea_d[l_ac].mmak010 = "0"
      LET g_mmea_d[l_ac].mmea014 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            #add by yangxf ---start----
            IF g_set_comp = 'Y' THEN 
               CANCEL INSERT 
            END IF 
            #add by yangxf ---end------
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea_d[l_ac].mmea013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            
            #end add-point
            LET g_mmea_d_t.* = g_mmea_d[l_ac].*     #新輸入資料
            LET g_mmea_d_o.* = g_mmea_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            LET g_mmea_d[l_ac].mmea008 = 0
            CALL cl_set_comp_entry("mmea004",TRUE)
            CALL cl_set_comp_entry("mmea008",TRUE)            
            #end add-point
            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea_d[li_reproduce_target].* = g_mmea_d[li_reproduce].*
 
               LET g_mmea_d[li_reproduce_target].mmeaseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(mmeaseq)+1 INTO g_mmea_d[l_ac].mmeaseq
              FROM mmea_t
             WHERE mmeaent = g_enterprise
               AND mmeadocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea_d[l_ac].mmeaseq) THEN 
               LET g_mmea_d[l_ac].mmeaseq = 1
            END IF 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
                      
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmea_t 
             WHERE mmeaent = g_enterprise AND mmeadocno = g_rtia_m.rtiadocno
 
               AND mmeaseq = g_mmea_d[l_ac].mmeaseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
                              
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea_d[g_detail_idx].mmeaseq
               CALL ammt405_insert_b('mmea_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
 
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_mmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt405_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF
               CALL ammt405_b_fill()
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #add by yangxf ---start----
               IF g_set_comp = 'Y' THEN 
                  CANCEL DELETE 
               END IF 
               #add by yangxf ---end------
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_mmea_d_t.mmeaseq
 
            
               #刪除同層單身
               IF NOT ammt405_delete_b('mmea_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt405_key_delete_b(gs_keys,'mmea_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
                              
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt405_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
                  
               #end add-point
               LET l_count = g_mmea_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
                        
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmea_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeaseq
            #add-point:BEFORE FIELD mmeaseq name="input.b.page1.mmeaseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeaseq
            
            #add-point:AFTER FIELD mmeaseq name="input.a.page1.mmeaseq"
            #此段落由子樣板a05產生
            IF  g_rtia_m.rtiadocno IS NOT NULL AND g_mmea_d[g_detail_idx].mmeaseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t OR g_mmea_d[g_detail_idx].mmeaseq != g_mmea_d_t.mmeaseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmea_t WHERE "||"mmeaent = '" ||g_enterprise|| "' AND "||"mmeadocno = '"||g_rtia_m.rtiadocno ||"' AND "|| "mmeaseq = '"||g_mmea_d[g_detail_idx].mmeaseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeaseq
            #add-point:ON CHANGE mmeaseq name="input.g.page1.mmeaseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea001
            #add-point:BEFORE FIELD mmea001 name="input.b.page1.mmea001"
            IF cl_null(g_mmea_d[l_ac].mmea001) AND NOT cl_null(g_mmea_d[l_ac].mmea002) THEN 
               LET g_mmea_d[l_ac].mmea001 = g_mmea_d[l_ac].mmea002
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea001
            
            #add-point:AFTER FIELD mmea001 name="input.a.page1.mmea001"
            IF NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
               CALL ammt405_mmea001_chk(g_mmea_d[l_ac].mmea001)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  #LET g_mmea_d[l_ac].mmea001 = g_mmea_d_t.mmea001 #160824-00007#123 by sakura mark
                  LET g_mmea_d[l_ac].mmea001 = g_mmea_d_o.mmea001  #160824-00007#123 by sakura add
                  NEXT FIELD mmea001
               END IF
               #检查重复
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea_d[l_ac].mmea001 != g_mmea_d_t.mmea001) THEN #160824-00007#123 by sakura mark
               IF g_mmea_d[l_ac].mmea001 != g_mmea_d_o.mmea001 OR cl_null(g_mmea_d_o.mmea001) THEN #160824-00007#123 by sakura add
                  CALL ammt405_mmea001_mmea002_key(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002,l_cmd)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea001 = g_mmea_d_t.mmea001 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea001 = g_mmea_d_o.mmea001  #160824-00007#123 by sakura add
                     NEXT FIELD mmea001
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea_d[l_ac].mmea002) THEN 
                  CALL ammt405_mmea001_mmea002_chk(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea001 = g_mmea_d_t.mmea001 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea001 = g_mmea_d_o.mmea001  #160824-00007#123 by sakura add
                     NEXT FIELD mmea001
                  END IF
               END IF
               IF g_mmea_d[l_ac].mmea008 > 0 THEN 
                  CALL ammt405_mmea008_chk()
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea001 = g_mmea_d_t.mmea001 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea001 = g_mmea_d_o.mmea001  #160824-00007#123 by sakura add
                     NEXT FIELD mmea001
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea_d[l_ac].mmea008) THEN 
                  CALL ammt405_mmea008_display() RETURNING r_success
                  IF NOT r_success THEN 
                     #LET g_mmea_d[l_ac].mmea001 = g_mmea_d_t.mmea001 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea001 = g_mmea_d_o.mmea001  #160824-00007#123 by sakura add
                     NEXT FIELD mmea001
                  END IF 
               END IF  
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea_d[l_ac].mmea001 != g_mmea_d_t.mmea001) THEN #160824-00007#123 by sakura mark
               IF g_mmea_d[l_ac].mmea001 != g_mmea_d_o.mmea001 OR cl_null(g_mmea_d_o.mmea001) THEN #160824-00007#123 by sakura add
                  CALL ammt405_mmea001_display(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               END IF 
            END IF
            LET g_mmea_d_o.* = g_mmea_d[l_ac].*  #160824-00007#123 by sakura add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea001
            #add-point:ON CHANGE mmea001 name="input.g.page1.mmea001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea002
            #add-point:BEFORE FIELD mmea002 name="input.b.page1.mmea002"
            IF cl_null(g_mmea_d[l_ac].mmea002) AND NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
               LET g_mmea_d[l_ac].mmea002 = g_mmea_d[l_ac].mmea001
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea002
            
            #add-point:AFTER FIELD mmea002 name="input.a.page1.mmea002"
            IF NOT cl_null(g_mmea_d[l_ac].mmea002) THEN 
               CALL ammt405_mmea001_chk(g_mmea_d[l_ac].mmea002)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  #LET g_mmea_d[l_ac].mmea002 = g_mmea_d_t.mmea002 #160824-00007#123 by sakura mark
                  LET g_mmea_d[l_ac].mmea002 = g_mmea_d_o.mmea002  #160824-00007#123 by sakura add
                  NEXT FIELD mmea002
               END IF
               #检查重复
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea_d[l_ac].mmea002 != g_mmea_d_t.mmea002) THEN #160824-00007#123 by sakura mark
               IF g_mmea_d[l_ac].mmea002 != g_mmea_d_o.mmea002 OR cl_null(g_mmea_d_o.mmea002) THEN #160824-00007#123 by sakura add
                  CALL ammt405_mmea001_mmea002_key(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002,l_cmd)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea002 = g_mmea_d_t.mmea002 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea002 = g_mmea_d_o.mmea002  #160824-00007#123 by sakura add
                     NEXT FIELD mmea002
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
                  CALL ammt405_mmea001_mmea002_chk(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea002 = g_mmea_d_t.mmea002 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea002 = g_mmea_d_o.mmea002  #160824-00007#123 by sakura add
                     NEXT FIELD mmea002
                  END IF 
               END IF 
               IF g_mmea_d[l_ac].mmea008 > 0 THEN 
                  CALL ammt405_mmea008_chk()
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea_d[l_ac].mmea002 = g_mmea_d_t.mmea002 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea002 = g_mmea_d_o.mmea002  #160824-00007#123 by sakura add
                     NEXT FIELD mmea002
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea_d[l_ac].mmea008) THEN 
                  CALL ammt405_mmea008_display() RETURNING r_success
                  IF NOT r_success THEN 
                     #LET g_mmea_d[l_ac].mmea002 = g_mmea_d_t.mmea002 #160824-00007#123 by sakura mark
                     LET g_mmea_d[l_ac].mmea002 = g_mmea_d_o.mmea002  #160824-00007#123 by sakura add
                     NEXT FIELD mmea002
                  END IF 
               END IF                
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea_d[l_ac].mmea002 != g_mmea_d_t.mmea002) THEN #160824-00007#123 by sakura mark
               IF g_mmea_d[l_ac].mmea002 != g_mmea_d_o.mmea002 OR cl_null(g_mmea_d_o.mmea002) THEN #160824-00007#123 by sakura add
                  CALL ammt405_mmea001_display(g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               END IF 
            END IF
            LET g_mmea_d_o.* = g_mmea_d[l_ac].*  #160824-00007#123 by sakura add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea002
            #add-point:ON CHANGE mmea002 name="input.g.page1.mmea002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea004
            #add-point:BEFORE FIELD mmea004 name="input.b.page1.mmea004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea004
            
            #add-point:AFTER FIELD mmea004 name="input.a.page1.mmea004"
            IF NOT cl_null(g_mmea_d[l_ac].mmea004) THEN 
               CALL ammt405_mmea004_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea_d[l_ac].mmea004 = g_mmea_d_t.mmea004
                  NEXT FIELD mmea004
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea004
            #add-point:ON CHANGE mmea004 name="input.g.page1.mmea004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmea_d[l_ac].mmea006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mmea006
            END IF 
 
 
 
            #add-point:AFTER FIELD mmea006 name="input.a.page1.mmea006"
            IF NOT cl_null(g_mmea_d[l_ac].mmea006) THEN 
               LET g_mmea_d[l_ac].mmea007 = g_mmea_d[l_ac].mmea006*g_mmea_d[l_ac].mmea005
               LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea007 + (g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100))*g_mmea_d[l_ac].mmea005
               DISPLAY BY NAME g_mmea_d[l_ac].mmea007
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea006
            #add-point:BEFORE FIELD mmea006 name="input.b.page1.mmea006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea006
            #add-point:ON CHANGE mmea006 name="input.g.page1.mmea006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea008
            #add-point:BEFORE FIELD mmea008 name="input.b.page1.mmea008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea008
            
            #add-point:AFTER FIELD mmea008 name="input.a.page1.mmea008"
            IF NOT cl_null(g_mmea_d[l_ac].mmea008) THEN 
               IF g_mmea_d[l_ac].mmea008 < 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00005'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea_d[l_ac].mmea008 = g_mmea_d_t.mmea008
                  NEXT FIELD mmea008
               END IF 
               CALL ammt405_mmea008_chk() 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea_d[l_ac].mmea008 = g_mmea_d_t.mmea008
                  NEXT FIELD mmea008
               END IF 
               CALL ammt405_mmea008_display() RETURNING r_success
               IF NOT r_success THEN 
                  LET g_mmea_d[l_ac].mmea008 = g_mmea_d_t.mmea008
                  NEXT FIELD mmea008
               END IF 
            END IF 
            
            IF NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
               LET l_card = g_mmea_d[l_ac].mmea001
            END IF 
            IF NOT cl_null(g_mmea_d[l_ac].mmea002) THEN 
               LET l_card = g_mmea_d[l_ac].mmea002 
            END IF
            IF NOT cl_null(l_card) THEN 
               SELECT mman015,mman069
                 INTO l_mman015,l_mman069
                 FROM mman_t,mmaq_t
                WHERE mmaqent = mmanent
                  AND mmaq001 = l_card
                  AND mman001 = mmaq002
               IF l_mman015 = 'Y' THEN 
                  CALL cl_set_comp_entry("mmea004",TRUE)
               ELSE
                  IF g_mmea_d[l_ac].mmea008 >= l_mman069 AND l_mman069>0 AND NOT cl_null(g_mmea_d[l_ac].mmea008) THEN   #160604-00009#65 
                     CALL cl_set_comp_entry("mmea004",TRUE)
                  ELSE
                     LET g_mmea_d[l_ac].mmea004 = ''
                     CALL cl_set_comp_entry("mmea004",FALSE)
                  END IF 
               END IF
            END IF 
            #add by geza 20151015(S)
            IF g_rtia_m.rtia056 = 'Y' THEN 
               CALL cl_set_comp_entry("mmea004",FALSE)
            END IF 
            #add by geza 20151015(E)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea008
            #add-point:ON CHANGE mmea008 name="input.g.page1.mmea008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmea_d[l_ac].mmea009,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD mmea009
            END IF 
 
 
 
            #add-point:AFTER FIELD mmea009 name="input.a.page1.mmea009"
            IF NOT cl_null(g_mmea_d[l_ac].mmea009) THEN 
               LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea007 + (g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100))*g_mmea_d[l_ac].mmea005
               DISPLAY BY NAME g_mmea_d[l_ac].mmea012
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea009
            #add-point:BEFORE FIELD mmea009 name="input.b.page1.mmea009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea009
            #add-point:ON CHANGE mmea009 name="input.g.page1.mmea009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea010
            #add-point:BEFORE FIELD mmea010 name="input.b.page1.mmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea010
            
            #add-point:AFTER FIELD mmea010 name="input.a.page1.mmea010"
            IF NOT cl_null(g_mmea_d[l_ac].mmea010) THEN 
               LET g_mmea_d[l_ac].mmea011 = g_mmea_d[l_ac].mmea005*(g_mmea_d[l_ac].mmea010+g_mmea_d[l_ac].mmea008)
               DISPLAY BY NAME g_mmea_d[l_ac].mmea011
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea010
            #add-point:ON CHANGE mmea010 name="input.g.page1.mmea010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea013
            
            #add-point:AFTER FIELD mmea013 name="input.a.page1.mmea013"
            IF NOT cl_null(g_mmea_d[l_ac].mmea013) THEN 
               CALL ammt405_mmea013_chk(g_mmea_d[l_ac].mmea013) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea_d[l_ac].mmea013 = g_mmea_d_t.mmea013
                  NEXT FIELD mmea013
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea013
            #add-point:BEFORE FIELD mmea013 name="input.b.page1.mmea013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea013
            #add-point:ON CHANGE mmea013 name="input.g.page1.mmea013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea013_desc
            #add-point:BEFORE FIELD mmea013_desc name="input.b.page1.mmea013_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea013_desc
            
            #add-point:AFTER FIELD mmea013_desc name="input.a.page1.mmea013_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea013_desc
            #add-point:ON CHANGE mmea013_desc name="input.g.page1.mmea013_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea015
            #add-point:BEFORE FIELD mmea015 name="input.b.page1.mmea015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea015
            
            #add-point:AFTER FIELD mmea015 name="input.a.page1.mmea015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea015
            #add-point:ON CHANGE mmea015 name="input.g.page1.mmea015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmea016
            #add-point:BEFORE FIELD mmea016 name="input.b.page1.mmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmea016
            
            #add-point:AFTER FIELD mmea016 name="input.a.page1.mmea016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmea016
            #add-point:ON CHANGE mmea016 name="input.g.page1.mmea016"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.mmeaseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeaseq
            #add-point:ON ACTION controlp INFIELD mmeaseq name="input.c.page1.mmeaseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea001
            #add-point:ON ACTION controlp INFIELD mmea001 name="input.c.page1.mmea001"
            #此段落由子樣板a07產生            
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                   "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                   "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                   "      AND ooed006<='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                   "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                   "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                   " AND mmaq006 = '1' "
            CALL q_mmaq001_7()
            LET g_mmea_d[l_ac].mmea001 = g_qryparam.return1
            DISPLAY g_mmea_d[l_ac].mmea001 TO mmea001
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea002
            #add-point:ON ACTION controlp INFIELD mmea002 name="input.c.page1.mmea002"
            #此段落由子樣板a07產生            
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                   "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                   "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                   "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                   "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                   " AND mmaq006 = '1' "
            CALL q_mmaq001_7()
            LET g_mmea_d[l_ac].mmea002 = g_qryparam.return1
            DISPLAY g_mmea_d[l_ac].mmea002 TO mmea002
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea004
            #add-point:ON ACTION controlp INFIELD mmea004 name="input.c.page1.mmea004"
            #此段落由子樣板a07產生            
            ### 會員資料開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = "1=1"
            CALL q_mmaf001()
            LET g_mmea_d[l_ac].mmea004 = g_qryparam.return1
            DISPLAY g_mmea_d[l_ac].mmea004 TO mmea004
            ### 會員資料開窗### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea006
            #add-point:ON ACTION controlp INFIELD mmea006 name="input.c.page1.mmea006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea008
            #add-point:ON ACTION controlp INFIELD mmea008 name="input.c.page1.mmea008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea009
            #add-point:ON ACTION controlp INFIELD mmea009 name="input.c.page1.mmea009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea010
            #add-point:ON ACTION controlp INFIELD mmea010 name="input.c.page1.mmea010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea013
            #add-point:ON ACTION controlp INFIELD mmea013 name="input.c.page1.mmea013"
            #此段落由子樣板a07產生            
            ### 庫位編號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea_d[l_ac].mmea013 = g_qryparam.return1
            DISPLAY g_mmea_d[l_ac].mmea013 TO mmea013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
            ### 庫位編號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea013_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea013_desc
            #add-point:ON ACTION controlp INFIELD mmea013_desc name="input.c.page1.mmea013_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea015
            #add-point:ON ACTION controlp INFIELD mmea015 name="input.c.page1.mmea015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmea016
            #add-point:ON ACTION controlp INFIELD mmea016 name="input.c.page1.mmea016"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmea_d[l_ac].* = g_mmea_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mmea_d[l_ac].mmeaseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmea_d[l_ac].* = g_mmea_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
                              
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL ammt405_mmea_t_mask_restore('restore_mask_o')
      
               UPDATE mmea_t SET (mmeadocno,mmeaseq,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006, 
                   mmea007,mmea008,mmea009,mmea010,mmea011,mmea012,mmea013,mmea014,mmea015,mmea016) = (g_rtia_m.rtiadocno, 
                   g_mmea_d[l_ac].mmeaseq,g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002,g_mmea_d[l_ac].mmea003, 
                   g_mmea_d[l_ac].mmea004,g_mmea_d[l_ac].mmea005,g_mmea_d[l_ac].mmea006,g_mmea_d[l_ac].mmea007, 
                   g_mmea_d[l_ac].mmea008,g_mmea_d[l_ac].mmea009,g_mmea_d[l_ac].mmea010,g_mmea_d[l_ac].mmea011, 
                   g_mmea_d[l_ac].mmea012,g_mmea_d[l_ac].mmea013,g_mmea_d[l_ac].mmea014,g_mmea_d[l_ac].mmea015, 
                   g_mmea_d[l_ac].mmea016)
                WHERE mmeaent = g_enterprise AND mmeadocno = g_rtia_m.rtiadocno 
 
                  AND mmeaseq = g_mmea_d_t.mmeaseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
 
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmea_d[l_ac].* = g_mmea_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmea_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmea_d[l_ac].* = g_mmea_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea_d[g_detail_idx].mmeaseq
               LET gs_keys_bak[2] = g_mmea_d_t.mmeaseq
               CALL ammt405_update_b('mmea_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL ammt405_mmea_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_mmea_d[g_detail_idx].mmeaseq = g_mmea_d_t.mmeaseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea_d_t.mmeaseq
 
                  CALL ammt405_key_update_b(gs_keys,'mmea_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               IF g_set_comp = 'N' OR cl_null(g_set_comp) THEN   #add by yangxf  
                  CALL ammt405_ins_rtib() RETURNING r_success
                  IF NOT r_success THEN 
                     CALL s_transaction_end('N','0')
                  END IF
               #add by yangxf ---start---
               ELSE 
                  #更新折价明细
                  CALL ammt405_modify_mmea009() RETURNING r_success
                  IF NOT r_success THEN 
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
               #add by yangxf ----end-----
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
 
            #end add-point
            CALL ammt405_unlock_b("mmea_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            CALL ammt405_b_fill()
            
         ON ACTION set_password
            LET g_action_choice="set_password"
            IF cl_auth_chk_act("set_password") THEN
               
               #add-point:ON ACTION set_password
               #150609-00016#1--add by dongsz--str---
               SELECT mman017 INTO l_mman017
                 FROM mman_t
                WHERE mmanent = g_enterprise
                  AND mman001 = g_mmea_d[l_ac].mmea003
               IF cl_null(l_mman017) OR l_mman017 <> 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00467'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               CALL ammt405_02('1',g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               #150609-00016#1--add by dongsz--end---
               #END add-point
               
            END IF
            
         ON ACTION reset_password
            LET g_action_choice="reset_password"
            IF cl_auth_chk_act("reset_password") THEN
               
               #add-point:ON ACTION reset_password
               #150609-00016#1--add by dongsz--str---
               SELECT mman017 INTO l_mman017
                 FROM mman_t
                WHERE mmanent = g_enterprise
                  AND mman001 = g_mmea_d[l_ac].mmea003
               IF cl_null(l_mman017) OR l_mman017 <> 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00467'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               CALL ammt405_02('2',g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea002)
               #150609-00016#1--add by dongsz--end---
               #END add-point
               
            END IF
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmea_d[li_reproduce_target].* = g_mmea_d[li_reproduce].*
 
               LET g_mmea_d[li_reproduce_target].mmeaseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmea_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmea_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_mmea2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt405_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmea2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
                        
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea2_d[l_ac].* TO NULL 
            INITIALIZE g_mmea2_d_t.* TO NULL 
            INITIALIZE g_mmea2_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_mmea2_d[l_ac].mmec010 = "N"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea2_d[l_ac].mmec013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            #end add-point
            LET g_mmea2_d_t.* = g_mmea2_d[l_ac].*     #新輸入資料
            LET g_mmea2_d_o.* = g_mmea2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
                        
            #end add-point
            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea2_d[li_reproduce_target].* = g_mmea2_d[li_reproduce].*
 
               LET g_mmea2_d[li_reproduce_target].mmecseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            LET g_mmea2_d[l_ac].mmec010 = 'N'
            SELECT MAX(mmecseq)+1 INTO g_mmea2_d[l_ac].mmecseq
              FROM mmec_t
             WHERE mmecent = g_enterprise
               AND mmecdocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea2_d[l_ac].mmecseq) THEN 
               LET g_mmea2_d[l_ac].mmecseq = 1
            END IF
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmea2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea2_d[l_ac].mmecseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmea2_d_t.* = g_mmea2_d[l_ac].*  #BACKUP
               LET g_mmea2_d_o.* = g_mmea2_d[l_ac].*  #BACKUP
               CALL ammt405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
                              
               #end add-point  
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("mmec_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl3 INTO g_mmea2_d[l_ac].mmecseq,g_mmea2_d[l_ac].mmec014,g_mmea2_d[l_ac].mmec001, 
                      g_mmea2_d[l_ac].mmec002,g_mmea2_d[l_ac].mmec003,g_mmea2_d[l_ac].mmec004,g_mmea2_d[l_ac].mmec005, 
                      g_mmea2_d[l_ac].mmec006,g_mmea2_d[l_ac].mmec007,g_mmea2_d[l_ac].mmec008,g_mmea2_d[l_ac].mmec009, 
                      g_mmea2_d[l_ac].mmec010,g_mmea2_d[l_ac].mmec011,g_mmea2_d[l_ac].mmec012,g_mmea2_d[l_ac].mmec013, 
                      g_mmea2_d[l_ac].mmec015
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmea2_d_mask_o[l_ac].* =  g_mmea2_d[l_ac].*
                  CALL ammt405_mmec_t_mask()
                  LET g_mmea2_d_mask_n[l_ac].* =  g_mmea2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            IF l_cmd = 'u' THEN 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec014
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_mmea2_d[l_ac].mmec014_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_mmea2_d[l_ac].mmec014_desc
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
            END IF 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body2.b_delete"
                              
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmea2_d_t.mmecseq
            
               #刪除同層單身
               IF NOT ammt405_delete_b('mmec_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt405_key_delete_b(gs_keys,'mmec_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body2.m_delete"
                              
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt405_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body2.a_delete"
                                    
               #end add-point
               LET l_count = g_mmea_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
                        
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmea2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body2.b_a_insert"
                        
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmec_t 
             WHERE mmecent = g_enterprise AND mmecdocno = g_rtia_m.rtiadocno
               AND mmecseq = g_mmea2_d[l_ac].mmecseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body2.b_insert"
                              
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea2_d[g_detail_idx].mmecseq
               CALL ammt405_insert_b('mmec_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body2.a_insert"
                              
               #end add-point
            ELSE    
               INITIALIZE g_mmea_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt405_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmea2_d[l_ac].* = g_mmea2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmea2_d[l_ac].* = g_mmea2_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body2.b_update"
                              
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL ammt405_mmec_t_mask_restore('restore_mask_o')
                              
               UPDATE mmec_t SET (mmecdocno,mmecseq,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005, 
                   mmec006,mmec007,mmec008,mmec009,mmec010,mmec011,mmec012,mmec013,mmec015) = (g_rtia_m.rtiadocno, 
                   g_mmea2_d[l_ac].mmecseq,g_mmea2_d[l_ac].mmec014,g_mmea2_d[l_ac].mmec001,g_mmea2_d[l_ac].mmec002, 
                   g_mmea2_d[l_ac].mmec003,g_mmea2_d[l_ac].mmec004,g_mmea2_d[l_ac].mmec005,g_mmea2_d[l_ac].mmec006, 
                   g_mmea2_d[l_ac].mmec007,g_mmea2_d[l_ac].mmec008,g_mmea2_d[l_ac].mmec009,g_mmea2_d[l_ac].mmec010, 
                   g_mmea2_d[l_ac].mmec011,g_mmea2_d[l_ac].mmec012,g_mmea2_d[l_ac].mmec013,g_mmea2_d[l_ac].mmec015)  
                   #自訂欄位頁簽
                WHERE mmecent = g_enterprise AND mmecdocno = g_rtia_m.rtiadocno
                  AND mmecseq = g_mmea2_d_t.mmecseq #項次 
                  
               #add-point:單身page3修改中 name="input.body2.m_update"
                              
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmea2_d[l_ac].* = g_mmea2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmec_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmea2_d[l_ac].* = g_mmea2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea2_d[g_detail_idx].mmecseq
               LET gs_keys_bak[2] = g_mmea2_d_t.mmecseq
               CALL ammt405_update_b('mmec_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt405_mmec_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmea2_d[g_detail_idx].mmecseq = g_mmea2_d_t.mmecseq 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea2_d_t.mmecseq
                  CALL ammt405_key_update_b(gs_keys,'mmec_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea2_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body2.a_update"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
               END IF
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmecseq
            #add-point:BEFORE FIELD mmecseq name="input.b.page2.mmecseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmecseq
            
            #add-point:AFTER FIELD mmecseq name="input.a.page2.mmecseq"
            #此段落由子樣板a05產生
            IF  g_rtia_m.rtiadocno IS NOT NULL AND g_mmea2_d[g_detail_idx].mmecseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t OR g_mmea2_d[g_detail_idx].mmecseq != g_mmea2_d_t.mmecseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmec_t WHERE "||"mmecent = '" ||g_enterprise|| "' AND "||"mmecdocno = '"||g_rtia_m.rtiadocno ||"' AND "|| "mmecseq = '"||g_mmea2_d[g_detail_idx].mmecseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmecseq
            #add-point:ON CHANGE mmecseq name="input.g.page2.mmecseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec014
            
            #add-point:AFTER FIELD mmec014 name="input.a.page2.mmec014"
            IF NOT cl_null(g_mmea2_d[l_ac].mmec014) THEN 
               CALL ammt405_oocq002_chk(g_mmea2_d[l_ac].mmec014)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea2_d[l_ac].mmec014 = g_mmea2_d_t.mmec014
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea2_d[l_ac].mmec014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea2_d[l_ac].mmec014_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec014
            #add-point:BEFORE FIELD mmec014 name="input.b.page2.mmec014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmec014
            #add-point:ON CHANGE mmec014 name="input.g.page2.mmec014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec001
            #add-point:BEFORE FIELD mmec001 name="input.b.page2.mmec001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec001
            
            #add-point:AFTER FIELD mmec001 name="input.a.page2.mmec001"
            IF NOT cl_null(g_mmea2_d[l_ac].mmec001) THEN 
               CALL ammt405_mmec001_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea2_d[l_ac].mmec001 = g_mmea2_d_t.mmec001
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmec001
            #add-point:ON CHANGE mmec001 name="input.g.page2.mmec001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec008
            #add-point:BEFORE FIELD mmec008 name="input.b.page2.mmec008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec008
            
            #add-point:AFTER FIELD mmec008 name="input.a.page2.mmec008"
            IF NOT cl_null(g_mmea2_d[l_ac].mmec008) THEN 
               CALL ammt405_mmec008_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea2_d[l_ac].mmec008 = g_mmea2_d_t.mmec008
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmec008
            #add-point:ON CHANGE mmec008 name="input.g.page2.mmec008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmea2_d[l_ac].mmec012,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mmec012
            END IF 
 
 
 
            #add-point:AFTER FIELD mmec012 name="input.a.page2.mmec012"
            IF NOT cl_null(g_mmea2_d[l_ac].mmec012) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec012
            #add-point:BEFORE FIELD mmec012 name="input.b.page2.mmec012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmec012
            #add-point:ON CHANGE mmec012 name="input.g.page2.mmec012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmec013
            #add-point:BEFORE FIELD mmec013 name="input.b.page2.mmec013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmec013
            
            #add-point:AFTER FIELD mmec013 name="input.a.page2.mmec013"
            IF NOT cl_null(g_mmea2_d[l_ac].mmec013) THEN 
               CALL ammt405_mmea013_chk(g_mmea2_d[l_ac].mmec013) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea2_d[l_ac].mmec013 = g_mmea2_d_t.mmec013
                  NEXT FIELD mmec013
               END IF 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmec013
            #add-point:ON CHANGE mmec013 name="input.g.page2.mmec013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.mmecseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmecseq
            #add-point:ON ACTION controlp INFIELD mmecseq name="input.c.page2.mmecseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.mmec014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec014
            #add-point:ON ACTION controlp INFIELD mmec014 name="input.c.page2.mmec014"
            ### 應用分類碼開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = " 1=1"
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()
            LET g_mmea2_d[l_ac].mmec014 = g_qryparam.return1
            DISPLAY g_mmea2_d[l_ac].mmec014 TO mmec014
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea2_d[l_ac].mmec014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea2_d[l_ac].mmec014_desc
            ### 應用分類碼開窗### end ###

            #END add-point
 
 
         #Ctrlp:input.c.page2.mmec001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec001
            #add-point:ON ACTION controlp INFIELD mmec001 name="input.c.page2.mmec001"
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            IF cl_null(g_mmea2_d[l_ac].mmec009) THEN 
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 IN('2','3') "
            ELSE
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 IN('2','3') AND mmaq002 = '",g_mmea2_d[l_ac].mmec009,"'"
            END IF 
            CALL q_mmaq001_7()
            LET g_mmea2_d[l_ac].mmec001 = g_qryparam.return1
            DISPLAY g_mmea2_d[l_ac].mmec001 TO mmec001
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page2.mmec008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec008
            #add-point:ON ACTION controlp INFIELD mmec008 name="input.c.page2.mmec008"
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
#            IF cl_null(g_mmea2_d[l_ac].mmec002) THEN   #mark by yangxf 
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 = '1' "
#mark by yangxf ---start----
#            ELSE
#               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
#                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
#                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
#                                      "      AND ooed006 <='",g_today,"' ",
#                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
#                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
#                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
#                                      "      AND ooed006 <='",g_today,"' ",
#                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
#                                      " AND mmaq006 = '1' AND mmaq002 = '",g_mmea2_d[l_ac].mmec002,"'"
#            END IF 
#mark by yangxf ---end---
            CALL q_mmaq001_7()
            LET g_mmea2_d[l_ac].mmec008 = g_qryparam.return1
            DISPLAY g_mmea2_d[l_ac].mmec008 TO mmec008
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page2.mmec012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec012
            #add-point:ON ACTION controlp INFIELD mmec012 name="input.c.page2.mmec012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.mmec013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmec013
            #add-point:ON ACTION controlp INFIELD mmec013 name="input.c.page2.mmec013"
            #此段落由子樣板a07產生            
            ### 庫位編號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea2_d[l_ac].mmec013 = g_qryparam.return1
            DISPLAY g_mmea2_d[l_ac].mmec013 TO mmec013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
            ### 庫位編號### end ###
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body2.after_row"
                        
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmea2_d[l_ac].* = g_mmea2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt405_unlock_b("mmec_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
                        
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmea2_d[li_reproduce_target].* = g_mmea2_d[li_reproduce].*
 
               LET g_mmea2_d[li_reproduce_target].mmecseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmea2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmea2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_mmea3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt405_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmea3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
                        
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea3_d[l_ac].* TO NULL 
            INITIALIZE g_mmea3_d_t.* TO NULL 
            INITIALIZE g_mmea3_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_mmea3_d[l_ac].mmeb010 = "N"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea3_d[l_ac].mmeb013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            #end add-point
            LET g_mmea3_d_t.* = g_mmea3_d[l_ac].*     #新輸入資料
            LET g_mmea3_d_o.* = g_mmea3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
                        
            #end add-point
            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea3_d[li_reproduce_target].* = g_mmea3_d[li_reproduce].*
 
               LET g_mmea3_d[li_reproduce_target].mmebseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            SELECT MAX(mmebseq)+1 INTO g_mmea3_d[l_ac].mmebseq
              FROM mmeb_t
             WHERE mmebent = g_enterprise
               AND mmebdocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea3_d[l_ac].mmebseq) THEN 
               LET g_mmea3_d[l_ac].mmebseq = 1
            END IF 
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmea3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea3_d[l_ac].mmebseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmea3_d_t.* = g_mmea3_d[l_ac].*  #BACKUP
               LET g_mmea3_d_o.* = g_mmea3_d[l_ac].*  #BACKUP
               CALL ammt405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
                              
               #end add-point  
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("mmeb_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl4 INTO g_mmea3_d[l_ac].mmebseq,g_mmea3_d[l_ac].mmeb014,g_mmea3_d[l_ac].mmeb001, 
                      g_mmea3_d[l_ac].mmeb002,g_mmea3_d[l_ac].mmeb003,g_mmea3_d[l_ac].mmeb004,g_mmea3_d[l_ac].mmeb005, 
                      g_mmea3_d[l_ac].mmeb006,g_mmea3_d[l_ac].mmeb007,g_mmea3_d[l_ac].mmeb008,g_mmea3_d[l_ac].mmeb009, 
                      g_mmea3_d[l_ac].mmeb010,g_mmea3_d[l_ac].mmeb011,g_mmea3_d[l_ac].mmeb012,g_mmea3_d[l_ac].mmeb013, 
                      g_mmea3_d[l_ac].mmeb015
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmea3_d_mask_o[l_ac].* =  g_mmea3_d[l_ac].*
                  CALL ammt405_mmeb_t_mask()
                  LET g_mmea3_d_mask_n[l_ac].* =  g_mmea3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            IF l_cmd = 'u' THEN 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb014
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_mmea3_d[l_ac].mmeb014_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_mmea3_d[l_ac].mmeb014_desc
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
            END IF 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body3.b_delete"
                              
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmea3_d_t.mmebseq
            
               #刪除同層單身
               IF NOT ammt405_delete_b('mmeb_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt405_key_delete_b(gs_keys,'mmeb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body3.m_delete"
                              
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt405_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body3.a_delete"
                                    
               #end add-point
               LET l_count = g_mmea_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
                        
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmea3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body3.b_a_insert"
                        
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmeb_t 
             WHERE mmebent = g_enterprise AND mmebdocno = g_rtia_m.rtiadocno
               AND mmebseq = g_mmea3_d[l_ac].mmebseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body3.b_insert"
                              
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea3_d[g_detail_idx].mmebseq
               CALL ammt405_insert_b('mmeb_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body3.a_insert"
                              
               #end add-point
            ELSE    
               INITIALIZE g_mmea_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt405_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmea3_d[l_ac].* = g_mmea3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmea3_d[l_ac].* = g_mmea3_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body3.b_update"
                              
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL ammt405_mmeb_t_mask_restore('restore_mask_o')
                              
               UPDATE mmeb_t SET (mmebdocno,mmebseq,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005, 
                   mmeb006,mmeb007,mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013,mmeb015) = (g_rtia_m.rtiadocno, 
                   g_mmea3_d[l_ac].mmebseq,g_mmea3_d[l_ac].mmeb014,g_mmea3_d[l_ac].mmeb001,g_mmea3_d[l_ac].mmeb002, 
                   g_mmea3_d[l_ac].mmeb003,g_mmea3_d[l_ac].mmeb004,g_mmea3_d[l_ac].mmeb005,g_mmea3_d[l_ac].mmeb006, 
                   g_mmea3_d[l_ac].mmeb007,g_mmea3_d[l_ac].mmeb008,g_mmea3_d[l_ac].mmeb009,g_mmea3_d[l_ac].mmeb010, 
                   g_mmea3_d[l_ac].mmeb011,g_mmea3_d[l_ac].mmeb012,g_mmea3_d[l_ac].mmeb013,g_mmea3_d[l_ac].mmeb015)  
                   #自訂欄位頁簽
                WHERE mmebent = g_enterprise AND mmebdocno = g_rtia_m.rtiadocno
                  AND mmebseq = g_mmea3_d_t.mmebseq #項次 
                  
               #add-point:單身page4修改中 name="input.body3.m_update"
                              
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmea3_d[l_ac].* = g_mmea3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmeb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmea3_d[l_ac].* = g_mmea3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea3_d[g_detail_idx].mmebseq
               LET gs_keys_bak[2] = g_mmea3_d_t.mmebseq
               CALL ammt405_update_b('mmeb_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt405_mmeb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmea3_d[g_detail_idx].mmebseq = g_mmea3_d_t.mmebseq 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea3_d_t.mmebseq
                  CALL ammt405_key_update_b(gs_keys,'mmeb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea3_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body3.a_update"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
               END IF
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmebseq
            #add-point:BEFORE FIELD mmebseq name="input.b.page3.mmebseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmebseq
            
            #add-point:AFTER FIELD mmebseq name="input.a.page3.mmebseq"
            #此段落由子樣板a05產生
            IF  g_rtia_m.rtiadocno IS NOT NULL AND g_mmea3_d[g_detail_idx].mmebseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t OR g_mmea3_d[g_detail_idx].mmebseq != g_mmea3_d_t.mmebseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmeb_t WHERE "||"mmebent = '" ||g_enterprise|| "' AND "||"mmebdocno = '"||g_rtia_m.rtiadocno ||"' AND "|| "mmebseq = '"||g_mmea3_d[g_detail_idx].mmebseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmebseq
            #add-point:ON CHANGE mmebseq name="input.g.page3.mmebseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb014
            
            #add-point:AFTER FIELD mmeb014 name="input.a.page3.mmeb014"
            IF NOT cl_null(g_mmea3_d[l_ac].mmeb014) THEN 
               CALL ammt405_oocq002_chk(g_mmea3_d[l_ac].mmeb014)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea3_d[l_ac].mmeb014 = g_mmea3_d_t.mmeb014
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea3_d[l_ac].mmeb014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea3_d[l_ac].mmeb014_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb014
            #add-point:BEFORE FIELD mmeb014 name="input.b.page3.mmeb014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeb014
            #add-point:ON CHANGE mmeb014 name="input.g.page3.mmeb014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb001
            #add-point:BEFORE FIELD mmeb001 name="input.b.page3.mmeb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb001
            
            #add-point:AFTER FIELD mmeb001 name="input.a.page3.mmeb001"
            IF NOT cl_null(g_mmea3_d[l_ac].mmeb001) THEN 
               CALL ammt405_mmeb001_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea3_d[l_ac].mmeb001 = g_mmea3_d_t.mmeb001
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeb001
            #add-point:ON CHANGE mmeb001 name="input.g.page3.mmeb001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb008
            #add-point:BEFORE FIELD mmeb008 name="input.b.page3.mmeb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb008
            
            #add-point:AFTER FIELD mmeb008 name="input.a.page3.mmeb008"
            IF NOT cl_null(g_mmea3_d[l_ac].mmeb008) THEN 
               CALL ammt405_mmeb008_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea3_d[l_ac].mmeb008 = g_mmea3_d_t.mmeb008
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeb008
            #add-point:ON CHANGE mmeb008 name="input.g.page3.mmeb008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmea3_d[l_ac].mmeb012,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mmeb012
            END IF 
 
 
 
            #add-point:AFTER FIELD mmeb012 name="input.a.page3.mmeb012"
            IF NOT cl_null(g_mmea3_d[l_ac].mmeb012) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb012
            #add-point:BEFORE FIELD mmeb012 name="input.b.page3.mmeb012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeb012
            #add-point:ON CHANGE mmeb012 name="input.g.page3.mmeb012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmeb013
            #add-point:BEFORE FIELD mmeb013 name="input.b.page3.mmeb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmeb013
            
            #add-point:AFTER FIELD mmeb013 name="input.a.page3.mmeb013"
            IF NOT cl_null(g_mmea3_d[l_ac].mmeb013) THEN 
               CALL ammt405_mmea013_chk(g_mmea3_d[l_ac].mmeb013) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea3_d[l_ac].mmeb013 = g_mmea3_d_t.mmeb013
                  NEXT FIELD mmeb013
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmeb013
            #add-point:ON CHANGE mmeb013 name="input.g.page3.mmeb013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.mmebseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmebseq
            #add-point:ON ACTION controlp INFIELD mmebseq name="input.c.page3.mmebseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.mmeb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb014
            #add-point:ON ACTION controlp INFIELD mmeb014 name="input.c.page3.mmeb014"
            ### 應用分類碼開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = "1=1"
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()
            LET g_mmea3_d[l_ac].mmeb014 = g_qryparam.return1
            DISPLAY g_mmea3_d[l_ac].mmeb014 TO mmeb014
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea3_d[l_ac].mmeb014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea3_d[l_ac].mmeb014_desc
            ### 應用分類碼開窗### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page3.mmeb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb001
            #add-point:ON ACTION controlp INFIELD mmeb001 name="input.c.page3.mmeb001"
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            IF cl_null(g_mmea3_d[l_ac].mmeb009) THEN 
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 = '5' "
            ELSE
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 = '5' AND mmaq002 = '",g_mmea3_d[l_ac].mmeb009,"'"
            END IF 
            CALL q_mmaq001_7()
            LET g_mmea3_d[l_ac].mmeb001 = g_qryparam.return1
            DISPLAY g_mmea3_d[l_ac].mmeb001 TO mmeb001
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page3.mmeb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb008
            #add-point:ON ACTION controlp INFIELD mmeb008 name="input.c.page3.mmeb008"
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            IF cl_null(g_mmea3_d[l_ac].mmeb002) THEN 
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 = '1' "
            ELSE
               LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                      "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                      "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                      "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                      "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                      "      AND ooed006 <='",g_today,"' ",
                                      "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                      " AND mmaq006 = '1' AND mmaq002 = '",g_mmea3_d[l_ac].mmeb002,"'"
            END IF 
            CALL q_mmaq001_7()
            LET g_mmea3_d[l_ac].mmeb008 = g_qryparam.return1
            DISPLAY g_mmea3_d[l_ac].mmeb008 TO mmeb008
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page3.mmeb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb012
            #add-point:ON ACTION controlp INFIELD mmeb012 name="input.c.page3.mmeb012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.mmeb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmeb013
            #add-point:ON ACTION controlp INFIELD mmeb013 name="input.c.page3.mmeb013"
            #此段落由子樣板a07產生            
            ### 庫位編號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea3_d[l_ac].mmeb013 = g_qryparam.return1
            DISPLAY g_mmea3_d[l_ac].mmeb013 TO mmeb013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
            ### 庫位編號### end ###
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body3.after_row"
                        
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmea3_d[l_ac].* = g_mmea3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt405_unlock_b("mmeb_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
                        
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmea3_d[li_reproduce_target].* = g_mmea3_d[li_reproduce].*
 
               LET g_mmea3_d[li_reproduce_target].mmebseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmea3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmea3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_mmea4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark
            IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
               EXIT DIALOG
            END IF 
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt405_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmea4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
                        
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea4_d[l_ac].* TO NULL 
            INITIALIZE g_mmea4_d_t.* TO NULL 
            INITIALIZE g_mmea4_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
            
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea4_d[l_ac].mmed013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            #end add-point
            LET g_mmea4_d_t.* = g_mmea4_d[l_ac].*     #新輸入資料
            LET g_mmea4_d_o.* = g_mmea4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
                        
            #end add-point
            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea4_d[li_reproduce_target].* = g_mmea4_d[li_reproduce].*
 
               LET g_mmea4_d[li_reproduce_target].mmedseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            SELECT MAX(mmedseq)+1 INTO g_mmea4_d[l_ac].mmedseq
              FROM mmed_t
             WHERE mmedent = g_enterprise
               AND mmeddocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea4_d[l_ac].mmedseq) THEN 
               LET g_mmea4_d[l_ac].mmedseq = 1
            END IF 
            LET g_mmea4_d[l_ac].mmed004 = 1
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmea4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea4_d[l_ac].mmedseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmea4_d_t.* = g_mmea4_d[l_ac].*  #BACKUP
               LET g_mmea4_d_o.* = g_mmea4_d[l_ac].*  #BACKUP
               CALL ammt405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
                              
               #end add-point  
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("mmed_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl5 INTO g_mmea4_d[l_ac].mmedseq,g_mmea4_d[l_ac].mmed001,g_mmea4_d[l_ac].mmed002, 
                      g_mmea4_d[l_ac].mmed003,g_mmea4_d[l_ac].mmed004,g_mmea4_d[l_ac].mmed005,g_mmea4_d[l_ac].mmed006, 
                      g_mmea4_d[l_ac].mmed007,g_mmea4_d[l_ac].mmed008,g_mmea4_d[l_ac].mmed009,g_mmea4_d[l_ac].mmed010, 
                      g_mmea4_d[l_ac].mmed012,g_mmea4_d[l_ac].mmed014,g_mmea4_d[l_ac].mmed013,g_mmea4_d[l_ac].mmed015, 
                      g_mmea4_d[l_ac].mmed016
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmea4_d_mask_o[l_ac].* =  g_mmea4_d[l_ac].*
                  CALL ammt405_mmed_t_mask()
                  LET g_mmea4_d_mask_n[l_ac].* =  g_mmea4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            IF l_cmd = 'u' THEN 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed014
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_mmea4_d[l_ac].mmed014_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_mmea4_d[l_ac].mmed014_desc
               CALL ammt405_mmed001_chk()
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''
            END IF  
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body4.b_delete"
                              
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmea4_d_t.mmedseq
            
               #刪除同層單身
               IF NOT ammt405_delete_b('mmed_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt405_key_delete_b(gs_keys,'mmed_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身5刪除中 name="input.body4.m_delete"
                              
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt405_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body4.a_delete"
                                    
               #end add-point
               LET l_count = g_mmea_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
                        
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmea4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body4.b_a_insert"
                        
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmed_t 
             WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtiadocno
               AND mmedseq = g_mmea4_d[l_ac].mmedseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body4.b_insert"
                              
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea4_d[g_detail_idx].mmedseq
               CALL ammt405_insert_b('mmed_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body4.a_insert"
               UPDATE mmed_t SET mmed011 =  g_mmea4_d[l_ac].mmed003 + g_mmea4_d[l_ac].mmed009
                WHERE mmeddocno = g_rtia_m.rtiadocno
                  AND mmedseq = g_mmea4_d[l_ac].mmedseq
                  AND mmedent = g_enterprise #160905-00007#6 add
               #end add-point
            ELSE    
               INITIALIZE g_mmea_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt405_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmea4_d[l_ac].* = g_mmea4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmea4_d[l_ac].* = g_mmea4_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body4.b_update"
                              
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL ammt405_mmed_t_mask_restore('restore_mask_o')
                              
               UPDATE mmed_t SET (mmeddocno,mmedseq,mmed001,mmed002,mmed003,mmed004,mmed005,mmed006, 
                   mmed007,mmed008,mmed009,mmed010,mmed012,mmed014,mmed013,mmed015,mmed016) = (g_rtia_m.rtiadocno, 
                   g_mmea4_d[l_ac].mmedseq,g_mmea4_d[l_ac].mmed001,g_mmea4_d[l_ac].mmed002,g_mmea4_d[l_ac].mmed003, 
                   g_mmea4_d[l_ac].mmed004,g_mmea4_d[l_ac].mmed005,g_mmea4_d[l_ac].mmed006,g_mmea4_d[l_ac].mmed007, 
                   g_mmea4_d[l_ac].mmed008,g_mmea4_d[l_ac].mmed009,g_mmea4_d[l_ac].mmed010,g_mmea4_d[l_ac].mmed012, 
                   g_mmea4_d[l_ac].mmed014,g_mmea4_d[l_ac].mmed013,g_mmea4_d[l_ac].mmed015,g_mmea4_d[l_ac].mmed016)  
                   #自訂欄位頁簽
                WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtiadocno
                  AND mmedseq = g_mmea4_d_t.mmedseq #項次 
                  
               #add-point:單身page5修改中 name="input.body4.m_update"
                              
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmea4_d[l_ac].* = g_mmea4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmed_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmea4_d[l_ac].* = g_mmea4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea4_d[g_detail_idx].mmedseq
               LET gs_keys_bak[2] = g_mmea4_d_t.mmedseq
               CALL ammt405_update_b('mmed_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt405_mmed_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmea4_d[g_detail_idx].mmedseq = g_mmea4_d_t.mmedseq 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea4_d_t.mmedseq
                  CALL ammt405_key_update_b(gs_keys,'mmed_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea4_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body4.a_update"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
               END IF  
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed001
            #add-point:BEFORE FIELD mmed001 name="input.b.page4.mmed001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed001
            
            #add-point:AFTER FIELD mmed001 name="input.a.page4.mmed001"
            IF NOT cl_null(g_mmea4_d[l_ac].mmed001) THEN 
               CALL ammt405_mmed001_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea4_d[l_ac].mmed001 = g_mmea4_d_t.mmed001
                  NEXT FIELD CURRENT 
               END IF 
               CALL ammt405_mmed005_display() RETURNING r_success
               IF NOT r_success THEN 
                  LET g_mmea4_d[l_ac].mmed001 = g_mmea4_d_t.mmed001
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed001
            #add-point:ON CHANGE mmed001 name="input.g.page4.mmed001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed005
            #add-point:BEFORE FIELD mmed005 name="input.b.page4.mmed005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed005
            
            #add-point:AFTER FIELD mmed005 name="input.a.page4.mmed005"
            IF NOT cl_null(g_mmea4_d[l_ac].mmed005) THEN 
               IF g_mmea4_d[l_ac].mmed001 <= 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00337'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea4_d[l_ac].mmed005 = g_mmea4_d_t.mmed005
                  NEXT FIELD CURRENT 
               END IF 
               CALL ammt405_mmed005_display() RETURNING r_success
               IF NOT r_success THEN 
                  LET g_mmea4_d[l_ac].mmed005 = g_mmea4_d_t.mmed005
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
         #160705-00042#11 160714 by sakura mark(S)
         ##20150702--add by dongsz---天和用
         #AFTER FIELD mmed007
         #   IF g_user = 'A20142719' THEN
         #      LET g_mmea4_d[l_ac].mmed012 = g_mmea4_d[l_ac].mmed005-g_mmea4_d[l_ac].mmed007
         #      DISPLAY BY NAME g_mmea4_d[l_ac].mmed012
         #   END IF
         ##20150702--add by dongsz---天和用
         #160705-00042#11 160714 by sakura mark(E)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed005
            #add-point:ON CHANGE mmed005 name="input.g.page4.mmed005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed014
            
            #add-point:AFTER FIELD mmed014 name="input.a.page4.mmed014"
            IF NOT cl_null(g_mmea4_d[l_ac].mmed014) THEN 
               CALL ammt405_oocq002_chk(g_mmea4_d[l_ac].mmed014)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea4_d[l_ac].mmed014 = g_mmea4_d_t.mmed014
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].mmed014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea4_d[l_ac].mmed014_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed014
            #add-point:BEFORE FIELD mmed014 name="input.b.page4.mmed014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed014
            #add-point:ON CHANGE mmed014 name="input.g.page4.mmed014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed013
            #add-point:BEFORE FIELD mmed013 name="input.b.page4.mmed013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed013
            
            #add-point:AFTER FIELD mmed013 name="input.a.page4.mmed013"
            IF NOT cl_null(g_mmea4_d[l_ac].mmed013) THEN 
               CALL ammt405_mmea013_chk(g_mmea4_d[l_ac].mmed013) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea4_d[l_ac].mmed013 = g_mmea4_d_t.mmed013
                  NEXT FIELD mmed013
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed013
            #add-point:ON CHANGE mmed013 name="input.g.page4.mmed013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed015
            #add-point:BEFORE FIELD mmed015 name="input.b.page4.mmed015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed015
            
            #add-point:AFTER FIELD mmed015 name="input.a.page4.mmed015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed015
            #add-point:ON CHANGE mmed015 name="input.g.page4.mmed015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmed016
            #add-point:BEFORE FIELD mmed016 name="input.b.page4.mmed016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmed016
            
            #add-point:AFTER FIELD mmed016 name="input.a.page4.mmed016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmed016
            #add-point:ON CHANGE mmed016 name="input.g.page4.mmed016"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.mmed001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed001
            #add-point:ON ACTION controlp INFIELD mmed001 name="input.c.page4.mmed001"
            ### 會員卡號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                   "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                   "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                   "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                   "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                   " AND mmaq006 = '3' AND mmaq007 = 'Y' AND (mmaq005 IS NULL OR mmaq005 >= '",g_today,"')"
            CALL q_mmaq001_7()
            LET g_mmea4_d[l_ac].mmed001 = g_qryparam.return1
            DISPLAY g_mmea4_d[l_ac].mmed001 TO mmed001
            ### 會員卡號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page4.mmed005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed005
            #add-point:ON ACTION controlp INFIELD mmed005 name="input.c.page4.mmed005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.mmed014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed014
            #add-point:ON ACTION controlp INFIELD mmed014 name="input.c.page4.mmed014"
            ### 應用分類碼開窗### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = "1=1"
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()
            LET g_mmea4_d[l_ac].mmed014 = g_qryparam.return1
            DISPLAY g_mmea4_d[l_ac].mmed014 TO mmed014
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].mmed014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea4_d[l_ac].mmed014_desc
            ### 應用分類碼開窗### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page4.mmed013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed013
            #add-point:ON ACTION controlp INFIELD mmed013 name="input.c.page4.mmed013"
            #此段落由子樣板a07產生            
            ### 庫位編號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea4_d[l_ac].mmed013 = g_qryparam.return1
            DISPLAY g_mmea4_d[l_ac].mmed013 TO mmed013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''
            ### 庫位編號### end ###
            #END add-point
 
 
         #Ctrlp:input.c.page4.mmed015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed015
            #add-point:ON ACTION controlp INFIELD mmed015 name="input.c.page4.mmed015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.mmed016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmed016
            #add-point:ON ACTION controlp INFIELD mmed016 name="input.c.page4.mmed016"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body4.after_row"
                        
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmea4_d[l_ac].* = g_mmea4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt405_unlock_b("mmed_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body4.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
                        
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmea4_d[li_reproduce_target].* = g_mmea4_d[li_reproduce].*
 
               LET g_mmea4_d[li_reproduce_target].mmedseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmea4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmea4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_mmea6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            #如果单身没资料提示
            LET l_n = 0
            SELECT COUNT(*) INTO l_n
              FROM gcbi_t
             WHERE gcbient = g_enterprise
               AND gcbidocno = g_rtia_m.rtiadocno
            #IF l_n = 0 AND g_prog != 'agct406' THEN           #160705-00042#11 160714 by sakura mark 
            IF l_n = 0 AND g_prog NOT MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
               IF cl_ask_confirm('agc-00112') THEN  
                  CALL ammt405_04()
               END IF 
            END IF 
#            IF l_n = 0 AND g_prog NOT MATCHES 'ammt426' THEN   #160705-00042#11 160714 by diping add
#               IF cl_ask_confirm('agc-00112') THEN  
#                  CALL ammt405_10()
#               END IF 
#            END IF 
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt405_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_mmea6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
 
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea6_d[l_ac].* TO NULL 
            INITIALIZE g_mmea6_d_t.* TO NULL 
            INITIALIZE g_mmea6_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_mmea6_d[l_ac].gcbi009 = "100"
 
            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea6_d[l_ac].gcbi007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            #end add-point
            LET g_mmea6_d_t.* = g_mmea6_d[l_ac].*     #新輸入資料
            LET g_mmea6_d_o.* = g_mmea6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            
            #end add-point
            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea6_d[li_reproduce_target].* = g_mmea6_d[li_reproduce].*
 
               LET g_mmea6_d[li_reproduce_target].gcbiseq = NULL
               LET g_mmea6_d[li_reproduce_target].gcbiseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body6.before_insert"
            IF NOT cl_null(g_rtia_m.rtia001) THEN 
               SELECT mmaq003 INTO g_mmea6_d[l_ac].gcbi008
                 FROM mmaq_t
                WHERE mmaqent = g_enterprise
                  AND mmaq001 = g_rtia_m.rtia001
            END IF
            SELECT MAX(gcbiseq)+1 INTO g_mmea6_d[l_ac].gcbiseq
              FROM gcbi_t
             WHERE gcbient = g_enterprise
               AND gcbidocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea6_d[l_ac].gcbiseq) THEN 
               LET g_mmea6_d[l_ac].gcbiseq = 1
            END IF 
            SELECT MAX(gcbiseq1)+1 INTO g_mmea6_d[l_ac].gcbiseq1
              FROM gcbi_t
             WHERE gcbient = g_enterprise
               AND gcbidocno = g_rtia_m.rtiadocno
               AND gcbiseq = g_mmea6_d[l_ac].gcbiseq
            IF cl_null(g_mmea6_d[l_ac].gcbiseq1) THEN 
               LET g_mmea6_d[l_ac].gcbiseq1 = 1
            END IF 
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmea6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea6_d[l_ac].gcbiseq IS NOT NULL
               AND g_mmea6_d[l_ac].gcbiseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmea6_d_t.* = g_mmea6_d[l_ac].*  #BACKUP
               LET g_mmea6_d_o.* = g_mmea6_d[l_ac].*  #BACKUP
               CALL ammt405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
                              
               #end add-point  
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("gcbi_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl6 INTO g_mmea6_d[l_ac].gcbiseq,g_mmea6_d[l_ac].gcbiseq1,g_mmea6_d[l_ac].gcbi001, 
                      g_mmea6_d[l_ac].gcbi002,g_mmea6_d[l_ac].gcbi003,g_mmea6_d[l_ac].gcbi004,g_mmea6_d[l_ac].gcbi005, 
                      g_mmea6_d[l_ac].gcbi009,g_mmea6_d[l_ac].gcbi006,g_mmea6_d[l_ac].gcbi007,g_mmea6_d[l_ac].gcbi008 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmea6_d_mask_o[l_ac].* =  g_mmea6_d[l_ac].*
                  CALL ammt405_gcbi_t_mask()
                  LET g_mmea6_d_mask_n[l_ac].* =  g_mmea6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            IF l_cmd = 'u' THEN
               #券单位金额
               SELECT oocq009 INTO g_mmea6_d[l_ac].oocq009
                 FROM oocq_t
                WHERE oocqent = g_enterprise
                  AND oocq001 = '2071'
                  AND oocq002 = g_mmea6_d[l_ac].gcbi004

               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi003
               CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea6_d[l_ac].gcbi003_desc = '', g_rtn_fields[1] , ''   
   
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
            END IF 
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body6.b_delete"
                              
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_mmea6_d_t.gcbiseq
               LET gs_keys[gs_keys.getLength()+1] = g_mmea6_d_t.gcbiseq1
            
               #刪除同層單身
               IF NOT ammt405_delete_b('gcbi_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt405_key_delete_b(gs_keys,'gcbi_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身6刪除中 name="input.body6.m_delete"
                              
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt405_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body6.a_delete"
                                    
               #end add-point
               LET l_count = g_mmea_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
                        
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmea6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body6.b_a_insert"
                        
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM gcbi_t 
             WHERE gcbient = g_enterprise AND gcbidocno = g_rtia_m.rtiadocno
               AND gcbiseq = g_mmea6_d[l_ac].gcbiseq
               AND gcbiseq1 = g_mmea6_d[l_ac].gcbiseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body6.b_insert"
                              
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea6_d[g_detail_idx].gcbiseq
               LET gs_keys[3] = g_mmea6_d[g_detail_idx].gcbiseq1
               CALL ammt405_insert_b('gcbi_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body6.a_insert"
                              
               #end add-point
            ELSE    
               INITIALIZE g_mmea_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt405_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmea6_d[l_ac].* = g_mmea6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmea6_d[l_ac].* = g_mmea6_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body6.b_update"
                              
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL ammt405_gcbi_t_mask_restore('restore_mask_o')
                              
               UPDATE gcbi_t SET (gcbidocno,gcbiseq,gcbiseq1,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005, 
                   gcbi009,gcbi006,gcbi007,gcbi008) = (g_rtia_m.rtiadocno,g_mmea6_d[l_ac].gcbiseq,g_mmea6_d[l_ac].gcbiseq1, 
                   g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002,g_mmea6_d[l_ac].gcbi003,g_mmea6_d[l_ac].gcbi004, 
                   g_mmea6_d[l_ac].gcbi005,g_mmea6_d[l_ac].gcbi009,g_mmea6_d[l_ac].gcbi006,g_mmea6_d[l_ac].gcbi007, 
                   g_mmea6_d[l_ac].gcbi008) #自訂欄位頁簽
                WHERE gcbient = g_enterprise AND gcbidocno = g_rtia_m.rtiadocno
                  AND gcbiseq = g_mmea6_d_t.gcbiseq #項次 
                  AND gcbiseq1 = g_mmea6_d_t.gcbiseq1
                  
               #add-point:單身page6修改中 name="input.body6.m_update"
                              
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmea6_d[l_ac].* = g_mmea6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gcbi_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmea6_d[l_ac].* = g_mmea6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea6_d[g_detail_idx].gcbiseq
               LET gs_keys_bak[2] = g_mmea6_d_t.gcbiseq
               LET gs_keys[3] = g_mmea6_d[g_detail_idx].gcbiseq1
               LET gs_keys_bak[3] = g_mmea6_d_t.gcbiseq1
               CALL ammt405_update_b('gcbi_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ammt405_gcbi_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_mmea6_d[g_detail_idx].gcbiseq = g_mmea6_d_t.gcbiseq 
                  AND g_mmea6_d[g_detail_idx].gcbiseq1 = g_mmea6_d_t.gcbiseq1 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea6_d_t.gcbiseq
                  LET gs_keys[gs_keys.getLength()+1] = g_mmea6_d_t.gcbiseq1
                  CALL ammt405_key_update_b(gs_keys,'gcbi_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea6_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_mmea6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body6.a_update"
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
               END IF
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbiseq
            #add-point:BEFORE FIELD gcbiseq name="input.b.page6.gcbiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbiseq
            
            #add-point:AFTER FIELD gcbiseq name="input.a.page6.gcbiseq"
            #此段落由子樣板a05產生
            IF  g_rtia_m.rtiadocno IS NOT NULL AND g_mmea6_d[g_detail_idx].gcbiseq IS NOT NULL AND g_mmea6_d[g_detail_idx].gcbiseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t OR g_mmea6_d[g_detail_idx].gcbiseq != g_mmea6_d_t.gcbiseq OR g_mmea6_d[g_detail_idx].gcbiseq1 != g_mmea6_d_t.gcbiseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gcbi_t WHERE "||"gcbient = '" ||g_enterprise|| "' AND "||"gcbidocno = '"||g_rtia_m.rtiadocno ||"' AND "|| "gcbiseq = '"||g_mmea6_d[g_detail_idx].gcbiseq ||"' AND "|| "gcbiseq1 = '"||g_mmea6_d[g_detail_idx].gcbiseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbiseq
            #add-point:ON CHANGE gcbiseq name="input.g.page6.gcbiseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbiseq1
            #add-point:BEFORE FIELD gcbiseq1 name="input.b.page6.gcbiseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbiseq1
            
            #add-point:AFTER FIELD gcbiseq1 name="input.a.page6.gcbiseq1"
            #此段落由子樣板a05產生
            IF  g_rtia_m.rtiadocno IS NOT NULL AND g_mmea6_d[g_detail_idx].gcbiseq IS NOT NULL AND g_mmea6_d[g_detail_idx].gcbiseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtia_m.rtiadocno != g_rtiadocno_t OR g_mmea6_d[g_detail_idx].gcbiseq != g_mmea6_d_t.gcbiseq OR g_mmea6_d[g_detail_idx].gcbiseq1 != g_mmea6_d_t.gcbiseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gcbi_t WHERE "||"gcbient = '" ||g_enterprise|| "' AND "||"gcbidocno = '"||g_rtia_m.rtiadocno ||"' AND "|| "gcbiseq = '"||g_mmea6_d[g_detail_idx].gcbiseq ||"' AND "|| "gcbiseq1 = '"||g_mmea6_d[g_detail_idx].gcbiseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbiseq1
            #add-point:ON CHANGE gcbiseq1 name="input.g.page6.gcbiseq1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi001
            #add-point:BEFORE FIELD gcbi001 name="input.b.page6.gcbi001"
            IF cl_null(g_mmea6_d[l_ac].gcbi001) THEN 
               LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d[l_ac].gcbi002
            END IF 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi001
            
            #add-point:AFTER FIELD gcbi001 name="input.a.page6.gcbi001"
            IF NOT cl_null(g_mmea6_d[l_ac].gcbi001) THEN 
               CALL ammt405_gcbi001_chk(g_mmea6_d[l_ac].gcbi001)
               IF NOT cl_null(g_errno) THEN 
                  LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d_t.gcbi001
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT 
               END IF 
               #检查重复
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea6_d[l_ac].gcbi001 != g_mmea6_d_t.gcbi001) THEN #160824-00007#123 by sakura mark
               IF g_mmea6_d[l_ac].gcbi001 != g_mmea6_d_o.gcbi001 OR cl_null(g_mmea6_d_o.gcbi001) THEN #160824-00007#123 by sakura add
                  CALL ammt405_gcbi001_gcbi002_key(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002,l_cmd)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d_t.gcbi001 #160824-00007#123 by sakura mark
                     LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d_o.gcbi001  #160824-00007#123 by sakura add
                     NEXT FIELD gcbi001
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea6_d[l_ac].gcbi002) THEN 
                  CALL ammt405_gcbi001_gcbi002_chk(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002)
                     IF NOT cl_null(g_errno) THEN 
                        #LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d_t.gcbi001 #160824-00007#123 by sakura mark
                        LET g_mmea6_d[l_ac].gcbi001 = g_mmea6_d_o.gcbi001  #160824-00007#123 by sakura add
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD CURRENT 
                  END IF 
               END IF 
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea6_d[l_ac].gcbi001 != g_mmea6_d_t.gcbi001) THEN #160824-00007#123 by sakura mark
               IF g_mmea6_d[l_ac].gcbi001 != g_mmea6_d_o.gcbi001 OR cl_null(g_mmea6_d_o.gcbi001) THEN #160824-00007#123 by sakura add
                  CALL ammt405_gcbi001_display(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002)
               END IF 
            END IF 
            LET g_mmea6_d_o.* = g_mmea6_d[l_ac].*  #160824-00007#123 by sakura add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbi001
            #add-point:ON CHANGE gcbi001 name="input.g.page6.gcbi001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi002
            #add-point:BEFORE FIELD gcbi002 name="input.b.page6.gcbi002"
            IF cl_null(g_mmea6_d[l_ac].gcbi002) THEN 
               LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d[l_ac].gcbi001
            END IF 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi002
            
            #add-point:AFTER FIELD gcbi002 name="input.a.page6.gcbi002"
            IF NOT cl_null(g_mmea6_d[l_ac].gcbi002) THEN 
               CALL ammt405_gcbi001_chk(g_mmea6_d[l_ac].gcbi002)
               IF NOT cl_null(g_errno) THEN 
                  #LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_t.gcbi002 #160824-00007#123 by sakura mark
                  LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_o.gcbi002  #160824-00007#123 by sakura add
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT 
               END IF 
               #检查重复
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea6_d[l_ac].gcbi002 != g_mmea6_d_t.gcbi002) THEN #160824-00007#123 by sakura mark
               IF g_mmea6_d[l_ac].gcbi002 != g_mmea6_d_o.gcbi002 OR cl_null(g_mmea6_d_o.gcbi002) THEN #160824-00007#123 by sakura add
                  CALL ammt405_gcbi001_gcbi002_key(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002,l_cmd)
                  IF NOT cl_null(g_errno) THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     #LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_t.gcbi002 #160824-00007#123 by sakura mark
                     LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_o.gcbi002  #160824-00007#123 by sakura add
                     NEXT FIELD gcbi002
                  END IF 
               END IF 
               IF NOT cl_null(g_mmea6_d[l_ac].gcbi001) THEN 
                  CALL ammt405_gcbi001_gcbi002_chk(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002)
                     IF NOT cl_null(g_errno) THEN 
                        #LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_t.gcbi002 #160824-00007#123 by sakura mark
                        LET g_mmea6_d[l_ac].gcbi002 = g_mmea6_d_o.gcbi002  #160824-00007#123 by sakura add
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD CURRENT 
                  END IF 
               END IF 
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_mmea6_d[l_ac].gcbi002 != g_mmea6_d_t.gcbi002) THEN #160824-00007#123 by sakura mark
               IF g_mmea6_d[l_ac].gcbi002 != g_mmea6_d_o.gcbi002 OR cl_null(g_mmea6_d_o.gcbi002) THEN #160824-00007#123 by sakura add
                  CALL ammt405_gcbi001_display(g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002)
               END IF 
            END IF
            LET g_mmea6_d_o.* = g_mmea6_d[l_ac].*  #160824-00007#123 by sakura add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbi002
            #add-point:ON CHANGE gcbi002 name="input.g.page6.gcbi002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mmea6_d[l_ac].gcbi009,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD gcbi009
            END IF 
 
 
 
            #add-point:AFTER FIELD gcbi009 name="input.a.page6.gcbi009"
            IF NOT cl_null(g_mmea6_d[l_ac].gcbi009) THEN 
               LET g_mmea6_d[l_ac].gcbi006 = g_mmea6_d[l_ac].oocq009*g_mmea6_d[l_ac].gcbi005*g_mmea6_d[l_ac].gcbi009/100
               DISPLAY BY NAME g_mmea6_d[l_ac].gcbi006
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi009
            #add-point:BEFORE FIELD gcbi009 name="input.b.page6.gcbi009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbi009
            #add-point:ON CHANGE gcbi009 name="input.g.page6.gcbi009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gcbi007
            #add-point:BEFORE FIELD gcbi007 name="input.b.page6.gcbi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gcbi007
            
            #add-point:AFTER FIELD gcbi007 name="input.a.page6.gcbi007"
            IF NOT cl_null(g_mmea6_d[l_ac].gcbi007) THEN 
               CALL ammt405_mmea013_chk(g_mmea6_d[l_ac].gcbi007)
               IF NOT cl_null(g_errno) THEN 
                  LET g_mmea6_d[l_ac].gcbi007 = g_mmea6_d_t.gcbi007
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD gcbi007
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gcbi007
            #add-point:ON CHANGE gcbi007 name="input.g.page6.gcbi007"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page6.gcbiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbiseq
            #add-point:ON ACTION controlp INFIELD gcbiseq name="input.c.page6.gcbiseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.gcbiseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbiseq1
            #add-point:ON ACTION controlp INFIELD gcbiseq1 name="input.c.page6.gcbiseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.gcbi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi001
            #add-point:ON ACTION controlp INFIELD gcbi001 name="input.c.page6.gcbi001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmea6_d[l_ac].gcbi001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark 
            IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
               LET g_qryparam.where =  " gcao002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                                       "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                       "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                       "      AND ooed006 <='",g_today,"' ",
                                       "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                       "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                       "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                       "      AND ooed006 <='",g_today,"' ",
                                       "      AND (ooed007>='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                       " AND gcao005 IN('1','5') "
            ELSE
               LET g_qryparam.where =  " gcao002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                                       "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                       "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                       "      AND ooed006 <='",g_today,"' ",
                                       "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                       "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                       "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                       "      AND ooed006 <='",g_today,"' ",
                                       "      AND (ooed007>='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                       " AND gcao005 = '4' "
            END IF 
            CALL q_gcao001_9()                                #呼叫開窗

            LET g_mmea6_d[l_ac].gcbi001 = g_qryparam.return1              

            DISPLAY g_mmea6_d[l_ac].gcbi001 TO gcbi001              #

            NEXT FIELD gcbi001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page6.gcbi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi002
            #add-point:ON ACTION controlp INFIELD gcbi002 name="input.c.page6.gcbi002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmea6_d[l_ac].gcbi002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where =  " gcao002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                                    "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                    "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                    "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                    "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                    " AND gcao005 IN('1','5') "
            CALL q_gcao001_9()                                #呼叫開窗

            LET g_mmea6_d[l_ac].gcbi002 = g_qryparam.return1              

            DISPLAY g_mmea6_d[l_ac].gcbi002 TO gcbi002              #

            NEXT FIELD gcbi002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page6.gcbi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi009
            #add-point:ON ACTION controlp INFIELD gcbi009 name="input.c.page6.gcbi009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.gcbi007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gcbi007
            #add-point:ON ACTION controlp INFIELD gcbi007 name="input.c.page6.gcbi007"
            #此段落由子樣板a07產生            
            ### 庫位編號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea6_d[l_ac].gcbi007 = g_qryparam.return1
            DISPLAY g_mmea6_d[l_ac].gcbi007 TO gcbi007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''            
            ### 庫位編號### end ###
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body6.after_row"
                        
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmea6_d[l_ac].* = g_mmea6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt405_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL ammt405_unlock_b("gcbi_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body6.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
                        
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmea6_d[li_reproduce_target].* = g_mmea6_d[li_reproduce].*
 
               LET g_mmea6_d[li_reproduce_target].gcbiseq = NULL
               LET g_mmea6_d[li_reproduce_target].gcbiseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmea6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmea6_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_mmea10_d TO s_detail10.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt405_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail10")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body10.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail10")
            CALL ammt405_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body10.action"
            CALL ammt405_b_fill()
            LET g_rec_b = g_mmea10_d.getLength()
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_mmea7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt405_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            LET g_detail_idx = l_ac
            
            #add-point:page7, before row動作 name="input.body7.before_row"
 
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            CALL ammt405_idx_chk()
            LET g_current_page = 7
      
         #add-point:page7自定義行為 name="input.body7.action"
            CALL ammt405_b_fill()
            LET g_rec_b = g_mmea7_d.getLength()
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_mmea8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt405_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail8")
            LET g_detail_idx = l_ac
            
            #add-point:page8, before row動作 name="input.body8.before_row"
                        
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail8")
            CALL ammt405_idx_chk()
            LET g_current_page = 8
      
         #add-point:page8自定義行為 name="input.body8.action"
            CALL ammt405_b_fill()
            LET g_rec_b = g_mmea8_d.getLength()
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_mmea9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt405_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail9")
            LET g_detail_idx = l_ac
            
            #add-point:page9, before row動作 name="input.body9.before_row"
                        
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail9")
            CALL ammt405_idx_chk()
            LET g_current_page = 9
      
         #add-point:page9自定義行為 name="input.body9.action"
            CALL ammt405_b_fill()
            LET g_rec_b = g_mmea9_d.getLength()
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="ammt405.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      INPUT ARRAY g_mmea5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmea5_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
 
            CALL ammt405_b_fill()
            LET g_rec_b = g_mmea5_d.getLength()
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmea5_d[l_ac].* TO NULL 
            
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,g_mmea5_d[l_ac].mmed013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
            LET g_mmea5_d_t.* = g_mmea5_d[l_ac].*
            CALL cl_show_fld_cont()
            CALL ammt405_set_entry_b(l_cmd)

            CALL ammt405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmea5_d[li_reproduce_target].* = g_mmea5_d[li_reproduce].*
 
               LET g_mmea5_d[li_reproduce_target].mmedseq = NULL
            END IF
            
            SELECT MAX(mmedseq)+1 INTO g_mmea5_d[l_ac].mmedseq
              FROM mmed_t
             WHERE mmedent = g_enterprise
               AND mmeddocno = g_rtia_m.rtiadocno
            IF cl_null(g_mmea5_d[l_ac].mmedseq) THEN 
               LET g_mmea5_d[l_ac].mmedseq = 1
            END IF 
            LET g_mmea5_d[l_ac].mmed004 = -1
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN ammt405_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE ammt405_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_mmea5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmea5_d[l_ac].mmedseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_mmea5_d_t.* = g_mmea5_d[l_ac].*  
               CALL ammt405_set_entry_b(l_cmd)
               CALL ammt405_set_no_entry_b(l_cmd)
               IF NOT ammt405_lock_b("mmed_t1","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt405_bcl10 INTO g_mmea5_d[l_ac].mmedseq,g_mmea5_d[l_ac].mmed014,g_mmea5_d[l_ac].mmed014_1_desc, 
                        g_mmea5_d[l_ac].mmed001,g_mmea5_d[l_ac].mmaq002,g_mmea5_d[l_ac].mmaq003,g_mmea5_d[l_ac].mmed002,
                        g_mmea5_d[l_ac].mmed003,g_mmea5_d[l_ac].mmed005,g_mmea5_d[l_ac].mmed009,g_mmea5_d[l_ac].mmed010,
                        g_mmea5_d[l_ac].mmed012,g_mmea5_d[l_ac].mmed013
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL ammt405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

            IF l_cmd = 'u' THEN 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed014
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_mmea5_d[l_ac].mmed014_1_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_mmea5_d[l_ac].mmed014_1_desc
               CALL ammt405_mmed001_chk()
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
               CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
               LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
            END IF  
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mmea5_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mmea5_d.deleteElement(l_ac)
               NEXT FIELD mmedseq
            END IF
         
            IF g_mmea5_d[l_ac].mmedseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               DELETE FROM mmed_t
                WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtiadocno AND
                      mmedseq = g_mmea5_d_t.mmedseq
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "mmea_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE ammt405_bcl
               LET l_count = g_mmea_d.getLength()
            END IF 
            
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea5_d[g_detail_idx].mmedseq
 
            
         AFTER DELETE 
#            CALL ammt405_delete_b('mmed_t',gs_keys,"'10'")
             IF NOT ammt405_delete_b('mmed_t',gs_keys,"'10'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt405_bcl10
                 
               END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mmed_t 
             WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtiadocno
               AND mmedseq = g_mmea5_d[l_ac].mmedseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_mmea5_d[g_detail_idx].mmedseq
               CALL ammt405_insert_b('mmed_t',gs_keys,"'10'")
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_mmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmed_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')              
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_mmea5_d[l_ac].* = g_mmea5_d_t.*
               CLOSE ammt405_bcl10
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_mmea5_d[l_ac].* = g_mmea5_d_t.*
            ELSE
               UPDATE mmed_t SET (mmeddocno,mmedseq,mmed001,mmed002,mmed003,mmed005,
                                  mmed009,mmed010,mmed012,mmed014,mmed013) = (g_rtia_m.rtiadocno,g_mmea5_d[l_ac].mmedseq, 
                   g_mmea5_d[l_ac].mmed001,g_mmea5_d[l_ac].mmed002,g_mmea5_d[l_ac].mmed003,g_mmea5_d[l_ac].mmed005, 
                   g_mmea5_d[l_ac].mmed009,g_mmea5_d[l_ac].mmed010,g_mmea5_d[l_ac].mmed012,g_mmea5_d[l_ac].mmed014,g_mmea5_d[l_ac].mmed013)  
                WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtiadocno
                  AND mmedseq = g_mmea5_d_t.mmedseq

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "mmed_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_mmea5_d[l_ac].* = g_mmea5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "mmed_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_mmea5_d[l_ac].* = g_mmea5_d_t.*
                  OTHERWISE
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_mmea5_d[g_detail_idx].mmedseq
               LET gs_keys_bak[2] = g_mmea5_d_t.mmedseq
               CALL ammt405_update_b('mmed_t',gs_keys,gs_keys_bak,"'10'")
               END CASE
               CALL ammt405_ins_rtib() RETURNING r_success
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
               END IF  
               #end add-point
            END IF
         

         AFTER FIELD mmed001_1
            IF NOT cl_null(g_mmea5_d[l_ac].mmed001) THEN 
               CALL ammt405_mmed001_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea5_d[l_ac].mmed001 = g_mmea5_d_t.mmed001
                  NEXT FIELD CURRENT 
               END IF 
            END IF
            
         AFTER FIELD mmed014_1
            IF NOT cl_null(g_mmea5_d[l_ac].mmed014) THEN 
               CALL ammt405_oocq002_chk(g_mmea5_d[l_ac].mmed014)
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea5_d[l_ac].mmed014 = g_mmea5_d_t.mmed014
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed014_1_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea5_d[l_ac].mmed014_1_desc

         AFTER FIELD mmed013_1
            IF NOT cl_null(g_mmea5_d[l_ac].mmed013) THEN 
               CALL ammt405_mmea013_chk(g_mmea5_d[l_ac].mmed013) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_mmea5_d[l_ac].mmed013 = g_mmea5_d_t.mmed013
                  NEXT FIELD mmed013_1
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
            
         ON ACTION controlp INFIELD mmed001_1
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = " mmaq002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
                                   "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                   "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                   "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                   "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                   "      AND ooed006 <='",g_today,"' ",
                                   "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                   " AND mmaq006 = '3' AND (mmaq005 IS NULL OR mmaq005 >= '",g_today,"')"
            CALL q_mmaq001_7()
            LET g_mmea5_d[l_ac].mmed001 = g_qryparam.return1
            DISPLAY g_mmea5_d[l_ac].mmed001 TO mmed001_1
 
         ON ACTION controlp INFIELD mmed014_1
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.where = "1=1"
            LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()
            LET g_mmea5_d[l_ac].mmed014 = g_qryparam.return1
            DISPLAY g_mmea5_d[l_ac].mmed014 TO mmed014_1
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed014_1_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmea5_d[l_ac].mmed014_1_desc

 
         ON ACTION controlp INFIELD mmed013_1
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            LET g_qryparam.arg1 = g_rtia_m.rtiasite
            CALL q_inaa001_4()
            LET g_mmea5_d[l_ac].mmed013 = g_qryparam.return1
            DISPLAY g_mmea5_d[l_ac].mmed013 TO mmed013_1
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mmea5_d[l_ac].* = g_mmea5_d_t.*
               END IF
               CLOSE ammt405_bcl10
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            CALL ammt405_unlock_b("mmed_t1","'10'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
                        
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_mmea5_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mmea5_d.getLength()+1
 
      END INPUT
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
          IF p_cmd = 'a' THEN 
            NEXT FIELD rtiasite
         END IF 
         IF g_set_comp = 'Y' THEN 
            NEXT FIELD mmea009
         END IF 
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail10",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'7',"))
         CALL DIALOG.setCurrentRow("s_detail8",g_idx_group.getValue("'8',"))
         CALL DIALOG.setCurrentRow("s_detail9",g_idx_group.getValue("'9',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD rtiadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmeaseq
               WHEN "s_detail10"
                  NEXT FIELD rtieseq
               WHEN "s_detail2"
                  NEXT FIELD mmecseq
               WHEN "s_detail3"
                  NEXT FIELD mmebseq
               WHEN "s_detail4"
                  NEXT FIELD mmedseq
               WHEN "s_detail6"
                  NEXT FIELD gcbiseq
               WHEN "s_detail7"
                  NEXT FIELD rtibseq
               WHEN "s_detail8"
                  NEXT FIELD rticseq
               WHEN "s_detail9"
                  NEXT FIELD xrcd007
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   CALL ammt405_b_fill()
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark 
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      SELECT SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      SELECT SUM(mmea005)
        INTO g_rtia_m.snum
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
      #add by yangxf --start----2016/01/22
      SELECT SUM(mmea010*mmea005)
        INTO g_rtia_m.amount4
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
     #add by yangxf ---end----2016/01/22
   ELSE
      SELECT SUM(rtib012),SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
   END IF 
   DISPLAY g_rtia_m.snum TO FORMONLY.snum  
   DISPLAY g_rtia_m.amount TO FORMONLY.amount
   DISPLAY g_rtia_m.amount2 TO FORMONLY.amount2
   DISPLAY g_rtia_m.amount3 TO FORMONLY.amount3
   DISPLAY g_rtia_m.amount4 TO FORMONLY.amount4   #add by yangxf 2016/01/22
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt405_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_mmaq003 LIKE mmaq_t.mmaq003
   DEFINE l_s       INT 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
      
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt405_b_fill() #單身填充
      CALL ammt405_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL ammt405_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   SELECT mmaq003 INTO l_mmaq003 
     FROM mmaq_t
    WHERE mmaq001 = g_rtia_m.rtia001
      AND mmaqent = g_enterprise
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_mmaq003
   CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
   LET g_rtia_m.rtia001_desc = '', g_rtn_fields[1] , ''
          
   #end add-point
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL ammt405_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia025_desc, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3, 
       g_rtia_m.amount4
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmea_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
 
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmea10_d.getLength()
      #add-point:show段單身reference name="show.body10.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
            
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
            
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
            
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea8_d.getLength()
      #add-point:show段單身reference name="show.body8.reference"
            
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_mmea9_d.getLength()
      #add-point:show段單身reference name="show.body9.reference"
            
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
      
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt405_detail_show()
 
   #add-point:show段之後 name="show.after"
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark 
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      SELECT SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      SELECT SUM(mmea005)
        INTO g_rtia_m.snum
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
      #add by yangxf --start----2016/01/22
      SELECT SUM(mmea010*mmea005)
        INTO g_rtia_m.amount4
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
     #add by yangxf ---end----2016/01/22
   ELSE
      SELECT SUM(rtib012),SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
   END IF 
   DISPLAY g_rtia_m.snum TO FORMONLY.snum  
   DISPLAY g_rtia_m.amount TO FORMONLY.amount
   DISPLAY g_rtia_m.amount2 TO FORMONLY.amount2
   DISPLAY g_rtia_m.amount3 TO FORMONLY.amount3
   DISPLAY g_rtia_m.amount4 TO FORMONLY.amount4   #add by yangxf 2016/01/22
   ##add by zhangnan
   IF g_prog = 'ammt405' then 
      let l_s = 0 
      SELECT COUNT (*) INTO l_s FROM rtif_t 
      WHERE rtifent=g_enterprise AND rtifdocno=g_rtia_m.rtiadocno    
      IF g_rtia_m.rtiastus = 'N' AND  l_s = 0 THEN
         CALL cl_set_act_visible("card_batch",TRUE)    
      ELSE
         CALL cl_set_act_visible("card_batch",FALSE)
      END IF
   END IF       
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION ammt405_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
      
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
      
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
      
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION ammt405_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE rtia_t.rtiadocno 
   DEFINE l_oldno     LIKE rtia_t.rtiadocno 
 
   DEFINE l_master    RECORD LIKE rtia_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE mmea_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE mmec_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE mmeb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE mmed_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE gcbi_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE rtib_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_insert    LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
    
   LET g_rtia_m.rtiadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtia_m.rtiaownid = g_user
      LET g_rtia_m.rtiaowndp = g_dept
      LET g_rtia_m.rtiacrtid = g_user
      LET g_rtia_m.rtiacrtdp = g_dept 
      LET g_rtia_m.rtiacrtdt = cl_get_current()
      LET g_rtia_m.rtiamodid = g_user
      LET g_rtia_m.rtiamoddt = cl_get_current()
      LET g_rtia_m.rtiastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_site_flag = FALSE
   CALL s_aooi500_default(g_prog,'rtiasite',g_rtia_m.rtiasite)
      RETURNING l_insert,g_rtia_m.rtiasite
   IF NOT l_insert THEN
      RETURN
   END IF   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL ammt405_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtia_m.* TO NULL
      INITIALIZE g_mmea_d TO NULL
      INITIALIZE g_mmea10_d TO NULL
      INITIALIZE g_mmea2_d TO NULL
      INITIALIZE g_mmea3_d TO NULL
      INITIALIZE g_mmea4_d TO NULL
      INITIALIZE g_mmea6_d TO NULL
      INITIALIZE g_mmea7_d TO NULL
      INITIALIZE g_mmea8_d TO NULL
      INITIALIZE g_mmea9_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL ammt405_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt405_set_act_visible()   
   CALL ammt405_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt405_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
      
   #end add-point
   
   CALL ammt405_idx_chk()
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #功能已完成,通報訊息中心
   CALL ammt405_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION ammt405_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmea_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE mmec_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE mmeb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE mmed_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE gcbi_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE rtib_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   DEFINE l_detail10    RECORD LIKE mmed_t.*
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt405_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmea_t
    WHERE mmeaent = g_enterprise AND mmeadocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail 
      #更新key欄位
      SET mmeadocno = g_rtia_m.rtiadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO mmea_t SELECT * FROM ammt405_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtie_t 
    WHERE rtieent = g_enterprise AND rtiedocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET rtiedocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtie_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmec_t 
    WHERE mmecent = g_enterprise AND mmecdocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET mmecdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO mmec_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmeb_t 
    WHERE mmebent = g_enterprise AND mmebdocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET mmebdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO mmeb_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmed_t 
    WHERE mmedent = g_enterprise AND mmeddocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET mmeddocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO mmed_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM gcbi_t 
    WHERE gcbient = g_enterprise AND gcbidocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET gcbidocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO gcbi_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtib_t 
    WHERE rtibent = g_enterprise AND rtibdocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET rtibdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtib_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table8.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtic_t 
    WHERE rticent = g_enterprise AND rticdocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET rticdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table8.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table8.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table8.a_insert"
      
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table9.b_insert"
      
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xrcd_t 
    WHERE xrcdent = g_enterprise AND xrcddocno = g_rtiadocno_t
 
    INTO TEMP ammt405_detail
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET xrcddocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table9.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM ammt405_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table9.m_insert"
      
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table9.a_insert"
      
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.delete" >}
#+ 資料刪除
PRIVATE FUNCTION ammt405_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_n              LIKE type_t.num5  
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   #160818-00017#22 add-S
   IF NOT ammt405_action_chk() THEN
       RETURN
   END IF   
   #160818-00017#22 add-E
   
   IF g_rtia_m.rtia048 = 'Y' THEN
      #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "amm-00449"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "art-00374"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
      RETURN 
   END IF 
   #检查是否有收款资料
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM rtif_t
    WHERE rtifent = g_enterprise
      AND rtifdocno = g_rtia_m.rtiadocno   
   IF l_n > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "art-00397"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF   
   #end add-point
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt405_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
                  CALL ammt405_isaf_t('s')
   
   #檢查是否允許此動作
   IF NOT ammt405_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL ammt405_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   CALL ammt405_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
            
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL ammt405_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
 
      DELETE FROM rtia_t
       WHERE rtiaent = g_enterprise AND rtiadocno = g_rtia_m.rtiadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
            
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtia_m.rtiadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
#add by yangxf ---start----
      IF NOT s_aooi200_del_docno(g_rtia_m.rtiadocno,g_rtia_m.rtiadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
#add by yangxf ----end-----
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      #删除收款资料
      DELETE FROM rtif_t
       WHERE rtifent = g_enterprise
         AND rtifdocno = g_rtia_m.rtiadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_rtia_m.rtiadocno
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF         
      #end add-point
      
      DELETE FROM mmea_t
       WHERE mmeaent = g_enterprise AND mmeadocno = g_rtia_m.rtiadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
            
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
            
      #end add-point
      
                     CALL ammt405_isaf_t('d')      
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
            
      #end add-point
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
            
      #end add-point
      DELETE FROM mmec_t
       WHERE mmecent = g_enterprise AND
             mmecdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
            
      #end add-point
      DELETE FROM mmeb_t
       WHERE mmebent = g_enterprise AND
             mmebdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
            
      #end add-point
      DELETE FROM mmed_t
       WHERE mmedent = g_enterprise AND
             mmeddocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
            
      #end add-point
      DELETE FROM gcbi_t
       WHERE gcbient = g_enterprise AND
             gcbidocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete6"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
            
      #end add-point
      DELETE FROM rtib_t
       WHERE rtibent = g_enterprise AND
             rtibdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete7"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete8"
            
      #end add-point
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete8"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete8"
            
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete9"
            
      #end add-point
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete9"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete9"
      CALL g_mmea5_d.clear() 
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_rtia_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE ammt405_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_mmea_d.clear() 
      CALL g_mmea10_d.clear()       
      CALL g_mmea2_d.clear()       
      CALL g_mmea3_d.clear()       
      CALL g_mmea4_d.clear()       
      CALL g_mmea6_d.clear()       
      CALL g_mmea7_d.clear()       
      CALL g_mmea8_d.clear()       
      CALL g_mmea9_d.clear()       
 
     
      CALL ammt405_ui_browser_refresh()  
      #CALL ammt405_ui_headershow()  
      #CALL ammt405_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL ammt405_browser_fill("")
         CALL ammt405_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE ammt405_cl
 
   #功能已完成,通報訊息中心
   CALL ammt405_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="ammt405.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ammt405_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
      
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_mmea_d.clear()
   CALL g_mmea10_d.clear()
   CALL g_mmea2_d.clear()
   CALL g_mmea3_d.clear()
   CALL g_mmea4_d.clear()
   CALL g_mmea6_d.clear()
   CALL g_mmea7_d.clear()
   CALL g_mmea8_d.clear()
   CALL g_mmea9_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_mmea5_d.clear()
   #end add-point
   
   #判斷是否填充
   IF ammt405_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmeaseq,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006,mmea007, 
             mmea008,mmea009,mmea010,mmea011,mmea012,mmea013,mmea014,mmea015,mmea016 ,t1.mmanl003 FROM mmea_t", 
                
                     " INNER JOIN rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = mmeadocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN mmanl_t t1 ON t1.mmanlent="||g_enterprise||" AND t1.mmanl001=mmea003 AND t1.mmanl002='"||g_dlang||"' ",
 
                     " WHERE mmeaent=? AND mmeadocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
 
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmea_t.mmeaseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR ammt405_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea_d[l_ac].mmeaseq,g_mmea_d[l_ac].mmea001, 
          g_mmea_d[l_ac].mmea002,g_mmea_d[l_ac].mmea003,g_mmea_d[l_ac].mmea004,g_mmea_d[l_ac].mmea005, 
          g_mmea_d[l_ac].mmea006,g_mmea_d[l_ac].mmea007,g_mmea_d[l_ac].mmea008,g_mmea_d[l_ac].mmea009, 
          g_mmea_d[l_ac].mmea010,g_mmea_d[l_ac].mmea011,g_mmea_d[l_ac].mmea012,g_mmea_d[l_ac].mmea013, 
          g_mmea_d[l_ac].mmea014,g_mmea_d[l_ac].mmea015,g_mmea_d[l_ac].mmea016,g_mmea_d[l_ac].mmea003_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         #對應卡種編號/發卡方式/附贈卡最低銷費金額/單張購卡金額/记名卡
         SELECT mman009,mman010
           INTO g_mmea_d[l_ac].mmak009,g_mmea_d[l_ac].mmak010
           FROM mman_t,mmaq_t
          WHERE mmaqent = mmanent
            AND mmaq001 = g_mmea_d[l_ac].mmea001
            AND mman001 = mmaq002

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF ammt405_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtieseq,rtieseq1,rtie001,rtie002,rtie006 ,t2.ooial003 FROM rtie_t", 
                
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtiedocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t2 ON t2.ooialent="||g_enterprise||" AND t2.ooial001=rtie002 AND t2.ooial002='"||g_dlang||"' ",
 
                     " WHERE rtieent=? AND rtiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtie_t.rtieseq,rtie_t.rtieseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR ammt405_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea10_d[l_ac].rtieseq,g_mmea10_d[l_ac].rtieseq1, 
          g_mmea10_d[l_ac].rtie001,g_mmea10_d[l_ac].rtie002,g_mmea10_d[l_ac].rtie006,g_mmea10_d[l_ac].rtie002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         SELECT rtib003,rtib004
           INTO g_mmea10_d[l_ac].rtib003,g_mmea10_d[l_ac].rtib004
           FROM rtib_t
          WHERE rtibseq = g_mmea10_d[l_ac].rtieseq
            AND rtibent = g_enterprise
            AND rtibdocno = g_rtia_m.rtiadocno
            
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmecseq,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005,mmec006, 
             mmec007,mmec008,mmec009,mmec010,mmec011,mmec012,mmec013,mmec015 ,t3.oocql004 ,t4.mmanl003 , 
             t5.mmanl003 FROM mmec_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = mmecdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='2055' AND t3.oocql002=mmec014 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t4 ON t4.mmanlent="||g_enterprise||" AND t4.mmanl001=mmec002 AND t4.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t5 ON t5.mmanlent="||g_enterprise||" AND t5.mmanl001=mmec009 AND t5.mmanl002='"||g_dlang||"' ",
 
                     " WHERE mmecent=? AND mmecdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmec_t.mmecseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR ammt405_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea2_d[l_ac].mmecseq,g_mmea2_d[l_ac].mmec014, 
          g_mmea2_d[l_ac].mmec001,g_mmea2_d[l_ac].mmec002,g_mmea2_d[l_ac].mmec003,g_mmea2_d[l_ac].mmec004, 
          g_mmea2_d[l_ac].mmec005,g_mmea2_d[l_ac].mmec006,g_mmea2_d[l_ac].mmec007,g_mmea2_d[l_ac].mmec008, 
          g_mmea2_d[l_ac].mmec009,g_mmea2_d[l_ac].mmec010,g_mmea2_d[l_ac].mmec011,g_mmea2_d[l_ac].mmec012, 
          g_mmea2_d[l_ac].mmec013,g_mmea2_d[l_ac].mmec015,g_mmea2_d[l_ac].mmec014_desc,g_mmea2_d[l_ac].mmec002_desc, 
          g_mmea2_d[l_ac].mmec009_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmebseq,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005,mmeb006, 
             mmeb007,mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013,mmeb015 ,t6.oocql004 ,t7.mmanl003 , 
             t8.mmanl003 FROM mmeb_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = mmebdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='2055' AND t6.oocql002=mmeb014 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t7 ON t7.mmanlent="||g_enterprise||" AND t7.mmanl001=mmeb002 AND t7.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t8 ON t8.mmanlent="||g_enterprise||" AND t8.mmanl001=mmeb009 AND t8.mmanl002='"||g_dlang||"' ",
 
                     " WHERE mmebent=? AND mmebdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmeb_t.mmebseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR ammt405_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea3_d[l_ac].mmebseq,g_mmea3_d[l_ac].mmeb014, 
          g_mmea3_d[l_ac].mmeb001,g_mmea3_d[l_ac].mmeb002,g_mmea3_d[l_ac].mmeb003,g_mmea3_d[l_ac].mmeb004, 
          g_mmea3_d[l_ac].mmeb005,g_mmea3_d[l_ac].mmeb006,g_mmea3_d[l_ac].mmeb007,g_mmea3_d[l_ac].mmeb008, 
          g_mmea3_d[l_ac].mmeb009,g_mmea3_d[l_ac].mmeb010,g_mmea3_d[l_ac].mmeb011,g_mmea3_d[l_ac].mmeb012, 
          g_mmea3_d[l_ac].mmeb013,g_mmea3_d[l_ac].mmeb015,g_mmea3_d[l_ac].mmeb014_desc,g_mmea3_d[l_ac].mmeb002_desc, 
          g_mmea3_d[l_ac].mmeb009_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmedseq,mmed001,mmed002,mmed003,mmed004,mmed005,mmed006,mmed007, 
             mmed008,mmed009,mmed010,mmed012,mmed014,mmed013,mmed015,mmed016 ,t11.oocql004 FROM mmed_t", 
                
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = mmeddocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='2055' AND t11.oocql002=mmed014 AND t11.oocql003='"||g_dlang||"' ",
 
                     " WHERE mmedent=? AND mmeddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmed_t.mmedseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR ammt405_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea4_d[l_ac].mmedseq,g_mmea4_d[l_ac].mmed001, 
          g_mmea4_d[l_ac].mmed002,g_mmea4_d[l_ac].mmed003,g_mmea4_d[l_ac].mmed004,g_mmea4_d[l_ac].mmed005, 
          g_mmea4_d[l_ac].mmed006,g_mmea4_d[l_ac].mmed007,g_mmea4_d[l_ac].mmed008,g_mmea4_d[l_ac].mmed009, 
          g_mmea4_d[l_ac].mmed010,g_mmea4_d[l_ac].mmed012,g_mmea4_d[l_ac].mmed014,g_mmea4_d[l_ac].mmed013, 
          g_mmea4_d[l_ac].mmed015,g_mmea4_d[l_ac].mmed016,g_mmea4_d[l_ac].mmed014_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"

         SELECT mmaq002,mmaq003
           INTO g_mmea4_d[l_ac].mmaq002,g_mmea4_d[l_ac].mmaq003
           FROM mmaq_t
          WHERE mmaqent = g_enterprise
            AND mmaq001 = g_mmea4_d[l_ac].mmed001
            
         #150630-00009#1--add by dongsz--str---
         SELECT mmaf004,mmaf008 INTO g_mmea4_d[l_ac].mmaq003_desc,g_mmea4_d[l_ac].mmaq003_desc_desc
           FROM mmaf_t
          WHERE mmafent = g_enterprise
            AND mmaf001 = g_mmea4_d[l_ac].mmaq003
         #150630-00009#1--add by dongsz--end---          
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea4_d[l_ac].mmaq002
         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea4_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''   

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT gcbiseq,gcbiseq1,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005,gcbi009, 
             gcbi006,gcbi007,gcbi008 ,t12.gcafl003 FROM gcbi_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = gcbidocno ",
 
                     "",
                     
                                    " LEFT JOIN gcafl_t t12 ON t12.gcaflent="||g_enterprise||" AND t12.gcafl001=gcbi003 AND t12.gcafl002='"||g_dlang||"' ",
 
                     " WHERE gcbient=? AND gcbidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY gcbi_t.gcbiseq,gcbi_t.gcbiseq1"
         
         #add-point:單身填充控制 name="b_fill.sql6"
 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR ammt405_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea6_d[l_ac].gcbiseq,g_mmea6_d[l_ac].gcbiseq1, 
          g_mmea6_d[l_ac].gcbi001,g_mmea6_d[l_ac].gcbi002,g_mmea6_d[l_ac].gcbi003,g_mmea6_d[l_ac].gcbi004, 
          g_mmea6_d[l_ac].gcbi005,g_mmea6_d[l_ac].gcbi009,g_mmea6_d[l_ac].gcbi006,g_mmea6_d[l_ac].gcbi007, 
          g_mmea6_d[l_ac].gcbi008,g_mmea6_d[l_ac].gcbi003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         #券单位金额
         SELECT oocq009 INTO g_mmea6_d[l_ac].oocq009
           FROM oocq_t
          WHERE oocqent = g_enterprise
            AND oocq001 = '2071'
            AND oocq002 = g_mmea6_d[l_ac].gcbi004

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtibseq,rtib003,rtib004,rtib006,rtib008,rtib009,rtib010,rtib012, 
             rtib013,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib028,rtib030, 
             rtib039 ,t13.imaal003 ,t14.imaal004 ,t15.oocal003 ,t16.oocql004 ,t17.inayl003 FROM rtib_t", 
                
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtibdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=rtib004 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t14 ON t14.imaalent="||g_enterprise||" AND t14.imaal001=rtib004 AND t14.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t15 ON t15.oocalent="||g_enterprise||" AND t15.oocal001=rtib013 AND t15.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent="||g_enterprise||" AND t16.oocql001='295' AND t16.oocql002=rtib024 AND t16.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t17 ON t17.inaylent="||g_enterprise||" AND t17.inayl001=rtib025 AND t17.inayl002='"||g_dlang||"' ",
 
                     " WHERE rtibent=? AND rtibdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtib_t.rtibseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR ammt405_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea7_d[l_ac].rtibseq,g_mmea7_d[l_ac].rtib003, 
          g_mmea7_d[l_ac].rtib004,g_mmea7_d[l_ac].rtib006,g_mmea7_d[l_ac].rtib008,g_mmea7_d[l_ac].rtib009, 
          g_mmea7_d[l_ac].rtib010,g_mmea7_d[l_ac].rtib012,g_mmea7_d[l_ac].rtib013,g_mmea7_d[l_ac].rtib020, 
          g_mmea7_d[l_ac].rtib021,g_mmea7_d[l_ac].rtib031,g_mmea7_d[l_ac].rtib022,g_mmea7_d[l_ac].rtib024, 
          g_mmea7_d[l_ac].rtib025,g_mmea7_d[l_ac].rtib026,g_mmea7_d[l_ac].rtib027,g_mmea7_d[l_ac].rtib028, 
          g_mmea7_d[l_ac].rtib030,g_mmea7_d[l_ac].rtib039,g_mmea7_d[l_ac].rtib004_desc,g_mmea7_d[l_ac].rtib004_desc_desc, 
          g_mmea7_d[l_ac].rtib013_desc,g_mmea7_d[l_ac].rtib024_desc,g_mmea7_d[l_ac].rtib025_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         INITIALIZE g_ref_fields TO NULL
   
         SELECT oodbl004 INTO g_mmea7_d[l_ac].rtib006_desc 
           FROM oodbl_t,ooef_t
          WHERE oodblent = ooefent
           AND ooefent = g_enterprise
           AND ooef001 = g_rtia_m.rtiasite
           AND oodbl001 = ooef019
           AND oodbl002 = g_mmea7_d[l_ac].rtib006
         #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
         IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
            LET g_mmea7_d[l_ac].rtib012 = g_mmea7_d[l_ac].rtib012*(-1)
            LET g_mmea7_d[l_ac].rtib020 = g_mmea7_d[l_ac].rtib020*(-1)
            LET g_mmea7_d[l_ac].rtib021 = g_mmea7_d[l_ac].rtib021*(-1)
         END IF 
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(8) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body8.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006, 
             rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
             rtic018,rtic020  FROM rtic_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rticdocno ",
 
                     "",
                     
                     
                     " WHERE rticent=? AND rticdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body8.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtic_t.rticseq,rtic_t.rticseq1"
         
         #add-point:單身填充控制 name="b_fill.sql8"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR ammt405_pb8
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs8 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs8 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea8_d[l_ac].rticseq,g_mmea8_d[l_ac].rticseq1, 
          g_mmea8_d[l_ac].rtic001,g_mmea8_d[l_ac].rtic002,g_mmea8_d[l_ac].rtic003,g_mmea8_d[l_ac].rtic004, 
          g_mmea8_d[l_ac].rtic005,g_mmea8_d[l_ac].rtic006,g_mmea8_d[l_ac].rtic007,g_mmea8_d[l_ac].rtic008, 
          g_mmea8_d[l_ac].rtic009,g_mmea8_d[l_ac].rtic010,g_mmea8_d[l_ac].rtic011,g_mmea8_d[l_ac].rtic012, 
          g_mmea8_d[l_ac].rtic013,g_mmea8_d[l_ac].rtic014,g_mmea8_d[l_ac].rtic015,g_mmea8_d[l_ac].rtic016, 
          g_mmea8_d[l_ac].rtic017,g_mmea8_d[l_ac].rtic018,g_mmea8_d[l_ac].rtic020   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill8.fill"

         SELECT rtib003,rtib004,imaal003,imaal004,rtib013,rtib012,rtib008,rtib010,rtib021
           INTO g_mmea8_d[l_ac].rtib003,g_mmea8_d[l_ac].rtib004,g_mmea8_d[l_ac].imaal003,
                g_mmea8_d[l_ac].imaal004,g_mmea8_d[l_ac].rtib013,g_mmea8_d[l_ac].rtib012, 
                g_mmea8_d[l_ac].rtib008,g_mmea8_d[l_ac].rtib010,g_mmea8_d[l_ac].rtib021
           FROM rtib_t LEFT JOIN imaal_t ON imaalent = g_enterprise AND imaal001 = rtib004 AND imaal002 = g_dlang
          WHERE rtibseq = g_mmea8_d[l_ac].rticseq
            AND rtibent = g_enterprise
            AND rtibdocno = g_rtia_m.rtiadocno
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea8_d[l_ac].rtib013
         CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmea8_d[l_ac].rtib013_01_desc = '', g_rtn_fields[1] , ''
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF ammt405_fill_chk(9) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body9.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004, 
             xrcd104 ,t18.oodbl004 FROM xrcd_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = xrcddocno ",
 
                     "",
                     
                                    " LEFT JOIN oodbl_t t18 ON t18.oodblent="||g_enterprise||" AND t18.oodbl001='2' AND t18.oodbl002=xrcd002 AND t18.oodbl003='"||g_dlang||"' ",
 
                     " WHERE xrcdent=? AND xrcddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body9.fill_sql"
            
         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrcd_t.xrcdld,xrcd_t.xrcdseq,xrcd_t.xrcdseq2,xrcd_t.xrcd007"
         
         #add-point:單身填充控制 name="b_fill.sql9"
            
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt405_pb9 FROM g_sql
         DECLARE b_fill_cs9 CURSOR FOR ammt405_pb9
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs9 USING g_enterprise,g_rtia_m.rtiadocno   #(ver:78)
                                               
      FOREACH b_fill_cs9 USING g_enterprise,g_rtia_m.rtiadocno INTO g_mmea9_d[l_ac].xrcd007,g_mmea9_d[l_ac].xrcdld, 
          g_mmea9_d[l_ac].xrcdseq,g_mmea9_d[l_ac].xrcdseq2,g_mmea9_d[l_ac].xrcd002,g_mmea9_d[l_ac].xrcd003, 
          g_mmea9_d[l_ac].xrcd006,g_mmea9_d[l_ac].xrcd004,g_mmea9_d[l_ac].xrcd104,g_mmea9_d[l_ac].xrcd002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill9.fill"
         SELECT rtib003,rtib004,rtib006
           INTO g_mmea9_d[l_ac].rtib003,g_mmea9_d[l_ac].rtib004,g_mmea9_d[l_ac].rtib006
           FROM rtib_t
          WHERE rtibseq = g_mmea9_d[l_ac].xrcdseq
            AND rtibent = g_enterprise
            AND rtibdocno = g_rtia_m.rtiadocno

         SELECT oodbl004 INTO g_mmea9_d[l_ac].xrcd002_desc 
           FROM oodbl_t,ooef_t
          WHERE oodblent = ooefent
           AND ooefent = g_enterprise
           AND ooef001 = g_rtia_m.rtiasite
           AND oodbl001 = ooef019
           AND oodbl002 = g_mmea9_d[l_ac].xrcd002
           
         SELECT oodbl004 INTO g_mmea9_d[l_ac].rtib006_02_desc 
           FROM oodbl_t,ooef_t
          WHERE oodblent = ooefent
           AND ooefent = g_enterprise
           AND ooef001 = g_rtia_m.rtiasite
           AND oodbl001 = ooef019
           AND oodbl002 = g_mmea9_d[l_ac].rtib006
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   #判斷是否填充
   IF ammt405_fill_chk(10) THEN
      LET g_sql = "SELECT  UNIQUE mmedseq,mmed014,'',mmed001,'','','',mmed002,mmed003,mmed004,mmed005, 
                   mmed009,mmed010,mmed012,mmed013,'' FROM mmed_t",   
                  " INNER JOIN rtia_t ON rtiadocno = mmeddocno ",
 
                  "",
                  
                  " WHERE mmedent=? AND mmeddocno=?"   
      IF NOT cl_null(g_wc2_table10) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table10 CLIPPED
      END IF
      
      LET g_sql = g_sql, " ORDER BY mmed_t.mmedseq"
      
      PREPARE ammt405_pb10 FROM g_sql
      DECLARE b_fill_cs10 CURSOR FOR ammt405_pb10
      
      LET l_ac = 1
      
      OPEN b_fill_cs10 USING g_enterprise,g_rtia_m.rtiadocno
 
                                               
      FOREACH b_fill_cs10 INTO g_mmea5_d[l_ac].mmedseq,g_mmea5_d[l_ac].mmed014,g_mmea5_d[l_ac].mmed014_1_desc,
          g_mmea5_d[l_ac].mmed001,g_mmea5_d[l_ac].mmaq002,g_mmea5_d[l_ac].mmaq002_desc,g_mmea5_d[l_ac].mmaq003,g_mmea5_d[l_ac].mmed002,
          g_mmea5_d[l_ac].mmed003,g_mmea5_d[l_ac].mmed004,g_mmea5_d[l_ac].mmed005, 
          g_mmea5_d[l_ac].mmed009,g_mmea5_d[l_ac].mmed010,g_mmea5_d[l_ac].mmed012, 
          g_mmea5_d[l_ac].mmed013,g_mmea5_d[l_ac].mmed013_desc_1
          
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
 
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed014
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_mmea5_d[l_ac].mmed014_1_desc = '', g_rtn_fields[1] , ''
         
         SELECT mmaq002,mmaq003
           INTO g_mmea5_d[l_ac].mmaq002,g_mmea5_d[l_ac].mmaq003
           FROM mmaq_t
          WHERE mmaqent = g_enterprise
            AND mmaq001 = g_mmea5_d[l_ac].mmed001
            
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea5_d[l_ac].mmaq002
         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea5_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
   CALL g_mmea5_d.deleteElement(g_mmea5_d.getLength())
   FREE ammt405_pb10

   #end add-point
   
   CALL g_mmea_d.deleteElement(g_mmea_d.getLength())
   CALL g_mmea10_d.deleteElement(g_mmea10_d.getLength())
   CALL g_mmea2_d.deleteElement(g_mmea2_d.getLength())
   CALL g_mmea3_d.deleteElement(g_mmea3_d.getLength())
   CALL g_mmea4_d.deleteElement(g_mmea4_d.getLength())
   CALL g_mmea6_d.deleteElement(g_mmea6_d.getLength())
   CALL g_mmea7_d.deleteElement(g_mmea7_d.getLength())
   CALL g_mmea8_d.deleteElement(g_mmea8_d.getLength())
   CALL g_mmea9_d.deleteElement(g_mmea9_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt405_pb
   FREE ammt405_pb2
 
   FREE ammt405_pb3
 
   FREE ammt405_pb4
 
   FREE ammt405_pb5
 
   FREE ammt405_pb6
 
   FREE ammt405_pb7
 
   FREE ammt405_pb8
 
   FREE ammt405_pb9
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_mmea_d.getLength()
      LET g_mmea_d_mask_o[l_ac].* =  g_mmea_d[l_ac].*
      CALL ammt405_mmea_t_mask()
      LET g_mmea_d_mask_n[l_ac].* =  g_mmea_d[l_ac].*
   END FOR
   
   LET g_mmea10_d_mask_o.* =  g_mmea10_d.*
   FOR l_ac = 1 TO g_mmea10_d.getLength()
      LET g_mmea10_d_mask_o[l_ac].* =  g_mmea10_d[l_ac].*
      CALL ammt405_rtie_t_mask()
      LET g_mmea10_d_mask_n[l_ac].* =  g_mmea10_d[l_ac].*
   END FOR
   LET g_mmea2_d_mask_o.* =  g_mmea2_d.*
   FOR l_ac = 1 TO g_mmea2_d.getLength()
      LET g_mmea2_d_mask_o[l_ac].* =  g_mmea2_d[l_ac].*
      CALL ammt405_mmec_t_mask()
      LET g_mmea2_d_mask_n[l_ac].* =  g_mmea2_d[l_ac].*
   END FOR
   LET g_mmea3_d_mask_o.* =  g_mmea3_d.*
   FOR l_ac = 1 TO g_mmea3_d.getLength()
      LET g_mmea3_d_mask_o[l_ac].* =  g_mmea3_d[l_ac].*
      CALL ammt405_mmeb_t_mask()
      LET g_mmea3_d_mask_n[l_ac].* =  g_mmea3_d[l_ac].*
   END FOR
   LET g_mmea4_d_mask_o.* =  g_mmea4_d.*
   FOR l_ac = 1 TO g_mmea4_d.getLength()
      LET g_mmea4_d_mask_o[l_ac].* =  g_mmea4_d[l_ac].*
      CALL ammt405_mmed_t_mask()
      LET g_mmea4_d_mask_n[l_ac].* =  g_mmea4_d[l_ac].*
   END FOR
   LET g_mmea6_d_mask_o.* =  g_mmea6_d.*
   FOR l_ac = 1 TO g_mmea6_d.getLength()
      LET g_mmea6_d_mask_o[l_ac].* =  g_mmea6_d[l_ac].*
      CALL ammt405_gcbi_t_mask()
      LET g_mmea6_d_mask_n[l_ac].* =  g_mmea6_d[l_ac].*
   END FOR
   LET g_mmea7_d_mask_o.* =  g_mmea7_d.*
   FOR l_ac = 1 TO g_mmea7_d.getLength()
      LET g_mmea7_d_mask_o[l_ac].* =  g_mmea7_d[l_ac].*
      CALL ammt405_rtib_t_mask()
      LET g_mmea7_d_mask_n[l_ac].* =  g_mmea7_d[l_ac].*
   END FOR
   LET g_mmea8_d_mask_o.* =  g_mmea8_d.*
   FOR l_ac = 1 TO g_mmea8_d.getLength()
      LET g_mmea8_d_mask_o[l_ac].* =  g_mmea8_d[l_ac].*
      CALL ammt405_rtic_t_mask()
      LET g_mmea8_d_mask_n[l_ac].* =  g_mmea8_d[l_ac].*
   END FOR
   LET g_mmea9_d_mask_o.* =  g_mmea9_d.*
   FOR l_ac = 1 TO g_mmea9_d.getLength()
      LET g_mmea9_d_mask_o[l_ac].* =  g_mmea9_d[l_ac].*
      CALL ammt405_xrcd_t_mask()
      LET g_mmea9_d_mask_n[l_ac].* =  g_mmea9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt405_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
      
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
            
      #end add-point    
      DELETE FROM mmea_t
       WHERE mmeaent = g_enterprise AND
         mmeadocno = ps_keys_bak[1] AND mmeaseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF

      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]

      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmea_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
            
      #end add-point    
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
            
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmea10_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
 
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
            
      #end add-point    
      DELETE FROM mmec_t
       WHERE mmecent = g_enterprise AND
             mmecdocno = ps_keys_bak[1] AND mmecseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_mmea2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
            
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
            
      #end add-point    
      DELETE FROM mmeb_t
       WHERE mmebent = g_enterprise AND
             mmebdocno = ps_keys_bak[1] AND mmebseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_mmea3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
            
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
            
      #end add-point    
      DELETE FROM mmed_t
       WHERE mmedent = g_enterprise AND
             mmeddocno = ps_keys_bak[1] AND mmedseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_mmea4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
            
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
            
      #end add-point    
      DELETE FROM gcbi_t
       WHERE gcbient = g_enterprise AND
             gcbidocno = ps_keys_bak[1] AND gcbiseq = ps_keys_bak[2] AND gcbiseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_mmea6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
            
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
            
      #end add-point    
      DELETE FROM rtib_t
       WHERE rtibent = g_enterprise AND
             rtibdocno = ps_keys_bak[1] AND rtibseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
            
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_mmea7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
            
      #end add-point    
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete8"
            
      #end add-point    
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete8"
            
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_mmea8_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete8"
            
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"
            
      #end add-point    
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"
            
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_mmea9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete9"
            
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
  
      DELETE FROM mmed_t
       WHERE mmedent = g_enterprise AND
         mmeddocno = ps_keys_bak[1] AND mmedseq = ps_keys_bak[2]

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM xrcd_t
       WHERE xrcdseq2 = '0'
         AND xrcdseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdent = g_enterprise
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = ps_keys_bak[1]
         AND rticseq IN (SELECT rtibseq FROM rtib_t 
                          WHERE rtibent = g_enterprise 
                            AND rtibdocno = ps_keys_bak[1]
                            AND rtib030 = ps_keys_bak[2])
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF      
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = ps_keys_bak[1]
         AND rtib030 = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      DELETE FROM rtie_t 
       WHERE rtieent = g_enterprise 
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
   END IF

   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)              
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()

   END IF   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt405_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   DEFINE l_xrcd103   LIKE xrcd_t.xrcd103,
          l_xrcd104   LIKE xrcd_t.xrcd104,
          l_xrcd105   LIKE xrcd_t.xrcd105,
          l_xrcd113   LIKE xrcd_t.xrcd113,
          l_xrcd114   LIKE xrcd_t.xrcd114,
          l_xrcd115   LIKE xrcd_t.xrcd115,
          l_imaa005   LIKE imaa_t.imaa005
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
            
      #end add-point 
      INSERT INTO mmea_t
                  (mmeaent,
                   mmeadocno,
                   mmeaseq
                   ,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006,mmea007,mmea008,mmea009,mmea010,mmea011,mmea012,mmea013,mmea014,mmea015,mmea016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea_d[g_detail_idx].mmea001,g_mmea_d[g_detail_idx].mmea002,g_mmea_d[g_detail_idx].mmea003, 
                       g_mmea_d[g_detail_idx].mmea004,g_mmea_d[g_detail_idx].mmea005,g_mmea_d[g_detail_idx].mmea006, 
                       g_mmea_d[g_detail_idx].mmea007,g_mmea_d[g_detail_idx].mmea008,g_mmea_d[g_detail_idx].mmea009, 
                       g_mmea_d[g_detail_idx].mmea010,g_mmea_d[g_detail_idx].mmea011,g_mmea_d[g_detail_idx].mmea012, 
                       g_mmea_d[g_detail_idx].mmea013,g_mmea_d[g_detail_idx].mmea014,g_mmea_d[g_detail_idx].mmea015, 
                       g_mmea_d[g_detail_idx].mmea016)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmea_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE mmea_t SET mmeasite = g_rtia_m.rtiasite,
                        mmeaunit = g_rtia_m.rtiasite
       WHERE mmeaent = g_enterprise
         AND mmeadocno = ps_keys[1]
         AND mmeaseq = ps_keys[2]
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmea_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
 
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
            
      #end add-point 
      INSERT INTO rtie_t
                  (rtieent,
                   rtiedocno,
                   rtieseq,rtieseq1
                   ,rtie001,rtie002,rtie006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmea10_d[g_detail_idx].rtie001,g_mmea10_d[g_detail_idx].rtie002,g_mmea10_d[g_detail_idx].rtie006) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmea10_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
            
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
            
      #end add-point 
      INSERT INTO mmec_t
                  (mmecent,
                   mmecdocno,
                   mmecseq
                   ,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005,mmec006,mmec007,mmec008,mmec009,mmec010,mmec011,mmec012,mmec013,mmec015) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea2_d[g_detail_idx].mmec014,g_mmea2_d[g_detail_idx].mmec001,g_mmea2_d[g_detail_idx].mmec002, 
                       g_mmea2_d[g_detail_idx].mmec003,g_mmea2_d[g_detail_idx].mmec004,g_mmea2_d[g_detail_idx].mmec005, 
                       g_mmea2_d[g_detail_idx].mmec006,g_mmea2_d[g_detail_idx].mmec007,g_mmea2_d[g_detail_idx].mmec008, 
                       g_mmea2_d[g_detail_idx].mmec009,g_mmea2_d[g_detail_idx].mmec010,g_mmea2_d[g_detail_idx].mmec011, 
                       g_mmea2_d[g_detail_idx].mmec012,g_mmea2_d[g_detail_idx].mmec013,g_mmea2_d[g_detail_idx].mmec015) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmec_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE mmec_t SET mmecsite = g_rtia_m.rtiasite,
                        mmecunit = g_rtia_m.rtiasite
       WHERE mmecent = g_enterprise
         AND mmecdocno = ps_keys[1]
         AND mmecseq = ps_keys[2]
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_mmea2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
            
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
            
      #end add-point 
      INSERT INTO mmeb_t
                  (mmebent,
                   mmebdocno,
                   mmebseq
                   ,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005,mmeb006,mmeb007,mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013,mmeb015) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea3_d[g_detail_idx].mmeb014,g_mmea3_d[g_detail_idx].mmeb001,g_mmea3_d[g_detail_idx].mmeb002, 
                       g_mmea3_d[g_detail_idx].mmeb003,g_mmea3_d[g_detail_idx].mmeb004,g_mmea3_d[g_detail_idx].mmeb005, 
                       g_mmea3_d[g_detail_idx].mmeb006,g_mmea3_d[g_detail_idx].mmeb007,g_mmea3_d[g_detail_idx].mmeb008, 
                       g_mmea3_d[g_detail_idx].mmeb009,g_mmea3_d[g_detail_idx].mmeb010,g_mmea3_d[g_detail_idx].mmeb011, 
                       g_mmea3_d[g_detail_idx].mmeb012,g_mmea3_d[g_detail_idx].mmeb013,g_mmea3_d[g_detail_idx].mmeb015) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmeb_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE mmeb_t SET mmebsite = g_rtia_m.rtiasite,
                        mmebunit = g_rtia_m.rtiasite
       WHERE mmebent = g_enterprise
         AND mmebdocno = ps_keys[1]
         AND mmebseq = ps_keys[2]
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_mmea3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
            
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
            
      #end add-point 
      INSERT INTO mmed_t
                  (mmedent,
                   mmeddocno,
                   mmedseq
                   ,mmed001,mmed002,mmed003,mmed004,mmed005,mmed006,mmed007,mmed008,mmed009,mmed010,mmed012,mmed014,mmed013,mmed015,mmed016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea4_d[g_detail_idx].mmed001,g_mmea4_d[g_detail_idx].mmed002,g_mmea4_d[g_detail_idx].mmed003, 
                       g_mmea4_d[g_detail_idx].mmed004,g_mmea4_d[g_detail_idx].mmed005,g_mmea4_d[g_detail_idx].mmed006, 
                       g_mmea4_d[g_detail_idx].mmed007,g_mmea4_d[g_detail_idx].mmed008,g_mmea4_d[g_detail_idx].mmed009, 
                       g_mmea4_d[g_detail_idx].mmed010,g_mmea4_d[g_detail_idx].mmed012,g_mmea4_d[g_detail_idx].mmed014, 
                       g_mmea4_d[g_detail_idx].mmed013,g_mmea4_d[g_detail_idx].mmed015,g_mmea4_d[g_detail_idx].mmed016) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE mmed_t SET mmedsite = g_rtia_m.rtiasite,
                        mmedunit = g_rtia_m.rtiasite
       WHERE mmedent = g_enterprise
         AND mmeddocno = ps_keys[1]
         AND mmedseq = ps_keys[2]
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_mmea4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
            
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
            
      #end add-point 
      INSERT INTO gcbi_t
                  (gcbient,
                   gcbidocno,
                   gcbiseq,gcbiseq1
                   ,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005,gcbi009,gcbi006,gcbi007,gcbi008) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmea6_d[g_detail_idx].gcbi001,g_mmea6_d[g_detail_idx].gcbi002,g_mmea6_d[g_detail_idx].gcbi003, 
                       g_mmea6_d[g_detail_idx].gcbi004,g_mmea6_d[g_detail_idx].gcbi005,g_mmea6_d[g_detail_idx].gcbi009, 
                       g_mmea6_d[g_detail_idx].gcbi006,g_mmea6_d[g_detail_idx].gcbi007,g_mmea6_d[g_detail_idx].gcbi008) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "gcbi_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE gcbi_t SET gcbisite = g_rtia_m.rtiasite
       WHERE gcbient = g_enterprise
         AND gcbidocno = ps_keys[1]
         AND gcbiseq = ps_keys[2]
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_mmea6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
            
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
            
      #end add-point 
      INSERT INTO rtib_t
                  (rtibent,
                   rtibdocno,
                   rtibseq
                   ,rtib003,rtib004,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib028,rtib030,rtib039) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea7_d[g_detail_idx].rtib003,g_mmea7_d[g_detail_idx].rtib004,g_mmea7_d[g_detail_idx].rtib006, 
                       g_mmea7_d[g_detail_idx].rtib008,g_mmea7_d[g_detail_idx].rtib009,g_mmea7_d[g_detail_idx].rtib010, 
                       g_mmea7_d[g_detail_idx].rtib012,g_mmea7_d[g_detail_idx].rtib013,g_mmea7_d[g_detail_idx].rtib020, 
                       g_mmea7_d[g_detail_idx].rtib021,g_mmea7_d[g_detail_idx].rtib031,g_mmea7_d[g_detail_idx].rtib022, 
                       g_mmea7_d[g_detail_idx].rtib024,g_mmea7_d[g_detail_idx].rtib025,g_mmea7_d[g_detail_idx].rtib026, 
                       g_mmea7_d[g_detail_idx].rtib027,g_mmea7_d[g_detail_idx].rtib028,g_mmea7_d[g_detail_idx].rtib030, 
                       g_mmea7_d[g_detail_idx].rtib039)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_mmea7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
            
      #end add-point
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert8"
            
      #end add-point 
      INSERT INTO rtic_t
                  (rticent,
                   rticdocno,
                   rticseq,rticseq1
                   ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmea8_d[g_detail_idx].rtic001,g_mmea8_d[g_detail_idx].rtic002,g_mmea8_d[g_detail_idx].rtic003, 
                       g_mmea8_d[g_detail_idx].rtic004,g_mmea8_d[g_detail_idx].rtic005,g_mmea8_d[g_detail_idx].rtic006, 
                       g_mmea8_d[g_detail_idx].rtic007,g_mmea8_d[g_detail_idx].rtic008,g_mmea8_d[g_detail_idx].rtic009, 
                       g_mmea8_d[g_detail_idx].rtic010,g_mmea8_d[g_detail_idx].rtic011,g_mmea8_d[g_detail_idx].rtic012, 
                       g_mmea8_d[g_detail_idx].rtic013,g_mmea8_d[g_detail_idx].rtic014,g_mmea8_d[g_detail_idx].rtic015, 
                       g_mmea8_d[g_detail_idx].rtic016,g_mmea8_d[g_detail_idx].rtic017,g_mmea8_d[g_detail_idx].rtic018, 
                       g_mmea8_d[g_detail_idx].rtic020)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert8"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_mmea8_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert8"
            
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"
            
      #end add-point 
      INSERT INTO xrcd_t
                  (xrcdent,
                   xrcddocno,
                   xrcdld,xrcdseq,xrcdseq2,xrcd007
                   ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_mmea9_d[g_detail_idx].xrcd002,g_mmea9_d[g_detail_idx].xrcd003,g_mmea9_d[g_detail_idx].xrcd006, 
                       g_mmea9_d[g_detail_idx].xrcd004,g_mmea9_d[g_detail_idx].xrcd104)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"
            
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_mmea9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"
            
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN

      INSERT INTO mmed_t
                  (mmedent,
                   mmeddocno,
                   mmedseq
                   ,mmed001,mmed002,mmed003,mmed005,mmed009,mmed010,mmed012,mmed014,mmed013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmea5_d[g_detail_idx].mmed001,g_mmea5_d[g_detail_idx].mmed002,g_mmea5_d[g_detail_idx].mmed003, 
                       g_mmea5_d[g_detail_idx].mmed005,g_mmea5_d[g_detail_idx].mmed009,g_mmea5_d[g_detail_idx].mmed010, 
                       g_mmea5_d[g_detail_idx].mmed012,g_mmea5_d[g_detail_idx].mmed014,g_mmea5_d[g_detail_idx].mmed013) 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      UPDATE mmed_t SET mmedsite = g_rtia_m.rtiasite,
                        mmedunit = g_rtia_m.rtiasite
       WHERE mmedent = g_enterprise
         AND mmeddocno = ps_keys[1]
         AND mmedseq = ps_keys[2]

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mmed_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF

   END IF
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt405_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmea_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
            
      #end add-point 
      
      #將遮罩欄位還原
      CALL ammt405_mmea_t_mask_restore('restore_mask_o')
               
      UPDATE mmea_t 
         SET (mmeadocno,
              mmeaseq
              ,mmea001,mmea002,mmea003,mmea004,mmea005,mmea006,mmea007,mmea008,mmea009,mmea010,mmea011,mmea012,mmea013,mmea014,mmea015,mmea016) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea_d[g_detail_idx].mmea001,g_mmea_d[g_detail_idx].mmea002,g_mmea_d[g_detail_idx].mmea003, 
                  g_mmea_d[g_detail_idx].mmea004,g_mmea_d[g_detail_idx].mmea005,g_mmea_d[g_detail_idx].mmea006, 
                  g_mmea_d[g_detail_idx].mmea007,g_mmea_d[g_detail_idx].mmea008,g_mmea_d[g_detail_idx].mmea009, 
                  g_mmea_d[g_detail_idx].mmea010,g_mmea_d[g_detail_idx].mmea011,g_mmea_d[g_detail_idx].mmea012, 
                  g_mmea_d[g_detail_idx].mmea013,g_mmea_d[g_detail_idx].mmea014,g_mmea_d[g_detail_idx].mmea015, 
                  g_mmea_d[g_detail_idx].mmea016) 
         WHERE mmeaent = g_enterprise AND mmeadocno = ps_keys_bak[1] AND mmeaseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
 
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmea_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmea_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_mmea_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
 
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtie_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_rtie_t_mask_restore('restore_mask_o')
               
      UPDATE rtie_t 
         SET (rtiedocno,
              rtieseq,rtieseq1
              ,rtie001,rtie002,rtie006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmea10_d[g_detail_idx].rtie001,g_mmea10_d[g_detail_idx].rtie002,g_mmea10_d[g_detail_idx].rtie006)  
 
         WHERE rtieent = g_enterprise AND rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_rtie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmec_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_mmec_t_mask_restore('restore_mask_o')
               
      UPDATE mmec_t 
         SET (mmecdocno,
              mmecseq
              ,mmec014,mmec001,mmec002,mmec003,mmec004,mmec005,mmec006,mmec007,mmec008,mmec009,mmec010,mmec011,mmec012,mmec013,mmec015) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea2_d[g_detail_idx].mmec014,g_mmea2_d[g_detail_idx].mmec001,g_mmea2_d[g_detail_idx].mmec002, 
                  g_mmea2_d[g_detail_idx].mmec003,g_mmea2_d[g_detail_idx].mmec004,g_mmea2_d[g_detail_idx].mmec005, 
                  g_mmea2_d[g_detail_idx].mmec006,g_mmea2_d[g_detail_idx].mmec007,g_mmea2_d[g_detail_idx].mmec008, 
                  g_mmea2_d[g_detail_idx].mmec009,g_mmea2_d[g_detail_idx].mmec010,g_mmea2_d[g_detail_idx].mmec011, 
                  g_mmea2_d[g_detail_idx].mmec012,g_mmea2_d[g_detail_idx].mmec013,g_mmea2_d[g_detail_idx].mmec015)  
 
         WHERE mmecent = g_enterprise AND mmecdocno = ps_keys_bak[1] AND mmecseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmec_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmec_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_mmec_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmeb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_mmeb_t_mask_restore('restore_mask_o')
               
      UPDATE mmeb_t 
         SET (mmebdocno,
              mmebseq
              ,mmeb014,mmeb001,mmeb002,mmeb003,mmeb004,mmeb005,mmeb006,mmeb007,mmeb008,mmeb009,mmeb010,mmeb011,mmeb012,mmeb013,mmeb015) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea3_d[g_detail_idx].mmeb014,g_mmea3_d[g_detail_idx].mmeb001,g_mmea3_d[g_detail_idx].mmeb002, 
                  g_mmea3_d[g_detail_idx].mmeb003,g_mmea3_d[g_detail_idx].mmeb004,g_mmea3_d[g_detail_idx].mmeb005, 
                  g_mmea3_d[g_detail_idx].mmeb006,g_mmea3_d[g_detail_idx].mmeb007,g_mmea3_d[g_detail_idx].mmeb008, 
                  g_mmea3_d[g_detail_idx].mmeb009,g_mmea3_d[g_detail_idx].mmeb010,g_mmea3_d[g_detail_idx].mmeb011, 
                  g_mmea3_d[g_detail_idx].mmeb012,g_mmea3_d[g_detail_idx].mmeb013,g_mmea3_d[g_detail_idx].mmeb015)  
 
         WHERE mmebent = g_enterprise AND mmebdocno = ps_keys_bak[1] AND mmebseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmeb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmeb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_mmeb_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmed_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_mmed_t_mask_restore('restore_mask_o')
               
      UPDATE mmed_t 
         SET (mmeddocno,
              mmedseq
              ,mmed001,mmed002,mmed003,mmed004,mmed005,mmed006,mmed007,mmed008,mmed009,mmed010,mmed012,mmed014,mmed013,mmed015,mmed016) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea4_d[g_detail_idx].mmed001,g_mmea4_d[g_detail_idx].mmed002,g_mmea4_d[g_detail_idx].mmed003, 
                  g_mmea4_d[g_detail_idx].mmed004,g_mmea4_d[g_detail_idx].mmed005,g_mmea4_d[g_detail_idx].mmed006, 
                  g_mmea4_d[g_detail_idx].mmed007,g_mmea4_d[g_detail_idx].mmed008,g_mmea4_d[g_detail_idx].mmed009, 
                  g_mmea4_d[g_detail_idx].mmed010,g_mmea4_d[g_detail_idx].mmed012,g_mmea4_d[g_detail_idx].mmed014, 
                  g_mmea4_d[g_detail_idx].mmed013,g_mmea4_d[g_detail_idx].mmed015,g_mmea4_d[g_detail_idx].mmed016)  
 
         WHERE mmedent = g_enterprise AND mmeddocno = ps_keys_bak[1] AND mmedseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmed_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmed_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_mmed_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gcbi_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_gcbi_t_mask_restore('restore_mask_o')
               
      UPDATE gcbi_t 
         SET (gcbidocno,
              gcbiseq,gcbiseq1
              ,gcbi001,gcbi002,gcbi003,gcbi004,gcbi005,gcbi009,gcbi006,gcbi007,gcbi008) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmea6_d[g_detail_idx].gcbi001,g_mmea6_d[g_detail_idx].gcbi002,g_mmea6_d[g_detail_idx].gcbi003, 
                  g_mmea6_d[g_detail_idx].gcbi004,g_mmea6_d[g_detail_idx].gcbi005,g_mmea6_d[g_detail_idx].gcbi009, 
                  g_mmea6_d[g_detail_idx].gcbi006,g_mmea6_d[g_detail_idx].gcbi007,g_mmea6_d[g_detail_idx].gcbi008)  
 
         WHERE gcbient = g_enterprise AND gcbidocno = ps_keys_bak[1] AND gcbiseq = ps_keys_bak[2] AND gcbiseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update6"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gcbi_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gcbi_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_gcbi_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtib_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_rtib_t_mask_restore('restore_mask_o')
               
      UPDATE rtib_t 
         SET (rtibdocno,
              rtibseq
              ,rtib003,rtib004,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib028,rtib030,rtib039) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea7_d[g_detail_idx].rtib003,g_mmea7_d[g_detail_idx].rtib004,g_mmea7_d[g_detail_idx].rtib006, 
                  g_mmea7_d[g_detail_idx].rtib008,g_mmea7_d[g_detail_idx].rtib009,g_mmea7_d[g_detail_idx].rtib010, 
                  g_mmea7_d[g_detail_idx].rtib012,g_mmea7_d[g_detail_idx].rtib013,g_mmea7_d[g_detail_idx].rtib020, 
                  g_mmea7_d[g_detail_idx].rtib021,g_mmea7_d[g_detail_idx].rtib031,g_mmea7_d[g_detail_idx].rtib022, 
                  g_mmea7_d[g_detail_idx].rtib024,g_mmea7_d[g_detail_idx].rtib025,g_mmea7_d[g_detail_idx].rtib026, 
                  g_mmea7_d[g_detail_idx].rtib027,g_mmea7_d[g_detail_idx].rtib028,g_mmea7_d[g_detail_idx].rtib030, 
                  g_mmea7_d[g_detail_idx].rtib039) 
         WHERE rtibent = g_enterprise AND rtibdocno = ps_keys_bak[1] AND rtibseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtib_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_rtib_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtic_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update8"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_rtic_t_mask_restore('restore_mask_o')
               
      UPDATE rtic_t 
         SET (rticdocno,
              rticseq,rticseq1
              ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmea8_d[g_detail_idx].rtic001,g_mmea8_d[g_detail_idx].rtic002,g_mmea8_d[g_detail_idx].rtic003, 
                  g_mmea8_d[g_detail_idx].rtic004,g_mmea8_d[g_detail_idx].rtic005,g_mmea8_d[g_detail_idx].rtic006, 
                  g_mmea8_d[g_detail_idx].rtic007,g_mmea8_d[g_detail_idx].rtic008,g_mmea8_d[g_detail_idx].rtic009, 
                  g_mmea8_d[g_detail_idx].rtic010,g_mmea8_d[g_detail_idx].rtic011,g_mmea8_d[g_detail_idx].rtic012, 
                  g_mmea8_d[g_detail_idx].rtic013,g_mmea8_d[g_detail_idx].rtic014,g_mmea8_d[g_detail_idx].rtic015, 
                  g_mmea8_d[g_detail_idx].rtic016,g_mmea8_d[g_detail_idx].rtic017,g_mmea8_d[g_detail_idx].rtic018, 
                  g_mmea8_d[g_detail_idx].rtic020) 
         WHERE rticent = g_enterprise AND rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update8"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_rtic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update8"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrcd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update9"
            
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt405_xrcd_t_mask_restore('restore_mask_o')
               
      UPDATE xrcd_t 
         SET (xrcddocno,
              xrcdld,xrcdseq,xrcdseq2,xrcd007
              ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_mmea9_d[g_detail_idx].xrcd002,g_mmea9_d[g_detail_idx].xrcd003,g_mmea9_d[g_detail_idx].xrcd006, 
                  g_mmea9_d[g_detail_idx].xrcd004,g_mmea9_d[g_detail_idx].xrcd104) 
         WHERE xrcdent = g_enterprise AND xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:update_b段修改中 name="update_b.m_update9"
            
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt405_xrcd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update9"
            
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   LET ls_group = "'10',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmed_t" THEN
   
      UPDATE mmed_t 
         SET (mmeddocno,
              mmedseq
              ,mmed001,mmed002,mmed003,mmed005,mmed009,mmed010,mmed012,mmed014,mmed013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmea5_d[g_detail_idx].mmed001,g_mmea5_d[g_detail_idx].mmed002,g_mmea5_d[g_detail_idx].mmed003, 
                  g_mmea5_d[g_detail_idx].mmed005,g_mmea5_d[g_detail_idx].mmed009,g_mmea5_d[g_detail_idx].mmed010, 
                  g_mmea5_d[g_detail_idx].mmed012,g_mmea5_d[g_detail_idx].mmed014,g_mmea5_d[g_detail_idx].mmed013)  

         WHERE mmedent = g_enterprise AND mmeddocno = ps_keys_bak[1] AND mmedseq = ps_keys_bak[2]

      CASE
         WHEN SQLCA.sqlerrd[3] = 0  
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "mmed_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "mmed_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
      END CASE
 
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION ammt405_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION ammt405_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt405_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
      
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL ammt405_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmea_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt405_bcl USING g_enterprise,
                                       g_rtia_m.rtiadocno,g_mmea_d[g_detail_idx].mmeaseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl2 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea10_d[g_detail_idx].rtieseq,g_mmea10_d[g_detail_idx].rtieseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "mmec_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl3 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea2_d[g_detail_idx].mmecseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "mmeb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl4 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea3_d[g_detail_idx].mmebseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "mmed_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl5 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea4_d[g_detail_idx].mmedseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "gcbi_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl6 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea6_d[g_detail_idx].gcbiseq,g_mmea6_d[g_detail_idx].gcbiseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "rtib_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl7 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea7_d[g_detail_idx].rtibseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "rtic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl8 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea8_d[g_detail_idx].rticseq,g_mmea8_d[g_detail_idx].rticseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl8:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "xrcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl9 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea9_d[g_detail_idx].xrcdld,g_mmea9_d[g_detail_idx].xrcdseq, 
                                                 g_mmea9_d[g_detail_idx].xrcdseq2,g_mmea9_d[g_detail_idx].xrcd007 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt405_bcl9:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   LET ls_group = "mmed_t1"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt405_bcl10 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_mmea5_d[g_detail_idx].mmedseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "ammt405_bcl10"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt405_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
      
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl7
   END IF
 
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl9
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt405_bcl10
   END IF
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt405_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
      
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("rtiadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtiadocno",TRUE)
      CALL cl_set_comp_entry("rtiadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("rtiasite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   IF cl_null(g_rtia_m.rtia001) THEN 
      CALL cl_set_comp_entry("rtia002",TRUE)
   ELSE
      CALL cl_set_comp_entry("rtia002",FALSE)
   END IF 
   IF g_rtia_m.rtia032 = '1' THEN 
      CALL cl_set_comp_entry("rtia036,rtia037,rtia038",TRUE)
   ELSE
      CALL cl_set_comp_entry("rtia036,rtia037,rtia038",FALSE)   
   END IF 
   CALL cl_set_comp_entry("rtia007",TRUE)   #add by yangxf 
   IF NOT cl_null(g_rtia_m.rtia007) THEN 
      CALL cl_set_comp_entry("rtia001,rtia002",FALSE)
   ELSE
      CALL cl_set_comp_entry("rtia001,rtia002",TRUE)
      IF NOT cl_null(g_rtia_m.rtia001) THEN 
         CALL cl_set_comp_entry("rtia002",FALSE)
      END IF 
   END IF 
   CALL cl_set_comp_entry("rtia056",TRUE)   #add by geza 20151015
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt405_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_n     LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtiadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
                  CALL cl_set_comp_entry("rtiasite",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtiadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtiadocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'rtiasite') OR g_site_flag THEN
      CALL cl_set_comp_entry("rtiasite",FALSE)
   END IF 
   #add by yangxf ----start---
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      LET l_n = 0   
      #檢查單身是否有資料
      SELECT COUNT(*) INTO l_n
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
      IF l_n > 0 THEN 
         CALL cl_set_comp_entry("rtia007",FALSE)
         CALL cl_set_comp_entry("rtia056",FALSE)   #add by geza 20160315 #单身有资料关闭单头会员编号批量产生否 
      END IF 
   END IF
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      LET l_n = 0   
      #檢查單身是否有資料
      SELECT COUNT(*) INTO l_n
        FROM gcbi_t
       WHERE gcbient = g_enterprise
         AND gcbidocno = g_rtia_m.rtiadocno
      IF l_n > 0 THEN 
         CALL cl_set_comp_entry("rtia007",FALSE)
      END IF 
   END IF 
   #add by yangxf ----end----
   #mark by geza 20160317(S)
#   #add by geza 20151015(S)
#   IF p_cmd = 'u' THEN 
#      CALL cl_set_comp_entry("rtia056",FALSE)   #add by geza 20151015 
#   END IF    
#   #add by geza 20151015(E)
   #mark by geza 20160317(E)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt405_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
      
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("mmea001,mmea002,mmea004,mmea006,mmea008,mmea013",TRUE)   #add by yangxf
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt405_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
      
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #add by yangxf ---start----
   CALL cl_set_comp_entry("mmea009,mmea010",FALSE)
   IF g_set_comp = 'Y' THEN 
      CALL cl_set_comp_entry("mmea001,mmea002,mmea004,mmea008,mmea013",FALSE)
      CALL cl_set_comp_entry("mmea006,mmea009,mmea010",TRUE)
   END IF 
   #add by yangxf ----end-----
   #add by geza 20151015(S)
   IF g_rtia_m.rtia056 = 'Y' THEN 
      CALL cl_set_comp_entry("mmea004",FALSE)
   END IF 
   #add by geza 20151015(E)
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION ammt405_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION ammt405_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   DEFINE l_cnt    LIKE type_t.num5
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_rtia_m.rtiastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #160604-00009#122 -s by 08172
   LET l_cnt=0
   #IF g_prog="ammt405" THEN          #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      SELECT COUNT(*) INTO l_cnt FROM mmaa_t WHERE mmaaent=g_enterprise AND mmaa058=g_rtia_m.rtiadocno
   END IF
   #IF g_prog="ammt425" THEN          #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      SELECT COUNT(*) INTO l_cnt FROM mmaa_t WHERE mmaaent=g_enterprise AND mmaa058=g_rtia_m.rtiadocno
   END IF
   IF l_cnt>0 THEN
   CALL cl_set_act_visible("modify,delete,modify_detail,ammt405_pay,statechange",FALSE)
   END IF
   #160604-00009#122 -e by 08172
   #160728-00006#35  -s by 08172
   IF g_prog MATCHES 'ammt405' THEN
      CALL cl_set_act_visible("card_batch",TRUE)
   ELSE
      CALL cl_set_act_visible("card_batch",FALSE)
   END IF
   #160728-00006#35 -e by 08172
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION ammt405_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION ammt405_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION ammt405_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
      
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
      
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtiadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
         INITIALIZE g_wc2_table8 TO NULL
 
         INITIALIZE g_wc2_table9 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtia_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmea_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtie_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "mmec_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "mmeb_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "mmed_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "gcbi_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtib_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtic_t" 
                  LET g_wc2_table8 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xrcd_t" 
                  LET g_wc2_table9 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
            OR NOT cl_null(g_wc2_table8)
 
            OR NOT cl_null(g_wc2_table9)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
            IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
            END IF
 
            IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   LET g_default = FALSE
   #預設查詢條件
   LET g_wc = cl_qbe_get_default_qryplan()
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark 
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt405' "
   END IF 
   #IF g_prog = 'ammt406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt406' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt406' "
   END IF 
   #IF g_prog = 'ammt407' THEN        #160705-00042#11 160714 by sakura markv
   IF g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura addv
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt407' "
   END IF 
   #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt425' "
   END IF 
   #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt426' "
   END IF 
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'agct405' "
   END IF   
   #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'agct406' "
   END IF    
   #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      LET g_wc = g_wc CLIPPED," AND rtia000 = 'ammt429' "
   END IF 
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION ammt405_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success      LIKE type_t.num5    
   DEFINE l_dt           DATETIME YEAR TO SECOND   #150826-00026#10 20150831 add by beckxie
   DEFINE l_cnt          LIKE type_t.num5          #160604-00009#122
   #160729-00077#5 160823 by lori add---(S)
   DEFINE l_sql          STRING                    
   DEFINE l_site         LIKE mmby_t.mmbysite  #活動組織
   DEFINE l_act_id       LIKE mmby_t.mmby001   #活動規則編號
   DEFINE l_act_ver      LIKE mmby_t.mmby002   #活動規則版本
   DEFINE l_card_value   LIKE type_t.num20_6   #儲值金額   
   #160729-00077#5 160823 by lori add---(S)
   DEFINE l_flag1                LIKE type_t.num5      #160830-00037#1 by 08172
   DEFINE l_ooac002              LIKE ooac_t.ooac002   #160830-00037#1 by 08172
   DEFINE l_ooac004              LIKE ooac_t.ooac004   #160830-00037#1 by 08172
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
      
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt405_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
       g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
       g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
       g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
       g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
       g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 
 
                  CALL ammt405_isaf_t('s')
 
   #檢查是否允許此動作
   IF NOT ammt405_action_chk() THEN
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtiaunit, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia025_desc, 
       g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
       g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3, 
       g_rtia_m.amount4
 
   CASE g_rtia_m.rtiastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtia_m.rtiastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted,approved,withdraw,rejection,signing",TRUE)
         #160604-00009#122 -s by 08172
         LET l_cnt=0
         #IF g_prog="ammt405" THEN          #160705-00042#11 160714 by sakura mark
         IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
            SELECT COUNT(*) INTO l_cnt FROM mmaa_t WHERE mmaaent=g_enterprise AND mmaa058=g_rtia_m.rtiadocno
         END IF
         #IF g_prog="ammt425" THEN          #160705-00042#11 160714 by sakura mark
         IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
            SELECT COUNT(*) INTO l_cnt FROM mmaa_t WHERE mmaaent=g_enterprise AND mmaa058=g_rtia_m.rtiadocno
         END IF
         #160604-00009#122 -e by 08172
         CASE g_rtia_m.rtiastus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("unconfirmed,posted,unposted,approved,withdraw,rejection,signing",FALSE)
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                   CALL cl_set_act_visible("signing",TRUE)
               END IF
               #160604-00009#122 -s by 08172
               IF l_cnt>0 THEN
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF
               #160604-00009#122 -e by 08172
            WHEN "S"
               #HIDE OPTION "posted"
               CALL cl_set_act_visible("unconfirmed,confirmed,invalid,posted,approved,withdraw,rejection,signing",FALSE)
               #160604-00009#122 -s by 08172
               IF l_cnt>0 THEN
                  CALL cl_set_act_visible("unposted",FALSE)
               END IF
               #160604-00009#122 -e by 08172
            WHEN "X"
               #HIDE OPTION "invalid"
               CALL cl_set_act_visible("invalid,unconfirmed,confirmed,posted,unposted,approved,withdraw,rejection,signing",FALSE)

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("invalid,confirmed,unposted,approved,withdraw,rejection,signing",FALSE)
               #160604-00009#122 -s by 08172
               IF l_cnt>0 THEN
                  CALL cl_set_act_visible("unconfirmed,posted",FALSE)
               END IF
               #160604-00009#122 -e by 08172
            WHEN "A"
               CALL cl_set_act_visible("invalid,unconfirmed,posted,unposted,approved,withdraw,rejection,signing",FALSE)
               
            WHEN "D"
               CALL cl_set_act_visible("linvaid,unconfirmed,confirmed,posted,unposted,approved,withdraw,rejection,signing",FALSE)
               
            WHEN "R"
               CALL cl_set_act_visible("unconfirmed,confirmed,posted,unposted,approved,withdraw,rejection,signing",FALSE)
               
            WHEN "W"
               CALL cl_set_act_visible("invalid,unconfirmed,confirmed,posted,unposted,approved,rejection,signing",FALSE)
         END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT ammt405_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE ammt405_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT ammt405_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE ammt405_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            IF NOT cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF 
            CALL s_artt600_unconf_chk(g_rtia_m.rtiadocno,'Y') RETURNING l_success,g_errno
            IF l_success THEN 
               CALL s_transaction_begin()
               CALL s_artt600_unconf_upd(g_rtia_m.rtiadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               CALL s_transaction_end('Y','0')
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_rtia_m.rtiadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN 
            END IF 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            #160830-00037#1 -s by 08172
#            CALL ammt405_mmea001_conf_chk()   
#            IF g_success = 'N' THEN 
#               LET g_success = 'Y'
#               CALL s_transaction_end('N','0')   #160816-00068#5 add
#               RETURN 
#            END IF
            CALL s_artt600_mmea001_conf_chk(g_rtia_m.rtiadocno)  RETURNING l_success
            IF NOT l_success THEN 
               CALL s_transaction_end('N','0')   
               RETURN 
            END IF            
            #160830-00037#1 -e by 08172            
            IF NOT cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF 
#            LET lc_state = "S"     #160830-00037#1 by 08172
            CALL s_artt600_conf_chk(g_rtia_m.rtiadocno,g_rtia_m.rtiastus) RETURNING l_success,g_errno
            IF l_success THEN 
               CALL cl_err_collect_init()   #161216-00004#5 161228 by lori add
               CALL s_transaction_begin()
               CALL s_artt600_conf_upd(g_rtia_m.rtiadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                  RETURN
               ELSE
                  #160830-00037#1 -s by 08172
                  CALL s_aooi200_get_slip(g_rtia_m.rtiadocno) RETURNING l_flag1,l_ooac002
                  CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0083') RETURNING l_ooac004
                  IF l_ooac004='Y' THEN
                     LET lc_state = "S"
                  #160830-00037#1 -e by 08172
                     CALL s_artt600_post_chk(g_rtia_m.rtiadocno,'Y') RETURNING l_success,g_errno
                     IF l_success THEN 
                        CALL s_artt600_post_upd(g_rtia_m.rtiadocno) RETURNING l_success
                        IF NOT l_success THEN
                           CALL s_transaction_end('N','0')
                           CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                           RETURN
                        END IF
                     ELSE
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_rtia_m.rtiadocno
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                        RETURN 
                     END IF
                     #160830-00037#1 -s by 08172
                     #150826-00026#10 20150831 add by beckxie---S
                     ##150830 By benson --- S
#                     LET l_dt = cl_get_current()
#                     UPDATE mmaf_t SET mmafmodid = g_user,
#                                       mmafmoddt = l_dt
#                      WHERE mmafent = g_enterprise
#                        AND EXISTS (SELECT 1 FROM mmea_t
#                                     WHERE mmeaent = mmafent
#                                       AND mmeadocno = g_rtia_m.rtiadocno
#                                       AND mmea004 = mmaf001 )
                     ##150830 By benson --- E
                     #150826-00026#10 20150831 add by beckxie---E
                     #160830-00037#1 -e by 08172
                     
                     #160215-00002#7 160414 by sakura add(S)
                     #將rtib006的稅別寫到agcq300的gaco037(稅別欄位)、gcco038(售券組織)
                     #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
                     IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
                        #160830-00037#1 -s by 08172
#                        IF NOT ammt405_upd_gcao037_gcao038('1') THEN
#                           CALL s_transaction_end('N','0')
#                           RETURN
#                        END IF
                        IF NOT s_artt600_upd_gcao037_gcao038(g_rtia_m.rtiadocno,'1') THEN
                           CALL s_transaction_end('N','0')
                           CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                           RETURN
                        END IF
                        #160830-00037#1 -e by 08172
                     END IF
                     #160215-00002#7 160414 by sakura add(E) 
                     CALL s_transaction_end('Y','0')
                     CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                   #160830-00037#1 -s by 08172  
                  ELSE                  
                     CALL s_transaction_end('Y','0')
                     CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                  END IF  
                  #160830-00037#1 -e by 08172     
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_rtia_m.rtiadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
               RETURN 
            END IF 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            IF NOT cl_ask_confirm('sub-00232') THEN
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF 
            CALL cl_err_collect_init()   #161216-00004#5 161228 by lori add
            CALL s_artt600_post_chk(g_rtia_m.rtiadocno,g_rtia_m.rtiastus) RETURNING l_success,g_errno
            IF l_success THEN 
               CALL s_transaction_begin()
               CALL s_artt600_post_upd(g_rtia_m.rtiadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                  RETURN
               ELSE
                  #160215-00002#7 160414 by sakura add(S)
                  #將rtib006的稅別寫到agcq300的gaco037(稅別欄位)、gcco038(售券組織)
                  #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
                  IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
                     IF NOT ammt405_upd_gcao037_gcao038('1') THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                        RETURN
                     END IF
                  END IF
                  #160215-00002#7 160414 by sakura add(E)
                  CALL s_transaction_end('Y','0')
                  CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_rtia_m.rtiadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
               RETURN 
            END IF 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制 name="statechange.unposted"
            IF NOT cl_ask_confirm('sub-00233') THEN
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF 
            LET lc_state = 'Y'
            CALL cl_err_collect_init()   #161216-00004#5 161228 by lori add
            CALL s_artt600_unpost_chk(g_rtia_m.rtiadocno,g_rtia_m.rtiastus) RETURNING l_success,g_errno
            IF l_success THEN 
               CALL s_transaction_begin()
               CALL s_artt600_unpost_upd(g_rtia_m.rtiadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                  RETURN
               END IF
               #160215-00002#7 160414 by sakura add(S)
               #清空agcq300的gaco037(稅別欄位)、gcco038(售券組織)
               #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
                  IF NOT ammt405_upd_gcao037_gcao038('2') THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
                     RETURN
                  END IF
               END IF
               #160215-00002#7 160414 by sakura add(E)
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_rtia_m.rtiadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
               RETURN
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
         END IF 
         CALL s_artt600_void_chk(g_rtia_m.rtiadocno,g_rtia_m.rtiastus) RETURNING l_success,g_errno
         IF l_success THEN 
            CALL s_transaction_begin()
            CALL s_artt600_void_upd(g_rtia_m.rtiadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_rtia_m.rtiadocno
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
         END IF 
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
            
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "Z"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtia_m.rtiastus = lc_state OR cl_null(lc_state) THEN
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
#   IF lc_state = 'Y' THEN 
#      LET lc_state = 'S'
#   ELSE 
#      IF lc_state = 'S' THEN 
#         LET lc_state = 'N'
#      END IF
#   END IF       
   #end add-point
   
   LET g_rtia_m.rtiamodid = g_user
   LET g_rtia_m.rtiamoddt = cl_get_current()
   LET g_rtia_m.rtiastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtia_t 
      SET (rtiastus,rtiamodid,rtiamoddt) 
        = (g_rtia_m.rtiastus,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt)     
    WHERE rtiaent = g_enterprise AND rtiadocno = g_rtia_m.rtiadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE ammt405_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
          g_rtia_m.rtiadocno,g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
          g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
          g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia041,g_rtia_m.rtia025, 
          g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032, 
          g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
          g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
          g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfdt, 
          g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc, 
          g_rtia_m.rtia001_desc,g_rtia_m.rtia002_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
          g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc, 
          g_rtia_m.rtiacrtid_desc,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc, 
          g_rtia_m.rtiapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno, 
          g_rtia_m.rtiaunit,g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc, 
          g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002, 
          g_rtia_m.rtia002_desc,g_rtia_m.rtia050,g_rtia_m.rtia053,g_rtia_m.rtia056,g_rtia_m.rtiastus, 
          g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia009_desc,g_rtia_m.rtia014,g_rtia_m.rtia015, 
          g_rtia_m.rtia041,g_rtia_m.rtia025,g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027, 
          g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034, 
          g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc, 
          g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaownid_desc, 
          g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc,g_rtia_m.rtiacrtdp, 
          g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiamoddt, 
          g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstid_desc, 
          g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3,g_rtia_m.amount4 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_rtia_m.rtiastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   IF NOT cl_bpm_chk() THEN    #此單據不需提交至BPM，則隱藏按鈕 
       CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
   IF g_rtia_m.rtiastus = 'X' THEN 
      CALL cl_set_act_visible("statechange",FALSE)
   ELSE
      CALL cl_set_act_visible("statechange",TRUE)
   END IF   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   #160729-00077#5 160823 by lori add---(S)
   IF lc_state = 'S' THEN
      CASE
         WHEN g_argv[1] = ''    #發卡
            LET l_sql = "SELECT mmeasite,mmea008,mmea015,mmea016 ",
                        "  FROM mmea_t ",
                        " WHERE mmeaent = ",g_enterprise," AND mmeadocno = '",g_rtia_m.rtiadocno,"' ",   
                        "   AND mmea008 > 0 AND mmea015 IS NOT NULL "  
         WHEN g_argv[1] = '3'   #儲值
         LET l_sql = "SELECT mmedsite,mmed005,mmed015,mmed016 ",
                     "  FROM mmed_t ",
                     " WHERE mmedent = ",g_enterprise," AND mmeddocno = '",g_rtia_m.rtiadocno,"' ",   
                     "   AND mmed005 > 0 AND mmed015 IS NOT NULL "  
      END CASE                  
      PREPARE ammt405_sel_sour_pre FROM l_sql
      DECLARE ammt405_sel_sour_cur CURSOR FOR ammt405_sel_sour_pre  
       
      LET l_cnt = 0
      LET l_site = ''     
      LET l_act_id = ''    
      LET l_act_ver = ''   
      LET l_card_value = ''
      
      CALL cl_err_collect_init()
      FOREACH ammt405_sel_sour_cur INTO l_site,l_card_value,l_act_id,l_act_ver
         IF NOT s_card_chk_activity(2,l_site,l_act_id,l_act_ver,l_card_value) THEN
            LET l_cnt = l_cnt + 1
         END IF
      END FOREACH
      CALL cl_err_collect_show()
       
      IF l_cnt > 0 THEN
         CALL s_transaction_end('N','0')
         RETURN      
      END IF
   END IF   
   #160729-00077#5 160823 by lori add---(E)      
   #end add-point  
 
   CLOSE ammt405_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt405_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt405.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION ammt405_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
      
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmea_d.getLength() THEN
         LET g_detail_idx = g_mmea_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail10")
      IF g_detail_idx > g_mmea10_d.getLength() THEN
         LET g_detail_idx = g_mmea10_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea10_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea10_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmea2_d.getLength() THEN
         LET g_detail_idx = g_mmea2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_mmea3_d.getLength() THEN
         LET g_detail_idx = g_mmea3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_mmea4_d.getLength() THEN
         LET g_detail_idx = g_mmea4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_mmea6_d.getLength() THEN
         LET g_detail_idx = g_mmea6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_mmea7_d.getLength() THEN
         LET g_detail_idx = g_mmea7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx > g_mmea8_d.getLength() THEN
         LET g_detail_idx = g_mmea8_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea8_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea8_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx > g_mmea9_d.getLength() THEN
         LET g_detail_idx = g_mmea9_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea9_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   IF g_current_page = 10 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_mmea5_d.getLength() THEN
         LET g_detail_idx = g_mmea5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmea5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmea5_d.getLength() TO FORMONLY.cnt
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ammt405_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
      
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
      
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt405_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION ammt405_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   IF (cl_null(g_wc2_table10) OR g_wc2_table10.trim() = '1=1')  THEN
      RETURN TRUE
   ELSE
      IF ps_idx = 10 AND
         ((NOT cl_null(g_wc2_table10) AND g_wc2_table10.trim() <> '1=1')) THEN
         RETURN TRUE
      END IF
   END IF 
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
 
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt405.status_show" >}
PRIVATE FUNCTION ammt405_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="ammt405.mask_functions" >}
&include "erp/amm/ammt405_mask.4gl"
 
{</section>}
 
{<section id="ammt405.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION ammt405_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_errno     STRING 
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
   LET g_wc2_table8 = " 1=1"
   LET g_wc2_table9 = " 1=1"
 
 
   CALL ammt405_show()
   CALL ammt405_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   CALL cl_err_collect_init()   #161216-00004#5 161228 by lori add
   CALL s_artt600_conf_chk(g_rtia_m.rtiadocno,g_rtia_m.rtiastus) RETURNING  r_success,l_errno
   IF NOT r_success THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
     
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
      RETURN
   END IF
   CALL cl_err_collect_show()   #161216-00004#5 161228 by lori add
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtia_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_mmea_d))
   CALL cl_bpm_set_detail_data("s_detail10", util.JSONArray.fromFGL(g_mmea10_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_mmea2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_mmea3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_mmea4_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_mmea6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_mmea7_d))
   CALL cl_bpm_set_detail_data("s_detail8", util.JSONArray.fromFGL(g_mmea8_d))
   CALL cl_bpm_set_detail_data("s_detail9", util.JSONArray.fromFGL(g_mmea9_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL ammt405_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt405_ui_headershow()
   CALL ammt405_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION ammt405_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL ammt405_ui_headershow()  
   CALL ammt405_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="ammt405.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION ammt405_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtia_m.rtiadocno
   LET g_pk_array[1].column = 'rtiadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt405.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="ammt405.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION ammt405_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL ammt405_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtia_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt405.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION ammt405_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#22 add-S
   SELECT rtiastus  INTO g_rtia_m.rtiastus
     FROM rtia_t
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   
   IF(g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
      LET g_errno = NULL
      CASE g_rtia_m.rtiastus
         WHEN 'W'
            LET g_errno = 'sub-00180'
         WHEN 'X'
            LET g_errno = 'sub-00229'
         WHEN 'Y'
            LET g_errno = 'sub-00178'
         WHEN 'S'
            LET g_errno = 'sub-00230'
         WHEN 'Z'
            LET g_errno = 'sub-01351'
      END CASE
   
      IF NOT cl_null(g_errno) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = g_errno
         LET g_errparam.extend = g_rtia_m.rtiadocno
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_errno = NULL
         CALL ammt405_set_act_visible()
         CALL ammt405_set_act_no_visible()
         CALL ammt405_show()
         RETURN FALSE
      END IF
   END IF
   #160818-00017#22 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt405.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 检查业务人员
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/12 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia004_chk()
DEFINE l_ooag003   LIKE ooag_t.ooag003
DEFINE l_ooagstus  LIKE ooag_t.ooagstus

   LET g_errno = ''
   SELECT ooag003,ooagstus INTO l_ooag003,l_ooagstus
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = g_rtia_m.rtia004
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'aim-00069'
      WHEN l_ooagstus <> 'Y'   LET g_errno = 'ais-00018'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_rtia_m.rtia005 = l_ooag003
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtia_m.rtia005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtia_m.rtia005_desc = '', g_rtn_fields[1] , ''
   ELSE
      LET g_rtia_m.rtia005 = ''  
      LET g_rtia_m.rtia005_desc = ''
   END IF
   DISPLAY BY NAME g_rtia_m.rtia005,g_rtia_m.rtia005_desc
END FUNCTION
################################################################################
# Descriptions...: 业务部门检查
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/12 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia005_chk()
DEFINE l_ooegstus  LIKE ooag_t.ooagstus
DEFINE l_n         LIKE type_t.num5
   LET g_errno = ''
   SELECT ooegstus INTO l_ooegstus
     FROM ooeg_t
    WHERE ooegent = g_enterprise
      AND ooeg001 = g_rtia_m.rtia005
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
      WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      IF NOT cl_null(g_rtia_m.rtia004) THEN
         LET l_n = 0      
         SELECT COUNT(*) INTO l_n
           FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_rtia_m.rtia004 
            AND ooag003 = g_rtia_m.rtia005
         IF l_n = 0 THEN 
            LET g_errno = 'art-00224'
         END IF 
      END IF 
   END IF
END FUNCTION
################################################################################
# Descriptions...: 應用分類碼檢查
# Memo...........:
# Usage..........: 
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/13 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia009_chk()
DEFINE l_oocqstus   LIKE oocq_t.oocqstus
DEFINE l_oocql004   LIKE oocql_t.oocql004

   LET g_errno = ''
   SELECT oocqstus,oocql004 INTO l_oocqstus,l_oocql004
     FROM oocq_t LEFT JOIN oocql_t ON oocqent = oocqlent AND oocql001 = oocq001 AND oocql002 = oocq002 AND oocql003 = g_dlang
    WHERE oocqent = g_enterprise
      AND oocq001 = '295'
      AND oocq002 = g_rtia_m.rtia009
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00227'
      WHEN l_oocqstus <> 'Y'   LET g_errno = 'art-00228'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_rtia_m.rtia009_desc = l_oocql004
      DISPLAY BY NAME g_rtia_m.rtia009_desc
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 收款条件检查
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/17 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia025_chk()
DEFINE l_pmadstus   LIKE pmad_t.pmadstus

   LET g_errno = ''
   IF NOT cl_null(g_rtia_m.rtia002) THEN 
      SELECT pmadstus INTO l_pmadstus
        FROM pmad_t
       WHERE pmadent = g_enterprise
         AND pmad001 = g_rtia_m.rtia002
         AND pmad002 = g_rtia_m.rtia025
         AND pmad003 = '2'
   ELSE
      SELECT DISTINCT pmadstus INTO l_pmadstus
        FROM pmad_t
       WHERE pmadent = g_enterprise
         AND pmad002 = g_rtia_m.rtia025
         AND pmad003 = '2'
   END IF 
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00235'
      WHEN l_pmadstus <> 'Y'   LET g_errno = 'art-00236'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE

END FUNCTION
################################################################################
# Descriptions...: 币别检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/17 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia026_chk()
DEFINE l_ooajstus   LIKE ooaj_t.ooajstus
DEFINE l_ooef015    LIKE ooef_t.ooef015
DEFINE l_ooef016    LIKE ooef_t.ooef016
DEFINE l_ooam005    LIKE ooam_t.ooam005
DEFINE l_gzsz008    LIKE gzsz_t.gzsz008

   LET g_errno = ''
   SELECT ooajstus INTO l_ooajstus
     FROM ooaj_t,ooef_t
    WHERE ooajent = ooefent
      AND ooaj001 = ooef014
      AND ooefent = g_enterprise
      AND ooef001 = g_rtia_m.rtiasite
      AND ooaj002 = g_rtia_m.rtia026
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00237'
      WHEN l_ooajstus <> 'Y'   LET g_errno = 'art-00238'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN
      IF g_rtia_m.rtia026 != g_rtia_m_t.rtia026 OR cl_null(g_rtia_m_t.rtia026) THEN    
         LET g_rate = NULL
         #取匯率參照表號、主幣別
         SELECT ooef015,ooef016 INTO l_ooef015,l_ooef016 FROM ooef_t  
          WHERE ooefent = g_enterprise AND ooef001 = g_rtia_m.rtiasite

         #取交易貨幣批量
         SELECT ooam005 INTO l_ooam005 FROM ooam_t
          WHERE ooament = g_enterprise AND ooam001 = l_ooef015
            AND ooam003 = g_rtia_m.rtia026  AND ooam004 = g_rtia_m.rtiadocdt

         #取匯率類型   
         CALL cl_get_para(g_enterprise,g_rtia_m.rtiasite,'S-BAS-0010') RETURNING l_gzsz008
         CALL s_aooi160_get_exrate('1',g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtia026,l_ooef016,l_ooam005,l_gzsz008)
            RETURNING g_rtia_m.rtia027
         DISPLAY BY NAME g_rtia_m.rtia027
      END IF 
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 检查税种
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/18 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia028_chk()
DEFINE l_pmabstus   LIKE pmab_t.pmabstus
DEFINE l_oodb005    LIKE oodb_t.oodb005
DEFINE l_oodb006    LIKE oodb_t.oodb006
DEFINE l_oodbstus   LIKE oodb_t.oodbstus

   LET g_errno = ''
#   SELECT pmabstus INTO l_pmabstus
#     FROM pmab_t
#    WHERE pmabent = g_enterprise
#      AND pmabsite = g_rtia_m.rtiasite
#      AND pmab001 = g_rtia_m.rtia002
#      AND pmab084 = g_rtia_m.rtia028
   SELECT oodb005,oodb006,oodbstus INTO l_oodb005,l_oodb006,l_oodbstus
     FROM oodb_t,ooef_t
    WHERE oodbent = g_enterprise
      AND ooef019 = oodb001
      AND ooefent = oodbent
      AND oodb002 = g_rtia_m.rtia028
      AND ooef001 = g_rtia_m.rtiasite
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00419'
      WHEN l_oodbstus <> 'Y'   LET g_errno = 'amm-00420'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_rtia_m.rtia029 = l_oodb006
      LET g_rtia_m.rtia030 = l_oodb005
      DISPLAY BY NAME g_rtia_m.rtia029,g_rtia_m.rtia030
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 税率检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/18 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia029_chk()
DEFINE l_n   LIKE type_t.num5

   LET g_errno = ''
   IF cl_null(g_rtia_m.rtia028) THEN 
      RETURN
   END IF 
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM ooef_t,oodb_t 
     WHERE oodbent = g_enterprise
       AND ooef019 = oodb001
       AND ooefent = oodbent
       AND oodb002 = g_rtia_m.rtia028
       AND ooef001 = g_rtia_m.rtiasite
       AND oodb006 = g_rtia_m.rtia029
       AND oodbstus = 'Y'
   IF l_n = 0 THEN 
      LET g_errno = 'art-00250'
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 收银机编号检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/18 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia036_chk()
DEFINE l_pcaastus   LIKE pcaa_t.pcaastus
DEFINE l_pcacstus   LIKE pcac_t.pcacstus
DEFINE l_n          LIKE type_t.num5
DEFINE l_n1         LIKE type_t.num5

   LET g_errno = ''
   SELECT pcaastus INTO l_pcaastus
     FROM pcaa_t
    WHERE pcaaent = g_enterprise
      AND pcaa001 = g_rtia_m.rtia036
      AND pcaasite = g_rtia_m.rtiasite
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00251'
      WHEN l_pcaastus <> 'Y'   LET g_errno = 'art-00252'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF NOT cl_null(g_rtia_m.rtia037) AND cl_null(g_errno) THEN 
      SELECT pcacstus INTO l_pcacstus
        FROM pcac_t,pcab_t
       WHERE pcacent = g_enterprise
         AND pcabent = pcacent
         AND pcac001 = pcab001
         AND pcac001 = g_rtia_m.rtia037
         AND pcac002 = g_rtia_m.rtiasite
         AND (pcac003 = g_rtia_m.rtia036
          OR pcac003 = ' ')
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00441'
         WHEN l_pcacstus <> 'Y'   LET g_errno = 'amm-00441'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
   END IF 
   IF NOT cl_null(g_errno) THEN 
      RETURN
   END IF 
   LET l_n = 0
   #判断收银机是否有维护对应的库区
   SELECT COUNT(*) INTO l_n
     FROM pcao_t
    WHERE pcaoent = g_enterprise
      AND pcao001 = g_rtia_m.rtia036
      AND pcaosite = g_rtia_m.rtiasite
   IF l_n = 0 THEN 
      RETURN 
   END IF 
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM rtib_t
    WHERE rtibent = g_enterprise 
      AND rtibdocno = g_rtia_m.rtiadocno
   #检查单身库区是否与收银机号对应
   LET l_n1 = 0
   SELECT COUNT(*) INTO l_n1
     FROM pcao_t,rtib_t 
    WHERE pcaoent = rtibent
      AND pcao001 = g_rtia_m.rtia036
      AND pcaosite = g_rtia_m.rtiasite
      AND rtibent = g_enterprise
      AND rtibdocno = g_rtia_m.rtiadocno
      AND pcao002 = rtib025
      AND pcaostus = 'Y'       
   IF l_n <> l_n1 THEN
      LET g_errno = 'art-00351'
   END IF
END FUNCTION
################################################################################
# Descriptions...: 收银员检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/18 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia037_chk()
DEFINE l_pcabstus LIKE pcab_t.pcabstus
DEFINE l_pcacstus LIKE pcac_t.pcacstus

   LET g_errno = ''
   SELECT pcabstus INTO l_pcabstus
     FROM pcab_t
    WHERE pcabent = g_enterprise
      AND pcab001 = g_rtia_m.rtia037
      AND pcab006 in ('1','3','4')
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ade-00024'
      WHEN l_pcabstus <> 'Y'   LET g_errno = 'ade-00025'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      IF cl_null(g_rtia_m.rtia036) THEN 
         SELECT DISTINCT pcacstus INTO l_pcacstus
           FROM pcac_t,pcab_t
          WHERE pcacent = g_enterprise
            AND pcabent = pcacent
            AND pcac001 = pcab001
            AND pcac001 = g_rtia_m.rtia037
            AND pcac002 = g_rtia_m.rtiasite
            AND pcacstus = 'Y'
         CASE 
            WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00440'
            WHEN l_pcacstus <> 'Y'   LET g_errno = 'amm-00440'
            OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
         END CASE
      ELSE
         SELECT pcacstus INTO l_pcacstus
           FROM pcac_t,pcab_t
          WHERE pcacent = g_enterprise
            AND pcabent = pcacent
            AND pcac001 = pcab001
            AND pcac001 = g_rtia_m.rtia037
            AND pcac002 = g_rtia_m.rtiasite
            AND (pcac003 = g_rtia_m.rtia036
             OR pcac003 = ' ')
         CASE 
            WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00441'
            WHEN l_pcacstus <> 'Y'   LET g_errno = 'amm-00441'
            OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
         END CASE
      END IF 
   END IF
   IF cl_null(g_errno) THEN 
      IF cl_null(g_rtia_m.rtia036) THEN 
         SELECT pcac003 INTO g_rtia_m.rtia036 
           FROM pcac_t
          WHERE pcacent = g_enterprise
            AND pcac001 = g_rtia_m.rtia037
            AND pcac002 = g_rtia_m.rtiasite
            AND pcacstus = 'Y'
         IF NOT cl_null(g_rtia_m.rtia036) THEN 
            CALL ammt405_rtia036_chk()
            IF NOT cl_null(g_errno) THEN 
               RETURN 
            END IF 
         END IF          
         IF cl_null(g_rtia_m.rtia036) THEN 
            LET g_rtia_m.rtia036 = ''
         END IF 
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtia_m.rtia036
         CALL ap_ref_array2(g_ref_fields,"SELECT pcaal003 FROM pcaal_t WHERE pcaalent='"||g_enterprise||"' AND pcaalsite = '"||g_rtia_m.rtiasite||"' AND pcaal001=? AND pcaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtia_m.rtia036_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_rtia_m.rtia036_desc      
      END IF          
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 客户带值
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/03/18 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia002_display()
   DEFINE l_rtia025              LIKE rtia_t.rtia025
   DEFINE l_rtia026              LIKE rtia_t.rtia026
   DEFINE l_rtia027              LIKE rtia_t.rtia027
   DEFINE l_ooef015    LIKE ooef_t.ooef015
   DEFINE l_ooef016    LIKE ooef_t.ooef016
   DEFINE l_ooam005    LIKE ooam_t.ooam005
   DEFINE l_gzsz008    LIKE gzsz_t.gzsz008

   LET l_rtia025 = ''
   LET l_rtia026 = ''
   LET l_rtia027 = ''
   #抓取客户主要收款条件
   SELECT pmad002 INTO l_rtia025
     FROM pmad_t
    WHERE pmadent = g_enterprise
      AND pmad001 = g_rtia_m.rtia002
      AND pmad004 = 'Y'
      AND pmadstus = 'Y'
      AND pmad003 = '2'
   LET g_rtia_m.rtia025 = l_rtia025
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtia_m.rtia025
   CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtia_m.rtia025_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtia_m.rtia025_desc
   #抓取客户惯用币别
   SELECT pmab083 INTO l_rtia026
     FROM pmab_t
    WHERE pmabent = g_enterprise
#      AND pmabsite = g_rtia_m.rtiasite      #mark by yangxf
      AND pmabsite = 'ALL'                   #add by yangxf
      AND pmab001 = g_rtia_m.rtia002
   LET g_rtia_m.rtia026 = l_rtia026
   IF NOT cl_null(g_rtia_m.rtia026) THEN
      LET g_rate = NULL
      #取匯率參照表號、主幣別
      SELECT ooef015,ooef016 INTO l_ooef015,l_ooef016 FROM ooef_t  
       WHERE ooefent = g_enterprise AND ooef001 = g_rtia_m.rtiasite

      #取交易貨幣批量
      SELECT ooam005 INTO l_ooam005 FROM ooam_t
       WHERE ooament = g_enterprise AND ooam001 = l_ooef015
         AND ooam003 = g_rtia_m.rtia026 AND ooam004 = g_rtia_m.rtiadocdt

      #取匯率類型
      CALL cl_get_para(g_enterprise,g_rtia_m.rtiasite,'S-BAS-0010') RETURNING l_gzsz008
      CALL s_aooi160_get_exrate('1',g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtia026,l_ooef016,l_ooam005,l_gzsz008)
      RETURNING g_rtia_m.rtia027
   END IF 
   #抓取客户惯用税别
   SELECT pmab084 INTO g_rtia_m.rtia028
     FROM pmab_t
    WHERE pmabent = g_enterprise
#      AND pmabsite = g_rtia_m.rtiasite      #mark by yangxf
      AND pmabsite = 'ALL'                   #add by yangxf
      AND pmab001 = g_rtia_m.rtia002
   IF NOT cl_null(g_rtia_m.rtia028) THEN 
      SELECT DISTINCT oodb005,oodb006
        INTO g_rtia_m.rtia030,g_rtia_m.rtia029
        FROM ooef_t,oodb_t 
       WHERE oodbent = g_enterprise
         AND ooef019 = oodb001
         AND ooefent = oodbent
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
         AND oodbstus = 'Y'
   END IF 
   DISPLAY BY NAME g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,
                   g_rtia_m.rtia029,g_rtia_m.rtia030
   IF NOT cl_null(g_rtia_m.rtia025) THEN 
      CALL ammt405_set_required()   
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 班别检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/03/19 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia038_chk()
   DEFINE l_oogdstus   LIKE oogd_t.oogdstus
   
   LET g_errno = ''
   SELECT oogdstus INTO l_oogdstus
     FROM oogd_t
    WHERE oogdent = g_enterprise
      AND oogd001 = g_rtia_m.rtia038
      AND oogdsite = g_rtia_m.rtiasite
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00299'
      WHEN l_oogdstus <> 'Y'   LET g_errno = 'art-00300'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/03/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtiasite_chk()
DEFINE l_n         LIKE type_t.num5
DEFINE l_sql       STRING 

   LET g_errno = ''
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM ooed_t
    WHERE ooed004 = g_rtia_m.rtiasite
      AND ooed001='8'
      AND ooedent = g_enterprise
   IF l_n = 0 THEN 
      LET g_errno = 'art-00301'
      RETURN
   END IF 
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM ooed_t
    WHERE ooed004 = g_rtia_m.rtiasite
      AND ooed001='8'
      AND ooedent = g_enterprise
      AND ooed006<= g_today
      AND (ooed007>= g_today OR ooed007 IS NULL)
   IF l_n = 0 THEN 
      LET g_errno = 'art-00302'
      RETURN 
   END IF 
   LET l_n = 0            
   LET l_sql = " SELECT COUNT(*) ", 
               "   FROM ooed_t ",
               "  WHERE ooedent = '",g_enterprise,"' AND ooed001='8' ",
               "    AND ooed004 = '",g_rtia_m.rtiasite,"'",
               "    AND ooed006<= '",g_today,"' AND (ooed007>= '",g_today,"' OR ooed007 IS NULL) ", 
               "    AND ooed004 in (SELECT ooed004 FROM ooed_t START WITH ooed005= '",g_site,"' AND ooed001='8' AND ooed006<='",g_today,"' AND (ooed007>='",g_today,"' OR ooed007 IS NULL) ", 
               "           CONNECT BY nocycle PRIOR ooed004=ooed005 AND ooed001='8' AND ooed006<='",g_today,"' AND (ooed007>='",g_today,"' OR ooed007 IS NULL) " ,
#               "         UNION SELECT ooed004 FROM ooed_t WHERE ooed004 = '",g_site,"')", #160905-00007#6 mark
               "         UNION SELECT ooed004 FROM ooed_t WHERE ooedent=",g_enterprise," AND ooed004 = '",g_site,"')", #160905-00007#6 add
               "  ORDER BY ooed004 "
   PREPARE sel_cn FROM l_sql
   EXECUTE sel_cn INTO l_n
   IF l_n = 0 THEN 
      LET g_errno = 'art-00221'
   END IF    
   #IF g_prog != 'agct405' AND g_prog != 'agct406' THEN                    #160705-00042#11 160714 by sakura mark
   IF g_prog NOT MATCHES 'agct405' AND g_prog NOT MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      #抓取销售据点对应的散客
      SELECT ooef108 INTO g_rtia_m.rtia002
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_rtia_m.rtiasite
      IF cl_null(g_rtia_m.rtia002) THEN
         LET g_errno = 'amm-00409'
      ELSE
         #客户带值
         CALL ammt405_rtia002_display()
      END IF 
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 开始/结束卡号检查
# Memo...........:
# Usage..........: 无
# Input parameter: p_card   卡号
# Return code....: 无
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea001_chk(p_card)
   DEFINE p_card      LIKE mmea_t.mmea001
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mmap003   LIKE mmap_t.mmap003
   DEFINE l_mmap005   LIKE mmap_t.mmap005
   DEFINE l_mmanstus  LIKE mman_t.mmanstus
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman054   LIKE mman_t.mman054
   DEFINE l_sql       STRING
   
   LET g_errno = ''
   #检查卡号属否存在且为1.发行状态
   SELECT mmaq006,mmaq002,mmanstus,mman053,mman054 
     INTO l_mmaq006,l_mmaq002,l_mmanstus,l_mman053,l_mman054
     FROM mmaq_t,mman_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 = p_card
      AND mmanent = mmaqent
      AND mman001 = mmaq002
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
      WHEN l_mmaq006 <> '1'    LET g_errno = 'amm-00324'
      WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      CALL ammt405_card(p_card) RETURNING l_n
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
         RETURN 
      END IF 
   END IF 
   IF cl_null(g_errno) THEN 
      #检查卡对应商品是否存在商品清单中
      CALL ammt405_rtib_chk(l_mman053) RETURNING g_errno
      IF NOT cl_null(g_errno) THEN 
         RETURN 
      END IF 
      IF g_mmea_d[l_ac].mmea008 > 0 THEN 
         CALL ammt405_rtib_chk(l_mman054) RETURNING g_errno
         IF NOT cl_null(g_errno) THEN 
            RETURN 
         END IF
      END IF
   END IF 
   #add by yangxf ---start----如果來源單號不為空檢查卡對應商品是否存在訂單中
   IF NOT cl_null(g_rtia_m.rtia007) THEN 
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM rtim_t
       WHERE rtiment = g_enterprise
         AND rtimdocno = g_rtia_m.rtia007
         AND rtim004 = l_mman053
      IF l_n = 0 THEN 
         LET g_errno = 'art-00618'
      END IF 
   END IF
   #add by yangxf ----end----
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: 无
# Input parameter: p_card    开始卡号
#                  p_card2   结束卡号
# Return code....: 无
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea001_mmea002_chk(p_card,p_card2)
   DEFINE p_card      LIKE mmea_t.mmea001
   DEFINE p_card2     LIKE mmea_t.mmea002
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_n1        LIKE type_t.num5
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_mman005   LIKE mmaq_t.mmaq005
   DEFINE l_mman006   LIKE mmaq_t.mmaq006

   LET g_errno = ''
   #抓取卡种
   SELECT mmaq002 INTO l_mmaq002 
     FROM mmaq_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 = p_card
      
   LET l_n = 0
   #检查开始卡号与结束卡号卡种是否一直
   SELECT COUNT(*) INTO l_n
     FROM mmaq_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 = p_card
      AND mmaq002 IN (SELECT mmaq002 FROM mmaq_t WHERE mmaqent = g_enterprise AND mmaq001 = p_card2)
   IF l_n = 0 THEN 
      LET g_errno = 'amm-00326'
      RETURN
   END IF 
   #检查开始卡号必须小于等于结束卡号
   IF p_card > p_card2 THEN 
      LET g_errno = 'amm-00327'
      RETURN 
   END IF
   #卡号总长度，固定码长度
   SELECT mman005,mman006
     INTO l_mman005,l_mman006
     FROM mman_t
    WHERE mman001 = l_mmaq002
      AND mmanent = g_enterprise    ##160720-00001#1   by 08172
          
   LET l_n1 = p_card2[l_mman006+1,l_mman005] - p_card[l_mman006+1,l_mman005] + 1   
   #检查开始和结束卡号之前是否有没有发行的卡号
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM mmaq_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 BETWEEN p_card AND p_card2
      AND mmaq002 = l_mmaq002
      AND mmaq006 = '1'
   IF l_n <> l_n1 THEN 
      LET g_errno = 'amm-00328'
      RETURN 
   END IF

END FUNCTION

################################################################################
# Descriptions...: 卡号带出相关资料
# Memo...........:
# Usage..........: 无
# Input parameter: p_card         开始卡号
#                : p_card2        结束卡号
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea001_display(p_card,p_card2)
   DEFINE p_card      LIKE mmea_t.mmea001
   DEFINE p_card2     LIKE mmea_t.mmea002
   DEFINE l_card      LIKE mmea_t.mmea001
   DEFINE l_mman015   LIKE mman_t.mman015   
   DEFINE l_mman006   LIKE mman_t.mman006
   DEFINE l_mman005   LIKE mman_t.mman005
   DEFINE l_mman042   LIKE mman_t.mman042
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman069   LIKE mman_t.mman069
   DEFINE r_success   LIKE type_t.num5
   
   IF NOT cl_null(p_card) THEN 
      LET l_card = p_card
   ELSE
      LET l_card = p_card2
   END IF 
   #對應卡種編號/發卡方式/附贈卡最低銷費金額/單張購卡金額/记名卡
   SELECT mmaq002,mman009,mman010,mman011,mman015,mman005,mman006,mman048,mman042,mman053,mman069
     INTO g_mmea_d[l_ac].mmea003,g_mmea_d[l_ac].mmak009,g_mmea_d[l_ac].mmak010,
          g_mmea_d[l_ac].mmea006,l_mman015,l_mman005,l_mman006,g_mmea_d[l_ac].mmea009,l_mman042,
          l_mman053,l_mman069
     FROM mman_t,mmaq_t
    WHERE mmaqent = mmanent
      AND mmaq001 = l_card
      AND mman001 = mmaq002
      AND mmanent = g_enterprise      ##160720-00001#1   by 08172

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmea_d[l_ac].mmea003
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_mmea_d[l_ac].mmea003_desc = '', g_rtn_fields[1] , ''
               
   IF NOT cl_null(p_card) AND NOT cl_null(p_card2) THEN 
      #卡張數
      LET g_mmea_d[l_ac].mmea005 = p_card2[l_mman006+1,l_mman005] - p_card[l_mman006+1,l_mman005] + 1   
      #總購卡金額
      LET g_mmea_d[l_ac].mmea007 = g_mmea_d[l_ac].mmea005 * g_mmea_d[l_ac].mmea006
   END IF 
   IF l_mman015 = 'Y' THEN 
      CALL cl_set_comp_entry("mmea004",TRUE)
   ELSE
      IF g_mmea_d[l_ac].mmea008 >= l_mman069 AND l_mman069>0  AND NOT cl_null(g_mmea_d[l_ac].mmea008) THEN   #160604-00009#65 
         CALL cl_set_comp_entry("mmea004",TRUE)
      ELSE
         CALL cl_set_comp_entry("mmea004",FALSE)
         LET g_mmea_d[l_ac].mmea004 = ''
      END IF 
   END IF  
   #add by geza 20151015(S)
   IF g_rtia_m.rtia056 = 'Y' THEN 
      CALL cl_set_comp_entry("mmea004",FALSE)
   END IF 
   #add by geza 20151015(E)
   IF l_mman042 = 'Y' THEN 
      CALL cl_set_comp_entry("mmea008",TRUE)
   ELSE
      CALL cl_set_comp_entry("mmea008",FALSE)
      LET g_mmea_d[l_ac].mmea008 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea009) THEN 
      LET g_mmea_d[l_ac].mmea009 = 100
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea006) THEN 
      LET g_mmea_d[l_ac].mmea006 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea007) THEN 
      LET g_mmea_d[l_ac].mmea007 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea008) THEN 
      LET g_mmea_d[l_ac].mmea008 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea009) THEN 
      LET g_mmea_d[l_ac].mmea009 = 0
   END IF 
   LET g_mmea_d[l_ac].mmea006 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea006,'1')
   LET g_mmea_d[l_ac].mmea007 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea007,'1')
   LET g_mmea_d[l_ac].mmea008 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea008,'1')
   LET g_mmea_d[l_ac].mmea009 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea009,'1')
   IF NOT cl_null(g_mmea_d[l_ac].mmea008) THEN 
      CALL ammt405_mmea008_display() RETURNING r_success
   END IF
   #add by yangxf ---start----
   IF cl_null(g_mmea_d[l_ac].mmea013) THEN 
      SELECT rtdx044 INTO g_mmea_d[l_ac].mmea013
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdx001 = l_mman053
         AND rtdxsite = g_rtia_m.rtiasite
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea_d[l_ac].mmea013
      CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea_d[l_ac].mmea013_desc = '', g_rtn_fields[1] , ''
   END IF 
   #add by yangxf ----end-----
END FUNCTION

################################################################################
# Descriptions...: 会员编号检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea004_chk()
   DEFINE l_n   LIKE type_t.num5
   
   LET g_errno = ''
   LET l_n = 0 
   SELECT COUNT(*) INTO l_n
     FROM mmaf_t
    WHERE mmafent = g_enterprise
      AND mmaf001 = g_mmea_d[l_ac].mmea004
   IF l_n = 0 THEN 
      LET g_errno = 'amm-00180'
   END IF 

END FUNCTION

################################################################################
# Descriptions...: 计算储值加值
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/09 By yangxf
# Modify.........: 2016/08/23 By Lori   s_card_value_cal增加回傳r_mmed.mmed015,r_mmed.mmed016
################################################################################
PRIVATE FUNCTION ammt405_mmea008_display()
DEFINE r_mmed            RECORD                #儲值資訊
             mmed006  LIKE mmed_t.mmed006,     #折扣比率             
             mmed007  LIKE mmed_t.mmed007,     #折扣金額             
             mmed008  LIKE mmed_t.mmed008,     #加值金額             
             mmed009  LIKE mmed_t.mmed009,     #此次儲值成本 
             mmed010  LIKE mmed_t.mmed010,     #儲值後卡內餘額
             mmed011  LIKE mmed_t.mmed011,     #儲值後卡內成本
             mmed012  LIKE mmed_t.mmed012,     #實際應付金額
             mmed015  LIKE mmed_t.mmed015,     #活動規則編號   #160729-00077#5 160823 by lori add
             mmed016  LIKE mmed_t.mmed016      #活動規則版本   #160729-00077#5 160823 by lori add
                         END RECORD
DEFINE r_success         LIKE type_t.num5      #處理狀態
DEFINE l_n         LIKE type_t.num10
DEFINE l_mmea001   LIKE mmea_t.mmea001
#150720-00022#3---add--20151211---by huangrh----begin----
DEFINE r_exists          LIKE type_t.num5
DEFINE r_prei009         LIKE prei_t.prei009
DEFINE r_prei010         LIKE prei_t.prei010
DEFINE r_preg001         LIKE preg_t.preg001
#150720-00022#3---add--20151211---by huangrh----end----

   IF NOT cl_null(g_mmea_d[l_ac].mmea001) THEN 
      LET l_mmea001 = g_mmea_d[l_ac].mmea001
   ELSE
      LET l_mmea001 = g_mmea_d[l_ac].mmea002
   END IF 
   IF cl_null(l_mmea001) THEN 
      RETURN TRUE 
   END IF 
   LET r_success = TRUE
   IF cl_null(g_mmea_d[l_ac].mmea008) THEN 
      LET g_mmea_d[l_ac].mmea008 = 0
   END IF 
   IF g_mmea_d[l_ac].mmea008 > 0 THEN 
     #150720-00022#3---add--20151211---by huangrh----begin----
      #IF g_prog='ammt405' OR g_prog='ammt425' THEN                  #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
         CALL s_aprp310_get_exchange(g_rtia_m.rtiasite,g_rtia_m.rtia001,'1',g_mmea_d[l_ac].mmea001,g_mmea_d[l_ac].mmea008,'','')
                           RETURNING r_exists,r_prei009,r_prei010,r_preg001
      END IF
      #如果有百貨促銷---aprm310，則取aprm310的折扣率
      IF r_exists THEN
         LET g_mmea_d[l_ac].mmea009 = r_prei009*100
         LET g_mmea_d[l_ac].mmea010 =0    #加值為零
         LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea005*r_prei010+g_mmea_d[l_ac].mmea007
      ELSE
      #150720-00022#3---add--20151211---by huangrh----end----      
         CALL s_card_value_cal(g_prog,'2',g_rtia_m.rtiadocno,l_mmea001,g_rtia_m.rtiasite,g_rtia_m.rtia034,
                               g_rtia_m.rtia035,g_mmea_d[l_ac].mmea008,g_rtia_m.rtia026)
           RETURNING r_success,r_mmed.*
         IF NOT r_success THEN 
            RETURN r_success
         END IF
         LET g_mmea_d[l_ac].mmea009 = r_mmed.mmed006
         LET g_mmea_d[l_ac].mmea010 = r_mmed.mmed008     
         LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea005 * (r_mmed.mmed012 + g_mmea_d[l_ac].mmea006) 
         LET g_mmea_d[l_ac].mmea015 = r_mmed.mmed015      #活動規則編號   #160729-00077#5 160823 by lori add
         LET g_mmea_d[l_ac].mmea016 = r_mmed.mmed016      #活動規則版本   #160729-00077#5 160823 by lori add          
      END IF  #150720-00022#3---add--20151211---by huangrh        
   ELSE
      LET g_mmea_d[l_ac].mmea010 = 0
      LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea005 * g_mmea_d[l_ac].mmea006    
   END IF       

   LET g_mmea_d[l_ac].mmea011 = g_mmea_d[l_ac].mmea005*(g_mmea_d[l_ac].mmea010+g_mmea_d[l_ac].mmea008)
   IF cl_null(g_mmea_d[l_ac].mmea010) THEN 
      LET g_mmea_d[l_ac].mmea010 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea011) THEN 
      LET g_mmea_d[l_ac].mmea011 = 0
   END IF 
   IF cl_null(g_mmea_d[l_ac].mmea012) THEN 
      LET g_mmea_d[l_ac].mmea012 = 0
   END IF 
   #add by yangxf ----start----
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      IF g_mmea_d[l_ac].mmea012 = 0 THEN 
         LET g_mmea_d[l_ac].mmea014 = "Y"
      ELSE
         LET g_mmea_d[l_ac].mmea014 = "N"
      END IF 
   END IF 
   #add by yangxf -----end-----
   LET g_mmea_d[l_ac].mmea010 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea010,'1')
   LET g_mmea_d[l_ac].mmea011 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea011,'2')
   LET g_mmea_d[l_ac].mmea012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea_d[l_ac].mmea012,'2')
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 检查卡号重复
# Memo...........:
# Usage..........: 无
# Input parameter: p_card         开始卡号
#                : p_card2        结束卡号
#                : p_cmd          状态
# Return code....: 无
# Date & Author..: 2014/04/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea001_mmea002_key(p_card,p_card2,p_cmd)
   DEFINE p_card   LIKE mmea_t.mmea001
   DEFINE p_card2  LIKE mmea_t.mmea002
   DEFINE p_cmd    LIKE type_t.chr1
   DEFINE l_n      LIKE type_t.num5
   
   LET g_errno = ''
   LET l_n = 0
   IF NOT cl_null(p_card) AND NOT cl_null(p_card2) THEN 
      IF p_cmd = 'a' THEN 
         SELECT COUNT(*) INTO l_n
           FROM mmea_t,rtia_t
          WHERE mmeaent = g_enterprise
            AND rtiaent = mmeaent
            AND rtiadocno = mmeadocno
            AND rtiastus <> 'X'
            AND mmea003 IN (SELECT mmaq002 FROM mmaq_t WHERE mmaqent = g_enterprise AND mmaq001 = p_card)
            AND (mmea001 BETWEEN p_card AND p_card2
             OR  mmea002 BETWEEN p_card AND p_card2
             OR  p_card BETWEEN mmea001 AND mmea002)
      ELSE
         SELECT COUNT(*) INTO l_n
           FROM mmea_t a,rtia_t
          WHERE mmeaent = g_enterprise
            AND rtiaent = mmeaent
            AND rtiadocno = mmeadocno
            AND rtiastus <> 'X'
            AND mmea003 IN (SELECT mmaq002 FROM mmaq_t WHERE mmaqent = g_enterprise AND mmaq001 = p_card)
            AND (mmea001 BETWEEN p_card AND p_card2
             OR  mmea002 BETWEEN p_card AND p_card2
             OR  p_card BETWEEN mmea001 AND mmea002)
            AND NOT EXISTS (SELECT 1 FROM mmea_t b
                             WHERE b.mmeaseq = g_mmea_d[l_ac].mmeaseq
                               AND b.mmeadocno = g_rtia_m.rtiadocno
                               AND b.mmeaent = g_enterprise
                               AND a.mmeaent = b.mmeaent
                               AND a.mmeaseq = b.mmeaseq)
      END IF 
   END IF
   IF l_n > 0 THEN 
      LET g_errno = 'amm-00331'
   END IF

END FUNCTION

################################################################################
# Descriptions...: 新增商品明细
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: r_success   返回状态
# Date & Author..: 2014/04/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_ins_rtib()
#DEFINE l_rtib          RECORD LIKE rtib_t.*   #160215-00002#7 160516 by sakura mark
#DEFINE l_rtic          RECORD LIKE rtic_t.*   #160215-00002#7 160516 by sakura mark
#160215-00002#7 160516 by sakura add(S)
DEFINE l_rtib RECORD  #銷售交易商品明細檔
       rtibent LIKE rtib_t.rtibent, #企業編號
       rtibsite LIKE rtib_t.rtibsite, #營運據點
       rtibunit LIKE rtib_t.rtibunit, #應用組織
       rtiborga LIKE rtib_t.rtiborga, #帳務組織
       rtibdocno LIKE rtib_t.rtibdocno, #單據編號
       rtibseq LIKE rtib_t.rtibseq, #項次
       rtib001 LIKE rtib_t.rtib001, #來源單號
       rtib002 LIKE rtib_t.rtib002, #來源單號項次
       rtib003 LIKE rtib_t.rtib003, #商品條碼
       rtib004 LIKE rtib_t.rtib004, #商品編號
       rtib005 LIKE rtib_t.rtib005, #特徵碼
       rtib006 LIKE rtib_t.rtib006, #稅別編號
       rtib007 LIKE rtib_t.rtib007, #銷售開立發票
       rtib008 LIKE rtib_t.rtib008, #標準售價
       rtib009 LIKE rtib_t.rtib009, #促銷售價
       rtib010 LIKE rtib_t.rtib010, #交易售價
       rtib011 LIKE rtib_t.rtib011, #成本售價
       rtib012 LIKE rtib_t.rtib012, #銷售數量
       rtib013 LIKE rtib_t.rtib013, #銷售單位
       rtib014 LIKE rtib_t.rtib014, #庫存數量
       rtib015 LIKE rtib_t.rtib015, #庫存單位
       rtib016 LIKE rtib_t.rtib016, #銷售庫存單位換算率
       rtib017 LIKE rtib_t.rtib017, #計價數量
       rtib018 LIKE rtib_t.rtib018, #計價單位
       rtib019 LIKE rtib_t.rtib019, #銷售計價單位換算率
       rtib020 LIKE rtib_t.rtib020, #折價金額
       rtib021 LIKE rtib_t.rtib021, #應收金額
       rtib022 LIKE rtib_t.rtib022, #未稅金額
       rtib023 LIKE rtib_t.rtib023, #成本金額
       rtib024 LIKE rtib_t.rtib024, #理由碼
       rtib025 LIKE rtib_t.rtib025, #庫區
       rtib026 LIKE rtib_t.rtib026, #儲位
       rtib027 LIKE rtib_t.rtib027, #批號
       rtib028 LIKE rtib_t.rtib028, #專櫃編號
       rtib029 LIKE rtib_t.rtib029, #分攤積點
       rtib030 LIKE rtib_t.rtib030, #卡券銷售明細對應項次
       rtib031 LIKE rtib_t.rtib031, #本幣應收金額
       rtib032 LIKE rtib_t.rtib032, #庫存管理特徵
       rtib033 LIKE rtib_t.rtib033, #營業員
       rtib034 LIKE rtib_t.rtib034, #掃描碼
       rtib035 LIKE rtib_t.rtib035, #交易類型
       rtib036 LIKE rtib_t.rtib036, #商品屬性
       rtib037 LIKE rtib_t.rtib037, #捆綁條碼項次
       rtib038 LIKE rtib_t.rtib038, #結算扣率
       rtib039 LIKE rtib_t.rtib039, #贈品否
       rtib040 LIKE rtib_t.rtib040, #卡種/券種編號
       rtib041 LIKE rtib_t.rtib041, #卡號/券號
       rtib101 LIKE rtib_t.rtib101  #退貨退回商品否
END RECORD
DEFINE l_rtic RECORD  #銷售交易折扣明細檔
       rticent LIKE rtic_t.rticent, #企業編號
       rticsite LIKE rtic_t.rticsite, #營運據點
       rticunit LIKE rtic_t.rticunit, #應用組織
       rticdocno LIKE rtic_t.rticdocno, #單據編號
       rticseq LIKE rtic_t.rticseq, #項次
       rticseq1 LIKE rtic_t.rticseq1, #折扣序
       rtic001 LIKE rtic_t.rtic001, #單據類型
       rtic002 LIKE rtic_t.rtic002, #折價方式
       rtic003 LIKE rtic_t.rtic003, #促銷規則
       rtic004 LIKE rtic_t.rtic004, #活動類別
       rtic005 LIKE rtic_t.rtic005, #活動子類別
       rtic006 LIKE rtic_t.rtic006, #促銷方式
       rtic007 LIKE rtic_t.rtic007, #入機方式
       rtic008 LIKE rtic_t.rtic008, #參與數量
       rtic009 LIKE rtic_t.rtic009, #參與金額
       rtic010 LIKE rtic_t.rtic010, #贈送基數
       rtic011 LIKE rtic_t.rtic011, #贈送幅度
       rtic012 LIKE rtic_t.rtic012, #折扣率
       rtic013 LIKE rtic_t.rtic013, #折讓金額
       rtic014 LIKE rtic_t.rtic014, #贈卡券種
       rtic015 LIKE rtic_t.rtic015, #贈卡券號
       rtic016 LIKE rtic_t.rtic016, #贈送面額
       rtic017 LIKE rtic_t.rtic017, #贈送面額單位金額
       rtic018 LIKE rtic_t.rtic018, #接卡券種
       rtic019 LIKE rtic_t.rtic019, #接卡券號
       rtic020 LIKE rtic_t.rtic020, #接收基數
       rtic021 LIKE rtic_t.rtic021, #接收幅度
       rtic022 LIKE rtic_t.rtic022, #接收面額
       rtic023 LIKE rtic_t.rtic023, #接收面額單位金額
       rtic024 LIKE rtic_t.rtic024, #接卡券折扣率
       rtic025 LIKE rtic_t.rtic025, #來源類型
       rtic026 LIKE rtic_t.rtic026, #來源單號
       rtic027 LIKE rtic_t.rtic027, #來源折價方式
       rtic028 LIKE rtic_t.rtic028, #承擔比例
       rtic029 LIKE rtic_t.rtic029  #轉費用否
END RECORD
#160215-00002#7 160516 by sakura add(E)
DEFINE l_mman053       LIKE mman_t.mman053
DEFINE l_mman054       LIKE mman_t.mman054
DEFINE l_gcaf013       LIKE gcaf_t.gcaf013
DEFINE l_gcaf041       LIKE gcaf_t.gcaf041   #已開發票禮券稅別#160215-00002#7 160414 by sakura add
DEFINE l_rate          LIKE inaj_t.inaj014
DEFINE l_rate1         LIKE inaj_t.inaj014
DEFINE l_success       LIKE type_t.num5
DEFINE r_success       LIKE type_t.num5
DEFINE l_oodb011       LIKE oodb_t.oodb011
DEFINE l_xrcd103       LIKE xrcd_t.xrcd103,
       l_xrcd104       LIKE xrcd_t.xrcd104,
       l_xrcd105       LIKE xrcd_t.xrcd105,
       l_xrcd113       LIKE xrcd_t.xrcd113,
       l_xrcd114       LIKE xrcd_t.xrcd114,
       l_xrcd115       LIKE xrcd_t.xrcd115,
       l_xrcd123       LIKE xrcd_t.xrcd113,
       l_xrcd124       LIKE xrcd_t.xrcd114,
       l_xrcd125       LIKE xrcd_t.xrcd115,
       l_xrcd133       LIKE xrcd_t.xrcd113,
       l_xrcd134       LIKE xrcd_t.xrcd114,
       l_xrcd135       LIKE xrcd_t.xrcd115
DEFINE l_ooef016       LIKE ooef_t.ooef016
DEFINE l_mman014       LIKE mman_t.mman014   #补卡工本费
DEFINE l_mman013       LIKE mman_t.mman013   #换卡工本费
#150720-00022#3---add--20151207---by huangrh----begin----
DEFINE l_preh003       LIKE preh_t.preh003
DEFINE l_preh005       LIKE preh_t.preh005
DEFINE l_sql           STRING
DEFINE l_flag          LIKE type_t.chr1
DEFINE l_mmea003       LIKE mmea_t.mmea003
DEFINE l_mmaq003       LIKE mmaq_t.mmaq003
DEFINE l_mmag004       LIKE mmag_t.mmag004
DEFINE l_oocq009       LIKE oocq_t.oocq009
DEFINE r_exists        LIKE type_t.num5
DEFINE r_prei009       LIKE prei_t.prei009
DEFINE r_prei010       LIKE prei_t.prei010
DEFINE r_preg001       LIKE preg_t.preg001
#150720-00022#3---add--20151207---by huangrh----end---   
   
   
   
   
   LET r_success = TRUE
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_rtia_m.rtiasite
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea_d[l_ac].mmeaseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      LET l_rtib.rtib025 = g_mmea_d[l_ac].mmea013
      LET l_rtib.rtib030 = g_mmea_d[l_ac].mmeaseq
      LET l_rtib.rtib035 = '1'
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 
      #获取卡种对应商品编号
      SELECT mman053,mman054 INTO l_mman053,l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise 
         AND mman001 = g_mmea_d[l_ac].mmea003
      
      #发卡商品明细
      LET l_rtib.rtib004 = l_mman053 
      
      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF 

      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004       
      #售卡
      LET l_rtib.rtib008 = g_mmea_d[l_ac].mmea006
      #促销
      LET l_rtib.rtib009  = g_mmea_d[l_ac].mmea006
      LET l_rtib.rtib010  = g_mmea_d[l_ac].mmea006
      LET l_rtib.rtib012  = g_mmea_d[l_ac].mmea005
      #带出销售单位
      SELECT imaa105 INTO l_rtib.rtib013
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = l_rtib.rtib004
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
             
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str 
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
      
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
      #141224-00013#15---sakura---mod---end 
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
       LET l_rtib.rtib020 = 0
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027
       IF cl_null(l_rtib.rtib031) THEN 
          LET l_rtib.rtib031 = 0
       END IF 
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')          
                     #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                         #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                         l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                    #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
          RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                    l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
       
       #INSERT INTO rtib_t VALUES(l_rtib.*)   #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E)       
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
       
      #IF g_mmea_d[l_ac].mmea008 > 0 THEN      #mark by yangxf 2016/01/22
       IF g_mmea_d[l_ac].mmea008 >= 0 THEN     #add by yangxf 2016/01/22
          SELECT MAX(rtibseq) + 1 
            INTO l_rtib.rtibseq
            FROM rtib_t
           WHERE rtibent = g_enterprise
             AND rtibdocno = g_rtia_m.rtiadocno
          IF cl_null(l_rtib.rtibseq) THEN 
             LET l_rtib.rtibseq = 1
          END IF 
          #发卡商品明细
          LET l_rtib.rtib004 = l_mman054 
          
         SELECT oodb011 INTO l_oodb011
           FROM oodb_t,ooef_t
          WHERE oodbent = ooefent
            AND oodb001 = ooef019
            AND oodb002 = g_rtia_m.rtia028
            AND ooef001 = g_rtia_m.rtiasite
         IF l_oodb011 = '2' THEN 
            #带出税别
            SELECT rtdx014 INTO l_rtib.rtib006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise 
               AND rtdxsite = g_rtia_m.rtiasite
               AND rtdx001 = l_rtib.rtib004
            IF cl_null(l_rtib.rtib006) THEN 
               INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

               LET r_success = FALSE
               RETURN r_success
            END IF
         ELSE
            LET l_rtib.rtib006 = g_rtia_m.rtia028
         END IF 
          
          #带出销售单位
          SELECT imaa105 INTO l_rtib.rtib013
            FROM imaa_t
           WHERE imaaent = g_enterprise
             AND imaa001 = l_rtib.rtib004
          #储值
          LET l_rtib.rtib008 = g_mmea_d[l_ac].mmea008 + g_mmea_d[l_ac].mmea010
          LET l_rtib.rtib009  = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100) 
          LET l_rtib.rtib010  = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100)         
          LET l_rtib.rtib012  = g_mmea_d[l_ac].mmea005
          #库存单位,計價單位
          SELECT imaa104,imaa106
            INTO l_rtib.rtib015,l_rtib.rtib018
            FROM imaa_t
           WHERE imaaent = g_enterprise
             AND imaa001 = l_rtib.rtib004
         
          #计算销售单位与库存单位转换率
         #141224-00013#15---sakura---mod---str 
          CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
          CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
         
          #计算销售单位与计价单位转换率
          CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
          CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
         
          #库存数量
         #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
          #銷售庫存單位換算率
          LET l_rtib.rtib016 = l_rate
          #計價數量     
         #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
         #141224-00013#15---sakura---mod---end
          #銷售計價單位換算率
          LET l_rtib.rtib019 = l_rate1
         
         LET l_rtib.rtib020 = g_mmea_d[l_ac].mmea005*(g_mmea_d[l_ac].mmea008 * (1-g_mmea_d[l_ac].mmea009/100) + g_mmea_d[l_ac].mmea010)
         LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
         
         #计算本币应收金额
         LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027    
         IF cl_null(l_rtib.rtib031) THEN 
           LET l_rtib.rtib031 = 0
         END IF 
         LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')            
                        #單號              項次                    項次2   營運據點           應收金額
         CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                            #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                            l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                       #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
             RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                       l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
         LET l_rtib.rtib022 = l_xrcd103
         IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
         
         #INSERT INTO rtib_t VALUES(l_rtib.*)   #160215-00002#7 160516 by sakura mark
         #160215-00002#7 160516 by sakura add(S)
         INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                             rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                             rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                             rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                             rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                             rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                             rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                             rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                             rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                             rtib040,rtib041 ,rtib101)
         VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
                 l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
                 l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
                 l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
                 l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
                 l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
                 l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
                 l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
                 l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
                 l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
         #160215-00002#7 160516 by sakura add(E)          
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
       END IF 
              
    END IF 
   #IF g_prog = 'ammt407' THEN        #160705-00042#11 160714 by sakura mark 
   IF g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea2_d[l_ac].mmecseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      #add by yangxf ---start----
      #删除折价明细
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = g_mmea2_d[l_ac].mmecseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtic_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
       #取工本费
       SELECT mman013
         INTO l_mman013
         FROM mmaq_t,mman_t
        WHERE mmaqent = g_enterprise
          AND mmaq001 = g_mmea2_d[l_ac].mmec008
          AND mmaqent = mmanent 
          AND mmaq002 = mman001
       IF cl_null(l_mman013) THEN 
          LET l_mman013 = 0
       END IF 
      #add by yangxf ---end----
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      LET l_rtib.rtib035 = '1'
      LET l_rtib.rtib025 = g_mmea2_d[l_ac].mmec013
      LET l_rtib.rtib030 = g_mmea2_d[l_ac].mmecseq
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 
      #获取卡种对应商品编号
      SELECT mman053,mman054 INTO l_mman053,l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise 
         AND mman001 = g_mmea2_d[l_ac].mmec009
      
      #补卡商品明细
      LET l_rtib.rtib004 = l_mman053 
      
      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF 
      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004   
      #工本费
      LET l_rtib.rtib008 = l_mman013
      #促销
      LET l_rtib.rtib009  = g_mmea2_d[l_ac].mmec012
      LET l_rtib.rtib010  = g_mmea2_d[l_ac].mmec012
      LET l_rtib.rtib012  = 1
      #带出销售单位
      SELECT imaa105 INTO l_rtib.rtib013
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = l_rtib.rtib004
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
      
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str 
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
      
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
      #141224-00013#15---sakura---mod---end
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
       LET l_rtib.rtib020 = l_mman013 - g_mmea2_d[l_ac].mmec012
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027    
       IF cl_null(l_rtib.rtib031) THEN 
           LET l_rtib.rtib031 = 0
       END IF        
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')          
                     #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                         #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                         l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                    #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
          RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                    l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
       
       #INSERT INTO rtib_t VALUES(l_rtib.*)   #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E)         
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
       IF cl_null(g_mmea2_d[l_ac].mmec012) THEN 
          LET g_mmea2_d[l_ac].mmec012 = 0
       END IF 
#       #工本费不等于卡种设定工本费写入折价明细
#       IF l_mman013 <> g_mmea2_d[l_ac].mmec012 THEN 
#          #                    项次/参与金额/原工本费
#          CALL ammt405_ins_rtic(l_rtib.rtibseq,l_rtib.rtib021,l_mman013) RETURNING r_success
#          IF NOT r_success THEN
#              LET r_success = FALSE
#              RETURN r_success
#           END IF
#       END IF 
    END IF 
   #IF g_prog = 'ammt406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt406' THEN   #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea3_d[l_ac].mmebseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      #删除折价明细
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise 
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = g_mmea3_d[l_ac].mmebseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtic_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      #取工本费
      SELECT mman014
        INTO l_mman014
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmaq001 = g_mmea3_d[l_ac].mmeb008
         AND mmaqent = mmanent 
         AND mmaq002 = mman001
      IF cl_null(l_mman014) THEN 
         LET l_mman014 = 0
      END IF 
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtib035 = '1'
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      LET l_rtib.rtib025 = g_mmea3_d[l_ac].mmeb013
      LET l_rtib.rtib030 = g_mmea3_d[l_ac].mmebseq
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 
      #获取卡种对应商品编号
      SELECT mman053,mman054 INTO l_mman053,l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise 
         AND mman001 = g_mmea3_d[l_ac].mmeb009
      
      #换卡商品明细
      LET l_rtib.rtib004 = l_mman053 
      
      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF 
      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004   
      #工本费
      LET l_rtib.rtib008 = l_mman014
      #促销
      LET l_rtib.rtib009  = g_mmea3_d[l_ac].mmeb012
      LET l_rtib.rtib010  = g_mmea3_d[l_ac].mmeb012
      LET l_rtib.rtib012  = 1
      #带出销售单位
      SELECT imaa105 INTO l_rtib.rtib013
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = l_rtib.rtib004
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
      
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
      
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
      #141224-00013#15---sakura---mod---end
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
       LET l_rtib.rtib020 = l_mman014 - g_mmea3_d[l_ac].mmeb012
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027    
       IF cl_null(l_rtib.rtib031) THEN 
          LET l_rtib.rtib031 = 0
       END IF        
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')          
                     #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                         #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                         l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                    #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
          RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                    l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
       
       #INSERT INTO rtib_t VALUES(l_rtib.*)   #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E)        
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
       IF cl_null(g_mmea3_d[l_ac].mmeb012) THEN 
          LET g_mmea3_d[l_ac].mmeb012 = 0
       END IF 
#       #工本费不等于卡种设定工本费写入折价明细
#       IF l_mman014 <> g_mmea3_d[l_ac].mmeb012 THEN 
#          #                    项次/参与金额/原工本费
#          CALL ammt405_ins_rtic(l_rtib.rtibseq,l_rtib.rtib021,l_mman014) RETURNING r_success
#          IF NOT r_success THEN
#              LET r_success = FALSE
#              RETURN r_success
#           END IF
#       END IF 
    END IF 
   #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea4_d[l_ac].mmedseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      LET l_rtib.rtib035 = '1'
      LET l_rtib.rtib025 = g_mmea4_d[l_ac].mmed013
      LET l_rtib.rtib030 = g_mmea4_d[l_ac].mmedseq
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 

      #获取卡种对应商品编号
      SELECT mman053,mman054 INTO l_mman053,l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise 
         AND mman001 = g_mmea4_d[l_ac].mmaq002

       #储值商品明细
       LET l_rtib.rtib004 = l_mman054 
      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004         

      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF 
       
       #带出销售单位
       SELECT imaa105 INTO l_rtib.rtib013
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
       #储值
       LET l_rtib.rtib008 = g_mmea4_d[l_ac].mmed005 + g_mmea4_d[l_ac].mmed008
       LET l_rtib.rtib009 = g_mmea4_d[l_ac].mmed012
       LET l_rtib.rtib010 = g_mmea4_d[l_ac].mmed012
       LET l_rtib.rtib012 = 1
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
       
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
       
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
      #141224-00013#15---sakura---mod---end
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
　         　　
       LET l_rtib.rtib020 = g_mmea4_d[l_ac].mmed007 + g_mmea4_d[l_ac].mmed008
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027   
       IF cl_null(l_rtib.rtib031) THEN 
           LET l_rtib.rtib031 = 0
       END IF 
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')          
                      #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                          #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                          l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                     #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
           RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                     l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
       
       #INSERT INTO rtib_t VALUES(l_rtib.*) #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E)        
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
    END IF
   #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark  
   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea5_d[l_ac].mmedseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      LET l_rtib.rtib035 = '1'
      LET l_rtib.rtib025 = g_mmea5_d[l_ac].mmed013
      LET l_rtib.rtib030 = g_mmea5_d[l_ac].mmedseq
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 

      #获取卡种对应商品编号
      SELECT mman053,mman054 INTO l_mman053,l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise 
         AND mman001 = g_mmea5_d[l_ac].mmaq002

       #储值商品明细
       LET l_rtib.rtib004 = l_mman054 
      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004   
      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF 
       
       #带出销售单位
       SELECT imaa105 INTO l_rtib.rtib013
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
       #注销
       LET l_rtib.rtib008 = g_mmea5_d[l_ac].mmed005
       LET l_rtib.rtib009 = g_mmea5_d[l_ac].mmed009   
       LET l_rtib.rtib010 = g_mmea5_d[l_ac].mmed009
       LET l_rtib.rtib012 = -1
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
       
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str 
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
       
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
     #141224-00013#15---sakura---mod---end 
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
         
　         　　
       LET l_rtib.rtib020 = (l_rtib.rtib008 - l_rtib.rtib010)*l_rtib.rtib012
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027    
       IF cl_null(l_rtib.rtib031) THEN 
           LET l_rtib.rtib031 = 0
       END IF 
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')          
                      #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                          #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                          l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                     #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
           RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                     l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF        
       
       #INSERT INTO rtib_t VALUES(l_rtib.*) #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E)        
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
    END IF 
   #IF g_prog = 'agct405' OR g_prog = 'agct406' THEN               #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN    #160705-00042#11 160714 by sakura add
      #删除存在商品资料
      DELETE FROM rtib_t 
       WHERE rtibent = g_enterprise 
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib030 = g_mmea6_d[l_ac].gcbiseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      LET l_rtib.rtibent = g_enterprise
      LET l_rtib.rtibsite = g_rtia_m.rtiasite
      LET l_rtib.rtibunit = g_rtia_m.rtiasite
      LET l_rtib.rtiborga = g_rtia_m.rtiasite
      LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
      #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
         LET l_rtib.rtib035 = '1'
      ELSE
         LET l_rtib.rtib035 = '2' 
      END IF 
      LET l_rtib.rtib025 = g_mmea6_d[l_ac].gcbi007
      LET l_rtib.rtib030 = g_mmea6_d[l_ac].gcbiseq
      SELECT MAX(rtibseq) + 1 
        INTO l_rtib.rtibseq
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      IF cl_null(l_rtib.rtibseq) THEN 
         LET l_rtib.rtibseq = 1
      END IF 
      #获取券种对应商品编号、已開發票禮券稅別
      LET l_gcaf041 = '' #160215-00002#7 160414 by sakura add
      SELECT gcaf013,gcaf041 INTO l_gcaf013,l_gcaf041   #160215-00002#7 160414 by sakura add l_gcaf041
        FROM gcaf_t
       WHERE gcafent = g_enterprise 
         AND gcaf001 = g_mmea6_d[l_ac].gcbi003
      
      #售券商品明细
      LET l_rtib.rtib004 = l_gcaf013
      
      SELECT oodb011 INTO l_oodb011
        FROM oodb_t,ooef_t
       WHERE oodbent = ooefent
         AND oodb001 = ooef019
         AND oodb002 = g_rtia_m.rtia028
         AND ooef001 = g_rtia_m.rtiasite
      #160215-00002#7 160414 by sakura add(S)
      #稅別的預設值改依"券的券種預設"取agcm300的稅別(gcaf041)
      #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
         LET l_rtib.rtib006 = l_gcaf041
      ELSE
      #160215-00002#7 160414 by sakura add(E)
         IF l_oodb011 = '2' THEN 
            #带出税别
            SELECT rtdx014 INTO l_rtib.rtib006
              FROM rtdx_t
             WHERE rtdxent = g_enterprise 
               AND rtdxsite = g_rtia_m.rtiasite
               AND rtdx001 = l_rtib.rtib004
            IF cl_null(l_rtib.rtib006) THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'amm-00410'
               LET g_errparam.extend = l_rtib.rtib004
               LET g_errparam.popup = TRUE
               CALL cl_err()
         
               LET r_success = FALSE
               RETURN r_success
            END IF
         ELSE
            LET l_rtib.rtib006 = g_rtia_m.rtia028
         END IF
      END IF   #160215-00002#7 160414 by sakura add
      
      #商品条码
      SELECT rtdx002 INTO l_rtib.rtib003
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = l_rtib.rtib004   
      #售券
      LET l_rtib.rtib008 = g_mmea6_d[l_ac].oocq009
      #150720-00022#3---add--20151211---by huangrh----begin----
       #IF g_prog='agct405' OR g_prog='agct406' THEN                  #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
          #取當前日期
          LET l_preh003=cl_get_today()
          #取當前時間
          LET l_preh005=cl_get_time()
          
          #退券，取來源單據的單據日期
          #沒有來源單據取此時的百貨促銷折扣率
          #IF g_prog='agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN          #160705-00042#11 160714 by sakura mark
          IF g_prog MATCHES 'agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN   #160705-00042#11 160714 by sakura add
             SELECT rtiadocdt INTO l_preh003
               FROM rtia_t
              WHERE rtiaent=g_enterprise
                AND rtiadocno=g_rtia_m.rtia007
          END IF         
          CALL s_aprp310_get_exchange(g_rtia_m.rtiasite,g_rtia_m.rtia001,'2',g_mmea6_d[l_ac].gcbi001,0,l_preh003,l_preh005)
                            RETURNING r_exists,r_prei009,r_prei010,r_preg001
          IF r_exists THEN
             LET r_prei009=r_prei009*100
          ELSE
             LET r_prei009 = 100
          END IF                         
       END IF
      #150720-00022#3---add--20151211---by huangrh----begin----
      #促销
      LET l_rtib.rtib009  = g_mmea6_d[l_ac].oocq009*r_prei009/100
      #交易價
      LET l_rtib.rtib010  = g_mmea6_d[l_ac].oocq009*g_mmea6_d[l_ac].gcbi009/100
      #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
         LET l_rtib.rtib012  = g_mmea6_d[l_ac].gcbi005
      ELSE
         LET l_rtib.rtib012  = g_mmea6_d[l_ac].gcbi005*(-1)
      END IF 
      #带出销售单位
      SELECT imaa105 INTO l_rtib.rtib013
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = l_rtib.rtib004
       #库存单位,計價單位
       SELECT imaa104,imaa106
         INTO l_rtib.rtib015,l_rtib.rtib018
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = l_rtib.rtib004
      
       #计算销售单位与库存单位转换率
      #141224-00013#15---sakura---mod---str 
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
      
       #计算销售单位与计价单位转换率
       CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
       CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
       
       #库存数量
      #LET l_rtib.rtib014 = l_rtib.rtib012 * l_rate
       #銷售庫存單位換算率
       LET l_rtib.rtib016 = l_rate
       #計價數量     
      #LET l_rtib.rtib017 = l_rtib.rtib012 * l_rate1
      #141224-00013#15---sakura---mod---end
       #銷售計價單位換算率
       LET l_rtib.rtib019 = l_rate1
       LET l_rtib.rtib020 = l_rtib.rtib012*l_rtib.rtib008 - l_rtib.rtib012*l_rtib.rtib010
       LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
       #计算本币应收金额
       LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027  
       IF cl_null(l_rtib.rtib031) THEN 
           LET l_rtib.rtib031 = 0
       END IF 
       LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')   
                     #單號              項次                    項次2   營運據點           應收金額
       CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                         #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                         l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                    #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
          RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                    l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
       LET l_rtib.rtib022 = l_xrcd103
       IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF        
       
       #INSERT INTO rtib_t VALUES(l_rtib.*) #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                           rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                           rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                           rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                           rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                           rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                           rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                           rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                           rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                           rtib040,rtib041 ,rtib101)
       VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
               l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
               l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
               l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
               l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
               l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
               l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
               l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
               l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
               l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
       #160215-00002#7 160516 by sakura add(E) 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtib_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
    END IF 
    #更新单头应收金额
    UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                   FROM rtib_t
                                  WHERE rtibent = g_enterprise
                                    AND rtibdocno = g_rtia_m.rtiadocno),
                      rtia049 = (SELECT SUM(rtib031)
                                   FROM rtib_t
                                  WHERE rtibent = g_enterprise
                                    AND rtibdocno = g_rtia_m.rtiadocno)              
     WHERE rtiaent = g_enterprise
       AND rtiadocno = g_rtia_m.rtiadocno
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = "rtia_t"
       LET g_errparam.popup = FALSE
       CALL cl_err()

       LET r_success = FALSE
       RETURN r_success
    END IF
    #删除存在商品资料
    DELETE FROM rtic_t 
     WHERE rticent = g_enterprise 
       AND rticdocno = g_rtia_m.rtiadocno
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = "rtic_t"
       LET g_errparam.popup = FALSE
       CALL cl_err()

       LET r_success = FALSE
       RETURN r_success
    END IF
    INITIALIZE l_rtib.* TO NULL
    #写入折价明细
    DECLARE rtic_cs CURSOR FOR SELECT * FROM rtib_t 
                                WHERE rtibent = g_enterprise
                                  AND rtibdocno = g_rtia_m.rtiadocno
                                  AND rtib020 <> 0 
    FOREACH rtic_cs INTO l_rtib.*
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "FOREACH:"
          LET g_errparam.popup = TRUE
          CALL cl_err()

          LET r_success = FALSE
          EXIT FOREACH
       END IF
       INITIALIZE l_rtic.* TO NULL
       #IF g_prog = 'ammt405' OR g_prog = 'ammt425' OR g_prog = 'ammt426' THEN                    #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' OR g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
          LET l_rtic.rtic002 = '13'
       END IF 
       #IF g_prog = 'ammt406' OR g_prog = 'ammt407' THEN              #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'ammt406' OR g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura add
          LET l_rtic.rtic002 = '10'
       END IF 
       #IF g_prog = 'agct405' OR g_prog = 'agct406' THEN              #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
          LET l_rtic.rtic002 = '34'
          IF l_rtib.rtib009 = l_rtib.rtib010 THEN 
             CONTINUE FOREACH
          END IF 
       END IF 
       LET l_rtic.rticent = g_enterprise
       LET l_rtic.rticsite = g_rtia_m.rtiasite
       LET l_rtic.rticunit = g_rtia_m.rtiasite
       LET l_rtic.rticdocno = g_rtia_m.rtiadocno
       LET l_rtic.rticseq = l_rtib.rtibseq
       SELECT MAX(rticseq1) + 1 INTO l_rtic.rticseq1
         FROM rtic_t
        WHERE rticent = g_enterprise
          AND rticdocno =  g_rtia_m.rtiadocno
          AND rticseq = l_rtic.rticseq
       IF cl_null(l_rtic.rticseq1) THEN 
          LET l_rtic.rticseq1 = 1
       END IF
       LET l_rtic.rtic001 = g_prog
       LET l_rtic.rtic008 = l_rtib.rtib012
       LET l_rtic.rtic009 = l_rtib.rtib008 * l_rtib.rtib012
       LET l_rtic.rtic010 = l_rtic.rtic009
       #IF g_prog = 'agct405' OR g_prog = 'agct406' THEN              #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
          LET l_rtic.rtic011 = (l_rtib.rtib009 - l_rtib.rtib010) * l_rtib.rtib012
          LET l_rtic.rtic013 = (l_rtib.rtib009 - l_rtib.rtib010) * l_rtib.rtib012
       ELSE
          LET l_rtic.rtic011 = l_rtib.rtib020
          LET l_rtic.rtic013 = l_rtib.rtib020
       END IF
       LET l_rtic.rtic012 = (1-l_rtic.rtic013/l_rtic.rtic009)*100
       IF cl_null(l_rtic.rtic012) THEN 
           LET l_rtic.rtic012 = 0
       END IF 
       LET l_rtic.rtic012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic012,'2')    #依幣別取位
       #INSERT INTO rtic_t VALUES(l_rtic.*)   #160215-00002#7 160516 by sakura mark
       #160215-00002#7 160516 by sakura add(S)
       INSERT INTO rtic_t (rticent ,rticsite,rticunit,rticdocno,rticseq,
                           rticseq1,rtic001 ,rtic002 ,rtic003  ,rtic004,
                           rtic005 ,rtic006 ,rtic007 ,rtic008  ,rtic009,
                           rtic010 ,rtic011 ,rtic012 ,rtic013  ,rtic014,
                           rtic015 ,rtic016 ,rtic017 ,rtic018  ,rtic019,
                           rtic020 ,rtic021 ,rtic022 ,rtic023  ,rtic024,
                           rtic025 ,rtic026 ,rtic027 ,rtic028  ,rtic029)
       VALUES(l_rtic.rticent ,l_rtic.rticsite,l_rtic.rticunit,l_rtic.rticdocno,l_rtic.rticseq,
              l_rtic.rticseq1,l_rtic.rtic001 ,l_rtic.rtic002 ,l_rtic.rtic003  ,l_rtic.rtic004,
              l_rtic.rtic005 ,l_rtic.rtic006 ,l_rtic.rtic007 ,l_rtic.rtic008  ,l_rtic.rtic009,
              l_rtic.rtic010 ,l_rtic.rtic011 ,l_rtic.rtic012 ,l_rtic.rtic013  ,l_rtic.rtic014,
              l_rtic.rtic015 ,l_rtic.rtic016 ,l_rtic.rtic017 ,l_rtic.rtic018  ,l_rtic.rtic019,
              l_rtic.rtic020 ,l_rtic.rtic021 ,l_rtic.rtic022 ,l_rtic.rtic023  ,l_rtic.rtic024,
              l_rtic.rtic025 ,l_rtic.rtic026 ,l_rtic.rtic027 ,l_rtic.rtic028  ,l_rtic.rtic029)
       #160215-00002#7 160516 by sakura add(E)       
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "rtic_t"
          LET g_errparam.popup = FALSE
          CALL cl_err()

          LET r_success = FALSE
          RETURN r_success
       END IF
    END FOREACH  

    #150720-00022#3---add--20151207---by huangrh----begin----
    #IF g_prog='agct405' OR g_prog='ammt405' OR g_prog='ammt425' OR g_prog='agct406' THEN                                  #160705-00042#11 160714 by sakura mark   
    IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
        #取當前日期
        LET l_preh003=cl_get_today()
        #取當前時間
        LET l_preh005=cl_get_time()
        #退券，取來源單據的單據日期
        #IF g_prog='agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN   #160705-00042#11 160714 by sakura mark
        IF g_prog MATCHES 'agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN    #160705-00042#11 160714 by sakura add
           SELECT rtiadocdt INTO l_preh003
             FROM rtia_t
            WHERE rtiaent=g_enterprise
              AND rtiadocno=g_rtia_m.rtia007
        END IF        
       #只算充值金額商品的折扣，不算卡種/券種商品的折扣 
       #IF g_prog='ammt405' OR g_prog='ammt425' THEN                  #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
          LET l_sql=" SELECT rtib_t.*,mmea003 ",
                    "   FROM rtib_t,rtia_t,mmea_t,mman_t", 
                    "  WHERE rtibent = '",g_enterprise,"'",
                    "    AND rtibdocno = '",g_rtia_m.rtiadocno,"'",
                    "    AND rtibent=rtiaent",
                    "    AND rtibdocno=rtiadocno",
                    "    AND mmeaent=rtiaent",
                    "    AND mmeadocno=rtiadocno",
                    "    AND rtib030=mmeaseq",
                    "    AND mmanent=rtibent",
                    "    AND mman001=mmea003",
                    "    AND mman054=rtib004",
                    "    AND mmanstus='Y'",
                    "    AND EXISTS(SELECT 1 FROM preg_t,prei_t,preh_t",
                    "                       WHERE pregent=preient",
                    "                         AND preg001=prei001",
                    "                         AND pregent=prehent",
                    "                         AND preg001=preh001",
                    "                         AND pregsite=rtiasite",  #門店編號
                    "                         AND pregstus='F'",       #已發佈
                    "                         AND prei081='1'",        #已發佈
                    "                         AND preg004='1'",        #買換
                    "                         AND preg005='1'",        #卡種
                    "                         AND preg006=mmea003",    #券種編號
                    "                         AND prehacti='Y'",
                    "                         AND ((preh003<'",l_preh003,"' AND preh004>'",l_preh003,"') OR (preh003='",l_preh003,"' AND preh005<='",l_preh005,"') OR (preh004='",l_preh003,"' AND preh006>='",l_preh005,"'))",
                    "               )"    
       ELSE 
          LET l_sql=" SELECT rtib_t.*,gcbi003 ",
                    "   FROM rtib_t,rtia_t,gcbi_t,gcaf_t", 
                    "  WHERE rtibent = '",g_enterprise,"'",
                    "    AND rtibdocno = '",g_rtia_m.rtiadocno,"'",
                    "    AND rtibent=rtiaent",
                    "    AND rtibdocno=rtiadocno",
                    "    AND gcbient=rtiaent",
                    "    AND gcbidocno=rtiadocno",
                    "    AND rtib030=gcbiseq",
                    "    AND rtib030=gcbiseq1",
                    "    AND gcafent=rtibent",
                    "    AND gcaf001=gcbi003",
                    "    AND rtib004=gcaf013",
                    "    AND gcafstus='Y'",
                    "    AND EXISTS(SELECT 1 FROM preg_t,prei_t,preh_t",
                    "                       WHERE pregent=preient",
                    "                         AND preg001=prei001",
                    "                         AND pregent=prehent",
                    "                         AND preg001=preh001",
                    "                         AND pregsite=rtiasite",  #門店編號
                    "                         AND pregstus='F'",       #已發佈
                    "                         AND prei081='1'",        #已發佈
                    "                         AND preg004='1'",        #買換
                    "                         AND preg005='2'",        #券種
                    "                         AND preg006=gcbi003",    #券種編號
                    "                         AND prehacti='Y'",
                    "                         AND ((preh003<'",l_preh003,"' AND preh004>'",l_preh003,"') OR (preh003='",l_preh003,"' AND preh005<='",l_preh005,"') OR (preh004='",l_preh003,"' AND preh006>='",l_preh005,"'))",
                    "               )"     
       END IF
                                                                                                                       
       PREPARE ammt405_selrtib_pre FROM l_sql    
       DECLARE ammt405_selrtib_cur CURSOR FOR ammt405_selrtib_pre     
       
       INITIALIZE l_rtib.* TO NULL
       
       FOREACH ammt405_selrtib_cur INTO l_rtib.*,l_mmea003
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "FOREACH:"
             LET g_errparam.popup = TRUE
             CALL cl_err()
       
             LET r_success = FALSE
             EXIT FOREACH
          END IF
          
          #IF g_prog='ammt405' OR g_prog='ammt425' THEN                  #160705-00042#11 160714 by sakura mark
          IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
             LET l_flag='1' #卡種     
             #售卡和卡儲值---單身折扣率現在不可以修正，所以如果有卡種的百貨促銷，促銷率一定是百貨的促銷率
             DELETE FROM rtic_t 
                   WHERE rticent=g_enterprise 
                     AND rticsite=g_rtia_m.rtiasite 
                     AND rticdocno=g_rtia_m.rtiadocno 
                     AND rticseq=l_rtib.rtibseq             
          ELSE
             LET l_flag='2' #券種
             
            #先刪除再新增，防止是單身修改（ON ROW CHANGE）時，調用此邏輯
            #刪除此筆的折扣明細，如果有百貨促銷折扣，只算百貨促銷折扣
            DELETE FROM rtic_t 
                  WHERE rticent=g_enterprise 
                    AND rticsite=g_rtia_m.rtiasite 
                    AND rticdocno=g_rtia_m.rtiadocno 
                    AND rticseq=l_rtib.rtibseq
                    AND rtic001='aprm310'
                    AND rtic002='7'
          END IF
                  
          INITIALIZE l_rtic.* TO NULL
          
          LET l_rtic.rtic001='aprm310'  #促銷談判條件
          LET l_rtic.rtic002 = '7'      #滿額滿量促銷
          LET l_rtic.rticent = g_enterprise
          LET l_rtic.rticsite = g_rtia_m.rtiasite
          LET l_rtic.rticunit = g_rtia_m.rtiasite
          LET l_rtic.rticdocno = g_rtia_m.rtiadocno
          LET l_rtic.rticseq = l_rtib.rtibseq
          SELECT MAX(rticseq1) + 1 INTO l_rtic.rticseq1
            FROM rtic_t
           WHERE rticent = g_enterprise
             AND rticdocno =  g_rtia_m.rtiadocno
             AND rticseq = l_rtic.rticseq
          IF cl_null(l_rtic.rticseq1) THEN 
             LET l_rtic.rticseq1 = 1
          END IF
                    
          SELECT DISTINCT preg001 INTO l_rtic.rtic003  #規則編號
            FROM preg_t,prei_t,preh_t
           WHERE pregent=preient
             AND preg001=prei001
             AND pregent=prehent
             AND preg001=preh001
             AND pregsite=g_rtia_m.rtiasite  #門店編號
             AND pregstus='F'       #已發佈
             AND prei081='1'        #已發佈
             AND preg004='1'        #買換
             AND preg005=l_flag     #卡種/券種
             AND preg006=l_mmea003  #卡種/券種編號
             AND prehacti='Y'
             AND ((preh003<l_preh003 AND preh004>l_preh003) OR (preh003=l_preh003 AND preh005<=l_preh005) OR (preh004=l_preh003 AND preh006>=l_preh005))          
          
          LET l_rtic.rtic006 = '2'    #折扣
          LET l_rtic.rtic007 = '2'    #實收         
          LET l_rtic.rtic008 = l_rtib.rtib012
          LET l_rtic.rtic009 = l_rtib.rtib008 * l_rtib.rtib012
          
          IF cl_null(g_rtia_m.rtia001) THEN #散客
             SELECT DISTINCT prei009,prei010 INTO l_rtic.rtic010,l_rtic.rtic011
               FROM prei_t
              WHERE preient=g_enterprise
                AND prei001=l_rtic.rtic003
                AND prei081='1'
          ELSE #會員
             #會員編號
             SELECT DISTINCT mmaq003 INTO l_mmaq003
               FROM mmaq_t
              WHERE mmaqent=g_enterprise
                AND mmaq001=g_rtia_m.rtia001
             #會員等級編號   
             SELECT DISTINCT mmag004 INTO l_mmag004
               FROM mmag_t
              WHERE mmagent=g_enterprise
                AND mmag001=l_mmaq003
                AND mmag002='2049'
                AND mmag003='09'
                
             #會員等級    
             LET l_oocq009=''
             SELECT DISTINCT oocq009 INTO l_oocq009  #會員等級
                 FROM oocq_t
                WHERE oocqent = g_enterprise
                  AND oocq001 = '2024'
                  AND oocq002=l_mmag004
                  AND oocqstus='Y'
                  AND (oocq009='1' OR oocq009='2' OR oocq009='3' OR oocq009='4' OR oocq009='5')  #会员等级一\会员等级二\会员等级三\会员等级四\会员等级五  
             
             IF l_oocq009='1' THEN  #會員等級一
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei011,prei012 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'             
             END IF
             
             IF l_oocq009='2' THEN  #會員等級二
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei013,prei014 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'               
             END IF 
             
             IF l_oocq009='3' THEN  #會員等級三
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei015,prei016 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1' 
             END IF 
             
             IF l_oocq009='4' THEN  #會員等級四
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei017,prei018 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'                
             END IF    
             
             IF l_oocq009='5' THEN  #會員等級四
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei019,prei020 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'              
             END IF 
          
          END IF

          LET l_rtic.rtic012 = l_rtic.rtic010/l_rtic.rtic011*100
          LET l_rtic.rtic013 = (l_rtic.rtic011-l_rtic.rtic010)/l_rtic.rtic011*l_rtib.rtib008 * l_rtib.rtib012
          IF cl_null(l_rtic.rtic012) THEN 
              LET l_rtic.rtic012 = 0
          END IF 
          LET l_rtic.rtic012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic012,'2')    #依幣別取位
          #INSERT INTO rtic_t VALUES(l_rtic.*)   #160215-00002#7 160516 by sakura mark
          #160215-00002#7 160516 by sakura add(S)
          INSERT INTO rtic_t (rticent ,rticsite,rticunit,rticdocno,rticseq,
                              rticseq1,rtic001 ,rtic002 ,rtic003  ,rtic004,
                              rtic005 ,rtic006 ,rtic007 ,rtic008  ,rtic009,
                              rtic010 ,rtic011 ,rtic012 ,rtic013  ,rtic014,
                              rtic015 ,rtic016 ,rtic017 ,rtic018  ,rtic019,
                              rtic020 ,rtic021 ,rtic022 ,rtic023  ,rtic024,
                              rtic025 ,rtic026 ,rtic027 ,rtic028  ,rtic029)
          VALUES(l_rtic.rticent ,l_rtic.rticsite,l_rtic.rticunit,l_rtic.rticdocno,l_rtic.rticseq,
                 l_rtic.rticseq1,l_rtic.rtic001 ,l_rtic.rtic002 ,l_rtic.rtic003  ,l_rtic.rtic004,
                 l_rtic.rtic005 ,l_rtic.rtic006 ,l_rtic.rtic007 ,l_rtic.rtic008  ,l_rtic.rtic009,
                 l_rtic.rtic010 ,l_rtic.rtic011 ,l_rtic.rtic012 ,l_rtic.rtic013  ,l_rtic.rtic014,
                 l_rtic.rtic015 ,l_rtic.rtic016 ,l_rtic.rtic017 ,l_rtic.rtic018  ,l_rtic.rtic019,
                 l_rtic.rtic020 ,l_rtic.rtic021 ,l_rtic.rtic022 ,l_rtic.rtic023  ,l_rtic.rtic024,
                 l_rtic.rtic025 ,l_rtic.rtic026 ,l_rtic.rtic027 ,l_rtic.rtic028  ,l_rtic.rtic029)
          #160215-00002#7 160516 by sakura add(E) 
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "rtic_t"
          LET g_errparam.popup = FALSE
          CALL cl_err()
       
             LET r_success = FALSE
             RETURN r_success
          END IF
       END FOREACH      
    END IF   
    #150720-00022#3---add--20151207---by huangrh----begin----
    #add by yangxf 20151221 ---start---
    #删除不存在商品明细中的税别明细
    DELETE FROM xrcd_t
     WHERE xrcdseq2 = 0
       AND xrcddocno = g_rtia_m.rtiadocno
       AND xrcdent = g_enterprise
       AND NOT EXISTS(SELECT 1 FROM rtib_t
                       WHERE rtibent = g_enterprise 
                         AND rtibdocno = xrcddocno
                         AND xrcdseq = rtibseq
                         AND xrcdseq2 = 0)
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = "DELETE xrcd_t"
       LET g_errparam.popup = FALSE
       CALL cl_err()
       LET r_success = FALSE
       RETURN r_success
    END IF
    #add by yangxf 20151221---end----
    RETURN r_success
    
END FUNCTION

################################################################################
# Descriptions...: 检查是否存在储值商品编号
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea008_chk()
   DEFINE l_mman054   LIKE mman_t.mman054
   DEFINE l_oodb011   LIKE oodb_t.oodb011
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_rtdx014   LIKE rtdx_t.rtdx014
   
   LET g_errno = ''
   IF cl_null(g_mmea_d[l_ac].mmea003) THEN 
      RETURN 
   END IF 
   SELECT mman054 INTO l_mman054
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = g_mmea_d[l_ac].mmea003
   IF cl_null(l_mman054) THEN 
      LET g_errno = 'amm-00345'
      RETURN 
   END IF
   
   CALL ammt405_rtib_chk(l_mman054) RETURNING g_errno
   IF NOT cl_null(g_errno) THEN 
      RETURN 
   END IF 
END FUNCTION
#此段落由子樣板a06產生
PRIVATE FUNCTION ammt405_isaf_t(ps_type)
 

   DEFINE li_cnt    LIKE type_t.num10
   DEFINE ps_type   STRING  
   DEFINE ls_sql    STRING  
#
#   IF ps_type = "s" THEN 
#            LET ls_sql = 'SELECT isaf009,isaf010,isaf044,isafcomp,isaf202,isaf203,isaf204,isaf201,isaf207 FROM isaf_t WHERE isafent= ? AND isafcomp=? AND isafdocno=? ' 
#      DECLARE isaf_t_cl CURSOR FROM ls_sql 
#      OPEN isaf_t_cl USING g_enterprise,g_rtia_m.rtiadocno
#      FETCH isaf_t_cl INTO g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044,g_rtia_m.isafcomp,g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207 
#
#      IF SQLCA.sqlcode THEN
#         LET g_rtia_m.isaf009 = NULL 
#         LET g_rtia_m.isaf010 = NULL 
#         LET g_rtia_m.isaf044 = NULL 
#         LET g_rtia_m.isafcomp = NULL 
#         LET g_rtia_m.isaf202 = NULL 
#         LET g_rtia_m.isaf203 = NULL 
#         LET g_rtia_m.isaf204 = NULL 
#         LET g_rtia_m.isaf201 = NULL 
#         LET g_rtia_m.isaf207  = NULL 
#
#      END IF 
#      RETURN 
#   END IF 
#
#      SELECT COUNT(*) INTO li_cnt FROM isaf_t WHERE isafent = g_enterprise AND isafcomp = g_rtiadocno_t AND isafdocno = g__t
#   
#   IF li_cnt = 0 AND ps_type = "u" THEN 
#            INSERT INTO isaf_t 
#      (isafent,isafcomp,isafdocno,isaf009,isaf010,isaf044,isafcomp,isaf202,isaf203,isaf204,isaf201,isaf207 )
#      VALUES (g_enterprise,g_rtia_m.rtiadocno,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044,g_rtia_m.isafcomp,g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207 )
#   END IF 

#   IF li_cnt > 0 AND ps_type = "u" THEN 
#      UPDATE isaf_t SET (isafcomp,isafdocno,isaf009,isaf010,isaf044,isafcomp,isaf202,isaf203,isaf204,isaf201,isaf207 ) = 
#      (g_rtia_m.rtiadocno,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044,g_rtia_m.isafcomp,g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207 ) 
#      WHERE isafent = g_enterprise AND isafcomp = g_rtiadocno_t AND isafdocno = g__t
#
#   END IF 

#   IF li_cnt > 0 AND ps_type = "d" THEN 
#            DELETE FROM isaf_t
#      WHERE isafent = g_enterprise AND isafcomp = g_rtiadocno_t AND isafdocno = g__t
#   END IF 

#   IF SQLCA.sqlcode THEN
#      CALL cl_err("",SQLCA.sqlcode,0)
#   END IF 



END FUNCTION

################################################################################
# Descriptions...: 审核检查
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/19 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea001_conf_chk()
   DEFINE l_mmea001  LIKE mmea_t.mmea001
   DEFINE l_mmea002  LIKE mmea_t.mmea002
   DEFINE l_mmea003  LIKE mmea_t.mmea003
   DEFINE l_gcbi001  LIKE gcbi_t.gcbi001
   DEFINE l_gcbi002  LIKE gcbi_t.gcbi002
   DEFINE l_gcbi003  LIKE gcbi_t.gcbi003
   DEFINE l_mmeb001  LIKE mmeb_t.mmeb001
   DEFINE l_mmeb008  LIKE mmeb_t.mmeb008
   DEFINE l_mmec001  LIKE mmec_t.mmec001
   DEFINE l_mmec008  LIKE mmec_t.mmec008
   DEFINE l_mmed001  LIKE mmed_t.mmed001
   DEFINE l_str      STRING
   DEFINE l_n        LIKE type_t.num5
   DEFINE l_n1        LIKE type_t.num5
   DEFINE l_mman005   LIKE mmaq_t.mmaq005
   DEFINE l_mman006   LIKE mmaq_t.mmaq006
   DEFINE l_gcaf006   LIKE gcaf_t.gcaf006
   DEFINE l_gcaf007   LIKE gcaf_t.gcaf007
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq032   LIKE mmaq_t.mmaq032
   DEFINE l_mmeb007   LIKE mmeb_t.mmeb007
   DEFINE l_mmec007   LIKE mmec_t.mmec007
   DEFINE l_mmed009   LIKE mmed_t.mmed009
   
   LET g_success = 'Y'
   CALL cl_showmsg_init()
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      DECLARE mmea_curs CURSOR FOR SELECT mmea001,mmea002,mmea003 FROM mmea_t 
                                    WHERE mmeaent = g_enterprise
                                      AND mmeadocno = g_rtia_m.rtiadocno
      FOREACH mmea_curs INTO l_mmea001,l_mmea002,l_mmea003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach mmea_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmea_t,rtia_t
          WHERE mmeaent = rtiaent
            AND mmeadocno = rtiadocno
            AND mmeaent = g_enterprise   ##160720-00001#1 by 08172
            AND rtiastus <> 'X'
            AND mmeadocno <> g_rtia_m.rtiadocno
            AND mmea003 = l_mmea003
            AND (mmea001 BETWEEN l_mmea001 AND l_mmea002
             OR  mmea002 BETWEEN l_mmea001 AND l_mmea002
             OR  l_mmea001 BETWEEN mmea001 AND mmea002)
          IF l_n > 0 THEN 
             LET l_str = l_mmea001,"~",l_mmea002
             CALL cl_errmsg('mmea001,mmea002',l_str,'','art-00354',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #卡号总长度，固定码长度
          SELECT mman005,mman006
            INTO l_mman005,l_mman006
            FROM mman_t
           WHERE mman001 = l_mmea003
             AND mmanent = g_enterprise    #160720-00001#1  by 08172
          LET l_n1 = 0
          LET l_n1 = l_mmea002[l_mman006+1,l_mman005] - l_mmea001[l_mman006+1,l_mman005] + 1   
          #检查开始和结束卡号之前是否有没有发行的卡号
          LET l_n = 0
          SELECT COUNT(*) INTO l_n
            FROM mmaq_t
           WHERE mmaqent = g_enterprise
             AND mmaq001 BETWEEN l_mmea001 AND l_mmea002
             AND mmaq002 = l_mmea003
             AND mmaq006 = '1'
          IF l_n <> l_n1 THEN 
             LET l_str = l_mmea001,"~",l_mmea002
             CALL cl_errmsg('mmea001,mmea002',l_str,'','amm-00328',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF
      END FOREACH 
   END IF 
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      IF NOT cl_null(g_rtia_m.rtia001) THEN 
         #检查单头会员卡号状态是否为3.开卡
         SELECT mmaq006 INTO l_mmaq006
           FROM mmaq_t 
          WHERE mmaqent = g_enterprise
            AND mmaq001 =  g_rtia_m.rtia001     
         IF l_mmaq006 <> '3' THEN 
            CALL cl_errmsg('rtia001',g_rtia_m.rtia001,'','art-00222',1)
            LET g_success = 'N'
            CALL cl_err_showmsg()
            RETURN 
         END IF 
      END IF 
      DECLARE gcbi_curs CURSOR FOR SELECT gcbi001,gcbi002,gcbi003 FROM gcbi_t 
                                    WHERE gcbient = g_enterprise
                                      AND gcbidocno = g_rtia_m.rtiadocno
      FOREACH gcbi_curs INTO l_gcbi001,l_gcbi002,l_gcbi003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach gcbi_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM gcbi_t,rtia_t
          WHERE gcbient = rtiaent
            AND gcbidocno = rtiadocno
            AND gcbient = g_enterprise     #160720-00001#1  by 08172
            AND rtiastus <> 'X'
            AND gcbidocno <> g_rtia_m.rtiadocno
            AND gcbi003 = l_gcib003
            AND rtia000 = 'agct405'
            AND (gcbi001 BETWEEN l_gcbi001 AND l_gcbi002
             OR  gcbi002 BETWEEN l_gcbi001 AND l_gcbi002
             OR  l_gcbi001 BETWEEN gcbi001 AND gcbi002)
          IF l_n > 0 THEN 
             LET l_str = l_gcbi001,"~",l_gcbi002
             CALL cl_errmsg('gcbi001,gcbi002',l_str,'','art-00375',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #券总位数，固定字符位数
          SELECT gcaf006,gcaf007 
            INTO l_gcaf006,l_gcaf007  
            FROM gcaf_t
           WHERE gcafent = g_enterprise
             AND gcaf001 = l_gcbi003
          #判断开始券号和结束券号之间的券是否有没有发行的，没有gcao_t的资料
          LET l_n = 0
          LET l_n1 = 0
          LET l_n1 = l_gcbi002[l_gcaf007+1,l_gcaf006] - l_gcbi001[l_gcaf007+1,l_gcaf006] + 1
          SELECT COUNT(*) INTO l_n
            FROM gcao_t
           WHERE gcaoent = g_enterprise
             AND gcao002 = l_gcbi003
             AND gcao001 BETWEEN l_gcbi001 AND l_gcbi002
             AND gcao005 IN('1','5')
          IF l_n <> l_n1 THEN
             LET l_str = l_gcbi001,"~",l_gcbi002
             CALL cl_errmsg('gcbi001,gcbi002',l_str,'','agc-00102',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF
      END FOREACH 
   END IF 
   #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      IF NOT cl_null(g_rtia_m.rtia001) THEN 
         #检查单头会员卡号状态是否为4.售卡
         SELECT mmaq006 INTO l_mmaq006
           FROM mmaq_t 
          WHERE mmaqent = g_enterprise
            AND mmaq001 =  g_rtia_m.rtia001     
         IF l_mmaq006 <> '3' THEN 
            CALL cl_errmsg('rtia001',g_rtia_m.rtia001,'','art-00222',1)
            LET g_success = 'N'
            CALL cl_err_showmsg()
            RETURN 
         END IF 
      END IF 
      DECLARE gcbi_curs2 CURSOR FOR SELECT gcbi001,gcbi002,gcbi003 FROM gcbi_t 
                                    WHERE gcbient = g_enterprise
                                      AND gcbidocno = g_rtia_m.rtiadocno
      FOREACH gcbi_curs2 INTO l_gcbi001,l_gcbi002,l_gcbi003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach gcbi_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM gcbi_t,rtia_t
          WHERE gcbient = rtiaent
            AND gcbidocno = rtiadocno
            AND gcbient = g_enterprise            #160720-00001#1 by 08172
            AND rtiastus <> 'X'
            AND gcbidocno <> g_rtia_m.rtiadocno
            AND gcbi003 = l_gcib003
            AND rtia000 = 'agct406'
            AND (gcbi001 BETWEEN l_gcbi001 AND l_gcbi002
             OR  gcbi002 BETWEEN l_gcbi001 AND l_gcbi002
             OR  l_gcbi001 BETWEEN gcbi001 AND gcbi002)
          IF l_n > 0 THEN 
             LET l_str = l_gcbi001,"~",l_gcbi002
             CALL cl_errmsg('gcbi001,gcbi002',l_str,'','art-00622',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #券总位数，固定字符位数
          SELECT gcaf006,gcaf007 
            INTO l_gcaf006,l_gcaf007  
            FROM gcaf_t
           WHERE gcafent = g_enterprise
             AND gcaf001 = l_gcbi003
          #判断开始券号和结束券号之间的券是否有没有发行的，没有gcao_t的资料
          LET l_n = 0
          LET l_n1 = 0
          LET l_n1 = l_gcbi002[l_gcaf007+1,l_gcaf006] - l_gcbi001[l_gcaf007+1,l_gcaf006] + 1
          SELECT COUNT(*) INTO l_n
            FROM gcao_t
           WHERE gcaoent = g_enterprise
             AND gcao002 = l_gcbi003
             AND gcao001 BETWEEN l_gcbi001 AND l_gcbi002
             AND gcao005 = '4'
          IF l_n <> l_n1 THEN
             LET l_str = l_gcbi001,"~",l_gcbi002
             CALL cl_errmsg('gcbi001,gcbi002',l_str,'','art-00623',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF
      END FOREACH 
   END IF 
   #IF g_prog = 'ammt406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt406' THEN   #160705-00042#11 160714 by sakura add
      DECLARE mmeb_curs CURSOR FOR SELECT mmeb001,mmeb008,mmeb007 FROM mmeb_t 
                                    WHERE mmebent = g_enterprise
                                      AND mmebdocno = g_rtia_m.rtiadocno
      FOREACH mmeb_curs INTO l_mmeb001,l_mmeb008,l_mmeb007
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach mmeb_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmeb_t,rtia_t
          WHERE mmebent = rtiaent
            AND mmebdocno = rtiadocno
            AND mmebent = g_enterprise     #160720-00001#1 by 08172
            AND rtiastus NOT IN('X','S')
            AND mmebdocno <> g_rtia_m.rtiadocno
            AND mmeb001 = l_mmeb001
          IF l_n > 0 THEN 
             LET l_str = l_mmeb001
             CALL cl_errmsg('mmeb001',l_str,'','amm-00403',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmeb_t,rtia_t
          WHERE mmebent = rtiaent
            AND mmebdocno = rtiadocno
            AND mmebent = g_enterprise   #160720-00001#1 by 08172
            AND rtiastus NOT IN('X','S')
            AND mmebdocno <> g_rtia_m.rtiadocno
            AND mmeb008 = l_mmeb008
          IF l_n > 0 THEN 
             LET l_str = l_mmeb001
             CALL cl_errmsg('mmeb008',l_str,'','amm-00403',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          LET l_n = 0
          #检查原卡是否为挂失
          SELECT mmaq006,mmaq032 INTO l_mmaq006,l_mmaq032
            FROM mmaq_t
           WHERE mmaq001 = l_mmeb001
             AND mmaqent = g_enterprise   #160720-00001#1 by 08172
          IF l_mmaq006 <> '5' THEN 
             LET l_str = l_mmeb001
             CALL cl_errmsg('mmeb001',l_str,'','amm-00437',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #检查新卡是否为发行
          SELECT mmaq006 INTO l_mmaq006
            FROM mmaq_t
           WHERE mmaq001 = l_mmeb008
             AND mmaqent = g_enterprise   #160720-00001#1 by 08172
          IF l_mmaq006 <> '1' THEN 
             LET l_str = l_mmeb008
             CALL cl_errmsg('mmeb008',l_str,'','amm-00438',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #检查原卡储值成本是否与单身一致
          IF cl_null(l_mmaq032) THEN 
             LET l_mmaq032 = 0
          END IF 
          IF cl_null(l_mmeb007) THEN 
             LET l_mmeb007 = 0
          END IF 
          IF l_mmeb007 <> l_mmaq032 THEN 
             CALL cl_errmsg('mmeb001',l_mmeb001,'','amm-00442',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
      END FOREACH 
   END IF 
   #IF g_prog = 'ammt407' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt407' THEN   #160705-00042#11 160714 by sakura add
      DECLARE mmec_curs CURSOR FOR SELECT mmec001,mmec008,mmec007 FROM mmec_t 
                                    WHERE mmecent = g_enterprise
                                      AND mmecdocno = g_rtia_m.rtiadocno
      FOREACH mmec_curs INTO l_mmec001,l_mmec008,l_mmec007
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach mmec_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmec_t,rtia_t
          WHERE mmecent = rtiaent
            AND mmecdocno = rtiadocno
            AND mmecent = g_enterprise     #160720-00001#1 by 08172
            AND rtiastus NOT IN('X','S')
            AND mmecdocno <> g_rtia_m.rtiadocno
            AND mmec001 = l_mmec001
          IF l_n > 0 THEN 
             LET l_str = l_mmec001
             CALL cl_errmsg('mmec001',l_str,'','amm-00404',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmec_t,rtia_t
          WHERE mmecent = rtiaent
            AND mmecdocno = rtiadocno
            AND mmecent = g_enterprise      #160720-00001#1 by 08172
            AND rtiastus NOT IN('X','S')
            AND mmecdocno <> g_rtia_m.rtiadocno
            AND mmec008 = l_mmec008
          IF l_n > 0 THEN 
             LET l_str = l_mmec001
             CALL cl_errmsg('mmec008',l_str,'','amm-00404',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          LET l_n = 0
          #检查原卡是否为发卡或开卡
          SELECT COUNT(*) INTO l_n
            FROM mmaq_t
           WHERE mmaq001 = l_mmec001
             AND mmaqent = g_enterprise      #160720-00001#1 by 08172
             AND mmaq006 NOT IN ('2','3')
          IF l_n > 0 THEN 
             LET l_str = l_mmec001
             CALL cl_errmsg('mmec001',l_str,'','amm-00439',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #检查新卡是否为发行
          LET l_n = 0
          SELECT COUNT(*) INTO l_n
            FROM mmaq_t
           WHERE mmaq001 = l_mmec008
             AND mmaqent = g_enterprise       #160720-00001#1 by 08172
             AND mmaq006 <> '1'
          IF l_n > 0 THEN 
             LET l_str = l_mmec008
             CALL cl_errmsg('mmec008',l_str,'','amm-00438',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
          #抓取原卡储值成本
          SELECT mmaq032 INTO l_mmaq032
            FROM mmaq_t
           WHERE mmaq001 = l_mmec001
             AND mmaqent = g_enterprise      #160720-00001#1 by 08172
          #检查原卡储值成本是否与单身一致
          IF cl_null(l_mmaq032) THEN 
             LET l_mmaq032 = 0
          END IF 
          IF cl_null(l_mmec007) THEN 
             LET l_mmec007 = 0
          END IF 
          IF l_mmec007 <> l_mmaq032 THEN 
             CALL cl_errmsg('mmec001',l_mmec001,'','amm-00442',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
      END FOREACH 
   END IF    
   #IF g_prog = 'ammt425' OR g_prog = 'ammt429' THEN              #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' OR g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      DECLARE mmed_curs CURSOR FOR SELECT mmed001 FROM mmed_t 
                                    WHERE mmedent = g_enterprise
                                      AND mmeddocno = g_rtia_m.rtiadocno
      FOREACH mmed_curs INTO l_mmed001
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach mmed_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         #检查卡号状态是否为开卡
         SELECT mmaq006 INTO l_mmaq006
           FROM mmaq_t
          WHERE mmaqent = g_enterprise
            AND mmaq001 = l_mmed001
         #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark    
         IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
            IF l_mmaq006 <> '3' AND l_mmaq006 <> '2' THEN 
                LET l_str = l_mmed001
                CALL cl_errmsg('mmed001',l_str,'','amm-00439',1)
                LET g_success = 'N'
                CONTINUE FOREACH 
            END IF 
         ELSE
            IF l_mmaq006 <> '3' THEN 
                LET l_str = l_mmed001
                CALL cl_errmsg('mmed001',l_str,'','amm-00428',1)
                LET g_success = 'N'
                CONTINUE FOREACH 
            END IF 
         END IF 
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmed_t,rtia_t
          WHERE mmedent = rtiaent
            AND mmeddocno = rtiadocno
            AND mmedent = g_enterprise        #160720-00001#1 by 08172
            AND rtia000 = g_prog
            AND rtiastus NOT IN('X','S')
            AND mmeddocno <> g_rtia_m.rtiadocno
            AND mmed001 = l_mmed001
          IF l_n > 0 THEN 
             LET l_str = l_mmed001
             CALL cl_errmsg('mmed001',l_str,'','amm-00405',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
      END FOREACH 
   END IF 
   #IF g_prog = 'ammt426' THEN        #160705-00042#11 160714 by sakura mark 
   IF g_prog MATCHES 'ammt426' THEN   #160705-00042#11 160714 by sakura add
      DECLARE mmed_curs1 CURSOR FOR SELECT mmed001,mmed009 FROM mmed_t 
                                    WHERE mmedent = g_enterprise
                                      AND mmeddocno = g_rtia_m.rtiadocno
      FOREACH mmed_curs1 INTO l_mmed001,l_mmed009
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'foreach mmed_curs:'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmed_t,rtia_t
          WHERE mmedent = rtiaent
            AND mmeddocno = rtiadocno
            AND mmedent = g_enterprise
            AND rtiastus NOT IN('X','S')
            AND mmeddocno <> g_rtia_m.rtiadocno
            AND rtia000 = 'ammt426'
            AND mmed001 = l_mmed001
          IF l_n > 0 THEN 
             LET l_str = l_mmed001
             CALL cl_errmsg('mmed001',l_str,'','amm-00406',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
          END IF 
         #检查卡号状态是否为开卡
         SELECT mmaq006,mmaq032 INTO l_mmaq006,l_mmaq032
           FROM mmaq_t
          WHERE mmaqent = g_enterprise
            AND mmaq001 = l_mmed001
         IF l_mmaq006 <> '3' THEN 
             LET l_str = l_mmed001
             CALL cl_errmsg('mmed001',l_str,'','amm-00428',1)
             LET g_success = 'N'
             CONTINUE FOREACH 
         END IF 
         #检查原卡储值成本是否与单身一致
         IF cl_null(l_mmaq032) THEN 
            LET l_mmaq032 = 0
         END IF 
         IF cl_null(l_mmed009) THEN
            LET l_mmed009 = 0
         END IF 
         IF l_mmed009 <> l_mmaq032 THEN 
            CALL cl_errmsg('mmec001',l_mmec001,'','amm-00443',1)
            LET g_success = 'N'
            CONTINUE FOREACH 
         END IF 

      END FOREACH 
   END IF    
   CALL cl_err_showmsg()
END FUNCTION

################################################################################
# Descriptions...: 库区检查
# Memo...........:
# Usage..........: 无
# Input parameter: p_inag     库区编号
# Return code....: 无 
# Date & Author..: 2014/04/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmea013_chk(p_inag004)
   DEFINE  p_inag004   LIKE inag_t.inag004  
   DEFINE  l_inaastus  LIKE inaa_t.inaastus
   
   LET g_errno = ''
   SELECT inaastus INTO l_inaastus
     FROM inaa_t
    WHERE inaaent = g_enterprise
      AND inaasite = g_rtia_m.rtiasite
      AND inaa001 = p_inag004
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00276'
      WHEN l_inaastus <> 'Y'   LET g_errno = 'amm-00412'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   
END FUNCTION

################################################################################
# Descriptions...: 理由码检查
# Memo...........:
# Usage..........: CALL ammt405_oocq002_chk(p_oocq002)
# Input parameter: p_oocq002      理由码
# Date & Author..: 2014/04/20 By yangxf
# Modify.........: 
################################################################################
PRIVATE FUNCTION ammt405_oocq002_chk(p_oocq002)
   DEFINE p_oocq002   LIKE oocq_t.oocq002
   DEFINE l_oocqstus  LIKE oocq_t.oocqstus
   
   LET g_errno = ''
   SELECT oocqstus INTO l_oocqstus
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '2055'
      AND oocq002 = p_oocq002
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00027'
      WHEN l_oocqstus <> 'Y'   LET g_errno = 'amm-00028'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   
END FUNCTION

################################################################################
# Descriptions...: 原卡卡号检查
# Memo...........:
# Usage..........: CALL ammt405_mmec001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmec001_chk()
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_mmaq003   LIKE mmaq_t.mmaq003
   DEFINE l_mmaq005   LIKE mmaq_t.mmaq005
   DEFINE l_mmaq018   LIKE mmaq_t.mmaq018
   DEFINE l_mmaq009   LIKE mmaq_t.mmaq009
   DEFINE l_mmaq032   LIKE mmaq_t.mmaq032
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mmanstus  LIKE mman_t.mmanstus
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman054   LIKE mman_t.mman054
   DEFINE l_mman066   LIKE mman_t.mman066
   DEFINE l_mman066_1 LIKE mman_t.mman066
   
   LET g_errno = ''
   #检查卡号属否存在且为1.发行状态
   SELECT mmaq006,mmaq002,mmaq003,mmaq005,mmaq018,mmaq009,mmaq032,mmanstus,mman066
     INTO l_mmaq006,l_mmaq002,l_mmaq003,l_mmaq005,l_mmaq018,l_mmaq009,l_mmaq032,l_mmanstus,l_mman066
     FROM mmaq_t,mman_t
    WHERE mmaqent = g_enterprise
      AND mmanent = mmaqent
      AND mman001 = mmaq002
      AND mmaq001 = g_mmea2_d[l_ac].mmec001
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
      WHEN (l_mmaq006 <> '2' AND l_mmaq006 <> '3')
                               LET g_errno = 'amm-00253'
      WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      CALL ammt405_card(g_mmea2_d[l_ac].mmec001) RETURNING l_n
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
         RETURN 
      END IF 
   ELSE
      RETURN 
   END IF 
   #20150705 mark by dongsz ----移除卡种不一致控管
#   IF cl_null(g_errno) AND NOT cl_null(g_mmea2_d[l_ac].mmec008) THEN 
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM mmaq_t
#       WHERE mmaqent = g_enterprise
#         AND mmaq001 = g_mmea2_d[l_ac].mmec008
#         AND mmaq002 = l_mmaq002
#      IF l_n = 0 THEN 
#         LET g_errno = 'amm-00400'
#         RETURN 
#      END IF 
#   END IF 
   #20150705 mark by dongsz--e
   #add by yangxf ---start--- 卡类型不一致不可以换卡或补卡
   IF cl_null(g_errno) AND NOT cl_null(g_mmea2_d[l_ac].mmec008) THEN 
      SELECT mman066 INTO l_mman066_1
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002
         AND mmaq001 = g_mmea2_d[l_ac].mmec008
      IF l_mman066_1 <> l_mman066 THEN 
         LET g_errno = 'amm-00475'
         RETURN 
      END IF 
   END IF 
   #add by yangxf ----end---- 
   IF (g_mmea2_d[l_ac].mmec001 != g_mmea2_d_t.mmec001 AND NOT cl_null(g_mmea2_d_t.mmec001))
   OR cl_null(g_mmea2_d_t.mmec001) THEN 
      #检查原卡卡号是否存在补卡维护作业中
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmec_t,rtia_t
       WHERE mmecent = g_enterprise
         AND mmec001 = g_mmea2_d[l_ac].mmec001
         AND mmecent = rtiaent
         AND mmecdocno = rtiadocno
         AND rtiastus <> 'X'
      IF l_n > 0 THEN 
        LET g_errno = 'amm-00396'
        RETURN 
      END IF 
   END IF
   
   SELECT mman053 INTO l_mman053
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = l_mmaq002

   CALL ammt405_rtib_chk(l_mman053) RETURNING g_errno
   IF NOT cl_null(g_errno) THEN 
      RETURN 
   END IF 
   
   IF cl_null(g_errno) THEN
      LET g_mmea2_d[l_ac].mmec015 = l_mmaq006
      LET g_mmea2_d[l_ac].mmec002 = l_mmaq002
      LET g_mmea2_d[l_ac].mmec003 = l_mmaq003
      LET g_mmea2_d[l_ac].mmec004 = l_mmaq005
      LET g_mmea2_d[l_ac].mmec005 = l_mmaq018
      LET g_mmea2_d[l_ac].mmec006 = l_mmaq009
      LET g_mmea2_d[l_ac].mmec007 = l_mmaq032
      IF cl_null(g_mmea2_d[l_ac].mmec006) THEN 
         LET g_mmea2_d[l_ac].mmec006 = 0
      END IF 
      IF cl_null(g_mmea2_d[l_ac].mmec007) THEN 
         LET g_mmea2_d[l_ac].mmec007 = 0
      END IF 
      LET g_mmea2_d[l_ac].mmec006 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea2_d[l_ac].mmec006,'2')
      LET g_mmea2_d[l_ac].mmec007 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea2_d[l_ac].mmec007,'2')
      IF cl_null(g_mmea2_d[l_ac].mmec005) THEN 
         LET g_mmea2_d[l_ac].mmec005 = 0
      END IF 
      IF cl_null(g_mmea2_d[l_ac].mmec006) THEN 
         LET g_mmea2_d[l_ac].mmec006 = 0
      END IF 
      IF cl_null(g_mmea2_d[l_ac].mmec007) THEN 
         LET g_mmea2_d[l_ac].mmec007 = 0
      END IF
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec002
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea2_d[l_ac].mmec002_desc = '', g_rtn_fields[1] , ''

   END IF
END FUNCTION

################################################################################
# Descriptions...: 新卡卡号检查
# Memo...........:
# Usage..........: CALL ammt405_mmec008_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmec008_chk()
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_mmaq007   LIKE mmaq_t.mmaq007
   DEFINE l_mmaq008   LIKE mmaq_t.mmaq008
   DEFINE l_mman013   LIKE mman_t.mman013
   DEFINE l_mmanstus  LIKE mman_t.mmanstus
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman054   LIKE mman_t.mman054
   DEFINE l_mman066   LIKE mman_t.mman066
   DEFINE l_mman066_1 LIKE mman_t.mman066
   
   LET g_errno = ''
   #检查卡号属否存在且为1.发行状态
   SELECT mmaq006,mmaq002,mmaq007,mmaq008,mman013,mmanstus,mman066
     INTO l_mmaq006,l_mmaq002,l_mmaq007,l_mmaq008,l_mman013,l_mmanstus,l_mman066
     FROM mmaq_t,mman_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 = g_mmea2_d[l_ac].mmec008
      AND mmaqent = mmanent 
      AND mmaq002 = mman001
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
      WHEN l_mmaq006 <> '1'    LET g_errno = 'amm-00324'
      WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      CALL ammt405_card(g_mmea2_d[l_ac].mmec008) RETURNING l_n
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
      END IF 
   ELSE
      RETURN 
   END IF 
#mark by yangxf ----移除卡种不一致控管
#   IF cl_null(g_errno) AND NOT cl_null(g_mmea2_d[l_ac].mmec001) THEN 
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM mmaq_t
#       WHERE mmaqent = g_enterprise
#         AND mmaq001 = g_mmea2_d[l_ac].mmec001
#         AND mmaq002 = l_mmaq002
#      IF l_n = 0 THEN 
#         LET g_errno = 'amm-00400'
#         RETURN 
#      END IF 
#   END IF 
#mark by yangxf ---end----
   #add by yangxf ---start--- 卡类型不一致不可以换卡或补卡
   IF cl_null(g_errno) AND NOT cl_null(g_mmea2_d[l_ac].mmec001) THEN 
      SELECT mman066 INTO l_mman066_1
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002
         AND mmaq001 = g_mmea2_d[l_ac].mmec001
      IF l_mman066_1 <> l_mman066 THEN 
         LET g_errno = 'amm-00475'
         RETURN 
      END IF 
   END IF 
   #add by yangxf ----end---- 
   
   #检查新卡卡号是否存在补卡维护作业中
   IF (g_mmea2_d[l_ac].mmec008 != g_mmea2_d_t.mmec008 AND NOT cl_null(g_mmea2_d_t.mmec008))
   OR cl_null(g_mmea2_d_t.mmec008) THEN 
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmec_t,rtia_t
       WHERE mmecent = g_enterprise
         AND mmec008 = g_mmea2_d[l_ac].mmec008
         AND mmecent = rtiaent
         AND mmecdocno = rtiadocno
         AND rtiastus <> 'X'
      IF l_n > 0 THEN 
        LET g_errno = 'amm-00397' 
        RETURN 
      END IF
   END IF 

   SELECT mman053 INTO l_mman053
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = l_mmaq002

   CALL ammt405_rtib_chk(l_mman053) RETURNING g_errno
   IF NOT cl_null(g_errno) THEN 
      RETURN 
   END IF 
   
   IF cl_null(g_errno) THEN 
      LET g_mmea2_d[l_ac].mmec009 = l_mmaq002
      LET g_mmea2_d[l_ac].mmec010 = l_mmaq007
      LET g_mmea2_d[l_ac].mmec011 = l_mmaq008
      LET g_mmea2_d[l_ac].mmec012 = l_mman013
      IF cl_null(g_mmea2_d[l_ac].mmec011) THEN 
         LET g_mmea2_d[l_ac].mmec011 = 0
      END IF 
      IF cl_null(g_mmea2_d[l_ac].mmec012) THEN 
         LET g_mmea2_d[l_ac].mmec012 = 0
      END IF 
      LET g_mmea2_d[l_ac].mmec011 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea2_d[l_ac].mmec011,'1')
      LET g_mmea2_d[l_ac].mmec012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea2_d[l_ac].mmec012,'1')
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec009
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea2_d[l_ac].mmec009_desc = '', g_rtn_fields[1] , ''
      #add by yangxf ---start----
      IF cl_null(g_mmea2_d[l_ac].mmec013) THEN 
         SELECT rtdx044 INTO g_mmea2_d[l_ac].mmec013
           FROM rtdx_t
          WHERE rtdxent = g_enterprise
            AND rtdx001 = l_mman053
            AND rtdxsite = g_rtia_m.rtiasite
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea2_d[l_ac].mmec013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea2_d[l_ac].inaa001_desc = '', g_rtn_fields[1] , ''
      END IF 
      #add by yangxf ----end-----
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 原卡号检查
# Memo...........:
# Usage..........: CALL ammt405_mmeb001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/22 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmeb001_chk()
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_mmaq003   LIKE mmaq_t.mmaq003
   DEFINE l_mmaq005   LIKE mmaq_t.mmaq005
   DEFINE l_mmaq018   LIKE mmaq_t.mmaq018
   DEFINE l_mmaq009   LIKE mmaq_t.mmaq009
   DEFINE l_mmaq032   LIKE mmaq_t.mmaq032
   DEFINE l_mmanstus  LIKE mman_t.mmanstus
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman066   LIKE mman_t.mman066
   DEFINE l_mman066_1 LIKE mman_t.mman066
   
   LET g_errno = ''
   #检查卡号属否存在且为1.发行状态
   SELECT mmaq006,mmaq002,mmaq003,mmaq005,mmaq018,mmaq009,mmaq032,mmanstus,mman066
     INTO l_mmaq006,l_mmaq002,l_mmaq003,l_mmaq005,l_mmaq018,l_mmaq009,l_mmaq032,l_mmanstus,l_mman066
     FROM mmaq_t,mman_t
    WHERE mmaqent = g_enterprise
      AND mmanent = mmaqent
      AND mman001 = mmaq002
      AND mmaq001 = g_mmea3_d[l_ac].mmeb001
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
      WHEN l_mmaq006 <> '5'    LET g_errno = 'art-00355'
      WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      CALL ammt405_card(g_mmea3_d[l_ac].mmeb001) RETURNING l_n
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
         RETURN 
      END IF 
   ELSE
      RETURN 
   END IF 
   #20150705 mark by dongsz ----移除卡种不一致控管
#   IF cl_null(g_errno) AND NOT cl_null(g_mmea3_d[l_ac].mmeb008) THEN 
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM mmaq_t
#       WHERE mmaqent = g_enterprise
#         AND mmaq001 = g_mmea3_d[l_ac].mmeb008
#         AND mmaq002 = l_mmaq002
#      IF l_n = 0 THEN 
#         LET g_errno = 'amm-00400'
#         RETURN 
#      END IF 
#   END IF 
   #20150705 mark by dongsz ----e
   #add by yangxf ---start--- 卡类型不一致不可以换卡或补卡
   IF cl_null(g_errno) AND NOT cl_null(g_mmea3_d[l_ac].mmeb008) THEN 
      SELECT mman066 INTO l_mman066_1
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002
         AND mmaq001 = g_mmea3_d[l_ac].mmeb008
      IF l_mman066_1 <> l_mman066 THEN 
         LET g_errno = 'amm-00475'
         RETURN 
      END IF 
   END IF 
   #add by yangxf ----end---- 
   IF (g_mmea3_d[l_ac].mmeb001 != g_mmea3_d_t.mmeb001 AND NOT cl_null(g_mmea3_d_t.mmeb001))
   OR cl_null(g_mmea3_d_t.mmeb001) THEN 
      #检查原卡卡号是否存在补卡维护作业中
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmeb_t,rtia_t
       WHERE mmebent = g_enterprise
         AND mmeb001 = g_mmea3_d[l_ac].mmeb001
         AND mmebent = rtiaent
         AND mmebdocno = rtiadocno
         AND rtiastus <> 'X'
      IF l_n > 0 THEN 
        LET g_errno = 'amm-00394'
        RETURN 
      END IF 
   END IF

   SELECT mman053 INTO l_mman053
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = l_mmaq002
   CALL ammt405_rtib_chk(l_mman053) RETURNING g_errno
   IF NOT cl_null(g_errno) THEN 
      RETURN 
   END IF 
   
   IF cl_null(g_errno) THEN 
      LET g_mmea3_d[l_ac].mmeb002 = l_mmaq002
      LET g_mmea3_d[l_ac].mmeb003 = l_mmaq003
      LET g_mmea3_d[l_ac].mmeb004 = l_mmaq005
      LET g_mmea3_d[l_ac].mmeb005 = l_mmaq018
      LET g_mmea3_d[l_ac].mmeb006 = l_mmaq009
      LET g_mmea3_d[l_ac].mmeb007 = l_mmaq032
      LET g_mmea3_d[l_ac].mmeb015 = l_mmaq006
      IF cl_null(g_mmea3_d[l_ac].mmeb006) THEN 
         LET g_mmea3_d[l_ac].mmeb006 = 0
      END IF 
      IF cl_null(g_mmea3_d[l_ac].mmeb007) THEN 
         LET g_mmea3_d[l_ac].mmeb007 = 0
      END IF 
      LET g_mmea3_d[l_ac].mmeb006 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea3_d[l_ac].mmeb006,'2')
      LET g_mmea3_d[l_ac].mmeb007 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea3_d[l_ac].mmeb007,'2')
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb002
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea3_d[l_ac].mmeb002_desc = '', g_rtn_fields[1] , ''
   END IF 
   
END FUNCTION

################################################################################
# Descriptions...: 新卡卡号检查
# Memo...........:
# Usage..........: CALL ammt405_mmeb008_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/22 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmeb008_chk()
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002   LIKE mmaq_t.mmaq002
   DEFINE l_mmaq007   LIKE mmaq_t.mmaq007
   DEFINE l_mmaq008   LIKE mmaq_t.mmaq008
   DEFINE l_mman014   LIKE mman_t.mman014
   DEFINE l_mmanstus  LIKE mman_t.mmanstus
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mman053   LIKE mman_t.mman053
   DEFINE l_mman066   LIKE mman_t.mman066
   DEFINE l_mman066_1 LIKE mman_t.mman066
   
   LET g_errno = ''
   #检查卡号属否存在且为1.发行状态
   SELECT mmaq006,mmaq002,mmaq007,mmaq008,mman014,mmanstus,mman066
     INTO l_mmaq006,l_mmaq002,l_mmaq007,l_mmaq008,l_mman014,l_mmanstus,l_mman066
     FROM mmaq_t,mman_t
    WHERE mmaqent = g_enterprise
      AND mmaq001 = g_mmea3_d[l_ac].mmeb008
      AND mmaqent = mmanent 
      AND mmaq002 = mman001
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
      WHEN l_mmaq006 <> '1'    LET g_errno = 'amm-00324'
      WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      CALL ammt405_card(g_mmea3_d[l_ac].mmeb008) RETURNING l_n
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
         RETURN 
      END IF 
   ELSE
      RETURN 
   END IF 
   #20150705 mark by dongsz ----移除卡种不一致控管
#   IF cl_null(g_errno) AND NOT cl_null(g_mmea3_d[l_ac].mmeb001) THEN 
#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM mmaq_t
#       WHERE mmaqent = g_enterprise
#         AND mmaq001 = g_mmea3_d[l_ac].mmeb001
#         AND mmaq002 = l_mmaq002
#      IF l_n = 0 THEN 
#         LET g_errno = 'amm-00400'
#         RETURN 
#      END IF 
#   END IF 
   #20150705 mark by dongsz ----e
   #add by yangxf ---start--- 卡类型不一致不可以换卡或补卡
   IF cl_null(g_errno) AND NOT cl_null(g_mmea3_d[l_ac].mmeb001) THEN 
      SELECT mman066 INTO l_mman066_1
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002
         AND mmaq001 = g_mmea3_d[l_ac].mmeb001
      IF l_mman066_1 <> l_mman066 THEN 
         LET g_errno = 'amm-00475'
         RETURN 
      END IF 
   END IF 
   #add by yangxf ----end---- 
   #检查新卡卡号是否存在补卡维护作业中
   IF (g_mmea3_d[l_ac].mmeb008 != g_mmea3_d_t.mmeb008 AND NOT cl_null(g_mmea3_d_t.mmeb008))
   OR cl_null(g_mmea3_d_t.mmeb008) THEN 
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM mmeb_t,rtia_t
       WHERE mmebent = g_enterprise
         AND mmeb008 = g_mmea3_d[l_ac].mmeb008
         AND mmebent = rtiaent
         AND mmebdocno = rtiadocno
         AND rtiastus <> 'X'
      IF l_n > 0 THEN 
         LET g_errno = 'amm-00395' 
         RETURN 
      END IF
   END IF   
   
   SELECT mman053 INTO l_mman053
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman001 = l_mmaq002

   CALL ammt405_rtib_chk(l_mman053) RETURNING g_errno
   IF NOT cl_null(g_errno) THEN 
      RETURN 
   END IF 
   
   IF cl_null(g_errno) THEN 
      LET g_mmea3_d[l_ac].mmeb009 = l_mmaq002
      LET g_mmea3_d[l_ac].mmeb010 = l_mmaq007
      LET g_mmea3_d[l_ac].mmeb011 = l_mmaq008
      LET g_mmea3_d[l_ac].mmeb012 = l_mman014
      IF cl_null(g_mmea3_d[l_ac].mmeb011) THEN 
         LET g_mmea3_d[l_ac].mmeb011 = 0
      END IF 
      IF cl_null(g_mmea3_d[l_ac].mmeb012) THEN 
         LET g_mmea3_d[l_ac].mmeb012 = 0
      END IF 
      LET g_mmea3_d[l_ac].mmeb011 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea3_d[l_ac].mmeb011,'1')
      LET g_mmea3_d[l_ac].mmeb012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea3_d[l_ac].mmeb012,'1')
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb009
      CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea3_d[l_ac].mmeb009_desc = '', g_rtn_fields[1] , ''      
      #add by yangxf ---start----
      IF cl_null(g_mmea3_d[l_ac].mmeb013) THEN 
         SELECT rtdx044 INTO g_mmea3_d[l_ac].mmeb013
           FROM rtdx_t
          WHERE rtdxent = g_enterprise
            AND rtdx001 = l_mman053
            AND rtdxsite = g_rtia_m.rtiasite
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea3_d[l_ac].mmeb013
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea3_d[l_ac].inaa001_desc03 = '', g_rtn_fields[1] , ''
      END IF 
      #add by yangxf ----end-----
   END IF 

END FUNCTION

################################################################################
# Descriptions...: 储值卡号检查
# Memo...........:
# Usage..........: CALL ammt405_mmed001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/22 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_mmed001_chk()
   DEFINE l_mmaq006      LIKE mmaq_t.mmaq006
   DEFINE l_mmaq002      LIKE mmaq_t.mmaq002
   DEFINE l_mmaq003      LIKE mmaq_t.mmaq003
   DEFINE l_mmaq009      LIKE mmaq_t.mmaq009
   DEFINE l_mmaq032      LIKE mmaq_t.mmaq032
   DEFINE l_mmaq008      LIKE mmaq_t.mmaq008
   DEFINE l_mmaq005      LIKE mmaq_t.mmaq005
   DEFINE l_mmanstus     LIKE mman_t.mmanstus
   DEFINE l_oodb011      LIKE oodb_t.oodb011
   DEFINE l_mman053      LIKE mman_t.mman053
   DEFINE l_mman054      LIKE mman_t.mman054
   DEFINE l_rtdx014      LIKE rtdx_t.rtdx014
   DEFINE l_n            LIKE type_t.num5
   DEFINE l_mman042      LIKE mman_t.mman042
   DEFINE l_mman043      LIKE mman_t.mman043
   DEFINE l_value_cnt    LIKE type_t.num5     #160607-00024#1 160609 by lori add
   DEFINE g_para         varchar(1)           #add by zhangnan 
   
   LET g_errno = ''
   #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      #检查卡号属否存在且为3.开卡状态
      SELECT mmaq006,mmaq002,mmaq003,mmaq009,mmaq032,mmaq005,mmanstus,mman042,mman043
        INTO l_mmaq006,l_mmaq002,l_mmaq003,l_mmaq009,l_mmaq032,l_mmaq005,l_mmanstus,l_mman042,l_mman043
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002
         AND mmaq001 = g_mmea4_d[l_ac].mmed001
         
      #160607-00024#1 160609 by lori add---(S)   
      LET l_value_cnt = 0 
      SELECT COUNT(*) INTO l_value_cnt
        FROM mmau_t
       WHERE mmauent = g_enterprise
         AND mmau001 = g_mmea4_d[l_ac].mmed001
#         AND mmau004 = '5'      #160620-00011#1
         AND mmau009 <> 0       #160620-00011#1
         AND mmau005 <> g_rtia_m.rtiadocno  
      #160607-00024#1 160609 by lori add---(E)            
   ELSE
      #检查卡号属否存在且为3.开卡状态
      SELECT mmaq006,mmaq002,mmaq003,mmaq009,mmaq032,mmaq005,mmanstus
        INTO l_mmaq006,l_mmaq002,l_mmaq003,l_mmaq009,l_mmaq032,l_mmaq005,l_mmanstus
        FROM mmaq_t,mman_t
       WHERE mmaqent = g_enterprise
         AND mmanent = mmaqent
         AND mman001 = mmaq002       
         AND mmaq001 = g_mmea5_d[l_ac].mmed001
   END IF 
   
   CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
         WHEN l_mmaq006 <> '3'    LET g_errno = 'amm-00335'
         #WHEN l_mmaq005 < g_today LET g_errno = 'amm-00336'  ##mark by zhangnan 160728-00006#36
         WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
         WHEN l_mman042 IS NOT NULL AND l_mman042 = 'N' 
                                  LET g_errno = 'amm-00427'
         WHEN l_mman043 IS NOT NULL AND l_mman043 = 'N' AND l_value_cnt > 1    #160607-00024#1 160609 by lori add l_value_cnt
                                  LET g_errno = 'amm-00450'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   #160728-00006#36  add by zhangnan --str 判断过期的卡时候是否可以注销
   LET g_para = cl_get_para(g_enterprise,'',"E-CIR-0075")     
   IF g_prog='ammt426' AND g_para ='Y' THEN
      
   ELSE
      IF l_mmaq005 < g_today THEN 
         LET g_errno = 'amm-00336'
      END IF 
   END IF
    #160728-00006#36  add by zhangnan --end    
    
   IF cl_null(g_errno) THEN 
      #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
         CALL ammt405_card(g_mmea4_d[l_ac].mmed001) RETURNING l_n
      ELSE
         CALL ammt405_card(g_mmea5_d[l_ac].mmed001) RETURNING l_n
      END IF 
      IF l_n = 0 THEN 
         LET g_errno = 'amm-00325'
         RETURN 
      END IF 
   ELSE 
      RETURN 
   END IF 
   #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
      IF (g_mmea4_d[l_ac].mmed001 != g_mmea4_d_t.mmed001 AND NOT cl_null(g_mmea4_d_t.mmed001))
      OR cl_null(g_mmea4_d_t.mmed001) THEN 
         #检查原卡卡号是否存在卡储值维护作业中
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmed_t
          WHERE mmedent = g_enterprise
            AND mmed001 = g_mmea4_d[l_ac].mmed001
            AND mmeddocno = g_rtia_m.rtiadocno
         IF l_n > 0 THEN 
           LET g_errno = 'amm-00398'
           RETURN 
         END IF 
         #检查此卡是否已存在未过帐的储值单据
         SELECT COUNT(*) INTO l_n
           FROM mmed_t,rtia_t
          WHERE mmedent = rtiaent
            AND mmeddocno = rtiadocno
            AND mmedent = g_enterprise      #160720-00001#1 by 08172
            AND rtia000 = 'ammt425'
            AND rtiastus NOT IN('X','S')
            AND mmeddocno <> g_rtia_m.rtiadocno
            AND mmed001 = g_mmea4_d[l_ac].mmed001
          IF l_n > 0 THEN 
             LET g_errno = 'amm-00405'
             RETURN 
          END IF 
      END IF
      
      SELECT mman054 INTO l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise
         AND mman001 = l_mmaq002


      CALL ammt405_rtib_chk(l_mman054) RETURNING g_errno
      IF NOT cl_null(g_errno) THEN 
         RETURN 
      END IF 
   ELSE
      IF (g_mmea5_d[l_ac].mmed001 != g_mmea5_d_t.mmed001 AND NOT cl_null(g_mmea5_d_t.mmed001))
      OR cl_null(g_mmea5_d_t.mmed001) THEN 
         #检查原卡卡号是否存在卡注销维护作业中
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM mmed_t
          WHERE mmedent = g_enterprise
            AND mmed001 = g_mmea5_d[l_ac].mmed001
            AND mmeddocno = g_rtia_m.rtiadocno
         IF l_n > 0 THEN 
           LET g_errno = 'amm-00399'
           RETURN 
         END IF 
      END IF
      SELECT mman054 INTO l_mman054
        FROM mman_t
       WHERE mmanent = g_enterprise
         AND mman001 = l_mmaq002
     
      CALL ammt405_rtib_chk(l_mman054) RETURNING g_errno
      IF NOT cl_null(g_errno) THEN 
         RETURN 
      END IF 
   END IF 
   
   
   IF cl_null(g_errno) THEN 
      #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
         LET g_mmea4_d[l_ac].mmaq002 = l_mmaq002
         LET g_mmea4_d[l_ac].mmaq003 = l_mmaq003
         #150630-00009#1--add by dongsz--str---
         SELECT mmaf004,mmaf008 INTO g_mmea4_d[l_ac].mmaq003_desc,g_mmea4_d[l_ac].mmaq003_desc_desc
           FROM mmaf_t
          WHERE mmafent = g_enterprise
            AND mmaf001 = g_mmea4_d[l_ac].mmaq003
         #150630-00009#1--add by dongsz--end---
         LET g_mmea4_d[l_ac].mmed002 = l_mmaq009
         LET g_mmea4_d[l_ac].mmed003 = l_mmaq032
         IF cl_null(g_mmea4_d[l_ac].mmed002) THEN 
            LET g_mmea4_d[l_ac].mmed002 = 0
         END IF 
         LET g_mmea4_d[l_ac].mmed002 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed002,'1')
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_mmea4_d[l_ac].mmaq002
         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea4_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''
         #add by yangxf ---start----
#         IF cl_null(g_mmea2_d[l_ac].mmec013) THEN   #160604-00009#50  by 08172
         IF cl_null(g_mmea4_d[l_ac].mmed013) THEN    #160604-00009#50  by 08172
            SELECT rtdx044 INTO g_mmea4_d[l_ac].mmed013
              FROM rtdx_t
             WHERE rtdxent = g_enterprise
               AND rtdx001 = l_mman054
               AND rtdxsite = g_rtia_m.rtiasite
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea4_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea4_d[l_ac].inaa001_desc01 = '', g_rtn_fields[1] , ''
         END IF 
         #add by yangxf ----end-----         
      ELSE
         LET g_mmea5_d[l_ac].mmaq002 = l_mmaq002
         LET g_mmea5_d[l_ac].mmaq003 = l_mmaq003
         LET g_mmea5_d[l_ac].mmed002 = l_mmaq009
         LET g_mmea5_d[l_ac].mmed003 = l_mmaq032
         LET g_mmea5_d[l_ac].mmed005 = l_mmaq009
         LET g_mmea5_d[l_ac].mmed009 = l_mmaq032
         LET g_mmea5_d[l_ac].mmed010 = 0
         LET g_mmea5_d[l_ac].mmed012 = l_mmaq032 * (-1)
         IF cl_null(g_mmea5_d[l_ac].mmed002) THEN 
            LET g_mmea5_d[l_ac].mmed002 = 0
         END IF 
         IF cl_null(g_mmea5_d[l_ac].mmed005) THEN 
            LET g_mmea5_d[l_ac].mmed005 = 0
         END IF 
         IF cl_null(g_mmea5_d[l_ac].mmed010) THEN 
            LET g_mmea5_d[l_ac].mmed010 = 0
         END IF 
         IF cl_null(g_mmea5_d[l_ac].mmed012) THEN 
            LET g_mmea5_d[l_ac].mmed012 = 0
         END IF 
         LET g_mmea5_d[l_ac].mmed002 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea5_d[l_ac].mmed002,'1')
         LET g_mmea5_d[l_ac].mmed005 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea5_d[l_ac].mmed005,'1')
         LET g_mmea5_d[l_ac].mmed010 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea5_d[l_ac].mmed010,'2')
         LET g_mmea5_d[l_ac].mmed012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea5_d[l_ac].mmed012,'2')
         LET g_ref_fields[1] = g_mmea5_d[l_ac].mmaq002
         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_mmea5_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''   
         #add by yangxf ---start----
         IF cl_null(g_mmea5_d[l_ac].mmed013) THEN 
            SELECT rtdx044 INTO g_mmea5_d[l_ac].mmed013
              FROM rtdx_t
             WHERE rtdxent = g_enterprise
               AND rtdx001 = l_mman054
               AND rtdxsite = g_rtia_m.rtiasite
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmea5_d[l_ac].mmed013
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
         END IF 
         #add by yangxf ----end-----     
      END IF 
   END IF 
   
END FUNCTION

################################################################################
# Descriptions...: 开始/结束券号检查
# Memo...........:
# Usage..........: 无
# Input parameter: p_card   券号
# Return code....: 无
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_gcbi001_chk(p_card)
   DEFINE p_card      LIKE gcbi_t.gcbi001
   DEFINE l_gcao005   LIKE gcao_t.gcao005
   DEFINE l_gcao002   LIKE gcao_t.gcao002
   DEFINE l_gcao003   LIKE gcao_t.gcao003
   DEFINE l_gcao004   LIKE gcao_t.gcao004
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_mmap003   LIKE mmap_t.mmap003
   DEFINE l_mmap005   LIKE mmap_t.mmap005
   DEFINE l_sql       STRING
   DEFINE l_gcaf013   LIKE gcaf_t.gcaf013
   
   LET g_errno = ''
   #检查券号属否存在且为1.发行状态,5.销售退回
   SELECT gcao005,gcao002,gcao003,gcao004
    INTO l_gcao005,l_gcao002,l_gcao003,l_gcao004
     FROM gcao_t
    WHERE gcaoent = g_enterprise
      AND gcao001 = p_card
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00126'
      #WHEN (l_gcao005 <> '1' AND l_gcao005 <> '5' AND g_prog = 'agct405')        #160705-00042#11 160714 by sakura mark
      WHEN (l_gcao005 <> '1' AND l_gcao005 <> '5' AND g_prog MATCHES 'agct405')   #160705-00042#11 160714 by sakura add
                               LET g_errno = 'agc-00096'
      #WHEN (l_gcao005 <> '4' AND g_prog = 'agct406')        #160705-00042#11 160714 by sakura mark
      WHEN (l_gcao005 <> '4' AND g_prog MATCHES 'agct406')   #160705-00042#11 160714 by sakura add
                               LET g_errno = 'art-00621'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      LET l_sql = " SELECT COUNT(*) ", 
                  "   FROM gcao_t ",
                  "  WHERE gcaoent = '",g_enterprise,"'",
                  "    AND gcao001 = '",p_card,"'",
                  "    AND gcao002 IN (SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                  "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                  "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                  "      AND ooed006 <='",g_today,"' ",
                  "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                  "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                  "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                  "      AND ooed006 <='",g_today,"' ",
                  "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')"
                  
      PREPARE sel_num2 FROM l_sql
      EXECUTE sel_num2 INTO l_n
      IF l_n = 0 THEN 
         LET g_errno = 'art-00285'
      END IF 
   END IF 
   #add by yangxf ---start----如果來源單號不為空檢查券對應商品是否存在訂單中
   IF NOT cl_null(g_rtia_m.rtia007) THEN 
      #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
         SELECT gcaf013 INTO l_gcaf013
           FROM gcaf_t
          WHERE gcafent = g_enterprise
            AND gcaf001 = l_gcao002
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM rtim_t
          WHERE rtiment = g_enterprise
            AND rtimdocno = g_rtia_m.rtia007
            AND rtim004 = l_gcaf013
         IF l_n = 0 THEN 
            LET g_errno = 'art-00619'
         END IF
      ELSE
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM gcbi_t
          WHERE gcbient = g_enterprise
            AND gcbidocno = g_rtia_m.rtia007
            AND p_card BETWEEN gcbi001 AND gcbi002
            AND gcbi003 = l_gcao002
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00526'
         END IF
      END IF 
   END IF
   #add by yangxf ----end----
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: 无
# Input parameter: p_card    开始券号
#                  p_card2   结束券号
# Return code....: 无
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_gcbi001_gcbi002_chk(p_card,p_card2)
   DEFINE p_card      LIKE gcbi_t.gcbi001
   DEFINE p_card2     LIKE gcbi_t.gcbi002
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_n1        LIKE type_t.num5
   DEFINE l_gcao002   LIKE gcao_t.gcao002
   DEFINE l_gcaf006   LIKE gcaf_t.gcaf006
   DEFINE l_gcaf007   LIKE gcaf_t.gcaf007

   LET g_errno = ''
   SELECT gcao002 INTO l_gcao002
     FROM gcao_t
    WHERE gcaoent = g_enterprise
      AND gcao001 = p_card
      
   LET l_n = 0
   #检查券种是否一致
   SELECT COUNT(*) INTO l_n
     FROM gcao_t
    WHERE gcaoent = g_enterprise
      AND gcao001 = p_card
      AND gcao002 IN (SELECT gcao002 FROM gcao_t WHERE gcaoent = g_enterprise AND gcao001 = p_card2)
   IF l_n = 0 THEN 
      LET g_errno = 'agc-00097'
      RETURN
   END IF 
   #检查开始券号必须小于等于结束券号
   IF p_card > p_card2 THEN 
      LET g_errno = 'agc-00098'
      RETURN 
   END IF
   
   #券总位数，固定字符位数
   SELECT gcaf006,gcaf007 
     INTO l_gcaf006,l_gcaf007  
     FROM gcaf_t
    WHERE gcafent = g_enterprise
      AND gcaf001 = l_gcao002
   LET l_n1 = p_card2[l_gcaf007+1,l_gcaf006] - p_card[l_gcaf007+1,l_gcaf006] + 1
   LET l_n = 0   
   SELECT COUNT(*) INTO l_n
     FROM gcao_t
    WHERE gcaoent = g_enterprise
      AND gcao002 = l_gcao002
      AND gcao001 BETWEEN p_card AND p_card2
   IF l_n <> l_n1 THEN 
      LET g_errno = 'agc-00103'
      RETURN 
   END IF
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      IF g_no_chk ='N' THEN
         #检查开始和结束券号之间是否有状态不为1.发行的券号且不为5.销售退回
         LET l_n = 0   
         SELECT COUNT(*) INTO l_n
           FROM gcao_t
          WHERE gcaoent = g_enterprise
            AND gcao002 = l_gcao002
            AND gcao001 BETWEEN p_card AND p_card2
            AND gcao005 IN('1','5')
         IF l_n <> l_n1 THEN 
            LET g_errno = 'agc-00099'
            RETURN 
         END IF
      END IF 
   END IF 
   #IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      #检查开始和结束券号之间是否有状态不为 发售
      LET l_n = 0   
      SELECT COUNT(*) INTO l_n
        FROM gcao_t
       WHERE gcaoent = g_enterprise
         AND gcao002 = l_gcao002
         AND gcao001 BETWEEN p_card AND p_card2
         AND gcao005 = '4'
      IF l_n <> l_n1 THEN 
         LET g_errno = 'art-00620'
         RETURN 
      END IF
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 券号带出相关资料
# Memo...........:
# Usage..........: 无
# Input parameter: p_card         开始券号
#                : p_card2        结束券号
# Date & Author..: 2014/04/08 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_gcbi001_display(p_card,p_card2)
DEFINE p_card      LIKE gcbi_t.gcbi001
DEFINE p_card2     LIKE gcbi_t.gcbi002
DEFINE l_card      LIKE gcbi_t.gcbi001
DEFINE l_gcaf006   LIKE gcaf_t.gcaf006
DEFINE l_gcaf007   LIKE gcaf_t.gcaf007
DEFINE l_gcaf013   LIKE gcaf_t.gcaf013   #add by yangxf 
#150720-00022#3---add--20151211---by huangrh----begin----
DEFINE r_exists          LIKE type_t.num5
DEFINE r_prei009         LIKE prei_t.prei009
DEFINE r_prei010         LIKE prei_t.prei010
DEFINE r_preg001         LIKE preg_t.preg001
DEFINE l_preh003         LIKE preh_t.preh003
DEFINE l_preh005         LIKE preh_t.preh005
#150720-00022#3---add--20151211---by huangrh----end----   


   IF NOT cl_null(p_card) THEN 
      LET l_card = p_card
   ELSE
      LET l_card = p_card2
   END IF 
   #券种、券面额编号
   SELECT gcao002,gcaf012,gcaf006,gcaf007,gcaf013,gcaf039                                                          #add by yangxf add gcaf013
     INTO g_mmea6_d[l_ac].gcbi003,g_mmea6_d[l_ac].gcbi004,l_gcaf006,l_gcaf007,l_gcaf013,g_mmea6_d[l_ac].gcbi009    #add by yangxf add l_gcaf013
     FROM gcaf_t,gcao_t
    WHERE gcaoent = gcafent
      AND gcaoent = g_enterprise      #160720-00001#1 by 08172
      AND gcao001 = l_card
      AND gcaf001 = gcao002
      
   #150720-00022#3---add--20151211---by huangrh----begin----
    #IF g_prog='agct405' OR g_prog='agct406' THEN                  #160705-00042#11 160714 by sakura mark 
    IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
        #取當前日期
        LET l_preh003=cl_get_today()
        #取當前時間
        LET l_preh005=cl_get_time()
        
        #退券，取來源單據的單據日期
        #沒有來源單據取此時的百貨促銷折扣率
        #IF g_prog='agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN          #160705-00042#11 160714 by sakura mark
        IF g_prog MATCHES 'agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN   #160705-00042#11 160714 by sakura add
           SELECT rtiadocdt INTO l_preh003
             FROM rtia_t
            WHERE rtiaent=g_enterprise
              AND rtiadocno=g_rtia_m.rtia007
        END IF      
       CALL s_aprp310_get_exchange(g_rtia_m.rtiasite,g_rtia_m.rtia001,'2',g_mmea6_d[l_ac].gcbi001,0,l_preh003,l_preh005)
                         RETURNING r_exists,r_prei009,r_prei010,r_preg001
       IF r_exists THEN
          LET g_mmea6_d[l_ac].gcbi009=r_prei009*100
       END IF                         
    END IF
   #150720-00022#3---add--20151211---by huangrh----begin----
   #add by yangxf 20151215 ----start---
   IF NOT cl_null(g_rtia_m.rtia007) THEN 
      SELECT gcbi009 INTO g_mmea6_d[l_ac].gcbi009
        FROM gcbi_t
       WHERE gcbient = g_enterprise
         AND gcbidocno = g_rtia_m.rtia007
         AND l_card BETWEEN gcbi001 AND gcbi002
         AND gcbi003 = g_mmea6_d[l_ac].gcbi003
   END IF 
   #add by yangxf 20151215 ---end-----
   #券单位金额
   SELECT oocq009 INTO g_mmea6_d[l_ac].oocq009
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '2071'
      AND oocq002 = g_mmea6_d[l_ac].gcbi004
   #add by yangxf ---start----
   IF cl_null(g_mmea6_d[l_ac].gcbi007) THEN 
      SELECT rtdx044 INTO g_mmea6_d[l_ac].gcbi007
        FROM rtdx_t
       WHERE rtdxent = g_enterprise
         AND rtdx001 = l_gcaf013
         AND rtdxsite = g_rtia_m.rtiasite
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi007
      CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
   END IF 
   #add by yangxf ----end-----
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmea6_d[l_ac].gcbi003
   CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_mmea6_d[l_ac].gcbi003_desc = '', g_rtn_fields[1] , ''   

   IF NOT cl_null(p_card) AND NOT cl_null(p_card2) THEN 
      #券張數
      LET g_mmea6_d[l_ac].gcbi005 = p_card2[l_gcaf007+1,l_gcaf006] - p_card[l_gcaf007+1,l_gcaf006] + 1   
      #總購卡金額
      LET g_mmea6_d[l_ac].gcbi006 = g_mmea6_d[l_ac].gcbi005 * g_mmea6_d[l_ac].oocq009
      IF cl_null(g_mmea6_d[l_ac].gcbi006) THEN 
         LET g_mmea6_d[l_ac].gcbi006 = 0
      END IF 
      IF NOT cl_null(g_mmea6_d[l_ac].gcbi009) THEN 
         LET g_mmea6_d[l_ac].gcbi006 = g_mmea6_d[l_ac].gcbi006*g_mmea6_d[l_ac].gcbi009/100
      END IF 
      LET g_mmea6_d[l_ac].gcbi006 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea6_d[l_ac].gcbi006,'2')
   END IF 
   
END FUNCTION

################################################################################
# Descriptions...: 计算储值加值
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/09 By yangxf
# Modify.........: 2016/08/23 By Lori   s_card_value_cal增加回傳r_mmed.mmed015,r_mmed.mmed016 
################################################################################
PRIVATE FUNCTION ammt405_mmed005_display()
   DEFINE r_mmed            RECORD                #儲值資訊
                mmed006  LIKE mmed_t.mmed006,     #折扣比率             
                mmed007  LIKE mmed_t.mmed007,     #折扣金額             
                mmed008  LIKE mmed_t.mmed008,     #加值金額             
                mmed009  LIKE mmed_t.mmed009,     #此次儲值成本 
                mmed010  LIKE mmed_t.mmed010,     #儲值後卡內餘額
                mmed011  LIKE mmed_t.mmed011,     #儲值後卡內成本
                mmed012  LIKE mmed_t.mmed012,     #實際應付金額
                mmed015  LIKE mmed_t.mmed015,     #活動規則編號   #160729-00077#5 160823 by lori add
                mmed016  LIKE mmed_t.mmed016      #活動規則版本   #160729-00077#5 160823 by lori add
                            END RECORD
   DEFINE r_success         LIKE type_t.num5      #處理狀態
   DEFINE l_n            LIKE type_t.num10
   
   LET r_success = TRUE
   IF cl_null(g_mmea4_d[l_ac].mmed001) OR cl_null(g_mmea4_d[l_ac].mmed005) THEN 
      RETURN r_success
   END IF 
   CALL s_card_value_cal(g_prog,'5',g_rtia_m.rtiadocno,g_mmea4_d[l_ac].mmed001,g_rtia_m.rtiasite,g_rtia_m.rtia034,
                         g_rtia_m.rtia035,g_mmea4_d[l_ac].mmed005,g_rtia_m.rtia026)
     RETURNING r_success,r_mmed.*
   IF NOT r_success THEN 
      RETURN r_success
   END IF 
   LET g_mmea4_d[l_ac].mmed006 = r_mmed.mmed006
   LET g_mmea4_d[l_ac].mmed007 = r_mmed.mmed007
   LET g_mmea4_d[l_ac].mmed008 = r_mmed.mmed008
   LET g_mmea4_d[l_ac].mmed009 = r_mmed.mmed009
   LET g_mmea4_d[l_ac].mmed010 = r_mmed.mmed010
   LET g_mmea4_d[l_ac].mmed012 = r_mmed.mmed012
   LET g_mmea4_d[l_ac].mmed015 = r_mmed.mmed015      #160729-00077#5 160823 by lori add
   LET g_mmea4_d[l_ac].mmed016 = r_mmed.mmed016      #160729-00077#5 160823 by lori add
   
   IF cl_null(g_mmea4_d[l_ac].mmed006) THEN 
      LET g_mmea4_d[l_ac].mmed006 = 0
   END IF 
   IF cl_null(g_mmea4_d[l_ac].mmed007) THEN 
      LET g_mmea4_d[l_ac].mmed007 = 0
   END IF 
   IF cl_null(g_mmea4_d[l_ac].mmed008) THEN 
      LET g_mmea4_d[l_ac].mmed008 = 0
   END IF 
   IF cl_null(g_mmea4_d[l_ac].mmed010) THEN 
      LET g_mmea4_d[l_ac].mmed010 = 0
   END IF 
   IF cl_null(g_mmea4_d[l_ac].mmed012) THEN 
      LET g_mmea4_d[l_ac].mmed012 = 0
   END IF 
   LET g_mmea4_d[l_ac].mmed006 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed006,'1')
   LET g_mmea4_d[l_ac].mmed007 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed007,'1')
   LET g_mmea4_d[l_ac].mmed008 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed008,'1')
   LET g_mmea4_d[l_ac].mmed010 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed010,'2')
   LET g_mmea4_d[l_ac].mmed012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,g_mmea4_d[l_ac].mmed012,'2')
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 查询卡生效范围
# Memo...........:
# Usage..........: ammt405_card(p_card)
#                  RETURNING 数量
# Input parameter: p_card     卡号
# Return code....: r_no       数量
# Date & Author..: 2014/05/26 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_card(p_card)
   DEFINE l_sql   STRING 
   DEFINE p_card  LIKE mmaq_t.mmaq001
   DEFINE r_no    LIKE type_t.num5
   LET r_no = 0
   LET l_sql = " SELECT COUNT(*) ", 
               "   FROM mmaq_t ",
               "  WHERE mmaqent = '",g_enterprise,"'",
               "    AND mmaq001 = '",p_card,"'",
               "    AND mmaq002 IN (SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'ammm320' ",
               "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
               "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
               "      AND ooed006 <='",g_today,"' ",
               "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
               "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
               "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
               "      AND ooed006 <='",g_today,"' ",
               "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')"
   PREPARE sel_num FROM l_sql
   EXECUTE sel_num INTO r_no
   RETURN r_no
END FUNCTION

################################################################################
# Descriptions...: 商品清单资料检查
# Memo...........:
# Usage..........: ammt405_rtib_chk(p_mman053)
#                  RETURNING g_errno
# Input parameter: p_mman053      卡对应商品
# Return code....: g_errno        报错信息
# Date & Author..: 2014/05/28 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtib_chk(p_mman053)

   DEFINE p_mman053   LIKE mman_t.mman053
   DEFINE l_rtdx014   LIKE rtdx_t.rtdx014
   DEFINE l_oodb011   LIKE oodb_t.oodb011
   DEFINE l_n         LIKE type_t.num5

   LET g_errno = ''
   LET l_n = 0
   #检查卡对应商品是否存在商品清单中
   SELECT COUNT(*) INTO l_n
     FROM rtdx_t
    WHERE rtdxent = g_enterprise 
      AND rtdxsite = g_rtia_m.rtiasite
      AND rtdx001 = p_mman053
   IF l_n = 0 THEN 
      LET g_errno = 'amm-00426'
      RETURN g_errno
   END IF 
   SELECT oodb011 INTO l_oodb011
     FROM oodb_t,ooef_t
    WHERE oodbent = ooefent
      AND oodbent = g_enterprise      #160720-00001#1 by 08172
      AND oodb001 = ooef019
      AND oodb002 = g_rtia_m.rtia028
      AND ooef001 = g_rtia_m.rtiasite
   IF l_oodb011 = '2' THEN 
      #带出税别
      SELECT rtdx014 INTO l_rtdx014
        FROM rtdx_t
       WHERE rtdxent = g_enterprise 
         AND rtdxsite = g_rtia_m.rtiasite
         AND rtdx001 = p_mman053
      IF cl_null(l_rtdx014) THEN
         LET g_errno = 'amm-00410'
         RETURN g_errno
      END IF
   END IF 
   RETURN g_errno
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: ammt405_rtia001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/04/14 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia001_chk()
   DEFINE l_mmaq006   LIKE mmaq_t.mmaq006
   
   LET g_errno = ''
   SELECT mmaq006 INTO l_mmaq006
     FROM mmaq_t 
    WHERE mmaqent = g_enterprise
      AND mmaq001 =  g_rtia_m.rtia001     
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00434'
      WHEN l_mmaq006 <> '3'    LET g_errno = 'art-00222'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
END FUNCTION

################################################################################
# Descriptions...: 检查券号是否重复
# Memo...........:
# Usage..........: ammt405_gcbi001_gcbi002_key(p_card,p_card2,p_cmd)
#                  RETURNING  无
# Input parameter: p_card         开始券号
#                : p_card2        结束券号
#                : p_cmd          状态
# Return code....: 无
# Date & Author..: 2014/04/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_gcbi001_gcbi002_key(p_card,p_card2,p_cmd)
   DEFINE p_card   LIKE gcbi_t.gcbi001
   DEFINE p_card2  LIKE gcbi_t.gcbi002
   DEFINE p_cmd    LIKE type_t.chr1
   DEFINE l_n      LIKE type_t.num5
   
   LET g_errno = ''
   LET l_n = 0
   IF NOT cl_null(p_card) AND NOT cl_null(p_card2) THEN 
      IF p_cmd = 'a' THEN 
         SELECT COUNT(*) INTO l_n
           FROM gcbi_t,rtia_t
          WHERE gcbient = g_enterprise
            AND rtiaent = gcbient
            AND rtiadocno = gcbidocno
            AND rtiastus NOT IN('X','S')
            AND gcbi003 IN (SELECT gcao002 FROM gcao_t WHERE gcaoent = g_enterprise AND gcao001 = p_card)
            AND (gcbi001 BETWEEN p_card AND p_card2
             OR  gcbi002 BETWEEN p_card AND p_card2
             OR  p_card BETWEEN gcbi001 AND gcbi002)
      ELSE
         SELECT COUNT(*) INTO l_n
           FROM gcbi_t a,rtia_t
          WHERE gcbient = g_enterprise
            AND rtiaent = gcbient
            AND rtiadocno = gcbidocno
            AND rtiastus NOT IN('X','S')
            AND gcbi003 IN (SELECT gcao002 FROM gcao_t WHERE gcaoent = g_enterprise AND gcao001 = p_card)
            AND (gcbi001 BETWEEN p_card AND p_card2
             OR  gcbi002 BETWEEN p_card AND p_card2
             OR  p_card BETWEEN gcbi001 AND gcbi002)
            AND NOT EXISTS (SELECT 1 FROM gcbi_t b
                             WHERE b.gcbiseq = g_mmea6_d[l_ac].gcbiseq
                               AND b.gcbidocno = g_rtia_m.rtiadocno
                               AND b.gcbient = g_enterprise
                               AND a.gcbient = b.gcbient
                               AND a.gcbiseq = b.gcbiseq)
      END IF 
   END IF
   IF l_n > 0 THEN 
      LET g_errno = 'amm-00445'
   END IF   
END FUNCTION

################################################################################
# Descriptions...: 更新发卡时记录赠品否
# Memo...........:
# Usage..........: CALL ammt405_modify_mmea014()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/06/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_modify_mmea014()
DEFINE l_n       LIKE type_t.num5
DEFINE l_seq     LIKE rtic_t.rticseq
DEFINE l_rtib021 LIKE rtib_t.rtib021
DEFINE l_mman053 LIKE mman_t.mman053
DEFINE l_mman054 LIKE mman_t.mman054
DEFINE l_rtib006 LIKE rtib_t.rtib006
DEFINE l_xrcd103 LIKE xrcd_t.xrcd103,
       l_xrcd104 LIKE xrcd_t.xrcd104,
       l_xrcd105 LIKE xrcd_t.xrcd105,
       l_xrcd113 LIKE xrcd_t.xrcd113,
       l_xrcd114 LIKE xrcd_t.xrcd114,
       l_xrcd115 LIKE xrcd_t.xrcd115,
       l_xrcd123 LIKE xrcd_t.xrcd113,
       l_xrcd124 LIKE xrcd_t.xrcd114,
       l_xrcd125 LIKE xrcd_t.xrcd115,
       l_xrcd133 LIKE xrcd_t.xrcd113,
       l_xrcd134 LIKE xrcd_t.xrcd114,
       l_xrcd135 LIKE xrcd_t.xrcd115
       
   LET l_n = 0
   #判断单据是否为未确认！
   IF g_rtia_m.rtiastus <> 'N' THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00608'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN 
   END IF 
   #检查折扣明细是否存在人工折价
   SELECT COUNT(*) INTO l_n
     FROM rtic_t,rtib_t
    WHERE rticent = rtibent
      AND rticent = g_enterprise      #160720-00001#1 by 08172
      AND rticseq = rtibseq
      AND rticdocno = rtibdocno
      AND rtic002 = '10'
      AND rtibdocno = g_rtia_m.rtiadocno
      AND rtib030 = g_mmea_d[l_ac].mmeaseq
   IF l_n > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00602'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN 
   END IF 
   #检查是否存在收款
   SELECT COUNT(*) INTO l_n
     FROM rtif_t
    WHERE rtifent = g_enterprise
      AND rtifdocno = g_rtia_m.rtiadocno
   IF l_n > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00603'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN 
   END IF 
   IF NOT cl_ask_confirm('art-00605') THEN
      RETURN 
   END IF 
   CALL s_transaction_begin()
   OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt405_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #檢查是否允許此動作
   IF NOT ammt405_action_chk() THEN
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #更新赠品否
   UPDATE mmea_t SET mmea014 = 'Y',
                     mmea012 = 0               #应收金额
    WHERE mmeaent = g_enterprise
      AND mmeadocno = g_rtia_m.rtiadocno
      AND mmeaseq = g_mmea_d[l_ac].mmeaseq
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'UPD mmea_t'
      LET g_errparam.popup = TRUE
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN 
   END IF
   #更新应收金额
   UPDATE rtib_t SET rtib021 = 0,
                     rtib022 = 0,
                     rtib031 = 0 
    WHERE rtibent = g_enterprise
      AND rtibdocno = g_rtia_m.rtiadocno
      AND rtib030 = g_mmea_d[l_ac].mmeaseq
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins mmea_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   SELECT mman053,mman054
     INTO l_mman053,l_mman054
     FROM mman_t,mmaq_t
    WHERE mmaqent = mmanent
      AND mmaqent = g_enterprise      #160720-00001#1 by 08172
      AND mmaq001 = g_mmea_d[l_ac].mmea001
      AND mman001 = mmaq002
   #购卡金额
   IF g_mmea_d[l_ac].mmea006 > 0 THEN 
      #获取购卡商品对应项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d[l_ac].mmea006           #标准价=购卡金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq      
         AND rtib004 = l_mman053         
      #根据售卡金额写入折价明细
      IF NOT ammt405_ins_rtic(l_seq,0,g_mmea_d[l_ac].mmea007,g_mmea_d[l_ac].mmea005,0,0) THEN 
         RETURN 
      END IF 
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib020 = (SELECT SUM(rtic013) 
                                     FROM rtic_t
                                    WHERE rticent = g_enterprise
                                      AND rticdocno = g_rtia_m.rtiadocno
                                      AND rticseq = l_seq )
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,0,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
   END IF 
   #储值金额
   IF g_mmea_d[l_ac].mmea008 > 0 THEN 
      LET l_seq = ''
      #获取购卡商品对应项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d[l_ac].mmea008 + g_mmea_d[l_ac].mmea010           #储值金额+加值金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq   
         AND rtib004 = l_mman054       
      LET l_rtib021 = g_mmea_d[l_ac].mmea005*(g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100))         
      #根据售卡金额写入折价明细
      IF NOT ammt405_ins_rtic(l_seq,0,l_rtib021,g_mmea_d[l_ac].mmea005,0,0) THEN 
         RETURN 
      END IF 
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,0,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib020 = (SELECT SUM(rtic013) 
                                     FROM rtic_t
                                    WHERE rticent = g_enterprise
                                      AND rticdocno = g_rtia_m.rtiadocno
                                      AND rticseq = l_seq)
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF         
   END IF 

                
   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)            
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF    
   CLOSE ammt405_cl
   CALL s_transaction_end('Y','0')
   CALL ammt405_b_fill()
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      SELECT SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      SELECT SUM(mmea005)
        INTO g_rtia_m.snum
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
      #add by yangxf --start----2016/01/22
      SELECT SUM(mmea010*mmea005)
        INTO g_rtia_m.amount4
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
     #add by yangxf ---end----2016/01/22
   ELSE
      SELECT SUM(rtib012),SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
   END IF 
   DISPLAY g_rtia_m.snum TO FORMONLY.snum  
   DISPLAY g_rtia_m.amount TO FORMONLY.amount
   DISPLAY g_rtia_m.amount2 TO FORMONLY.amount2
   DISPLAY g_rtia_m.amount3 TO FORMONLY.amount3
   DISPLAY g_rtia_m.amount4 TO FORMONLY.amount4   #add by yangxf 2016/01/22
END FUNCTION

################################################################################
# Descriptions...: 更新发卡时记录赠品否
# Memo...........:
# Usage..........: CALL ammt405_modify_mmea014()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/06/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_modify_mmea014_1()
DEFINE l_seq     LIKE rtic_t.rticseq
DEFINE l_n       LIKE type_t.num5
DEFINE l_mman048 LIKE mman_t.mman048
DEFINE l_mman053 LIKE mman_t.mman053
DEFINE l_mman054 LIKE mman_t.mman054
DEFINE l_rtic013 LIKE rtic_t.rtic013
DEFINE l_xrcd103 LIKE xrcd_t.xrcd103,
       l_xrcd104 LIKE xrcd_t.xrcd104,
       l_xrcd105 LIKE xrcd_t.xrcd105,
       l_xrcd113 LIKE xrcd_t.xrcd113,
       l_xrcd114 LIKE xrcd_t.xrcd114,
       l_xrcd115 LIKE xrcd_t.xrcd115,
       l_xrcd123 LIKE xrcd_t.xrcd113,
       l_xrcd124 LIKE xrcd_t.xrcd114,
       l_xrcd125 LIKE xrcd_t.xrcd115,
       l_xrcd133 LIKE xrcd_t.xrcd113,
       l_xrcd134 LIKE xrcd_t.xrcd114,
       l_xrcd135 LIKE xrcd_t.xrcd115
DEFINE l_rtib006 LIKE rtib_t.rtib006
       
   LET l_n = 0
   #判断单据是否为未确认！
   IF g_rtia_m.rtiastus <> 'N' THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00608'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN 
   END IF 
   #检查是否存在收款
   SELECT COUNT(*) INTO l_n
     FROM rtif_t
    WHERE rtifent = g_enterprise
      AND rtifdocno = g_rtia_m.rtiadocno
   IF l_n > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00603'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN 
   END IF 
   IF NOT cl_ask_confirm('art-00606') THEN
      RETURN 
   END IF 
   CALL s_transaction_begin()
   
   OPEN ammt405_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt405_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
 
   #檢查是否允許此動作
   IF NOT ammt405_action_chk() THEN
      CLOSE ammt405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   SELECT mman053,mman054
     INTO l_mman053,l_mman054
     FROM mman_t,mmaq_t
    WHERE mmaqent = mmanent
      AND mmaqent = g_enterprise      #160720-00001#1 by 08172
      AND mmaq001 = g_mmea_d[l_ac].mmea001
      AND mman001 = mmaq002
   IF g_mmea_d[l_ac].mmea008 > 0 THEN 
       LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea005 * (g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100) + g_mmea_d[l_ac].mmea006)  
   ELSE
      LET g_mmea_d[l_ac].mmea012 = g_mmea_d[l_ac].mmea005 * g_mmea_d[l_ac].mmea006    
   END IF  
   
   #更新赠品否
   UPDATE mmea_t SET mmea014 = 'N',
                     mmea012 = g_mmea_d[l_ac].mmea012               #应收金额
    WHERE mmeaent = g_enterprise
      AND mmeadocno = g_rtia_m.rtiadocno
      AND mmeaseq = g_mmea_d[l_ac].mmeaseq
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins mmea_t'
      LET g_errparam.popup = TRUE
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN 
   END IF
   #购卡金额
   IF g_mmea_d[l_ac].mmea006 > 0 THEN 
      #获取购卡对应商品明细项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d[l_ac].mmea006           #标准价=购卡金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq      
         AND rtib004 = l_mman053
      #删除对应卡商品人工折扣
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = l_seq
         AND rtic002 = '10'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del rtic_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF
      SELECT SUM(rtic013) INTO l_rtic013
        FROM rtic_t
       WHERE rticent = g_enterprise
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = l_seq
      IF cl_null(l_rtic013) THEN 
         LET l_rtic013 = 0
      END IF 
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,g_mmea_d[l_ac].mmea006 * g_mmea_d[l_ac].mmea005,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib020 = l_rtic013,
                        rtib031 = g_mmea_d[l_ac].mmea006 * g_mmea_d[l_ac].mmea005 * g_rtia_m.rtia027,
                        rtib021 = g_mmea_d[l_ac].mmea006 * g_mmea_d[l_ac].mmea005,
                        rtib010 = g_mmea_d[l_ac].mmea006 ,
                        rtib022 = l_xrcd103
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF
   END IF 
   #储值金额
   IF g_mmea_d[l_ac].mmea008 > 0 THEN 
      LET l_seq = ''
      #获取购卡商品对应项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d[l_ac].mmea008 + g_mmea_d[l_ac].mmea010           #储值金额+加值金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq     
         AND rtib004 = l_mman054         
      #删除对应卡商品人工折扣
      DELETE FROM rtic_t 
       WHERE rticent = g_enterprise
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = l_seq
         AND rtic002 = '10'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del rtic_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF
      LET l_rtic013 = 0
      SELECT SUM(rtic013) INTO l_rtic013
        FROM rtic_t
       WHERE rticent = g_enterprise
         AND rticdocno = g_rtia_m.rtiadocno
         AND rticseq = l_seq
      IF cl_null(l_rtic013) THEN 
         LET l_rtic013 = 0
      END IF 
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib020 = l_rtic013,
                        rtib031 = g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005 * g_rtia_m.rtia027,
                        rtib021 = g_mmea_d[l_ac].mmea008*(g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005,
                        rtib022 = l_xrcd103
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN 
      END IF         
   END IF 

   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)              
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF   
   CLOSE ammt405_cl
   CALL s_transaction_end('Y','0')
   CALL ammt405_b_fill()
   #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
      SELECT SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
      SELECT SUM(mmea005)
        INTO g_rtia_m.snum
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
      #add by yangxf --start----2016/01/22
      SELECT SUM(mmea010*mmea005)
        INTO g_rtia_m.amount4
        FROM mmea_t
       WHERE mmeaent = g_enterprise
         AND mmeadocno = g_rtia_m.rtiadocno
     #add by yangxf ---end----2016/01/22
   ELSE
      SELECT SUM(rtib012),SUM(rtib008*rtib012),SUM(rtib020),SUM(rtib021)
        INTO g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
   END IF 
   DISPLAY g_rtia_m.snum TO FORMONLY.snum  
   DISPLAY g_rtia_m.amount TO FORMONLY.amount
   DISPLAY g_rtia_m.amount2 TO FORMONLY.amount2
   DISPLAY g_rtia_m.amount3 TO FORMONLY.amount3
   DISPLAY g_rtia_m.amount4 TO FORMONLY.amount4   #add by yangxf 2016/01/22
END FUNCTION

################################################################################
# Descriptions...: 更新储值折扣
# Memo...........:
# Usage..........: CALL ammt405_modify_mmea009()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/06/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_modify_mmea009()
DEFINE r_success   LIKE type_t.num5
DEFINE l_seq       LIKE rtic_t.rticseq
DEFINE l_rtib021   LIKE rtib_t.rtib021
DEFINE l_rtib021_t LIKE rtib_t.rtib021
DEFINE l_mman053   LIKE mman_t.mman053
DEFINE l_mman054   LIKE mman_t.mman054
DEFINE l_rtib006   LIKE rtib_t.rtib006
DEFINE l_mmea010   LIKE mmea_t.mmea010
DEFINE l_mmea010_t LIKE mmea_t.mmea010
DEFINE l_xrcd103   LIKE xrcd_t.xrcd103,
       l_xrcd104   LIKE xrcd_t.xrcd104,
       l_xrcd105   LIKE xrcd_t.xrcd105,
       l_xrcd113   LIKE xrcd_t.xrcd113,
       l_xrcd114   LIKE xrcd_t.xrcd114,
       l_xrcd115   LIKE xrcd_t.xrcd115,
       l_xrcd123   LIKE xrcd_t.xrcd113,
       l_xrcd124   LIKE xrcd_t.xrcd114,
       l_xrcd125   LIKE xrcd_t.xrcd115,
       l_xrcd133   LIKE xrcd_t.xrcd113,
       l_xrcd134   LIKE xrcd_t.xrcd114,
       l_xrcd135   LIKE xrcd_t.xrcd115

   LET r_success = TRUE
   SELECT mman053,mman054
     INTO l_mman053,l_mman054
     FROM mman_t,mmaq_t
    WHERE mmaqent = mmanent
      AND mmaqent = g_enterprise      #160720-00001#1 by 08172
      AND mmaq001 = g_mmea_d[l_ac].mmea001
      AND mman001 = mmaq002
   #购卡金额
   IF g_mmea_d[l_ac].mmea006 !=  g_mmea_d_t.mmea006 THEN 
      #获取购卡商品对应项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d_t.mmea006           #标准价=购卡金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq   
         AND rtib004 = l_mman053         
      LET l_rtib021 = g_mmea_d[l_ac].mmea006*g_mmea_d[l_ac].mmea005 
      LET l_rtib021_t = g_mmea_d_t.mmea006*g_mmea_d[l_ac].mmea005
      #根据售卡金额写入折价明细
      IF NOT ammt405_ins_rtic(l_seq,l_rtib021,l_rtib021_t,g_mmea_d[l_ac].mmea005,0,0) THEN 
         RETURN 
      END IF 
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,l_rtib021,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib020 = (SELECT SUM(rtic013) 
                                     FROM rtic_t
                                    WHERE rticent = g_enterprise
                                      AND rticdocno = g_rtia_m.rtiadocno
                                      AND rticseq = l_seq ),
                        rtib010 = g_mmea_d[l_ac].mmea006,                           #交易价=单张购卡金额
                        rtib021 = l_rtib021,                                        #销售额=数量*单张购卡金额
                        rtib031 = l_rtib021 * g_rtia_m.rtia027,                     #   本币应收金额
                        rtib022 = l_xrcd103                                         
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   #储值金额
  #IF g_mmea_d[l_ac].mmea008 > 0                   #modify by yangxf 2016/01/22
   IF g_mmea_d[l_ac].mmea008 >= 0                  #add by yangxf 2016/1/22 
   AND (g_mmea_d[l_ac].mmea009 != g_mmea_d_t.mmea009 
    OR  g_mmea_d[l_ac].mmea010 != g_mmea_d_t.mmea010 ) THEN 
      LET l_seq = ''
      #获取购卡商品对应项次
      SELECT rtibseq,rtib006 INTO l_seq,l_rtib006
        FROM rtib_t
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtib008 = g_mmea_d[l_ac].mmea008 + g_mmea_d_t.mmea010           #储值金额+加值金额
         AND rtib030 = g_mmea_d[l_ac].mmeaseq  
         AND rtib004 = l_mman054
      LET l_rtib021 = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100) * g_mmea_d[l_ac].mmea005
      LET l_rtib021_t = g_mmea_d_t.mmea008 * (g_mmea_d_t.mmea009/100) * g_mmea_d[l_ac].mmea005
      LET l_mmea010 = g_mmea_d[l_ac].mmea010 * g_mmea_d[l_ac].mmea005
      LET l_mmea010_t = g_mmea_d_t.mmea010 * g_mmea_d[l_ac].mmea005
      #根据售卡金额写入折价明细
      IF NOT ammt405_ins_rtic(l_seq,l_rtib021,l_rtib021_t,g_mmea_d[l_ac].mmea005,l_mmea010,l_mmea010_t) THEN 
         RETURN 
      END IF 
      #重新計算交易稅別
                    #單號              項次                    項次2   營運據點           應收金額
      CALL s_tax_ins(g_rtia_m.rtiadocno,l_seq        ,'0',   g_rtia_m.rtiasite,g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005,
                        #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                        l_rtib006,g_mmea_d[l_ac].mmea005,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                   #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
         RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                   l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
      #更新商品明细折价金额
      UPDATE rtib_t SET rtib008 = g_mmea_d[l_ac].mmea008 + g_mmea_d[l_ac].mmea010,
                        rtib020 = (SELECT SUM(rtic013) 
                                     FROM rtic_t
                                    WHERE rticent = g_enterprise
                                      AND rticdocno = g_rtia_m.rtiadocno
                                      AND rticseq = l_seq ),
                        rtib010 = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100),
                        rtib021 = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005,
                        rtib031 = g_mmea_d[l_ac].mmea008 * (g_mmea_d[l_ac].mmea009/100)*g_mmea_d[l_ac].mmea005 * g_rtia_m.rtia027,
                        rtib022 = l_xrcd103
       WHERE rtibent = g_enterprise
         AND rtibdocno = g_rtia_m.rtiadocno
         AND rtibseq = l_seq
         AND rtib030 = g_mmea_d[l_ac].mmeaseq  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'UPD mmea_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF         
   END IF 
   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)              
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF  
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 來源單號檢查
# Memo...........:
# Usage..........: CALL ammt405_rtia007_chk()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/06/12 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtia007_chk()
DEFINE l_rtilstus   LIKE rtil_t.rtilstus
DEFINE l_rtil042    LIKE rtil_t.rtil042
DEFINE l_n          LIKE type_t.num5

   LET g_errno = ''
   #IF g_prog = 'ammt429' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'ammt429' THEN   #160705-00042#11 160714 by sakura add
      SELECT rtiastus INTO l_rtilstus
        FROM rtia_t
       WHERE rtiaent = g_enterprise
         AND rtiadocno = g_rtia_m.rtia007
         AND rtia000 = 'ammt425'
         AND rtiasite = g_rtia_m.rtiasite
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00479'
         WHEN l_rtilstus <> 'S'   LET g_errno = 'amm-00480'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
      IF NOT cl_null(g_errno) THEN 
         RETURN 
      END IF 
      LET l_n = 0
      IF NOT cl_null(g_rtia_m.rtiadocno) THEN 
         #检查此单是否已被使用
         SELECT COUNT(*) INTO l_n
           FROM rtia_t
          WHERE rtiaent = g_enterprise
            AND rtia007 = g_rtia_m.rtia007
            AND rtiastus <> 'X'
            AND rtiadocno <> g_rtia_m.rtiadocno
            AND rtia000 = g_prog
      ELSE
         #检查此订单是否已被使用
         SELECT COUNT(*) INTO l_n
           FROM rtia_t
          WHERE rtiaent = g_enterprise
            AND rtia007 = g_rtia_m.rtia007
            AND rtiastus <> 'X'
            AND rtia000 = g_prog
      END IF 
      IF l_n > 0 THEN 
         LET g_errno = 'amm-00481'
         RETURN 
      END IF
      #add by geza 20161110 #161109-00052#1(S)
      #判断余额要大于退款金额
      LET l_n = 0
      SELECT COUNT(1) INTO l_n 
        FROM mmed_t
       WHERE mmedent = g_enterprise 
         AND mmeddocno = g_rtia_m.rtia007 
         AND EXISTS (SELECT 1 FROM mmaq_t WHERE mmaqent = mmedent AND mmaq001 = mmed001 AND mmaq009 < (mmed010 - mmed002))
      IF l_n > 0  THEN
         LET g_errno = 'amm-00792'
         RETURN  
      END IF    
      #判断来源单号的日期之后不能有除了充值和反充值之外的类型
      LET l_n = 0
      SELECT COUNT(1) INTO l_n 
        FROM mmed_t,rtia_t
       WHERE mmedent = g_enterprise 
         AND mmeddocno = g_rtia_m.rtia007
         AND mmeddocno = rtiadocno 
         AND mmedent = rtiaent      
         AND EXISTS (SELECT 1 FROM mmau_t WHERE mmauent = mmedent AND mmau001 = mmed001 AND mmau004 NOT IN ('5','C') AND mmau006 > rtia006 )   
      IF l_n > 0  THEN
         LET g_errno = 'amm-00793'
         RETURN 
      END IF   
      #add by geza 20161110 #161109-00052#1(E)      
   #ELSE IF g_prog = 'agct406' THEN        #160705-00042#11 160714 by sakura mark
   ELSE IF g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
      #160517-00034#1
      SELECT rtiastus INTO l_rtilstus
        FROM rtia_t
       WHERE rtiaent = g_enterprise
         AND rtiadocno = g_rtia_m.rtia007
         AND rtia000 = 'agct405'
         AND rtiasite = g_rtia_m.rtiasite
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00755'
         WHEN l_rtilstus <> 'S'   LET g_errno = 'amm-00480'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
      IF NOT cl_null(g_errno) THEN 
         RETURN 
      END IF 
      LET l_n = 0
      IF NOT cl_null(g_rtia_m.rtiadocno) THEN 
         #检查此单是否已被使用
         SELECT COUNT(*) INTO l_n
           FROM rtia_t
          WHERE rtiaent = g_enterprise
            AND rtia007 = g_rtia_m.rtia007
            AND rtiastus <> 'X'
            AND rtiadocno <> g_rtia_m.rtiadocno
            AND rtia000 = g_prog
      ELSE
         #检查此订单是否已被使用
         SELECT COUNT(*) INTO l_n
           FROM rtia_t
          WHERE rtiaent = g_enterprise
            AND rtia007 = g_rtia_m.rtia007
            AND rtiastus <> 'X'
            AND rtia000 = g_prog
      END IF 
      IF l_n > 0 THEN 
         LET g_errno = 'art-00630'
         RETURN 
      END IF
      #
   ELSE
      SELECT rtilstus,rtil042 INTO l_rtilstus,l_rtil042
        FROM rtil_t
       WHERE rtilent = g_enterprise
         AND rtildocno = g_rtia_m.rtia007
         AND rtil000 = 'artt500'
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00226'
         #WHEN l_rtil042 <> '2' AND g_prog = 'ammt405'    LET g_errno = 'art-00616'      #此訂單不是售卡訂單        #160705-00042#11 160714 by sakura mark
         WHEN l_rtil042 <> '2' AND g_prog MATCHES 'ammt405'    LET g_errno = 'art-00616'      #此訂單不是售卡訂單   #160705-00042#11 160714 by sakura add
         #WHEN l_rtil042 <> '3' AND g_prog = 'agct405'    LET g_errno = 'art-00617'      #此訂單不是售券訂單        #160705-00042#11 160714 by sakura mark
         WHEN l_rtil042 <> '3' AND g_prog MATCHES 'agct405'    LET g_errno = 'art-00617'      #此訂單不是售券訂單   #160705-00042#11 160714 by sakura add
         WHEN l_rtilstus <> 'Y'   LET g_errno = 'art-00226'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
      IF cl_null(g_errno) THEN 
         LET l_n = 0
         IF NOT cl_null(g_rtia_m.rtiadocno) THEN 
            #检查此订单是否已被使用
            SELECT COUNT(*) INTO l_n
              FROM rtia_t
             WHERE rtiaent = g_enterprise
               AND rtia007 = g_rtia_m.rtia007
               AND rtiastus <> 'X'
               AND rtiadocno <> g_rtia_m.rtiadocno
               AND rtia000 = g_prog
         ELSE
            #检查此订单是否已被使用
            SELECT COUNT(*) INTO l_n
              FROM rtia_t
             WHERE rtiaent = g_enterprise
               AND rtia007 = g_rtia_m.rtia007
               AND rtiastus <> 'X'
               AND rtia000 = g_prog
         END IF 
         IF l_n > 0 THEN 
            #IF g_prog = 'ammt405' THEN        #160705-00042#11 160714 by sakura mark 
            IF g_prog MATCHES 'ammt405' THEN   #160705-00042#11 160714 by sakura add
               LET g_errno = 'art-00629'
            ELSE
               LET g_errno = 'art-00630'
            END IF 
            RETURN 
         END IF 
         #检查此订单是否存在退订
         SELECT COUNT(*) INTO l_n
           FROM rtil_t
          WHERE rtilent = g_enterprise
            AND rtil041 = g_rtia_m.rtia007
            AND rtilstus <> 'X'
         IF l_n > 0 THEN 
            LET g_errno = 'art-00627'
            RETURN 
         END IF
      END IF
   END IF 
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 收银员栏位是否必录
# Memo...........:
# Usage..........: CALL artt600_set_required()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/05/11 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_set_required()
   DEFINE l_ooib007   LIKE ooib_t.ooib007
   
   #抓取现金交易否
   SELECT ooib007 INTO l_ooib007
     FROM ooib_t
    WHERE ooibent = g_enterprise
      AND ooib002 = g_rtia_m.rtia025
   IF l_ooib007 ='Y' THEN 
      CALL cl_set_comp_required("rtia037",TRUE) 
   ELSE
      CALL cl_set_comp_required("rtia037",FALSE) 
   END IF 
END FUNCTION

################################################################################
# Memo...........:
# Usage..........: CALL ammt405_ins_rtic(p_rtibseq,p_rtib021,p_price,p_num,p_mmea010,p_mmea010_t)
#                  RETURNING r_success
# Input parameter: p_rtibseq      项次
#                : p_rtib021      销售金额
#                : p_price        原销售金额
#                : p_num          数量
#                : p_mmea010      加值金額
#                : p_mmea010_t    原加值金額
# Return code....: r_success      处理状态
# Date & Author..: 2015/06/05 By yangxf 
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_ins_rtic(p_rtibseq,p_rtib021,p_price,p_num,p_mmea010,p_mmea010_t)
DEFINE p_rtibseq   LIKE rtib_t.rtibseq
DEFINE p_rtib021   LIKE rtib_t.rtib021
DEFINE p_price     LIKE rtib_t.rtib021
DEFINE p_mmea010   LIKE mmea_t.mmea010
DEFINE p_mmea010_t LIKE mmea_t.mmea010
DEFINE p_num       LIKE rtib_t.rtib012
#DEFINE l_rtic      RECORD LIKE rtic_t.*   #160215-00002#7 160516 by sakura mark
#160215-00002#7 160516 by sakura add(S)
DEFINE l_rtic RECORD  #銷售交易折扣明細檔
       rticent LIKE rtic_t.rticent, #企業編號
       rticsite LIKE rtic_t.rticsite, #營運據點
       rticunit LIKE rtic_t.rticunit, #應用組織
       rticdocno LIKE rtic_t.rticdocno, #單據編號
       rticseq LIKE rtic_t.rticseq, #項次
       rticseq1 LIKE rtic_t.rticseq1, #折扣序
       rtic001 LIKE rtic_t.rtic001, #單據類型
       rtic002 LIKE rtic_t.rtic002, #折價方式
       rtic003 LIKE rtic_t.rtic003, #促銷規則
       rtic004 LIKE rtic_t.rtic004, #活動類別
       rtic005 LIKE rtic_t.rtic005, #活動子類別
       rtic006 LIKE rtic_t.rtic006, #促銷方式
       rtic007 LIKE rtic_t.rtic007, #入機方式
       rtic008 LIKE rtic_t.rtic008, #參與數量
       rtic009 LIKE rtic_t.rtic009, #參與金額
       rtic010 LIKE rtic_t.rtic010, #贈送基數
       rtic011 LIKE rtic_t.rtic011, #贈送幅度
       rtic012 LIKE rtic_t.rtic012, #折扣率
       rtic013 LIKE rtic_t.rtic013, #折讓金額
       rtic014 LIKE rtic_t.rtic014, #贈卡券種
       rtic015 LIKE rtic_t.rtic015, #贈卡券號
       rtic016 LIKE rtic_t.rtic016, #贈送面額
       rtic017 LIKE rtic_t.rtic017, #贈送面額單位金額
       rtic018 LIKE rtic_t.rtic018, #接卡券種
       rtic019 LIKE rtic_t.rtic019, #接卡券號
       rtic020 LIKE rtic_t.rtic020, #接收基數
       rtic021 LIKE rtic_t.rtic021, #接收幅度
       rtic022 LIKE rtic_t.rtic022, #接收面額
       rtic023 LIKE rtic_t.rtic023, #接收面額單位金額
       rtic024 LIKE rtic_t.rtic024, #接卡券折扣率
       rtic025 LIKE rtic_t.rtic025, #來源類型
       rtic026 LIKE rtic_t.rtic026, #來源單號
       rtic027 LIKE rtic_t.rtic027, #來源折價方式
       rtic028 LIKE rtic_t.rtic028, #承擔比例
       rtic029 LIKE rtic_t.rtic029  #轉費用否
END RECORD
#160215-00002#7 160516 by sakura add(E)
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE 
   #写入折价明细
   LET l_rtic.rticent   = g_enterprise                     #企業編號
   LET l_rtic.rticsite  = g_rtia_m.rtiasite                #營運據點
   LET l_rtic.rticunit  = g_rtia_m.rtiasite                #應用組織
   LET l_rtic.rticdocno = g_rtia_m.rtiadocno               #單據編號
   LET l_rtic.rticseq   = p_rtibseq                        #項次
   SELECT max(rticseq1) + 1 INTO l_rtic.rticseq1
     FROM rtic_t
    WHERE rticent = g_enterprise
      AND rticdocno = g_rtia_m.rtiadocno
      AND rticseq = p_rtibseq
   IF cl_null(l_rtic.rticseq1) THEN 
      LET l_rtic.rticseq1  = 1                             #折扣序
   END IF
   LET l_rtic.rtic001   = 'ammt405'                        #單據類型 1.訂單 2.銷售單 3.銷退單 暂给程序编号
   LET l_rtic.rtic002   = '10'                             #折價方式 scc=6708 1.促銷特價 2.捆綁特價 3.削價特價 4.會員價 5.一般促銷 6.組合促銷 7.滿額滿量促銷 8.換贈
   LET l_rtic.rtic003   = ''                               #促銷規則
   LET l_rtic.rtic004   = ''                               #活動類別
   LET l_rtic.rtic005   = ''                               #活動子類別
   LET l_rtic.rtic006   = ''                               #促銷方式
   LET l_rtic.rtic007   = ''                               #入机方式
   LET l_rtic.rtic008   = p_num                            #參與數量
   LET l_rtic.rtic009   = p_price+p_mmea010_t              #參與金額
   LET l_rtic.rtic010   = p_price+p_mmea010_t              #贈送基數
   LET l_rtic.rtic012 = (p_rtib021+p_mmea010)/(p_price+p_mmea010_t)*100   #折扣率
   LET l_rtic.rtic011 = (p_price - p_rtib021) + (p_mmea010 -p_mmea010_t)  #贈送幅度
   LET l_rtic.rtic013 = (p_price - p_rtib021) + (p_mmea010 -p_mmea010_t)  #折讓金額
   LET l_rtic.rtic014   = ''                               #贈卡券種
   LET l_rtic.rtic015   = ''                               #贈卡券號
   LET l_rtic.rtic016   = ''                               #贈送面額
   LET l_rtic.rtic017   = ''                               #贈送面額單位金額
   LET l_rtic.rtic018   = ''                               #接卡券種
   LET l_rtic.rtic019   = ''                               #接卡券號
   LET l_rtic.rtic020   = ''                               #接收基數
   LET l_rtic.rtic021   = ''                               #接收幅度
   LET l_rtic.rtic022   = ''                               #接收面額
   LET l_rtic.rtic023   = ''                               #接收面額單位金額
   LET l_rtic.rtic024   = ''                               #接卡券折扣率
   LET l_rtic.rtic025   = ''                               #來源類型
   LET l_rtic.rtic026   = ''                               #來源單號
   LET l_rtic.rtic027   = ''                               #來源折價方式
   LET l_rtic.rtic011 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic011,'2')
   LET l_rtic.rtic012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic012,'1')
   LET l_rtic.rtic013 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic013,'2')
   #写入数据库
   #INSERT INTO rtic_t VALUES(l_rtic.*)   #160215-00002#7 160516 by sakura mark
   #160215-00002#7 160516 by sakura add(S)
   INSERT INTO rtic_t (rticent ,rticsite,rticunit,rticdocno,rticseq,
                       rticseq1,rtic001 ,rtic002 ,rtic003  ,rtic004,
                       rtic005 ,rtic006 ,rtic007 ,rtic008  ,rtic009,
                       rtic010 ,rtic011 ,rtic012 ,rtic013  ,rtic014,
                       rtic015 ,rtic016 ,rtic017 ,rtic018  ,rtic019,
                       rtic020 ,rtic021 ,rtic022 ,rtic023  ,rtic024,
                       rtic025 ,rtic026 ,rtic027 ,rtic028  ,rtic029)
   VALUES(l_rtic.rticent ,l_rtic.rticsite,l_rtic.rticunit,l_rtic.rticdocno,l_rtic.rticseq,
          l_rtic.rticseq1,l_rtic.rtic001 ,l_rtic.rtic002 ,l_rtic.rtic003  ,l_rtic.rtic004,
          l_rtic.rtic005 ,l_rtic.rtic006 ,l_rtic.rtic007 ,l_rtic.rtic008  ,l_rtic.rtic009,
          l_rtic.rtic010 ,l_rtic.rtic011 ,l_rtic.rtic012 ,l_rtic.rtic013  ,l_rtic.rtic014,
          l_rtic.rtic015 ,l_rtic.rtic016 ,l_rtic.rtic017 ,l_rtic.rtic018  ,l_rtic.rtic019,
          l_rtic.rtic020 ,l_rtic.rtic021 ,l_rtic.rtic022 ,l_rtic.rtic023  ,l_rtic.rtic024,
          l_rtic.rtic025 ,l_rtic.rtic026 ,l_rtic.rtic027 ,l_rtic.rtic028  ,l_rtic.rtic029)
   #160215-00002#7 160516 by sakura add(E) 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins rtic_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 储值卡反储值带单身资料
# Memo...........:
# Usage..........: CALL ammt405_rtib_ins_ammt429()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/21 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_rtib_ins_ammt429()
   DEFINE ls_sql       STRING

   CALL s_transaction_begin()

   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt405_detail AS ",
                "SELECT * FROM mmed_t "
   PREPARE pre_ins FROM ls_sql
   EXECUTE pre_ins
   FREE pre_ins
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt405_detail SELECT * FROM mmed_t
                                         WHERE mmedent = g_enterprise AND mmeddocno = g_rtia_m.rtia007
 
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET mmeddocno = g_rtia_m.rtiadocno

   INSERT INTO mmed_t SELECT * FROM ammt405_detail

   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt405_detail AS ",
                "SELECT * FROM rtib_t "
   PREPARE pre_ins2 FROM ls_sql
   EXECUTE pre_ins2
   FREE pre_ins2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt405_detail SELECT * FROM rtib_t
                                         WHERE rtibent = g_enterprise AND rtibdocno = g_rtia_m.rtia007
 
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET rtibdocno = g_rtia_m.rtiadocno,
                             rtib012   = rtib012*(-1),
                             rtib021   = rtib021*(-1),
                             rtib017   = rtib017*(-1),
                             rtib020   = rtib020*(-1),
                             rtib022   = rtib022*(-1),
                             rtib023   = rtib023*(-1),
                             rtib031   = rtib031*(-1)
                             
   UPDATE ammt405_detail SET rtib039 = 'N' WHERE rtib039 IS NULL
  
   #將資料塞回原table   
   INSERT INTO rtib_t SELECT * FROM ammt405_detail
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt405_detail AS ",
                "SELECT * FROM rtic_t "
   PREPARE pre_ins3 FROM ls_sql
   EXECUTE pre_ins3
   FREE pre_ins3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt405_detail SELECT * FROM rtic_t
                                         WHERE rticent = g_enterprise AND rticdocno = g_rtia_m.rtia007
 
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET rticdocno = g_rtia_m.rtiadocno

   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM ammt405_detail
   
   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE ammt405_detail AS ",
                "SELECT * FROM xrcd_t "
   PREPARE pre_ins4 FROM ls_sql
   EXECUTE pre_ins4
   FREE pre_ins4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO ammt405_detail SELECT * FROM xrcd_t
                                         WHERE xrcdent = g_enterprise AND xrcddocno = g_rtia_m.rtia007
 
 
   #將key修正為調整後   
   UPDATE ammt405_detail SET xrcddocno = g_rtia_m.rtiadocno,
                             xrcd104   = xrcd104*(-1),
                             xrcd004   = xrcd004*(-1)
 
  
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM ammt405_detail

   #刪除TEMP TABLE
   DROP TABLE ammt405_detail
   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)              
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   CALL s_transaction_end('Y','0')
END FUNCTION

################################################################################
# Descriptions...: 批量產生單身
# Memo...........:
# Usage..........: CALL amm405_01()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/08/01 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_04()
DEFINE l_str         LIKE gcbi_t.gcbi001
DEFINE l_str1        STRING
DEFINE l_gcaf006     LIKE gcaf_t.gcaf006
DEFINE l_gcaf007     LIKE gcaf_t.gcaf007
DEFINE l_n           LIKE type_t.num5
DEFINE l_success     LIKE type_t.num5
#DEFINE l_gcbi        RECORD LIKE gcbi_t.*   #160215-00002#7 160516 by sakura mark
#160215-00002#7 160516 by sakura add(S)
DEFINE l_gcbi RECORD  #券銷售資料檔
       gcbient   LIKE gcbi_t.gcbient, #企業編號
       gcbisite  LIKE gcbi_t.gcbisite, #營運據點
       gcbidocno LIKE gcbi_t.gcbidocno, #單據編號
       gcbiseq   LIKE gcbi_t.gcbiseq, #項次
       gcbiseq1  LIKE gcbi_t.gcbiseq1, #序
       gcbi001   LIKE gcbi_t.gcbi001, #開始券號
       gcbi002   LIKE gcbi_t.gcbi002, #結束券號
       gcbi003   LIKE gcbi_t.gcbi003, #券種
       gcbi004   LIKE gcbi_t.gcbi004, #券面額編號
       gcbi005   LIKE gcbi_t.gcbi005, #券張數
       gcbi006   LIKE gcbi_t.gcbi006, #券總金額
       gcbi007   LIKE gcbi_t.gcbi007, #庫區
       gcbi008   LIKE gcbi_t.gcbi008, #指定對應會員卡號
       gcbi009   LIKE gcbi_t.gcbi009 #售券折扣
END RECORD
#160215-00002#7 160516 by sakura add(E)
DEFINE l_gcao002     LIKE gcao_t.gcao002
DEFINE l_gcao005     LIKE gcao_t.gcao005
DEFINE l_gcaf012     LIKE gcaf_t.gcaf012
DEFINE l_gcaf013     LIKE gcaf_t.gcaf013
DEFINE l_oocq009     LIKE oocq_t.oocq009
DEFINE l_gcaf039     LIKE gcaf_t.gcaf039
#150720-00022#3---add--20151211---by huangrh----begin----
DEFINE r_exists          LIKE type_t.num5
DEFINE r_prei009         LIKE prei_t.prei009
DEFINE r_prei010         LIKE prei_t.prei010
DEFINE r_preg001         LIKE preg_t.preg001
DEFINE l_preh003         LIKE preh_t.preh003
DEFINE l_preh005         LIKE preh_t.preh005
#150720-00022#3---add--20151211---by huangrh----end---- 

   #检查单头是否有资料
   IF cl_null(g_rtia_m.rtiadocno) THEN 
      RETURN 
   END IF 
   #只有未审核的单据才可以处理
   IF g_rtia_m.rtiastus <> 'N' THEN 
      RETURN 
   END IF 
   CALL ammt405_04_input()
   IF cl_null(g_gcbi001) OR cl_null(g_gcbi002) THEN 
      RETURN 
   END IF 
   SELECT gcao002 INTO l_gcao002
     FROM gcao_t
    WHERE gcaoent = g_enterprise
      AND gcao001 = g_gcbi001
      
   #卡号总长度，固定码长度
   SELECT gcaf006,gcaf007
     INTO l_gcaf006,l_gcaf007
     FROM gcaf_t
    WHERE gcaf001 = l_gcao002
      AND gcafent = g_enterprise #160905-00007#6 add
   LET l_str = g_gcbi001
   CALL s_transaction_begin()
   WHILE TRUE
      LET l_gcao005 = ''
      #检查券号是否有状态不为 1.发行、5发售退回
      LET l_n = 0   
      SELECT gcao005 INTO l_gcao005
        FROM gcao_t
       WHERE gcaoent = g_enterprise
         AND gcao002 = l_gcao002
         AND gcao001 = l_str
      IF l_gcao005 = '1' OR l_gcao005 = '5' THEN 
         LET l_n = 0
         SELECT COUNT(*) INTO l_n 
           FROM gcbi_t 
          WHERE gcbient = g_enterprise
            AND gcbidocno = g_rtia_m.rtiadocno
            AND l_str BETWEEN gcbi001 AND gcbi002
         #不存在单身则新增，否则直接过
         IF l_n = 0 THEN
            LET l_gcaf012 = ''
            LET l_gcaf013 = ''
            INITIALIZE l_gcbi.* TO NULL
            SELECT MAX(gcbiseq)+1 INTO l_gcbi.gcbiseq
              FROM gcbi_t
             WHERE gcbient = g_enterprise
               AND gcbidocno = g_rtia_m.rtiadocno
            IF cl_null(l_gcbi.gcbiseq) THEN
               LET l_gcbi.gcbiseq = 1
            END IF
            SELECT MAX(gcbiseq1)+1 INTO l_gcbi.gcbiseq1
              FROM gcbi_t
             WHERE gcbient = g_enterprise
               AND gcbidocno = g_rtia_m.rtiadocno
               AND gcbiseq = l_gcbi.gcbiseq
            IF cl_null(l_gcbi.gcbiseq1) THEN 
               LET l_gcbi.gcbiseq1 = 1
            END IF 
            SELECT gcaf012,gcaf013,gcaf039 INTO l_gcaf012,l_gcaf013,l_gcaf039
              FROM gcaf_t
             WHERE gcafent = g_enterprise
               AND gcaf001 = l_gcao002
            LET l_gcbi.gcbient = g_enterprise
            LET l_gcbi.gcbisite = g_rtia_m.rtiasite
            LET l_gcbi.gcbidocno = g_rtia_m.rtiadocno
            LET l_gcbi.gcbi001 = l_str             #開始券號
            LET l_gcbi.gcbi002 = l_str             #結束券號
            LET l_gcbi.gcbi003 = l_gcao002         #券種
            LET l_gcbi.gcbi004 = l_gcaf012         #券面額編號
            LET l_gcbi.gcbi005 = 1                 #券張數
            LET l_gcbi.gcbi009 = l_gcaf039         #折扣率

           #150720-00022#3---add--20151211---by huangrh----begin----
           #IF g_prog='agct405' OR g_prog='agct406' THEN                  #160705-00042#11 160714 by sakura mark
           IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
               #取當前日期
               LET l_preh003=cl_get_today()
               #取當前時間
               LET l_preh005=cl_get_time()
               
               #退券，取來源單據的單據日期
               #IF g_prog='agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN          #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN   #160705-00042#11 160714 by sakura add
                  SELECT rtiadocdt INTO l_preh003
                    FROM rtia_t
                   WHERE rtiaent=g_enterprise
                     AND rtiadocno=g_rtia_m.rtia007
               END IF     
               CALL s_aprp310_get_exchange(g_rtia_m.rtiasite,g_rtia_m.rtia001,'2',g_gcbi001,0,l_preh003,l_preh005)
                                 RETURNING r_exists,r_prei009,r_prei010,r_preg001
               IF r_exists THEN
                  LET l_gcbi.gcbi009=r_prei009*100
               END IF                         
            END IF
           #150720-00022#3---add--20151211---by huangrh----begin----
            #券单位金额
            SELECT oocq009 INTO l_oocq009
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '2071'
               AND oocq002 = l_gcaf012
            LET l_gcbi.gcbi006 = l_oocq009*l_gcaf039/100         #券總金額
            SELECT rtdx044 INTO l_gcbi.gcbi007     #库区
              FROM rtdx_t
             WHERE rtdxent = g_enterprise
               AND rtdx001 = l_gcaf013
               AND rtdxsite = g_rtia_m.rtiasite
            #160604-00009#50 -s by 08172
            CALL s_artt220_default(g_rtia_m.rtiasite,'6')  RETURNING  l_success,l_gcbi.gcbi007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = l_gcbi.gcbi007
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_mmea6_d[l_ac].inaa001_desc02 = '', g_rtn_fields[1] , ''
            #160604-00009#50 -e by 08172
               
            #INSERT INTO gcbi_t VALUES(l_gcbi.*)
            #160215-00002#7 160516 by sakura add(S)
            INSERT INTO gcbi_t
                        (gcbient,gcbisite,gcbidocno,gcbiseq,gcbiseq1,
                         gcbi001,gcbi002 ,gcbi003  ,gcbi004,gcbi005,
                         gcbi006,gcbi007 ,gcbi008  ,gcbi009) 
                  VALUES(l_gcbi.gcbient,l_gcbi.gcbisite,l_gcbi.gcbidocno,l_gcbi.gcbiseq,l_gcbi.gcbiseq1,
                         l_gcbi.gcbi001,l_gcbi.gcbi002 ,l_gcbi.gcbi003  ,l_gcbi.gcbi004,l_gcbi.gcbi005,
                         l_gcbi.gcbi006,l_gcbi.gcbi007 ,l_gcbi.gcbi008  ,l_gcbi.gcbi009)             
            #160215-00002#7 160516 by sakura add(E)            
            
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gcbi_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               RETURN 
            END IF
            IF NOT ammt405_04_ins_rtib(l_gcbi.*) THEN
               CALL s_transaction_end('N','0')
               RETURN 
            END IF 
         END IF 
      END IF 
      IF l_str = g_gcbi002 THEN 
         EXIT WHILE 
      END IF 
      LET l_str1 = l_str[l_gcaf007+1,l_gcaf006] + 1
      LET l_str1 = l_str1.subString(1,l_str1.getIndexOf('.',1)-1)
      #流水码长度不够在前面补零
      WHILE TRUE 
         IF l_str1.getLength() <> l_gcaf006-l_gcaf007 THEN 
            LET l_str1 = "0",l_str1.trim()
         ELSE
            EXIT WHILE 
         END IF 
      END WHILE 
      IF l_gcaf007 != 0 THEN   #160615-00028#4 160623 by sakura add
         LET l_str = l_str[1,l_gcaf007],l_str1
      #160615-00028#4 160623 by sakura add(S)
      ELSE
         LET l_str = l_str1
      END IF
      #160615-00028#4 160623 by sakura add(E)
   END WHILE
   CALL s_transaction_end('Y','0')
   CALL ammt405_b_fill()
END FUNCTION

################################################################################
# Descriptions...: 輸入界面
# Memo...........:
# Usage..........: CALL ammt405_04_input()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/08/01 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_04_input()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE lwin_curr       ui.Window
   DEFINE lfrm_curr       ui.Form
   DEFINE ls_path   STRING
   DEFINE l_n       LIKE type_t.num5
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_ammt405_s04 WITH FORM cl_ap_formpath("agc","agct410_s01")
   CALL cl_ui_init()
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_lib.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)
   CALL cl_set_act_visible("accept,cancel", FALSE)
   LET g_gcbi001 = ''
   LET g_gcbi002 = ''
   LET g_no_chk = 'Y'
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      #輸入開始
      INPUT g_gcbi001,g_gcbi002 FROM gcbi001,gcbi002 ATTRIBUTE(WITHOUT DEFAULTS)
         
         AFTER FIELD gcbi001
            IF NOT cl_null(g_gcbi001) THEN 
               CALL ammt405_gcbi001_chk(g_gcbi001) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_gcbi001 = ''
                  DISPLAY BY NAME g_gcbi001
                  NEXT FIELD CURRENT 
               END IF 
               IF NOT cl_null(g_gcbi002) THEN 
                  CALL ammt405_gcbi001_gcbi002_chk(g_gcbi001,g_gcbi002)
                  IF NOT cl_null(g_errno) THEN 
                     LET g_gcbi001 = ''
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT 
                  END IF 
               END IF 
            END IF 
            
         AFTER FIELD gcbi002
            IF NOT cl_null(g_gcbi002) THEN 
               CALL ammt405_gcbi001_chk(g_gcbi002) 
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_gcbi002 = ''
                  DISPLAY BY NAME g_gcbi002
                  NEXT FIELD CURRENT 
               END IF 
               IF NOT cl_null(g_gcbi001) THEN 
                  CALL ammt405_gcbi001_gcbi002_chk(g_gcbi001,g_gcbi002)
                  IF NOT cl_null(g_errno) THEN 
                     LET g_gcbi002 = ''
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT 
                  END IF 
               END IF
            END IF 
            
         ON ACTION controlp INFIELD gcbi001
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gcbi001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where =  " gcao002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                                    "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                    "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                    "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                    "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007>='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                    " AND gcao005 IN('1','5') "
            CALL q_gcao001_9()                                #呼叫開窗
            LET g_gcbi001 = g_qryparam.return1
            DISPLAY BY NAME g_gcbi001
            NEXT FIELD gcbi001                     #返回原欄位
            
         ON ACTION controlp INFIELD gcbi002
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gcbi002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where =  " gcao002 IN(SELECT mmap002 FROM mmap_t WHERE mmapent = '",g_enterprise,"' AND mmap001 = 'agcm300' ",
                                    "             AND (mmap003 = '",g_rtia_m.rtiasite,"' OR (mmap003 IN(SELECT ooed005 FROM ooed_t ",
                                    "    START WITH ooed004= '",g_rtia_m.rtiasite,"' AND ooed001 = '8' AND ooedent = '",g_enterprise,"' ",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007 >='",g_today,"' OR ooed007 IS NULL)",
                                    "  CONNECT BY  NOCYCLE PRIOR ooed005=ooed004 ",
                                    "      AND ooed001='8' AND ooedent = '",g_enterprise,"'",
                                    "      AND ooed006 <='",g_today,"' ",
                                    "      AND (ooed007>='",g_today,"' OR ooed007 IS NULL)) AND mmap005 = 'Y')) AND mmapstus = 'Y')",
                                    " AND gcao005 IN('1','5') "
            CALL q_gcao001_9()                                #呼叫開窗
            LET g_gcbi002 = g_qryparam.return1
            DISPLAY BY NAME g_gcbi002
            NEXT FIELD gcbi002                     #返回原欄位
            
      END INPUT
      
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
         
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   CALL cl_set_act_visible("accept,cancel", TRUE)
   #畫面關閉
   CLOSE WINDOW w_ammt405_s04
   LET g_no_chk = 'N'
END FUNCTION

################################################################################
# Descriptions...: 新增商品明细单身
# Memo...........:
# Usage..........: CALL ammt405_04_ins_rtib(p_gcbi)
# Input parameter: p_gcbi         券明细
# Return code....: r_success      处理状态
# Date & Author..: 2015/08/01 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_04_ins_rtib(p_gcbi)
#DEFINE p_gcbi   RECORD LIKE gcbi_t.*   #160215-00002#7 160516 by sakura mark
#DEFINE l_rtib   RECORD LIKE rtib_t.*   #160215-00002#7 160516 by sakura mark
#160215-00002#7 160516 by sakura add(S)
DEFINE p_gcbi RECORD  #券銷售資料檔
       gcbient   LIKE gcbi_t.gcbient, #企業編號
       gcbisite  LIKE gcbi_t.gcbisite, #營運據點
       gcbidocno LIKE gcbi_t.gcbidocno, #單據編號
       gcbiseq   LIKE gcbi_t.gcbiseq, #項次
       gcbiseq1  LIKE gcbi_t.gcbiseq1, #序
       gcbi001   LIKE gcbi_t.gcbi001, #開始券號
       gcbi002   LIKE gcbi_t.gcbi002, #結束券號
       gcbi003   LIKE gcbi_t.gcbi003, #券種
       gcbi004   LIKE gcbi_t.gcbi004, #券面額編號
       gcbi005   LIKE gcbi_t.gcbi005, #券張數
       gcbi006   LIKE gcbi_t.gcbi006, #券總金額
       gcbi007   LIKE gcbi_t.gcbi007, #庫區
       gcbi008   LIKE gcbi_t.gcbi008, #指定對應會員卡號
       gcbi009   LIKE gcbi_t.gcbi009  #售券折扣
END RECORD
DEFINE l_rtib RECORD  #銷售交易商品明細檔
       rtibent LIKE rtib_t.rtibent, #企業編號
       rtibsite LIKE rtib_t.rtibsite, #營運據點
       rtibunit LIKE rtib_t.rtibunit, #應用組織
       rtiborga LIKE rtib_t.rtiborga, #帳務組織
       rtibdocno LIKE rtib_t.rtibdocno, #單據編號
       rtibseq LIKE rtib_t.rtibseq, #項次
       rtib001 LIKE rtib_t.rtib001, #來源單號
       rtib002 LIKE rtib_t.rtib002, #來源單號項次
       rtib003 LIKE rtib_t.rtib003, #商品條碼
       rtib004 LIKE rtib_t.rtib004, #商品編號
       rtib005 LIKE rtib_t.rtib005, #特徵碼
       rtib006 LIKE rtib_t.rtib006, #稅別編號
       rtib007 LIKE rtib_t.rtib007, #銷售開立發票
       rtib008 LIKE rtib_t.rtib008, #標準售價
       rtib009 LIKE rtib_t.rtib009, #促銷售價
       rtib010 LIKE rtib_t.rtib010, #交易售價
       rtib011 LIKE rtib_t.rtib011, #成本售價
       rtib012 LIKE rtib_t.rtib012, #銷售數量
       rtib013 LIKE rtib_t.rtib013, #銷售單位
       rtib014 LIKE rtib_t.rtib014, #庫存數量
       rtib015 LIKE rtib_t.rtib015, #庫存單位
       rtib016 LIKE rtib_t.rtib016, #銷售庫存單位換算率
       rtib017 LIKE rtib_t.rtib017, #計價數量
       rtib018 LIKE rtib_t.rtib018, #計價單位
       rtib019 LIKE rtib_t.rtib019, #銷售計價單位換算率
       rtib020 LIKE rtib_t.rtib020, #折價金額
       rtib021 LIKE rtib_t.rtib021, #應收金額
       rtib022 LIKE rtib_t.rtib022, #未稅金額
       rtib023 LIKE rtib_t.rtib023, #成本金額
       rtib024 LIKE rtib_t.rtib024, #理由碼
       rtib025 LIKE rtib_t.rtib025, #庫區
       rtib026 LIKE rtib_t.rtib026, #儲位
       rtib027 LIKE rtib_t.rtib027, #批號
       rtib028 LIKE rtib_t.rtib028, #專櫃編號
       rtib029 LIKE rtib_t.rtib029, #分攤積點
       rtib030 LIKE rtib_t.rtib030, #卡券銷售明細對應項次
       rtib031 LIKE rtib_t.rtib031, #本幣應收金額
       rtib032 LIKE rtib_t.rtib032, #庫存管理特徵
       rtib033 LIKE rtib_t.rtib033, #營業員
       rtib034 LIKE rtib_t.rtib034, #掃描碼
       rtib035 LIKE rtib_t.rtib035, #交易類型
       rtib036 LIKE rtib_t.rtib036, #商品屬性
       rtib037 LIKE rtib_t.rtib037, #捆綁條碼項次
       rtib038 LIKE rtib_t.rtib038, #結算扣率
       rtib039 LIKE rtib_t.rtib039, #贈品否
       rtib040 LIKE rtib_t.rtib040, #卡種/券種編號
       rtib041 LIKE rtib_t.rtib041, #卡號/券號
       rtib101 LIKE rtib_t.rtib101  #退貨退回商品否
END RECORD
#160215-00002#7 160516 by sakura add(E)
DEFINE l_gcaf012       LIKE gcaf_t.gcaf012
DEFINE l_gcaf013       LIKE gcaf_t.gcaf013
DEFINE l_gcaf041       LIKE gcaf_t.gcaf041   #160215-00002#7 160517 by sakura add
DEFINE l_rate          LIKE inaj_t.inaj014
DEFINE l_rate1         LIKE inaj_t.inaj014
DEFINE l_oocq009       LIKE oocq_t.oocq009
DEFINE l_success       LIKE type_t.num5
DEFINE r_success       LIKE type_t.num5
DEFINE l_oodb011       LIKE oodb_t.oodb011
DEFINE l_xrcd103       LIKE xrcd_t.xrcd103,
       l_xrcd104       LIKE xrcd_t.xrcd104,
       l_xrcd105       LIKE xrcd_t.xrcd105,
       l_xrcd113       LIKE xrcd_t.xrcd113,
       l_xrcd114       LIKE xrcd_t.xrcd114,
       l_xrcd115       LIKE xrcd_t.xrcd115,
       l_xrcd123       LIKE xrcd_t.xrcd113,
       l_xrcd124       LIKE xrcd_t.xrcd114,
       l_xrcd125       LIKE xrcd_t.xrcd115,
       l_xrcd133       LIKE xrcd_t.xrcd113,
       l_xrcd134       LIKE xrcd_t.xrcd114,
       l_xrcd135       LIKE xrcd_t.xrcd115
DEFINE l_ooef016       LIKE ooef_t.ooef016
#150720-00022#3---add--20151207---by huangrh----begin----
DEFINE l_preh003       LIKE preh_t.preh003
DEFINE l_preh005       LIKE preh_t.preh005
DEFINE l_sql           STRING
#DEFINE l_rtic  RECORD  LIKE rtic_t.*   #161111-00028#1--mark
#161111-00028#1----add------begin---------------
DEFINE l_rtic RECORD  #銷售交易折扣明細檔
       rticent LIKE rtic_t.rticent, #企業編號
       rticsite LIKE rtic_t.rticsite, #營運據點
       rticunit LIKE rtic_t.rticunit, #應用組織
       rticdocno LIKE rtic_t.rticdocno, #單據編號
       rticseq LIKE rtic_t.rticseq, #項次
       rticseq1 LIKE rtic_t.rticseq1, #折扣序
       rtic001 LIKE rtic_t.rtic001, #單據類型
       rtic002 LIKE rtic_t.rtic002, #折價方式
       rtic003 LIKE rtic_t.rtic003, #促銷規則
       rtic004 LIKE rtic_t.rtic004, #活動類別
       rtic005 LIKE rtic_t.rtic005, #活動子類別
       rtic006 LIKE rtic_t.rtic006, #促銷方式
       rtic007 LIKE rtic_t.rtic007, #入機方式
       rtic008 LIKE rtic_t.rtic008, #參與數量
       rtic009 LIKE rtic_t.rtic009, #參與金額
       rtic010 LIKE rtic_t.rtic010, #贈送基數
       rtic011 LIKE rtic_t.rtic011, #贈送幅度
       rtic012 LIKE rtic_t.rtic012, #折扣率
       rtic013 LIKE rtic_t.rtic013, #折讓金額
       rtic014 LIKE rtic_t.rtic014, #贈卡券種
       rtic015 LIKE rtic_t.rtic015, #贈卡券號
       rtic016 LIKE rtic_t.rtic016, #贈送面額
       rtic017 LIKE rtic_t.rtic017, #贈送面額單位金額
       rtic018 LIKE rtic_t.rtic018, #接卡券種
       rtic019 LIKE rtic_t.rtic019, #接卡券號
       rtic020 LIKE rtic_t.rtic020, #接收基數
       rtic021 LIKE rtic_t.rtic021, #接收幅度
       rtic022 LIKE rtic_t.rtic022, #接收面額
       rtic023 LIKE rtic_t.rtic023, #接收面額單位金額
       rtic024 LIKE rtic_t.rtic024, #接卡券折扣率
       rtic025 LIKE rtic_t.rtic025, #來源類型
       rtic026 LIKE rtic_t.rtic026, #來源單號
       rtic027 LIKE rtic_t.rtic027, #來源折價方式
       rtic028 LIKE rtic_t.rtic028, #承擔比例
       rtic029 LIKE rtic_t.rtic029  #轉費用否
       END RECORD
#161111-00028#1----add------end---------------       
DEFINE l_flag          LIKE type_t.chr1
DEFINE l_mmea003       LIKE mmea_t.mmea003
DEFINE l_mmaq003       LIKE mmaq_t.mmaq003
DEFINE l_mmag004       LIKE mmag_t.mmag004
#150720-00022#3---add--20151207---by huangrh----end---



   LET r_success = TRUE
   INITIALIZE l_rtib.* TO NULL
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_rtia_m.rtiasite
   LET l_rtib.rtibent = g_enterprise
   LET l_rtib.rtibsite = g_rtia_m.rtiasite
   LET l_rtib.rtibunit = g_rtia_m.rtiasite
   LET l_rtib.rtiborga = g_rtia_m.rtiasite
   LET l_rtib.rtibdocno = g_rtia_m.rtiadocno
   LET l_rtib.rtib035 = '1'
   LET l_rtib.rtib025 = p_gcbi.gcbi007
   LET l_rtib.rtib030 = p_gcbi.gcbiseq
   SELECT MAX(rtibseq) + 1 
     INTO l_rtib.rtibseq
     FROM rtib_t
    WHERE rtibent = g_enterprise
      AND rtibdocno = g_rtia_m.rtiadocno
   IF cl_null(l_rtib.rtibseq) THEN 
      LET l_rtib.rtibseq = 1
   END IF
   LET l_gcaf041 = '' #160215-00002#7 160517 by sakura add
   #获取券种对应商品编号
   SELECT gcaf012,gcaf013,gcaf041 INTO l_gcaf012,l_gcaf013,l_gcaf041   #160215-00002#7 160517 by sakura add l_gcaf041
     FROM gcaf_t
    WHERE gcafent = g_enterprise 
      AND gcaf001 = p_gcbi.gcbi003
    
   #券单位金额
   SELECT oocq009 INTO l_oocq009
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '2071'
      AND oocq002 = l_gcaf012
   
   #售券商品明细
   LET l_rtib.rtib004 = l_gcaf013
   
   SELECT oodb011 INTO l_oodb011
     FROM oodb_t,ooef_t
    WHERE oodbent = ooefent
      AND oodbent = g_enterprise     #160720-00001#1  by 08172
      AND oodb001 = ooef019
      AND oodb002 = g_rtia_m.rtia028
      AND ooef001 = g_rtia_m.rtiasite
   #稅別的預設值改依"券的券種預設"取agcm300的稅別(gcaf041)
   #IF g_prog = 'agct405' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'agct405' THEN   #160705-00042#11 160714 by sakura add
      LET l_rtib.rtib006 = l_gcaf041
   ELSE
   #160215-00002#7 160414 by sakura add(E)      
      IF l_oodb011 = '2' THEN 
         #带出税别
         SELECT rtdx014 INTO l_rtib.rtib006
           FROM rtdx_t
          WHERE rtdxent = g_enterprise 
            AND rtdxsite = g_rtia_m.rtiasite
            AND rtdx001 = l_rtib.rtib004
         IF cl_null(l_rtib.rtib006) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'amm-00410'
            LET g_errparam.extend = l_rtib.rtib004
            LET g_errparam.popup = TRUE
            CALL cl_err()
       
            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         LET l_rtib.rtib006 = g_rtia_m.rtia028
      END IF
   END IF   #160215-00002#7 160414 by sakura add
   
   #商品条码
   SELECT rtdx002 INTO l_rtib.rtib003
     FROM rtdx_t
    WHERE rtdxent = g_enterprise
      AND rtdxsite = g_rtia_m.rtiasite
      AND rtdx001 = l_rtib.rtib004   
   #售券
   LET l_rtib.rtib008 = l_oocq009
   #促销
   LET l_rtib.rtib009  = p_gcbi.gcbi006
   LET l_rtib.rtib010  = p_gcbi.gcbi006
   LET l_rtib.rtib012  = p_gcbi.gcbi005
   #带出销售单位
   SELECT imaa105 INTO l_rtib.rtib013
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = l_rtib.rtib004
   #库存单位,計價單位
   SELECT imaa104,imaa106
     INTO l_rtib.rtib015,l_rtib.rtib018
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = l_rtib.rtib004
   
   #计算销售单位与库存单位转换率
   CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015) RETURNING l_success,l_rate
   CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib015,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib014
   
   #计算销售单位与计价单位转换率
   CALL s_aimi190_get_convert(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018) RETURNING l_success,l_rate1
   CALL s_aooi250_convert_qty(l_rtib.rtib004,l_rtib.rtib013,l_rtib.rtib018,l_rtib.rtib012) RETURNING l_success,l_rtib.rtib017
   
   #銷售庫存單位換算率
   LET l_rtib.rtib016 = l_rate
   #銷售計價單位換算率
   LET l_rtib.rtib019 = l_rate1
   LET l_rtib.rtib020 = l_rtib.rtib008 - l_rtib.rtib010
   LET l_rtib.rtib021 = l_rtib.rtib012*l_rtib.rtib010
   #计算本币应收金额
   LET l_rtib.rtib031 = l_rtib.rtib021 * g_rtia_m.rtia027  
   IF cl_null(l_rtib.rtib031) THEN 
       LET l_rtib.rtib031 = 0
   END IF 
   LET l_rtib.rtib031 = s_curr_round(g_rtia_m.rtiasite,l_ooef016,l_rtib.rtib031,'2')   
                 #單號              項次                    項次2   營運據點           應收金額
   CALL s_tax_ins(g_rtia_m.rtiadocno,l_rtib.rtibseq        ,'0',   g_rtia_m.rtiasite,l_rtib.rtib021,
                     #稅別          數量           幣別             匯率             帳套  匯率2 匯率3
                     l_rtib.rtib006,l_rtib.rtib012,g_rtia_m.rtia026,g_rtia_m.rtia027,' ',  ' ',  ' ')
                #原幣未稅金額 原幣稅額   原幣含稅金額 本幣未稅金額(AR/AP使用) 本幣稅額(AR/AP使用) 本幣含稅金額(AR/AP使用)
      RETURNING l_xrcd103,    l_xrcd104, l_xrcd105,   l_xrcd113,              l_xrcd114,          l_xrcd115,
                l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
   LET l_rtib.rtib022 = l_xrcd103
   IF cl_null(l_rtib.rtib039) THEN LET l_rtib.rtib039='N' END IF 
   
   #INSERT INTO rtib_t VALUES(l_rtib.*) #160215-00002#7 160516 by sakura mark
   #160215-00002#7 160516 by sakura add(S)
   INSERT INTO rtib_t (rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,
                       rtibseq,rtib001 ,rtib002 ,rtib003 ,rtib004,
                       rtib005,rtib006 ,rtib007 ,rtib008 ,rtib009,
                       rtib010,rtib011 ,rtib012 ,rtib013 ,rtib014,
                       rtib015,rtib016 ,rtib017 ,rtib018 ,rtib019,
                       rtib020,rtib021 ,rtib022 ,rtib023 ,rtib024,
                       rtib025,rtib026 ,rtib027 ,rtib028 ,rtib029,
                       rtib030,rtib031 ,rtib032 ,rtib033 ,rtib034,
                       rtib035,rtib036 ,rtib037 ,rtib038 ,rtib039,
                       rtib040,rtib041 ,rtib101)
   VALUES (l_rtib.rtibent,l_rtib.rtibsite,l_rtib.rtibunit,l_rtib.rtiborga,l_rtib.rtibdocno,
           l_rtib.rtibseq,l_rtib.rtib001 ,l_rtib.rtib002 ,l_rtib.rtib003 ,l_rtib.rtib004,
           l_rtib.rtib005,l_rtib.rtib006 ,l_rtib.rtib007 ,l_rtib.rtib008 ,l_rtib.rtib009,
           l_rtib.rtib010,l_rtib.rtib011 ,l_rtib.rtib012 ,l_rtib.rtib013 ,l_rtib.rtib014,
           l_rtib.rtib015,l_rtib.rtib016 ,l_rtib.rtib017 ,l_rtib.rtib018 ,l_rtib.rtib019,
           l_rtib.rtib020,l_rtib.rtib021 ,l_rtib.rtib022 ,l_rtib.rtib023 ,l_rtib.rtib024,
           l_rtib.rtib025,l_rtib.rtib026 ,l_rtib.rtib027 ,l_rtib.rtib028 ,l_rtib.rtib029,
           l_rtib.rtib030,l_rtib.rtib031 ,l_rtib.rtib032 ,l_rtib.rtib033 ,l_rtib.rtib034,
           l_rtib.rtib035,l_rtib.rtib036 ,l_rtib.rtib037 ,l_rtib.rtib038 ,l_rtib.rtib039,
           l_rtib.rtib040,l_rtib.rtib041 ,l_rtib.rtib101)
   #160215-00002#7 160516 by sakura add(E)    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtib_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
   
      LET r_success = FALSE
      RETURN r_success
   END IF
   #add by yangxf 20151221---start----
   #写折价明细
   INITIALIZE l_rtic.* TO NULL
   LET l_rtic.rtic002 = '34'
   LET l_rtic.rticent = g_enterprise
   LET l_rtic.rticsite = g_rtia_m.rtiasite
   LET l_rtic.rticunit = g_rtia_m.rtiasite
   LET l_rtic.rticdocno = g_rtia_m.rtiadocno
   LET l_rtic.rticseq = l_rtib.rtibseq
   SELECT MAX(rticseq1) + 1 INTO l_rtic.rticseq1
     FROM rtic_t
    WHERE rticent = g_enterprise
      AND rticdocno =  g_rtia_m.rtiadocno
      AND rticseq = l_rtic.rticseq
   IF cl_null(l_rtic.rticseq1) THEN 
      LET l_rtic.rticseq1 = 1
   END IF
   LET l_rtic.rtic001 = g_prog
   LET l_rtic.rtic008 = l_rtib.rtib012
   LET l_rtic.rtic009 = l_rtib.rtib008 * l_rtib.rtib012
   LET l_rtic.rtic010 = l_rtic.rtic009
   LET l_rtic.rtic011 = l_rtib.rtib020
   LET l_rtic.rtic013 = l_rtib.rtib020
   LET l_rtic.rtic012 = (1-l_rtic.rtic013/l_rtic.rtic009)*100
   IF cl_null(l_rtic.rtic012) THEN 
       LET l_rtic.rtic012 = 0
   END IF 
   LET l_rtic.rtic012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic012,'2')    #依幣別取位
   #INSERT INTO rtic_t VALUES(l_rtic.*)   #160215-00002#7 160516 by sakura mark
   #160215-00002#7 160516 by sakura add(S)
   INSERT INTO rtic_t (rticent ,rticsite,rticunit,rticdocno,rticseq,
                       rticseq1,rtic001 ,rtic002 ,rtic003  ,rtic004,
                       rtic005 ,rtic006 ,rtic007 ,rtic008  ,rtic009,
                       rtic010 ,rtic011 ,rtic012 ,rtic013  ,rtic014,
                       rtic015 ,rtic016 ,rtic017 ,rtic018  ,rtic019,
                       rtic020 ,rtic021 ,rtic022 ,rtic023  ,rtic024,
                       rtic025 ,rtic026 ,rtic027 ,rtic028  ,rtic029)
   VALUES(l_rtic.rticent ,l_rtic.rticsite,l_rtic.rticunit,l_rtic.rticdocno,l_rtic.rticseq,
          l_rtic.rticseq1,l_rtic.rtic001 ,l_rtic.rtic002 ,l_rtic.rtic003  ,l_rtic.rtic004,
          l_rtic.rtic005 ,l_rtic.rtic006 ,l_rtic.rtic007 ,l_rtic.rtic008  ,l_rtic.rtic009,
          l_rtic.rtic010 ,l_rtic.rtic011 ,l_rtic.rtic012 ,l_rtic.rtic013  ,l_rtic.rtic014,
          l_rtic.rtic015 ,l_rtic.rtic016 ,l_rtic.rtic017 ,l_rtic.rtic018  ,l_rtic.rtic019,
          l_rtic.rtic020 ,l_rtic.rtic021 ,l_rtic.rtic022 ,l_rtic.rtic023  ,l_rtic.rtic024,
          l_rtic.rtic025 ,l_rtic.rtic026 ,l_rtic.rtic027 ,l_rtic.rtic028  ,l_rtic.rtic029)
   #160215-00002#7 160516 by sakura add(E) 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtic_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
    
      LET r_success = FALSE
      RETURN r_success
   END IF
   #add by yangxf 20151221---end----
   #更新单头应收金额
   UPDATE rtia_t SET rtia031 = (SELECT SUM(rtib021)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno),
                     rtia049 = (SELECT SUM(rtib031)
                                  FROM rtib_t
                                 WHERE rtibent = g_enterprise
                                   AND rtibdocno = g_rtia_m.rtiadocno)              
    WHERE rtiaent = g_enterprise
      AND rtiadocno = g_rtia_m.rtiadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtia_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
    
      LET r_success = FALSE
      RETURN r_success
   END IF 

    #150720-00022#3---add--20151207---by huangrh----begin----
    #此主體函數應該只有售券使用和退券使用--如果有其他情況，下列代碼需再洗修正。
    #IF g_prog='agct405' OR g_prog='ammt405' OR g_prog='ammt425' OR g_prog='agct406' THEN                                  #160705-00042#11 160714 by sakura mark               
    IF g_prog MATCHES 'agct405' OR g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' OR g_prog MATCHES 'agct406' THEN   #160705-00042#11 160714 by sakura add
       #取當前日期
       LET l_preh003=cl_get_today()
       #取當前時間
       LET l_preh005=cl_get_time()
       #退券，取來源單據的單據日期
       #IF g_prog='agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN          #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'agct406' AND NOT cl_null(g_rtia_m.rtia007) THEN   #160705-00042#11 160714 by sakura add
          SELECT rtiadocdt INTO l_preh003
            FROM rtia_t
           WHERE rtiaent=g_enterprise
             AND rtiadocno=g_rtia_m.rtia007
       END IF   
        
       #IF g_prog='ammt405' OR g_prog='ammt425' THEN                  #160705-00042#11 160714 by sakura mark
       IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
         #LET l_sql=" SELECT rtib_t.*,mmea003 ",  #161111-00028#1--mark
         #161111-00028#1---add-
          LET l_sql=" SELECT rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,rtibseq,rtib001,rtib002,rtib003,rtib004,",
                    " rtib005,rtib006,rtib007,rtib008,rtib009,rtib010,rtib011,rtib012,rtib013,rtib014,rtib015,rtib016,",
                    " rtib017,rtib018,rtib019,rtib020,rtib021,rtib022,rtib023,rtib024,rtib025,rtib026,rtib027,rtib028,",
                    " rtib029,rtib030,rtib031,rtib032,rtib033,rtib034,rtib035,rtib036,rtib037,rtib038,rtib039,rtib040,",
                    " rtib041,rtib101,mmea003 ",
                    "   FROM rtib_t,rtia_t,mmea_t,mman_t", 
                    "  WHERE rtibent = '",g_enterprise,"'",
                    "    AND rtibdocno = '",g_rtia_m.rtiadocno,"'",
                    "    AND rtibent=rtiaent",
                    "    AND rtibdocno=rtiadocno",
                    "    AND mmeaent=rtiaent",
                    "    AND mmeadocno=rtiadocno",
                    "    AND rtib030=mmeaseq",
                    "    AND mmanent=rtibent",
                    "    AND mman001=mmea003",
                    "    AND mman054=rtib004",
                    "    AND mmanstus='Y'",                    
                    "    AND EXISTS(SELECT 1 FROM preg_t,prei_t,preh_t",
                    "                       WHERE pregent=preient",
                    "                         AND preg001=prei001",
                    "                         AND pregent=prehent",
                    "                         AND preg001=preh001",
                    "                         AND pregsite=rtiasite",  #門店編號
                    "                         AND pregstus='F'",       #已發佈
                    "                         AND prei081='1'",        #已發佈
                    "                         AND preg004='1'",        #買換
                    "                         AND preg005='1'",        #卡種
                    "                         AND preg006=mmea003",    #券種編號
                    "                         AND prehacti='Y'",
                    "                         AND ((preh003<'",l_preh003,"' AND preh004>'",l_preh003,"') OR (preh003='",l_preh003,"' AND preh005<='",l_preh005,"') OR (preh004='",l_preh003,"' AND preh006>='",l_preh005,"'))",
                    "               )"    
       ELSE 
          #LET l_sql=" SELECT rtib_t.*,gcbi003 ", #161111-00028#1--mark
          #161111-00028#1---add-
          LET l_sql=" SELECT rtibent,rtibsite,rtibunit,rtiborga,rtibdocno,rtibseq,rtib001,rtib002,rtib003,rtib004,",
                    " rtib005,rtib006,rtib007,rtib008,rtib009,rtib010,rtib011,rtib012,rtib013,rtib014,rtib015,rtib016,",
                    " rtib017,rtib018,rtib019,rtib020,rtib021,rtib022,rtib023,rtib024,rtib025,rtib026,rtib027,rtib028,",
                    " rtib029,rtib030,rtib031,rtib032,rtib033,rtib034,rtib035,rtib036,rtib037,rtib038,rtib039,rtib040,",
                    " rtib041,rtib101,gcbi003 ",
                    "   FROM rtib_t,rtia_t,gcbi_t", 
                    "  WHERE rtibent = '",g_enterprise,"'",
                    "    AND rtibdocno = '",g_rtia_m.rtiadocno,"'",
                    "    AND rtibent=rtiaent",
                    "    AND rtibdocno=rtiadocno",
                    "    AND gcbient=rtiaent",
                    "    AND gcbidocno=rtiadocno",
                    "    AND rtib030=gcbiseq",
                    "    AND rtib030=gcbiseq1",
                    "    AND gcafent=rtibent",
                    "    AND gcaf001=gcbi003",
                    "    AND rtib004=gcaf013",
                    "    AND gcafstus='Y'",                    
                    "    AND EXISTS(SELECT 1 FROM preg_t,prei_t,preh_t",
                    "                       WHERE pregent=preient",
                    "                         AND preg001=prei001",
                    "                         AND pregent=prehent",
                    "                         AND preg001=preh001",
                    "                         AND pregsite=rtiasite",  #門店編號
                    "                         AND pregstus='F'",       #已發佈
                    "                         AND prei081='1'",        #已發佈
                    "                         AND preg004='1'",        #買換
                    "                         AND preg005='2'",        #券種
                    "                         AND preg006=gcbi003",    #券種編號
                    "                         AND prehacti='Y'",
                    "                         AND ((preh003<'",l_preh003,"' AND preh004>'",l_preh003,"') OR (preh003='",l_preh003,"' AND preh005<='",l_preh005,"') OR (preh004='",l_preh003,"' AND preh006>='",l_preh005,"'))",
                    "               )"     
       END IF
                                                                                                                       
       PREPARE ammt405_selrtib_pre2 FROM l_sql    
       DECLARE ammt405_selrtib_cur2 CURSOR FOR ammt405_selrtib_pre2     
       
       INITIALIZE l_rtib.* TO NULL
       
       FOREACH ammt405_selrtib_cur2 INTO l_rtib.*,l_mmea003
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "FOREACH:"
             LET g_errparam.popup = TRUE
             CALL cl_err()
       
             LET r_success = FALSE
             EXIT FOREACH
          END IF
          #IF g_prog='ammt405' OR g_prog='ammt425' THEN                  #160705-00042#11 160714 by sakura mark
          IF g_prog MATCHES 'ammt405' OR g_prog MATCHES 'ammt425' THEN   #160705-00042#11 160714 by sakura add
             LET l_flag='1' #卡種           
          ELSE
             LET l_flag='2' #券種
          END IF          
          
          #先刪除再新增，防止是單身修改（ON ROW CHANGE）時，調用此邏輯
          #如果有百貨有券折扣，只算百貨券的折扣
          DELETE FROM rtic_t 
                WHERE rticent=g_enterprise 
                  AND rticsite=g_rtia_m.rtiasite 
                  AND rticdocno=g_rtia_m.rtiadocno 
                  AND rticseq=l_rtib.rtibseq
                 #AND rtic001='aprm310'
                 #AND rtic002='7'
                  
          INITIALIZE l_rtic.* TO NULL
          
          LET l_rtic.rtic001='aprm310'  #促銷談判條件
          LET l_rtic.rtic002 = '7'      #滿額滿量促銷
          LET l_rtic.rticent = g_enterprise
          LET l_rtic.rticsite = g_rtia_m.rtiasite
          LET l_rtic.rticunit = g_rtia_m.rtiasite
          LET l_rtic.rticdocno = g_rtia_m.rtiadocno
          LET l_rtic.rticseq = l_rtib.rtibseq
          SELECT MAX(rticseq1) + 1 INTO l_rtic.rticseq1
            FROM rtic_t
           WHERE rticent = g_enterprise
             AND rticdocno =  g_rtia_m.rtiadocno
             AND rticseq = l_rtic.rticseq
          IF cl_null(l_rtic.rticseq1) THEN 
             LET l_rtic.rticseq1 = 1
          END IF
          
          SELECT DISTINCT preg001 INTO l_rtic.rtic003  #規則編號
            FROM preg_t,prei_t,preh_t
           WHERE pregent=preient
             AND preg001=prei001
             AND pregent=prehent
             AND preg001=preh001
             AND pregent=g_enterprise     #160720-00001#1  by 08172
             AND pregsite=g_rtia_m.rtiasite  #門店編號
             AND pregstus='F'       #已發佈
             AND prei081='1'        #已發佈
             AND preg004='1'        #買換
             AND preg005=l_flag     #卡種/券種
             AND preg006=l_mmea003  #卡種/券種編號
             AND prehacti='Y'
             AND ((preh003<l_preh003 AND preh004>l_preh003) OR (preh003=l_preh003 AND preh005<=l_preh005) OR (preh004=l_preh003 AND preh006>=l_preh005))          
          
          LET l_rtic.rtic006 = '2'    #折扣
          LET l_rtic.rtic007 = '2'    #實收         
          LET l_rtic.rtic008 = l_rtib.rtib012
          LET l_rtic.rtic009 = l_rtib.rtib008 * l_rtib.rtib012
          
          IF cl_null(g_rtia_m.rtia001) THEN #散客
             SELECT DISTINCT prei009,prei010 INTO l_rtic.rtic010,l_rtic.rtic011
               FROM prei_t
              WHERE preient=g_enterprise
                AND prei001=l_rtic.rtic003
                AND prei081='1'
          ELSE #會員
             #會員編號
             SELECT DISTINCT mmaq003 INTO l_mmaq003
               FROM mmaq_t
              WHERE mmaqent=g_enterprise
                AND mmaq001=g_rtia_m.rtia001
             #會員等級編號   
             SELECT DISTINCT mmag004 INTO l_mmag004
               FROM mmag_t
              WHERE mmagent=g_enterprise
                AND mmag001=l_mmaq003
                AND mmag002='2049'
                AND mmag003='09'
                
             #會員等級    
             LET l_oocq009=''
             SELECT DISTINCT oocq009 INTO l_oocq009  #會員等級
                 FROM oocq_t
                WHERE oocqent = g_enterprise
                  AND oocq001 = '2024'
                  AND oocq002=l_mmag004
                  AND oocqstus='Y'
                  AND (oocq009='1' OR oocq009='2' OR oocq009='3' OR oocq009='4' OR oocq009='5')  #会员等级一\会员等级二\会员等级三\会员等级四\会员等级五  
             
             IF l_oocq009='1' THEN  #會員等級一
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei011,prei012 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'             
             END IF
             
             IF l_oocq009='2' THEN  #會員等級二
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei013,prei014 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'               
             END IF 
             
             IF l_oocq009='3' THEN  #會員等級三
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei015,prei016 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1' 
             END IF 
             
             IF l_oocq009='4' THEN  #會員等級四
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei017,prei018 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'                
             END IF    
             
             IF l_oocq009='5' THEN  #會員等級五
                #只可能有一筆資料，換贈促銷，同一門店，同一卡種/券種，在一定日期時間範圍內，不可能有多筆促銷規則，也不能可能有對同一對象（散客/會與昂等級1-5）有不同促銷率
                SELECT DISTINCT prei019,prei020 INTO l_rtic.rtic010,l_rtic.rtic011
                  FROM prei_t
                 WHERE preient=g_enterprise
                   AND prei001=l_rtic.rtic003
                   AND prei081='1'              
             END IF 
          
          END IF

          LET l_rtic.rtic012 = l_rtic.rtic010/l_rtic.rtic011*100
          LET l_rtic.rtic013 = (l_rtic.rtic011-l_rtic.rtic010)/l_rtic.rtic011*l_rtib.rtib008 * l_rtib.rtib012
          IF cl_null(l_rtic.rtic012) THEN 
              LET l_rtic.rtic012 = 0
          END IF 
          LET l_rtic.rtic012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_rtic.rtic012,'2')    #依幣別取位
          #INSERT INTO rtic_t VALUES(l_rtic.*)   #160215-00002#7 160516 by sakura mark
          #160215-00002#7 160516 by sakura add(S)
          INSERT INTO rtic_t (rticent ,rticsite,rticunit,rticdocno,rticseq,
                              rticseq1,rtic001 ,rtic002 ,rtic003  ,rtic004,
                              rtic005 ,rtic006 ,rtic007 ,rtic008  ,rtic009,
                              rtic010 ,rtic011 ,rtic012 ,rtic013  ,rtic014,
                              rtic015 ,rtic016 ,rtic017 ,rtic018  ,rtic019,
                              rtic020 ,rtic021 ,rtic022 ,rtic023  ,rtic024,
                              rtic025 ,rtic026 ,rtic027 ,rtic028  ,rtic029)
          VALUES(l_rtic.rticent ,l_rtic.rticsite,l_rtic.rticunit,l_rtic.rticdocno,l_rtic.rticseq,
                 l_rtic.rticseq1,l_rtic.rtic001 ,l_rtic.rtic002 ,l_rtic.rtic003  ,l_rtic.rtic004,
                 l_rtic.rtic005 ,l_rtic.rtic006 ,l_rtic.rtic007 ,l_rtic.rtic008  ,l_rtic.rtic009,
                 l_rtic.rtic010 ,l_rtic.rtic011 ,l_rtic.rtic012 ,l_rtic.rtic013  ,l_rtic.rtic014,
                 l_rtic.rtic015 ,l_rtic.rtic016 ,l_rtic.rtic017 ,l_rtic.rtic018  ,l_rtic.rtic019,
                 l_rtic.rtic020 ,l_rtic.rtic021 ,l_rtic.rtic022 ,l_rtic.rtic023  ,l_rtic.rtic024,
                 l_rtic.rtic025 ,l_rtic.rtic026 ,l_rtic.rtic027 ,l_rtic.rtic028  ,l_rtic.rtic029)
          #160215-00002#7 160516 by sakura add(E) 
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "rtic_t"
          LET g_errparam.popup = FALSE
          CALL cl_err()
       
             LET r_success = FALSE
             RETURN r_success
          END IF
       END FOREACH      
    END IF   
    #150720-00022#3---add--20151207---by huangrh----begin----
   
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 更新/刪除券稅別、售券組織
# Memo...........:
# Usage..........: CALL ammt405_upd_gcao037_gcao038(p_type)
#                  RETURNING r_success
# Input parameter: p_type         1:確認
#                                 2:還原
# Return code....: r_success      True/False
# Date & Author..: 2016/004/14 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_upd_gcao037_gcao038(p_type)
DEFINE p_type        LIKE type_t.chr1
DEFINE r_success     LIKE type_t.chr1
DEFINE l_sql         STRING
DEFINE l_gcbi   RECORD
       gcbi001  LIKE gcbi_t.gcbi001,
       gcbi002  LIKE gcbi_t.gcbi002,
       rtib006  LIKE rtib_t.rtib006,
       gcao001  LIKE gcao_t.gcao001
                END RECORD

   LET r_success = TRUE
   LET l_sql = ''
   INITIALIZE l_gcbi.* TO NULL
   
   LET l_sql = "SELECT gcbi001,gcbi002,rtib006,gcao001 ",
               "  FROM gcbi_t,rtib_t,gcao_t ",
               " WHERE gcbient = rtibent ",
               "   AND gcbidocno = rtibdocno ",
               "   AND gcbiseq = rtibseq ",
               "   AND gcbient =",g_enterprise,
               "   AND gcbidocno = '",g_rtia_m.rtiadocno,"'",
               "   AND gcbi003 = gcao002 ",
               "   AND gcao001 BETWEEN gcbi001 AND gcbi002 "
               
   PREPARE ammt405_upd_gcao037_gcao038_pre FROM l_sql
   DECLARE ammt405_upd_gcao037_gcao038_cs CURSOR FOR ammt405_upd_gcao037_gcao038_pre                
   FOREACH ammt405_upd_gcao037_gcao038_cs INTO l_gcbi.gcbi001,l_gcbi.gcbi002,l_gcbi.rtib006,l_gcbi.gcao001
      
      CASE p_type
        #確認   
        WHEN '1'
          UPDATE gcao_t SET gcao037 = l_gcbi.rtib006,
                            gcao038 = g_rtia_m.rtiasite
           WHERE gcaoent = g_enterprise
             AND gcao001 = l_gcbi.gcao001
             
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "Upd gcao_t"
             LET g_errparam.popup = TRUE
             CALL cl_err()
             LET r_success = FALSE 
          END IF             
        #還原
        WHEN '2'
          UPDATE gcao_t SET gcao037 = '',
                            gcao038 = ''
           WHERE gcaoent = g_enterprise
             AND gcao001 = l_gcbi.gcao001
             
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "Upd gcao_t"
             LET g_errparam.popup = TRUE
             CALL cl_err()
             LET r_success = FALSE 
          END IF             
      END CASE   
   END FOREACH

   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 产生单身
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2016/12/16 By wangkun
# Modify.........:
################################################################################
PRIVATE FUNCTION ammt405_10()
# DEFINE l_str         LIKE gcbi_t.gcbi001
# DEFINE l_str1        STRING
# DEFINE l_mman005     LIKE mman_t.mman005
# DEFINE l_mman006     LIKE mman_t.mman006
# DEFINE l_n           LIKE type_t.num5
# DEFINE l_gcan002     LIKE gcan_t.gcan002
# DEFINE l_gcan003     LIKE gcan_t.gcan003
# DEFINE l_gcan004     LIKE gcan_t.gcan004
# DEFINE l_mmedseq     LIKE mmed_t.mmedseq
# DEFINE l_mmaq002     LIKE mmaq_t.mmaq002
# DEFINE l_mmed004     LIKE mmed_t.mmed004 
# DEFINE  l_insert              BOOLEAN
# DEFINE l_mmaq006     LIKE mmaq_t.mmaq006
# DEFINE l_mmaq003     LIKE mmaq_t.mmaq003
# DEFINE l_mmaq009     LIKE mmaq_t.mmaq009
# DEFINE l_mmaq032     LIKE mmaq_t.mmaq032
# DEFINE l_mmaq005     LIKE mmaq_t.mmaq005
# DEFINE l_mmanstus     LIKE mman_t.mmanstus
# DEFINE l_mman054     LIKE mman_t.mman054
## DEFINE l_mmeddocno     LIKE mmed_t.mmeddocno
# DEFINE l_mman042      LIKE mman_t.mman042
# DEFINE l_mman043      LIKE mman_t.mman043
# DEFINE l_value_cnt    LIKE type_t.num5
# DEFINE g_para         varchar(1)  
# 
# DEFINE l_mmed RECORD  #券銷售資料檔
#       mmedent   LIKE mmed_t.mmedent, #企業編號
#       mmeddocno   LIKE mmed_t.mmeddocno,
#       mmedseq   LIKE mmed_t.mmedseq,
#       mmed001   LIKE mmed_t.mmed001,
#       mmed002   LIKE mmed_t.mmed002,
#       mmed003   LIKE mmed_t.mmed003,
#       mmed005   LIKE mmed_t.mmed005,
#       mmed009   LIKE mmed_t.mmed009,
#       mmed010   LIKE mmed_t.mmed010,
#       mmed012   LIKE mmed_t.mmed012,
#       mmed014   LIKE mmed_t.mmed014,
#       mmed013   LIKE mmed_t.mmed013
#       
#END RECORD
# 
# #检查单头是否有资料
#   IF cl_null(g_rtia_m.rtiadocno) THEN 
#            INITIALIZE g_errparam TO NULL
#             LET g_errparam.code = "amm-29110"
#             LET g_errparam.extend = ""
#             LET g_errparam.popup = TRUE
#             CALL cl_err()
#      RETURN 
#   END IF 
#   #只有未审核的单据才可以处理
#   IF g_rtia_m.rtiastus <> 'N' THEN 
#             INITIALIZE g_errparam TO NULL
#             LET g_errparam.code = "amm-29111"
#             LET g_errparam.extend = ""
#             LET g_errparam.popup = TRUE
#             CALL cl_err()
#      RETURN 
#   END IF 
#   CALL ammt405_10_input()
#   IF cl_null(g_mmaq001) OR cl_null(g_mmaq001_2) THEN 
#      RETURN 
#   END IF 
#   #查出输入的卡种
#    SELECT mmaq002 INTO l_mmaq002
#     FROM mmaq_t
#    WHERE mmaqent = g_enterprise
#      AND mmaq001 = g_mmaq001
#    #卡号总长度，固定码长度
#   SELECT mman005,mman006
#     INTO l_mman005,l_mman006
#     FROM mman_t
#    WHERE mman001 = l_mmaq002
#      AND mmanent = g_enterprise #160905-00007#3 add
#   LET l_str = g_mmaq001
#   CALL s_transaction_begin()
#   WHILE TRUE
#      LET l_n = 0
#      SELECT COUNT(1) INTO l_n 
#        FROM mmed_t
#       WHERE mmedent = g_enterprise
#         AND mmeddocno = g_rtia_m.rtiadocno
#         AND mmed001 = l_str
#    #不存在单身则新增，否则直接过
#      IF l_n = 0 THEN 
#         ##########start###################
#         SELECT MAX(mmedseq)+1 INTO l_mmedseq
#         FROM mmed_t
#         WHERE mmedent = g_enterprise
#         AND mmeddocno = g_rtia_m.rtiadocno
#         IF cl_null(l_mmedseq) THEN 
#         LET l_mmedseq = 1
#         END IF 
#         LET l_mmed004 = -1
#         
#          LET g_errno = ''
#      SELECT mmaq006,mmaq002,mmaq003,mmaq009,mmaq032,mmaq005,mmanstus
#        INTO l_mmaq006,l_mmaq002,l_mmaq003,l_mmaq009,l_mmaq032,l_mmaq005,l_mmanstus
#        FROM mmaq_t,mman_t
#       WHERE mmaqent = g_enterprise
#         AND mmanent = mmaqent
#         AND mman001 = mmaq002       
#         AND mmaq001 = l_str
#   CASE 
#         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00323'
#         WHEN l_mmaq006 <> '3'    LET g_errno = 'amm-00335'
#         #WHEN l_mmaq005 < g_today LET g_errno = 'amm-00336'  ##mark by zhangnan 160728-00006#36
#         WHEN l_mmanstus <> 'Y'   LET g_errno = 'amm-00418'
#         WHEN l_mman042 IS NOT NULL AND l_mman042 = 'N' 
#                                  LET g_errno = 'amm-00427'
#         WHEN l_mman043 IS NOT NULL AND l_mman043 = 'N' AND l_value_cnt > 1    #160607-00024#1 160609 by lori add l_value_cnt
#                                  LET g_errno = 'amm-00450'
#         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
#   END CASE
#   #160728-00006#36  add by zhangnan --str 判断过期的卡时候是否可以注销
#   LET g_para = cl_get_para(g_enterprise,'',"E-CIR-0075")      
#    
#   IF cl_null(g_errno) THEN 
#      
#         CALL ammt405_card(l_str) RETURNING l_n
#      
#      IF l_n = 0 THEN 
#         LET g_errno = 'amm-00325'
#         RETURN 
#      END IF 
#   ELSE 
#      RETURN 
#   END IF 
#         #检查原卡卡号是否存在卡注销维护作业中
#         LET l_n = 0
#         SELECT COUNT(*) INTO l_n
#           FROM mmed_t
#          WHERE mmedent = g_enterprise
#            AND mmed001 = l_str
#            AND mmeddocno = g_rtia_m.rtiadocno
#         IF l_n > 0 THEN 
#           LET g_errno = 'amm-00399'
#           RETURN 
#         END IF 
#      SELECT mman054 INTO l_mman054
#        FROM mman_t
#       WHERE mmanent = g_enterprise
#         AND mman001 = l_mmaq002
#     
#      CALL ammt405_rtib_chk(l_mman054) RETURNING g_errno
#      IF NOT cl_null(g_errno) THEN 
#         RETURN 
#      END IF 
#  IF cl_null(g_errno) THEN 
#      #IF g_prog = 'ammt425' THEN        #160705-00042#11 160714 by sakura mark
#         LET l_mmed.mmedent = g_enterprise
#         LET l_mmed.mmeddocno = g_rtia_m.rtiadocno
#         LET l_mmed.mmedseq = l_mmedseq
#         LET l_mmed.mmed001 = l_str
##         LET g_mmea5_d[l_ac].mmaq002 = l_mmaq002
##         LET g_mmea5_d[l_ac].mmaq003 = l_mmaq003
#         LET l_mmed.mmed002 = l_mmaq009
#         LET l_mmed.mmed003 = l_mmaq032
#         LET l_mmed.mmed005 = l_mmaq009
#         LET l_mmed.mmed009 = l_mmaq032
#         LET l_mmed.mmed010 = 0
#         LET l_mmed.mmed012 = l_mmaq032 * (-1)
#         IF cl_null(l_mmed.mmed002) THEN 
#            LET l_mmed.mmed002 = 0
#         END IF 
#         IF cl_null(l_mmed.mmed005) THEN 
#            LET l_mmed.mmed005 = 0
#         END IF 
#         IF cl_null(l_mmed.mmed010) THEN 
#            LET l_mmed.mmed010 = 0
#         END IF 
#         IF cl_null(l_mmed.mmed012) THEN 
#            LET l_mmed.mmed012 = 0
#         END IF 
#         LET l_mmed.mmed002 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_mmed.mmed002,'1')
#         LET l_mmed.mmed005 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_mmed.mmed005,'1')
#         LET l_mmed.mmed010 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_mmed.mmed010,'2')
#         LET l_mmed.mmed012 = s_curr_round(g_rtia_m.rtiasite,g_rtia_m.rtia026,l_mmed.mmed012,'2')
##         LET g_ref_fields[1] = l_mmaq002
##         CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_lang||"'","") RETURNING g_rtn_fields
##         LET g_mmea5_d[l_ac].mmaq002_desc = '', g_rtn_fields[1] , ''   
##          IF cl_null(l_mmed.mmed013) THEN 
##            SELECT rtdx044 INTO l_mmed.mmed013
##              FROM rtdx_t
##             WHERE rtdxent = g_enterprise
##               AND rtdx001 = l_mman054
##               AND rtdxsite = g_rtia_m.rtiasite
#         IF cl_null(l_mmed.mmed013) THEN 
#            SELECT inaa001 INTO l_mmed.mmed013
#            FROM   inaa_t
#                  ,mmed_t
#            WHERE  inaaent = mmedent
#            AND    inaasite = mmedsite
#            AND    inaa001 = mmed013
#            AND    inaasite = g_rtia_m.rtiasite
#            AND    inaaent = g_enterprise
#            AND    inaa102 = '6'
#            ORDER BY inaa001
#            
##            INITIALIZE g_ref_fields TO NULL
##            LET g_ref_fields[1] = l_mmed.mmed013
##            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_lang||"'","") RETURNING g_rtn_fields
##            LET g_mmea5_d[l_ac].mmed013_desc_1 = '', g_rtn_fields[1] , ''
#         END IF 
#         
#   END IF 
#       INSERT INTO mmed_t
#                  (mmedent,
#                   mmeddocno,
#                   mmedseq
#                   ,mmed001,mmed002,mmed003,mmed005,mmed009,mmed010,mmed012,mmed014,mmed013) 
#            VALUES(l_mmed.mmedent,
#                   l_mmed.mmeddocno,
#                   l_mmed.mmedseq,
#                   l_mmed.mmed001,l_mmed.mmed002,l_mmed.mmed003,l_mmed.mmed005,l_mmed.mmed009,l_mmed.mmed010,l_mmed.mmed012,l_mmed.mmed014,l_mmed.mmed013) 
#
#       
#       ###########end####################
#        IF SQLCA.sqlcode THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "mmed_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               CALL s_transaction_end('N','0')
#               RETURN 
#       END IF
#       IF NOT ammt405_10_ins_rtib(l_mmed.*) THEN
#               CALL s_transaction_end('N','0')
#               RETURN 
#       END IF 
#      END IF 
#      IF l_str = g_gcbi002 THEN 
#         EXIT WHILE 
#      END IF 
#      LET l_str1 = l_str[l_mman006+1,l_mman005] + 1
#      LET l_str1 = l_str1.subString(1,l_str1.getIndexOf('.',1)-1)
#      
#      #流水码长度不够在前面补零
#      WHILE TRUE 
#         IF l_str1.getLength() <> l_mman005-l_mman006 THEN 
#            LET l_str1 = "0",l_str1.trim()
#         ELSE
#            EXIT WHILE 
#         END IF 
#      END WHILE 
#      LET l_str = l_str[1,l_mman006],l_str1
#      
#   END WHILE
#   CALL s_transaction_end('Y','0')
#   CALL ammt405_b_fill()
#   
#    
#  

END FUNCTION

 
{</section>}
 
