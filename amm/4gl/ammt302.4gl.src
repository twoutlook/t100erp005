#該程式未解開Section, 採用最新樣板產出!
{<section id="ammt302.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0014(2016-05-19 15:14:08), PR版次:0014(2016-11-21 14:39:37)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000392
#+ Filename...: ammt302
#+ Description: 會員等級變更維護作業
#+ Creator....: 01533(2013-12-02 14:44:17)
#+ Modifier...: 02159 -SD/PR- 02159
 
{</section>}
 
{<section id="ammt302.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#160318-00005#23  2016/03/30 by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#160816-00068#5   2016/08/17 By earl    調整transaction
#160818-00017#21  2016/08/24 By 08742   删除修改未重新判断状态码
#160905-00007#6   2016/09/05 By 02599   SQL条件增加ent
#160824-00007#109 2016/11/21 By sakura  新舊值備份處理
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mmcx_m        RECORD
       mmcxsite LIKE mmcx_t.mmcxsite, 
   mmcxsite_desc LIKE type_t.chr80, 
   mmcxdocdt LIKE mmcx_t.mmcxdocdt, 
   mmcxdocno LIKE mmcx_t.mmcxdocno, 
   mmcxunit LIKE mmcx_t.mmcxunit, 
   mmcx001 LIKE mmcx_t.mmcx001, 
   mmcx001_desc LIKE type_t.chr80, 
   mmcx002 LIKE mmcx_t.mmcx002, 
   mmcxstus LIKE mmcx_t.mmcxstus, 
   mmcxownid LIKE mmcx_t.mmcxownid, 
   mmcxownid_desc LIKE type_t.chr80, 
   mmcxowndp LIKE mmcx_t.mmcxowndp, 
   mmcxowndp_desc LIKE type_t.chr80, 
   mmcxcrtid LIKE mmcx_t.mmcxcrtid, 
   mmcxcrtid_desc LIKE type_t.chr80, 
   mmcxcrtdp LIKE mmcx_t.mmcxcrtdp, 
   mmcxcrtdp_desc LIKE type_t.chr80, 
   mmcxcrtdt LIKE mmcx_t.mmcxcrtdt, 
   mmcxmodid LIKE mmcx_t.mmcxmodid, 
   mmcxmodid_desc LIKE type_t.chr80, 
   mmcxmoddt LIKE mmcx_t.mmcxmoddt, 
   mmcxcnfid LIKE mmcx_t.mmcxcnfid, 
   mmcxcnfid_desc LIKE type_t.chr80, 
   mmcxcnfdt LIKE mmcx_t.mmcxcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mmcy_d        RECORD
       mmcysite LIKE mmcy_t.mmcysite, 
   mmcysite_desc LIKE type_t.chr500, 
   mmcy001 LIKE mmcy_t.mmcy001, 
   mmcy001_desc LIKE type_t.chr500, 
   mmcy002 LIKE mmcy_t.mmcy002, 
   mmcy002_desc LIKE type_t.chr500, 
   mmcy003 LIKE mmcy_t.mmcy003, 
   mmcy003_desc LIKE type_t.chr500, 
   mmcy004 LIKE mmcy_t.mmcy004, 
   mmcy004_desc LIKE type_t.chr500, 
   mmcy005 LIKE mmcy_t.mmcy005, 
   mmcy005_desc LIKE type_t.chr500, 
   mmcy006 LIKE mmcy_t.mmcy006, 
   mmcy006_desc LIKE type_t.chr500, 
   mmcy007 LIKE mmcy_t.mmcy007, 
   mmcyunit LIKE mmcy_t.mmcyunit
       END RECORD
PRIVATE TYPE type_g_mmcy2_d RECORD
       mmcz001 LIKE mmcz_t.mmcz001, 
   mmcz002 LIKE mmcz_t.mmcz002, 
   mmcz003 LIKE mmcz_t.mmcz003, 
   mmczunit LIKE mmcz_t.mmczunit, 
   mmczsite LIKE mmcz_t.mmczsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_mmcxdocno LIKE mmcx_t.mmcxdocno,
      b_mmcxdocdt LIKE mmcx_t.mmcxdocdt,
      b_mmcxsite LIKE mmcx_t.mmcxsite,
      b_mmcx001 LIKE mmcx_t.mmcx001,
      b_mmcx002 LIKE mmcx_t.mmcx002
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_assign_no    LIKE type_t.chr1
DEFINE g_site_flag   LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_mmcx_m          type_g_mmcx_m
DEFINE g_mmcx_m_t        type_g_mmcx_m
DEFINE g_mmcx_m_o        type_g_mmcx_m
DEFINE g_mmcx_m_mask_o   type_g_mmcx_m #轉換遮罩前資料
DEFINE g_mmcx_m_mask_n   type_g_mmcx_m #轉換遮罩後資料
 
   DEFINE g_mmcxdocno_t LIKE mmcx_t.mmcxdocno
 
 
DEFINE g_mmcy_d          DYNAMIC ARRAY OF type_g_mmcy_d
DEFINE g_mmcy_d_t        type_g_mmcy_d
DEFINE g_mmcy_d_o        type_g_mmcy_d
DEFINE g_mmcy_d_mask_o   DYNAMIC ARRAY OF type_g_mmcy_d #轉換遮罩前資料
DEFINE g_mmcy_d_mask_n   DYNAMIC ARRAY OF type_g_mmcy_d #轉換遮罩後資料
DEFINE g_mmcy2_d          DYNAMIC ARRAY OF type_g_mmcy2_d
DEFINE g_mmcy2_d_t        type_g_mmcy2_d
DEFINE g_mmcy2_d_o        type_g_mmcy2_d
DEFINE g_mmcy2_d_mask_o   DYNAMIC ARRAY OF type_g_mmcy2_d #轉換遮罩前資料
DEFINE g_mmcy2_d_mask_n   DYNAMIC ARRAY OF type_g_mmcy2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="ammt302.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT mmcxsite,'',mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,'',mmcx002,mmcxstus, 
       mmcxownid,'',mmcxowndp,'',mmcxcrtid,'',mmcxcrtdp,'',mmcxcrtdt,mmcxmodid,'',mmcxmoddt,mmcxcnfid, 
       '',mmcxcnfdt", 
                      " FROM mmcx_t",
                      " WHERE mmcxent= ? AND mmcxdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.mmcxsite,t0.mmcxdocdt,t0.mmcxdocno,t0.mmcxunit,t0.mmcx001,t0.mmcx002, 
       t0.mmcxstus,t0.mmcxownid,t0.mmcxowndp,t0.mmcxcrtid,t0.mmcxcrtdp,t0.mmcxcrtdt,t0.mmcxmodid,t0.mmcxmoddt, 
       t0.mmcxcnfid,t0.mmcxcnfdt,t1.ooefl003 ,t2.oocql004 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 , 
       t7.ooag011 ,t8.ooag011",
               " FROM mmcx_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.mmcxsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='2055' AND t2.oocql002=t0.mmcx001 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.mmcxownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.mmcxowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.mmcxcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.mmcxcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.mmcxmodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.mmcxcnfid  ",
 
               " WHERE t0.mmcxent = " ||g_enterprise|| " AND t0.mmcxdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE ammt302_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ammt302 WITH FORM cl_ap_formpath("amm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ammt302_init()   
 
      #進入選單 Menu (="N")
      CALL ammt302_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ammt302
      
   END IF 
   
   CLOSE ammt302_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_ammt302_drop_mmcztmp()
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="ammt302.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ammt302_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('mmcxstus','13','N,Y,X')
 
      CALL cl_set_combo_scc('mmcz002','6532') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
    CALL cl_set_combo_scc('mmcz002','6532')
    
    LET g_ooef004 = ''
    LET g_ooef005 = ''
    SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
    FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF  
   CALL s_ammt302_drop_mmcztmp()
   CALL s_ammt302_create_mmcztmp()
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
   
   #初始化搜尋條件
   CALL ammt302_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="ammt302.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION ammt302_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL ammt302_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_mmcx_m.* TO NULL
         CALL g_mmcy_d.clear()
         CALL g_mmcy2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL ammt302_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL ammt302_fetch('') # reload data
               LET l_ac = 1
               CALL ammt302_ui_detailshow() #Setting the current row 
         
               CALL ammt302_idx_chk()
               #NEXT FIELD mmcy001
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_mmcy_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt302_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL ammt302_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL ammt302_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL ammt302_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL ammt302_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL ammt302_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL ammt302_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL ammt302_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL ammt302_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL ammt302_set_act_visible()   
            CALL ammt302_set_act_no_visible()
            IF NOT (g_mmcx_m.mmcxdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " mmcxent = " ||g_enterprise|| " AND",
                                  " mmcxdocno = '", g_mmcx_m.mmcxdocno, "' "
 
               #填到對應位置
               CALL ammt302_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmcx_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmcy_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmcz_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL ammt302_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "mmcx_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmcy_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "mmcz_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL ammt302_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL ammt302_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL ammt302_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL ammt302_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL ammt302_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL ammt302_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL ammt302_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL ammt302_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL ammt302_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mmcy_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_mmcy2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mmcy001
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL ammt302_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL ammt302_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL ammt302_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ammt302_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION batchgen
            LET g_action_choice="batchgen"
            IF cl_auth_chk_act("batchgen") THEN
               
               #add-point:ON ACTION batchgen name="menu.batchgen"
               CALL ammt302_01(g_mmcx_m.mmcxdocno)
               CALL ammt302_b_fill()   #160511-00011#4 160601 by sakura add
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/amm/ammt302_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/amm/ammt302_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ammt302_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL ammt302_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ammt302_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ammt302_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_mmcx_m.mmcxdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="ammt302.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION ammt302_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL s_aooi500_sql_where(g_prog,'mmcxsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim() 
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT mmcxdocno ",
                      " FROM mmcx_t ",
                      " ",
                      " LEFT JOIN mmcy_t ON mmcyent = mmcxent AND mmcxdocno = mmcydocno ", "  ",
                      #add-point:browser_fill段sql(mmcy_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN mmcz_t ON mmczent = mmcxent AND mmcxdocno = mmczdocno", "  ",
                      #add-point:browser_fill段sql(mmcz_t1) name="browser_fill.cnt.join.mmcz_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE mmcxent = " ||g_enterprise|| " AND mmcyent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mmcx_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT mmcxdocno ",
                      " FROM mmcx_t ", 
                      "  ",
                      "  ",
                      " WHERE mmcxent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("mmcx_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_mmcx_m.* TO NULL
      CALL g_mmcy_d.clear()        
      CALL g_mmcy2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.mmcxdocno,t0.mmcxdocdt,t0.mmcxsite,t0.mmcx001,t0.mmcx002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.mmcxstus,t0.mmcxdocno,t0.mmcxdocdt,t0.mmcxsite,t0.mmcx001,t0.mmcx002 ", 
 
                  " FROM mmcx_t t0",
                  "  ",
                  "  LEFT JOIN mmcy_t ON mmcyent = mmcxent AND mmcxdocno = mmcydocno ", "  ", 
                  #add-point:browser_fill段sql(mmcy_t1) name="browser_fill.join.mmcy_t1"
                  
                  #end add-point
                  "  LEFT JOIN mmcz_t ON mmczent = mmcxent AND mmcxdocno = mmczdocno", "  ", 
                  #add-point:browser_fill段sql(mmcz_t1) name="browser_fill.join.mmcz_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                  
                  " WHERE t0.mmcxent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("mmcx_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.mmcxstus,t0.mmcxdocno,t0.mmcxdocdt,t0.mmcxsite,t0.mmcx001,t0.mmcx002 ", 
 
                  " FROM mmcx_t t0",
                  "  ",
                  
                  " WHERE t0.mmcxent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("mmcx_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY mmcxdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"mmcx_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_mmcxdocno,g_browser[g_cnt].b_mmcxdocdt, 
          g_browser[g_cnt].b_mmcxsite,g_browser[g_cnt].b_mmcx001,g_browser[g_cnt].b_mmcx002
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL ammt302_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_mmcxdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION ammt302_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_mmcx_m.mmcxdocno = g_browser[g_current_idx].b_mmcxdocno   
 
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   CALL ammt302_mmcx_t_mask()
   CALL ammt302_show()
      
END FUNCTION
 
{</section>}
 
{<section id="ammt302.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION ammt302_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION ammt302_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mmcxdocno = g_mmcx_m.mmcxdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION ammt302_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_mmcx_m.* TO NULL
   CALL g_mmcy_d.clear()        
   CALL g_mmcy2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus,mmcxownid, 
          mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxmodid,mmcxmoddt,mmcxcnfid,mmcxcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<mmcxcrtdt>>----
         AFTER FIELD mmcxcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<mmcxmoddt>>----
         AFTER FIELD mmcxmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmcxcnfdt>>----
         AFTER FIELD mmcxcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mmcxpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.mmcxsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxsite
            #add-point:ON ACTION controlp INFIELD mmcxsite name="construct.c.mmcxsite"
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcxsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mmcxsite  #顯示到畫面上

            NEXT FIELD mmcxsite                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxsite
            #add-point:BEFORE FIELD mmcxsite name="construct.b.mmcxsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxsite
            
            #add-point:AFTER FIELD mmcxsite name="construct.a.mmcxsite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxdocdt
            #add-point:BEFORE FIELD mmcxdocdt name="construct.b.mmcxdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxdocdt
            
            #add-point:AFTER FIELD mmcxdocdt name="construct.a.mmcxdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxdocdt
            #add-point:ON ACTION controlp INFIELD mmcxdocdt name="construct.c.mmcxdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmcxdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxdocno
            #add-point:ON ACTION controlp INFIELD mmcxdocno name="construct.c.mmcxdocno"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcxdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxdocno  #顯示到畫面上

            NEXT FIELD mmcxdocno                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxdocno
            #add-point:BEFORE FIELD mmcxdocno name="construct.b.mmcxdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxdocno
            
            #add-point:AFTER FIELD mmcxdocno name="construct.a.mmcxdocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxunit
            #add-point:ON ACTION controlp INFIELD mmcxunit name="construct.c.mmcxunit"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcxunit',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mmcxunit  #顯示到畫面上

            NEXT FIELD mmcxunit                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxunit
            #add-point:BEFORE FIELD mmcxunit name="construct.b.mmcxunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxunit
            
            #add-point:AFTER FIELD mmcxunit name="construct.a.mmcxunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcx001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcx001
            #add-point:ON ACTION controlp INFIELD mmcx001 name="construct.c.mmcx001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '2055'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcx001  #顯示到畫面上

            NEXT FIELD mmcx001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcx001
            #add-point:BEFORE FIELD mmcx001 name="construct.b.mmcx001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcx001
            
            #add-point:AFTER FIELD mmcx001 name="construct.a.mmcx001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcx002
            #add-point:BEFORE FIELD mmcx002 name="construct.b.mmcx002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcx002
            
            #add-point:AFTER FIELD mmcx002 name="construct.a.mmcx002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcx002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcx002
            #add-point:ON ACTION controlp INFIELD mmcx002 name="construct.c.mmcx002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxstus
            #add-point:BEFORE FIELD mmcxstus name="construct.b.mmcxstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxstus
            
            #add-point:AFTER FIELD mmcxstus name="construct.a.mmcxstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxstus
            #add-point:ON ACTION controlp INFIELD mmcxstus name="construct.c.mmcxstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmcxownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxownid
            #add-point:ON ACTION controlp INFIELD mmcxownid name="construct.c.mmcxownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxownid  #顯示到畫面上

            NEXT FIELD mmcxownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxownid
            #add-point:BEFORE FIELD mmcxownid name="construct.b.mmcxownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxownid
            
            #add-point:AFTER FIELD mmcxownid name="construct.a.mmcxownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxowndp
            #add-point:ON ACTION controlp INFIELD mmcxowndp name="construct.c.mmcxowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxowndp  #顯示到畫面上

            NEXT FIELD mmcxowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxowndp
            #add-point:BEFORE FIELD mmcxowndp name="construct.b.mmcxowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxowndp
            
            #add-point:AFTER FIELD mmcxowndp name="construct.a.mmcxowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxcrtid
            #add-point:ON ACTION controlp INFIELD mmcxcrtid name="construct.c.mmcxcrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcrtid  #顯示到畫面上

            NEXT FIELD mmcxcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxcrtid
            #add-point:BEFORE FIELD mmcxcrtid name="construct.b.mmcxcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxcrtid
            
            #add-point:AFTER FIELD mmcxcrtid name="construct.a.mmcxcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mmcxcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxcrtdp
            #add-point:ON ACTION controlp INFIELD mmcxcrtdp name="construct.c.mmcxcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcrtdp  #顯示到畫面上

            NEXT FIELD mmcxcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxcrtdp
            #add-point:BEFORE FIELD mmcxcrtdp name="construct.b.mmcxcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxcrtdp
            
            #add-point:AFTER FIELD mmcxcrtdp name="construct.a.mmcxcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxcrtdt
            #add-point:BEFORE FIELD mmcxcrtdt name="construct.b.mmcxcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmcxmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxmodid
            #add-point:ON ACTION controlp INFIELD mmcxmodid name="construct.c.mmcxmodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxmodid  #顯示到畫面上

            NEXT FIELD mmcxmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxmodid
            #add-point:BEFORE FIELD mmcxmodid name="construct.b.mmcxmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxmodid
            
            #add-point:AFTER FIELD mmcxmodid name="construct.a.mmcxmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxmoddt
            #add-point:BEFORE FIELD mmcxmoddt name="construct.b.mmcxmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.mmcxcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxcnfid
            #add-point:ON ACTION controlp INFIELD mmcxcnfid name="construct.c.mmcxcnfid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcxcnfid  #顯示到畫面上

            NEXT FIELD mmcxcnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxcnfid
            #add-point:BEFORE FIELD mmcxcnfid name="construct.b.mmcxcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxcnfid
            
            #add-point:AFTER FIELD mmcxcnfid name="construct.a.mmcxcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxcnfdt
            #add-point:BEFORE FIELD mmcxcnfdt name="construct.b.mmcxcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit 
 
           FROM s_detail1[1].mmcysite,s_detail1[1].mmcy001,s_detail1[1].mmcy002,s_detail1[1].mmcy003, 
               s_detail1[1].mmcy004,s_detail1[1].mmcy005,s_detail1[1].mmcy006,s_detail1[1].mmcy007,s_detail1[1].mmcyunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.mmcysite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcysite
            #add-point:ON ACTION controlp INFIELD mmcysite name="construct.c.page1.mmcysite"
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcysite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mmcysite  #顯示到畫面上

            NEXT FIELD mmcysite                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcysite
            #add-point:BEFORE FIELD mmcysite name="construct.b.page1.mmcysite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcysite
            
            #add-point:AFTER FIELD mmcysite name="construct.a.page1.mmcysite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy001
            #add-point:ON ACTION controlp INFIELD mmcy001 name="construct.c.page1.mmcy001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmaf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy001  #顯示到畫面上

            NEXT FIELD mmcy001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy001
            #add-point:BEFORE FIELD mmcy001 name="construct.b.page1.mmcy001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy001
            
            #add-point:AFTER FIELD mmcy001 name="construct.a.page1.mmcy001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy002
            #add-point:BEFORE FIELD mmcy002 name="construct.b.page1.mmcy002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy002
            
            #add-point:AFTER FIELD mmcy002 name="construct.a.page1.mmcy002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy002
            #add-point:ON ACTION controlp INFIELD mmcy002 name="construct.c.page1.mmcy002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2024'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy002  #顯示到畫面上

            NEXT FIELD mmcy002                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy003
            #add-point:BEFORE FIELD mmcy003 name="construct.b.page1.mmcy003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy003
            
            #add-point:AFTER FIELD mmcy003 name="construct.a.page1.mmcy003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy003
            #add-point:ON ACTION controlp INFIELD mmcy003 name="construct.c.page1.mmcy003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2024'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy003  #顯示到畫面上

            NEXT FIELD mmcy003                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy004
            #add-point:BEFORE FIELD mmcy004 name="construct.b.page1.mmcy004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy004
            
            #add-point:AFTER FIELD mmcy004 name="construct.a.page1.mmcy004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy004
            #add-point:ON ACTION controlp INFIELD mmcy004 name="construct.c.page1.mmcy004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2025'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy004  #顯示到畫面上

            NEXT FIELD mmcy004                    #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.page1.mmcy005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy005
            #add-point:ON ACTION controlp INFIELD mmcy005 name="construct.c.page1.mmcy005"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2055' 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy005  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmcy005                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy005
            #add-point:BEFORE FIELD mmcy005 name="construct.b.page1.mmcy005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy005
            
            #add-point:AFTER FIELD mmcy005 name="construct.a.page1.mmcy005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy006
            #add-point:BEFORE FIELD mmcy006 name="construct.b.page1.mmcy006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy006
            
            #add-point:AFTER FIELD mmcy006 name="construct.a.page1.mmcy006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy006
            #add-point:ON ACTION controlp INFIELD mmcy006 name="construct.c.page1.mmcy006"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mmcu001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mmcy006  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oocq010 #參考欄位七 

            NEXT FIELD mmcy006                    #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy007
            #add-point:BEFORE FIELD mmcy007 name="construct.b.page1.mmcy007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy007
            
            #add-point:AFTER FIELD mmcy007 name="construct.a.page1.mmcy007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcy007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy007
            #add-point:ON ACTION controlp INFIELD mmcy007 name="construct.c.page1.mmcy007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcyunit
            #add-point:BEFORE FIELD mmcyunit name="construct.b.page1.mmcyunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcyunit
            
            #add-point:AFTER FIELD mmcyunit name="construct.a.page1.mmcyunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mmcyunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcyunit
            #add-point:ON ACTION controlp INFIELD mmcyunit name="construct.c.page1.mmcyunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON mmcz001,mmcz002,mmcz003,mmczunit,mmczsite
           FROM s_detail2[1].mmcz001,s_detail2[1].mmcz002,s_detail2[1].mmcz003,s_detail2[1].mmczunit, 
               s_detail2[1].mmczsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcz001
            #add-point:BEFORE FIELD mmcz001 name="construct.b.page2.mmcz001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcz001
            
            #add-point:AFTER FIELD mmcz001 name="construct.a.page2.mmcz001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmcz001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcz001
            #add-point:ON ACTION controlp INFIELD mmcz001 name="construct.c.page2.mmcz001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcz002
            #add-point:BEFORE FIELD mmcz002 name="construct.b.page2.mmcz002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcz002
            
            #add-point:AFTER FIELD mmcz002 name="construct.a.page2.mmcz002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmcz002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcz002
            #add-point:ON ACTION controlp INFIELD mmcz002 name="construct.c.page2.mmcz002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcz003
            #add-point:BEFORE FIELD mmcz003 name="construct.b.page2.mmcz003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcz003
            
            #add-point:AFTER FIELD mmcz003 name="construct.a.page2.mmcz003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmcz003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcz003
            #add-point:ON ACTION controlp INFIELD mmcz003 name="construct.c.page2.mmcz003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmczunit
            #add-point:BEFORE FIELD mmczunit name="construct.b.page2.mmczunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmczunit
            
            #add-point:AFTER FIELD mmczunit name="construct.a.page2.mmczunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmczunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmczunit
            #add-point:ON ACTION controlp INFIELD mmczunit name="construct.c.page2.mmczunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmczsite
            #add-point:BEFORE FIELD mmczsite name="construct.b.page2.mmczsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmczsite
            
            #add-point:AFTER FIELD mmczsite name="construct.a.page2.mmczsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mmczsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmczsite
            #add-point:ON ACTION controlp INFIELD mmczsite name="construct.c.page2.mmczsite"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "mmcx_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmcy_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "mmcz_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION ammt302_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON mmcxdocno,mmcxdocdt,mmcxsite,mmcx001,mmcx002
                          FROM s_browse[1].b_mmcxdocno,s_browse[1].b_mmcxdocdt,s_browse[1].b_mmcxsite, 
                              s_browse[1].b_mmcx001,s_browse[1].b_mmcx002
 
         BEFORE CONSTRUCT
               DISPLAY ammt302_filter_parser('mmcxdocno') TO s_browse[1].b_mmcxdocno
            DISPLAY ammt302_filter_parser('mmcxdocdt') TO s_browse[1].b_mmcxdocdt
            DISPLAY ammt302_filter_parser('mmcxsite') TO s_browse[1].b_mmcxsite
            DISPLAY ammt302_filter_parser('mmcx001') TO s_browse[1].b_mmcx001
            DISPLAY ammt302_filter_parser('mmcx002') TO s_browse[1].b_mmcx002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL ammt302_filter_show('mmcxdocno')
   CALL ammt302_filter_show('mmcxdocdt')
   CALL ammt302_filter_show('mmcxsite')
   CALL ammt302_filter_show('mmcx001')
   CALL ammt302_filter_show('mmcx002')
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION ammt302_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION ammt302_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ammt302_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION ammt302_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mmcy_d.clear()
   CALL g_mmcy2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL ammt302_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL ammt302_browser_fill("")
      CALL ammt302_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL ammt302_filter_show('mmcxdocno')
   CALL ammt302_filter_show('mmcxdocdt')
   CALL ammt302_filter_show('mmcxsite')
   CALL ammt302_filter_show('mmcx001')
   CALL ammt302_filter_show('mmcx002')
   CALL ammt302_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL ammt302_fetch("F") 
      #顯示單身筆數
      CALL ammt302_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION ammt302_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mmcx_m.mmcxdocno = g_browser[g_current_idx].b_mmcxdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   #遮罩相關處理
   LET g_mmcx_m_mask_o.* =  g_mmcx_m.*
   CALL ammt302_mmcx_t_mask()
   LET g_mmcx_m_mask_n.* =  g_mmcx_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt302_set_act_visible()   
   CALL ammt302_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   IF g_mmcx_m.mmcxstus = 'Y' OR g_mmcx_m.mmcxstus  = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   END IF
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_mmcx_m_t.* = g_mmcx_m.*
   LET g_mmcx_m_o.* = g_mmcx_m.*
   
   LET g_data_owner = g_mmcx_m.mmcxownid      
   LET g_data_dept  = g_mmcx_m.mmcxowndp
   
   #重新顯示   
   CALL ammt302_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.insert" >}
#+ 資料新增
PRIVATE FUNCTION ammt302_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   #ken---add---s 需求單號：141125-00002 項次：4
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004 
   DEFINE l_insert      LIKE type_t.num5
   #ken---add---e
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_mmcy_d.clear()   
   CALL g_mmcy2_d.clear()  
 
 
   INITIALIZE g_mmcx_m.* TO NULL             #DEFAULT 設定
   
   LET g_mmcxdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_mmcx_m.mmcxownid = g_user
      LET g_mmcx_m.mmcxowndp = g_dept
      LET g_mmcx_m.mmcxcrtid = g_user
      LET g_mmcx_m.mmcxcrtdp = g_dept 
      LET g_mmcx_m.mmcxcrtdt = cl_get_current()
      LET g_mmcx_m.mmcxmodid = g_user
      LET g_mmcx_m.mmcxmoddt = cl_get_current()
      LET g_mmcx_m.mmcxstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_mmcx_m.mmcxstus = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
#      LET g_mmcx_m.mmcxsite = g_site
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'mmcxsite',g_mmcx_m.mmcxsite)
         RETURNING l_insert,g_mmcx_m.mmcxsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_mmcx_m.mmcxunit = g_site
      LET g_mmcx_m.mmcxdocdt = g_today
      LET g_mmcx_m.mmcxstus = 'N'
      LET g_mmcx_m.mmcx002 = g_today
      #ken---add---s 需求單號：141125-00002 項次：4
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_mmcx_m.mmcxsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_mmcx_m.mmcxdocno = l_doctype
      #ken---add---e
      LET g_mmcx_m_t.* = g_mmcx_m.*
      CALL ammt302_mmcxsite_ref()
      
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_mmcx_m_t.* = g_mmcx_m.*
      LET g_mmcx_m_o.* = g_mmcx_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmcx_m.mmcxstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL ammt302_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_mmcx_m.* TO NULL
         INITIALIZE g_mmcy_d TO NULL
         INITIALIZE g_mmcy2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL ammt302_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_mmcy_d.clear()
      #CALL g_mmcy2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt302_set_act_visible()   
   CALL ammt302_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmcxent = " ||g_enterprise|| " AND",
                      " mmcxdocno = '", g_mmcx_m.mmcxdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt302_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE ammt302_cl
   
   CALL ammt302_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   
   #遮罩相關處理
   LET g_mmcx_m_mask_o.* =  g_mmcx_m.*
   CALL ammt302_mmcx_t_mask()
   LET g_mmcx_m_mask_n.* =  g_mmcx_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
       g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtid_desc, 
       g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmodid_desc, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_mmcx_m.mmcxownid      
   LET g_data_dept  = g_mmcx_m.mmcxowndp
   
   #功能已完成,通報訊息中心
   CALL ammt302_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.modify" >}
#+ 資料修改
PRIVATE FUNCTION ammt302_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_mmcx_m_t.* = g_mmcx_m.*
   LET g_mmcx_m_o.* = g_mmcx_m.*
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   CALL s_transaction_begin()
   
   OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt302_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   #檢查是否允許此動作
   IF NOT ammt302_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmcx_m_mask_o.* =  g_mmcx_m.*
   CALL ammt302_mmcx_t_mask()
   LET g_mmcx_m_mask_n.* =  g_mmcx_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL ammt302_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_mmcx_m.mmcxmodid = g_user 
LET g_mmcx_m.mmcxmoddt = cl_get_current()
LET g_mmcx_m.mmcxmodid_desc = cl_get_username(g_mmcx_m.mmcxmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_mmcx_m.mmcxstus MATCHES "[DR]" THEN
         LET g_mmcx_m.mmcxstus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL ammt302_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE mmcx_t SET (mmcxmodid,mmcxmoddt) = (g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmoddt)
          WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcxdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_mmcx_m.* = g_mmcx_m_t.*
            CALL ammt302_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_mmcx_m.mmcxdocno != g_mmcx_m_t.mmcxdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE mmcy_t SET mmcydocno = g_mmcx_m.mmcxdocno
 
          WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m_t.mmcxdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmcy_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE mmcz_t
            SET mmczdocno = g_mmcx_m.mmcxdocno
 
          WHERE mmczent = g_enterprise AND
                mmczdocno = g_mmcxdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "mmcz_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmcz_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt302_set_act_visible()   
   CALL ammt302_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " mmcxent = " ||g_enterprise|| " AND",
                      " mmcxdocno = '", g_mmcx_m.mmcxdocno, "' "
 
   #填到對應位置
   CALL ammt302_browser_fill("")
 
   CLOSE ammt302_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt302_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="ammt302.input" >}
#+ 資料輸入
PRIVATE FUNCTION ammt302_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_flag          LIKE type_t.num5
   DEFINE t_mmcy001       LIKE mmcy_t.mmcy001
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
       g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtid_desc, 
       g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmodid_desc, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit  
       FROM mmcy_t WHERE mmcyent=? AND mmcydocno=? AND mmcy001=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT mmcz001,mmcz002,mmcz003,mmczunit,mmczsite FROM mmcz_t WHERE mmczent=?  
       AND mmczdocno=? AND mmcz001=? AND mmcz002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ammt302_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL ammt302_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL ammt302_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001, 
       g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="ammt302.input.head" >}
      #單頭段
      INPUT BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001, 
          g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt302_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt302_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL ammt302_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL ammt302_set_entry(p_cmd)
            CALL ammt302_set_no_entry(p_cmd)
            #end add-point
            CALL ammt302_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxsite
            
            #add-point:AFTER FIELD mmcxsite name="input.a.mmcxsite"
            LET  g_mmcx_m.mmcxsite_desc = ' '
            DISPLAY BY NAME  g_mmcx_m.mmcxsite_desc
            IF NOT cl_null( g_mmcx_m.mmcxsite) THEN
#               INITIALIZE g_chkparam.* TO NULL
#               LET g_errshow = '1'
#               LET g_chkparam.arg1 = g_mmcx_m.mmcxsite
#               LET g_chkparam.arg2 = '8'
#               LET g_chkparam.arg3 = g_site
#               IF NOT cl_chk_exist("v_ooed004") THEN
#                  LET g_mmcx_m.mmcxsite = g_mmcx_m_t.mmcxsite
#                  CALL ammt302_mmcxsite_ref()
#                  NEXT FIELD CURRENT
#               END IF

               CALL s_aooi500_chk(g_prog,'mmcxsite',g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_mmcx_m.mmcxsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_mmcx_m.mmcxsite = g_mmcx_m_t.mmcxsite
                  CALL s_desc_get_department_desc(g_mmcx_m.mmcxsite) RETURNING g_mmcx_m.mmcxsite_desc
                  DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc
                  NEXT FIELD CURRENT
               END IF

               LET g_site_flag = TRUE 
               CALL ammt302_mmcxsite_ref()               
            END IF
            CALL ammt302_mmcxsite_ref()
            CALL ammt302_set_entry(p_cmd)
            CALL ammt302_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxsite
            #add-point:BEFORE FIELD mmcxsite name="input.b.mmcxsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcxsite
            #add-point:ON CHANGE mmcxsite name="input.g.mmcxsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxdocdt
            #add-point:BEFORE FIELD mmcxdocdt name="input.b.mmcxdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxdocdt
            
            #add-point:AFTER FIELD mmcxdocdt name="input.a.mmcxdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcxdocdt
            #add-point:ON CHANGE mmcxdocdt name="input.g.mmcxdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxdocno
            #add-point:BEFORE FIELD mmcxdocno name="input.b.mmcxdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxdocno
            
            #add-point:AFTER FIELD mmcxdocno name="input.a.mmcxdocno"
            #此段落由子樣板a05產生
            IF NOT cl_null(g_mmcx_m.mmcxdocno) AND p_cmd = 'a' THEN
               IF NOT ammt302_chk_mmcxdocno() THEN
                  LET g_mmcx_m.mmcxdocno = g_mmcx_m_t.mmcxdocno
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_mmcx_m.mmcxdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcx_t WHERE "||"mmcxent = '" ||g_enterprise|| "' AND "||"mmcxdocno = '"||g_mmcx_m.mmcxdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcxdocno
            #add-point:ON CHANGE mmcxdocno name="input.g.mmcxdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxunit
            #add-point:BEFORE FIELD mmcxunit name="input.b.mmcxunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxunit
            
            #add-point:AFTER FIELD mmcxunit name="input.a.mmcxunit"
           

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcxunit
            #add-point:ON CHANGE mmcxunit name="input.g.mmcxunit"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcx001
            
            #add-point:AFTER FIELD mmcx001 name="input.a.mmcx001"
            LET g_mmcx_m.mmcx001_desc = ''
            DISPLAY BY NAME g_mmcx_m.mmcx001_desc
            IF NOT cl_null(g_mmcx_m.mmcx001) THEN
               IF NOT ammt302_mmcx001_chk(g_mmcx_m.mmcx001) THEN
                  LET g_mmcx_m.mmcx001 = g_mmcx_m_t.mmcx001
                  CALL ammt302_mmcx001_ref()
                  NEXT FIELD mmcx001
               END IF
            END IF
            CALL ammt302_mmcx001_ref()


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcx001
            #add-point:BEFORE FIELD mmcx001 name="input.b.mmcx001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcx001
            #add-point:ON CHANGE mmcx001 name="input.g.mmcx001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcx002
            #add-point:BEFORE FIELD mmcx002 name="input.b.mmcx002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcx002
            
            #add-point:AFTER FIELD mmcx002 name="input.a.mmcx002"
            IF NOT cl_null(g_mmcx_m.mmcx002) THEN
               IF g_mmcx_m.mmcx002 > g_today THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00187'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
 
                  LET g_mmcx_m.mmcx002 = g_mmcx_m_t.mmcx002
                  NEXT FIELD mmcx002
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcx002
            #add-point:ON CHANGE mmcx002 name="input.g.mmcx002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcxstus
            #add-point:BEFORE FIELD mmcxstus name="input.b.mmcxstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcxstus
            
            #add-point:AFTER FIELD mmcxstus name="input.a.mmcxstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcxstus
            #add-point:ON CHANGE mmcxstus name="input.g.mmcxstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.mmcxsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxsite
            #add-point:ON ACTION controlp INFIELD mmcxsite name="input.c.mmcxsite"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcxsite       #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = "8" #
#
#            CALL q_ooed004()                                   #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcxsite',g_mmcx_m.mmcxsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()
            LET g_mmcx_m.mmcxsite = g_qryparam.return1              
          
            DISPLAY g_mmcx_m.mmcxsite  TO mmcxsite              #顯示到畫面上
            CALL ammt302_mmcxsite_ref()
            NEXT FIELD mmcxsite                                 #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.mmcxdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxdocdt
            #add-point:ON ACTION controlp INFIELD mmcxdocdt name="input.c.mmcxdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.mmcxdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxdocno
            #add-point:ON ACTION controlp INFIELD mmcxdocno name="input.c.mmcxdocno"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcxdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            #LET g_qryparam.arg2 = 'ammt302' #   #160705-00042#3 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#3 160711 by sakura add

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_mmcx_m.mmcxdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcxdocno TO mmcxdocno              #顯示到畫面上

            NEXT FIELD mmcxdocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmcxunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxunit
            #add-point:ON ACTION controlp INFIELD mmcxunit name="input.c.mmcxunit"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = '8'
            LET g_qryparam.default1 = g_mmcx_m.mmcxunit             #給予default值

            #給予arg

#            CALL q_ooed004()                             #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcxunit',g_mmcx_m.mmcxsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()
            LET g_mmcx_m.mmcxunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcxunit TO mmcxunit              #顯示到畫面上

            NEXT FIELD mmcxunit                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmcx001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcx001
            #add-point:ON ACTION controlp INFIELD mmcx001 name="input.c.mmcx001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcx_m.mmcx001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '2055' 

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmcx_m.mmcx001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcx_m.mmcx001 TO mmcx001              #顯示到畫面上
            CALL  ammt302_mmcx001_ref()
            NEXT FIELD mmcx001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mmcx002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcx002
            #add-point:ON ACTION controlp INFIELD mmcx002 name="input.c.mmcx002"
            
            #END add-point
 
 
         #Ctrlp:input.c.mmcxstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcxstus
            #add-point:ON ACTION controlp INFIELD mmcxstus name="input.c.mmcxstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_mmcx_m.mmcxdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
                  CALL s_aooi200_gen_docno(g_site,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxdocdt,g_prog) RETURNING l_flag,g_mmcx_m.mmcxdocno
                  IF NOT l_flag THEN
                     NEXT FIELD mmcxdocno
                  END IF
               #end add-point
               
               INSERT INTO mmcx_t (mmcxent,mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus, 
                   mmcxownid,mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxmodid,mmcxmoddt,mmcxcnfid,mmcxcnfdt) 
 
               VALUES (g_enterprise,g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
                   g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid,g_mmcx_m.mmcxowndp, 
                   g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmoddt, 
                   g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_mmcx_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL ammt302_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL ammt302_b_fill()
                  CALL ammt302_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL ammt302_mmcx_t_mask_restore('restore_mask_o')
               
               UPDATE mmcx_t SET (mmcxsite,mmcxdocdt,mmcxdocno,mmcxunit,mmcx001,mmcx002,mmcxstus,mmcxownid, 
                   mmcxowndp,mmcxcrtid,mmcxcrtdp,mmcxcrtdt,mmcxmodid,mmcxmoddt,mmcxcnfid,mmcxcnfdt) = (g_mmcx_m.mmcxsite, 
                   g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002, 
                   g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp, 
                   g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt) 
 
                WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcxdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "mmcx_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL ammt302_mmcx_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_mmcx_m_t)
               LET g_log2 = util.JSON.stringify(g_mmcx_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="ammt302.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_mmcy_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mmcy_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ammt302_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_mmcy_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN ammt302_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE ammt302_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_mmcy_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_mmcy_d[l_ac].mmcy001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mmcy_d_t.* = g_mmcy_d[l_ac].*  #BACKUP
               LET g_mmcy_d_o.* = g_mmcy_d[l_ac].*  #BACKUP
               CALL ammt302_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL ammt302_set_no_entry_b(l_cmd)
               IF NOT ammt302_lock_b("mmcy_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ammt302_bcl INTO g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001,g_mmcy_d[l_ac].mmcy002, 
                      g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005,g_mmcy_d[l_ac].mmcy006, 
                      g_mmcy_d[l_ac].mmcy007,g_mmcy_d[l_ac].mmcyunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_mmcy_d_t.mmcy001,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mmcy_d_mask_o[l_ac].* =  g_mmcy_d[l_ac].*
                  CALL ammt302_mmcy_t_mask()
                  LET g_mmcy_d_mask_n[l_ac].* =  g_mmcy_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL ammt302_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET t_mmcy001 = g_mmcy_d[l_ac].mmcy001
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mmcy_d[l_ac].* TO NULL 
            INITIALIZE g_mmcy_d_t.* TO NULL 
            INITIALIZE g_mmcy_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_mmcy_d_t.* = g_mmcy_d[l_ac].*     #新輸入資料
            LET g_mmcy_d_o.* = g_mmcy_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL ammt302_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL ammt302_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mmcy_d[li_reproduce_target].* = g_mmcy_d[li_reproduce].*
 
               LET g_mmcy_d[li_reproduce_target].mmcy001 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_mmcy_d[l_ac].mmcysite = g_mmcx_m.mmcxsite
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
            LET g_mmcy_d[l_ac].mmcyunit = g_mmcx_m.mmcxunit 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mmcy_t 
             WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno
 
               AND mmcy001 = g_mmcy_d[l_ac].mmcy001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmcx_m.mmcxdocno
               LET gs_keys[2] = g_mmcy_d[g_detail_idx].mmcy001
               CALL ammt302_insert_b('mmcy_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               IF NOT s_ammt302_ins_mmcz() THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = "std-00006"
                   LET g_errparam.extend = 'INSERT'
                   LET g_errparam.popup = TRUE
                   CALL cl_err()

                   INITIALIZE g_mmcy_d[l_ac].* TO NULL
                   CALL s_transaction_end('N','0')
                   CANCEL INSERT
               END IF  
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_mmcy_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ammt302_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               DELETE FROM mmcz_t
                WHERE mmczent =g_enterprise AND mmczdocno = g_mmcx_m.mmcxdocno AND mmcz001 = g_mmcy_d_t.mmcy001
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "del mmcz_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_mmcx_m.mmcxdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_mmcy_d_t.mmcy001
 
            
               #刪除同層單身
               IF NOT ammt302_delete_b('mmcy_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt302_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT ammt302_key_delete_b(gs_keys,'mmcy_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE ammt302_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE ammt302_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_mmcy_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               CALL ammt302_b2_reflesh() 
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_mmcy_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcysite
            
            #add-point:AFTER FIELD mmcysite name="input.a.page1.mmcysite"
       
            LET g_mmcy_d[l_ac].mmcysite_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcysite) THEN
     
#                INITIALIZE g_chkparam.* TO NULL
#                LET g_errshow = '1'
#                LET g_chkparam.arg1 = g_mmcy_d[l_ac].mmcysite
#                LET g_chkparam.arg2 = '8'
#                LET g_chkparam.arg3 = g_mmcx_m.mmcxsite
#                IF NOT cl_chk_exist("v_ooed004") THEN
#                   LET g_mmcy_d[l_ac].mmcysite = g_mmcy_d_t.mmcysite
#                   LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
#                   NEXT FIELD CURRENT
#                END IF
               CALL s_aooi500_chk(g_prog,'mmcysite',g_mmcy_d[l_ac].mmcysite,g_mmcx_m.mmcxsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_mmcy_d[l_ac].mmcysite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_mmcy_d[l_ac].mmcysite = g_mmcy_d_t.mmcysite
                  CALL s_desc_get_department_desc(g_mmcy_d[l_ac].mmcysite) RETURNING g_mmcy_d[l_ac].mmcysite_desc
                  DISPLAY BY NAME g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcysite_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcysite
            #add-point:BEFORE FIELD mmcysite name="input.b.page1.mmcysite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcysite
            #add-point:ON CHANGE mmcysite name="input.g.page1.mmcysite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy001
            
            #add-point:AFTER FIELD mmcy001 name="input.a.page1.mmcy001"
            #此段落由子樣板a05產生
            LET g_mmcy_d[l_ac].mmcy001_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcy001) THEN
               IF NOT ammt302_mmcy001_chk(g_mmcy_d[l_ac].mmcy001) THEN
                  #LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001 #160824-00007#109 by sakura mark
                  LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_o.mmcy001  #160824-00007#109 by sakura add
                  LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                  NEXT FIELD mmcy001
               END IF
               IF g_mmcx_m.mmcxdocno IS NOT NULL AND g_mmcy_d[g_detail_idx].mmcy001 IS NOT NULL THEN 
                  #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mmcx_m.mmcxdocno != g_mmcxdocno_t OR g_mmcy_d[g_detail_idx].mmcy001 != g_mmcy_d_t.mmcy001)) THEN #160824-00008#109 by sakura mark
                  IF g_mmcy_d[l_ac].mmcy001 != g_mmcy_d_o.mmcy001 OR cl_null(g_mmcy_d_o.mmcy001) THEN #160824-00007#109 by sakura add
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mmcy_t WHERE "||"mmcyent = '" ||g_enterprise|| "' AND "||"mmcydocno = '"||g_mmcx_m.mmcxdocno ||"' AND "|| "mmcy001 = '"||g_mmcy_d[g_detail_idx].mmcy001 ||"'",'std-00004',0) THEN 
                        #LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001 #160824-00007#109 by sakura mark
                        LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_o.mmcy001  #160824-00007#109 by sakura add
                        LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               #IF l_cmd = 'a' OR  ( l_cmd = 'u' AND g_mmcy_d[l_ac].mmcy001 !=g_mmcy_d_t.mmcy001 ) THEN #160824-00008#109 by sakura mark
               IF g_mmcy_d[l_ac].mmcy001 != g_mmcy_d_o.mmcy001 OR cl_null(g_mmcy_d_o.mmcy001) THEN #160824-00007#109 by sakura add
                  DELETE FROM mmcz_t WHERE mmczent = g_enterprise AND mmczdocno = g_mmcx_m.mmcxdocno AND mmcz001 = t_mmcy001
                  IF NOT ammt302_mmcy001_other() THEN
                      #LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_t.mmcy001 #160824-00007#109 by sakura mark
                      LET g_mmcy_d[l_ac].mmcy001 = g_mmcy_d_o.mmcy001  #160824-00007#109 by sakura add
                      IF l_cmd = 'u' THEN
                         IF NOT ammt302_mmcy001_other()  THEN
                            NEXT FIELD mmcy001   
                         END IF
                      END IF
                      LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
                      NEXT FIELD mmcy001     
                  END IF
               END IF
               LET t_mmcy001 = g_mmcy_d[l_ac].mmcy001
               LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
               DISPLAY BY NAME g_mmcy_d[l_ac].mmcy001_desc
               CALL ammt302_mmcy003_ref()
            END IF
            LET g_mmcy_d_o.* = g_mmcy_d[l_ac].*  #160824-00007#109 by sakura add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy001
            #add-point:BEFORE FIELD mmcy001 name="input.b.page1.mmcy001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy001
            #add-point:ON CHANGE mmcy001 name="input.g.page1.mmcy001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy002
            
            #add-point:AFTER FIELD mmcy002 name="input.a.page1.mmcy002"
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy002
            #add-point:BEFORE FIELD mmcy002 name="input.b.page1.mmcy002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy002
            #add-point:ON CHANGE mmcy002 name="input.g.page1.mmcy002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy003
            
            #add-point:AFTER FIELD mmcy003 name="input.a.page1.mmcy003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mmcy_d[l_ac].mmcy003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mmcy_d[l_ac].mmcy003_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy003
            #add-point:BEFORE FIELD mmcy003 name="input.b.page1.mmcy003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy003
            #add-point:ON CHANGE mmcy003 name="input.g.page1.mmcy003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy004
            
            #add-point:AFTER FIELD mmcy004 name="input.a.page1.mmcy004"
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy004
            #add-point:BEFORE FIELD mmcy004 name="input.b.page1.mmcy004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy004
            #add-point:ON CHANGE mmcy004 name="input.g.page1.mmcy004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy005
            
            #add-point:AFTER FIELD mmcy005 name="input.a.page1.mmcy005"
            LET g_mmcy_d[l_ac].mmcy005_desc = ''
            IF NOT cl_null(g_mmcy_d[l_ac].mmcy005) THEN
               IF NOT s_azzi650_chk_exist('2055',g_mmcy_d[l_ac].mmcy005) THEN
                  LET g_mmcy_d[l_ac].mmcy005 =g_mmcy_d_t.mmcy005
                  CALL ammt302_mmcy005_ref()
                  NEXT FIELD CURRENT
               ELSE
                  CALL ammt302_mmcy005_ref()
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy005
            #add-point:BEFORE FIELD mmcy005 name="input.b.page1.mmcy005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy005
            #add-point:ON CHANGE mmcy005 name="input.g.page1.mmcy005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy006
            
            #add-point:AFTER FIELD mmcy006 name="input.a.page1.mmcy006"
           

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy006
            #add-point:BEFORE FIELD mmcy006 name="input.b.page1.mmcy006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy006
            #add-point:ON CHANGE mmcy006 name="input.g.page1.mmcy006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcy007
            #add-point:BEFORE FIELD mmcy007 name="input.b.page1.mmcy007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcy007
            
            #add-point:AFTER FIELD mmcy007 name="input.a.page1.mmcy007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcy007
            #add-point:ON CHANGE mmcy007 name="input.g.page1.mmcy007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mmcyunit
            #add-point:BEFORE FIELD mmcyunit name="input.b.page1.mmcyunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mmcyunit
            
            #add-point:AFTER FIELD mmcyunit name="input.a.page1.mmcyunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mmcyunit
            #add-point:ON CHANGE mmcyunit name="input.g.page1.mmcyunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.mmcysite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcysite
            #add-point:ON ACTION controlp INFIELD mmcysite name="input.c.page1.mmcysite"
#此段落由子樣板a07產生            
            #開窗i段
		    	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcysite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_mmcx_m.mmcxunit
#            LET g_qryparam.arg2 = '8'
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mmcysite',g_mmcx_m.mmcxsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_mmcy_d[l_ac].mmcysite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcy_d[l_ac].mmcysite TO mmcysite              #顯示到畫面上
            LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite) 
            NEXT FIELD mmcysite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy001
            #add-point:ON ACTION controlp INFIELD mmcy001 name="input.c.page1.mmcy001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcy001             #給予default值

            #給予arg

            CALL q_mmaf001_1()                                #呼叫開窗

            LET g_mmcy_d[l_ac].mmcy001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mmcy_d[l_ac].mmcy001 TO mmcy001              #顯示到畫面上
            LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
            NEXT FIELD mmcy001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy002
            #add-point:ON ACTION controlp INFIELD mmcy002 name="input.c.page1.mmcy002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy003
            #add-point:ON ACTION controlp INFIELD mmcy003 name="input.c.page1.mmcy003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy004
            #add-point:ON ACTION controlp INFIELD mmcy004 name="input.c.page1.mmcy004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy005
            #add-point:ON ACTION controlp INFIELD mmcy005 name="input.c.page1.mmcy005"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mmcy_d[l_ac].mmcy005             #給予default值
            LET g_qryparam.default2 = "" #g_mmcy_d[l_ac].oocq010 #參考欄位七

            #給予arg
            LET g_qryparam.arg1 = '2055' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_mmcy_d[l_ac].mmcy005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_mmcy_d[l_ac].oocq010 = g_qryparam.return2 #參考欄位七

            DISPLAY g_mmcy_d[l_ac].mmcy005 TO mmcy005              #顯示到畫面上
            #DISPLAY g_mmcy_d[l_ac].oocq010 TO oocq010 #參考欄位七
            CALL ammt302_mmcy005_ref()
            NEXT FIELD mmcy005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy006
            #add-point:ON ACTION controlp INFIELD mmcy006 name="input.c.page1.mmcy006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcy007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcy007
            #add-point:ON ACTION controlp INFIELD mmcy007 name="input.c.page1.mmcy007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.mmcyunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mmcyunit
            #add-point:ON ACTION controlp INFIELD mmcyunit name="input.c.page1.mmcyunit"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE ammt302_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mmcy_d[l_ac].mmcy001 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL ammt302_mmcy_t_mask_restore('restore_mask_o')
      
               UPDATE mmcy_t SET (mmcydocno,mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006, 
                   mmcy007,mmcyunit) = (g_mmcx_m.mmcxdocno,g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001, 
                   g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005, 
                   g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007,g_mmcy_d[l_ac].mmcyunit)
                WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno 
 
                  AND mmcy001 = g_mmcy_d_t.mmcy001 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmcy_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_mmcy_d[l_ac].* = g_mmcy_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mmcx_m.mmcxdocno
               LET gs_keys_bak[1] = g_mmcxdocno_t
               LET gs_keys[2] = g_mmcy_d[g_detail_idx].mmcy001
               LET gs_keys_bak[2] = g_mmcy_d_t.mmcy001
               CALL ammt302_update_b('mmcy_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL ammt302_mmcy_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_mmcy_d[g_detail_idx].mmcy001 = g_mmcy_d_t.mmcy001 
 
                  ) THEN
                  LET gs_keys[01] = g_mmcx_m.mmcxdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mmcy_d_t.mmcy001
 
                  CALL ammt302_key_update_b(gs_keys,'mmcy_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_mmcx_m),util.JSON.stringify(g_mmcy_d_t)
               LET g_log2 = util.JSON.stringify(g_mmcx_m),util.JSON.stringify(g_mmcy_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL ammt302_unlock_b("mmcy_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mmcy_d[li_reproduce_target].* = g_mmcy_d[li_reproduce].*
 
               LET g_mmcy_d[li_reproduce_target].mmcy001 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_mmcy_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mmcy_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL ammt302_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL ammt302_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="ammt302.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mmcxsite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcysite
               WHEN "s_detail2"
                  NEXT FIELD mmcz001
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD mmcxdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mmcysite
               WHEN "s_detail2"
                  NEXT FIELD mmcz001
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION ammt302_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL ammt302_b_fill() #單身填充
      CALL ammt302_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL ammt302_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
       #      CALL ammt302_mmcxsite_ref()
       #      CALL ammt302_mmcx001_ref()
       #      
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxownid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxownid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxownid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxowndp
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxowndp_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxowndp_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxcrtid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxcrtid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxcrtid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxcrtdp
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxcrtdp_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxcrtdp_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxmodid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxmodid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxmodid_desc
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcx_m.mmcxcnfid
       #     CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       #     LET g_mmcx_m.mmcxcnfid_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcx_m.mmcxcnfid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_mmcx_m_mask_o.* =  g_mmcx_m.*
   CALL ammt302_mmcx_t_mask()
   LET g_mmcx_m_mask_n.* =  g_mmcx_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
       g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtid_desc, 
       g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmodid_desc, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmcx_m.mmcxstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mmcy_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
       #    LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite) 
       #    
       #   
       #
       #     INITIALIZE g_ref_fields TO NULL
       #     LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy001
       #     CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
       #     LET g_mmcy_d[l_ac].mmcy001_desc = '', g_rtn_fields[1] , ''
       #     DISPLAY BY NAME g_mmcy_d[l_ac].mmcy001_desc
       #
       #     CALL ammt302_mmcy002_ref()   
       #     CAll ammt302_mmcy003_ref()
       #     CALL ammt302_mmcy004_ref()
       #     CALL ammt302_mmcy005_ref()
       #     CALL ammt302_mmcy006_ref()
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mmcy2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL ammt302_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION ammt302_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION ammt302_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE mmcx_t.mmcxdocno 
   DEFINE l_oldno     LIKE mmcx_t.mmcxdocno 
 
   DEFINE l_master    RECORD LIKE mmcx_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE mmcy_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE mmcz_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
    
   LET g_mmcx_m.mmcxdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_mmcx_m.mmcxownid = g_user
      LET g_mmcx_m.mmcxowndp = g_dept
      LET g_mmcx_m.mmcxcrtid = g_user
      LET g_mmcx_m.mmcxcrtdp = g_dept 
      LET g_mmcx_m.mmcxcrtdt = cl_get_current()
      LET g_mmcx_m.mmcxmodid = g_user
      LET g_mmcx_m.mmcxmoddt = cl_get_current()
      LET g_mmcx_m.mmcxstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_mmcx_m.mmcxstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL ammt302_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_mmcx_m.* TO NULL
      INITIALIZE g_mmcy_d TO NULL
      INITIALIZE g_mmcy2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL ammt302_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL ammt302_set_act_visible()   
   CALL ammt302_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " mmcxent = " ||g_enterprise|| " AND",
                      " mmcxdocno = '", g_mmcx_m.mmcxdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL ammt302_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL ammt302_idx_chk()
   
   LET g_data_owner = g_mmcx_m.mmcxownid      
   LET g_data_dept  = g_mmcx_m.mmcxowndp
   
   #功能已完成,通報訊息中心
   CALL ammt302_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION ammt302_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mmcy_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE mmcz_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE ammt302_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmcy_t
    WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcxdocno_t
 
    INTO TEMP ammt302_detail
 
   #將key修正為調整後   
   UPDATE ammt302_detail 
      #更新key欄位
      SET mmcydocno = g_mmcx_m.mmcxdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO mmcy_t SELECT * FROM ammt302_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt302_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mmcz_t 
    WHERE mmczent = g_enterprise AND mmczdocno = g_mmcxdocno_t
 
    INTO TEMP ammt302_detail
 
   #將key修正為調整後   
   UPDATE ammt302_detail SET mmczdocno = g_mmcx_m.mmcxdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO mmcz_t SELECT * FROM ammt302_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE ammt302_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.delete" >}
#+ 資料刪除
PRIVATE FUNCTION ammt302_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt302_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT ammt302_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_mmcx_m_mask_o.* =  g_mmcx_m.*
   CALL ammt302_mmcx_t_mask()
   LET g_mmcx_m_mask_n.* =  g_mmcx_m.*
   
   CALL ammt302_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL ammt302_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_mmcxdocno_t = g_mmcx_m.mmcxdocno
 
 
      DELETE FROM mmcx_t
       WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcx_m.mmcxdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_mmcx_m.mmcxdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM mmcy_t
       WHERE mmcyent = g_enterprise AND mmcydocno = g_mmcx_m.mmcxdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM mmcz_t
       WHERE mmczent = g_enterprise AND
             mmczdocno = g_mmcx_m.mmcxdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmcz_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_mmcx_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE ammt302_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_mmcy_d.clear() 
      CALL g_mmcy2_d.clear()       
 
     
      CALL ammt302_ui_browser_refresh()  
      #CALL ammt302_ui_headershow()  
      #CALL ammt302_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL ammt302_browser_fill("")
         CALL ammt302_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE ammt302_cl
 
   #功能已完成,通報訊息中心
   CALL ammt302_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="ammt302.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ammt302_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_mmcy_d.clear()
   CALL g_mmcy2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF ammt302_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmcysite,mmcy001,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007, 
             mmcyunit ,t1.ooefl003 ,t2.mmaf008 ,t3.oocql004 ,t4.oocql004 ,t5.oocql004 ,t6.oocql004 , 
             t7.mmcul003 FROM mmcy_t",   
                     " INNER JOIN mmcx_t ON mmcxent = " ||g_enterprise|| " AND mmcxdocno = mmcydocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=mmcysite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mmaf_t t2 ON t2.mmafent="||g_enterprise||" AND t2.mmaf001=mmcy001  ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='2024' AND t3.oocql002=mmcy002 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent="||g_enterprise||" AND t4.oocql001='2024' AND t4.oocql002=mmcy003 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='2025' AND t5.oocql002=mmcy004 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='2055' AND t6.oocql002=mmcy005 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mmcul_t t7 ON t7.mmculent="||g_enterprise||" AND t7.mmcul001=mmcy006 AND t7.mmcul002='"||g_dlang||"' ",
 
                     " WHERE mmcyent=? AND mmcydocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmcy_t.mmcy001"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt302_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR ammt302_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_mmcx_m.mmcxdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_mmcx_m.mmcxdocno INTO g_mmcy_d[l_ac].mmcysite,g_mmcy_d[l_ac].mmcy001, 
          g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,g_mmcy_d[l_ac].mmcy005, 
          g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007,g_mmcy_d[l_ac].mmcyunit,g_mmcy_d[l_ac].mmcysite_desc, 
          g_mmcy_d[l_ac].mmcy001_desc,g_mmcy_d[l_ac].mmcy002_desc,g_mmcy_d[l_ac].mmcy003_desc,g_mmcy_d[l_ac].mmcy004_desc, 
          g_mmcy_d[l_ac].mmcy005_desc,g_mmcy_d[l_ac].mmcy006_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_mmcy2_d[l_ac].mmcz001 = g_mmcy_d[l_ac].mmcy001
         
         LET g_mmcy_d[l_ac].mmcysite_desc = ammt302_mmcysite_ref(g_mmcy_d[l_ac].mmcysite)
         LET g_mmcy_d[l_ac].mmcy001_desc = ammt302_mmcy001_ref(g_mmcy_d[l_ac].mmcy001)
         CALL ammt302_mmcy002_ref()
         CAll ammt302_mmcy003_ref()
         CALL ammt302_mmcy004_ref()
         CALL ammt302_mmcy005_ref()
         CALL ammt302_mmcy006_ref()
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF ammt302_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT mmcz001,mmcz002,mmcz003,mmczunit,mmczsite  FROM mmcz_t",   
                     " INNER JOIN  mmcx_t ON mmcxent = " ||g_enterprise|| " AND mmcxdocno = mmczdocno ",
 
                     "",
                     
                     
                     " WHERE mmczent=? AND mmczdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY mmcz_t.mmcz001,mmcz_t.mmcz002"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE ammt302_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR ammt302_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_mmcx_m.mmcxdocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_mmcx_m.mmcxdocno INTO g_mmcy2_d[l_ac].mmcz001,g_mmcy2_d[l_ac].mmcz002, 
          g_mmcy2_d[l_ac].mmcz003,g_mmcy2_d[l_ac].mmczunit,g_mmcy2_d[l_ac].mmczsite   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_mmcy_d.deleteElement(g_mmcy_d.getLength())
   CALL g_mmcy2_d.deleteElement(g_mmcy2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE ammt302_pb
   FREE ammt302_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_mmcy_d.getLength()
      LET g_mmcy_d_mask_o[l_ac].* =  g_mmcy_d[l_ac].*
      CALL ammt302_mmcy_t_mask()
      LET g_mmcy_d_mask_n[l_ac].* =  g_mmcy_d[l_ac].*
   END FOR
   
   LET g_mmcy2_d_mask_o.* =  g_mmcy2_d.*
   FOR l_ac = 1 TO g_mmcy2_d.getLength()
      LET g_mmcy2_d_mask_o[l_ac].* =  g_mmcy2_d[l_ac].*
      CALL ammt302_mmcz_t_mask()
      LET g_mmcy2_d_mask_n[l_ac].* =  g_mmcy2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION ammt302_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM mmcy_t
       WHERE mmcyent = g_enterprise AND
         mmcydocno = ps_keys_bak[1] AND mmcy001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmcy_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM mmcz_t
       WHERE mmczent = g_enterprise AND
             mmczdocno = ps_keys_bak[1] AND mmcz001 = ps_keys_bak[2] AND mmcz002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmcz_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmcy2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION ammt302_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO mmcy_t
                  (mmcyent,
                   mmcydocno,
                   mmcy001
                   ,mmcysite,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_mmcy_d[g_detail_idx].mmcysite,g_mmcy_d[g_detail_idx].mmcy002,g_mmcy_d[g_detail_idx].mmcy003, 
                       g_mmcy_d[g_detail_idx].mmcy004,g_mmcy_d[g_detail_idx].mmcy005,g_mmcy_d[g_detail_idx].mmcy006, 
                       g_mmcy_d[g_detail_idx].mmcy007,g_mmcy_d[g_detail_idx].mmcyunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_mmcy_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO mmcz_t
                  (mmczent,
                   mmczdocno,
                   mmcz001,mmcz002
                   ,mmcz003,mmczunit,mmczsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_mmcy2_d[g_detail_idx].mmcz003,g_mmcy2_d[g_detail_idx].mmczunit,g_mmcy2_d[g_detail_idx].mmczsite) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mmcz_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_mmcy2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION ammt302_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcy_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL ammt302_mmcy_t_mask_restore('restore_mask_o')
               
      UPDATE mmcy_t 
         SET (mmcydocno,
              mmcy001
              ,mmcysite,mmcy002,mmcy003,mmcy004,mmcy005,mmcy006,mmcy007,mmcyunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_mmcy_d[g_detail_idx].mmcysite,g_mmcy_d[g_detail_idx].mmcy002,g_mmcy_d[g_detail_idx].mmcy003, 
                  g_mmcy_d[g_detail_idx].mmcy004,g_mmcy_d[g_detail_idx].mmcy005,g_mmcy_d[g_detail_idx].mmcy006, 
                  g_mmcy_d[g_detail_idx].mmcy007,g_mmcy_d[g_detail_idx].mmcyunit) 
         WHERE mmcyent = g_enterprise AND mmcydocno = ps_keys_bak[1] AND mmcy001 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmcy_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmcy_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt302_mmcy_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "mmcz_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL ammt302_mmcz_t_mask_restore('restore_mask_o')
               
      UPDATE mmcz_t 
         SET (mmczdocno,
              mmcz001,mmcz002
              ,mmcz003,mmczunit,mmczsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_mmcy2_d[g_detail_idx].mmcz003,g_mmcy2_d[g_detail_idx].mmczunit,g_mmcy2_d[g_detail_idx].mmczsite)  
 
         WHERE mmczent = g_enterprise AND mmczdocno = ps_keys_bak[1] AND mmcz001 = ps_keys_bak[2] AND mmcz002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmcz_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "mmcz_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL ammt302_mmcz_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION ammt302_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION ammt302_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION ammt302_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL ammt302_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "mmcy_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN ammt302_bcl USING g_enterprise,
                                       g_mmcx_m.mmcxdocno,g_mmcy_d[g_detail_idx].mmcy001     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt302_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "mmcz_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ammt302_bcl2 USING g_enterprise,
                                             g_mmcx_m.mmcxdocno,g_mmcy2_d[g_detail_idx].mmcz001,g_mmcy2_d[g_detail_idx].mmcz002 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ammt302_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ammt302_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt302_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE ammt302_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION ammt302_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("mmcxdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mmcxdocno",TRUE)
      CALL cl_set_comp_entry("mmcxdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("mmcxdocdt",TRUE)
      CALL cl_set_comp_entry("mmcxsite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   IF g_mmcy_d.getLength() = 0 THEN
      CALL cl_set_comp_entry("mmcxsite",TRUE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION ammt302_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mmcxdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("mmcxdocdt",FALSE)
      CALL cl_set_comp_entry("mmcxsite",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("mmcxdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("mmcxdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF g_mmcy_d.getLength() > 0 THEN
      CALL cl_set_comp_entry("mmcxsite",FALSE)
   END IF
   IF NOT s_aooi500_comp_entry(g_prog,'mmcxsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("mmcxsite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION ammt302_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION ammt302_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION ammt302_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION ammt302_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_mmcx_m.mmcxstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION ammt302_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION ammt302_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION ammt302_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mmcxdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "mmcx_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmcy_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "mmcz_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION ammt302_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.chr5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_mmcx_m.mmcxdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN ammt302_cl USING g_enterprise,g_mmcx_m.mmcxdocno
   IF STATUS THEN
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN ammt302_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
       g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
       g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT ammt302_action_chk() THEN
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit, 
       g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
       g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtid_desc, 
       g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmodid_desc, 
       g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt
 
   CASE g_mmcx_m.mmcxstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_mmcx_m.mmcxstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_mmcx_m.mmcxstus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "Y"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "invalid"
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
         WHEN "X"
            HIDE OPTION "unconfirmed"
            HIDE OPTION "confirmed"
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
      END CASE
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
   
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_mmcx_m.mmcxstus = lc_state OR cl_null(lc_state) THEN
      CLOSE ammt302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
      LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_ammt302_conf_chk(g_mmcx_m.mmcxdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_ammt302_conf_upd(g_mmcx_m.mmcxdocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmcx_m.mmcxdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN            
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmcx_m.mmcxdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_ammt302_void_chk(g_mmcx_m.mmcxdocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_ammt302_void_upd(g_mmcx_m.mmcxdocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmcx_m.mmcxdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#5 add
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_mmcx_m.mmcxdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#5 add
            RETURN    
         END IF
   END CASE
   #end add-point
   
   LET g_mmcx_m.mmcxmodid = g_user
   LET g_mmcx_m.mmcxmoddt = cl_get_current()
   LET g_mmcx_m.mmcxstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE mmcx_t 
      SET (mmcxstus,mmcxmodid,mmcxmoddt) 
        = (g_mmcx_m.mmcxstus,g_mmcx_m.mmcxmodid,g_mmcx_m.mmcxmoddt)     
    WHERE mmcxent = g_enterprise AND mmcxdocno = g_mmcx_m.mmcxdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE ammt302_master_referesh USING g_mmcx_m.mmcxdocno INTO g_mmcx_m.mmcxsite,g_mmcx_m.mmcxdocdt, 
          g_mmcx_m.mmcxdocno,g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus,g_mmcx_m.mmcxownid, 
          g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxcrtid,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
          g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfdt,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcx001_desc, 
          g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp_desc, 
          g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_mmcx_m.mmcxsite,g_mmcx_m.mmcxsite_desc,g_mmcx_m.mmcxdocdt,g_mmcx_m.mmcxdocno, 
          g_mmcx_m.mmcxunit,g_mmcx_m.mmcx001,g_mmcx_m.mmcx001_desc,g_mmcx_m.mmcx002,g_mmcx_m.mmcxstus, 
          g_mmcx_m.mmcxownid,g_mmcx_m.mmcxownid_desc,g_mmcx_m.mmcxowndp,g_mmcx_m.mmcxowndp_desc,g_mmcx_m.mmcxcrtid, 
          g_mmcx_m.mmcxcrtid_desc,g_mmcx_m.mmcxcrtdp,g_mmcx_m.mmcxcrtdp_desc,g_mmcx_m.mmcxcrtdt,g_mmcx_m.mmcxmodid, 
          g_mmcx_m.mmcxmodid_desc,g_mmcx_m.mmcxmoddt,g_mmcx_m.mmcxcnfid,g_mmcx_m.mmcxcnfid_desc,g_mmcx_m.mmcxcnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE ammt302_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL ammt302_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt302.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION ammt302_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_mmcy_d.getLength() THEN
         LET g_detail_idx = g_mmcy_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcy_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcy_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mmcy2_d.getLength() THEN
         LET g_detail_idx = g_mmcy2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mmcy2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mmcy2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ammt302_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL ammt302_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION ammt302_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ammt302.status_show" >}
PRIVATE FUNCTION ammt302_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="ammt302.mask_functions" >}
&include "erp/amm/ammt302_mask.4gl"
 
{</section>}
 
{<section id="ammt302.signature" >}
   
 
{</section>}
 
{<section id="ammt302.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION ammt302_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mmcx_m.mmcxdocno
   LET g_pk_array[1].column = 'mmcxdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt302.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="ammt302.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION ammt302_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL ammt302_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_mmcx_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ammt302.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION ammt302_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
    #160818-00017#21 add-S
   SELECT mmcxstus  INTO g_mmcx_m.mmcxstus
     FROM mmcx_t
    WHERE mmcxent = g_enterprise
      AND mmcxdocno = g_mmcx_m.mmcxdocno

   IF(g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_mmcx_m.mmcxstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_mmcx_m.mmcxdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL ammt302_set_act_visible()
        CALL ammt302_set_act_no_visible()
        CALL ammt302_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#21 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="ammt302.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcysite_ref(p_mmcysite)
#                  RETURNING l_desc
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcysite_ref(p_mmcysite)
 DEFINE p_mmcysite LIKE mmcy_t.mmcysite
 DEFINE l_desc    LIKE type_t.chr80
 
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_mmcysite
    CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET l_desc = '', g_rtn_fields[1] , ''
    RETURN l_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_chk_mmcxdocno(p_mmcxdocno)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_chk_mmcxdocno()
   
   IF NOT s_aooi200_chk_slip(g_site,'',g_mmcx_m.mmcxdocno,g_prog) THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF 
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcxsite_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcxsite_ref()
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcx_m.mmcxsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcx_m.mmcxsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcx_m.mmcxsite_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcxunit_chk(p_mmcxunit)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcxunit_chk(p_mmcxunit)
DEFINE l_cnt    LIKE type_t.num5
DEFINE l_cnt1    LIKE type_t.num5
DEFINE p_mmcxunit LIKE mmcx_t.mmcxunit
DEFINE l_sql     STRING

   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL

   SELECT COUNT(*) INTO  l_cnt FROM ooea_t
    WHERE ooeaent =g_enterprise AND ooea001 = p_mmcxunit 
   
   IF l_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'aoo-00163'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   LET l_sql="SELECT COUNT(*)  FROM ooed_t WHERE ooed004 ='",p_mmcxunit,"' AND ooed001='2' ",
             "  AND ooedent = ",g_enterprise, #160905-00007#6 add
             "   AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "   AND ooed004 IN ((select DISTINCT ooed004 FROM ooed_t ",
             "                     WHERE ooed001 = '2' AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "                       AND ooedent = ",g_enterprise, #160905-00007#6 add
             "                     START WITH ooed005='",g_site,"' AND ooed001 = '2' ",
             "                      AND ((ooed006 <='",g_today,"' AND  ooed007 >='",g_today,"') or ooed007 is null)",
             "                     CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2') ", 
             "          UNION ",
#             "         (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"'))" #160905-00007#6 mark
             "         (SELECT ooed004 FROM ooed_t WHERE ooedent =",g_enterprise," AND ooed004='",g_site,"'))" #160905-00007#6 add
   PREPARE l_sql_ooea_pre1 FROM l_sql
   IF l_cnt <= 0 THEN
      INITIALIZE g_errparam TO NULL
   EXECUTE l_sql_ooea_pre1 INTO l_cnt
      LET g_errparam.code = 'amm-00176'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      LET l_sql="SELECT COUNT(*)  FROM ooed_t,ooea_t WHERE ooea001=ooed004 AND ooed004 ='",p_mmcxunit,"' AND ooed001='2' AND ooeastus='Y' ",
             "   AND ooedent = ooeaent AND ooedent=",g_enterprise, #160905-00007#6 add
             "   AND ((ooed006<='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null)",
             "   AND ooea001 IN ((select DISTINCT ooed004 FROM ooed_t ",
             "                     WHERE ooed001 = '2' AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null) ",
             "                    START WITH ooed005='",g_site,"'AND ooed001 = '2' ",
             "                      AND ((ooed006 <='",g_today,"' AND ooed007 >='",g_today,"') or ooed007 is null)",
             "             CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2') ",
             "          UNION ",
#             "         (SELECT ooea001 FROM ooea_t WHERE ooea001='",g_site,"'))" #160905-00007#6 mark
             "         (SELECT ooea001 FROM ooea_t WHERE ooeaent=",g_enterprise," AND ooea001='",g_site,"'))" #160905-00007#6 add
      PREPARE l_sql_ooea_pre2 FROM l_sql
      EXECUTE l_sql_ooea_pre2 INTO l_cnt1
      IF l_cnt1 <= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-01302'  #160318-00005#23 mod 'aoo-00089'
         LET g_errparam.extend = ''
         #160318-00005#23  --add--str
         LET g_errparam.replace[1] ='aooi100'
         LET g_errparam.replace[2] = cl_get_progname('aooi100',g_lang,"2")
         LET g_errparam.exeprog    ='aooi100'
         #160318-00005#23 --add--end
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcx001_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcx001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcx_m.mmcx001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcx_m.mmcx001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcx_m.mmcx001_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcx001_chk(p_mmcx001)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcx001_chk(p_mmcx001)
DEFINE p_mmcx001 LIKE mmcx_t.mmcx001
DEFINE l_oocqstus    LIKE oocq_t.oocqstus

    SELECT oocqstus INTO l_oocqstus FROM oocq_t
    WHERE oocqent =  g_enterprise AND oocq001 = '2055' AND oocq002 = p_mmcx001
    
   IF STATUS = 100 OR cl_null(l_oocqstus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-01303'  #160318-00005#23 mod 'amm-00040'
      LET g_errparam.extend = ''
      #160318-00005#23  --add--str
      LET g_errparam.replace[1] ='ammi020'
      LET g_errparam.replace[2] = cl_get_progname('ammi020',g_lang,"2")
      LET g_errparam.exeprog    ='ammi020'
      #160318-00005#23 --add--end
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_oocqstus = 'N' THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'amm-00041'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE
      END IF
   END IF
   RETURN TRUE
  
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcy001_chk(p_mmcy001)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_chk(p_mmcy001)
DEFINE p_mmcy001 LIKE mmcy_t.mmcy001
DEFINE l_stus    LIKE mmaf_t.mmafstus
DEFINE l_mmag004 LIKE mmag_t.mmag004
DEFINE l_oocq004 LIKE oocq_t.oocq004
DEFINE l_n       LIKE type_t.num5
DEFINE l_mmcy006 LIKE mmcy_t.mmcy006   #160511-00011#2 160519 by sakura add

   SELECT mmafstus INTO l_stus FROM mmaf_t
    WHERE mmafent = g_enterprise AND mmaf001 = p_mmcy001
   
   IF STATUS = 100 OR cl_null(l_stus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'amm-00180'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_stus <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'amm-00181'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   #根据会员去抓取会员类型，如果抓取不到类型报错返回
   SELECT mmag004 INTO l_mmag004 FROM mmag_t 
    WHERE mmagent = g_enterprise AND mmag001 = p_mmcy001 AND mmag003 = '2025' 
   IF status = 100 OR cl_null(l_mmag004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'amm-00185'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   #根据会员类型抓取升降等策略编号。如果抓取不到。报错返回
   SELECT oocq004 INTO l_oocq004 FROM oocq_t 
    WHERE oocqent = g_enterprise AND oocq001 = '2025' AND oocq002 = l_mmag004
   #160511-00011#2 160519 by sakura add(S)
   LET l_mmcy006 = ''
   IF cl_null(l_oocq004) THEN
       LET l_mmcy006 = cl_get_para(g_enterprise,g_site,'E-CIR-0063')
       LET l_oocq004 = l_mmcy006   
   END IF
   #160511-00011#2 160519 by sakura add(E)   
   IF status = 100 OR cl_null(l_oocq004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'amm-00186'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF 
   
   RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ammt302_mmcy001_other()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_other()
DEFINE l_success    LIKE type_t.num5
DEFINE l_mmcy006    LIKE mmcy_t.mmcy006   #160511-00011#2 160519 by sakura add

    IF cl_null(g_mmcy_d[l_ac].mmcy001) THEN
       RETURN FALSE
    END IF
    
    CALL s_ammt302_chk_mmcv(g_mmcx_m.mmcxdocno,g_mmcy_d[l_ac].mmcy001,g_mmcx_m.mmcx002,'1') RETURNING l_success,g_mmcy_d[l_ac].mmcy003
    IF NOT l_success THEN
       CALL ammt302_detail_clear()
       RETURN FALSE
    END IF
    CALL ammt302_mmcy003_ref()

    #查询原会员等级
    SELECT DISTINCT mmag004 INTO g_mmcy_d[l_ac].mmcy002 FROM mmag_t
     WHERE mmagent = g_enterprise AND mmag001 = g_mmcy_d[l_ac].mmcy001 and mmag003 = '2024'
    CALL ammt302_mmcy002_ref()
    
    #会员类型
    SELECT DISTINCT mmag004 INTO g_mmcy_d[l_ac].mmcy004 FROM mmag_t
     WHERE mmagent = g_enterprise AND mmag001 = g_mmcy_d[l_ac].mmcy001 and mmag003 = '2025'
    CALL ammt302_mmcy004_ref()
   
    #升等策略
    SELECT oocq004 INTO g_mmcy_d[l_ac].mmcy006 FROM oocq_t 
     WHERE oocqent = g_enterprise AND oocq001 = '2025' AND oocq002 = g_mmcy_d[l_ac].mmcy004
    #160511-00011#2 160519 by sakura add(S)
    LET l_mmcy006 = ''
    IF cl_null(g_mmcy_d[l_ac].mmcy006) THEN
       LET l_mmcy006 = cl_get_para(g_enterprise,g_site,'E-CIR-0063')
       LET g_mmcy_d[l_ac].mmcy006 = l_mmcy006
    END IF
    #160511-00011#2 160519 by sakura add(E)     
     
     CALL ammt302_mmcy006_ref()
    
    #策略版本
    SELECT mmcu002 INTO g_mmcy_d[l_ac].mmcy007 FROM mmcu_t
     WHERE mmcuent =  g_enterprise AND mmcu001 = g_mmcy_d[l_ac].mmcy006
   
    DISPLAY BY NAME g_mmcy_d[l_ac].mmcy002,g_mmcy_d[l_ac].mmcy003,g_mmcy_d[l_ac].mmcy004,
                    g_mmcy_d[l_ac].mmcy006,g_mmcy_d[l_ac].mmcy007
    RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy002_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2025' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy004_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy006
   CALL ap_ref_array2(g_ref_fields,"SELECT mmcul004 FROM mmcul_t WHERE mmculent='"||g_enterprise||"' AND mmcul001=? AND mmcul002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy006_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mmcy_d[l_ac].mmcy003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mmcy_d[l_ac].mmcy003_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy005_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_mmcy_d[l_ac].mmcy005
    CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2055' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_mmcy_d[l_ac].mmcy005_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_mmcy_d[l_ac].mmcy005_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_b2_reflesh()
    CALL g_mmcy2_d.clear()
     LET g_sql = "SELECT  UNIQUE mmcz001,mmcz002,mmcz003,mmczunit,mmczsite FROM mmcz_t",   
                  " INNER JOIN mmcx_t ON mmcxdocno = mmczdocno ",
 
                  "",
                  
                  " WHERE mmczent=? AND mmczdocno=?"   

      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      
      LET g_sql = g_sql, " ORDER BY mmcz_t.mmcz001,mmcz_t.mmcz002"
      
    
      PREPARE ammt302_pb_2 FROM g_sql
      DECLARE b_fill_cs_2 CURSOR FOR ammt302_pb_2
      
      LET l_ac = 1
      
      OPEN b_fill_cs_2 USING g_enterprise,g_mmcx_m.mmcxdocno
 
                                               
      FOREACH b_fill_cs2 INTO g_mmcy2_d[l_ac].mmcz001,g_mmcy2_d[l_ac].mmcz002,g_mmcy2_d[l_ac].mmcz003, 
          g_mmcy2_d[l_ac].mmczunit,g_mmcy2_d[l_ac].mmczsite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF

      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
      
      DISPLAY ARRAY g_mmcy2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE DISPLAY
            EXIT DISPLAY  
         
      END DISPLAY
 
END FUNCTION


################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_detail_clear()
   LET g_mmcy_d[l_ac].mmcy002 = ''
   LET g_mmcy_d[l_ac].mmcy002_desc = '' 
   LET g_mmcy_d[l_ac].mmcy003 = ''
   LET g_mmcy_d[l_ac].mmcy003_desc = ''
   LET g_mmcy_d[l_ac].mmcy004 = ''
   LET g_mmcy_d[l_ac].mmcy004_desc = '' 
   LET g_mmcy_d[l_ac].mmcy006 = ''
   LET g_mmcy_d[l_ac].mmcy006_desc = '' 
   LET g_mmcy_d[l_ac].mmcy007 = '' 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION ammt302_mmcy001_ref(p_mmcy001)
DEFINE p_mmcy001 LIKE mmcy_t.mmcy001
DEFINE l_desc    LIKE type_t.chr80

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_mmcy001
   CALL ap_ref_array2(g_ref_fields,"SELECT mmaf008 FROM mmaf_t WHERE mmafent='"||g_enterprise||"' AND mmaf001=? ","") RETURNING g_rtn_fields
   LET l_desc = '', g_rtn_fields[1] , ''
   RETURN l_desc
END FUNCTION

 
{</section>}
 
