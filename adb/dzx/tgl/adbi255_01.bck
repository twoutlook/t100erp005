#該程式已解開Section, 不再透過樣板產出!
{<section id="adbi255_01.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000104
#+ 
#+ Filename...: adbi255_01
#+ Description: ...
#+ Creator....: 02749(2014/05/02)
#+ Modifier...: 02749(2014/05/13)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="adbi255_01.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_dbaf_d RECORD
       dbaf0041 LIKE type_t.chr80, 
   dbaf004 LIKE dbaf_t.dbaf004, 
   dbaf001 LIKE dbaf_t.dbaf001, 
   dbaf002 LIKE dbaf_t.dbaf002, 
   dbaf003 LIKE dbaf_t.dbaf003, 
   dbaf003_desc LIKE type_t.chr500, 
   dbad002 LIKE type_t.chr80, 
   dbad002_desc LIKE type_t.chr500, 
   dbaf011 LIKE dbaf_t.dbaf011, 
   dbaf012 LIKE dbaf_t.dbaf012, 
   dbaf013 LIKE dbaf_t.dbaf013, 
   dbaf014 LIKE dbaf_t.dbaf014, 
   dbaf015 LIKE dbaf_t.dbaf015
       END RECORD
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_dbaf_d          DYNAMIC ARRAY OF type_g_dbaf_d
DEFINE g_dbaf_d_t        type_g_dbaf_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="adbi255_01.main" >}
#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION adbi255_01(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE adbi255_01_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adbi255_01_master_referesh FROM g_sql
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_adbi255_01 WITH FORM cl_ap_formpath("adb","adbi255_01")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL adbi255_01_init()   
 
   #進入選單 Menu (="N")
   CALL adbi255_01_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_adbi255_01
 
   CLOSE adbi255_01_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 

{</section>}

{<section id="adbi255_01.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION adbi255_01_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL adbi255_01_default_search()
   
END FUNCTION

{</section>}

{<section id="adbi255_01.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION adbi255_01_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL adbi255_01_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_dbaf_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #Special UI--begin---
               IF l_sel_cnt = 0 THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)   #standard                               
               ELSE
                  CALL DIALOG.setSelectionRange("s_detail1",l_sel_st,l_sel_end,1)   #有多選時,要將選取的畫面都反藍
                  LET l_sel_cnt = 0                                                 #重新顯示後,要將選取筆數歸零
               END IF
               #Special UI--end---               
            BEFORE ROW
               #Special UI--begin---
               IF l_sel_cnt = 0 THEN
                  LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")   #standard          
               ELSE
                  LET g_detail_idx =l_set_rec
               END IF
               #Special UI--end---   
               
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
{<point name="ui_dialog.before_row"/>}
               #end add-point                        

            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            #Special UI--begin---Standard
            #IF g_temp_idx > 0 THEN
            #   LET l_ac = g_temp_idx
            #   CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            #   LET g_temp_idx = 1
            #END IF
            #Special UI--end---
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
{<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION move_down
            LET g_action_choice="move_down"
            IF cl_auth_chk_act("move_down") THEN
               
               #add-point:ON ACTION move_down
{<point name="menu.move_down" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION cancel_update
            LET g_action_choice="cancel_update"
            IF cl_auth_chk_act("cancel_update") THEN
               
               #add-point:ON ACTION cancel_update
{<point name="menu.cancel_update" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION conf_update
            LET g_action_choice="conf_update"
            IF cl_auth_chk_act("conf_update") THEN
               
               #add-point:ON ACTION conf_update
{<point name="menu.conf_update" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbi255_01_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbi255_01_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
               
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
               
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION move_up
            LET g_action_choice="move_up"
            IF cl_auth_chk_act("move_up") THEN
               
               #add-point:ON ACTION move_up
{<point name="menu.move_up" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
               
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION

{</section>}

{<section id="adbi255_01.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION adbi255_01_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_dbaf_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON dbaf0041,dbaf003,dbad002,dbaf011,dbaf012,dbaf013,dbaf014,dbaf015 
 
         FROM s_detail1[1].dbaf0041,s_detail1[1].dbaf003,s_detail1[1].dbad002,s_detail1[1].dbaf011,s_detail1[1].dbaf012, 
             s_detail1[1].dbaf013,s_detail1[1].dbaf014,s_detail1[1].dbaf015 
      
         
      
         #---------------------<  Detail: page1  >---------------------
         #----<<dbaf0041>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf0041
            #add-point:BEFORE FIELD dbaf0041
            {<point name="query.b.page1.dbaf0041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf0041
            
            #add-point:AFTER FIELD dbaf0041
            {<point name="query.a.page1.dbaf0041" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf0041
         ON ACTION controlp INFIELD dbaf0041
            #add-point:ON ACTION controlp INFIELD dbaf0041
            {<point name="query.c.page1.dbaf0041" />}
            #END add-point
 
         #----<<dbaf004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf004
            #add-point:BEFORE FIELD dbaf004
            {<point name="query.b.page1.dbaf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf004
            
            #add-point:AFTER FIELD dbaf004
            {<point name="query.a.page1.dbaf004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf004
         ON ACTION controlp INFIELD dbaf004
            #add-point:ON ACTION controlp INFIELD dbaf004
            {<point name="query.c.page1.dbaf004" />}
            #END add-point
 
         #----<<dbaf001>>----
         #----<<dbaf002>>----
         #----<<dbaf003>>----
         #Ctrlp:construct.c.page1.dbaf003
         ON ACTION controlp INFIELD dbaf003
            #add-point:ON ACTION controlp INFIELD dbaf003
            {<point name="construct.c.page1.dbaf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf003
            #add-point:BEFORE FIELD dbaf003
            {<point name="query.b.page1.dbaf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf003
            
            #add-point:AFTER FIELD dbaf003
            {<point name="query.a.page1.dbaf003" />}
            #END add-point
            
 
         #----<<dbaf003_desc>>----
         #----<<dbad002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbad002
            #add-point:BEFORE FIELD dbad002
            {<point name="query.b.page1.dbad002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbad002
            
            #add-point:AFTER FIELD dbad002
            {<point name="query.a.page1.dbad002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbad002
         ON ACTION controlp INFIELD dbad002
            #add-point:ON ACTION controlp INFIELD dbad002
            {<point name="query.c.page1.dbad002" />}
            #END add-point
 
         #----<<dbad002_desc>>----
         #----<<dbaf011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf011
            #add-point:BEFORE FIELD dbaf011
            {<point name="query.b.page1.dbaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf011
            
            #add-point:AFTER FIELD dbaf011
            {<point name="query.a.page1.dbaf011" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf011
         ON ACTION controlp INFIELD dbaf011
            #add-point:ON ACTION controlp INFIELD dbaf011
            {<point name="query.c.page1.dbaf011" />}
            #END add-point
 
         #----<<dbaf012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf012
            #add-point:BEFORE FIELD dbaf012
            {<point name="query.b.page1.dbaf012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf012
            
            #add-point:AFTER FIELD dbaf012
            {<point name="query.a.page1.dbaf012" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf012
         ON ACTION controlp INFIELD dbaf012
            #add-point:ON ACTION controlp INFIELD dbaf012
            {<point name="query.c.page1.dbaf012" />}
            #END add-point
 
         #----<<dbaf013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf013
            #add-point:BEFORE FIELD dbaf013
            {<point name="query.b.page1.dbaf013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf013
            
            #add-point:AFTER FIELD dbaf013
            {<point name="query.a.page1.dbaf013" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf013
         ON ACTION controlp INFIELD dbaf013
            #add-point:ON ACTION controlp INFIELD dbaf013
            {<point name="query.c.page1.dbaf013" />}
            #END add-point
 
         #----<<dbaf014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf014
            #add-point:BEFORE FIELD dbaf014
            {<point name="query.b.page1.dbaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf014
            
            #add-point:AFTER FIELD dbaf014
            {<point name="query.a.page1.dbaf014" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf014
         ON ACTION controlp INFIELD dbaf014
            #add-point:ON ACTION controlp INFIELD dbaf014
            {<point name="query.c.page1.dbaf014" />}
            #END add-point
 
         #----<<dbaf015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf015
            #add-point:BEFORE FIELD dbaf015
            {<point name="query.b.page1.dbaf015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf015
            
            #add-point:AFTER FIELD dbaf015
            {<point name="query.a.page1.dbaf015" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbaf015
         ON ACTION controlp INFIELD dbaf015
            #add-point:ON ACTION controlp INFIELD dbaf015
            {<point name="query.c.page1.dbaf015" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL adbi255_01_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = -100
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION

{</section>}

{<section id="adbi255_01.insert" >}
#+ 資料新增
PRIVATE FUNCTION adbi255_01_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL adbi255_01_set_entry_b("a")  
   
   CALL adbi255_01_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_dbaf_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 9001
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="adbi255_01.modify" >}
#+ 資料修改
PRIVATE FUNCTION adbi255_01_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
{<point name="modify.define_sql" mark="Y"/>}
#   #end add-point 
#   LET g_forupd_sql = "SELECT '',dbaf004,dbaf001,dbaf002,dbaf003,'','','',dbaf011,dbaf012,dbaf013,dbaf014, 
#       dbaf015 FROM dbaf_t WHERE dbafent=? AND dbaf001=? AND dbaf002=? AND dbaf003=? FOR UPDATE"
   #add-point:modify段define_sql
{<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE adbi255_01_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
{<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_dbaf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dbaf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbi255_01_b_fill(g_wc2)
            LET g_detail_cnt = g_dbaf_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_dbaf_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_dbaf_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_dbaf_d[l_ac].dbaf001 IS NOT NULL
               AND g_dbaf_d[l_ac].dbaf002 IS NOT NULL
               AND g_dbaf_d[l_ac].dbaf003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dbaf_d_t.* = g_dbaf_d[l_ac].*  #BACKUP
               IF NOT adbi255_01_lock_b("dbaf_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbi255_01_bcl INTO g_dbaf_d[l_ac].dbaf0041,g_dbaf_d[l_ac].dbaf004,g_dbaf_d[l_ac].dbaf001, 
                      g_dbaf_d[l_ac].dbaf002,g_dbaf_d[l_ac].dbaf003,g_dbaf_d[l_ac].dbaf003_desc,g_dbaf_d[l_ac].dbad002, 
                      g_dbaf_d[l_ac].dbad002_desc,g_dbaf_d[l_ac].dbaf011,g_dbaf_d[l_ac].dbaf012,g_dbaf_d[l_ac].dbaf013, 
                      g_dbaf_d[l_ac].dbaf014,g_dbaf_d[l_ac].dbaf015
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_dbaf_d_t.dbaf001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL adbi255_01_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dbaf_d_t.* TO NULL
            INITIALIZE g_dbaf_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            
            LET g_dbaf_d_t.* = g_dbaf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbi255_01_set_entry_b("a")
            CALL adbi255_01_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dbaf_d[li_reproduce_target].* = g_dbaf_d[li_reproduce].*
 
               LET g_dbaf_d[g_dbaf_d.getLength()].dbaf001 = NULL
               LET g_dbaf_d[g_dbaf_d.getLength()].dbaf002 = NULL
               LET g_dbaf_d[g_dbaf_d.getLength()].dbaf003 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dbaf_t 
             WHERE dbafent = g_enterprise AND dbaf001 = g_dbaf_d[l_ac].dbaf001
                                       AND dbaf002 = g_dbaf_d[l_ac].dbaf002
                                       AND dbaf003 = g_dbaf_d[l_ac].dbaf003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbaf_d[g_detail_idx].dbaf001
               LET gs_keys[2] = g_dbaf_d[g_detail_idx].dbaf002
               LET gs_keys[3] = g_dbaf_d[g_detail_idx].dbaf003
               CALL adbi255_01_insert_b('dbaf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_dbaf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "dbaf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbi255_01_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (dbaf001 = '", g_dbaf_d[l_ac].dbaf001, "' "
                                  ," AND dbaf002 = '", g_dbaf_d[l_ac].dbaf002, "' "
                                  ," AND dbaf003 = '", g_dbaf_d[l_ac].dbaf003, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dbaf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dbaf_d.deleteElement(l_ac)
               NEXT FIELD dbaf001
            END IF
            IF g_dbaf_d[l_ac].dbaf001 IS NOT NULL
               AND g_dbaf_d_t.dbaf002 IS NOT NULL
               AND g_dbaf_d_t.dbaf003 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
{<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM dbaf_t
                WHERE dbafent = g_enterprise AND 
                      dbaf001 = g_dbaf_d_t.dbaf001
                      AND dbaf002 = g_dbaf_d_t.dbaf002
                      AND dbaf003 = g_dbaf_d_t.dbaf003
 
                      
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "dbaf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adbi255_01_bcl
               LET l_count = g_dbaf_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbaf_d[g_detail_idx].dbaf001
               LET gs_keys[2] = g_dbaf_d[g_detail_idx].dbaf002
               LET gs_keys[3] = g_dbaf_d[g_detail_idx].dbaf003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adbi255_01_delete_b('dbaf_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbaf0041>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf0041
            #add-point:BEFORE FIELD dbaf0041
{<point name="input.b.page1.dbaf0041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf0041
            
            #add-point:AFTER FIELD dbaf0041
{<point name="input.a.page1.dbaf0041" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf0041
            #add-point:ON CHANGE dbaf0041
{<point name="input.g.page1.dbaf0041" />}
            #END add-point
 
         #----<<dbaf004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf004
            #add-point:BEFORE FIELD dbaf004
{<point name="input.b.page1.dbaf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf004
            
            #add-point:AFTER FIELD dbaf004
{<point name="input.a.page1.dbaf004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf004
            #add-point:ON CHANGE dbaf004
{<point name="input.g.page1.dbaf004" />}
            #END add-point
 
         #----<<dbaf001>>----
         #----<<dbaf002>>----
         #----<<dbaf003>>----
         #此段落由子樣板a02產生
         AFTER FIELD dbaf003
            
            #add-point:AFTER FIELD dbaf003
{<point name="input.a.page1.dbaf003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf003
            #add-point:BEFORE FIELD dbaf003
{<point name="input.b.page1.dbaf003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf003
            #add-point:ON CHANGE dbaf003
{<point name="input.g.page1.dbaf003" />}
            #END add-point
 
         #----<<dbaf003_desc>>----
         #----<<dbad002>>----
         #此段落由子樣板a02產生
         AFTER FIELD dbad002
            
            #add-point:AFTER FIELD dbad002
{<point name="input.a.page1.dbad002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbad002
            #add-point:BEFORE FIELD dbad002
{<point name="input.b.page1.dbad002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbad002
            #add-point:ON CHANGE dbad002
{<point name="input.g.page1.dbad002" />}
            #END add-point
 
         #----<<dbad002_desc>>----
         #----<<dbaf011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf011
            #add-point:BEFORE FIELD dbaf011
{<point name="input.b.page1.dbaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf011
            
            #add-point:AFTER FIELD dbaf011
{<point name="input.a.page1.dbaf011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf011
            #add-point:ON CHANGE dbaf011
{<point name="input.g.page1.dbaf011" />}
            #END add-point
 
         #----<<dbaf012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf012
            #add-point:BEFORE FIELD dbaf012
{<point name="input.b.page1.dbaf012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf012
            
            #add-point:AFTER FIELD dbaf012
{<point name="input.a.page1.dbaf012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf012
            #add-point:ON CHANGE dbaf012
{<point name="input.g.page1.dbaf012" />}
            #END add-point
 
         #----<<dbaf013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf013
            #add-point:BEFORE FIELD dbaf013
{<point name="input.b.page1.dbaf013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf013
            
            #add-point:AFTER FIELD dbaf013
{<point name="input.a.page1.dbaf013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf013
            #add-point:ON CHANGE dbaf013
{<point name="input.g.page1.dbaf013" />}
            #END add-point
 
         #----<<dbaf014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf014
            #add-point:BEFORE FIELD dbaf014
{<point name="input.b.page1.dbaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf014
            
            #add-point:AFTER FIELD dbaf014
{<point name="input.a.page1.dbaf014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf014
            #add-point:ON CHANGE dbaf014
{<point name="input.g.page1.dbaf014" />}
            #END add-point
 
         #----<<dbaf015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaf015
            #add-point:BEFORE FIELD dbaf015
{<point name="input.b.page1.dbaf015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaf015
            
            #add-point:AFTER FIELD dbaf015
{<point name="input.a.page1.dbaf015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbaf015
            #add-point:ON CHANGE dbaf015
{<point name="input.g.page1.dbaf015" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbaf0041>>----
         #Ctrlp:input.c.page1.dbaf0041
         ON ACTION controlp INFIELD dbaf0041
            #add-point:ON ACTION controlp INFIELD dbaf0041
{<point name="input.c.page1.dbaf0041" />}
            #END add-point
 
         #----<<dbaf004>>----
         #Ctrlp:input.c.page1.dbaf004
         ON ACTION controlp INFIELD dbaf004
            #add-point:ON ACTION controlp INFIELD dbaf004
{<point name="input.c.page1.dbaf004" />}
            #END add-point
 
         #----<<dbaf001>>----
         #----<<dbaf002>>----
         #----<<dbaf003>>----
         #Ctrlp:input.c.page1.dbaf003
         ON ACTION controlp INFIELD dbaf003
            #add-point:ON ACTION controlp INFIELD dbaf003
{<point name="input.c.page1.dbaf003" />}
            #END add-point
 
         #----<<dbaf003_desc>>----
         #----<<dbad002>>----
         #Ctrlp:input.c.page1.dbad002
         ON ACTION controlp INFIELD dbad002
            #add-point:ON ACTION controlp INFIELD dbad002
{<point name="input.c.page1.dbad002" />}
            #END add-point
 
         #----<<dbad002_desc>>----
         #----<<dbaf011>>----
         #Ctrlp:input.c.page1.dbaf011
         ON ACTION controlp INFIELD dbaf011
            #add-point:ON ACTION controlp INFIELD dbaf011
{<point name="input.c.page1.dbaf011" />}
            #END add-point
 
         #----<<dbaf012>>----
         #Ctrlp:input.c.page1.dbaf012
         ON ACTION controlp INFIELD dbaf012
            #add-point:ON ACTION controlp INFIELD dbaf012
{<point name="input.c.page1.dbaf012" />}
            #END add-point
 
         #----<<dbaf013>>----
         #Ctrlp:input.c.page1.dbaf013
         ON ACTION controlp INFIELD dbaf013
            #add-point:ON ACTION controlp INFIELD dbaf013
{<point name="input.c.page1.dbaf013" />}
            #END add-point
 
         #----<<dbaf014>>----
         #Ctrlp:input.c.page1.dbaf014
         ON ACTION controlp INFIELD dbaf014
            #add-point:ON ACTION controlp INFIELD dbaf014
{<point name="input.c.page1.dbaf014" />}
            #END add-point
 
         #----<<dbaf015>>----
         #Ctrlp:input.c.page1.dbaf015
         ON ACTION controlp INFIELD dbaf015
            #add-point:ON ACTION controlp INFIELD dbaf015
{<point name="input.c.page1.dbaf015" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_dbaf_d[l_ac].* = g_dbaf_d_t.*
               CLOSE adbi255_01_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_dbaf_d[l_ac].dbaf001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_dbaf_d[l_ac].* = g_dbaf_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
#               #end add-point
#               
#               UPDATE dbaf_t SET (dbaf004,dbaf001,dbaf002,dbaf003,dbaf011,dbaf012,dbaf013,dbaf014,dbaf015) = (g_dbaf_d[l_ac].dbaf004, 
#                   g_dbaf_d[l_ac].dbaf001,g_dbaf_d[l_ac].dbaf002,g_dbaf_d[l_ac].dbaf003,g_dbaf_d[l_ac].dbaf011, 
#                   g_dbaf_d[l_ac].dbaf012,g_dbaf_d[l_ac].dbaf013,g_dbaf_d[l_ac].dbaf014,g_dbaf_d[l_ac].dbaf015) 
#
#                WHERE dbafent = g_enterprise AND
#                  dbaf001 = g_dbaf_d_t.dbaf001 #項次   
#                  AND dbaf002 = g_dbaf_d_t.dbaf002  
#                  AND dbaf003 = g_dbaf_d_t.dbaf003  
# 
#                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
              #因為是UPDATE tmp,無須執行標準流程    
              # CASE
              #    WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
              #       CALL cl_err("dbaf_t","std-00009",1)
              #       CALL s_transaction_end('N','0')
              #      WHEN SQLCA.sqlcode #其他錯誤
              #       INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "dbaf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
              #       CALL s_transaction_end('N','0')
              #    OTHERWISE
              #                      INITIALIZE gs_keys TO NULL 
              # LET gs_keys[1] = g_dbaf_d[g_detail_idx].dbaf001
              # LET gs_keys_bak[1] = g_dbaf_d_t.dbaf001
              # LET gs_keys[2] = g_dbaf_d[g_detail_idx].dbaf002
              # LET gs_keys_bak[2] = g_dbaf_d_t.dbaf002
              # LET gs_keys[3] = g_dbaf_d[g_detail_idx].dbaf003
              # LET gs_keys_bak[3] = g_dbaf_d_t.dbaf003
              # CALL adbi255_01_update_b('dbaf_t',gs_keys,gs_keys_bak,"'1'")
              #       #資料多語言用-增/改
              #       
              # END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL adbi255_01_unlock_b("dbaf_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
{<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
{<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_dbaf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dbaf_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
{<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
{<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD dbaf0041
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
{<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE adbi255_01_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION

{</section>}

{<section id="adbi255_01.delete" >}
#+ 資料刪除
PRIVATE FUNCTION adbi255_01_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
{<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM dbaf_t 
         #WHERE dbaf001 = g_dbaf_d[li_ac].dbaf001   #170120-00038#1 20170123 mark by beckxie
         WHERE dbafent = g_enterprise               #170120-00038#1 20170123 add by beckxie
           AND dbaf001 = g_dbaf_d[li_ac].dbaf001    #170120-00038#1 20170123 add by beckxie
           AND dbaf002 = g_dbaf_d[li_ac].dbaf002
           AND dbaf003 = g_dbaf_d[li_ac].dbaf003
 
   #add-point:delete段刪除中
{<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "dbaf_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
{<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="adbi255_01.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adbi255_01_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE '',dbaf004,dbaf001,dbaf002,dbaf003,'','','',dbaf011,dbaf012,dbaf013,dbaf014, 
       dbaf015 FROM dbaf_t",
               "",
               " WHERE dbafent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY dbaf_t.dbaf001,dbaf_t.dbaf002,dbaf_t.dbaf003"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE adbi255_01_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR adbi255_01_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_dbaf_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_dbaf_d[l_ac].dbaf0041,g_dbaf_d[l_ac].dbaf004,g_dbaf_d[l_ac].dbaf001,g_dbaf_d[l_ac].dbaf002, 
       g_dbaf_d[l_ac].dbaf003,g_dbaf_d[l_ac].dbaf003_desc,g_dbaf_d[l_ac].dbad002,g_dbaf_d[l_ac].dbad002_desc, 
       g_dbaf_d[l_ac].dbaf011,g_dbaf_d[l_ac].dbaf012,g_dbaf_d[l_ac].dbaf013,g_dbaf_d[l_ac].dbaf014,g_dbaf_d[l_ac].dbaf015 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL adbi255_01_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = "dbaf_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_dbaf_d.deleteElement(g_dbaf_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_dbaf_d.getLength()
 
   END FOR
   
   IF g_cnt > g_dbaf_d.getLength() THEN
      LET l_ac = g_dbaf_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_dbaf_d.getLength() 
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE adbi255_01_pb
   
END FUNCTION

{</section>}

{<section id="adbi255_01.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION adbi255_01_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="adbi255_01.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION adbi255_01_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    

{</section>}

{<section id="adbi255_01.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION adbi255_01_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  

{</section>}

{<section id="adbi255_01.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION adbi255_01_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " dbaf001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " dbaf002 = ", g_argv[02], " AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " dbaf003 = ", g_argv[03], " AND "
   END IF
 
 
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION

{</section>}

{<section id="adbi255_01.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbi255_01_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM dbaf_t
       WHERE dbafent = g_enterprise AND
         dbaf001 = ps_keys_bak[1] AND dbaf002 = ps_keys_bak[2] AND dbaf003 = ps_keys_bak[3]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="adbi255_01.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION adbi255_01_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbaf_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO dbaf_t
                  (dbafent,
                   dbaf001,dbaf002,dbaf003
                   ,dbaf004,dbaf011,dbaf012,dbaf013,dbaf014,dbaf015) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_dbaf_d[l_ac].dbaf004,g_dbaf_d[l_ac].dbaf011,g_dbaf_d[l_ac].dbaf012,g_dbaf_d[l_ac].dbaf013, 
                       g_dbaf_d[l_ac].dbaf014,g_dbaf_d[l_ac].dbaf015)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "dbaf_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION

{</section>}

{<section id="adbi255_01.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION adbi255_01_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "dbaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "dbaf_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE dbaf_t 
         SET (dbaf001,dbaf002,dbaf003
              ,dbaf004,dbaf011,dbaf012,dbaf013,dbaf014,dbaf015) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_dbaf_d[l_ac].dbaf004,g_dbaf_d[l_ac].dbaf011,g_dbaf_d[l_ac].dbaf012,g_dbaf_d[l_ac].dbaf013, 
                  g_dbaf_d[l_ac].dbaf014,g_dbaf_d[l_ac].dbaf015) 
         WHERE dbafent = g_enterprise   #160905-00003#4 160905 by lori add:ENT過濾條件
           AND dbaf001 = ps_keys_bak[1] AND dbaf002 = ps_keys_bak[2] AND dbaf003 = ps_keys_bak[3]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "dbaf_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "dbaf_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="adbi255_01.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbi255_01_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adbi255_01_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "dbaf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbi255_01_bcl USING g_enterprise,
                                       g_dbaf_d[g_detail_idx].dbaf001,g_dbaf_d[g_detail_idx].dbaf002, 
                                           g_dbaf_d[g_detail_idx].dbaf003
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "adbi255_01_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="adbi255_01.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbi255_01_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE adbi255_01_bcl
   #END IF
   
 
 
END FUNCTION

{</section>}

{<section id="adbi255_01.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION adbi255_01_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "dbaf0041"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="adbi255_01.state_change" >}
   

{</section>}

{<section id="adbi255_01.other_dialog" readonly="Y" >}
{<point name="other.dialog"/>}

{</section>}

{<section id="adbi255_01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

