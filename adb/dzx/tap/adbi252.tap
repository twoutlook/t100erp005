<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="adbi252" std_prog="adbi252" erpver="1.0" module="ADB" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.adbi252_browser_fill" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: Tree:瀏覽頁籤設定
# Memo...........:
# Usage..........: CALL adbi252_browser_fill(p_wc)
# Input parameter: p_wc      查詢條件   
# Return code....: 
# Date & Author..: 2014/04/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_browser_fill(p_wc)
   DEFINE p_wc       STRING 
   DEFINE l_idx      LIKE type_t.num10
   DEFINE l_idx2     LIKE type_t.num10
   DEFINE l_idx3     LIKE type_t.num10
   DEFINE l_sql      STRING
   DEFINE l_expanded LIKE type_t.chr1
   
   CALL g_tree.clear()
   CLEAR FORM
   
   LET l_sql = " SELECT UNIQUE dbac002 FROM dbac_t  ",
               "  WHERE dbacent = ",g_enterprise," AND (",p_wc,") ",
               "  ORDER BY dbac002"
   PREPARE tree_pre FROM l_sql
   DECLARE tree_cur CURSOR FOR tree_pre
   
   LET l_sql = " SELECT expanded FROM adbi252_status WHERE dbac002 = ? "   
   PREPARE tree_stus FROM l_sql   
   
   LET l_idx = 1 
   FOREACH tree_cur INTO g_tree[l_idx].b_dbac002
      LET g_tree[l_idx].b_pid     = 0
      LET g_tree[l_idx].b_id      = 0, ".", l_idx USING "<<<"
      LET g_tree[l_idx].b_exp     = FALSE
      LET g_tree[l_idx].b_expcode = 1
      LET g_tree[l_idx].b_hasC    = FALSE
      LET g_tree[l_idx].b_show    = g_tree[l_idx].b_dbac002
      LET g_tree[l_idx].b_isexp   = FALSE
      
      CALL adbi252_desc_show(l_idx)
      
      LET l_idx = l_idx + 1
      
      IF l_idx > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err( '', 9035, 1)
         EXIT FOREACH
      END IF   
   END FOREACH
   CALL g_tree.deleteElement(g_tree.getLength()) 
   
   LET g_error_show = 0     
   LET g_browser_cnt = g_tree.getLength()      #總筆數, 有瀏覽頁籤才需要DISPLAY

   FREE tree_pre
   
   FOR l_idx2 = 1 TO g_tree.getLength()
      IF g_tree[l_idx2].b_isExp = FALSE THEN
          CALL adbi252_browser_expand(l_idx2,p_wc)
          LET g_tree[l_idx2].b_isExp = TRUE        
      END IF
   END FOR
 
   FOR l_idx3 = 1 TO g_tree.getLength()
      #抓取記錄在temp table裡的展開否的值
      LET l_expanded = ''
      EXECUTE tree_stus USING g_tree[l_idx3].b_dbac002 INTO l_expanded
      IF cl_null(l_expanded) THEN
         LET l_expanded = '1'
      END IF
      LET g_tree[l_idx3].b_exp = l_expanded
      #程式一執行就讓樹是全部展開的狀態
      IF g_first = 0 THEN
         LET g_tree[l_idx3].b_exp = '1'          #是否展開 1展開 2不展開
         LET g_tree[l_idx3].b_isExp = 1
         INSERT INTO adbi252_status(dbac002,expanded)
         VALUES(g_tree[l_idx3].b_dbac002,g_tree[l_idx3].b_exp)             
      END IF  
   END FOR
END FUNCTION]]>
  </point>
  <point name="function.adbi252_browser_expand" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: Tree:子節點展開
# Memo...........:
# Usage..........: CALL adbi252_browser_expand(p_id,p_wc)
# Input parameter: p_id 
#                  p_wc  
# Return code....: 
# Date & Author..: 2014/04/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_browser_expand(p_id,p_wc)
   DEFINE p_id     LIKE type_t.num10
   DEFINE p_wc     STRING
   DEFINE l_lv     LIKE type_t.num10
   DEFINE l_idx    LIKE type_t.num10
   DEFINE l_sql    STRING
   
  ##已經展開過
  #IF g_tree[p_id].b_isExp = TRUE THEN
  #   RETURN
  #END IF
  #
  ##leaf展開
  #IF g_tree[p_id].b_expcode = 1 THEN
  #   CALL adbi252_browser_expand_leaf(p_id)
  #   RETURN
  #END IF   

   LET l_lv = g_tree[p_id].b_expcode
   LET g_tree[p_id].b_isExp = TRUE
   
   LET l_sql = " SELECT UNIQUE dbac002,dbac001 FROM dbac_t ",
               "  WHERE dbacent = ",g_enterprise," AND (",p_wc,") ",
               "    AND dbac002 = '",g_tree[p_id].b_dbac002,"' ",
               "  ORDER BY dbac001 "
   PREPARE expand_pre FROM l_sql
   DECLARE expand_cur CURSOR FOR expand_pre
   
   LET l_idx = p_id + 1
   CALL g_tree.insertElement(l_idx)
   FOREACH expand_cur INTO g_tree[l_idx].b_dbac002,g_tree[l_idx].b_dbac001
      LET g_tree[l_idx].b_pid     = g_tree[p_id].b_id 
      LET g_tree[l_idx].b_id      = g_tree[p_id].b_id , ".", l_idx USING "<<<"
      LET g_tree[l_idx].b_exp     = FALSE
      LET g_tree[l_idx].b_expcode = l_lv + 1
      LET g_tree[l_idx].b_hasC    = FALSE  
      LET g_tree[l_idx].b_show    = g_tree[l_idx].b_dbac001
      CALL adbi252_desc_show(l_idx)
      LET l_idx = l_idx + 1
      CALL g_tree.insertElement(l_idx)      
   END FOREACH  
   
   CALL g_tree.deleteElement(l_idx)   
   LET g_browser_cnt = g_tree.getLength() 
END FUNCTION]]>
  </point>
  <point name="function.adbi252_desc_show" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: Tree:節點說明
# Memo...........:
# Usage..........: CALL adbi252_desc_show(pi_ac)
# Input parameter: pi_ac
# Return code....: 
# Date & Author..: 2014/04/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE lc_show     LIKE type_t.chr100
   DEFINE l_dbacl004  LIKE dbacl_t.dbacl004
   DEFINE l_dbacl005  LIKE dbacl_t.dbacl005
   
   IF cl_null(g_tree[pi_ac].b_dbac001) THEN 
      LET lc_show =  adbi252_dbac002_ref(g_tree[pi_ac].b_dbac002)
      LET g_tree[pi_ac].b_show = lc_show,'(', g_tree[pi_ac].b_dbac002,')'     
   ELSE
      CALL adbi252_dbac001_ref(g_tree[pi_ac].b_dbac001) RETURNING lc_show,l_dbacl004,l_dbacl005 
      LET g_tree[pi_ac].b_show = lc_show,'(', g_tree[pi_ac].b_dbac001,')'   
   END IF 
    
END FUNCTION]]>
  </point>
  <point name="function.adbi252_dbac001_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 片區说明
# Memo...........:
# Usage..........: CALL adbi252_dbac001_ref(p_dbac001)
#                  RETURNING r_dbac001_desc
# Input parameter: p_dbac001    片區編號
# Return code....: r_dbacl003   片區簡稱
#                  r_dbacl004   片區說明
#                  r_dbacl005   助記碼
# Date & Author..: 20140425 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_dbac001_ref(p_dbac001)
   DEFINE p_dbac001   LIKE dbac_t.dbac001
   DEFINE r_dbacl003  LIKE dbacl_t.dbacl003
   DEFINE r_dbacl004  LIKE dbacl_t.dbacl004
   DEFINE r_dbacl005  LIKE dbacl_t.dbacl005
   
   LET r_dbacl003 = NULL
   LET r_dbacl004 = NULL
   LET r_dbacl005 = NULL
   
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = p_dbac001
   CALL ap_ref_array2(g_ref_fields," SELECT dbacl003,dbacl004,dbacl005 FROM dbacl_t WHERE dbaclent = '"||g_enterprise||"' AND dbacl001 = ? AND dbacl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET r_dbacl003 = g_rtn_fields[1] 
   LET r_dbacl004 = g_rtn_fields[2] 
   LET r_dbacl005 = g_rtn_fields[3] 
   
   RETURN r_dbacl003,r_dbacl004,r_dbacl005
END FUNCTION]]>
  </point>
  <point name="function.adbi252_user_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 人員名稱
# Memo...........:
# Usage..........: CALL adbi252_user_ref(p_user_id)
#                  RETURNING r_user_desc
# Input parameter: p_user_id      人員編號
# Return code....: r_user_desc    人員名稱
# Date & Author..: 2014/04/25 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_user_ref(p_user_id)
   DEFINE p_user_id   LIKE dbac_t.dbacownid
   DEFINE r_user_desc LIKE oofa_t.oofa011 
   
   LET r_user_desc = NULL
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_user_id
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET r_user_desc = '', g_rtn_fields[1] , ''
   
   RETURN r_user_desc
END FUNCTION]]>
  </point>
  <point name="function.adbi252_org_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 組織说明
# Memo...........:
# Usage..........: CALL adbi252_org_ref(p_org_id)
#                  RETURNING r_org_desc
# Input parameter: p_org_id       組織編號
# Return code....: r_org_desc     組織說明
# Date & Author..: 2014/04/25 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_org_ref(p_org_id)
   DEFINE p_org_id   LIKE dbac_t.dbacowndp
   DEFINE r_org_desc LIKE ooefl_t.ooefl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_org_id
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_org_desc = '', g_rtn_fields[1] , ''
   
   RETURN r_org_desc
END FUNCTION]]>
  </point>
  <point name="function.adbi252_dbac002_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 路線說明
# Memo...........:
# Usage..........: CALL adbi252_dbac002_ref(p_dbac002)
#                  RETURNING r_dbac002_desc
# Input parameter: p_dbac002      路線編號
# Return code....: r_dbac002_desc 路線說明
# Date & Author..: 2014/04/25 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_dbac002_ref(p_dbac002)
   DEFINE p_dbac002      LIKE dbac_t.dbac002
   DEFINE r_dbac002_desc LIKE dbabl_t.dbabl003
   
   LET r_dbac002_desc = NULL
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_dbac002
   CALL ap_ref_array2(g_ref_fields,"SELECT dbabl003 FROM dbabl_t WHERE dbablent='"||g_enterprise||"' AND dbabl001=? AND dbabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_dbac002_desc = '', g_rtn_fields[1] , ''
   
   RETURN r_dbac002_desc
END FUNCTION]]>
  </point>
  <point name="function.adbi252_node_open" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: Tree:節點狀態更新為展開
# Memo...........:
# Usage..........: CALL adbi252_node_open(p_dbac002)
# Input parameter: p_dbac002
# Return code....: 
# Date & Author..: 2014/04/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_node_open(p_dbac002)
   DEFINE p_dbac002   LIKE dbac_t.dbac002
   
   LET g_tree[g_current_row].b_isExp = 1
   
   UPDATE adbi252_status SET expanded = '1'
    WHERE dbac002 = p_dbac002
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,1)
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.adbi252_node_close" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: Tree:節點狀態更新為展開
# Memo...........:
# Usage..........: CALL adbi252_node_close(p_dbac002)
# Input parameter: p_dbac002
# Return code....: 
# Date & Author..: 2014/04/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbi252_node_close(p_dbac002)
   DEFINE p_dbac002   LIKE dbac_t.dbac002
   
   LET g_tree[g_current_row].b_isExp = 0
   
   UPDATE adbi252_status SET expanded = '0'
    WHERE dbac002 = p_dbac002
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,1)
   END IF 
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.dbac001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbac001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbac001  #顯示到畫面上
            NEXT FIELD dbac001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dbac002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbac002  #顯示到畫面上
            NEXT FIELD dbac002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.dbaccrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbaccrtdp  #顯示到畫面上
            NEXT FIELD dbaccrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.dbaccrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbaccrtid  #顯示到畫面上
            NEXT FIELD dbaccrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.dbacmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbacmodid  #顯示到畫面上
            NEXT FIELD dbacmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.dbacowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbacowndp  #顯示到畫面上
            NEXT FIELD dbacowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.dbacownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbacownid  #顯示到畫面上
            NEXT FIELD dbacownid                     #返回原欄位
    

]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="delete.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #Tree:重整
   CALL adbi252_browser_fill(g_wc2)]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #Tree:重整
      CALL adbi252_browser_fill(g_wc2)]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   LET g_dbac2_d[l_ac].dbacownid_desc = adbi252_user_ref(g_dbac2_d[l_ac].dbacownid)
   DISPLAY BY NAME g_dbac2_d[l_ac].dbacownid_desc

   LET g_dbac2_d[l_ac].dbacowndp_desc = adbi252_org_ref(g_dbac2_d[l_ac].dbacowndp)
   DISPLAY BY NAME g_dbac2_d[l_ac].dbacowndp_desc

   LET g_dbac2_d[l_ac].dbaccrtid_desc = adbi252_user_ref(g_dbac2_d[l_ac].dbaccrtid)
   DISPLAY BY NAME g_dbac2_d[l_ac].dbaccrtid_desc

   LET g_dbac2_d[l_ac].dbaccrtdp_desc = adbi252_org_ref(g_dbac2_d[l_ac].dbaccrtdp)
   DISPLAY BY NAME g_dbac2_d[l_ac].dbaccrtdp_desc

   LET g_dbac2_d[l_ac].dbacmodid_desc = adbi252_user_ref(g_dbac2_d[l_ac].dbacmodid)
   DISPLAY BY NAME g_dbac2_d[l_ac].dbacmodid_desc
]]>
  </point>
  <point name="detail_show.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   LET g_dbac_d[l_ac].dbac002_desc = adbi252_dbac002_ref(g_dbac_d[l_ac].dbac002)
   DISPLAY BY NAME g_dbac_d[l_ac].dbac002_desc

   CALL adbi252_dbac001_ref(g_dbac_d[l_ac].dbac001) RETURNING g_dbac_d[l_ac].dbacl003,g_dbac_d[l_ac].dbacl004,g_dbac_d[l_ac].dbacl005
   DISPLAY BY NAME g_dbac_d[l_ac].dbacl003,g_dbac_d[l_ac].dbacl004,g_dbac_d[l_ac].dbacl005]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#Tree:變數---
DEFINE g_tree    DYNAMIC ARRAY OF RECORD      #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
       b_dbac002       LIKE dbac_t.dbac002,
       b_dbac001       LIKE dbac_t.dbac001
                   END RECORD
DEFINE g_root_search   BOOLEAN 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
DEFINE g_browser_cnt   LIKE type_t.num5            #total count
DEFINE g_first         LIKE type_t.chr1            #紀錄是否是程式剛開始進入狀態
DEFINE g_current_idx   LIKE type_t.num10           #Browser所在筆數
DEFINE g_current_row   LIKE type_t.num5            
DEFINE g_dbac002       LIKE dbac_t.dbac002
#Tree:變數---
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = '1'
   #Tree---
   DROP TABLE adbi252_status
   CREATE TEMP TABLE adbi252_status(
      dbac002   LIKE dbac_t.dbac002,
      expanded  LIKE type_t.chr1)
   LET g_first = 0
   #Tree---]]>
  </point>
  <point name="input.a.page1.dbac001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_dbac_d[g_detail_idx].dbac001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbac_d[g_detail_idx].dbac001 != g_dbac_d_t.dbac001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbac_t WHERE "||"dbacent = '" ||g_enterprise|| "' AND "||"dbac001 = '"||g_dbac_d[g_detail_idx].dbac001 ||"'",'std-00004',0) THEN 
                     LET g_dbac_d[g_detail_idx].dbac001 = g_dbac_d_t.dbac001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.dbac002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbac_d[l_ac].dbac002) 
               AND l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbac_d[l_ac].dbac002 != g_dbac_d_t.dbac002)) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbac_d[l_ac].dbac002
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_dbab001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbac_d[l_ac].dbac002 = g_dbac_d_t.dbac002
                  LET g_dbac_d[l_ac].dbac002_desc = adbi252_dbac002_ref(g_dbac_d[l_ac].dbac002)
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
            LET g_dbac_d[l_ac].dbac002_desc = adbi252_dbac002_ref(g_dbac_d[l_ac].dbac002)
            DISPLAY BY NAME g_dbac_d[l_ac].dbac002_desc

]]>
  </point>
  <point name="input.a.page2.dbac001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_dbac2_d[g_detail_idx].dbac001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbac2_d[g_detail_idx].dbac001 != g_dbac2_d_t.dbac001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbac_t WHERE "||"dbacent = '" ||g_enterprise|| "' AND "||"dbac001 = '"||g_dbac2_d[g_detail_idx].dbac001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #Tree
         CALL DIALOG.setCurrentRow("s_tree",g_current_idx)]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  #Tree:重整
                  CALL adbi252_browser_fill(g_wc2)               ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #Tree:重整
               LET g_wc2 = g_wc2 CLIPPED," OR dbac001 = '",g_dbac_d[l_ac].dbac001 CLIPPED,"'"
               CALL adbi252_browser_fill(g_wc2)]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #Tree:重整
               CALL adbi252_browser_fill(g_wc2)            ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_dbac_d[l_ac].dbac002 = g_dbac002
            LET g_dbac_d[l_ac].dbac002_desc = adbi252_dbac002_ref(g_dbac_d[l_ac].dbac002)
            LET g_dbac_d_t.* = g_dbac_d[l_ac].*]]>
  </point>
  <point name="input.c.page1.dbac002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbac_d[l_ac].dbac002             #給予default值
            LET g_qryparam.default2 = "" #g_dbac_d[l_ac].dbabl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #
            CALL q_dbab001()                                #呼叫開窗

            LET g_dbac_d[l_ac].dbac002 = g_qryparam.return1              
            #LET g_dbac_d[l_ac].dbabl003 = g_qryparam.return2 
            DISPLAY g_dbac_d[l_ac].dbac002 TO dbac002              #
            #DISPLAY g_dbac_d[l_ac].dbabl003 TO dbabl003 #說明(簡稱)
            NEXT FIELD dbac002                          #返回原欄位

]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbac_d[g_detail_idx].dbac001)  THEN
               CALL n_dbacl(g_dbac_d[g_detail_idx].dbac001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_dbac_d[g_detail_idx].dbac001
               CALL ap_ref_array2(g_ref_fields," SELECT dbacl003,dbacl004,dbacl005 FROM dbacl_t WHERE dbaclent = '"
                   ||g_enterprise||"' AND dbacl001 = ? AND dbacl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_dbac_d[g_detail_idx].dbacl003 = g_rtn_fields[1]
               LET g_dbac_d[g_detail_idx].dbacl004 = g_rtn_fields[2]
               LET g_dbac_d[g_detail_idx].dbacl005 = g_rtn_fields[3]
               DISPLAY BY NAME g_dbac_d[g_detail_idx].dbacl003,g_dbac_d[g_detail_idx].dbacl004,g_dbac_d[g_detail_idx].dbacl005
            END IF]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #Tree
      DISPLAY ARRAY g_tree TO s_tree.*
         BEFORE DISPLAY
            CALL DIALOG.setSelectionMode("s_tree",1) #設定為單選
 
         BEFORE ROW
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 THEN
               CALL DIALOG.setCurrentRow("s_tree",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            CALL cl_show_fld_cont() 
            CALL DIALOG.setCurrentRow("s_tree",g_current_row)    
            LET g_dbac002 = g_tree[g_current_row].b_dbac002              
            
         ON EXPAND (g_current_row)
            #樹展開
            CALL adbi252_node_open(g_tree[g_current_row].b_dbac002)
         
         ON COLLAPSE (g_current_row)
            #樹關閉
            CALL adbi252_node_close(g_tree[g_current_row].b_dbac002)
            
      END DISPLAY]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="query.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #Tree
   CALL adbi252_browser_fill(g_wc2)]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #Tree
   CALL adbi252_browser_fill(g_wc2)
   LET g_first = 1]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE i         LIKE type_t.num10]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #Tree
         DISPLAY ARRAY g_tree TO s_tree.*
            BEFORE DISPLAY
               CALL DIALOG.setSelectionMode("s_tree",1) #設定為單選
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_tree")
               IF g_current_row > 1 THEN
                  CALL DIALOG.setCurrentRow("s_tree",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_tree",g_current_row)    
               LET g_dbac002 = g_tree[g_current_row].b_dbac002               
 
            ON EXPAND (g_current_row)
               #樹展開
               CALL adbi252_node_open(g_tree[g_current_row].b_dbac002)
            ON COLLAPSE (g_current_row)
               #樹關閉
               CALL adbi252_node_close(g_tree[g_current_row].b_dbac002)
         END DISPLAY]]>
  </point>
  <section id="adbi252.b_fill" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adbi252_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE dbacstus,dbac001,'','','',dbac002,'',dbac001,dbacownid,'',dbacowndp,'', 
       dbaccrtid,'',dbaccrtdp,'',dbaccrtdt,dbacmodid,'',dbacmoddt FROM dbac_t",
               " LEFT JOIN dbacl_t ON dbac001 = dbacl001 AND dbacl002 = '",g_lang,"'",
               " WHERE dbacent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY dbac_t.dbac001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE adbi252_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR adbi252_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_dbac_d.clear()
   CALL g_dbac2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_dbac_d[l_ac].dbacstus,g_dbac_d[l_ac].dbac001,g_dbac_d[l_ac].dbacl003,g_dbac_d[l_ac].dbacl004, 
       g_dbac_d[l_ac].dbacl005,g_dbac_d[l_ac].dbac002,g_dbac_d[l_ac].dbac002_desc,g_dbac2_d[l_ac].dbac001, 
       g_dbac2_d[l_ac].dbacownid,g_dbac2_d[l_ac].dbacownid_desc,g_dbac2_d[l_ac].dbacowndp,g_dbac2_d[l_ac].dbacowndp_desc, 
       g_dbac2_d[l_ac].dbaccrtid,g_dbac2_d[l_ac].dbaccrtid_desc,g_dbac2_d[l_ac].dbaccrtdp,g_dbac2_d[l_ac].dbaccrtdp_desc, 
       g_dbac2_d[l_ac].dbaccrtdt,g_dbac2_d[l_ac].dbacmodid,g_dbac2_d[l_ac].dbacmodid_desc,g_dbac2_d[l_ac].dbacmoddt 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL adbi252_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("dbac_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_dbac_d.deleteElement(g_dbac_d.getLength())   
   CALL g_dbac2_d.deleteElement(g_dbac2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_dbac_d.getLength()
      LET g_dbac2_d[l_ac].dbac001 = g_dbac_d[l_ac].dbac001 
 
   END FOR
   
   IF g_cnt > g_dbac_d.getLength() THEN
      LET l_ac = g_dbac_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_dbac_d.getLength() 
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE adbi252_pb
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adbi252_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " dbac001 = '", g_argv[1], "' AND "
   END IF
   
 
 
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION adbi252_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM dbac_t 
         WHERE dbac001 = g_dbac_d[li_ac].dbac001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("dbac_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbi252_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbac_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM dbac_t
       WHERE dbacent = g_enterprise AND
         dbac001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.description" ver="134" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000133
#+ 
#+ Filename...: adbi252
#+ Description: 片區基本資料維護作業
#+ Creator....: 02749(2014/04/25)
#+ Modifier...: 02749(2014/04/25)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="adbi252.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION adbi252_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_dbac2_d[l_ac].dbacownid_desc = cl_get_username(g_dbac2_d[l_ac].dbacownid)
      #LET g_dbac2_d[l_ac].dbacowndp_desc = cl_get_deptname(g_dbac2_d[l_ac].dbacowndp)
      #LET g_dbac2_d[l_ac].dbaccrtid_desc = cl_get_username(g_dbac2_d[l_ac].dbaccrtid)
      #LET g_dbac2_d[l_ac].dbaccrtdp_desc = cl_get_deptname(g_dbac2_d[l_ac].dbaccrtdp)
      #LET g_dbac2_d[l_ac].dbacmodid_desc = cl_get_username(g_dbac2_d[l_ac].dbacmodid)
      ##LET .dbaccnfid_desc = cl_get_deptname(.dbaccnfid)
      ##LET .dbacpstid_desc = cl_get_deptname(.dbacpstid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_dbac_d RECORD
       dbacstus LIKE dbac_t.dbacstus, 
   dbac001 LIKE dbac_t.dbac001, 
   dbacl003 LIKE type_t.chr500, 
   dbacl004 LIKE type_t.chr500, 
   dbacl005 LIKE type_t.chr500, 
   dbac002 LIKE dbac_t.dbac002, 
   dbac002_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_dbac2_d RECORD
       dbac001 LIKE dbac_t.dbac001, 
   dbacownid LIKE dbac_t.dbacownid, 
   dbacownid_desc LIKE type_t.chr500, 
   dbacowndp LIKE dbac_t.dbacowndp, 
   dbacowndp_desc LIKE type_t.chr500, 
   dbaccrtid LIKE dbac_t.dbaccrtid, 
   dbaccrtid_desc LIKE type_t.chr500, 
   dbaccrtdp LIKE dbac_t.dbaccrtdp, 
   dbaccrtdp_desc LIKE type_t.chr500, 
   dbaccrtdt DATETIME YEAR TO SECOND, 
   dbacmodid LIKE dbac_t.dbacmodid, 
   dbacmodid_desc LIKE type_t.chr500, 
   dbacmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      dbacl001 LIKE dbacl_t.dbacl001,
      dbacl002 LIKE dbacl_t.dbacl002,
      dbacl003 LIKE dbacl_t.dbacl003,
      dbacl004 LIKE dbacl_t.dbacl004,
      dbacl005 LIKE dbacl_t.dbacl005
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_dbac_d          DYNAMIC ARRAY OF type_g_dbac_d
DEFINE g_dbac_d_t        type_g_dbac_d
DEFINE g_dbac2_d   DYNAMIC ARRAY OF type_g_dbac2_d
DEFINE g_dbac2_d_t type_g_dbac2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="adbi252.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION adbi252_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL adbi252_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION adbi252_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL adbi252_set_entry_b("a")  
   
   CALL adbi252_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_dbac_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adbi252_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbac_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO dbac_t
                  (dbacent,
                   dbac001
                   ,dbacstus,dbac002,dbacownid,dbacowndp,dbaccrtid,dbaccrtdp,dbaccrtdt,dbacmodid,dbacmoddt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_dbac_d[l_ac].dbacstus,g_dbac_d[l_ac].dbac002,g_dbac2_d[l_ac].dbacownid,g_dbac2_d[l_ac].dbacowndp, 
                       g_dbac2_d[l_ac].dbaccrtid,g_dbac2_d[l_ac].dbaccrtdp,g_dbac2_d[l_ac].dbaccrtdt, 
                       g_dbac2_d[l_ac].dbacmodid,g_dbac2_d[l_ac].dbacmoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("dbac_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION adbi252_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbi252_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adbi252_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "dbac_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbi252_bcl USING g_enterprise,
                                       g_dbac_d[g_detail_idx].dbac001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("adbi252_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbi252 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbi252_init()   
 
      #進入選單 Menu (="N")
      CALL adbi252_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbi252
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="adbi252.modify" ver="2" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION adbi252_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT dbacstus,dbac001,'','','',dbac002,'','',dbacownid,'',dbacowndp,'',dbaccrtid, 
       '',dbaccrtdp,'',dbaccrtdt,dbacmodid,'',dbacmoddt FROM dbac_t WHERE dbacent=? AND dbac001=? FOR  
       UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE adbi252_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_dbac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dbac_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbi252_b_fill(g_wc2)
            LET g_detail_cnt = g_dbac_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_dbac_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_dbac_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_dbac_d[l_ac].dbac001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dbac_d_t.* = g_dbac_d[l_ac].*  #BACKUP
               IF NOT adbi252_lock_b("dbac_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbi252_bcl INTO g_dbac_d[l_ac].dbacstus,g_dbac_d[l_ac].dbac001,g_dbac_d[l_ac].dbacl003, 
                      g_dbac_d[l_ac].dbacl004,g_dbac_d[l_ac].dbacl005,g_dbac_d[l_ac].dbac002,g_dbac_d[l_ac].dbac002_desc, 
                      g_dbac2_d[l_ac].dbac001,g_dbac2_d[l_ac].dbacownid,g_dbac2_d[l_ac].dbacownid_desc, 
                      g_dbac2_d[l_ac].dbacowndp,g_dbac2_d[l_ac].dbacowndp_desc,g_dbac2_d[l_ac].dbaccrtid, 
                      g_dbac2_d[l_ac].dbaccrtid_desc,g_dbac2_d[l_ac].dbaccrtdp,g_dbac2_d[l_ac].dbaccrtdp_desc, 
                      g_dbac2_d[l_ac].dbaccrtdt,g_dbac2_d[l_ac].dbacmodid,g_dbac2_d[l_ac].dbacmodid_desc, 
                      g_dbac2_d[l_ac].dbacmoddt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dbac_d_t.dbac001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL adbi252_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.dbacl001 = g_dbac_d[l_ac].dbac001
LET g_detail_multi_table_t.dbacl002 = g_dlang
LET g_detail_multi_table_t.dbacl003 = g_dbac_d[l_ac].dbacl003
LET g_detail_multi_table_t.dbacl004 = g_dbac_d[l_ac].dbacl004
LET g_detail_multi_table_t.dbacl005 = g_dbac_d[l_ac].dbacl005
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'dbacl001'
            LET l_var_keys[01] = g_dbac_d[l_ac].dbac001
            LET l_field_keys[02] = 'dbacl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'dbacl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dbac_d_t.* TO NULL
            INITIALIZE g_dbac_d[l_ac].* TO NULL 
                  LET g_dbac_d[l_ac].dbacstus = "Y"
 
 
            LET g_dbac_d_t.* = g_dbac_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbi252_set_entry_b("a")
            CALL adbi252_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dbac_d[li_reproduce_target].* = g_dbac_d[li_reproduce].*
               LET g_dbac2_d[li_reproduce_target].* = g_dbac2_d[li_reproduce].*
 
               LET g_dbac_d[g_dbac_d.getLength()].dbac001 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_dbac2_d[l_ac].dbacownid = g_user
      LET g_dbac2_d[l_ac].dbacowndp = g_dept
      LET g_dbac2_d[l_ac].dbaccrtid = g_user
      LET g_dbac2_d[l_ac].dbaccrtdp = g_dept 
      LET g_dbac2_d[l_ac].dbaccrtdt = cl_get_current()
      LET g_dbac2_d[l_ac].dbacmodid = ""
      LET g_dbac2_d[l_ac].dbacmoddt = ""
      LET g_dbac_d[l_ac].dbacstus = ""
 
 
            LET g_detail_multi_table_t.dbacl001 = g_dbac_d[l_ac].dbac001
LET g_detail_multi_table_t.dbacl002 = g_dlang
LET g_detail_multi_table_t.dbacl003 = g_dbac_d[l_ac].dbacl003
LET g_detail_multi_table_t.dbacl004 = g_dbac_d[l_ac].dbacl004
LET g_detail_multi_table_t.dbacl005 = g_dbac_d[l_ac].dbacl005
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dbac_t 
             WHERE dbacent = g_enterprise AND dbac001 = g_dbac_d[l_ac].dbac001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbac_d[g_detail_idx].dbac001
               CALL adbi252_insert_b('dbac_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dbac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dbac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbi252_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_dbac_d[l_ac].dbac001 = g_detail_multi_table_t.dbacl001 AND
         g_dbac_d[l_ac].dbacl003 = g_detail_multi_table_t.dbacl003 AND
         g_dbac_d[l_ac].dbacl004 = g_detail_multi_table_t.dbacl004 AND
         g_dbac_d[l_ac].dbacl005 = g_detail_multi_table_t.dbacl005 THEN
         ELSE 
            LET l_var_keys[01] = g_dbac_d[l_ac].dbac001
            LET l_field_keys[01] = 'dbacl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'dbacl002'
            LET l_vars[01] = g_dbac_d[l_ac].dbacl003
            LET l_fields[01] = 'dbacl003'
            LET l_vars[02] = g_dbac_d[l_ac].dbacl004
            LET l_fields[02] = 'dbacl004'
            LET l_vars[03] = g_dbac_d[l_ac].dbacl005
            LET l_fields[03] = 'dbacl005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'dbaclent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.dbacl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.dbacl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'dbacl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (dbac001 = '", g_dbac_d[l_ac].dbac001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dbac_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dbac_d.deleteElement(l_ac)
               NEXT FIELD dbac001
            END IF
            IF g_dbac_d[l_ac].dbac001 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM dbac_t
                WHERE dbacent = g_enterprise AND 
                      dbac001 = g_dbac_d_t.dbac001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dbac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'dbacl001'
                  LET l_field_keys[02] = 'dbacl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.dbacl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.dbacl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'dbacl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adbi252_bcl
               LET l_count = g_dbac_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbac_d[g_detail_idx].dbac001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adbi252_delete_b('dbac_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbacstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacstus
            #add-point:BEFORE FIELD dbacstus
            {<point name="input.b.page1.dbacstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacstus
            
            #add-point:AFTER FIELD dbacstus
            {<point name="input.a.page1.dbacstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbacstus
            #add-point:ON CHANGE dbacstus
            {<point name="input.g.page1.dbacstus" />}
            #END add-point
 
         #----<<dbac001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbac001
            #add-point:BEFORE FIELD dbac001
            {<point name="input.b.page1.dbac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbac001
            
            #add-point:AFTER FIELD dbac001
            {<point name="input.a.page1.dbac001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbac001
            #add-point:ON CHANGE dbac001
            {<point name="input.g.page1.dbac001" />}
            #END add-point
 
         #----<<dbacl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl003
            #add-point:BEFORE FIELD dbacl003
            {<point name="input.b.page1.dbacl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl003
            
            #add-point:AFTER FIELD dbacl003
            {<point name="input.a.page1.dbacl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbacl003
            #add-point:ON CHANGE dbacl003
            {<point name="input.g.page1.dbacl003" />}
            #END add-point
 
         #----<<dbacl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl004
            #add-point:BEFORE FIELD dbacl004
            {<point name="input.b.page1.dbacl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl004
            
            #add-point:AFTER FIELD dbacl004
            {<point name="input.a.page1.dbacl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbacl004
            #add-point:ON CHANGE dbacl004
            {<point name="input.g.page1.dbacl004" />}
            #END add-point
 
         #----<<dbacl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl005
            #add-point:BEFORE FIELD dbacl005
            {<point name="input.b.page1.dbacl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl005
            
            #add-point:AFTER FIELD dbacl005
            {<point name="input.a.page1.dbacl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbacl005
            #add-point:ON CHANGE dbacl005
            {<point name="input.g.page1.dbacl005" />}
            #END add-point
 
         #----<<dbac002>>----
         #此段落由子樣板a02產生
         AFTER FIELD dbac002
            
            #add-point:AFTER FIELD dbac002
            {<point name="input.a.page1.dbac002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbac002
            #add-point:BEFORE FIELD dbac002
            {<point name="input.b.page1.dbac002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbac002
            #add-point:ON CHANGE dbac002
            {<point name="input.g.page1.dbac002" />}
            #END add-point
 
         #----<<dbac002_desc>>----
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbacstus>>----
         #Ctrlp:input.c.page1.dbacstus
         ON ACTION controlp INFIELD dbacstus
            #add-point:ON ACTION controlp INFIELD dbacstus
            {<point name="input.c.page1.dbacstus" />}
            #END add-point
 
         #----<<dbac001>>----
         #Ctrlp:input.c.page1.dbac001
         ON ACTION controlp INFIELD dbac001
            #add-point:ON ACTION controlp INFIELD dbac001
            {<point name="input.c.page1.dbac001" />}
            #END add-point
 
         #----<<dbacl003>>----
         #Ctrlp:input.c.page1.dbacl003
         ON ACTION controlp INFIELD dbacl003
            #add-point:ON ACTION controlp INFIELD dbacl003
            {<point name="input.c.page1.dbacl003" />}
            #END add-point
 
         #----<<dbacl004>>----
         #Ctrlp:input.c.page1.dbacl004
         ON ACTION controlp INFIELD dbacl004
            #add-point:ON ACTION controlp INFIELD dbacl004
            {<point name="input.c.page1.dbacl004" />}
            #END add-point
 
         #----<<dbacl005>>----
         #Ctrlp:input.c.page1.dbacl005
         ON ACTION controlp INFIELD dbacl005
            #add-point:ON ACTION controlp INFIELD dbacl005
            {<point name="input.c.page1.dbacl005" />}
            #END add-point
 
         #----<<dbac002>>----
         #Ctrlp:input.c.page1.dbac002
         ON ACTION controlp INFIELD dbac002
            #add-point:ON ACTION controlp INFIELD dbac002
            {<point name="input.c.page1.dbac002" />}
            #END add-point
 
         #----<<dbac002_desc>>----
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dbac_d[l_ac].* = g_dbac_d_t.*
               CLOSE adbi252_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dbac_d[l_ac].dbac001,-263,1)
               LET g_dbac_d[l_ac].* = g_dbac_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_dbac2_d[l_ac].dbacmodid = g_user 
LET g_dbac2_d[l_ac].dbacmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE dbac_t SET (dbacstus,dbac001,dbac002,dbacownid,dbacowndp,dbaccrtid,dbaccrtdp,dbaccrtdt, 
                   dbacmodid,dbacmoddt) = (g_dbac_d[l_ac].dbacstus,g_dbac_d[l_ac].dbac001,g_dbac_d[l_ac].dbac002, 
                   g_dbac2_d[l_ac].dbacownid,g_dbac2_d[l_ac].dbacowndp,g_dbac2_d[l_ac].dbaccrtid,g_dbac2_d[l_ac].dbaccrtdp, 
                   g_dbac2_d[l_ac].dbaccrtdt,g_dbac2_d[l_ac].dbacmodid,g_dbac2_d[l_ac].dbacmoddt)
                WHERE dbacent = g_enterprise AND
                  dbac001 = g_dbac_d_t.dbac001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("dbac_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("dbac_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbac_d[g_detail_idx].dbac001
               LET gs_keys_bak[1] = g_dbac_d_t.dbac001
               CALL adbi252_update_b('dbac_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_dbac_d[l_ac].dbac001 = g_detail_multi_table_t.dbacl001 AND
         g_dbac_d[l_ac].dbacl003 = g_detail_multi_table_t.dbacl003 AND
         g_dbac_d[l_ac].dbacl004 = g_detail_multi_table_t.dbacl004 AND
         g_dbac_d[l_ac].dbacl005 = g_detail_multi_table_t.dbacl005 THEN
         ELSE 
            LET l_var_keys[01] = g_dbac_d[l_ac].dbac001
            LET l_field_keys[01] = 'dbacl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'dbacl002'
            LET l_vars[01] = g_dbac_d[l_ac].dbacl003
            LET l_fields[01] = 'dbacl003'
            LET l_vars[02] = g_dbac_d[l_ac].dbacl004
            LET l_fields[02] = 'dbacl004'
            LET l_vars[03] = g_dbac_d[l_ac].dbacl005
            LET l_fields[03] = 'dbacl005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'dbaclent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.dbacl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.dbacl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'dbacl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL adbi252_unlock_b("dbac_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_dbac_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dbac_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_dbac2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL adbi252_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD dbacstus
            WHEN "s_detail2"
               NEXT FIELD dbac001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE adbi252_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION adbi252_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "dbacstus"
      WHEN "s_detail2"
         LET ls_return = "dbac001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="adbi252.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="adbi252.query" ver="2" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adbi252_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_dbac_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON dbacstus,dbac001,dbacl003,dbacl004,dbacl005,dbac002,dbacownid,dbacowndp,dbaccrtid, 
          dbaccrtdp,dbaccrtdt,dbacmodid,dbacmoddt 
 
         FROM s_detail1[1].dbacstus,s_detail1[1].dbac001,s_detail1[1].dbacl003,s_detail1[1].dbacl004, 
             s_detail1[1].dbacl005,s_detail1[1].dbac002,s_detail2[1].dbacownid,s_detail2[1].dbacowndp, 
             s_detail2[1].dbaccrtid,s_detail2[1].dbaccrtdp,s_detail2[1].dbaccrtdt,s_detail2[1].dbacmodid, 
             s_detail2[1].dbacmoddt 
      
         #此段落由子樣板a11產生
         ##----<<dbacownid>>----
         #ON ACTION controlp INFIELD dbacownid
         #   CALL q_common('','dbacownid',TRUE,FALSE,g_dbac2_d[1].dbacownid) RETURNING ls_return
         #   DISPLAY ls_return TO dbacownid
         #   NEXT FIELD dbacownid  
         #
         ##----<<dbacowndp>>----
         #ON ACTION controlp INFIELD dbacowndp
         #   CALL q_common('','dbacowndp',TRUE,FALSE,g_dbac2_d[1].dbacowndp) RETURNING ls_return
         #   DISPLAY ls_return TO dbacowndp
         #   NEXT FIELD dbacowndp
         #
         ##----<<dbaccrtid>>----
         #ON ACTION controlp INFIELD dbaccrtid
         #   CALL q_common('','dbaccrtid',TRUE,FALSE,g_dbac2_d[1].dbaccrtid) RETURNING ls_return
         #   DISPLAY ls_return TO dbaccrtid
         #   NEXT FIELD dbaccrtid
         #
         ##----<<dbaccrtdp>>----
         #ON ACTION controlp INFIELD dbaccrtdp
         #   CALL q_common('','dbaccrtdp',TRUE,FALSE,g_dbac2_d[1].dbaccrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO dbaccrtdp
         #   NEXT FIELD dbaccrtdp
         #
         ##----<<dbacmodid>>----
         #ON ACTION controlp INFIELD dbacmodid
         #   CALL q_common('','dbacmodid',TRUE,FALSE,g_dbac2_d[1].dbacmodid) RETURNING ls_return
         #   DISPLAY ls_return TO dbacmodid
         #   NEXT FIELD dbacmodid
         #
         ##----<<dbaccnfid>>----
         ##ON ACTION controlp INFIELD dbaccnfid
         ##   CALL q_common('','dbaccnfid',TRUE,FALSE,.dbaccnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO dbaccnfid
         ##   NEXT FIELD dbaccnfid
         #
         ##----<<dbacpstid>>----
         ##ON ACTION controlp INFIELD dbacpstid
         ##   CALL q_common('','dbacpstid',TRUE,FALSE,.dbacpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO dbacpstid
         ##   NEXT FIELD dbacpstid
         
         ##----<<dbaccrtdt>>----
         AFTER FIELD dbaccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbacmoddt>>----
         AFTER FIELD dbacmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbaccnfdt>>----
         #AFTER FIELD dbaccnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbacpstdt>>----
         #AFTER FIELD dbacpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<dbacstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacstus
            #add-point:BEFORE FIELD dbacstus
            {<point name="query.b.page1.dbacstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacstus
            
            #add-point:AFTER FIELD dbacstus
            {<point name="query.a.page1.dbacstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbacstus
         ON ACTION controlp INFIELD dbacstus
            #add-point:ON ACTION controlp INFIELD dbacstus
            {<point name="query.c.page1.dbacstus" />}
            #END add-point
 
         #----<<dbac001>>----
         #Ctrlp:construct.c.page1.dbac001
         ON ACTION controlp INFIELD dbac001
            #add-point:ON ACTION controlp INFIELD dbac001
            {<point name="construct.c.page1.dbac001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbac001
            #add-point:BEFORE FIELD dbac001
            {<point name="query.b.page1.dbac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbac001
            
            #add-point:AFTER FIELD dbac001
            {<point name="query.a.page1.dbac001" />}
            #END add-point
            
 
         #----<<dbacl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl003
            #add-point:BEFORE FIELD dbacl003
            {<point name="query.b.page1.dbacl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl003
            
            #add-point:AFTER FIELD dbacl003
            {<point name="query.a.page1.dbacl003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbacl003
         ON ACTION controlp INFIELD dbacl003
            #add-point:ON ACTION controlp INFIELD dbacl003
            {<point name="query.c.page1.dbacl003" />}
            #END add-point
 
         #----<<dbacl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl004
            #add-point:BEFORE FIELD dbacl004
            {<point name="query.b.page1.dbacl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl004
            
            #add-point:AFTER FIELD dbacl004
            {<point name="query.a.page1.dbacl004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbacl004
         ON ACTION controlp INFIELD dbacl004
            #add-point:ON ACTION controlp INFIELD dbacl004
            {<point name="query.c.page1.dbacl004" />}
            #END add-point
 
         #----<<dbacl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacl005
            #add-point:BEFORE FIELD dbacl005
            {<point name="query.b.page1.dbacl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacl005
            
            #add-point:AFTER FIELD dbacl005
            {<point name="query.a.page1.dbacl005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbacl005
         ON ACTION controlp INFIELD dbacl005
            #add-point:ON ACTION controlp INFIELD dbacl005
            {<point name="query.c.page1.dbacl005" />}
            #END add-point
 
         #----<<dbac002>>----
         #Ctrlp:construct.c.page1.dbac002
         ON ACTION controlp INFIELD dbac002
            #add-point:ON ACTION controlp INFIELD dbac002
            {<point name="construct.c.page1.dbac002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbac002
            #add-point:BEFORE FIELD dbac002
            {<point name="query.b.page1.dbac002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbac002
            
            #add-point:AFTER FIELD dbac002
            {<point name="query.a.page1.dbac002" />}
            #END add-point
            
 
         #----<<dbac002_desc>>----
  
         
         #---------------------<  Detail: page2  >---------------------
         #----<<dbacownid>>----
         #Ctrlp:construct.c.page2.dbacownid
         ON ACTION controlp INFIELD dbacownid
            #add-point:ON ACTION controlp INFIELD dbacownid
            {<point name="construct.c.page2.dbacownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbacownid
            #add-point:BEFORE FIELD dbacownid
            {<point name="query.b.page2.dbacownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacownid
            
            #add-point:AFTER FIELD dbacownid
            {<point name="query.a.page2.dbacownid" />}
            #END add-point
            
 
         #----<<dbacownid_desc>>----
         #----<<dbacowndp>>----
         #Ctrlp:construct.c.page2.dbacowndp
         ON ACTION controlp INFIELD dbacowndp
            #add-point:ON ACTION controlp INFIELD dbacowndp
            {<point name="construct.c.page2.dbacowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbacowndp
            #add-point:BEFORE FIELD dbacowndp
            {<point name="query.b.page2.dbacowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacowndp
            
            #add-point:AFTER FIELD dbacowndp
            {<point name="query.a.page2.dbacowndp" />}
            #END add-point
            
 
         #----<<dbacowndp_desc>>----
         #----<<dbaccrtid>>----
         #Ctrlp:construct.c.page2.dbaccrtid
         ON ACTION controlp INFIELD dbaccrtid
            #add-point:ON ACTION controlp INFIELD dbaccrtid
            {<point name="construct.c.page2.dbaccrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbaccrtid
            #add-point:BEFORE FIELD dbaccrtid
            {<point name="query.b.page2.dbaccrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaccrtid
            
            #add-point:AFTER FIELD dbaccrtid
            {<point name="query.a.page2.dbaccrtid" />}
            #END add-point
            
 
         #----<<dbaccrtid_desc>>----
         #----<<dbaccrtdp>>----
         #Ctrlp:construct.c.page2.dbaccrtdp
         ON ACTION controlp INFIELD dbaccrtdp
            #add-point:ON ACTION controlp INFIELD dbaccrtdp
            {<point name="construct.c.page2.dbaccrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbaccrtdp
            #add-point:BEFORE FIELD dbaccrtdp
            {<point name="query.b.page2.dbaccrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbaccrtdp
            
            #add-point:AFTER FIELD dbaccrtdp
            {<point name="query.a.page2.dbaccrtdp" />}
            #END add-point
            
 
         #----<<dbaccrtdp_desc>>----
         #----<<dbaccrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbaccrtdt
            #add-point:BEFORE FIELD dbaccrtdt
            {<point name="query.b.page2.dbaccrtdt" />}
            #END add-point
 
         #----<<dbacmodid>>----
         #Ctrlp:construct.c.page2.dbacmodid
         ON ACTION controlp INFIELD dbacmodid
            #add-point:ON ACTION controlp INFIELD dbacmodid
            {<point name="construct.c.page2.dbacmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbacmodid
            #add-point:BEFORE FIELD dbacmodid
            {<point name="query.b.page2.dbacmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbacmodid
            
            #add-point:AFTER FIELD dbacmodid
            {<point name="query.a.page2.dbacmodid" />}
            #END add-point
            
 
         #----<<dbacmodid_desc>>----
         #----<<dbacmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbacmoddt
            #add-point:BEFORE FIELD dbacmoddt
            {<point name="query.b.page2.dbacmoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL adbi252_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="adbi252.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adbi252_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="adbi252.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adbi252_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="adbi252.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="adbi252.ui_dialog" ver="16" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION adbi252_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL adbi252_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_dbac_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point                        
      
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_dbac2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbi252_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbi252_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adbi252_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbi252_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE adbi252_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="adbi252.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adbi252_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "dbac_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "dbac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE dbac_t 
         SET (dbac001
              ,dbacstus,dbac002,dbacownid,dbacowndp,dbaccrtid,dbaccrtdp,dbaccrtdt,dbacmodid,dbacmoddt) 
              = 
             (ps_keys[1]
              ,g_dbac_d[l_ac].dbacstus,g_dbac_d[l_ac].dbac002,g_dbac2_d[l_ac].dbacownid,g_dbac2_d[l_ac].dbacowndp, 
                  g_dbac2_d[l_ac].dbaccrtid,g_dbac2_d[l_ac].dbaccrtdp,g_dbac2_d[l_ac].dbaccrtdt,g_dbac2_d[l_ac].dbacmodid, 
                  g_dbac2_d[l_ac].dbacmoddt) 
         WHERE dbac001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("dbac_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("dbac_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
