<add_points prog="adbi251" std_prog="adbi251" erpver="1.0" module="ADB" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.dbab001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbab001  #顯示到畫面上
            NEXT FIELD dbab001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.dbab002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbab002  #顯示到畫面上
            NEXT FIELD dbab002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.dbabcrtdp" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbabcrtdp  #顯示到畫面上
            NEXT FIELD dbabcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.dbabcrtid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbabcrtid  #顯示到畫面上
            NEXT FIELD dbabcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.dbabmodid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbabmodid  #顯示到畫面上
            NEXT FIELD dbabmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.dbabowndp" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbabowndp  #顯示到畫面上
            NEXT FIELD dbabowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.dbabownid" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbabownid  #顯示到畫面上
            NEXT FIELD dbabownid                     #返回原欄位
    

]]>
</point>
  <point name="detail_show.body3.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab3_d[l_ac].dbabownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbab3_d[l_ac].dbabownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab3_d[l_ac].dbabownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab3_d[l_ac].dbabowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbab3_d[l_ac].dbabowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab3_d[l_ac].dbabowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab3_d[l_ac].dbabcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbab3_d[l_ac].dbabcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab3_d[l_ac].dbabcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab3_d[l_ac].dbabcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbab3_d[l_ac].dbabcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab3_d[l_ac].dbabcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab3_d[l_ac].dbabmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbab3_d[l_ac].dbabmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab3_d[l_ac].dbabmodid_desc
]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbab_d[l_ac].dbab002
            CALL ap_ref_array2(g_ref_fields,"SELECT dbael003 FROM dbael_t WHERE dbaelent='"||g_enterprise||"' AND dbael001=? AND dbael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbab_d[l_ac].dbab002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbab_d[l_ac].dbab002_desc

   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_dbab_d[l_ac].dbab001
   CALL ap_ref_array2(g_ref_fields," SELECT dbabl003,dbabl004,dbabl005 FROM dbabl_t WHERE dbablent = '"||g_enterprise||"' AND dbabl001 = ? AND dbabl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_dbab_d[l_ac].dbabl003 = g_rtn_fields[1] 
   LET g_dbab_d[l_ac].dbabl004 = g_rtn_fields[2] 
   LET g_dbab_d[l_ac].dbabl005 = g_rtn_fields[3] 
   DISPLAY BY NAME g_dbab_d[l_ac].dbabl003,g_dbab_d[l_ac].dbabl004,g_dbab_d[l_ac].dbabl005]]>
</point>
  <point name="input.a.page1.dbab001" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF g_dbab_d[l_ac].dbab001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbab_d[l_ac].dbab001 != g_dbab_d_t.dbab001 OR g_dbab_d_t.dbab001 IS NULL)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbab_t WHERE "||"dbabent = '" ||g_enterprise|| "' AND "||"dbab001 = '"||g_dbab_d[l_ac].dbab001 ||"'",'std-00004',0) THEN 
                     LET g_dbab_d[l_ac].dbab001 = g_dbab_d_t.dbab001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.dbab002" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_dbab_d[l_ac].dbab002_desc = ''            
            IF NOT cl_null(g_dbab_d[l_ac].dbab002) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數                  
               LET g_chkparam.arg1 = g_dbab_d[l_ac].dbab002
               IF NOT cl_chk_exist("v_dbae001") THEN
                  LET g_dbab_d[l_ac].dbab002 = g_dbab_d_t.dbab002
                  CALL adbi251_dbab002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL adbi251_dbab002_ref()            ]]>
</point>
  <point name="input.a.page2.dbab001_2" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_dbab2_d[g_detail_idx].dbab001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbab2_d[g_detail_idx].dbab001 != g_dbab2_d_t.dbab001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbab_t WHERE "||"dbabent = '" ||g_enterprise|| "' AND "||"dbab001 = '"||g_dbab2_d[g_detail_idx].dbab001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.dbab001_2" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_dbab3_d[g_detail_idx].dbab001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbab3_d[g_detail_idx].dbab001 != g_dbab3_d_t.dbab001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbab_t WHERE "||"dbabent = '" ||g_enterprise|| "' AND "||"dbab001 = '"||g_dbab3_d[g_detail_idx].dbab001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page3.dbab001_3" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_dbab3_d[g_detail_idx].dbab001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbab3_d[g_detail_idx].dbab001 != g_dbab3_d_t.dbab001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbab_t WHERE "||"dbabent = '" ||g_enterprise|| "' AND "||"dbab001 = '"||g_dbab3_d[g_detail_idx].dbab001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.page1.dbab002" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_dbab_d[l_ac].dbab002  #給予default值
            CALL q_dbae001()                                  #呼叫開窗
            LET g_dbab_d[l_ac].dbab002 = g_qryparam.return1              
            DISPLAY g_dbab_d[l_ac].dbab002 TO dbab002
            CALL adbi251_dbab002_ref()            
            NEXT FIELD dbab002                                #返回原欄位]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[ TYPE type_g_dbab2_d RECORD
   dbab001 LIKE dbab_t.dbab001,
   dbab011 LIKE dbab_t.dbab011,
   dbab012 LIKE dbab_t.dbab012,
   dbab013 LIKE dbab_t.dbab013,
   dbab014 LIKE dbab_t.dbab014,
   dbab015 LIKE dbab_t.dbab015,
   dbab021 LIKE dbab_t.dbab021,
   dbab022 LIKE dbab_t.dbab022,
   dbab023 LIKE dbab_t.dbab023,
   dbab024 LIKE dbab_t.dbab024,
   dbab025 LIKE dbab_t.dbab025,
   dbab031 LIKE dbab_t.dbab031,
   dbab032 LIKE dbab_t.dbab032,
   dbab035 LIKE dbab_t.dbab035,
   dbab034 LIKE dbab_t.dbab034,
   dbab033 LIKE dbab_t.dbab033
       END RECORD
DEFINE g_dbab2_d          DYNAMIC ARRAY OF type_g_dbab2_d
DEFINE g_dbab2_d_t        type_g_dbab2_d
DEFINE g_wc2_01           STRING]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[   LET g_errshow = 1]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row3" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[         DISPLAY ARRAY g_dbab2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont()        
         END DISPLAY]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.c.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbab001" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbab001" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.c.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.c.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.c.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page1.dbab002" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page1.dbab002" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabownid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page3.dbabownid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabowndp" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page3.dbabowndp" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabcrtid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page3.dbabcrtid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabcrtdp" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page3.dbabcrtdp" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabcrtdt" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabmodid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.a.page3.dbabmodid" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.b.page3.dbabmoddt" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[      CONSTRUCT g_wc2_01 ON dbab011,dbab012,dbab013,dbab014,dbab015,
                            dbab021,dbab022,dbab023,dbab024,dbab025,
                            dbab031,dbab032,dbab035,dbab034,dbab033
 
         FROM s_detail2[1].dbab011,s_detail2[1].dbab012,s_detail2[1].dbab013,s_detail2[1].dbab014,
              s_detail2[1].dbab015,s_detail2[1].dbab021,s_detail2[1].dbab022,s_detail2[1].dbab023, 
              s_detail2[1].dbab024,s_detail2[1].dbab025,s_detail2[1].dbab031,s_detail2[1].dbab032,
              s_detail2[1].dbab035,s_detail2[1].dbab034,s_detail2[1].dbab033
              
              
      END CONSTRUCT ]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[   IF NOT cl_null(g_wc2_01) THEN
      IF cl_null(g_wc2) THEN
         LET g_wc2 = g_wc2_01
      ELSE
         LET g_wc2 = g_wc2 CLIPPED," AND ",g_wc2_01
      END IF
   END IF]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.before_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.b_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.m_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.a_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.detail_input.page1.update_item" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[            IF NOT cl_null(g_dbab_d[l_ac].dbab001)  THEN
               CALL n_dbabl(g_dbab_d[l_ac].dbab001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_dbab_d[l_ac].dbab001
               CALL ap_ref_array2(g_ref_fields," SELECT dbabl003,dbabl004,dbabl005 FROM dbabl_t WHERE dbablent = '"||g_enterprise||"' AND dbabl001 = ? AND dbabl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_dbab_d[l_ac].dbabl003 = g_rtn_fields[1]
               LET g_dbab_d[l_ac].dbabl004 = g_rtn_fields[2]
               LET g_dbab_d[l_ac].dbabl005 = g_rtn_fields[3]
               DISPLAY BY NAME g_dbab_d[l_ac].dbabl003,g_dbab_d[l_ac].dbabl004,g_dbab_d[l_ac].dbabl005
            END IF]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[            CALL adbi251_set_entry_b(l_cmd)
            CALL adbi251_set_no_entry_b(l_cmd)
            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbab001" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbab001" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.dbab002" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.dbab002" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.dbabstus" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.dbab001" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.dbabl003" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.dbabl004" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.dbabl005" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body3.action" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[      DISPLAY ARRAY g_dbab2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL adbi251_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont()        
      END DISPLAY]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[      CALL adbi251_dbab002_ref()]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[   LET g_sql = "SELECT  UNIQUE dbab001,dbab011,dbab012,dbab013,dbab014, ",
               "               dbab015,dbab021,dbab022,dbab023,dbab024, ",
               "               dbab025,dbab031,dbab032,dbab035,dbab034,dbab033",
               "  FROM  dbab_t ",
               " LEFT JOIN dbabl_t ON dbabent = dbablent AND dbab001 = dbabl001 AND dbabl002 = '",g_lang,"'",
               " WHERE dbabent= ? AND ", p_wc2 
   LET g_sql = g_sql," ORDER BY dbab_t.dbab001"
   
   PREPARE adbi251_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR adbi251_pb2
   
   OPEN b_fill_curs2 USING g_enterprise
 
   CALL g_dbab2_d.clear()
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
   FOREACH b_fill_curs2 INTO g_dbab2_d[l_ac].dbab001,g_dbab2_d[l_ac].dbab011,g_dbab2_d[l_ac].dbab012,g_dbab2_d[l_ac].dbab013,
                             g_dbab2_d[l_ac].dbab014,g_dbab2_d[l_ac].dbab015,g_dbab2_d[l_ac].dbab021,g_dbab2_d[l_ac].dbab022,
                             g_dbab2_d[l_ac].dbab023,g_dbab2_d[l_ac].dbab024,g_dbab2_d[l_ac].dbab025,g_dbab2_d[l_ac].dbab031,
                             g_dbab2_d[l_ac].dbab032,g_dbab2_d[l_ac].dbab033,g_dbab2_d[l_ac].dbab034,g_dbab2_d[l_ac].dbab035

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   CALL g_dbab2_d.deleteElement(g_dbab2_d.getLength())]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[   CALL cl_set_comp_entry('dbab001',TRUE)]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[   IF p_cmd != 'a' THEN
      CALL cl_set_comp_entry('dbab001',FALSE)
   END IF]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="function.adbi251_dbab002_ref" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="1">
<![CDATA[
PRIVATE FUNCTION adbi251_dbab002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_dbab_d[l_ac].dbab002
   CALL ap_ref_array2(g_ref_fields,"SELECT dbael003 FROM dbael_t WHERE dbaelent='"||g_enterprise||"' AND dbael001=? AND dbael002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_dbab_d[l_ac].dbab002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_dbab_d[l_ac].dbab002_desc
END FUNCTION]]>
</point>
  <section id="adbi251.b_fill" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adbi251_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE dbabstus,dbab001,'','','',dbab002,'',dbab001,dbabownid,'',dbabowndp,'', 
       dbabcrtid,'',dbabcrtdp,'',dbabcrtdt,dbabmodid,'',dbabmoddt FROM dbab_t",
               " LEFT JOIN dbabl_t ON dbab001 = dbabl001 AND dbabl002 = '",g_lang,"'",
               " WHERE dbabent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY dbab_t.dbab001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE adbi251_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR adbi251_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_dbab_d.clear()
   CALL g_dbab3_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_dbab_d[l_ac].dbabstus,g_dbab_d[l_ac].dbab001,g_dbab_d[l_ac].dbabl003,g_dbab_d[l_ac].dbabl004, 
       g_dbab_d[l_ac].dbabl005,g_dbab_d[l_ac].dbab002,g_dbab_d[l_ac].dbab002_desc,g_dbab3_d[l_ac].dbab001, 
       g_dbab3_d[l_ac].dbabownid,g_dbab3_d[l_ac].dbabownid_desc,g_dbab3_d[l_ac].dbabowndp,g_dbab3_d[l_ac].dbabowndp_desc, 
       g_dbab3_d[l_ac].dbabcrtid,g_dbab3_d[l_ac].dbabcrtid_desc,g_dbab3_d[l_ac].dbabcrtdp,g_dbab3_d[l_ac].dbabcrtdp_desc, 
       g_dbab3_d[l_ac].dbabcrtdt,g_dbab3_d[l_ac].dbabmodid,g_dbab3_d[l_ac].dbabmodid_desc,g_dbab3_d[l_ac].dbabmoddt 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL adbi251_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("dbab_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_dbab_d.deleteElement(g_dbab_d.getLength())   
   CALL g_dbab3_d.deleteElement(g_dbab3_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_dbab_d.getLength()
      LET g_dbab3_d[l_ac].dbab001 = g_dbab_d[l_ac].dbab001 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE adbi251_pb
   
END FUNCTION
]]>
</section>
  <section id="adbi251.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adbi251_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " dbab001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="adbi251.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION adbi251_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM dbab_t 
         WHERE dbab001 = g_dbab_d[li_ac].dbab001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("dbab_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="adbi251.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbi251_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM dbab_t
       WHERE dbabent = g_enterprise AND
         dbab001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="adbi251.description" ver="4" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000003
#+ 
#+ Filename...: adbi251
#+ Description: 路線基本資料維護作業
#+ Creator....: 01752(2014/04/24)
#+ Modifier...: 01752(2014/04/24)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="adbi251.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION adbi251_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_dbab3_d[l_ac].dbabownid_desc = cl_get_username(g_dbab3_d[l_ac].dbabownid)
      #LET g_dbab3_d[l_ac].dbabowndp_desc = cl_get_deptname(g_dbab3_d[l_ac].dbabowndp)
      #LET g_dbab3_d[l_ac].dbabcrtid_desc = cl_get_username(g_dbab3_d[l_ac].dbabcrtid)
      #LET g_dbab3_d[l_ac].dbabcrtdp_desc = cl_get_deptname(g_dbab3_d[l_ac].dbabcrtdp)
      #LET g_dbab3_d[l_ac].dbabmodid_desc = cl_get_username(g_dbab3_d[l_ac].dbabmodid)
      ##LET .dbabcnfid_desc = cl_get_deptname(.dbabcnfid)
      ##LET .dbabpstid_desc = cl_get_deptname(.dbabpstid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body3.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="adbi251.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_dbab_d RECORD
       dbabstus LIKE dbab_t.dbabstus, 
   dbab001 LIKE dbab_t.dbab001, 
   dbabl003 LIKE dbabl_t.dbabl003, 
   dbabl004 LIKE dbabl_t.dbabl004, 
   dbabl005 LIKE dbabl_t.dbabl005, 
   dbab002 LIKE dbab_t.dbab002, 
   dbab002_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_dbab3_d RECORD
       dbab001 LIKE dbab_t.dbab001, 
   dbabownid LIKE dbab_t.dbabownid, 
   dbabownid_desc LIKE type_t.chr500, 
   dbabowndp LIKE dbab_t.dbabowndp, 
   dbabowndp_desc LIKE type_t.chr500, 
   dbabcrtid LIKE dbab_t.dbabcrtid, 
   dbabcrtid_desc LIKE type_t.chr500, 
   dbabcrtdp LIKE dbab_t.dbabcrtdp, 
   dbabcrtdp_desc LIKE type_t.chr500, 
   dbabcrtdt DATETIME YEAR TO SECOND, 
   dbabmodid LIKE dbab_t.dbabmodid, 
   dbabmodid_desc LIKE type_t.chr500, 
   dbabmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      dbabl001 LIKE dbabl_t.dbabl001,
      dbabl002 LIKE dbabl_t.dbabl002,
      dbabl003 LIKE dbabl_t.dbabl003,
      dbabl004 LIKE dbabl_t.dbabl004,
      dbabl005 LIKE dbabl_t.dbabl005
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_dbab_d          DYNAMIC ARRAY OF type_g_dbab_d
DEFINE g_dbab_d_t        type_g_dbab_d
DEFINE g_dbab3_d   DYNAMIC ARRAY OF type_g_dbab3_d
DEFINE g_dbab3_d_t type_g_dbab3_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="adbi251.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION adbi251_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL adbi251_default_search()
   
END FUNCTION
]]>
</section>
  <section id="adbi251.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION adbi251_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL adbi251_set_entry_b("a")  
   
   CALL adbi251_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_dbab_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="adbi251.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adbi251_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dbab_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO dbab_t
                  (dbabent,
                   dbab001
                   ,dbabstus,dbab002,dbabownid,dbabowndp,dbabcrtid,dbabcrtdp,dbabcrtdt,dbabmodid,dbabmoddt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_dbab_d[l_ac].dbabstus,g_dbab_d[l_ac].dbab002,g_dbab3_d[l_ac].dbabownid,g_dbab3_d[l_ac].dbabowndp, 
                       g_dbab3_d[l_ac].dbabcrtid,g_dbab3_d[l_ac].dbabcrtdp,g_dbab3_d[l_ac].dbabcrtdt, 
                       g_dbab3_d[l_ac].dbabmodid,g_dbab3_d[l_ac].dbabmoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("dbab_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="adbi251.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION adbi251_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="adbi251.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbi251_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adbi251_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "dbab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbi251_bcl USING g_enterprise,
                                       g_dbab_d[g_detail_idx].dbab001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("adbi251_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="adbi251.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbi251 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbi251_init()   
 
      #進入選單 Menu (="N")
      CALL adbi251_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbi251
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="adbi251.modify" ver="2" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION adbi251_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT dbabstus,dbab001,'','','',dbab002,'','',dbabownid,'',dbabowndp,'',dbabcrtid, 
       '',dbabcrtdp,'',dbabcrtdt,dbabmodid,'',dbabmoddt FROM dbab_t WHERE dbabent=? AND dbab001=? FOR  
       UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE adbi251_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_dbab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.detail_input.page1.update_item" />}
            #END add-point
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dbab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbi251_b_fill(g_wc2)
            LET g_detail_cnt = g_dbab_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_dbab_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_dbab_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_dbab_d[l_ac].dbab001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dbab_d_t.* = g_dbab_d[l_ac].*  #BACKUP
               IF NOT adbi251_lock_b("dbab_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbi251_bcl INTO g_dbab_d[l_ac].dbabstus,g_dbab_d[l_ac].dbab001,g_dbab_d[l_ac].dbabl003, 
                      g_dbab_d[l_ac].dbabl004,g_dbab_d[l_ac].dbabl005,g_dbab_d[l_ac].dbab002,g_dbab_d[l_ac].dbab002_desc, 
                      g_dbab3_d[l_ac].dbab001,g_dbab3_d[l_ac].dbabownid,g_dbab3_d[l_ac].dbabownid_desc, 
                      g_dbab3_d[l_ac].dbabowndp,g_dbab3_d[l_ac].dbabowndp_desc,g_dbab3_d[l_ac].dbabcrtid, 
                      g_dbab3_d[l_ac].dbabcrtid_desc,g_dbab3_d[l_ac].dbabcrtdp,g_dbab3_d[l_ac].dbabcrtdp_desc, 
                      g_dbab3_d[l_ac].dbabcrtdt,g_dbab3_d[l_ac].dbabmodid,g_dbab3_d[l_ac].dbabmodid_desc, 
                      g_dbab3_d[l_ac].dbabmoddt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dbab_d_t.dbab001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL adbi251_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.dbabl001 = g_dbab_d[l_ac].dbab001
LET g_detail_multi_table_t.dbabl002 = g_dlang
LET g_detail_multi_table_t.dbabl003 = g_dbab_d[l_ac].dbabl003
LET g_detail_multi_table_t.dbabl004 = g_dbab_d[l_ac].dbabl004
LET g_detail_multi_table_t.dbabl005 = g_dbab_d[l_ac].dbabl005
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'dbabl001'
            LET l_var_keys[01] = g_dbab_d[l_ac].dbab001
            LET l_field_keys[02] = 'dbabl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'dbabl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dbab_d_t.* TO NULL
            INITIALIZE g_dbab_d[l_ac].* TO NULL 
                  LET g_dbab_d[l_ac].dbabstus = "Y"
 
 
            LET g_dbab_d_t.* = g_dbab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbi251_set_entry_b("a")
            CALL adbi251_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dbab_d[li_reproduce_target].* = g_dbab_d[li_reproduce].*
               LET g_dbab3_d[li_reproduce_target].* = g_dbab3_d[li_reproduce].*
 
               LET g_dbab_d[g_dbab_d.getLength()].dbab001 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_dbab3_d[l_ac].dbabownid = g_user
      LET g_dbab3_d[l_ac].dbabowndp = g_dept
      LET g_dbab3_d[l_ac].dbabcrtid = g_user
      LET g_dbab3_d[l_ac].dbabcrtdp = g_dept 
      LET g_dbab3_d[l_ac].dbabcrtdt = cl_get_current()
      LET g_dbab3_d[l_ac].dbabmodid = ""
      LET g_dbab3_d[l_ac].dbabmoddt = ""
      #LET g_dbab_d[l_ac].dbabstus = ""
 
 
            LET g_detail_multi_table_t.dbabl001 = g_dbab_d[l_ac].dbab001
LET g_detail_multi_table_t.dbabl002 = g_dlang
LET g_detail_multi_table_t.dbabl003 = g_dbab_d[l_ac].dbabl003
LET g_detail_multi_table_t.dbabl004 = g_dbab_d[l_ac].dbabl004
LET g_detail_multi_table_t.dbabl005 = g_dbab_d[l_ac].dbabl005
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dbab_t 
             WHERE dbabent = g_enterprise AND dbab001 = g_dbab_d[l_ac].dbab001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbab_d[g_detail_idx].dbab001
               CALL adbi251_insert_b('dbab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dbab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dbab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbi251_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_dbab_d[l_ac].dbab001 = g_detail_multi_table_t.dbabl001 AND
         g_dbab_d[l_ac].dbabl003 = g_detail_multi_table_t.dbabl003 AND
         g_dbab_d[l_ac].dbabl004 = g_detail_multi_table_t.dbabl004 AND
         g_dbab_d[l_ac].dbabl005 = g_detail_multi_table_t.dbabl005 THEN
         ELSE 
            LET l_var_keys[01] = g_dbab_d[l_ac].dbab001
            LET l_field_keys[01] = 'dbabl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'dbabl002'
            LET l_vars[01] = g_dbab_d[l_ac].dbabl003
            LET l_fields[01] = 'dbabl003'
            LET l_vars[02] = g_dbab_d[l_ac].dbabl004
            LET l_fields[02] = 'dbabl004'
            LET l_vars[03] = g_dbab_d[l_ac].dbabl005
            LET l_fields[03] = 'dbabl005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'dbablent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.dbabl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.dbabl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'dbabl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (dbab001 = '", g_dbab_d[l_ac].dbab001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dbab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dbab_d.deleteElement(l_ac)
               NEXT FIELD dbab001
            END IF
            IF g_dbab_d[l_ac].dbab001 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM dbab_t
                WHERE dbabent = g_enterprise AND 
                      dbab001 = g_dbab_d_t.dbab001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dbab_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'dbabl001'
                  LET l_field_keys[02] = 'dbabl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.dbabl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.dbabl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'dbabl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adbi251_bcl
               LET l_count = g_dbab_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbab_d[g_detail_idx].dbab001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adbi251_delete_b('dbab_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbabstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabstus
            #add-point:BEFORE FIELD dbabstus
            {<point name="input.b.page1.dbabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabstus
            
            #add-point:AFTER FIELD dbabstus
            {<point name="input.a.page1.dbabstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbabstus
            #add-point:ON CHANGE dbabstus
            {<point name="input.g.page1.dbabstus" />}
            #END add-point
 
         #----<<dbab001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbab001
            #add-point:BEFORE FIELD dbab001
            {<point name="input.b.page1.dbab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbab001
            
            #add-point:AFTER FIELD dbab001
            {<point name="input.a.page1.dbab001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbab001
            #add-point:ON CHANGE dbab001
            {<point name="input.g.page1.dbab001" />}
            #END add-point
 
         #----<<dbabl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl003
            #add-point:BEFORE FIELD dbabl003
            {<point name="input.b.page1.dbabl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl003
            
            #add-point:AFTER FIELD dbabl003
            {<point name="input.a.page1.dbabl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbabl003
            #add-point:ON CHANGE dbabl003
            {<point name="input.g.page1.dbabl003" />}
            #END add-point
 
         #----<<dbabl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl004
            #add-point:BEFORE FIELD dbabl004
            {<point name="input.b.page1.dbabl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl004
            
            #add-point:AFTER FIELD dbabl004
            {<point name="input.a.page1.dbabl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbabl004
            #add-point:ON CHANGE dbabl004
            {<point name="input.g.page1.dbabl004" />}
            #END add-point
 
         #----<<dbabl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl005
            #add-point:BEFORE FIELD dbabl005
            {<point name="input.b.page1.dbabl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl005
            
            #add-point:AFTER FIELD dbabl005
            {<point name="input.a.page1.dbabl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbabl005
            #add-point:ON CHANGE dbabl005
            {<point name="input.g.page1.dbabl005" />}
            #END add-point
 
         #----<<dbab002>>----
         #此段落由子樣板a02產生
         AFTER FIELD dbab002
            
            #add-point:AFTER FIELD dbab002
            {<point name="input.a.page1.dbab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbab002
            #add-point:BEFORE FIELD dbab002
            {<point name="input.b.page1.dbab002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbab002
            #add-point:ON CHANGE dbab002
            {<point name="input.g.page1.dbab002" />}
            #END add-point
 
         #----<<dbab002_desc>>----
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dbabstus>>----
         #Ctrlp:input.c.page1.dbabstus
         ON ACTION controlp INFIELD dbabstus
            #add-point:ON ACTION controlp INFIELD dbabstus
            {<point name="input.c.page1.dbabstus" />}
            #END add-point
 
         #----<<dbab001>>----
         #Ctrlp:input.c.page1.dbab001
         ON ACTION controlp INFIELD dbab001
            #add-point:ON ACTION controlp INFIELD dbab001
            {<point name="input.c.page1.dbab001" />}
            #END add-point
 
         #----<<dbabl003>>----
         #Ctrlp:input.c.page1.dbabl003
         ON ACTION controlp INFIELD dbabl003
            #add-point:ON ACTION controlp INFIELD dbabl003
            {<point name="input.c.page1.dbabl003" />}
            #END add-point
 
         #----<<dbabl004>>----
         #Ctrlp:input.c.page1.dbabl004
         ON ACTION controlp INFIELD dbabl004
            #add-point:ON ACTION controlp INFIELD dbabl004
            {<point name="input.c.page1.dbabl004" />}
            #END add-point
 
         #----<<dbabl005>>----
         #Ctrlp:input.c.page1.dbabl005
         ON ACTION controlp INFIELD dbabl005
            #add-point:ON ACTION controlp INFIELD dbabl005
            {<point name="input.c.page1.dbabl005" />}
            #END add-point
 
         #----<<dbab002>>----
         #Ctrlp:input.c.page1.dbab002
         ON ACTION controlp INFIELD dbab002
            #add-point:ON ACTION controlp INFIELD dbab002
            {<point name="input.c.page1.dbab002" />}
            #END add-point
 
         #----<<dbab002_desc>>----
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dbab_d[l_ac].* = g_dbab_d_t.*
               CLOSE adbi251_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dbab_d[l_ac].dbab001,-263,1)
               LET g_dbab_d[l_ac].* = g_dbab_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_dbab3_d[l_ac].dbabmodid = g_user 
LET g_dbab3_d[l_ac].dbabmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE dbab_t SET (dbabstus,dbab001,dbab002,dbabownid,dbabowndp,dbabcrtid,dbabcrtdp,dbabcrtdt, 
                   dbabmodid,dbabmoddt) = (g_dbab_d[l_ac].dbabstus,g_dbab_d[l_ac].dbab001,g_dbab_d[l_ac].dbab002, 
                   g_dbab3_d[l_ac].dbabownid,g_dbab3_d[l_ac].dbabowndp,g_dbab3_d[l_ac].dbabcrtid,g_dbab3_d[l_ac].dbabcrtdp, 
                   g_dbab3_d[l_ac].dbabcrtdt,g_dbab3_d[l_ac].dbabmodid,g_dbab3_d[l_ac].dbabmoddt)
                WHERE dbabent = g_enterprise AND
                  dbab001 = g_dbab_d_t.dbab001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("dbab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("dbab_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbab_d[g_detail_idx].dbab001
               LET gs_keys_bak[1] = g_dbab_d_t.dbab001
               CALL adbi251_update_b('dbab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_dbab_d[l_ac].dbab001 = g_detail_multi_table_t.dbabl001 AND
         g_dbab_d[l_ac].dbabl003 = g_detail_multi_table_t.dbabl003 AND
         g_dbab_d[l_ac].dbabl004 = g_detail_multi_table_t.dbabl004 AND
         g_dbab_d[l_ac].dbabl005 = g_detail_multi_table_t.dbabl005 THEN
         ELSE 
            LET l_var_keys[01] = g_dbab_d[l_ac].dbab001
            LET l_field_keys[01] = 'dbabl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'dbabl002'
            LET l_vars[01] = g_dbab_d[l_ac].dbabl003
            LET l_fields[01] = 'dbabl003'
            LET l_vars[02] = g_dbab_d[l_ac].dbabl004
            LET l_fields[02] = 'dbabl004'
            LET l_vars[03] = g_dbab_d[l_ac].dbabl005
            LET l_fields[03] = 'dbabl005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'dbablent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.dbabl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.dbabl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'dbabl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL adbi251_unlock_b("dbab_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_dbab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dbab_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_dbab3_d TO s_detail3.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL adbi251_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body3.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD dbabstus
            WHEN "s_detail3"
               NEXT FIELD dbab001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE adbi251_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="adbi251.modify_detail_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION adbi251_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "dbabstus"
      WHEN "s_detail3"
         LET ls_return = "dbab001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="adbi251.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="adbi251.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="adbi251.query" ver="2" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adbi251_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_dbab_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON dbabstus,dbab001,dbabl003,dbabl004,dbabl005,dbab002,dbabownid,dbabowndp,dbabcrtid, 
          dbabcrtdp,dbabcrtdt,dbabmodid,dbabmoddt 
 
         FROM s_detail1[1].dbabstus,s_detail1[1].dbab001,s_detail1[1].dbabl003,s_detail1[1].dbabl004, 
             s_detail1[1].dbabl005,s_detail1[1].dbab002,s_detail3[1].dbabownid,s_detail3[1].dbabowndp, 
             s_detail3[1].dbabcrtid,s_detail3[1].dbabcrtdp,s_detail3[1].dbabcrtdt,s_detail3[1].dbabmodid, 
             s_detail3[1].dbabmoddt 
      
         #此段落由子樣板a11產生
         ##----<<dbabownid>>----
         #ON ACTION controlp INFIELD dbabownid
         #   CALL q_common('','dbabownid',TRUE,FALSE,g_dbab3_d[1].dbabownid) RETURNING ls_return
         #   DISPLAY ls_return TO dbabownid
         #   NEXT FIELD dbabownid  
         #
         ##----<<dbabowndp>>----
         #ON ACTION controlp INFIELD dbabowndp
         #   CALL q_common('','dbabowndp',TRUE,FALSE,g_dbab3_d[1].dbabowndp) RETURNING ls_return
         #   DISPLAY ls_return TO dbabowndp
         #   NEXT FIELD dbabowndp
         #
         ##----<<dbabcrtid>>----
         #ON ACTION controlp INFIELD dbabcrtid
         #   CALL q_common('','dbabcrtid',TRUE,FALSE,g_dbab3_d[1].dbabcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO dbabcrtid
         #   NEXT FIELD dbabcrtid
         #
         ##----<<dbabcrtdp>>----
         #ON ACTION controlp INFIELD dbabcrtdp
         #   CALL q_common('','dbabcrtdp',TRUE,FALSE,g_dbab3_d[1].dbabcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO dbabcrtdp
         #   NEXT FIELD dbabcrtdp
         #
         ##----<<dbabmodid>>----
         #ON ACTION controlp INFIELD dbabmodid
         #   CALL q_common('','dbabmodid',TRUE,FALSE,g_dbab3_d[1].dbabmodid) RETURNING ls_return
         #   DISPLAY ls_return TO dbabmodid
         #   NEXT FIELD dbabmodid
         #
         ##----<<dbabcnfid>>----
         ##ON ACTION controlp INFIELD dbabcnfid
         ##   CALL q_common('','dbabcnfid',TRUE,FALSE,.dbabcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO dbabcnfid
         ##   NEXT FIELD dbabcnfid
         #
         ##----<<dbabpstid>>----
         ##ON ACTION controlp INFIELD dbabpstid
         ##   CALL q_common('','dbabpstid',TRUE,FALSE,.dbabpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO dbabpstid
         ##   NEXT FIELD dbabpstid
         
         ##----<<dbabcrtdt>>----
         AFTER FIELD dbabcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbabmoddt>>----
         AFTER FIELD dbabmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbabcnfdt>>----
         #AFTER FIELD dbabcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbabpstdt>>----
         #AFTER FIELD dbabpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<dbabstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabstus
            #add-point:BEFORE FIELD dbabstus
            {<point name="query.b.page1.dbabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabstus
            
            #add-point:AFTER FIELD dbabstus
            {<point name="query.a.page1.dbabstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbabstus
         ON ACTION controlp INFIELD dbabstus
            #add-point:ON ACTION controlp INFIELD dbabstus
            {<point name="query.c.page1.dbabstus" />}
            #END add-point
 
         #----<<dbab001>>----
         #Ctrlp:construct.c.page1.dbab001
         ON ACTION controlp INFIELD dbab001
            #add-point:ON ACTION controlp INFIELD dbab001
            {<point name="construct.c.page1.dbab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbab001
            #add-point:BEFORE FIELD dbab001
            {<point name="query.b.page1.dbab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbab001
            
            #add-point:AFTER FIELD dbab001
            {<point name="query.a.page1.dbab001" />}
            #END add-point
            
 
         #----<<dbabl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl003
            #add-point:BEFORE FIELD dbabl003
            {<point name="query.b.page1.dbabl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl003
            
            #add-point:AFTER FIELD dbabl003
            {<point name="query.a.page1.dbabl003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbabl003
         ON ACTION controlp INFIELD dbabl003
            #add-point:ON ACTION controlp INFIELD dbabl003
            {<point name="query.c.page1.dbabl003" />}
            #END add-point
 
         #----<<dbabl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl004
            #add-point:BEFORE FIELD dbabl004
            {<point name="query.b.page1.dbabl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl004
            
            #add-point:AFTER FIELD dbabl004
            {<point name="query.a.page1.dbabl004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbabl004
         ON ACTION controlp INFIELD dbabl004
            #add-point:ON ACTION controlp INFIELD dbabl004
            {<point name="query.c.page1.dbabl004" />}
            #END add-point
 
         #----<<dbabl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabl005
            #add-point:BEFORE FIELD dbabl005
            {<point name="query.b.page1.dbabl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabl005
            
            #add-point:AFTER FIELD dbabl005
            {<point name="query.a.page1.dbabl005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.dbabl005
         ON ACTION controlp INFIELD dbabl005
            #add-point:ON ACTION controlp INFIELD dbabl005
            {<point name="query.c.page1.dbabl005" />}
            #END add-point
 
         #----<<dbab002>>----
         #Ctrlp:construct.c.page1.dbab002
         ON ACTION controlp INFIELD dbab002
            #add-point:ON ACTION controlp INFIELD dbab002
            {<point name="construct.c.page1.dbab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbab002
            #add-point:BEFORE FIELD dbab002
            {<point name="query.b.page1.dbab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbab002
            
            #add-point:AFTER FIELD dbab002
            {<point name="query.a.page1.dbab002" />}
            #END add-point
            
 
         #----<<dbab002_desc>>----
  
         
         #---------------------<  Detail: page2  >---------------------
         #----<<dbabownid>>----
         #Ctrlp:construct.c.page3.dbabownid
         ON ACTION controlp INFIELD dbabownid
            #add-point:ON ACTION controlp INFIELD dbabownid
            {<point name="construct.c.page3.dbabownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbabownid
            #add-point:BEFORE FIELD dbabownid
            {<point name="query.b.page3.dbabownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabownid
            
            #add-point:AFTER FIELD dbabownid
            {<point name="query.a.page3.dbabownid" />}
            #END add-point
            
 
         #----<<dbabownid_desc>>----
         #----<<dbabowndp>>----
         #Ctrlp:construct.c.page3.dbabowndp
         ON ACTION controlp INFIELD dbabowndp
            #add-point:ON ACTION controlp INFIELD dbabowndp
            {<point name="construct.c.page3.dbabowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbabowndp
            #add-point:BEFORE FIELD dbabowndp
            {<point name="query.b.page3.dbabowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabowndp
            
            #add-point:AFTER FIELD dbabowndp
            {<point name="query.a.page3.dbabowndp" />}
            #END add-point
            
 
         #----<<dbabowndp_desc>>----
         #----<<dbabcrtid>>----
         #Ctrlp:construct.c.page3.dbabcrtid
         ON ACTION controlp INFIELD dbabcrtid
            #add-point:ON ACTION controlp INFIELD dbabcrtid
            {<point name="construct.c.page3.dbabcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbabcrtid
            #add-point:BEFORE FIELD dbabcrtid
            {<point name="query.b.page3.dbabcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabcrtid
            
            #add-point:AFTER FIELD dbabcrtid
            {<point name="query.a.page3.dbabcrtid" />}
            #END add-point
            
 
         #----<<dbabcrtid_desc>>----
         #----<<dbabcrtdp>>----
         #Ctrlp:construct.c.page3.dbabcrtdp
         ON ACTION controlp INFIELD dbabcrtdp
            #add-point:ON ACTION controlp INFIELD dbabcrtdp
            {<point name="construct.c.page3.dbabcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbabcrtdp
            #add-point:BEFORE FIELD dbabcrtdp
            {<point name="query.b.page3.dbabcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabcrtdp
            
            #add-point:AFTER FIELD dbabcrtdp
            {<point name="query.a.page3.dbabcrtdp" />}
            #END add-point
            
 
         #----<<dbabcrtdp_desc>>----
         #----<<dbabcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabcrtdt
            #add-point:BEFORE FIELD dbabcrtdt
            {<point name="query.b.page3.dbabcrtdt" />}
            #END add-point
 
         #----<<dbabmodid>>----
         #Ctrlp:construct.c.page3.dbabmodid
         ON ACTION controlp INFIELD dbabmodid
            #add-point:ON ACTION controlp INFIELD dbabmodid
            {<point name="construct.c.page3.dbabmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbabmodid
            #add-point:BEFORE FIELD dbabmodid
            {<point name="query.b.page3.dbabmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbabmodid
            
            #add-point:AFTER FIELD dbabmodid
            {<point name="query.a.page3.dbabmodid" />}
            #END add-point
            
 
         #----<<dbabmodid_desc>>----
         #----<<dbabmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dbabmoddt
            #add-point:BEFORE FIELD dbabmoddt
            {<point name="query.b.page3.dbabmoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL adbi251_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="adbi251.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adbi251_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="adbi251.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adbi251_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="adbi251.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="adbi251.ui_dialog" ver="4" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION adbi251_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL adbi251_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_dbab_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point                        
      
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_dbab3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row3"/>}
               #end add-point
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL adbi251_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL adbi251_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL adbi251_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="adbi251.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbi251_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE adbi251_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="adbi251.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adbi251_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "dbab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "dbab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE dbab_t 
         SET (dbab001
              ,dbabstus,dbab002,dbabownid,dbabowndp,dbabcrtid,dbabcrtdp,dbabcrtdt,dbabmodid,dbabmoddt) 
              = 
             (ps_keys[1]
              ,g_dbab_d[l_ac].dbabstus,g_dbab_d[l_ac].dbab002,g_dbab3_d[l_ac].dbabownid,g_dbab3_d[l_ac].dbabowndp, 
                  g_dbab3_d[l_ac].dbabcrtid,g_dbab3_d[l_ac].dbabcrtdp,g_dbab3_d[l_ac].dbabcrtdt,g_dbab3_d[l_ac].dbabmodid, 
                  g_dbab3_d[l_ac].dbabmoddt) 
         WHERE dbab001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("dbab_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("dbab_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>