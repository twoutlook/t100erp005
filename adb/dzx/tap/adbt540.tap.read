<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="adbt540" std_prog="adbt540" erpver="1.0" module="ADB" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="2" status="u"/>
  </other>
  <point name="function.adbt540_set_visible" order="1" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 無隱藏畫面元件
# Memo...........: [待規格確認,是否與出貨單共用程式,暫保留函式]
# Usage..........: CALL adbt540_set_visible()
# Date & Author..: 2014/06/06 By Lori
################################################################################
PRIVATE FUNCTION adbt540_set_visible()

   CASE g_argv[1]
      WHEN '1'      
      WHEN '2'
         CALL cl_set_comp_visible("xmdk200,xmdk200_desc,xmdk201,xmdk201_desc",FALSE)
         CALL cl_set_comp_visible("page_6",FALSE)
      #WHEN    #無訂單出貨
      #   CALL cl_set_comp_visible("xmdk005,xmdk006,b_xmdk006",FALSE)
      #   CALL cl_set_combo_scc_part('xmdk002','2063','1,3')
      #   CALL cl_set_comp_visible("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006",FALSE)
   END CASE
   
   RETURN
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_slip_info" order="2" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取單別
# Usage..........: CALL adbt540_get_slip_info(p_docno)
#                  RETURNING r_success,r_slip
# Input parameter: p_docno     單號/單別
# Return code....: r_success   取值結果
#                : r_slip      單別
# Date & Author..: 2014/05/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_slip_info(p_docno)
   DEFINE p_docno     LIKE xmdk_t.xmdkdocno
   DEFINE r_success   LIKE type_t.num5
   DEFINE r_slip      LIKE ooba_t.ooba001
   
   LET r_success = NULL 
   LET r_slip    = NULL
   
   #取單別
   CALL s_aooi200_get_slip(p_docno) RETURNING r_success,r_slip 

   RETURN r_success,r_slip
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_slip_para" order="3" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取單別參數
# Memo...........: 1.參數：出貨單與出通單勾稽否,D-BAS-0062
# Usage..........: CALL adbt540_get_slip_para(p_docno)
#                  RETURNING r_para
# Input parameter: p_docno     單號/單別
# Return code....: r_para      參數值
# Date & Author..: 2014/05/28 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_slip_para(p_docno)
   DEFINE p_docno     LIKE xmdk_t.xmdkdocno
   DEFINE r_success   LIKE type_t.num5
   DEFINE r_slip      LIKE ooba_t.ooba001
   DEFINE r_para      STRING
   
   LET r_success = NULL 
   LET r_slip    = NULL
   LET r_para    = NULL
   
   #取單別
   CALL adbt540_get_slip_info(p_docno) RETURNING r_success,r_slip
   
   #出貨單與出通單勾稽
   IF r_success THEN
      LET r_para = cl_get_doc_para(g_enterprise,g_xmdk_m.xmdksite,r_slip,'D-BAS-0062') 
   END IF
   
   RETURN r_para
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_slip_source" order="4" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單據來源
# Memo...........:
# Usage..........: CALL adbt540_get_slip_source()
#                  RETURNING r_source
# Input parameter: 
# Return code....: r_source   單據來源
# Date & Author..: 2014/06/06 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_slip_source()
   DEFINE r_source   LIKE type_t.num5
   
   LET r_source = NULL
   
   IF NOT cl_null(g_xmdk_m.xmdk005) OR NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
      LET r_source = 1
      RETURN r_source
   END IF   

   IF NOT cl_null(g_xmdk_m.xmdk006) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
      LET r_source = 2
      RETURN r_source
   END IF 

END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_slip_xmdl216" order="4" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取本出貨單的經營方式
# Memo...........: 出貨單單身的經營方式必須一致(經銷商要有分銷合約才會有經營方式)
# Usage..........: CALL adbt540_get_slip_xmdl216()
# Date & Author..: 2014/06/09 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_slip_xmdl216()
   DEFINE l_cnt    LIKE type_t.num5

   SELECT COUNT(*) INTO l_cnt
     FROM xmdl_t WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
   
   IF cl_null(l_cnt) THEN
      LET l_cnt = 0
   END IF
   
   IF l_cnt > 0 THEN     
      LET g_slip_xmdl216 = s_adbt540_get_business_model(g_xmdk_m.xmdkdocno)
   ELSE
      IF l_ac > 1 THEN
         LET g_slip_xmdl216 = g_xmdl6_d[1].xmdl216
      END IF      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_xmda" order="5" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取訂單單頭資料
# Memo...........: 使用時機,1.單頭輸入訂單單號,2.單身輸入訂單單號/項次
# Usage..........: CALL adbt540_get_xmda(p_xmdl003)
#                  RETURNING r_master
# Input parameter: p_xmdl003      訂單單號
# Return code....: r_master       出通單單頭資料
# Date & Author..: 2014/06/03 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_xmda(p_xmdl003)
   DEFINE p_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE r_master    type_source_master 
   DEFINE l_sql       STRING
   
   LET g_errno = ''
   INITIALIZE r_master.* TO NULL
   
   IF cl_null(p_xmdl003) THEN
      RETURN r_master.*
   END IF
   
   LET l_sql = " SELECT xmdastus,xmda005,xmdadocno,xmda004 ,xmda021, ",       #狀態碼,出貨性質,訂單單號,客戶編號,收款客戶
	            "        xmda022 ,xmda009,xmda010  ,xmda011 ,xmda012, ",       #收貨客戶,收款條件,交易條件,稅別,稅率
	            "        xmda013 ,xmda035,xmda015  ,xmda016 ,xmda017, ",       #單價含稅否,發票類型,幣別,匯率,x取價方式
	            "        xmda018 ,xmda036,xmda025  ,xmda037 ,xmda038, ",	      #優惠條件,送貨供應商,送貨地址,交運起點,交運終點
	            "        xmda044 ,xmda023,xmda024  ,xmda032 ,xmda071, ",       #嘜頭編號,銷售通路,銷售分類,留置原因,備註
	            "        xmda030 ,xmda200,xmda201  ,xmda203 ,xmda204, ",       #多角貿易已拋轉,調貨經銷商編號,代送商編號,發票客戶,促銷方案編號
	            "        xmda205 ,xmda206,xmda207  ,xmdasite,xmda026, ",       #整單折扣,送貨站點編號,運輸路線編號,銷售組織,帳款地址
	            "        xmdaunit ",                                           #發貨組織
	            "   FROM xmda_t WHERE xmdaent = ",g_enterprise," AND xmdadocno = '",p_xmdl003,"' "
	PREPARE adbt540_xmda_sel FROM l_sql
   EXECUTE adbt540_xmda_sel INTO r_master.doc_stus,r_master.xmdk002,r_master.xmdk006,r_master.xmdk007,r_master.xmdk008,
                                 r_master.xmdk009,r_master.xmdk010,r_master.xmdk011,r_master.xmdk012,r_master.xmdk013,
                                 r_master.xmdk014,r_master.xmdk015,r_master.xmdk016,r_master.xmdk017,r_master.xmdk018,
                                 r_master.xmdk019,r_master.xmdk020,r_master.xmdk021,r_master.xmdk023,r_master.xmdk024,
                                 r_master.xmdk027,r_master.xmdk030,r_master.xmdk031,r_master.xmdk034,r_master.xmdk054,
                                 r_master.xmdk083,r_master.xmdk200,r_master.xmdk201,r_master.xmdk202,r_master.xmdk203,
                                 r_master.xmdk204,r_master.xmdk205,r_master.xmdk206,r_master.xmdk207,r_master.xmda026,
                                 r_master.xmdksite                                  
   IF SQLCA.sqlcode THEN   
      LET g_errno = SQLCA.sqlcode  
      RETURN r_master.*
   END IF
   
   LET g_master_t.* = r_master.*
   
   RETURN r_master.*
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_xmdd" order="6" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取訂單單身資料
# Memo...........: 使用時機,1.單頭輸入訂單單號,2.單身輸入訂單單號/項次/項序/分批序
# Usage..........: CALL adbt540_get_xmdd(p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,p_auto_detail)
#                  RETURNING r_detail
# Input parameter: p_xmdl003      訂單單號
#                : p_xmdl004      訂單項次
#                : p_xmdl005      訂單項序
#                : p_xmdl006      訂單分批序   
#                : p_auto_detail  自動產生單身否;併訂單出貨時,輸入N,先取出相關資料後再做校驗;單頭指定來源單據時輸入Y
# Return code....: r_detail       訂單單身資料
# Date & Author..: 2014/06/03 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_xmdd(p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,p_auto_detail)
   DEFINE p_xmdl003      LIKE xmdl_t.xmdl003
   DEFINE p_xmdl004      LIKE xmdl_t.xmdl004
   DEFINE p_xmdl005      LIKE xmdl_t.xmdl005
   DEFINE p_xmdl006      LIKE xmdl_t.xmdl006
   DEFINE p_auto_detail  LIKE type_t.chr1
   DEFINE r_detail       type_source_detail   
   DEFINE l_sql          STRING
   
   LET g_errno = ''
   INITIALIZE r_detail.* TO NULL
   
   IF cl_null(p_xmdl003)THEN
      RETURN r_detail.*
   END IF
   
   LET l_sql = "SELECT xmdddocno,xmddseq ,xmddseq1,xmddseq2,xmdd003, ",     #訂單單號,訂單項次,訂單項序,訂單分批序,子件特性
               "       xmdd001  ,xmdd002 ,xmdd008 ,xmdd213 ,xmdd214, ",     #料件編號,產品特徵,包裝容器,庫位,儲位
               "       xmdd215  ,xmdd004 ,xmdd024 ,xmdd026 ,xmdc052, ",     #批號,出貨單位,參考單位,計價單位,檢驗否
               "       xmdc015  ,xmdd019 ,xmdd020 ,xmdd030 ,xmdc036, ",     #單價,稅別,稅率,稅額,專案編號
               "       xmdc037  ,xmdc038 ,xmdc027 ,xmdd008 ,xmdd015, ",     #WBS編號,活動代號,客戶料號,QPA,已銷退量
               "       xmdc021  ,xmdc040 ,xmdc041 ,xmdc042 ,xmdc043, ",     #保稅否,取價來源,價格來源參考單號,價格來源參考項次,取出價格
               "       xmdc044  ,xmdc049 ,xmdc050 ,xmdd218 ,xmdd219, ",     #價差比,理由碼,備註,銷售渠道,產品組編碼
               "       xmdd220  ,xmdd222 ,xmdd201 ,xmdd216 ,xmdd203, ",     #銷售範圍編碼,銷售辦公室,出貨包裝單位,庫存鎖定等級,標準價               
               "       xmdd204  ,xmdd205 ,xmdd206 ,xmddunit,xmdd223, ",     #促銷價,交易價,折價金額,銷售組織,銷售人員
               "       xmdd224  ,xmdd225 ,xmdd226 ,xmdd227 ,xmdd228, ",     #銷售部門,合約編號,經營方式,結算類型,結算方式
               "       xmdd229  ,xmddorga,xmddunit,",                       #交易類型,帳務組織,發貨組織
               "       xmja037  ,xmja038 ,xmja039 ,xmja040 ,xmja002, ",     #地區編號,縣市編號,省區編號,區域編號,商品條碼
               "       xmdd211  ,xmdd208 ,xmdc022 ,xmdd231 ",               #送貨客戶,送貨地址碼,部分交貨,庫存管理特徵
               "  FROM xmdd_t,xmdc_t,xmja_t ",
               " WHERE xmddent = xmdcent AND xmdddocno = xmdcdocno AND xmddseq = xmdcseq ",
               "   AND xmddent = xmjaent AND xmdddocno = xmjadocno AND xmddseq = xmjaseq ",
               "   AND xmddent = ",g_enterprise," AND xmdddocno = '",p_xmdl003,"' ",
               "   AND (xmdddocno,xmddseq,xmddseq1,xmddseq2) NOT IN (SELECT xmdl003,xmdl004,xmdl005,xmdl006 FROM xmdl_t ",
               "                                                      WHERE xmdlent = ",g_enterprise,
               "                                                        AND xmdldocno = '",g_xmdk_m.xmdkdocno,"') "
               
   IF p_xmdl004 IS NOT NULL THEN
      LET l_sql = l_sql, " AND xmddseq = ",p_xmdl004
   END IF
   IF p_xmdl005 IS NOT NULL THEN
      LET l_sql = l_sql, " AND xmddseq1 = ",p_xmdl005
   END IF
   IF p_xmdl006 IS NOT NULL THEN
      LET l_sql = l_sql, " AND xmddseq2 = ",p_xmdl006
   END IF

   IF p_auto_detail = 'Y' THEN
      LET l_sql = l_sql," AND xmddunit = '",g_xmdk_m.xmdksite,"' ",
                        " AND xmdd211 = '",g_xmdk_m.xmdk009,"' ",
                        " AND xmdd208 = '",g_xmdk_m.xmdk021,"' "
      IF g_xmdk_m.xmdk207 IS NOT NULL THEN
         LET l_sql = l_sql," AND xmddsite = '",g_xmdk_m.xmdk207,"' "
      END IF 
   END IF   
   
   PREPARE adbt540_xmdd_sel FROM l_sql
   EXECUTE adbt540_xmdd_sel INTO r_detail.xmdl003,r_detail.xmdl004,r_detail.xmdl005,r_detail.xmdl006,r_detail.xmdl007,  #訂單單號,訂單項次,訂單項序,訂單分批序,子件特性
                                 r_detail.xmdl008,r_detail.xmdl009,r_detail.xmdl010,r_detail.xmdl014,r_detail.xmdl015,  #料件編號,產品特徵,包裝容器,庫位,儲位
                                 r_detail.xmdl016,r_detail.xmdl017,r_detail.xmdl019,r_detail.xmdl021,r_detail.xmdl023,  #批號,出貨單位,參考單位,計價單位,檢驗否
                                 r_detail.xmdl024,r_detail.xmdl025,r_detail.xmdl026,r_detail.xmdl029,r_detail.xmdl030,  #單價,稅別,稅率,稅額,專案編號
                                 r_detail.xmdl031,r_detail.xmdl032,r_detail.xmdl033,r_detail.xmdl034,r_detail.xmdl037,  #WBS編號,活動代號,客戶料號,QPA,已銷退量
                                 r_detail.xmdl041,r_detail.xmdl042,r_detail.xmdl043,r_detail.xmdl044,r_detail.xmdl045,  #保稅否,取價來源,價格來源參考單號,價格來源參考項次,取出價格
                                 r_detail.xmdl046,r_detail.xmdl050,r_detail.xmdl051,r_detail.xmdl200,r_detail.xmdl201,  #價差比,理由碼,備註,銷售渠道,產品組編碼
                                 r_detail.xmdl202,r_detail.xmdl203,r_detail.xmdl204,r_detail.xmdl207,r_detail.xmdl208,  #銷售範圍編碼,銷售辦公室,出貨包裝單位,庫存鎖定等級,標準價             
                                 r_detail.xmdl209,r_detail.xmdl210,r_detail.xmdl211,r_detail.xmdl212,r_detail.xmdl213,  #促銷價,交易價,折價金額,銷售組織,銷售人員
                                 r_detail.xmdl214,r_detail.xmdl215,r_detail.xmdl216,r_detail.xmdl217,r_detail.xmdl218,  #銷售部門,合約編號,經營方式,結算類型,結算方式
                                 r_detail.xmdl219,r_detail.xmdlorga,r_detail.xmdlsite,                                  #交易類型,帳務組織,發貨組織
                                 r_detail.xmdl222,r_detail.xmdl223,r_detail.xmdl224,r_detail.xmdl225,r_detail.xmdl226,  #地區編號,縣市編號,省區編號,區域編號,商品條碼
                                 r_detail.xmdk009,r_detail.xmdk021,r_detail.xmdc022,r_detail.xmdl052                                     #送貨客戶,送貨地址碼,部分交貨
                                                          
   IF SQLCA.sqlcode THEN   
      LET g_errno = SQLCA.sqlcode  
      RETURN r_detail.*
   ELSE
      LET r_detail.xmdl001 = ''
      LET r_detail.xmdl002 = ''
      LET g_detail_t.* = r_detail.*
   END IF
   
   RETURN r_detail.*
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_xmdg" order="7" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取出通單單頭資料
# Memo...........: 使用時機,1.單頭輸入出通單單號,2.單身輸入出通單單號/項次
# Usage..........: CALL adbt540_get_xmdg(p_xmdl001)
#                  RETURNING r_master
# Input parameter: p_xmdl001      出通單單號
# Return code....: r_master       出通單單頭資料
# Date & Author..: 2014/06/03 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_xmdg(p_xmdl001)
   DEFINE p_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE r_master    type_source_master 
   DEFINE l_sql       STRING
   
   LET g_errno = ''
   INITIALIZE r_master.* TO NULL
   
   IF cl_null(p_xmdl001) THEN
      RETURN r_master.*
   END IF
   
   LET l_sql = " SELECT xmdgstus,xmdg001 ,xmdg004,xmdg005,xmdg006,",     #狀態碼,出貨性質,訂單單號,客戶編號,收款客戶
               "        xmdg007 ,xmdg008 ,xmdg009,xmdg010,xmdg011, ",    #收貨客戶,收款條件,交易條件,稅別,稅率
               "        xmdg012 ,xmdg013 ,xmdg014,xmdg015,xmdg016, ",    #單價含稅否,發票類型,幣別,匯率,送貨供應商
               "        xmdg017 ,xmdg018 ,xmdg019,xmdg020,xmdg021, ",    #送貨地址,運輸方式,交運起點,交運終點,航次/航班/車號
               "        xmdg022 ,xmdg023 ,xmdg024,xmdg025,xmdg026, ",    #起運日期,嘜頭編號,包裝單製作,Invoice,銷貨渠道
               "        xmdg027 ,xmdg030 ,xmdg031,xmdg053,xmdg054, ",    #銷售分類,額外品名規格,留置原因,備註,多角貿易已拋轉
               "        xmdg200 ,xmdg201 ,xmdg202,xmdg203,xmdg204, ",    #調貨經銷商編號,代送商編號,發票客戶,促銷方案編號,送貨站點編號
               "        xmdg205 ,xmdgsite,xmdgunit ",                    #運輸路線編號,銷售組織,發貨組織
               "   FROM xmdg_t ",
               "  WHERE xmdgent = ",g_enterprise,
               "    AND xmdgdocno = '",p_xmdl001,"' "
   PREPARE adbt540_xmdg_sel FROM l_sql
   EXECUTE adbt540_xmdg_sel INTO r_master.doc_stus,r_master.xmdk002,r_master.xmdk006,r_master.xmdk007,r_master.xmdk008,
                                 r_master.xmdk009,r_master.xmdk010,r_master.xmdk011,r_master.xmdk012,r_master.xmdk013,
                                 r_master.xmdk014,r_master.xmdk015,r_master.xmdk016,r_master.xmdk017,r_master.xmdk020,
                                 r_master.xmdk021,r_master.xmdk022,r_master.xmdk023,r_master.xmdk024,r_master.xmdk025,
                                 r_master.xmdk026,r_master.xmdk027,r_master.xmdk028,r_master.xmdk029,r_master.xmdk030,
                                 r_master.xmdk031,r_master.xmdk033,r_master.xmdk034,r_master.xmdk054,r_master.xmdk083,
                                 r_master.xmdk200,r_master.xmdk201,r_master.xmdk202,r_master.xmdk205,r_master.xmdk206, 
                                 r_master.xmdk207,r_master.xmdksite 
                                 
   IF SQLCA.sqlcode THEN   
      LET g_errno = SQLCA.sqlcode  
      RETURN r_master.*
   END IF
   
   LET g_master_t.* = r_master.*
   
   RETURN r_master.*
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_xmdh" order="8" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取出通單單身資料
# Memo...........: 使用時機,1.單頭輸入出通單單號,2.單身輸入出通單單號/項次
# Usage..........: CALL adbt540_get_xmdh(p_xmdl001,p_xmdl002,p_auto_detail)
#                  RETURNING r_detail
# Input parameter: p_xmdl001      出通單單號
#                : p_xmdl002      出通單項次
#                : p_auto_detail  自動產生單身否;併出通單出貨時,輸入N,先取出相關資料後再做校驗;單頭指定來源單據時輸入Y
# Return code....: r_detail       出通單單身資料
# Date & Author..: 2014/06/03 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_xmdh(p_xmdl001,p_xmdl002,p_auto_detail)
   DEFINE p_xmdl001       LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002       LIKE xmdl_t.xmdl002
   DEFINE p_auto_detail   LIKE type_t.chr1
   DEFINE r_detail        type_source_detail   
   DEFINE l_sql           STRING
   
   LET g_errno = ''
   INITIALIZE r_detail.* TO NULL
   
   IF cl_null(p_xmdl001) THEN
      RETURN r_detail.*
   END IF
   
   LET l_sql = " SELECT xmdhseq,xmdh001 ,xmdh002 ,xmdh003 ,xmdh004, ",    #出通項次,訂單單號,訂單項次,訂單項序,訂單分批序
               "        xmdh005,xmdh006 ,xmdh007 ,xmdh008 ,xmdh009, ",    #子件特性,料件編號,產品特徵,包裝容器,作業編號
               "        xmdh010,xmdh011 ,xmdh012 ,xmdh013 ,xmdh014, ",    #製程序,多庫儲批出貨,庫位,儲位,批號
               "        xmdh015,xmdh018 ,xmdh020 ,xmdh022 ,xmdh023, ",    #出貨單位,參考單位,計價單位,檢驗否,單價
               "        xmdh024,xmdh025 ,xmdh031 ,xmdh032 ,xmdh033, ",    #稅別,稅率,專案編號,WBS編號,活動代號
               "        xmdh034,xmdh035 ,xmdh051 ,xmdh217 ,xmdh218, ",    #客戶料號,QPA,多角流程代碼,銷售渠道,產品組編碼
               "        xmdh219,xmdh202 ,xmdh216 ,xmdh207 ,xmdh208, ",    #銷售範圍編碼,出貨包裝單位,庫存鎖定等級,標準價,促銷價
               "        xmdh209,xmdh210 ,xmdhunit,xmdh201 ,xmdh212, ",    #交易價,折價金額,商品條碼,發貨組織,收貨客戶
               "        xmdh213,xmdhsite,xmdh220, ",                      #送貨地址,銷售組織,交易類型
               "        xmdh221,xmdh222 ,xmdh223 ,xmdh224 ,xmdh029 ",     #地區編號,縣市編號,省區編號,區域編號,庫存管理特徵
               "   FROM xmdh_t ",
               "  WHERE xmdhent = ", g_enterprise," AND xmdhdocno = '",p_xmdl001,"' ",
               "    AND (xmdhdocno,xmdhseq) NOT IN (SELECT xmdl001,xmdl002 FROM xmdl_t ",
               "                                     WHERE xmdlent = ",g_enterprise,
               "                                       AND xmdldocno = '",g_xmdk_m.xmdkdocno,"') "               
               
   IF NOT cl_null(p_xmdl002) THEN            
      LET l_sql = l_sql,"    AND xmdhseq = ",p_xmdl002 
   END IF

   IF p_auto_detail = 'Y' THEN
      LET l_sql = l_sql," AND xmdhunit = '",g_xmdk_m.xmdksite,"' ",
                        " AND xmdh212 = '",g_xmdk_m.xmdk009,"' ",
                        " AND xmdh213 = '",g_xmdk_m.xmdk021,"' "
      IF g_xmdk_m.xmdk207 IS NOT NULL THEN
         LET l_sql = l_sql," AND xmdhsite = '",g_xmdk_m.xmdk207,"' "
      END IF   
   END IF
   
   PREPARE adbt540_xmdh_sel FROM l_sql
   EXECUTE adbt540_xmdh_sel INTO r_detail.xmdl002,r_detail.xmdl003,r_detail.xmdl004, r_detail.xmdl005,r_detail.xmdl006,   #出通項次,訂單單號,訂單項次,訂單項序,訂單分批序
                                 r_detail.xmdl007,r_detail.xmdl008,r_detail.xmdl009, r_detail.xmdl010,r_detail.xmdl011,   #子件特性,料件編號,產品特徵,包裝容器,作業編號
                                 r_detail.xmdl012,r_detail.xmdl013,r_detail.xmdl014, r_detail.xmdl015,r_detail.xmdl016,   #製程序,多庫儲批出貨,庫位,儲位,批號
                                 r_detail.xmdl017,r_detail.xmdl019,r_detail.xmdl021, r_detail.xmdl023,r_detail.xmdl024,   #出貨單位,參考單位,計價單位,檢驗否,單價
                                 r_detail.xmdl025,r_detail.xmdl026,r_detail.xmdl030, r_detail.xmdl031,r_detail.xmdl032,   #稅別,稅率,稅額,專案編號,WBS編號活動代號
                                 r_detail.xmdl033,r_detail.xmdl034,r_detail.xmdl088, r_detail.xmdl200,r_detail.xmdl201,   #客戶料號,QPA,多角流程代碼,銷售渠道,產品組編碼
                                 r_detail.xmdl202,r_detail.xmdl204,r_detail.xmdl207, r_detail.xmdl208,r_detail.xmdl209,   #售範圍編碼,出貨包裝單位,銷存鎖定等級,標準價,促銷價
                                 r_detail.xmdl210,r_detail.xmdl211,r_detail.xmdlsite,r_detail.xmdl226,r_detail.xmdk009,   #交易價,折價金額,發貨組織,商品條碼,收貨客戶                                 
                                 r_detail.xmdk021,r_detail.xmdl212,r_detail.xmdl219,                                      #送貨地址,銷售組織,交易類型
                                 r_detail.xmdl222,r_detail.xmdl223,r_detail.xmdl224, r_detail.xmdl225,r_detail.xmdl052    #地區編號,縣市編號,省區編號,區域編號,庫存管理特徵
                                                                                          
   IF SQLCA.sqlcode THEN   
      LET g_errno = SQLCA.sqlcode  
      RETURN r_detail.*
   ELSE
      LET r_detail.xmdl001 = p_xmdl001   
      LET g_detail_t.* = r_detail.*
   END IF 
   
   RETURN r_detail.*
END FUNCTION]]>
  </point>
  <point name="function.adbt540_notice_master_default" order="9" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 依出通單號帶出出通單資料
# Usage..........: CALL adbt540_notice_master_default(p_clear_flag)
# Input parameter: p_clear_flag   帶值欄位是否清空,單別變更時傳Y,其他情況傳空值
# Date & Author..: 2014/05/26 By Lori
################################################################################
PRIVATE FUNCTION adbt540_notice_master_default(p_clear_flag)
   DEFINE p_clear_flag    LIKE type_t.chr1 
   DEFINE l_master        type_source_master 
   DEFINE l_master2       type_source_master 
   
   INITIALIZE l_master.* TO NULL
   INITIALIZE l_master2.* TO NULL
   
   IF cl_null(p_clear_flag) AND cl_null(g_xmdk_m.xmdk005) THEN
      LET p_clear_flag  = 'Y'
   END IF
   
   IF p_clear_flag  = 'Y' THEN
      LET g_xmdk_m.xmdk002 = NULL      LET g_xmdk_m.xmdk006 = NULL      LET g_xmdk_m.xmdk007 = NULL
      LET g_xmdk_m.xmdk008 = NULL      LET g_xmdk_m.xmdk009 = NULL      LET g_xmdk_m.xmdk010 = NULL
      LET g_xmdk_m.xmdk011 = NULL      LET g_xmdk_m.xmdk012 = NULL      LET g_xmdk_m.xmdk013 = NULL
      LET g_xmdk_m.xmdk014 = NULL      LET g_xmdk_m.xmdk015 = NULL      LET g_xmdk_m.xmdk016 = NULL
      LET g_xmdk_m.xmdk017 = NULL      LET g_xmdk_m.xmdk018 = NULL      LET g_xmdk_m.xmdk019 = NULL
      LET g_xmdk_m.xmdk020 = NULL      LET g_xmdk_m.xmdk021 = NULL      LET g_xmdk_m.xmdk022 = NULL
      LET g_xmdk_m.xmdk023 = NULL      LET g_xmdk_m.xmdk024 = NULL      LET g_xmdk_m.xmdk025 = NULL
      LET g_xmdk_m.xmdk026 = NULL      LET g_xmdk_m.xmdk027 = NULL      LET g_xmdk_m.xmdk030 = NULL
      LET g_xmdk_m.xmdk031 = NULL      LET g_xmdk_m.xmdk033 = NULL      LET g_xmdk_m.xmdk034 = NULL
      LET g_xmdk_m.xmdk054 = NULL      LET g_xmdk_m.xmdk083 = NULL      LET g_xmdk_m.xmdk200 = NULL
      LET g_xmdk_m.xmdk201 = NULL      LET g_xmdk_m.xmdk202 = NULL      LET g_xmdk_m.xmdk203 = NULL
      LET g_xmdk_m.xmdk204 = NULL      LET g_xmdk_m.xmdk205 = NULL      LET g_xmdk_m.xmdk206 = NULL
      LET g_xmdk_m.xmdk207 = NULL      LET g_xmdk_m.xmdk214 = NULL      LET g_xmdk_m.xmda026 = NULL
   ELSE
      CALL adbt540_get_xmdg(g_xmdk_m.xmdk005)   RETURNING l_master.*
      
      LET g_xmdk_m.xmdk002 = l_master.xmdk002      LET g_xmdk_m.xmdk006 = l_master.xmdk006      LET g_xmdk_m.xmdk007 = l_master.xmdk007
      LET g_xmdk_m.xmdk008 = l_master.xmdk008      LET g_xmdk_m.xmdk009 = l_master.xmdk009      LET g_xmdk_m.xmdk010 = l_master.xmdk010
      LET g_xmdk_m.xmdk011 = l_master.xmdk011      LET g_xmdk_m.xmdk012 = l_master.xmdk012      LET g_xmdk_m.xmdk013 = l_master.xmdk013
      LET g_xmdk_m.xmdk014 = l_master.xmdk014      LET g_xmdk_m.xmdk015 = l_master.xmdk015      LET g_xmdk_m.xmdk016 = l_master.xmdk016
      LET g_xmdk_m.xmdk017 = l_master.xmdk017      LET g_xmdk_m.xmdk020 = l_master.xmdk020      LET g_xmdk_m.xmdk021 = l_master.xmdk021
      LET g_xmdk_m.xmdk022 = l_master.xmdk022      LET g_xmdk_m.xmdk023 = l_master.xmdk023      LET g_xmdk_m.xmdk024 = l_master.xmdk024
      LET g_xmdk_m.xmdk025 = l_master.xmdk025      LET g_xmdk_m.xmdk026 = l_master.xmdk026      LET g_xmdk_m.xmdk027 = l_master.xmdk027
      LET g_xmdk_m.xmdk030 = l_master.xmdk030      LET g_xmdk_m.xmdk031 = l_master.xmdk031      LET g_xmdk_m.xmdk033 = l_master.xmdk033
      LET g_xmdk_m.xmdk034 = l_master.xmdk034      LET g_xmdk_m.xmdk054 = l_master.xmdk054      LET g_xmdk_m.xmdk083 = l_master.xmdk083
      LET g_xmdk_m.xmdk200 = l_master.xmdk200      LET g_xmdk_m.xmdk201 = l_master.xmdk201      LET g_xmdk_m.xmdk202 = l_master.xmdk202
      LET g_xmdk_m.xmdk203 = l_master.xmdk203      LET g_xmdk_m.xmdk205 = l_master.xmdk205      LET g_xmdk_m.xmdk206 = l_master.xmdk206
      LET g_xmdk_m.xmdk207 = l_master.xmdk207      LET g_xmdk_m.xmdk214 = 'N'

      #包裝單製作不可同時為Y
      IF l_master.xmdk028 = 'Y' THEN      
         LET g_xmdk_m.xmdk028 = 'N'
      END IF
      #Invoice製作不可同時為Y
      IF l_master.xmdk029 = 'Y' THEN      
         LET g_xmdk_m.xmdk029 = 'N'
      END IF  
      
      #取價方式,優惠條件,整單折扣,帳款地址
      IF NOT cl_null(g_xmdk_m.xmdk006) THEN
         CALL adbt540_get_xmda(g_xmdk_m.xmdk006) RETURNING l_master2.*
      END IF  
      
      LET g_xmdk_m.xmdk018 = l_master2.xmdk018      LET g_xmdk_m.xmdk019 = l_master2.xmdk019      LET g_xmdk_m.xmdk204 = l_master2.xmdk204
      LET g_xmdk_m.xmda026 = l_master2.xmda026
   END IF  
   
   DISPLAY BY NAME g_xmdk_m.xmdk002,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,g_xmdk_m.xmdk009,                   
                   g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,                   
                   g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,
                   g_xmdk_m.xmdk020,g_xmdk_m.xmdk021,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,                   
                   g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,                   
                   g_xmdk_m.xmdk030,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,                  
                   g_xmdk_m.xmdk083,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201,g_xmdk_m.xmdk202,g_xmdk_m.xmdk203,                   
                   g_xmdk_m.xmdk204,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,g_xmdk_m.xmdk207,g_xmdk_m.xmdk214,
                   g_xmdk_m.xmda026                   
                   
   IF NOT cl_null(g_xmdk_m.xmdk009) AND cl_null(g_xmdk_m.xmdk021) THEN
      CALL adbt540_xmdk021_default()
   END IF 
   
   CALL adbt540_xmdk_ref()
   LET g_xmdk_m_o.* = g_xmdk_m.*
   CALL adbt540_xmdl087_default()
                       
END FUNCTION]]>
  </point>
  <point name="function.adbt540_notice_detail_default" order="10" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭有輸入出通單號時自動帶出單身
# Memo...........:
# Usage..........: adbt540_notice_detail_default()
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 2014/08/18 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_notice_detail_default()
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmdhseq    LIKE xmdh_t.xmdhseq
   DEFINE l_msg        STRING
   DEFINE l_detail    type_source_detail   
   DEFINE l_success_cnt   LIKE type_t.num5
   
   LET r_success = TRUE
   
   LET g_sql = "SELECT xmdhseq ",
               "  FROM xmdh_t ",
               " WHERE xmdhent = ",g_enterprise,
               "   AND xmdhdocno = '",g_xmdk_m.xmdk005,"' ",
               "   AND xmdhunit = '",g_xmdk_m.xmdksite,"' ",
               "   AND xmdh212 = '",g_xmdk_m.xmdk009,"' ",
               " ORDER BY xmdhseq "
                  
   PREPARE auto_import1_pre FROM g_sql
   DECLARE auto_import1_cur CURSOR FOR auto_import1_pre   
   
   LET l_seq = 1

   CALL s_transaction_begin()                      #單身transaction   
   FOREACH auto_import1_cur INTO l_xmdhseq
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF NOT adbt540_notice_chk_and_val(1,'a',l_seq,g_xmdk_m.xmdk005,l_xmdhseq) THEN
         CONTINUE FOREACH
      ELSE
         LET l_success_cnt = l_success_cnt + 1
      END IF
      
      LET l_seq = l_seq + 1
   END FOREACH

   IF l_success_cnt > 0 THEN
      LET r_success = TRUE
   ELSE
      LET r_success = FALSE   
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "adb-00304" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()    
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_notice_chk_and_val" order="11" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 出通單校驗帶值
# Memo           : 單身輸入出通單單號/項次時取出通單資料做檢核 
# Usage..........: CALL adbt540_notice_chk_and_val(p_process,p_cmd,p_xmdlseq,p_xmdl001,p_xmdl002)
# Input parameter: p_process   處理方式：1.單頭輸入單號, 只做檢核
#                                       2.單身輸入單號, 做檢核, 若項次只有一筆自動帶出作為預設值
#                  p_cmd       a.新增, u.修改 
#                  p_xmdlseq   出貨單項次
#                  p_xmdl001   出通單號
#                  p_xmdl002   出通項次
# Return Code....: r_success   檢查結果
# Date & Author..: 2014/05/28 By Lori
################################################################################
PRIVATE FUNCTION adbt540_notice_chk_and_val(p_process,p_cmd,p_xmdlseq,p_xmdl001,p_xmdl002)
   DEFINE p_process   LIKE type_t.num5
   DEFINE p_cmd       LIKE type_t.chr10
   DEFINE p_xmdlseq   LIKE xmdl_t.xmdlseq
   DEFINE p_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002   LIKE xmdl_t.xmdl002
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_master    type_source_master   
   DEFINE l_detail    type_source_detail
   DEFINE l_cnt       LIKE type_t.num5   
   DEFINE l_default   LIKE type_t.chr1   
   
   LET r_success = TRUE   
   LET l_cnt = 0
   LET l_default = NULL
   INITIALIZE l_master.* TO NULL
   INITIALIZE l_detail.* TO NULL
   
   INITIALIZE g_chkparam.* TO NULL  
   LET g_chkparam.arg1 = p_xmdl001
   IF NOT cl_chk_exist("v_xmdgdocno") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF  
   
   IF p_xmdl002 IS NOT NULL THEN
      SELECT COUNT(xmdlseq) INTO l_cnt
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdl001 = p_xmdl001
         AND xmdl002 = p_xmdl002  
      IF l_cnt > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00245'   #該單據%1項次%2已存在此單身，不可重複輸入！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = p_xmdl001
         LET g_errparam.replace[2] = p_xmdl002
         CALL cl_err()
      
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      INITIALIZE g_chkparam.* TO NULL  
      LET g_chkparam.arg1 = p_xmdl001
      LET g_chkparam.arg2 = p_xmdl002
      IF NOT cl_chk_exist("v_xmdhseq") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF      
   END IF
   
   CASE p_process 
      WHEN 1 
         LET l_default = 'Y'
         LET l_master.* = g_master_t.*
         CALL adbt540_get_xmdh(p_xmdl001,p_xmdl002,'Y') RETURNING l_detail.*
      WHEN 2
         CALL adbt540_get_xmdg(g_xmdl_d[l_ac].xmdl001) RETURNING l_master.*
         #根據KEY判斷來源單據的單身是否只有一筆,只有一筆時就取得單身資料
         IF adbt540_source_cnt(1,'',p_xmdl001,p_xmdl002,'','','','') = 1 
           OR (p_xmdl001 IS NOT NULL AND p_xmdl002 IS NOT NULL) THEN      
            CALL adbt540_get_xmdh(p_xmdl001,p_xmdl002,'N') RETURNING l_detail.*
            LET l_default = 'Y'
         END IF      
   END CASE

   IF cl_null(l_detail.xmdl001) THEN    LET l_detail.xmdl001 = p_xmdl001       END IF
   IF cl_null(l_detail.xmdl002) THEN    LET l_detail.xmdl002 = p_xmdl002       END IF
   
   LET g_errno = adbt540_source_slip_chk(1,l_master.*,l_detail.*)
   IF NOT cl_null(g_errno) THEN
      LET r_success = FALSE   
      RETURN r_success
   END IF

   #來源單據的單身只有一筆時就自動帶值到畫面上
   IF l_default = 'Y' THEN
      CASE p_process
         WHEN 1
            IF cl_null(l_detail.xmdl013) THEN
               LET l_detail.xmdl013 = 'N'
            END IF   
            LET l_detail.xmdl087 = 'N'
            LET l_detail.xmdl088 = 'N'
            IF cl_null(l_detail.xmdl207) THEN
               LET l_detail.xmdl207 = 'N'
            END IF              
            LET l_detail.xmdl220 = 0
            LET l_detail.xmdlunit = l_detail.xmdlsite               
            #預設出貨包裝數量
            CALL adbt540_xmdl205_default(p_xmdlseq,       l_detail.xmdl001,l_detail.xmdl002,
                                         l_detail.xmdl003,l_detail.xmdl004,l_detail.xmdl005,l_detail.xmdl006,
                                         l_detail.xmdl008,l_detail.xmdl017,l_detail.xmdl019,l_detail.xmdl021,
                                         l_detail.xmdl024,l_detail.xmdl025,l_detail.xmdl204,'Y')
               RETURNING l_detail.xmdl018,l_detail.xmdl020,l_detail.xmdl022,
                         l_detail.xmdl027,l_detail.xmdl028,l_detail.xmdl029,
                         l_detail.xmdl205
            
            #預設可出貨數量為0時,不往下處理
            IF l_detail.xmdl018 = 0 THEN
               LET r_success = FALSE
               RETURN r_success            
            END IF
            #產品特徵為NULL時,給空白   
            IF cl_null(l_detail.xmdl009) THEN
               LET l_detail.xmdl009 = ' '
            END IF
             
            IF NOT cl_null(l_detail.xmdl205) AND l_detail.xmdl205 > 0 THEN          
               INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                                   xmdl001,xmdl002, xmdl003,  xmdl004,xmdl005,
                                   xmdl006,xmdl007, xmdl008,  xmdl009,xmdl010,
                                   xmdl011,xmdl012, xmdl013,  xmdl014,xmdl015,
                                   xmdl016,xmdl017, xmdl018,  xmdl019,xmdl020,
                                   xmdl021,xmdl022, xmdl023,  xmdl024,xmdl025,
                                   xmdl026,xmdl027, xmdl028,  xmdl029,xmdl030,
                                   xmdl031,xmdl032, xmdl033,  xmdl034,xmdl088,
                                   xmdl200,xmdl201, xmdl202,  xmdl204,xmdl205,
                                   xmdl207,xmdl208, xmdl209,  xmdl210,xmdl211,
                                   xmdl220,xmdl222, xmdl223,  xmdl224,xmdl225,
                                   xmdl226,xmdl052)    
                    VALUES (g_enterprise,    g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,p_xmdlseq,                           #企業代碼,發貨組織,單號,項次,
                            p_xmdl001,       p_xmdl002,        l_detail.xmdl003,  l_detail.xmdl004,l_detail.xmdl005,   #出通單號,出通項次,訂單單號,訂單項次,訂單項序
                            l_detail.xmdl006,l_detail.xmdl007, l_detail.xmdl008,  l_detail.xmdl009,l_detail.xmdl010,   #訂單分批序,子件特性,料件編號,產品特徵,包裝容器
                            l_detail.xmdl011,l_detail.xmdl012, l_detail.xmdl013,  l_detail.xmdl014,l_detail.xmdl015,   #作業編號,製程序,多庫儲批出貨,庫位,儲位
                            l_detail.xmdl016,l_detail.xmdl017, l_detail.xmdl018,  l_detail.xmdl019,l_detail.xmdl020,   #批號,出貨單位,出貨數量,參考單位,參考數量,
                            l_detail.xmdl021,l_detail.xmdl022, l_detail.xmdl023,  l_detail.xmdl024,l_detail.xmdl025,   #計價單位,計價數量,檢驗否,單價,稅別
                            l_detail.xmdl026,l_detail.xmdl027, l_detail.xmdl028,  l_detail.xmdl029,l_detail.xmdl030,   #稅率,未稅金額,含稅金額,稅額,專案編號
                            l_detail.xmdl031,l_detail.xmdl032, l_detail.xmdl033,  l_detail.xmdl034,l_detail.xmdl088,   #WBS編號,活動代號,客戶料號,QPA,多角流程代碼
                            l_detail.xmdl200,l_detail.xmdl201, l_detail.xmdl202,  l_detail.xmdl204,l_detail.xmdl205,   #銷售渠道,產品組編碼,售範圍編碼,出貨包裝單位,出貨包裝數量
                            l_detail.xmdl207,l_detail.xmdl208, l_detail.xmdl209,  l_detail.xmdl210,l_detail.xmdl211,   #銷存鎖定等級,標準價,促銷價,交易價,折價金額
                            l_detail.xmdl220,l_detail.xmdl222, l_detail.xmdl223,  l_detail.xmdl224,l_detail.xmdl225,   #寄銷核銷數量,地區編號,縣市編號,省區編號,區域編號
                            l_detail.xmdl226,l_detail.xmdl052)                                                         #商品條碼,庫存管理特徵                          
               
               IF SQLCA.sqlcode THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            ELSE
               RETURN r_success            
            END IF   
         WHEN 2
            IF NOT adbt540_detail_default(1,l_detail.*) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
      END CASE
      
      IF p_process = 1 OR 
         (p_process = 2 AND p_cmd = 'a' 
            AND l_detail.xmdl001 IS NOT NULL AND l_detail.xmdl002 IS NOT NULL) THEN            
         #由出通單多庫儲批自動帶出單身      
         LET l_success = ''
         CALL adbt540_01_xmdm_modify(g_mutil_inv,     p_xmdlseq,       g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,p_xmdlseq,          #出貨單(1),單據項次舊值,營運據點,單據單號,項次
                                     l_detail.xmdl008,l_detail.xmdl009,l_detail.xmdl011, l_detail.xmdl012,  l_detail.xmdl014,   #料件編號,產品特徵,作業編號,製程序,庫位
                                     l_detail.xmdl015,l_detail.xmdl016,l_detail.xmdl017, l_detail.xmdl018,  l_detail.xmdl019,   #儲位,批號,出貨單位,數量,參考單位
                                     l_detail.xmdl020,'',              '',               l_detail.xmdl052)                      #參考數量,簽退數量,簽退參考數量,庫存管理特徵
            RETURNING l_success 
         IF NOT l_success THEN
            #CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF         
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_order_master_default" order="12" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 依訂單單號帶出訂單資料
# Usage..........: CALL adbt540_order_master_default(p_clear_flag)
# Input parameter: p_clear_flag   帶值欄位是否清空,單別變更時傳Y,其他情況傳空值
# Date & Author..: 2014/05/26 By Lori
################################################################################
PRIVATE FUNCTION adbt540_order_master_default(p_clear_flag)
   DEFINE p_clear_flag   LIKE type_t.chr1
   DEFINE l_master       type_source_master 
   
   IF p_clear_flag  = 'Y' THEN
      LET g_xmdk_m.xmdk002 = NULL      LET g_xmdk_m.xmdk007 = NULL      LET g_xmdk_m.xmdk008 = NULL
      LET g_xmdk_m.xmdk009 = NULL      LET g_xmdk_m.xmdk010 = NULL      LET g_xmdk_m.xmdk011 = NULL
      LET g_xmdk_m.xmdk012 = NULL      LET g_xmdk_m.xmdk013 = NULL      LET g_xmdk_m.xmdk014 = NULL      
      LET g_xmdk_m.xmdk015 = NULL      LET g_xmdk_m.xmdk016 = NULL      LET g_xmdk_m.xmdk017 = NULL
      LET g_xmdk_m.xmdk018 = NULL      LET g_xmdk_m.xmdk019 = NULL      LET g_xmdk_m.xmdk020 = NULL      
      LET g_xmdk_m.xmdk021 = NULL      LET g_xmdk_m.xmdk023 = NULL      LET g_xmdk_m.xmdk024 = NULL
      LET g_xmdk_m.xmdk027 = NULL      LET g_xmdk_m.xmdk030 = NULL      LET g_xmdk_m.xmdk031 = NULL
      LET g_xmdk_m.xmdk034 = NULL      LET g_xmdk_m.xmdk054 = NULL      LET g_xmdk_m.xmdk083 = NULL     
      LET g_xmdk_m.xmdk200 = NULL      LET g_xmdk_m.xmdk201 = NULL      LET g_xmdk_m.xmdk202 = NULL
      LET g_xmdk_m.xmdk203 = NULL      LET g_xmdk_m.xmdk204 = NULL      LET g_xmdk_m.xmdk205 = NULL      
      LET g_xmdk_m.xmdk206 = NULL      LET g_xmdk_m.xmdk207 = NULL      LET g_xmdk_m.xmdk214 = NULL
      LET g_xmdk_m.xmda026 = NULL	
   ELSE
      CALL adbt540_get_xmda(g_xmdk_m.xmdk006) RETURNING l_master.*

      LET g_xmdk_m.xmdk002 = l_master.xmdk002      LET g_xmdk_m.xmdk007 = l_master.xmdk007      LET g_xmdk_m.xmdk008 = l_master.xmdk008
      LET g_xmdk_m.xmdk009 = l_master.xmdk009      LET g_xmdk_m.xmdk010 = l_master.xmdk010      LET g_xmdk_m.xmdk011 = l_master.xmdk011
      LET g_xmdk_m.xmdk012 = l_master.xmdk012      LET g_xmdk_m.xmdk013 = l_master.xmdk013      LET g_xmdk_m.xmdk014 = l_master.xmdk014      
      LET g_xmdk_m.xmdk015 = l_master.xmdk015      LET g_xmdk_m.xmdk016 = l_master.xmdk016      LET g_xmdk_m.xmdk017 = l_master.xmdk017
      LET g_xmdk_m.xmdk018 = l_master.xmdk018      LET g_xmdk_m.xmdk019 = l_master.xmdk019      LET g_xmdk_m.xmdk020 = l_master.xmdk020      
      LET g_xmdk_m.xmdk021 = l_master.xmdk021      LET g_xmdk_m.xmdk023 = l_master.xmdk023      LET g_xmdk_m.xmdk024 = l_master.xmdk024
      LET g_xmdk_m.xmdk027 = l_master.xmdk027      LET g_xmdk_m.xmdk030 = l_master.xmdk030      LET g_xmdk_m.xmdk031 = l_master.xmdk031
      LET g_xmdk_m.xmdk034 = l_master.xmdk034      LET g_xmdk_m.xmdk054 = l_master.xmdk054      LET g_xmdk_m.xmdk083 = l_master.xmdk083     
      LET g_xmdk_m.xmdk200 = l_master.xmdk200      LET g_xmdk_m.xmdk201 = l_master.xmdk201      LET g_xmdk_m.xmdk202 = l_master.xmdk202
      LET g_xmdk_m.xmdk203 = l_master.xmdk203      LET g_xmdk_m.xmdk204 = l_master.xmdk204      LET g_xmdk_m.xmdk205 = l_master.xmdk205      
      LET g_xmdk_m.xmdk206 = l_master.xmdk206      LET g_xmdk_m.xmdk207 = l_master.xmdk207      LET g_xmdk_m.xmdk214 = 'N'
      LET g_xmdk_m.xmda026 = l_master.xmda026	
   END IF
   
   DISPLAY BY NAME g_xmdk_m.xmdk002,g_xmdk_m.xmdk006,g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,g_xmdk_m.xmdk009,                   
                   g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,                   
                   g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk020,g_xmdk_m.xmdk021,                   
                   g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,                   
                   g_xmdk_m.xmdk027,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk030,g_xmdk_m.xmdk031,                   
                   g_xmdk_m.xmdk033,g_xmdk_m.xmdk034,g_xmdk_m.xmdk054,g_xmdk_m.xmdk083,g_xmdk_m.xmdk200,                   
                   g_xmdk_m.xmdk201,g_xmdk_m.xmdk202,g_xmdk_m.xmdk203,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,                   
                   g_xmdk_m.xmdk207,g_xmdk_m.xmdk214,g_xmdk_m.xmda026
                
   IF NOT cl_null(g_xmdk_m.xmdk009) AND cl_null(g_xmdk_m.xmdk021) THEN
      CALL adbt540_xmdk021_default()
   END IF   
   
   CALL adbt540_xmdk_ref()
   LET g_xmdk_m_o.* = g_xmdk_m.*
   CALL adbt540_xmdl087_default()
                
END FUNCTION]]>
  </point>
  <point name="function.adbt540_order_detail_default" order="13" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單頭有輸入訂單號時自動帶出單身
# Memo...........:
# Usage..........: adbt540_order_detail_default()
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 2014/08/18 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_order_detail_default()
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmddseq    LIKE xmdd_t.xmddseq
   DEFINE l_xmddseq1   LIKE xmdd_t.xmddseq1
   DEFINE l_xmddseq2   LIKE xmdd_t.xmddseq2
   DEFINE l_xmdd011    LIKE xmdd_t.xmdd011
   DEFINE l_msg        STRING 
   DEFINE l_success_cnt   LIKE type_t.num5
      
   LET l_success_cnt = 0      
   LET g_sql = "SELECT xmddseq,xmddseq1,xmddseq2,",
               "       xmdd011",
               "  FROM xmdc_t,xmdd_t",
               " WHERE xmdcent = xmddent",
               "   AND xmdcdocno = xmdddocno",
               "   AND xmdcseq = xmddseq",
               "   AND xmddent = ",g_enterprise,
               "   AND xmdddocno = '",g_xmdk_m.xmdk006,"' ",
               "   AND xmddunit = '",g_xmdk_m.xmdksite,"' ",
               "   AND xmdd211 = '",g_xmdk_m.xmdk009,"' ",
               " ORDER BY xmddseq,xmddseq1,xmddseq2 "  
                                                              
   PREPARE auto_import2_pre FROM g_sql
   DECLARE auto_import2_cur CURSOR FOR auto_import2_pre  

   LET l_xmdd011 = ''   
   LET l_seq = 1
   
   CALL s_transaction_begin()         #單身transaction
   
   LET r_success = TRUE
           
   FOREACH auto_import2_cur INTO l_xmddseq,l_xmddseq1,l_xmddseq2,l_xmdd011
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "auto_import2_cur"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF      
      
      #IF l_xmdd011 > g_xmdk_m.xmdkdocdt THEN
      #   CALL cl_errmsg('',l_msg,'','axm-00222',1)   #訂單分批序的"約定交貨日"大於出貨單頭的"出貨日期"！
      #   CONTINUE FOREACH
      #END IF
      
      IF NOT adbt540_order_chk_and_val(1,'a',l_seq,g_xmdk_m.xmdk006,l_xmddseq,l_xmddseq1,l_xmddseq2) THEN  
         CONTINUE FOREACH
      ELSE
         LET l_success_cnt = l_success_cnt + 1
      END IF
      
      LET l_seq = l_seq + 1
   END FOREACH

   IF l_success_cnt > 0 THEN
      LET r_success = TRUE
   ELSE
      LET r_success = FALSE   
      
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "adb-00304" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()    
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_order_chk_and_val" order="14" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 訂單校驗帶值
# Memo           : 單身輸入訂單單號/項次/項序/分批序時取出通單資料做檢核 
# Usage..........: CALL adbt540_order_chk_and_val(p_process,p_cmd,p_xmdlseq,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006)
# Input parameter: p_process   處理方式：1.單頭輸入單號, 做檢核並寫入DB
#                                       2.單身輸入單號, 做檢核, 若項次只有一筆自動帶出作為預設值
#                  p_cmd       a.新增, u.修改
#                  p_xmdlseq   出貨單項次
#                  p_xmdl003   訂單號
#                  p_xmdl004   訂單項次
#                  p_xmdl005   訂單項序
#                  p_xmdl006   訂單分批序
# Return Code....: r_success   檢查結果
# Date & Author..: 2014/05/28 By Lori
################################################################################
PRIVATE FUNCTION adbt540_order_chk_and_val(p_process,p_cmd,p_xmdlseq,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006)
   DEFINE p_process   LIKE type_t.num5
   DEFINE p_cmd       LIKE type_t.chr10
   DEFINE p_xmdlseq   LIKE xmdl_t.xmdlseq
   DEFINE p_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE p_xmdl004   LIKE xmdl_t.xmdl004
   DEFINE p_xmdl005   LIKE xmdl_t.xmdl005
   DEFINE p_xmdl006   LIKE xmdl_t.xmdl006
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_master    type_source_master   
   DEFINE l_detail    type_source_detail 
   #DEFINE l_xmda006  LIKE xmda_t.xmda006
    DEFINE l_cnt       LIKE type_t.num5 
   DEFINE l_default   LIKE type_t.chr1  
   #DEFINE l_ac_t       LIKE type_t.num5   #指標備份
   #DEFINE l_ins_cnt    LIKE type_t.num5   #新增筆數
   #DEFINE l_detail_cnt LIKE type_t.num5   #單身總筆數  
   
   LET r_success = TRUE
   LET g_errno = NULL
   #LET l_xmda006 = NULL
   LET l_cnt = 0
   LET l_default = NULL   
   INITIALIZE l_master.* TO NULL
   INITIALIZE l_detail.* TO NULL

   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_xmdl003
   IF NOT cl_chk_exist("v_xmdadocno_1") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF      
   
   IF p_xmdl004 IS NOT NULL AND p_xmdl005 IS NOT NULL AND p_xmdl006 IS NOT NULL THEN
      
      SELECT COUNT(xmdlseq) INTO l_cnt
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
         AND xmdl003 = p_xmdl003
         AND xmdl004 = p_xmdl004
         AND xmdl005 = p_xmdl005
         AND xmdl006 = p_xmdl006 
      IF l_cnt > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00246'   #該單據%1項次%2項序%3分批序%4已存在此單身，不可重複輸入！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = p_xmdl003 
         LET g_errparam.replace[2] = p_xmdl004 
         LET g_errparam.replace[3] = p_xmdl005 
         LET g_errparam.replace[4] = p_xmdl006
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      ELSE
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = p_xmdl003
         LET g_chkparam.arg2 = p_xmdl004
         LET g_chkparam.arg3 = p_xmdl005
         LET g_chkparam.arg4 = p_xmdl006
         LET g_chkparam.arg5 = g_xmdk_m.xmdksite
         
         IF NOT cl_chk_exist("v_xmddseq2_1") THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF      
   END IF  
   
   #單頭訂單多角性質
   #IF NOT cl_null(g_xmdk_m.xmdk006) THEN
   #   SELECT xmda006 INTO l_xmda006
   #     FROM xmda_t
   #    WHERE xmdaent = g_enterprise
   #      AND xmdadocno = g_xmdk_m.xmdk006       
   #END IF
 
   CASE p_process 
      WHEN 1 
         LET l_default = 'Y'
         LET l_master.* = g_master_t.*
         CALL adbt540_get_xmdd(p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,'Y') RETURNING l_detail.*   
      WHEN 2 
         CALL adbt540_get_xmda(p_xmdl003) RETURNING l_master.*
         #根據KEY判斷來源單據的單身是否只有一筆,只有一筆時就取得單身資料
         IF adbt540_source_cnt(2,'','','',p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006) = 1 OR
            (p_xmdl003 IS NOT NULL AND p_xmdl004 IS NOT NULL AND p_xmdl005 IS NOT NULL AND p_xmdl006 IS NOT NULL)
            THEN
            CALL adbt540_get_xmdd(p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,'N') RETURNING l_detail.*            
            LET l_default = 'Y'      
         END IF      
   END CASE

   IF cl_null(l_detail.xmdl003)  THEN      LET l_detail.xmdl003 = p_xmdl003      END IF
   IF cl_null(l_detail.xmdl004)  THEN      LET l_detail.xmdl004 = p_xmdl004      END IF
   IF cl_null(l_detail.xmdl005)  THEN      LET l_detail.xmdl005 = p_xmdl005      END IF
   IF cl_null(l_detail.xmdl006)  THEN      LET l_detail.xmdl006 = p_xmdl006      END IF

   LET g_errno = adbt540_source_slip_chk(2,l_master.*,l_detail.*)
   IF NOT cl_null(g_errno) THEN
      LET r_success = FALSE   
      RETURN r_success 
   END IF
   
   #來源單據的單身只有一筆時就自動帶值到畫面上   
   IF l_default = 'Y' THEN  
      CASE p_process
         WHEN 1
            IF p_cmd = 'a' THEN            
               LET l_detail.xmdl013 = 'N'
               LET l_detail.xmdl087 = 'N'
               LET l_detail.xmdl088 = 'N'
               LET l_detail.xmdl220 = 0
               LET l_detail.xmdlunit = l_detail.xmdlsite            
               #預設出貨包裝數量
               CALL adbt540_xmdl205_default(p_xmdlseq,       l_detail.xmdl001,l_detail.xmdl002,
                                            l_detail.xmdl003,l_detail.xmdl004,l_detail.xmdl005,l_detail.xmdl006,
                                            l_detail.xmdl008,l_detail.xmdl017,l_detail.xmdl019,l_detail.xmdl021,
                                            l_detail.xmdl024,l_detail.xmdl025,l_detail.xmdl204,'Y')
                  RETURNING l_detail.xmdl018,l_detail.xmdl020,l_detail.xmdl022,
                            l_detail.xmdl027,l_detail.xmdl028,l_detail.xmdl029,
                            l_detail.xmdl205     
                            
               #預設可出貨數量為0時,不往下處理
               IF l_detail.xmdl018 = 0 THEN
                  LET r_success = FALSE
                  RETURN r_success            
               END IF               
               #產品特徵為NULL時,給空白   
               IF cl_null(l_detail.xmdl009) THEN
                  LET l_detail.xmdl009 = ' '
               END IF               
               
               IF NOT cl_null(l_detail.xmdl205) AND l_detail.xmdl205 > 0 THEN  
                  INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                                      xmdl003,xmdl004 ,xmdl005,  xmdl006 ,xmdl007,
                                      xmdl008,xmdl009 ,xmdl010,  xmdl011 ,xmdl012,
                                      xmdl013,xmdl014 ,xmdl015,  xmdl016 ,xmdl017,
                                      xmdl018,xmdl019 ,xmdl020,  xmdl021 ,xmdl022,
                                      xmdl023,xmdl024 ,xmdl025,  xmdl026 ,xmdl027,
                                      xmdl028,xmdl029 ,xmdl030,  xmdl031 ,xmdl032,
                                      xmdl033,xmdl034 ,xmdl037,  xmdl041 ,xmdl042,
                                      xmdl043,xmdl044 ,xmdl045,  xmdl046 ,xmdl050,
                                      xmdl051,xmdl087 ,xmdl088,  xmdl200 ,xmdl201, 
                                      xmdl202,xmdl203 ,xmdl204,  xmdl205 ,xmdl207,
                                      xmdl208,xmdl209 ,xmdl210,  xmdl211 ,xmdl212,
                                      xmdl213,xmdl214 ,xmdl215,  xmdl216 ,xmdl217,
                                      xmdl218,xmdl219 ,xmdl220,  xmdl222 ,xmdl223,
                                      xmdl224,xmdl225 ,xmdl226 ,xmdlunit ,xmdlorga,
                                      xmdl052)   
                       VALUES (g_enterprise,    g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,p_xmdlseq,                            #企業代碼,發貨組織,單號,項次,
                               l_detail.xmdl003,l_detail.xmdl004, l_detail.xmdl005,  l_detail.xmdl006, l_detail.xmdl007,   #訂單單號,訂單項次,訂單項序,訂單分批序,子件特性
                               l_detail.xmdl008,l_detail.xmdl009, l_detail.xmdl010,  l_detail.xmdl011, l_detail.xmdl012,   #料件編號,產品特徵,包裝容器,作業編號,製程序
                               l_detail.xmdl013,l_detail.xmdl014, l_detail.xmdl015,  l_detail.xmdl016, l_detail.xmdl017,   #多庫儲批,庫位,儲位,批號,出貨單位
                               l_detail.xmdl018,l_detail.xmdl019, l_detail.xmdl020,  l_detail.xmdl021, l_detail.xmdl022,   #出貨數量,參考單位,參考數量,計價單位,計價數量
                               l_detail.xmdl023,l_detail.xmdl024, l_detail.xmdl025,  l_detail.xmdl026, l_detail.xmdl027,   #檢驗否,單價,稅別,稅率,未稅金額
                               l_detail.xmdl028,l_detail.xmdl029, l_detail.xmdl030,  l_detail.xmdl031, l_detail.xmdl032,   #含稅金額,稅額,專案編號,WBS編號,活動代號
                               l_detail.xmdl033,l_detail.xmdl034, l_detail.xmdl037,  l_detail.xmdl041, l_detail.xmdl042,   #客戶料號,QPA,已銷退量,飽稅否,取價來源
                               l_detail.xmdl043,l_detail.xmdl044, l_detail.xmdl045,  l_detail.xmdl046, l_detail.xmdl050,   #價格來源參考單號,價格來源參考項次,取出價格,取出價格,理由碼
                               l_detail.xmdl051,l_detail.xmdl087, l_detail.xmdl088,  l_detail.xmdl200, l_detail.xmdl201,   #備註,需自立應收否,多角流程代碼,銷售渠道,產品組編碼
                               l_detail.xmdl202,l_detail.xmdl203, l_detail.xmdl204,  l_detail.xmdl205, l_detail.xmdl207,   #銷售範圍編碼,銷售辦公室,出貨包裝單位,出貨包裝數量,庫存鎖定等級,
                               l_detail.xmdl208,l_detail.xmdl209, l_detail.xmdl210,  l_detail.xmdl211, l_detail.xmdl212,   #標準價,促銷價,交易價,折價金額,銷售組織
                               l_detail.xmdl213,l_detail.xmdl214, l_detail.xmdl215,  l_detail.xmdl216, l_detail.xmdl217,   #銷售人員,銷售部門,合約編號,經營方式,結算類型
                               l_detail.xmdl218,l_detail.xmdl219, l_detail.xmdl220,  l_detail.xmdl222, l_detail.xmdl223,   #結算方式,交易類型,寄銷已核銷數量,地區編號,縣市編號
                               l_detail.xmdl224,l_detail.xmdl225, l_detail.xmdl226,  l_detail.xmdlunit,l_detail.xmdlorga,  #省區編號,區域編號,商品條碼,應用組織,帳務組織
                               l_detail.xmdl052)                                                                           #庫存管理特徵  
                  IF SQLCA.sqlcode THEN
                     LET r_success = FALSE
                     RETURN r_success
                  END IF
               ELSE
                  RETURN r_success 
               END IF               
            END IF   
         WHEN 2
            IF NOT adbt540_detail_default(2,l_detail.*) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
      END CASE
      
      IF p_process = 1 OR 
         (p_process = 2 AND p_cmd = 'a' 
            AND l_detail.xmdl003 IS NOT NULL AND l_detail.xmdl004 IS NOT NULL
            AND l_detail.xmdl005 IS NOT NULL AND l_detail.xmdl006 IS NOT NULL) THEN
         #由訂單多庫儲批自動帶出單身      
         LET l_success = ''
         CALL adbt540_01_xmdm_modify(g_mutil_inv,     p_xmdlseq,       g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,p_xmdlseq,          #出貨單(1),單據項次舊值,營運據點,單據單號,項次
                                     l_detail.xmdl008,l_detail.xmdl009,l_detail.xmdl011, l_detail.xmdl012,  l_detail.xmdl014,   #料件編號,產品特徵,作業編號,製程序,庫位
                                     l_detail.xmdl015,l_detail.xmdl016,l_detail.xmdl017, l_detail.xmdl018,  l_detail.xmdl019,   #儲位,批號,出貨單位,數量,參考單位
                                     l_detail.xmdl020,'',              '',               l_detail.xmdl052)                      #參考數量,簽退數量,簽退參考數量,庫存管理特徵
            RETURNING l_success 
         IF NOT l_success THEN
            #CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success
         END IF 
      END IF  
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_detail_default" order="15" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依來源單據帶單身值
# Usage..........: CALL adbt540_detail_default(p_source,p_detail)
#                     RETURNING r_success
# Input parameter: p_source   來源,1.出通單,2.訂單
#                : p_detail   帶值資料
# Return Code....: r_success
# Date & Author..: 2014/05/26 By Lori
# Modify.........: 2015/02/25 By Lori 新增回傳值
################################################################################
PRIVATE FUNCTION adbt540_detail_default(p_source,p_detail)
   DEFINE p_source      LIKE type_t.num5
   DEFINE p_detail      type_source_detail
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_detail      type_source_detail
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_xmdl001_t   LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002_t   LIKE xmdl_t.xmdl002
   DEFINE l_xmdl003_t   LIKE xmdl_t.xmdl003
   DEFINE l_xmdl004_t   LIKE xmdl_t.xmdl004
   DEFINE l_xmdl005_t   LIKE xmdl_t.xmdl005
   DEFINE l_xmdl006_t   LIKE xmdl_t.xmdl006
   
   
   LET r_success = TRUE
   INITIALIZE l_detail.* TO NULL
   LET l_detail.* = p_detail.*
   #備份
   LET l_xmdl001_t = g_xmdl_d[l_ac].xmdl001
   LET l_xmdl002_t = l_detail.xmdl002   
   LET l_xmdl003_t = l_detail.xmdl003   
   LET l_xmdl004_t = l_detail.xmdl004
   LET l_xmdl005_t = l_detail.xmdl005   
   LET l_xmdl006_t = l_detail.xmdl006   
   
   LET g_xmdl_d[l_ac].xmdl002 = l_detail.xmdl002   LET g_xmdl_d[l_ac].xmdl003 = l_detail.xmdl003   LET g_xmdl_d[l_ac].xmdl004 = l_detail.xmdl004
   LET g_xmdl_d[l_ac].xmdl005 = l_detail.xmdl005   LET g_xmdl_d[l_ac].xmdl006 = l_detail.xmdl006   LET g_xmdl_d[l_ac].xmdl007 = l_detail.xmdl007 
   LET g_xmdl_d[l_ac].xmdl226 = l_detail.xmdl226   LET g_xmdl_d[l_ac].xmdl008 = l_detail.xmdl008   LET g_xmdl_d[l_ac].xmdl009 = l_detail.xmdl009   
   LET g_xmdl_d[l_ac].xmdl033 = l_detail.xmdl033   LET g_xmdl_d[l_ac].xmdl204 = l_detail.xmdl204   LET g_xmdl_d[l_ac].xmdl017 = l_detail.xmdl017
   LET g_xmdl_d[l_ac].xmdl019 = l_detail.xmdl019   LET g_xmdl_d[l_ac].xmdl013 = l_detail.xmdl013   LET g_xmdl_d[l_ac].xmdl207 = l_detail.xmdl207
   LET g_xmdl_d[l_ac].xmdl014 = l_detail.xmdl014   LET g_xmdl_d[l_ac].xmdl015 = l_detail.xmdl015   LET g_xmdl_d[l_ac].xmdl016 = l_detail.xmdl016
   LET g_xmdl_d[l_ac].xmdl052 = l_detail.xmdl052   LET g_xmdl_d[l_ac].xmdl222 = l_detail.xmdl222   LET g_xmdl_d[l_ac].xmdl223 = l_detail.xmdl223   
   LET g_xmdl_d[l_ac].xmdl224 = l_detail.xmdl224   LET g_xmdl_d[l_ac].xmdl225 = l_detail.xmdl225      
                        
   LET g_xmdl_d[l_ac].xmdl010 = l_detail.xmdl010   LET g_xmdl_d[l_ac].xmdl011 = l_detail.xmdl011   LET g_xmdl_d[l_ac].xmdl034 = l_detail.xmdl012 
   LET g_xmdl_d[l_ac].xmdl021 = l_detail.xmdl021   LET g_xmdl_d[l_ac].xmdl023 = l_detail.xmdl023   LET g_xmdl_d[l_ac].xmdl034 = l_detail.xmdl034
   LET g_xmdl_d[l_ac].xmdl088 = l_detail.xmdl088   
   
   LET g_xmdl2_d[l_ac].xmdl208 = l_detail.xmdl208   LET g_xmdl2_d[l_ac].xmdl209 = l_detail.xmdl209   LET g_xmdl2_d[l_ac].xmdl210 = l_detail.xmdl210
   LET g_xmdl2_d[l_ac].xmdl025 = l_detail.xmdl025   LET g_xmdl2_d[l_ac].xmdl026 = l_detail.xmdl026   LET g_xmdl2_d[l_ac].xmdl211 = l_detail.xmdl211
   LET g_xmdl2_d[l_ac].xmdl024 = l_detail.xmdl024 
   
   LET g_xmdl6_d[l_ac].xmdl2264= l_detail.xmdl226   LET g_xmdl6_d[l_ac].xmdl212 = l_detail.xmdl212   LET g_xmdl6_d[l_ac].xmdl200 = l_detail.xmdl200   
   LET g_xmdl6_d[l_ac].xmdl201 = l_detail.xmdl201   LET g_xmdl6_d[l_ac].xmdl202 = l_detail.xmdl202   LET g_xmdl6_d[l_ac].xmdl203 = l_detail.xmdl203   
   LET g_xmdl6_d[l_ac].xmdl030 = l_detail.xmdl030   LET g_xmdl6_d[l_ac].xmdl031 = l_detail.xmdl031   LET g_xmdl6_d[l_ac].xmdl032 = l_detail.xmdl032 
   LET g_xmdl6_d[l_ac].xmdl219 = l_detail.xmdl219
   
   IF g_xmdl_d[l_ac].xmdl009 IS NULL THEN
      LET g_xmdl_d[l_ac].xmdl009 = ' '
   END IF

   IF g_xmdl_d[l_ac].xmdl052 IS NULL THEN
      LET g_xmdl_d[l_ac].xmdl052 = ' '
   END IF
   
   IF g_xmdl_d[l_ac].xmdl013 IS NULL THEN
      LET g_xmdl_d[l_ac].xmdl013 = 'N'
   END IF
   
   LET g_xmdl2_d[l_ac].xmdl087 = 'N'   
   
   #因出通單有些資訊未紀錄,需重新自訂單取得
   IF p_source = 1 AND l_detail.xmdl003 IS NOT NULL THEN
      INITIALIZE l_detail.* TO NULL
      CALL adbt540_get_xmdd(l_detail.xmdl003,l_detail.xmdl004,l_detail.xmdl005,l_detail.xmdl006,'N') RETURNING l_detail.*
   END IF
   #訂單才有的資訊   
   LET g_xmdl_d[l_ac].xmdl041 = l_detail.xmdl041   LET g_xmdl_d[l_ac].xmdl050 = l_detail.xmdl050   LET g_xmdl_d[l_ac].xmdl051  = l_detail.xmdl051   
   
   LET g_xmdl2_d[l_ac].xmdl042 = l_detail.xmdl042   LET g_xmdl2_d[l_ac].xmdl043 = l_detail.xmdl043   LET g_xmdl2_d[l_ac].xmdl044 = l_detail.xmdl044
   LET g_xmdl2_d[l_ac].xmdl045 = l_detail.xmdl045   LET g_xmdl2_d[l_ac].xmdl046 = l_detail.xmdl046

   LET g_xmdl6_d[l_ac].xmdl213 = l_detail.xmdl213   LET g_xmdl6_d[l_ac].xmdl214 = l_detail.xmdl214   LET g_xmdl6_d[l_ac].xmdl215 = l_detail.xmdl215  
   LET g_xmdl6_d[l_ac].xmdl216 = l_detail.xmdl216   LET g_xmdl6_d[l_ac].xmdl217 = l_detail.xmdl217   LET g_xmdl6_d[l_ac].xmdl218 = l_detail.xmdl218
   LET g_xmdl6_d[l_ac].xmdlorga = l_detail.xmdlorga 
   
   #預設出貨包裝數量
   CALL adbt540_xmdl205_default(g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006,
                                g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl021,
                                g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl204,'Y')
      RETURNING g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl022,
                g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029,
                g_xmdl_d[l_ac].xmdl205

   #預設可出貨數量為0時,不往下處理
   IF g_xmdl_d[l_ac].xmdl018 = 0 THEN
      CALL g_xmdl_d.deleteElement(l_ac)
      CALL g_xmdl2_d.deleteElement(l_ac)
      CALL g_xmdl3_d.deleteElement(l_ac)
      CALL g_xmdl6_d.deleteElement(l_ac)
      CALL g_xmdl7_d.deleteElement(l_ac)
      
      LET g_xmdl_d[l_ac].xmdl001 = l_xmdl001_t 
      LET g_xmdl_d[l_ac].xmdl002 = l_xmdl002_t 
      LET g_xmdl_d[l_ac].xmdl003 = l_xmdl003_t 
      LET g_xmdl_d[l_ac].xmdl004 = l_xmdl004_t 
      LET g_xmdl_d[l_ac].xmdl005 = l_xmdl005_t 
      LET g_xmdl_d[l_ac].xmdl006 = l_xmdl006_t 
      
      LET r_success = FALSE
      RETURN r_success     
   END IF
   
   #折扣
   LET l_success = ''
   CALL s_adbt500_gen_rtic('2',g_xmdk_m.xmdkdocno)
      RETURNING l_success
   IF l_success THEN   
      LET l_success = ''
      CALL s_adbt540_cal_amount(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk017)
         RETURNING l_success
   END IF
   
   #參考欄位
   CALL adbt540_xmdl_ref()
   CALL adbt540_xmdl2_ref()
   CALL adbt540_xmdl3_ref()
   CALL adbt540_xmdl6_ref()
   CALL adbt540_xmdl7_ref()
   
   #備份
   LET g_xmdl_d_o.*  = g_xmdl_d[l_ac].* 
   LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].* 
   LET g_xmdl3_d_t.* = g_xmdl3_d[l_ac].*
   LET g_xmdl6_d_t.* = g_xmdl6_d[l_ac].* 
   LET g_xmdl7_d_t.* = g_xmdl7_d[l_ac].* 

   RETURN r_success    
END FUNCTION]]>
  </point>
  <point name="function.adbt540_deatil_default" order="16" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 出通單號帶值
# Usage..........: CALL adbt540_deatil_default(p_source,p_detail)
# Input parameter: p_source   來源,1.出通單,2.訂單
#                : p_detail   帶值資料
# Date & Author..: 2014/05/26 By Lori
################################################################################
PRIVATE FUNCTION adbt540_deatil_default(p_source,p_detail)
   DEFINE p_source    LIKE type_t.num5
   DEFINE p_detail    type_source_detail
   DEFINE l_detail    type_source_detail
   
   INITIALIZE l_detail.* TO NULL
   LET l_detail.* = p_detail.*
   
   LET g_xmdl_d[l_ac].xmdl002 = l_detail.xmdl002   LET g_xmdl_d[l_ac].xmdl003 = l_detail.xmdl003   LET g_xmdl_d[l_ac].xmdl004 = l_detail.xmdl004
   LET g_xmdl_d[l_ac].xmdl005 = l_detail.xmdl005   LET g_xmdl_d[l_ac].xmdl006 = l_detail.xmdl006   LET g_xmdl_d[l_ac].xmdl007 = l_detail.xmdl007 
   LET g_xmdl_d[l_ac].xmdl008 = l_detail.xmdl008   LET g_xmdl_d[l_ac].xmdl009 = l_detail.xmdl009   LET g_xmdl_d[l_ac].xmdl033 = l_detail.xmdl033
   LET g_xmdl_d[l_ac].xmdl204 = l_detail.xmdl204   LET g_xmdl_d[l_ac].xmdl017 = l_detail.xmdl017   LET g_xmdl_d[l_ac].xmdl019 = l_detail.xmdl019
   LET g_xmdl_d[l_ac].xmdl013 = l_detail.xmdl013   LET g_xmdl_d[l_ac].xmdl207 = l_detail.xmdl207   LET g_xmdl_d[l_ac].xmdl014 = l_detail.xmdl014
   LET g_xmdl_d[l_ac].xmdl015 = l_detail.xmdl015   LET g_xmdl_d[l_ac].xmdl016 = l_detail.xmdl016                                
                                                                                                                                
   LET g_xmdl_d[l_ac].xmdl010 = l_detail.xmdl010   LET g_xmdl_d[l_ac].xmdl011 = l_detail.xmdl011   LET g_xmdl_d[l_ac].xmdl034 = l_detail.xmdl012 
   LET g_xmdl_d[l_ac].xmdl021 = l_detail.xmdl021   LET g_xmdl_d[l_ac].xmdl023 = l_detail.xmdl023   LET g_xmdl_d[l_ac].xmdl034 = l_detail.xmdl034
   LET g_xmdl_d[l_ac].xmdl088 = l_detail.xmdl088   
   
   LET g_xmdl2_d[l_ac].xmdl208 = l_detail.xmdl208   LET g_xmdl2_d[l_ac].xmdl209 = l_detail.xmdl209   LET g_xmdl2_d[l_ac].xmdl210 = l_detail.xmdl210
   LET g_xmdl2_d[l_ac].xmdl025 = l_detail.xmdl025   LET g_xmdl2_d[l_ac].xmdl026 = l_detail.xmdl026   LET g_xmdl2_d[l_ac].xmdl211 = l_detail.xmdl211
   LET g_xmdl2_d[l_ac].xmdl024 = l_detail.xmdl024 
   
   LET g_xmdl6_d[l_ac].xmja002 = l_detail.xmja002   LET g_xmdl6_d[l_ac].xmdl212 = l_detail.xmdk207   LET g_xmdl6_d[l_ac].xmdl200 = l_detail.xmdl200   
   LET g_xmdl6_d[l_ac].xmdl201 = l_detail.xmdl201   LET g_xmdl6_d[l_ac].xmdl202 = l_detail.xmdl202   LET g_xmdl6_d[l_ac].xmdl203 = l_detail.xmdl203   
   LET g_xmdl6_d[l_ac].xmdl030 = l_detail.xmdl030   LET g_xmdl6_d[l_ac].xmdl031 = l_detail.xmdl031   LET g_xmdl6_d[l_ac].xmdl032 = l_detail.xmdl032 
   
   #因出通單有些資訊未紀錄,需重新自訂單取得
   IF p_source = 1 AND l_detail.xmdl003 IS NOT NULL THEN
      INITIALIZE l_detail.* TO NULL
      CALL adbt540_get_xmdd(l_detail.xmdl003,l_detail.xmdl004,l_detail.xmdl005,l_detail.xmdl006) RETURNING l_detail.*
   END IF
   #訂單才有的資訊   
   LET g_xmdl_d[l_ac].xmdl041 = l_detail.xmdl041   LET g_xmdl_d[l_ac].xmdl050 = l_detail.xmdl050   LET g_xmdl_d[l_ac].xmdl051  = l_detail.xmdl051   
   
   LET g_xmdl2_d[l_ac].xmdl042 = l_detail.xmdl042   LET g_xmdl2_d[l_ac].xmdl043 = l_detail.xmdl043   LET g_xmdl2_d[l_ac].xmdl044 = l_detail.xmdl044
   LET g_xmdl2_d[l_ac].xmdl045 = l_detail.xmdl045   LET g_xmdl2_d[l_ac].xmdl046 = l_detail.xmdl046

   LET g_xmdl6_d[l_ac].xmdl213 = l_detail.xmdl213   LET g_xmdl6_d[l_ac].xmdl214 = l_detail.xmdl214   LET g_xmdl6_d[l_ac].xmdl215 = l_detail.xmdl215  
   LET g_xmdl6_d[l_ac].xmdl216 = l_detail.xmdl216   LET g_xmdl6_d[l_ac].xmdl217 = l_detail.xmdl217   LET g_xmdl6_d[l_ac].xmdl218 = l_detail.xmdl218
   LET g_xmdl6_d[l_ac].xmdlorga = l_detail.xmdlorga 
   
   #預設出貨包裝數量
   CALL adbt540_xmdl205_default()
   
   CALL adbt540_xmdl_ref()
   CALL adbt540_xmdl2_ref()
   CALL adbt540_xmdl3_ref()
   CALL adbt540_xmdl6_ref()
   
   LET g_xmdl_d_o.* =  g_xmdl_d[l_ac].* 
   LET g_xmdl2_d_o.* =  g_xmdl2_d[l_ac].* 
   LET g_xmdl3_d_t.* =  g_xmdl3_d[l_ac].*
   LET g_xmdl6_d_t.* =  g_xmdl6_d[l_ac].*    
END FUNCTION]]>
  </point>
  <point name="function.adbt540_detail_count" order="16" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查單身是否有輸入出通單號
# Usage..........: CALL adbt540_detail_count()
# Return code....: r_notice_cnt   單身出通單數量
#                : r_order_cnt   單身訂單數量
# Date & Author..: 2014/06/06 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_detail_count()
   DEFINE r_notice_cnt   LIKE type_t.num5
   DEFINE r_order_cnt    LIKE type_t.num5
   
   LET r_notice_cnt = 0
   LET r_order_cnt  = 0
   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN         
      SELECT COUNT(xmdl001),COUNT(xmdl003) INTO r_notice_cnt,r_order_cnt
        FROM xmdl_t
       WHERE xmdlent = g_enterprise
         AND xmdldocno = g_xmdk_m.xmdkdocno
   END IF
   
   RETURN r_notice_cnt,r_order_cnt
   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_auto_ins_detail" order="17" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 自動產生單身
# Memo...........:
# Usage..........: CALL adbt540_auto_ins_detail()
#                     RETURNING r_success
# Return code....: r_success
# Date & Author..: 2014/08/26 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_auto_ins_detail()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_cnt         LIKE type_t.num5
   
   LET r_success = TRUE
   LET l_cnt = 0 
   
   SELECT COUNT(*) INTO l_cnt
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      
   IF g_xmdk_m.xmdk009 IS NULL OR g_xmdk_m.xmdk021 IS NULL THEN
      RETURN r_success
   END IF

   #自動產生的資料可能尚未顯示在畫面上, 故最好是畫面資料與DB資料都判斷為0者才詢問是否自動新增
   IF g_xmdl_d.getLength() = 0 AND l_cnt = 0 THEN                           
      CASE
         WHEN NOT cl_null(g_xmdk_m.xmdk005)           #自動帶入出通單單身
            IF cl_ask_confirm('adb-00316') THEN
               CALL adbt540_notice_detail_default() RETURNING l_success
               IF NOT l_success THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF   
            END IF
         WHEN NOT cl_null(g_xmdk_m.xmdk006)           #自動帶入訂單單身
            IF cl_ask_confirm('adb-00317') THEN
               CALL adbt540_order_detail_default() RETURNING l_success
               IF NOT l_success THEN
                  LET r_success = FALSE
                  RETURN r_success               
               END IF   
            END IF
      END CASE
   
      LET l_success = ''
      CALL s_adbt500_gen_rtic('2',g_xmdk_m.xmdkdocno)
         RETURNING l_success
      IF l_success THEN
         #重新計算整單的未稅、含稅總金額                  
         CALL s_adbt540_cal_amount(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk017) RETURNING l_success
         LET r_success = l_success
      END IF
   END IF
  
   CALL adbt540_b_fill()  
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_source_cnt" order="18" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查來源單據符合的資料筆數
# Memo...........: p_data傳入空值時,純依KEY計算來源單據的單身有幾筆資料
# Usage..........: CALL adbt540_source_cnt(p_source,p_data,p_xmdl001,p_xmdl002,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006)
#                  RETURNING r_cnt
# Input parameter: p_source   來源,1.出通單,2.訂單
#                : p_data     檢查項目,1.發貨組織,2.銷售組織,3.收貨客戶,4.收貨地址碼
#                : p_xmdl001  出通單單號
#                : p_xmdl002  出通單項次
#                : p_xmdl003  訂單單號
#                : p_xmdl004  訂單項次
#                : p_xmdl005  出通單時傳空值/訂單項序
#                : p_xmdl006  出通單時傳空值/訂單分批序
# Return code....: r_cnt      符合發貨組織的筆數
# Date & Author..: 2014/06/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_source_cnt(p_source,p_data,p_xmdl001,p_xmdl002,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006)
   DEFINE p_source  LIKE type_t.num5
   DEFINE p_data    LIKE type_t.num5
   DEFINE p_xmdl001 LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002 LIKE xmdl_t.xmdl002
   DEFINE p_xmdl003 LIKE xmdl_t.xmdl003
   DEFINE p_xmdl004 LIKE xmdl_t.xmdl004
   DEFINE p_xmdl005 LIKE xmdl_t.xmdl005
   DEFINE p_xmdl006 LIKE xmdl_t.xmdl006
   DEFINE r_cnt     LIKE type_t.num5
   DEFINE l_sql     STRING
   DEFINE l_cnt     LIKE type_t.num5
   
   LET r_cnt = 0 
   
   CASE p_source
      WHEN 1
         LET l_sql = "SELECT COUNT(*)  FROM xmdh_t ",
                     " WHERE xmdhent = ",g_enterprise," AND xmdhdocno = '",p_xmdl001,"' " 

         IF NOT cl_null(p_xmdl002) THEN
            LET l_sql = l_sql, " AND xmdhseq = ",p_xmdl002
         END IF  
         
         CASE p_data #根據檢查的資料為條件計算有無相符的資料
            WHEN 1   #1.發貨組織
               LET l_sql = l_sql, " AND xmdhunit = '",g_xmdk_m.xmdksite,"' "
            WHEN 2   #2.銷售組織
               LET l_sql = l_sql, " AND xmdhsite = '",g_xmdk_m.xmdk207,"' "
            WHEN 3   #3.收貨客戶
               LET l_sql = l_sql, " AND xmdh212 = '",g_xmdk_m.xmdk009,"' "
            WHEN 4   #4.收貨地址碼
               LET l_sql = l_sql, " AND xmdh213 = '",g_xmdk_m.xmdk021,"' "
            OTHERWISE   #依KEY計算符合出貨單單頭資料的來源單據單身有幾筆資料
                LET l_sql = l_sql," AND xmdhunit = '",g_xmdk_m.xmdksite,"' ",
                                  " AND xmdh212 = '",g_xmdk_m.xmdk009,"' ",
                                  " AND xmdh213 = '",g_xmdk_m.xmdk021,"' "
                IF g_xmdk_m.xmdk207 IS NOT NULL THEN
                   LET l_sql = l_sql," AND xmdhsite = '",g_xmdk_m.xmdk207,"' "
                END IF
                
                LET l_sql = l_sql," AND (xmdhdocno,xmdhseq) NOT IN (SELECT xmdl001,xmdl002 FROM xmdl_t ",
                                  "                                  WHERE xmdlent = ",g_enterprise,
                                  "                                    AND xmdldocno = '",g_xmdk_m.xmdkdocno,"') "   
               
         END CASE
   WHEN 2
         LET l_sql = "SELECT COUNT(*) FROM xmdd_t ",
                     " WHERE xmddent = ",g_enterprise," AND xmdddocno = '",p_xmdl003,"' "                     
         
         IF NOT cl_null(p_xmdl004) THEN
            LET l_sql = l_sql, " AND xmddseq = ",p_xmdl004
         END IF  
         
         IF NOT cl_null(p_xmdl005) THEN
            LET l_sql = l_sql, " AND xmddseq1 = ",p_xmdl005
         END IF  

         IF NOT cl_null(p_xmdl006) THEN
            LET l_sql = l_sql, " AND xmddseq2 = ",p_xmdl006
         END IF 
         
         CASE p_data
            WHEN 1   #1.發貨組織
               LET l_sql = l_sql, " AND xmddunit = '",g_xmdk_m.xmdksite,"' "
            WHEN 2   #2.銷售組織
               LET l_sql = l_sql, " AND xmddsite = '",g_xmdk_m.xmdk207,"' "
            WHEN 3   #3.收貨客戶
               LET l_sql = l_sql, " AND xmdd211 = '",g_xmdk_m.xmdk009,"' "
            WHEN 4   #4.收貨地址碼
               LET l_sql = l_sql, " AND xmdd208 = '",g_xmdk_m.xmdk021,"' "
            OTHERWISE   #依KEY計算符合出貨單單頭資料的來源單據單身有幾筆資料
                LET l_sql = l_sql," AND xmddunit = '",g_xmdk_m.xmdksite,"' ",
                                  " AND xmdd211 = '",g_xmdk_m.xmdk009,"' ",
                                  " AND xmdd208 = '",g_xmdk_m.xmdk021,"' "
                IF g_xmdk_m.xmdk207 IS NOT NULL THEN
                   LET l_sql = l_sql," AND xmddsite = '",g_xmdk_m.xmdk207,"' "
                END IF
               
               LET l_sql = l_sql," AND (xmdddocno,xmddseq,xmddseq1,xmddseq2) NOT IN (SELECT xmdl003,xmdl004,xmdl005,xmdl006 FROM xmdl_t ",
                                 "                                                    WHERE xmdlent = ",g_enterprise,
                                 "                                                     AND xmdldocno = '",g_xmdk_m.xmdkdocno,"') "



         END CASE
   END CASE
   
   PREPARE adbt540_source_cnt_sel FROM l_sql
   EXECUTE adbt540_source_cnt_sel INTO r_cnt  
   
   RETURN r_cnt
END FUNCTION]]>
  </point>
  <point name="function.adbt540_source_slip_chk" order="19" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 來源單據檢查
# Memo...........: 單身輸入出通單或訂單的KEY值欄位(單號/項次/項序/分批序)時檢查
# Usage..........: CALL adbt540_source_slip_chk(p_source,p_master,p_detail)
#                  RETURNING r_errno
# Input parameter: p_source   來源,1.出通,2.訂單
#                : p_master   來源單據單頭資料
#                : p_detail   來源單據單身資料
# Return code....: r_errno    錯誤訊息代碼
# Date & Author..: 2014/06/04 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_source_slip_chk(p_source,p_master,p_detail)
   DEFINE p_source    LIKE type_t.num5
   DEFINE p_master    type_source_master
   DEFINE p_detail    type_source_detail   
   DEFINE l_detail    type_source_detail    #若p_detail傳入資料不齊全,則重取資料  
   DEFINE r_errno     STRING
   DEFINE l_flag      LIKE type_t.chr1      #若單身有資料, 則以單身為主要比對; Y:單身有資料  
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002   LIKE xmdl_t.xmdl002
   DEFINE l_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE l_xmdl004   LIKE xmdl_t.xmdl004
   DEFINE l_xmdl005   LIKE xmdl_t.xmdl005
   DEFINE l_xmdl006   LIKE xmdl_t.xmdl006
   DEFINE l_ship_org  LIKE xmdk_t.xmdksite
   DEFINE l_sale_org  LIKE xmdl_t.xmdl207
   DEFINE l_ship_cus  LIKE xmdk_t.xmdk009
   DEFINE l_ship_adr  LIKE xmdk_t.xmdk021
   DEFINE l_sale_way  LIKE xmdl_t.xmdl216
   
   LET l_flag = NULL
   LET l_xmdl001 = p_detail.xmdl001
   LET l_xmdl002 = p_detail.xmdl002
   LET l_xmdl003 = p_detail.xmdl003
   LET l_xmdl004 = p_detail.xmdl004
   LET l_xmdl005 = p_detail.xmdl005
   LET l_xmdl006 = p_detail.xmdl006
   
   IF  ( p_detail.xmdl001 IS NOT NULL AND p_detail.xmdl002 IS NOT NULL)
    OR (p_detail.xmdl003 IS NOT NULL AND p_detail.xmdl004 IS NOT NULL 
        AND p_detail.xmdl005 IS NOT NULL AND p_detail.xmdl006 IS NOT NULL) THEN 
      LET l_flag = 'Y'
      LET l_ship_org = p_detail.xmdlsite
      LET l_sale_org = p_detail.xmdk207
      LET l_ship_cus = p_detail.xmdk009
      LET l_ship_adr = p_detail.xmdk021
      LET l_sale_way = p_detail.xmdl216  
      
      #IF   p_detail.xmdk009 IS NULL OR p_detail.xmdk021 IS NULL 
      #  OR p_detail.xmdl216 IS NULL OR p_detail.xmdlsite IS NULL 
      #  OR p_detail.xmdk207 IS NULL THEN
      #   CASE p_source 
      #      WHEN 1
      #         CALL adbt540_get_xmdh(l_xmdl001,l_xmdl002) RETURNING l_detail.*
      #      WHEN 2
      #         CALL adbt540_get_xmdd(l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) RETURNING l_detail.*                
      #   END CASE  
      #
      #   IF cl_null(l_ship_org) THEN      LET l_ship_org = l_detail.xmdlsite      END IF         
      #   IF cl_null(l_sale_org) THEN      LET l_sale_org = l_detail.xmdk207       END IF
      #   IF cl_null(l_ship_cus) THEN      LET l_ship_cus = l_detail.xmdk009       END IF
      #   IF cl_null(l_ship_adr) THEN      LET l_ship_adr = l_detail.xmdk021       END IF
      #   IF cl_null(l_sale_way) THEN      LET l_sale_way = l_detail.xmdl216       END IF
      #END IF
   ELSE
      LET l_flag = 'N'  
      LET l_ship_org = p_master.xmdksite
      LET l_sale_org = p_master.xmdk207
      LET l_ship_cus = p_master.xmdk009
      LET l_ship_adr = p_master.xmdk021
      LET l_sale_way = g_slip_xmdl216      
   END IF
     
   CASE   
      WHEN p_master.doc_stus <> 'Y'
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00140'
            WHEN 2   LET r_errno = 'adb-00128'
         END CASE
         DISPLAY "來源單據未確認"
      WHEN l_flag = 'N' AND NOT cl_null(l_ship_org) AND l_ship_org <> g_xmdk_m.xmdksite   #單頭發貨組織是否相符
         CASE p_source
            WHEN 1   LET r_errno = 'adb-00150'
            WHEN 2   LET r_errno = 'adb-00069'
         END CASE  
         DISPLAY "單頭發貨組織不相符"
      WHEN l_flag = 'N'                                                             #單身發貨組織是否至少有一筆相符
        AND adbt540_source_cnt(p_source,1,l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) = 0
         LET r_errno = 'adb-00103'
         DISPLAY "單身發貨組織沒有一筆相符"         
      WHEN l_flag = 'Y' AND NOT cl_null(l_ship_org) AND l_ship_org <> g_xmdk_m.xmdksite  #單身發貨組織是否相符
         CASE p_source
            WHEN 1   LET r_errno = 'adb-00150'
            WHEN 2   LET r_errno = 'adb-00069'
         END CASE  
         DISPLAY "單身發貨組織不相符"         
      WHEN p_master.xmdk002 <> g_xmdk_m.xmdk002                                     #出貨性質
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00141'
            WHEN 2   LET r_errno = 'adb-00061'   
         END CASE        
         DISPLAY "出貨性質不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk007) AND p_master.xmdk007 <> g_xmdk_m.xmdk007   #客戶編號
         CASE p_source 
            WHEN 1    LET r_errno = 'adb-00142'
            WHEN 2    LET r_errno = 'adb-00060'
         END CASE 
         DISPLAY "客戶編號不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk200) AND p_master.xmdk200 <> g_xmdk_m.xmdk200   #調貨經銷商編號
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00157'
            WHEN 2   LET r_errno = 'adb-00071'
         END CASE      
         DISPLAY "調貨經銷商編號不符"         
      WHEN NOT cl_null(g_xmdk_m.xmdk201) AND p_master.xmdk201 <> g_xmdk_m.xmdk201   #代送商編號
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00152'
            WHEN 2   LET r_errno = 'adb-00072'
         END CASE           
         DISPLAY "代送商編號不符"
      #WHEN NOT cl_null(g_xmdk_m.xmdk207)                                            #單身銷售組織是否相符 
      #  AND ((l_flag = 'Y' AND l_sale_org <> g_xmdk_m.xmdk207)
      #   OR  (l_flag = 'N' AND adbt540_source_cnt(p_source,2,l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) = 0 ))
      #   CASE p_source 
      #      WHEN 1   LET r_errno = 'adb-00155'
      #      WHEN 2   LET r_errno = 'adb-00159'
      #   END CASE 
      #   DISPLAY "銷售組織不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk030) AND p_master.xmdk030 <> g_xmdk_m.xmdk030   #銷貨渠道 
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00151'
            WHEN 2   LET r_errno = 'adb-00070'
         END CASE          
         DISPLAY "銷貨渠道不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk009)                                            #收貨客戶
        AND ((l_flag = 'Y' AND l_ship_cus <> g_xmdk_m.xmdk009)
         OR  (l_flag = 'N' AND adbt540_source_cnt(p_source,3,l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) = 0 ))
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00144'
            WHEN 2   LET r_errno = 'adb-00407'
         END CASE      
         DISPLAY "收貨客戶不符"         
      WHEN NOT cl_null(g_xmdk_m.xmdk021)                                            #送貨地址
        AND ((l_flag = 'Y' AND l_ship_adr <> g_xmdk_m.xmdk021)
         OR  (l_flag = 'N' AND  adbt540_source_cnt(p_source,4,l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006) = 0 ))
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00153'
            WHEN 2   LET r_errno = 'adb-00073'
         END CASE      
         DISPLAY "送貨地址不符"         
      WHEN NOT cl_null(g_xmdk_m.xmdk008) AND p_master.xmdk008 <> g_xmdk_m.xmdk008   #收款客戶
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00143'
            WHEN 2   LET r_errno = 'adb-00066'
         END CASE
         DISPLAY "收款客戶不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk202) AND p_master.xmdk202 <> g_xmdk_m.xmdk202   #發票客戶
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00154'
            WHEN 2   LET r_errno = 'adb-00074'
         END CASE 
         DISPLAY "發票客戶不符"
      WHEN NOT cl_null(g_xmdk_m.xmdk015) AND p_master.xmdk015 <> g_xmdk_m.xmdk015   #發票類型
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00149'
            WHEN 2   LET r_errno = 'adb-00068'
         END CASE
         DISPLAY "發票類型不符"          
      WHEN NOT cl_null(g_xmdk_m.xmdk010) AND p_master.xmdk010 <> g_xmdk_m.xmdk010   #收款條件
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00148'
            WHEN 2   LET r_errno = 'adb-00062'
         END CASE
         DISPLAY "收款條件不符"                 
      WHEN NOT cl_null(g_xmdk_m.xmdk011) AND p_master.xmdk011 <> g_xmdk_m.xmdk011   #交易條件
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00147'
            WHEN 2   LET r_errno = 'adb-00063'
         END CASE
         DISPLAY "交易條件不符"            
      WHEN NOT cl_null(g_xmdk_m.xmdk016) AND p_master.xmdk016 <> g_xmdk_m.xmdk016   #幣別
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00146'
            WHEN 2   LET r_errno = 'adb-00065'
         END CASE
         DISPLAY "幣別不符"        
      WHEN NOT cl_null(g_xmdk_m.xmdk012) AND p_master.xmdk012 <> g_xmdk_m.xmdk012   #稅別
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00145'
            WHEN 2   LET r_errno = 'adb-00064'
         END CASE
         DISPLAY "稅別不符"         
      WHEN NOT cl_null(g_xmdk_m.xmdk031) AND p_master.xmdk031 <> g_xmdk_m.xmdk031   #銷售分類
         CASE p_source 
            WHEN 1   LET r_errno = 'adb-00156'
            WHEN 2   LET r_errno = 'adb-00075'
         END CASE
         DISPLAY "銷售分類不符"           
      WHEN NOT cl_null(g_slip_xmdl216) AND l_sale_way <> g_slip_xmdl216       #經營方式
         LET r_errno = 'adb-00181' 
         DISPLAY "經營方式不符"
      #WHEN p_master.xmdk028 = 'Y' AND g_xmdk_m.xmdk028 = 'Y'  #包裝單製作
      #   LET r_errno = 'axm-00093'
      #WHEN p_master.xmdk029 = 'Y' AND g_xmdk_m.xmdk029 = 'Y'  #Invoice
      #   LET r_errno = 'axm-00094'          
      #WHEN NOT cl_null(g_xmdk_m.xmdk205) AND p_master.xmdk205 <> g_xmdk_m.xmdk205   #送貨站點編號
      #WHEN NOT cl_null(g_xmdk_m.xmdk206) AND p_master.xmdk206 <> g_xmdk_m.xmdk206   #運輸路線編號 

   END CASE

   RETURN r_errno
END FUNCTION]]>
  </point>
  <point name="function.adbt540_tax_ref" order="20" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 稅別说明
# Memo...........:
# Usage..........: CALL adbt540_tax_ref(p_tax_id)
#                  RETURNING r_tax_desc
# Input parameter: p_tax_id   稅別編號
# Return code....: r_tax_desc 稅別說明
# Date & Author..: 2014/05/23 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_tax_ref(p_tax_id)
   DEFINE p_tax_id       LIKE xmdk_t.xmdk012
   DEFINE r_tax_desc     LIKE type_t.chr80
   DEFINE l_tax_area     LIKE oodbl_t.oodbl001
   DEFINE l_success      LIKE type_t.num5
   
   LET r_tax_desc = NULL
   LET l_tax_area = NULL
   
   IF NOT cl_null(g_xmdk_m.xmdksite) THEN
      CALL s_tax_get_ooef019(g_xmdk_m.xmdksite)  RETURNING l_success,l_tax_area    #稅區編號   
      LET r_tax_desc = s_desc_get_tax_desc(l_tax_area,p_tax_id)
   END IF
   
   RETURN r_tax_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_location_ref" order="21" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_location_ref(p_transport,p_location)
   DEFINE p_transport           LIKE xmdk_t.xmdk022   #運輸方式
   DEFINE p_location            LIKE xmdk_t.xmdk023   #地點
   DEFINE r_display             LIKE type_t.chr10
   DEFINE l_oocq019             LIKE oocq_t.oocq019   #運輸方式

   LET r_display = ''
   LET l_oocq019 = ''

   IF cl_null(p_transport) OR
      cl_null(p_location) THEN
      RETURN r_display
   END IF

   SELECT oocq019 INTO l_oocq019
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '263'
      AND oocq002 = p_transport

   CASE
      WHEN l_oocq019 = '1' OR    #陸運
           l_oocq019 = '4'       #其他
          
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = p_location
         CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||g_enterprise||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET r_display = '', g_rtn_fields[1] , ''
         RETURN r_display
                    
      WHEN l_oocq019 = '2'     #海運
         LET r_display = s_desc_get_acc_desc('262',p_location)
         RETURN r_display                                
   
      WHEN l_oocq019 = '3'     #空運
         LET r_display = s_desc_get_acc_desc('276',p_location)
         RETURN r_display
           
   END CASE
   RETURN r_display
END FUNCTION]]>
  </point>
  <point name="function.adbt540_sale_channel_ref" order="22" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 銷售通路说明
# Usage..........: CALL adbt540_sale_channel_ref(p_channel_id)
#                  RETURNING r_channer_ref
# Input parameter: p_channel_id    銷售通路編號
# Return Code....: r_channer_ref   銷售通路說明
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_sale_channel_ref(p_channel_id)
   DEFINE p_channel_id  LIKE xmdk_t.xmdk030
   DEFINE r_channer_ref LIKE oocql_t.oocql004
   
   LET r_channer_ref = NULL   
   LET r_channer_ref = s_desc_get_acc_desc('275',p_channel_id)
   
   RETURN r_channer_ref
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk_ref" order="22" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單頭參考欄位說明
# Memo...........: 自出通/訂單帶值後呼叫
# Usage..........: CALL adbt540_xmdk_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk_ref()
   
   CALL adbt540_xmdk011_ref()  
   CALL adbt540_xmdk021_ref()
   CALL adbt540_xmdk022_ref()  
   CALL adbt540_xmdk031_ref()  
   CALL adbt540_xmdk033_ref()   
   CALL adbt540_xmdk034_ref()

   CALL adbt540_xmda026_ref()
   
   LET g_xmdk_m.xmdk007_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007)
   LET g_xmdk_m.xmdk008_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008)
   LET g_xmdk_m.xmdk009_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009)
   LET g_xmdk_m.xmdk010_desc = s_desc_get_ooib002_desc(g_xmdk_m.xmdk010)
    
   IF NOT cl_null(g_xmdk_m.xmdksite) THEN
      LET g_xmdk_m.xmdk012_desc = adbt540_tax_ref(g_xmdk_m.xmdk012)
      LET g_xmdk_m.xmdk015_desc = s_desc_get_invoice_type_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk015)
      LET g_xmdk_m.xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk039)
      LET g_xmdk_m.xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk040)
      
   END IF
   
   LET g_xmdk_m.xmdk016_desc = s_desc_get_currency_desc(g_xmdk_m.xmdk016)
   LET g_xmdk_m.xmdk018_desc = s_desc_get_xmah001_desc(g_xmdk_m.xmdk018)
   LET g_xmdk_m.xmdk019_desc = s_desc_ooid001_desc(g_xmdk_m.xmdk019)
   LET g_xmdk_m.xmdk020_desc = s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020)
   LET g_xmdk_m.xmdk023_desc = adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023)   
   LET g_xmdk_m.xmdk024_desc = adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024)
   LET g_xmdk_m.xmdk030_desc = s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030)

   LET g_xmdk_m.xmdk200_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk200)
   LET g_xmdk_m.xmdk201_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk201)
   LET g_xmdk_m.xmdk202_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202)
   LET g_xmdk_m.xmdk205_desc = s_desc_get_dbad001_desc(g_xmdk_m.xmdk205)
   LET g_xmdk_m.xmdk206_desc = s_desc_get_dbab001_desc(g_xmdk_m.xmdk206)
   LET g_xmdk_m.xmdk207_desc = s_desc_get_department_desc(g_xmdk_m.xmdk207)  
   
   DISPLAY BY NAME g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk009_desc,
                   g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk015_desc,
                   g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,   
                   g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024_desc,  
                   g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040_desc,
                   g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk202_desc,
                   g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk207_desc   
                                   
                                      
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdkdocno_chk" order="23" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單號校驗檢查
# Memo...........:
# Usage..........: CALL adbt540_xmdkdocno_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/10 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdkdocno_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5
   DEFINE l_slip      LIKE ooba_t.ooba001    #單別
   
   LET r_success = NULL
   LET l_flag = NULL
   LET l_slip = NULL
   
   #檢查單別
   IF NOT s_aooi200_chk_slip(g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,g_prog) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   ##檢核輸入的單據別是否可以被key人員對應的控制組使用,'2' 為銷售控制組類型            
   #CALL s_control_chk_doc('1',g_xmdk_m.xmdkdocno,'2',g_user,g_dept,'','') RETURNING r_success,l_flag 
   #IF r_success THEN
   #   IF NOT l_flag THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'axm-00015'   #輸入的單據別不可以被當前人員和部門對應的銷售控制組使用！
   #      LET g_errparam.extend = g_xmdk_m.xmdkdocno
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #
   #      RETURN r_success
   #   END IF
   #ELSE
   #   RETURN r_success
   #END IF 
   
   #取單別     
   LET r_success = NULL
   LET l_flag = NULL
   CALL adbt540_get_slip_info(g_xmdk_m.xmdkdocno) RETURNING r_success,l_slip
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmda026_default" order="24" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依帳款客戶帶預設值:帳款地址
# Usage..........: CALL adbt540_xmda026_default()
# Date & Author..: 2014/06/10 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmda026_default()
   DEFINE l_oofb022       LIKE oofb_t.oofb022  #送貨站點
   
   CALL s_adb_main_address('5',g_xmdk_m.xmdk008) 
      RETURNING g_xmdk_m.xmda026,l_oofb022
   
   DISPLAY BY NAME  g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmda026
   
   CALL adbt540_xmda026_ref()   
   
   #帶值備份
   LET g_xmdk_m_t.xmda026 = g_xmdk_m.xmda026
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmda026_ref" order="25" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 帳款地址说明,組合帳款地址
# Usage..........: CALL adbt540_xmda026_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmda026_ref()
  
   CALL s_adb_address_ref('5',g_xmdk_m.xmda026,g_xmdk_m.xmdk008)
      RETURNING g_xmdk_m.xmda026_desc,g_xmdk_m.xmda026_address
   DISPLAY BY NAME g_xmdk_m.xmda026_desc,g_xmdk_m.xmda026_address
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk007_default" order="26" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 客戶編號帶值
# Memo...........: 自動帶出客戶預設資料
# Usage..........: CALL adbt540_xmdk007_default()
# Date & Author..: 2014/06/09 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk007_default()
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_search        LIKE type_t.chr1
   DEFINE l_controlno     LIKE ooha_t.ooha001
   DEFINE l_xmdk       RECORD
      xmdk010             LIKE xmdk_t.xmdk010,
      xmdk011             LIKE xmdk_t.xmdk011,
      xmdk012             LIKE xmdk_t.xmdk012,
      xmdk015             LIKE xmdk_t.xmdk015,
      xmdk016             LIKE xmdk_t.xmdk016,
      xmdk018             LIKE xmdk_t.xmdk018,
      xmdk022             LIKE xmdk_t.xmdk022,
      xmdk023             LIKE xmdk_t.xmdk023,
      xmdk024             LIKE xmdk_t.xmdk024,
      xmdk030             LIKE xmdk_t.xmdk030,
      xmdk031             LIKE xmdk_t.xmdk031
                       END RECORD

   LET l_success = ''
   LET l_controlno = ''
   LET l_search = 'N'
   
   INITIALIZE l_xmdk.* TO NULL      
   
   ##控制組編號
   #CALL s_control_get_group('2',g_xmdk_m.xmdk003,g_xmdk_m.xmdk004) RETURNING l_success,l_controlno
         
   #判斷客戶是否有設置訂單控制組客戶預設條件(axmi110)，若有則抓取相關的預設條件      
   IF l_success THEN         
      SELECT xmae006,xmae020,xmae004,xmae022,xmae003,
             xmae021,xmae011,xmae012,xmae013,xmae008,
             xmae009
        INTO l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk015,l_xmdk.xmdk016,
             l_xmdk.xmdk018,l_xmdk.xmdk022,l_xmdk.xmdk023,l_xmdk.xmdk024,l_xmdk.xmdk030,
             l_xmdk.xmdk031
        FROM xmae_t
       WHERE xmaeent = g_enterprise
         AND xmae001 = g_xmdk_m.xmdk007
         AND xmae002 = l_controlno
         AND xmaestus = 'Y'
         
       IF SQLCA.sqlcode THEN
       ELSE
          LET l_search = 'Y'
       END IF
   END IF  
   
   IF l_search = 'N' THEN             #改抓客戶據點預設條件(axmm202)資料
      SELECT pmab087,pmab103,pmab084,pmab106,pmab083,
             pmab104,pmab090,pmab091,pmab092,pmab088,
             pmab089
        INTO l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk015,l_xmdk.xmdk016,
             l_xmdk.xmdk018,l_xmdk.xmdk022,l_xmdk.xmdk023,l_xmdk.xmdk024,l_xmdk.xmdk030,
             l_xmdk.xmdk031
        FROM pmab_t
       WHERE pmabent = g_enterprise            
         AND pmabsite = 'ALL'
         AND pmab001 = g_xmdk_m.xmdk007
   END IF
   
   LET g_xmdk_m.xmdk010 = l_xmdk.xmdk010   #收款條件
   LET g_xmdk_m.xmdk011 = l_xmdk.xmdk011   #交易條件
   LET g_xmdk_m.xmdk012 = l_xmdk.xmdk012   #稅別
   LET g_xmdk_m.xmdk015 = l_xmdk.xmdk015   #發票類型
   LET g_xmdk_m.xmdk016 = l_xmdk.xmdk016   #幣別
   LET g_xmdk_m.xmdk018 = l_xmdk.xmdk018   #取價方式
   LET g_xmdk_m.xmdk022 = l_xmdk.xmdk022   #運輸方式
   LET g_xmdk_m.xmdk023 = l_xmdk.xmdk023   #交運起點
   LET g_xmdk_m.xmdk024 = l_xmdk.xmdk024   #交運終點
   LET g_xmdk_m.xmdk030 = l_xmdk.xmdk030   #銷售渠道
   LET g_xmdk_m.xmdk031 = l_xmdk.xmdk031   #銷售分類
   
   DISPLAY BY NAME g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk012,g_xmdk_m.xmdk015,g_xmdk_m.xmdk016,
                   g_xmdk_m.xmdk018,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk030,
                   g_xmdk_m.xmdk031
                   
   LET g_xmdk_m.xmdk010_desc = s_desc_get_ooib002_desc(g_xmdk_m.xmdk010)
   LET g_xmdk_m.xmdk012_desc = adbt540_tax_ref(g_xmdk_m.xmdk012)
   LET g_xmdk_m.xmdk015_desc = s_desc_get_invoice_type_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk015)
   LET g_xmdk_m.xmdk016_desc = s_desc_get_currency_desc(g_xmdk_m.xmdk016)
   LET g_xmdk_m.xmdk018_desc = s_desc_get_xmah001_desc(g_xmdk_m.xmdk018)
   LET g_xmdk_m.xmdk023_desc = adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023)
   LET g_xmdk_m.xmdk024_desc = adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024)
   LET g_xmdk_m.xmdk030_desc = s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030)
   
   DISPLAY BY NAME g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk016_desc,
                   g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk030_desc                      
   
   CALL adbt540_xmdk011_ref()
   CALL adbt540_xmdk022_ref()
   CALL adbt540_xmdk031_ref()

   #帶出收款客戶
   LET g_xmdk_m.xmdk008 = s_adb_get_pmac002(g_xmdk_m.xmdk007,'1',g_xmdk_m.xmdkdocno)
   LET g_xmdk_m.xmdk008_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008)
   CALL adbt540_xmda026_default()   
   #帶出收貨客戶                    
   LET g_xmdk_m.xmdk009 = s_adb_get_pmac002(g_xmdk_m.xmdk007,'2',g_xmdk_m.xmdkdocno)
   LET g_xmdk_m.xmdk009_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009)
   DISPLAY BY NAME g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc 
   CALL adbt540_xmdk021_default()   
   #帶出發票客戶                    
   LET g_xmdk_m.xmdk202 = s_adb_get_pmac002(g_xmdk_m.xmdk007,'3',g_xmdk_m.xmdkdocno)
   LET g_xmdk_m.xmdk202_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202)
   DISPLAY BY NAME g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc               
   #取得稅別、單價含稅否
   IF NOT cl_null(g_xmdk_m.xmdk012) THEN
      CALL s_tax_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)
      RETURNING l_success,g_oodbl004,g_oodb005,g_oodb006,g_oodb011 
      
      LET g_xmdk_m.xmdk013 = g_oodb006
      LET g_xmdk_m.xmdk014 = g_oodb005
      DISPLAY BY NAME g_xmdk_m.xmdk013,g_xmdk_m.xmdk014
   END IF
   #帶出匯率
   LET g_xmdk_m.xmdk017 = s_adbt540_get_exchange_rate(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk016)     
   DISPLAY BY NAMe g_xmdk_m.xmdk017  
   
   #帶值備份
   LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008
   LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009
   LET g_xmdk_m_o.xmdk010 = g_xmdk_m.xmdk010   
   LET g_xmdk_m_o.xmdk011 = g_xmdk_m.xmdk011
   LET g_xmdk_m_o.xmdk012 = g_xmdk_m.xmdk012
   LET g_xmdk_m_o.xmdk013 = g_xmdk_m.xmdk013
   LET g_xmdk_m_o.xmdk014 = g_xmdk_m.xmdk014
   LET g_xmdk_m_o.xmdk015 = g_xmdk_m.xmdk015
   LET g_xmdk_m_o.xmdk016 = g_xmdk_m.xmdk016
   LET g_xmdk_m_o.xmdk017 = g_xmdk_m.xmdk017 
   LET g_xmdk_m_o.xmdk018 = g_xmdk_m.xmdk018
   LET g_xmdk_m_o.xmdk022 = g_xmdk_m.xmdk022
   LET g_xmdk_m_o.xmdk023 = g_xmdk_m.xmdk023
   LET g_xmdk_m_o.xmdk024 = g_xmdk_m.xmdk024
   LET g_xmdk_m_o.xmdk030 = g_xmdk_m.xmdk030
   LET g_xmdk_m_o.xmdk031 = g_xmdk_m.xmdk031   
   LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202
   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk007_chk" order="27" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 客戶編號校驗
# Usage..........: CALL adbt540_xmdk007_chk()
#                  RETURNING r_success
# Return code....: r_success   檢查結果
# Date & Author..: 2016/06/11 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk007_chk()
   DEFINE r_success  LIKE type_t.num5
   DEFINE l_flag     LIKE type_t.num5

   LET r_success = NULL
   LET l_flag = NULL
   
   INITIALIZE g_chkparam.* TO NULL               
   LET g_chkparam.arg1 = g_xmdk_m.xmdk007
   LET g_chkparam.arg2 = 'ALL'   
   IF NOT cl_chk_exist("v_pmaa001_3") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   ##檢查單據別是否設置限用的資料  
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk007,'','','','')
   #RETURNING r_success,l_flag
   #
   #IF NOT r_success OR NOT l_flag THEN
   #   RETURN r_success
   #END IF  
   
   ##判斷輸入的客戶編號是否在銷售控制組限制的供應商範圍內，若不在限制內則不允許跟此客戶訂購  
   #LET r_success = NULL
   #LET l_flag = NULL
   #
   #CALL s_control_chk_group('1','2',g_user,g_dept,g_xmdk_m.xmdk007,'','','','') RETURNING r_success,l_flag
   #IF NOT r_success THEN      #處理狀況
   #   RETURN r_success
   #ELSE
   #   IF NOT l_flag THEN      #是否存在
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'axm-00007'   #該供客戶不在當前人員和部門的銷售控制組限制的供客戶範圍內！
   #      LET g_errparam.extend = g_xmdk_m.xmdk007
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #
   #      LET r_success = FALSE
   #      RETURN r_success
   #   END IF
   #END IF 
   
   LET r_success = TRUE

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk008_chk" order="28" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 帳款客戶校驗
# Usage..........: CALL adbt540_xmdk008_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk008_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5
   
   LET r_success = NULL
   LET l_flag = NULL
   
   #INITIALIZE g_chkparam.* TO NULL
   #LET g_chkparam.arg1 = g_xmdk_m.xmdk007
   #LET g_chkparam.arg2 = g_xmdk_m.xmdk008
   #LET g_chkparam.arg3 = 'ALL'
   #IF NOT cl_chk_exist("v_pmac002") THEN
   IF NOT s_adb_chk_pmac002(1,g_xmdk_m.xmdk007,g_xmdk_m.xmdk008,'1') THEN  
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   ##檢查單據別是否設置限用的資料
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk008,'','','','')
   #RETURNING r_success,l_flag
   #
   #IF NOT r_success OR NOT l_flag THEN
   #   RETURN r_success
   #END IF
   
   LET r_success = TRUE
   
   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk009_chk" order="29" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 送貨客戶檢查
# Memo...........:
# Usage..........: CALL adbt540_xmdk009_chk()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success
# Date & Author..: 2014/06/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk009_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5   
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_err       STRING
   
   LET r_success = TRUE
   LET l_flag = NULL
   LET l_cnt = 0

   #INITIALIZE g_chkparam.* TO NULL
   #LET g_chkparam.arg1 = g_xmdk_m.xmdk007
   #LET g_chkparam.arg2 = g_xmdk_m.xmdk009
   #LET g_chkparam.arg3 = 'ALL'
   #IF NOT cl_chk_exist("v_pmac002_2") THEN
   IF NOT s_adb_chk_pmac002(1,g_xmdk_m.xmdk007,g_xmdk_m.xmdk009,'2') THEN
      LET r_success = FALSE                 
      RETURN r_success 
   END IF
                   
   ##檢核輸入的收貨客戶是否在單據別限制範圍內，若不在限制內則不允許輸入此客戶編號
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk009,'','','','') RETURNING r_success,l_flag
   #IF NOT r_success OR NOT l_flag THEN      #處理狀況
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = 'apm-00239'
   #   LET g_errparam.extend = g_xmdk_m.xmdk009
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   LET r_success = FALSE                 
   #   RETURN r_success 
   #END IF
   
   #若有出通單號或訂單單號時,檢查送貨客戶是否存在於來源單據中
   LET l_err = ''       
   CASE 
      WHEN NOT cl_null(g_xmdk_m.xmdk005)   #出通單
         SELECT COUNT(*) INTO l_cnt
           FROM xmdh_t 
          WHERE xmdhent = g_enterprise
            AND xmdhdocno = g_xmdk_m.xmdk005
            AND xmdh212 = g_xmdk_m.xmdk009
         IF l_cnt = 0 THEN   
            LET l_err = 'adb-00170'   
         END IF   
      WHEN NOT cl_null(g_xmdk_m.xmdk006)   #訂單
         SELECT COUNT(*) INTO l_cnt
           FROM xmdd_t 
          WHERE xmddent = g_enterprise
            AND xmdddocno = g_xmdk_m.xmdk006
            AND xmdd211 = g_xmdk_m.xmdk009
         IF l_cnt = 0 THEN
            LET l_err = 'adb-00290'   
         END IF   
   END CASE
   
   IF NOT cl_null(l_err) THEN
      LET r_success = FALSE
      
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_err
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()      
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk010_chk" order="30" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 收款條件校驗
# Usage..........: CALL adbt540_xmdk010_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/09 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk010_chk()
   DEFINE r_success   LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF cl_null(g_xmdk_m.xmdk007) THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00145'   #請先輸入客戶編號！
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   IF NOT cl_null(g_xmdk_m.xmdk010) THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdk_m.xmdk007
      LET g_chkparam.arg2 = g_xmdk_m.xmdk010               
                  
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_pmad002_2") THEN
         LET r_success = FALSE         
      END IF
   END IF
   
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk011_ref" order="31" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 交易條件说明
# Usage..........: CALL adbt540_xmdk011_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk011_ref()
   LET g_xmdk_m.xmdk011_desc = s_desc_get_acc_desc('238',g_xmdk_m.xmdk011)
   DISPLAY BY NAME g_xmdk_m.xmdk011_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk021_default" order="32" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依送貨客戶帶預設值：送貨地址,站點,路線
# Usage..........: CALL adbt540_xmdk021_default()
# Date & Author..: 2014/06/10 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk021_default()
   #帶出送貨地點,站點,路線
   CALL s_adb_address_default('3',g_xmdk_m.xmdk009)
      RETURNING g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206
   
   #DISPLAY "adbt540_xmdk021_default..."
   
   CALL adbt540_xmdk021_ref()
   
   LET g_xmdk_m.xmdk205_desc = s_desc_get_dbad001_desc(g_xmdk_m.xmdk205)
   LET g_xmdk_m.xmdk206_desc = s_desc_get_dbab001_desc(g_xmdk_m.xmdk206) 
   
   DISPLAY BY NAME g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,
                   g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,
                   g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc

   LET g_xmdk_m_o.xmdk021 = g_xmdk_m.xmdk021
   LET g_xmdk_m_o.xmdk205 = g_xmdk_m.xmdk205
   LET g_xmdk_m_o.xmdk206 = g_xmdk_m.xmdk206
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk021_ref" order="33" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 送貨地址说明,組合送貨地址
# Usage..........: CALL adbt540_xmdk021_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk021_ref()
   CALL s_adb_address_ref('3',g_xmdk_m.xmdk021,g_xmdk_m.xmdk009)
      RETURNING g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address
      
   DISPLAY BY NAME g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk022_ref" order="34" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 運輸方式说明
# Usage..........: CALL adbt540_xmdk022_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk022_ref()
   LET g_xmdk_m.xmdk022_desc = s_desc_get_acc_desc('263',g_xmdk_m.xmdk022)
   DISPLAY BY NAME g_xmdk_m.xmdk022_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk031_ref" order="35" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 銷售分類说明
# Usage..........: CALL adbt540_xmdk031_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk031_ref()
   LET g_xmdk_m.xmdk031_desc = s_desc_get_acc_desc('295',g_xmdk_m.xmdk031)
   DISPLAY BY NAME g_xmdk_m.xmdk031_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk033_ref" order="36" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 額外品名規格说明
# Usage..........: CALL adbt540_xmdk033_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk033_ref()
   LET g_xmdk_m.xmdk033_desc = s_desc_get_acc_desc('209',g_xmdk_m.xmdk033)
   DISPLAY BY NAME g_xmdk_m.xmdk033_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk034_ref" order="37" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 留置原因说明
# Usage..........: CALL adbt540_xmdk034_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk034_ref()
   LET g_xmdk_m.xmdk034_desc = s_desc_get_acc_desc('297',g_xmdk_m.xmdk034)
   DISPLAY BY NAME g_xmdk_m.xmdk034_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk038_ref" order="38" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 運輸狀態说明
# Usage..........: CALL adbt540_xmdk038_ref()
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdk038_ref()
   LET g_xmdk_m.xmdk038_desc = s_desc_get_acc_desc(299,g_xmdk_m.xmdk038)
   DISPLAY BY NAME g_xmdk_m.xmdk038_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk200_chk" order="39" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 經銷商校驗
# Usage..........: CALL adbt540_xmdk200_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk200_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5
   
   LET r_success = TRUE
   LET l_flag = NULL
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmdk_m.xmdk200
   IF NOT cl_chk_exist("v_pmaa001_16") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   ##檢核輸入的調貨經銷商是否在據別限制範圍內
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk200,'','','','') RETURNING r_success,l_flag    
   #IF NOT r_success OR NOT l_flag THEN      #處理狀況
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = 'apm-00239'
   #   LET g_errparam.extend = g_xmdk_m.xmdk200
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   RETURN r_success
   #END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk201_chk" order="40" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 代送商校驗
# Memo...........:
# Usage..........: CALL adbt540_xmdk201_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk201_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5   

   LET r_success = NULL
   LET l_flag = NULL
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_xmdk_m.xmdk201
   IF NOT cl_chk_exist("v_pmaa001_1") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   ##檢核輸入的代送商是否在單據別限制範圍內，若不在限制內則不允許輸入此客戶編號
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk201,'','','','') RETURNING r_success,l_flag
   #IF NOT r_success OR NOT l_flag THEN      #處理狀況
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = 'apm-00239'
   #   LET g_errparam.extend = g_xmdk_m.xmdk201
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   LET r_success = FALSE
   #   RETURN r_success
   #END IF
 
   LET r_success = TRUE
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdk202_chk" order="41" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 發票客戶校驗
# Usage..........: CALL s_xmdk202_chk()
#                  RETURNING r_success
# Return code....: r_success   校驗結果
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdk202_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.num5
   
   LET r_success = NULL
   LET l_flag = NULL
   
   #INITIALIZE g_chkparam.* TO NULL
   #LET g_chkparam.arg1 = g_xmdk_m.xmdk007
   #LET g_chkparam.arg2 = g_xmdk_m.xmdk202
   #IF NOT cl_chk_exist("v_pmac002_5") THEN
   IF NOT s_adb_chk_pmac002(1,g_xmdk_m.xmdk007,g_xmdk_m.xmdk202,'3') THEN
      LET r_success = FALSE   
      RETURN r_success
   END IF
   
   ##檢核輸入的發票客戶是否在單據別限制範圍內，若不在限制內則不允許輸入此客戶編號
   #CALL s_control_chk_doc('3',g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk202,'','','','') RETURNING r_success,l_flag
   #IF NOT r_success OR NOT l_flag THEN      #處理狀況
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = 'apm-00239'
   #   LET g_errparam.extend = g_xmdk_m.xmdk202
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   LET r_success = FALSE   
   #   RETURN r_success
   #END IF 
   
   LET r_success = TRUE   
   
   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl_ref" order="42" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：出貨明細
# Usage..........: CALL adbt540_xmd1_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl_ref()
   CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
   DISPLAY BY NAME g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
   
   LET g_xmdl_d[l_ac].xmdl017_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017)
   LET g_xmdl_d[l_ac].xmdl019_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019)
   LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
   LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
   LET g_xmdl_d[l_ac].xmdl050_desc = s_desc_get_acc_desc(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050)
   LET g_xmdl_d[l_ac].xmdl204_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl204)
   LET g_xmdl_d[l_ac].xmdl222_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl222)
   LET g_xmdl_d[l_ac].xmdl223_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl223)
   LET g_xmdl_d[l_ac].xmdl224_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl224)
   LET g_xmdl_d[l_ac].xmdl225_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl225)
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl2_ref" order="43" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：價格資訊
# Usage..........: CALL adbt540_xmdl2_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl2_ref()
   
   LET g_xmdl2_d[l_ac].xmdlseq  = g_xmdl_d[l_ac].xmdlseq
   LET g_xmdl2_d[l_ac].xmdl0071 = g_xmdl_d[l_ac].xmdl007
   LET g_xmdl2_d[l_ac].xmdl0081 = g_xmdl_d[l_ac].xmdl008
   LET g_xmdl2_d[l_ac].xmdl0091 = g_xmdl_d[l_ac].xmdl009
   LET g_xmdl2_d[l_ac].xmdl2041 = g_xmdl_d[l_ac].xmdl204
   LET g_xmdl2_d[l_ac].xmdl2051 = g_xmdl_d[l_ac].xmdl205
   LET g_xmdl2_d[l_ac].xmdl0171 = g_xmdl_d[l_ac].xmdl017
   LET g_xmdl2_d[l_ac].xmdl0181 = g_xmdl_d[l_ac].xmdl018
   LET g_xmdl2_d[l_ac].xmdl0211 = g_xmdl_d[l_ac].xmdl021
   LET g_xmdl2_d[l_ac].xmdl0221 = g_xmdl_d[l_ac].xmdl022
   
   CALL s_desc_get_item_desc(g_xmdl2_d[l_ac].xmdl0081) 
      RETURNING g_xmdl2_d[l_ac].xmdl0081_desc,g_xmdl2_d[l_ac].xmdl0081_desc1
   
   LET g_xmdl2_d[l_ac].xmdl2041_desc = s_desc_get_unit_desc(g_xmdl2_d[l_ac].xmdl2041)
   LET g_xmdl2_d[l_ac].xmdl0171_desc = s_desc_get_unit_desc(g_xmdl2_d[l_ac].xmdl0171)
   LET g_xmdl2_d[l_ac].xmdl0211_desc = s_desc_get_unit_desc(g_xmdl2_d[l_ac].xmdl0211)
   
   LET g_xmdl2_d[l_ac].xmdl025_desc = adbt540_tax_ref(g_xmdl2_d[l_ac].xmdl025) 
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl3_ref" order="44" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：多庫儲批資訊
# Usage..........: CALL adbt540_xmdl3_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl3_ref()
   
   CALL s_desc_get_item_desc(g_xmdl3_d[l_ac].xmdm001)
      RETURNING g_xmdl3_d[l_ac].xmdm001_desc,g_xmdl3_d[l_ac].xmdm001_desc1 
   
   LET g_xmdl3_d[l_ac].xmdm005_desc = s_desc_get_stock_desc(g_xmdl3_d[l_ac].xmdmsite,g_xmdl3_d[l_ac].xmdm005)
   LET g_xmdl3_d[l_ac].xmdm006_desc = s_desc_get_locator_desc(g_xmdl3_d[l_ac].xmdmsite,g_xmdl3_d[l_ac].xmdm005,g_xmdl3_d[l_ac].xmdm006)
   LET g_xmdl3_d[l_ac].xmdm008_desc = s_desc_get_unit_desc(g_xmdl3_d[l_ac].xmdm008)
   LET g_xmdl3_d[l_ac].xmdm010_desc = s_desc_get_unit_desc(g_xmdl3_d[l_ac].xmdm010)
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl4_ref" order="45" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：交易稅別明細
# Usage..........: CALL adbt540_xmdl4_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl4_ref()
   DEFINE l_xmdl226   LIKE xmdl_t.xmdl226
   DEFINE l_xmdl008   LIKE xmdl_t.xmdl008
   
   LET l_xmdl226 = ''
   LET l_xmdl008 = ''
   
   CALL adbt540_get_xmdl008_and_xmdl226(g_xmdl4_d[l_ac].xrcdseq) RETURNING l_xmdl226,l_xmdl008
   
   LET g_xmdl4_d[l_ac].xmdl2262 = l_xmdl226
   LET g_xmdl4_d[l_ac].xmdl0082 = l_xmdl008

   CALL s_desc_get_item_desc(g_xmdl4_d[l_ac].xmdl0082) 
      RETURNING g_xmdl4_d[l_ac].xmdl0082_desc,g_xmdl4_d[l_ac].xmdl0082_desc_desc

   LET g_xmdl4_d[l_ac].xrcd002_desc = adbt540_tax_ref(g_xmdl4_d[l_ac].xrcd002)
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl5_ref" order="46" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：收款明細
# Usage..........: CALL adbt540_xmdl5_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl5_ref()
   DEFINE l_xmdl226   LIKE xmdl_t.xmdl226
   DEFINE l_xmdl008   LIKE xmdl_t.xmdl008
   
   LET l_xmdl226 = ''
   LET l_xmdl008 = ''
   
   CALL adbt540_get_xmdl008_and_xmdl226(g_xmdl5_d[l_ac].rtieseq) RETURNING  l_xmdl226,l_xmdl008
   
   LET g_xmdl5_d[l_ac].xmdl2263 = l_xmdl226
   LET g_xmdl5_d[l_ac].xmdl0083 = l_xmdl008
  
   CALL s_desc_get_item_desc(g_xmdl5_d[l_ac].xmdl0083) 
       RETURNING g_xmdl5_d[l_ac].xmdl0083_desc,g_xmdl5_d[l_ac].xmdl0083_desc_desc
   DISPLAY BY NAME g_xmdl5_d[l_ac].xmdl0083_desc,g_xmdl5_d[l_ac].xmdl0083_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl6_ref" order="47" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：其他資訊
# Usage..........: CALL adbt540_xmdl6_ref()
# Date & Author..: 2014/05/30 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl6_ref()
   
   LET g_xmdl6_d[l_ac].xmdlseq  = g_xmdl_d[l_ac].xmdlseq
   LET g_xmdl6_d[l_ac].xmdl0074 = g_xmdl_d[l_ac].xmdl007
   LET g_xmdl6_d[l_ac].xmdl0084 = g_xmdl_d[l_ac].xmdl008
   LET g_xmdl6_d[l_ac].xmdl0094 = g_xmdl_d[l_ac].xmdl009 
   LET g_xmdl6_d[l_ac].xmdl2264 = g_xmdl_d[l_ac].xmdl226
   
   CALL s_desc_get_item_desc(g_xmdl6_d[l_ac].xmdl0084) 
      RETURNING g_xmdl6_d[l_ac].xmdl0084_desc,g_xmdl6_d[l_ac].xmdl0084_desc_desc
   DISPLAY BY NAME g_xmdl6_d[l_ac].xmdl0084_desc,g_xmdl6_d[l_ac].xmdl0084_desc_desc
   
   LET g_xmdl6_d[l_ac].xmdl212_desc = s_desc_get_department_desc(g_xmdl6_d[l_ac].xmdl212)   
   LET g_xmdl6_d[l_ac].xmdl200_desc = s_desc_get_oojdl003_desc(g_xmdl6_d[l_ac].xmdl200)
   LET g_xmdl6_d[l_ac].xmdl201_desc = s_desc_get_prod_group_desc(g_xmdl6_d[l_ac].xmdl201)
   LET g_xmdl6_d[l_ac].xmdl202_desc = s_desc_get_sales_range_desc(g_xmdl6_d[l_ac].xmdl202)
   LET g_xmdl6_d[l_ac].xmdl203_desc = s_desc_get_department_desc(g_xmdl6_d[l_ac].xmdl203)   
   LET g_xmdl6_d[l_ac].xmdl213_desc = s_desc_get_person_desc(g_xmdl6_d[l_ac].xmdl213)
   LET g_xmdl6_d[l_ac].xmdl214_desc = s_desc_get_department_desc(g_xmdl6_d[l_ac].xmdl214)
   LET g_xmdl6_d[l_ac].xmdl217_desc = adbt540_xmdl217_ref(g_xmdl6_d[l_ac].xmdl217)
   LET g_xmdl6_d[l_ac].xmdlorga_desc = s_desc_get_department_desc(g_xmdl6_d[l_ac].xmdlorga)   

END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl7_ref" order="48" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單身參考欄位說明
# Memo...........: 頁籤：折扣明細
# Usage..........: CALL adbt540_xmdl7_ref()
# Date & Author..: 2014/10/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl7_ref()
   DEFINE l_xmdl226   LIKE xmdl_t.xmdl226
   DEFINE l_xmdl008   LIKE xmdl_t.xmdl008
   
   LET l_xmdl226 = ''
   LET l_xmdl008 = ''
   
   CALL adbt540_get_xmdl008_and_xmdl226(g_xmdl7_d[l_ac].rticseq) RETURNING  l_xmdl226,l_xmdl008
   
   LET g_xmdl7_d[l_ac].xmdl2265 = l_xmdl226
   LET g_xmdl7_d[l_ac].xmdl0085 = l_xmdl008
  
   CALL s_desc_get_item_desc(g_xmdl7_d[l_ac].xmdl0085) 
       RETURNING g_xmdl7_d[l_ac].xmdl0085_desc,g_xmdl7_d[l_ac].xmdl0085_desc_1
   DISPLAY BY NAME g_xmdl7_d[l_ac].xmdl0085_desc,g_xmdl7_d[l_ac].xmdl0085_desc_1
   
   SELECT xmdl021,xmdl022,xmdl208,xmdl209,xmdl210,xmdl028
     INTO g_xmdl7_d[l_ac].xmdl0215,
          g_xmdl7_d[l_ac].xmdl0225,
          g_xmdl7_d[l_ac].xmdl2085,
          g_xmdl7_d[l_ac].xmdl2095,
          g_xmdl7_d[l_ac].xmdl2105,
          g_xmdl7_d[l_ac].xmdl0285
     FROM xmdl_t     
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      AND xmdlseq = g_xmdl7_d[l_ac].rticseq
      
   LET g_xmdl7_d[l_ac].xmdl0215_desc = s_desc_get_unit_desc(g_xmdl7_d[l_ac].xmdl0215)   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl007_chk" order="49" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 子件特性檢查
# Usage..........: adbt540_xmdl007_chk()
#                  RETURNING r_success
# Return code....: r_success   判斷結果
# Date & Author..: 2014/05/28 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl007_chk()
   DEFINE r_success   LIKE type_t.num5
   
   LET r_success = NULL
   LET g_errno = NULL
  
   #若無輸入出通單或訂單時，子件特性只可為9.樣品
   IF (cl_null(g_xmdl_d[l_ac].xmdl001) OR cl_null(g_xmdl_d[l_ac].xmdl003))
      AND g_xmdl_d[l_ac].xmdl007 <> '9' THEN
      LET g_errno = 'axm-00141'   #單身沒有輸入來源的出通單或訂單資料時，子件特性只能選擇'9:樣品'
      LET r_success = FALSE
   ELSE
      LET r_success = TRUE   
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl008_chk" order="50" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 料件編號檢查
# Usage..........: CALL adbt540_get_imaa005(p_xmdl008)
# Input parameter: p_xmdl008   料號
# Return code....: r_success   檢查結果
# Date & Author..: 2014/0610 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl008_chk(p_xmdl008)
   DEFINE p_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE r_success              LIKE type_t.num5
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_xmdl008              LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009              LIKE xmdl_t.xmdl009
    
   LET r_success = TRUE
   
   IF NOT cl_null(p_xmdl008) THEN                   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl008                 
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_imaa001") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
          
      ##檢核輸入的料件的生命週期是否在單據別限制範圍內
      #CALL s_control_chk_doc('4',g_xmdk_m.xmdkdocno,p_xmdl008,'','','','')
      #RETURNING l_success,l_flag
      #         
      #IF NOT l_success OR NOT l_flag THEN
      #   LET r_success = FALSE
      #   RETURN r_success
      #END IF                
               
      ##檢核輸入的料件的產品分類是否在單據別限制範圍內
      #CALL s_control_chk_doc('5',g_xmdk_m.xmdkdocno,p_xmdl008,'','','','')
      #RETURNING l_success,l_flag
      #         
      #IF NOT l_success OR NOT l_flag THEN
      #   LET r_success = FALSE
      #   RETURN r_success
      #END IF                 
      
      IF (NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002)) OR
         (NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl004)
          AND cl_null(g_xmdl_d[l_ac].xmdl005) AND NOT cl_null(g_xmdl_d[l_ac].xmdl006)) THEN
         
         #找出原出通單or原訂單的料號,產品特徵
         LET l_xmdl008 = ''
         LET l_xmdl009 = ''
         IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
            SELECT xmdh006,xmdh007 INTO l_xmdl008,l_xmdl009
              FROM xmdh_t
             WHERE xmdhent = g_enterprise
               AND xmdhdocno = g_xmdl_d[l_ac].xmdl001
               AND xmdhseq = g_xmdl_d[l_ac].xmdl002
         ELSE
            SELECT xmdd001,xmdd002 INTO l_xmdl008,l_xmdl009
              FROM xmdd_t
             WHERE xmddent = g_enterprise
               AND xmdddocno = g_xmdl_d[l_ac].xmdl003
               AND xmddseq = g_xmdl_d[l_ac].xmdl004
               AND xmddseq1 = g_xmdl_d[l_ac].xmdl005
               AND xmddseq2 = g_xmdl_d[l_ac].xmdl006    
         END IF
         #替代料號檢查
         IF l_xmdl008 <> g_xmdl_d[l_ac].xmdl008 THEN
            #s_pmaq_chk_replacement(供應商編號,料件編號,替代編號,替代類別,產品特徵,可替代產品特徵)
            IF NOT s_pmaq_chk_replacement(g_xmdk_m.xmdk007,l_xmdl008,g_xmdl_d[l_ac].xmdl008,'3',l_xmdl009,g_xmdl_d[l_ac].xmdl009) THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
      END IF
   END IF 
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl013_chk" order="51" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 可多庫儲批否檢查
# Usage..........: CALL adbt540_xmdl013_chk()
#                  RETURNING r_success
# Return code....: r_success   檢查結果
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl013_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_source    LIKE type_t.num5
   DEFINE l_store_id  LIKE xmdc_t.xmdc028   #倉庫
   
   LET r_success = TRUE
   LET l_source = NULL
   LET l_store_id = NULL
   LET g_errno = NULL

   LET l_source = s_adbt540_get_slip_source(g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl003)
   
   #若出貨單來源為出通/訂單時，若來源已經有指定出貨的庫儲批時，則出貨單就不能再勾選多庫儲批出貨     
   CASE l_source
      WHEN 1   
         SELECT xmdh012 INTO l_store_id
          FROM xmdh_t
         WHERE xmdhent = g_enterprise
           AND xmdhdocno = g_xmdl_d[g_detail_idx].xmdl001
           AND xmdhseq  = g_xmdl_d[g_detail_idx].xmdl002 
         
         LET g_errno = 'adb-00182'    
      WHEN 2
         SELECT xmdc028 INTO l_store_id
          FROM xmdc_t
         WHERE xmdcent = g_enterprise
           AND xmdcdocno = g_xmdl_d[g_detail_idx].xmdl003
           AND xmdcseq  = g_xmdl_d[g_detail_idx].xmdl004  
           AND xmdcseq1 = g_xmdl_d[g_detail_idx].xmdl005           
           AND xmdcseq2 = g_xmdl_d[g_detail_idx].xmdl006  
         
         LET g_errno = 'adb-00181'          
   END CASE
   
   IF NOT cl_null(l_store_id) THEN
      LET r_success = FALSE      
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl014_chk" order="52" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 庫位檢查
# Usage..........: adbt540_xmdl014_chk()
#                  RETURNING r_success
# Return code....: r_success   判斷結果
# Date & Author..: 2014/05/28 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl014_chk()
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl014)THEN  
      IF cl_null(g_xmdl_d[l_ac].xmdl008) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00123'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         #料件編號不可為空
         RETURN FALSE
      END IF
   
      IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00126'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         #庫位不可為空
         RETURN FALSE
      END IF   

      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdk_m.xmdksite
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl008
      IF g_xmdl_d[l_ac].xmdl009 IS NULL THEN
         LET g_chkparam.arg3 = ' '
      ELSE   
         LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl009
      END IF   
      LET g_chkparam.arg4 = g_xmdl_d[l_ac].xmdl014
                  
      #呼叫檢查存在的library
      IF NOT cl_chk_exist("v_inag004_1") AND adbt540_get_inaa014(p_inaa001) = 'N' THEN
         RETURN FALSE
      END IF
      
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl015_chk" order="52" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_xmdl015_chk()
   
   #料件編號不可為空
   IF cl_null(g_xmdl_d[l_ac].xmdl008) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00123'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()           
      RETURN FALSE
   END IF
   
   IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00126'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF  
   
   #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
   INITIALIZE g_chkparam.* TO NULL
            
   #設定g_chkparam.*的參數
   LET g_chkparam.arg1 = g_xmdk_m.xmdksite
   LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl014
   LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl015
               
   #呼叫檢查存在並帶值的library
   IF NOT cl_chk_exist("v_inab002") THEN
      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl016_chk" order="53" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_xmdl016_chk()
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl016) THEN  
      IF cl_null(g_xmdl_d[l_ac].xmdl008) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00123'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
   #料件編號不可為空
         RETURN FALSE
      END IF

      IF cl_null(g_xmdl_d[l_ac].xmdl014) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00126'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF     
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
               
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xmdk_m.xmdksite
      LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl008
      LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl009
      LET g_chkparam.arg4 = g_xmdl_d[l_ac].xmdl014
      LET g_chkparam.arg5 = g_xmdl_d[l_ac].xmdl015
      LET g_chkparam.arg6 = g_xmdl_d[l_ac].xmdl016
                   
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_inag006_1") THEN
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl018_chk_and_val" order="54" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 出貨數量校驗帶值
# Memo...........: 依出貨包裝輛換算成出貨數量,檢查是否有超出可出貨量
# Usage..........: CALL adbt540_xmdl018_chk_and_val()
#                  RETURNING r_success
# Return code....: r_success   檢查結果
# Date & Author..: Lori By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl018_chk_and_val()
   DEFINE r_success  LIKE type_t.num5
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_source   LIKE type_t.num5
   DEFINE l_docno    LIKE xmdk_t.xmdkdocno   #出通單單號/訂單單號
   DEFINE l_seq      LIKE xmdl_t.xmdl004     #出通單項次/訂單項次
   DEFINE l_seq1     LIKE xmdl_t.xmdl005     #出通單傳空值/訂單項序
   DEFINE l_seq2     LIKE xmdl_t.xmdl006     #出通單傳空值/訂單分批序   
   DEFINE l_max_qty  LIKE xmdl_t.xmdl205     #可出貨的出貨數量
   
   LET g_errno = NULL
   LET l_docno = NULL
   LET l_seq = NULL
   LET l_seq1 = NULL
   LET l_seq2 = NULL

   IF cl_null(g_xmdl_d[l_ac].xmdl018) THEN
      IF cl_null(g_xmdl_d[l_ac].xmdl205) THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl205)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl018 
      END IF
   END IF
   
   LET l_source = s_adbt540_get_slip_source(g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl003)
   CASE l_source 
      WHEN 1   
         LET l_docno = g_xmdl_d[l_ac].xmdl001
         LET l_seq = g_xmdl_d[l_ac].xmdl002
         LET l_seq1 = NULL
         LET l_seq2 = NULL
         LET g_errno = 'adb-00169'
      WHEN 2   
         LET l_docno = g_xmdl_d[l_ac].xmdl003
         LET l_seq = g_xmdl_d[l_ac].xmdl004
         LET l_seq1 = g_xmdl_d[l_ac].xmdl005
         LET l_seq2 = g_xmdl_d[l_ac].xmdl006
         LET g_errno = 'adb-00180'
   END CASE
   
   LET l_max_qty = s_adbt540_get_max_ship_qty(l_source,g_xmdk_m.xmdkdocno,l_docno,l_seq,l_seq1,l_seq2)
   
   IF g_xmdl_d[l_ac].xmdl018 > l_max_qty THEN
      LET r_success = FALSE
   ELSE
      LET r_success = TRUE 
      LET g_errno = NULL      
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl024_chk" order="55" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單價控管檢查
# Memo...........:
# Usage..........: CALL adbt540_xmdl024_chk()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: TRUE/FALSE
#                : 
# Date & Author..: 140325 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl024_chk()
   DEFINE l_xmdl024    LIKE xmdl_t.xmdl024   #單價
   DEFINE l_xmah006    LIKE xmah_t.xmah006   #允許單價為零
   DEFINE l_xmah004    LIKE xmah_t.xmah004   #修改容差率
   DEFINE l_xmah005    LIKE xmah_t.xmah005   #超過容差率處理方式
   
   LET g_errno = ''

   SELECT xmah006,xmah004,xmah005
     INTO l_xmah006,l_xmah004,l_xmah005
     FROM xmah_t
    WHERE xmahent = g_enterprise
      AND xmah001 = g_xmdk_m.xmdk018
   
   #若單頭取價方式的基本資料設置單價不可為0時，則輸入的單價不可以為0
   IF NOT cl_null(l_xmah006) THEN
      IF l_xmah006 = 'N' AND g_xmdl2_d[l_ac].xmdl024 = 0 THEN
         LET g_errno = 'apm-00273'    #當前取價方式中單價不允許為0！
         RETURN FALSE
      END IF
   END IF
   
   IF NOT cl_null(l_xmah004) THEN
      LET l_xmdl024 = ''
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN  #出通單
         SELECT xmdh023
           INTO l_xmdl024
           FROM xmdh_t
          WHERE xmdhent = g_enterprise
            AND xmdhdocno = g_xmdl_d[l_ac].xmdl001
            AND xmdhseq = g_xmdl_d[l_ac].xmdl002
      ELSE   #訂單
         SELECT xmdd018
           INTO l_xmdl024
           FROM xmdd_t
          WHERE xmddent = g_enterprise
            AND xmdddocno = g_xmdl_d[l_ac].xmdl003
            AND xmddseq = g_xmdl_d[l_ac].xmdl004
            AND xmddseq1 = g_xmdl_d[l_ac].xmdl005
            AND xmddseq2 = g_xmdl_d[l_ac].xmdl006
      END IF

      IF l_xmdl024 = 0 OR
         cl_null(l_xmdl024) THEN
         RETURN TRUE
      END IF

      LET l_xmdl024 = (g_xmdl2_d[l_ac].xmdl024 - l_xmdl024)/l_xmdl024   
      CALL s_math_abs(l_xmdl024) RETURNING l_xmdl024   #取絕對值
   
      #若輸入的單價超過單頭取價方式的容差率範圍，依據取價方式的基本資料設置的處理方式進行管控
      IF l_xmdl024 > l_xmah004 THEN
         LET g_errno = 'axm-00192'    #單價差異不可大於當前取價方式的容差率範圍！
         IF l_xmah005 = '1' THEN #拒絕
            RETURN FALSE
         END IF
      END IF
   END IF

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl217_ref" order="56" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 結算類型说明
# Usage..........: CALL adbt540_xmdl217_ref(p_xmdl217)
#                  RETURNING r_xmdl217_rdesc
# Input parameter: p_xmdl217         結算類型編號
# Retrn code     : r_xmdl217_rdesc   結算類型說明
# Date & Author..: 2014/05/23 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl217_ref(p_xmdl217)
   DEFINE p_xmdl217         LIKE xmdl_t.xmdl217
   DEFINE r_xmdl217_rdesc   LIKE oocql_t.oocql004
   
   LET r_xmdl217_rdesc = NULL
   LET r_xmdl217_rdesc = s_desc_get_acc_desc('2060',p_xmdl217)
   RETURN r_xmdl217_rdesc
END FUNCTION]]>
  </point>
  <point name="function.adbt540_imaf061_chk" order="57" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_imaf061_chk()
   DEFINE l_imaf061    LIKE imaf_t.imaf061
   
   LET l_imaf061 = ''   
   SELECT imaf061 INTO l_imaf061
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite = 'ALL'
      AND imaf001 = g_xmdl_d[l_ac].xmdl008
      
   IF l_imaf061 <> '1' AND
      l_imaf061 <> '3' THEN   #[T:料件據點進銷存檔].[C:批號控管]=1或3時才可輸入
         RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adbt540_packing_qty_chk" order="57" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 在撿量檢核
# Memo...........:
# Usage..........: CALLadbt540_packing_qty_chk()
#                  RETURNING r_success
# Return code....: r_success
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_packing_qty_chk()
   DEFINE l_para_data   LIKE type_t.chr80
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_flag        LIKE type_t.num5
   DEFINE l_inaa014     LIKE inaa_t.inaa014
   DEFINE l_slip        STRING
   
   LET r_success = TRUE
   LET l_inaa014 = NULL

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl009) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl014) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl017) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl018) AND
      NOT cl_null(g_xmdk_m.xmdkdocno) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdlseq) THEN


      CALL s_aooi200_get_slip(g_xmdl_d[l_ac].xmdl001) RETURNING l_success,l_slip
      CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0070') RETURNING l_para_data  #出庫單據考慮在揀量               
      LET l_inaa014 = s_adb_get_inaa014(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014)
      
      IF l_para_data = 'Y' THEN
         CALL s_inventory_check_inan(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,'',g_xmdl_d[l_ac].xmdl014,
                                     g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                     g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0) RETURNING r_success,l_flag
         IF NOT r_success THEN
            RETURN r_success
         END IF

         IF l_flag = 0 AND l_inaa014 = 'N' THEN   #庫存量不足且不允許負庫存
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdlseq_default" order="57" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取出或單項次
# Usage..........: CALL adbt540_xmdlseq_default(p_xmdkdocno)
#                  RETURNING r_xmdlseq
# Input parameter: p_xmdkdocno   出貨單號
# Return code....: r_xmdlseq     項次
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdlseq_default(p_xmdkdocno)
   DEFINE p_xmdkdocno   LIKE xmdk_t.xmdkdocno
   DEFINE r_xmdlseq     LIKE xmdl_t.xmdlseq

   LET r_xmdlseq = NULL
   
   SELECT MAX(xmdlseq)+1 INTO r_xmdlseq
     FROM xmdl_t
    WHERE xmdlent = g_enterprise
      AND xmdldocno = p_xmdkdocno    
   
   IF cl_null(r_xmdlseq) THEN
      LET r_xmdlseq = 1
   END IF   
   
   RETURN r_xmdlseq
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl021_default" order="58" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 自動帶出計價單位
# Usage..........: CALL adbt540_xmdl021_default()
# Date & Author..: 2014/06/06 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl021_default()
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_money       LIKE xmdk_t.xmdk051   
   DEFINE l_xrcd113     LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114     LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115     LIKE xrcd_t.xrcd115
   DEFINE l_xrcd123     LIKE xrcd_t.xrcd123
   DEFINE l_xrcd124     LIKE xrcd_t.xrcd124
   DEFINE l_xrcd125     LIKE xrcd_t.xrcd125
   DEFINE l_xrcd133     LIKE xrcd_t.xrcd133
   DEFINE l_xrcd134     LIKE xrcd_t.xrcd134
   DEFINE l_xrcd135     LIKE xrcd_t.xrcd135
   
   LET l_success = NULL
   
   IF cl_null(g_xmdl_d[l_ac].xmdl021) THEN   
      SELECT imaf113 INTO g_xmdl_d[l_ac].xmdl021
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite = 'ALL'
         AND imaf001 = g_xmdl_d[l_ac].xmdl008
   END IF
   
   IF cl_null(g_xmdl_d[l_ac].xmdl021) OR cl_get_para(g_enterprise,g_xmdk_m.xmdksite,'S-BAS-0007') = "N" THEN
      LET g_xmdl_d[l_ac].xmdl021 = g_xmdl_d[l_ac].xmdl017
   END IF
   
   #若料號有使用銷售計價單位時，自動推算計價數量
   CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
   RETURNING l_success,g_xmdl_d[l_ac].xmdl022
   
   #稅額計算
   LET l_money = g_xmdl2_d[l_ac].xmdl024 * g_xmdl_d[l_ac].xmdl022 
   CALL s_tax_ins(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                  g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
   RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,
             l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
             l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135

END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl020_default" order="59" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 參考單位
# Memo...........: 由出貨數量換算參考數量,計價數量,稅額
# Usage..........: CALL adbt540_xmdl020_default()
#                  RETURNING r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029
# Return code....: r_xmdl020
#                  r_xmdl022
#                  r_xmdl027
#                  r_xmdl028
#                  r_xmdl029
# Date & Author..: 2014/06/11 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl020_default()
   DEFINE l_success   LIKE type_t.num5
   DEFINE r_xmdl020   LIKE xmdl_t.xmdl020   #參考數量  
   DEFINE r_xmdl022   LIKE xmdl_t.xmdl022   #計價數量
   DEFINE r_xmdl027   LIKE xmdl_t.xmdl027
   DEFINE r_xmdl028   LIKE xmdl_t.xmdl028
   DEFINE r_xmdl029   LIKE xmdl_t.xmdl029
   DEFINE l_money       LIKE xmdk_t.xmdk051   
   DEFINE l_xrcd113     LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114     LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115     LIKE xrcd_t.xrcd115
   DEFINE l_xrcd123     LIKE xrcd_t.xrcd123
   DEFINE l_xrcd124     LIKE xrcd_t.xrcd124
   DEFINE l_xrcd125     LIKE xrcd_t.xrcd125
   DEFINE l_xrcd133     LIKE xrcd_t.xrcd133
   DEFINE l_xrcd134     LIKE xrcd_t.xrcd134
   DEFINE l_xrcd135     LIKE xrcd_t.xrcd135
   
   LET r_xmdl020 = NULL
   LET r_xmdl022 = NULL
   LET r_xmdl027 = NULL
   LET r_xmdl028 = NULL
   
   LET r_xmdl029 = NULL
   
   #推算參考數量
   IF g_xmdl_d[l_ac].xmdl019 IS NOT NULL THEN
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
         RETURNING l_success,r_xmdl020
   END IF
   
   #若料號有使用銷售計價單位時，自動推算計價數量
   IF g_xmdl_d[l_ac].xmdl021 IS NOT NULL THEN
      CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
        RETURNING l_success,r_xmdl022
      LET g_xmdl_d[l_ac].xmdl022 = r_xmdl022
      
      IF g_xmdl_d[l_ac].xmdl022  IS NOT NULL THEN
         #稅額計算
         LET l_money = g_xmdl2_d[l_ac].xmdl024 * g_xmdl_d[l_ac].xmdl022 
         CALL s_tax_ins(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                        g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
         RETURNING r_xmdl027,r_xmdl028,r_xmdl029,
                   l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
                   l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135   
      END IF     
   END IF
   
   RETURN r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl087_default" order="59" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 自立應收否預設值
# Memo...........: 單頭的單據性質有變時就要重取
# Usage..........: CALL adbt540_xmdl087_default()
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/05/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl087_default()
   IF g_xmdk_m.xmdk002 = '3' THEN
      LET g_xmdl087_def = 'N'
   ELSE
      LET g_xmdl087_def = 'Y'
   END IF      
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl205_default" order="60" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 預設出貨包裝數量
# Memo...........:
# Usage..........: CALL adbt540_xmdl205_default(p_xmdlseq,p_xmdl001,p_xmdl002,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,p_xmdl008,p_xmdl017,p_xmdl019,p_xmdl021,p_xmdl024,p_xmdl025,p_xmdl204,p_auto_detail)
#                     RETURNING r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029,r_xmdl205
# Input parameter: p_xmdlseq
#                  p_xmdl001        出通單號
#                  p_xmdl002
#                  p_xmdl003        訂單單號
#                  p_xmdl004
#                  p_xmdl005
#                  p_xmdl006
#                  p_xmdl008        料號
#                  p_xmdl017        出貨單位
#                  p_xmdl019
#                  p_xmdl021
#                  p_xmdl024
#                  p_xmdl025
#                  p_xmdl204       出貨包裝單位
#                  p_auto_detail   自動產生單身=Y,略過錯誤訊息;單身輸入=N,顯示錯誤訊息
# Retuen code....: r_xmdl018
#                  r_xmdl020
#                  r_xmdl022
#                  r_xmdl027
#                  r_xmdl028
#                  r_xmdl029
#                  r_xmdl205
# Date & Author..: 2014/06/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl205_default(p_xmdlseq,p_xmdl001,p_xmdl002,p_xmdl003,p_xmdl004,p_xmdl005,p_xmdl006,p_xmdl008,p_xmdl017,p_xmdl019,p_xmdl021,p_xmdl024,p_xmdl025,p_xmdl204,p_auto_detail)
   DEFINE p_xmdlseq        LIKE xmdl_t.xmdlseq   #出貨項次
   DEFINE p_xmdl001        LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002        LIKE xmdl_t.xmdl002
   DEFINE p_xmdl003        LIKE xmdl_t.xmdl003
   DEFINE p_xmdl004        LIKE xmdl_t.xmdl004
   DEFINE p_xmdl005        LIKE xmdl_t.xmdl005
   DEFINE p_xmdl006        LIKE xmdl_t.xmdl006
   DEFINE p_xmdl008        LIKE xmdl_t.xmdl008
   DEFINE p_xmdl017        LIKE xmdl_t.xmdl017
   DEFINE p_xmdl019        LIKE xmdl_t.xmdl019
   DEFINE p_xmdl021        LIKE xmdl_t.xmdl021
   DEFINE p_xmdl024        LIKE xmdl_t.xmdl024
   DEFINE p_xmdl025        LIKE xmdl_t.xmdl025
   DEFINE p_xmdl204        LIKE xmdl_t.xmdl204
   DEFINE p_auto_detail    LIKE type_t.chr1       #自動產生單身=Y,略過錯誤訊息;單身輸入=N,顯示錯誤訊息
   DEFINE r_xmdl018        LIKE xmdl_t.xmdl018
   DEFINE r_xmdl020        LIKE xmdl_t.xmdl020
   DEFINE r_xmdl022        LIKE xmdl_t.xmdl022
   DEFINE r_xmdl027        LIKE xmdl_t.xmdl027
   DEFINE r_xmdl028        LIKE xmdl_t.xmdl028
   DEFINE r_xmdl029        LIKE xmdl_t.xmdl029
   DEFINE r_xmdl205        LIKE xmdl_t.xmdl205
   DEFINE l_source         LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_docno          LIKE xmdk_t.xmdkdocno   #出通單單號/訂單單號
   DEFINE l_seq            LIKE xmdl_t.xmdl004     #出通單項次/訂單項次
   DEFINE l_seq1           LIKE xmdl_t.xmdl005     #出通單傳空值/訂單項序
   DEFINE l_seq2           LIKE xmdl_t.xmdl006     #出通單傳空值/訂單分批序  
   DEFINE l_errno          STRING
   
   LET r_xmdl018 = ''
   LET r_xmdl020 = ''
   LET r_xmdl022 = ''
   LET r_xmdl027 = ''
   LET r_xmdl028 = ''
   LET r_xmdl029 = ''
   LET r_xmdl205 = ''
   LET l_errno = ''
   
   IF (p_xmdl001 IS NULL OR p_xmdl002 IS NULL) AND
      (p_xmdl003 IS NULL OR p_xmdl004 IS NULL OR p_xmdl005 IS NULL OR p_xmdl006 IS NULL) THEN
      RETURN r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029,r_xmdl205
   END IF
   
   LET l_source = s_adbt540_get_slip_source(g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,p_xmdl001,p_xmdl003)
   
   INITIALIZE g_errparam TO NULL
   
   CASE l_source 
      WHEN 1   #出通單
         LET l_docno = p_xmdl001
         LET l_seq = p_xmdl002
         LET l_seq1 = NULL
         LET l_seq2 = NULL
         
         LET l_errno = 'adb-00319'
         LET g_errparam.columns[1] = 'lbl_xmdl001'
         LET g_errparam.columns[2] = 'lbl_xmdl002'
         LET g_errparam.values[1] = l_docno
         LET g_errparam.values[2] = l_seq    
      WHEN 2   #訂單
         LET l_docno = p_xmdl003
         LET l_seq = p_xmdl004
         LET l_seq1 = p_xmdl005
         LET l_seq2 = p_xmdl006
         
         LET l_errno = 'adb-00318'
         LET g_errparam.columns[1] = 'lbl_xmdl003'
         LET g_errparam.columns[2] = 'lbl_xmdl004'
         LET g_errparam.columns[3] = 'lbl_xmdl005'
         LET g_errparam.columns[4] = 'lbl_xmdl006'
         LET g_errparam.values[1] = l_docno
         LET g_errparam.values[2] = l_seq   
         LET g_errparam.values[3] = l_seq1
         LET g_errparam.values[4] = l_seq2          
   END CASE
   
   
   LET r_xmdl018 = s_adbt540_get_max_ship_qty(l_source,g_xmdk_m.xmdkdocno,l_docno,l_seq,l_seq1,l_seq2)
   IF cl_null(r_xmdl018) THEN
      LET r_xmdl018 = 0
   END IF
   
   IF r_xmdl018 = 0 THEN
      
      LET g_errparam.code   = l_errno
      LET g_errparam.popup  = TRUE 
      CALL cl_err()      
      RETURN r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029,r_xmdl205
   END IF
   
   IF p_auto_detail = 'Y' THEN
      IF p_xmdl008 IS NOT NULL AND p_xmdl017 IS NOT NULL AND p_xmdl204 IS NOT NULL THEN
         CALL s_aooi250_convert_qty(p_xmdl008,p_xmdl017,p_xmdl204,r_xmdl018)
            RETURNING l_success,r_xmdl205
         IF l_success AND r_xmdl205 > 0 THEN
            CALL adbt540_xmdl205_qty_convert(p_xmdlseq,
                                             p_xmdl008,p_xmdl017,r_xmdl018,
                                             p_xmdl204,r_xmdl205,p_xmdl019,
                                             p_xmdl021,p_xmdl024,p_xmdl025)
               RETURNING r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029      
         END IF 
      END IF      
   END IF
   
   RETURN r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029,r_xmdl205
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl205_qty_convert" order="61" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單位數量轉換並計算稅額
# Memo...........: 由出貨包裝數量換算出貨數量,參考數量,計價數量,稅額
# Usage..........: CALL adbt540_xmdl205_qty_convert(p_xmdlseq,p_xmdl008,p_xmdl017,p_xmdl018,p_xmdl204,p_xmdl205,p_xmdl019,p_xmdl021,p_xmdl024,p_xmdl025)
#                  RETURNING r.xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029
# Input parameter: p_xmdlseq   出貨項次
#                  p_xmdl008   料件編號
#                  p_xmdl017   出貨單位
#                  p_xmdl018   出貨數量
#                  p_xmdl204   包裝單位
#                  p_xmdl205   包裝數量
#                  p_xmdl019   參考單位
#                  p_xmdl021   計價單位
#                  p_xmdl024   單價
#                  p_xmdl025   稅別
# Return code....: r_xmdl018   出貨數量
#                  r_xmdl020   參考數量
#                  r_xmdl022   計價數量
#                  r_xmdl027   未稅金額
#                  r_xmdl028   含稅金額
#                  r_xmdl029   稅額
# Date & Author..: 2014/06/11 By Lori
################################################################################
PRIVATE FUNCTION adbt540_xmdl205_qty_convert(p_xmdlseq,p_xmdl008,p_xmdl017,p_xmdl018,p_xmdl204,p_xmdl205,p_xmdl019,p_xmdl021,p_xmdl024,p_xmdl025)
   DEFINE p_xmdlseq   LIKE xmdl_t.xmdlseq   #出貨項次
   DEFINE p_xmdl008   LIKE xmdl_t.xmdl008   #料件編號
   DEFINE p_xmdl017   LIKE xmdl_t.xmdl017   #出貨單位
   DEFINE p_xmdl018   LIKE xmdl_t.xmdl018   #出貨數量
   DEFINE p_xmdl204   LIKE xmdl_t.xmdl204   #包裝單位
   DEFINE p_xmdl205   LIKE xmdl_t.xmdl205   #包裝數量
   DEFINE p_xmdl019   LIKE xmdl_t.xmdl019   #參考單位
   DEFINE p_xmdl021   LIKE xmdl_t.xmdl021   #計價單位
   DEFINE p_xmdl024   LIKE xmdl_t.xmdl024   #單價
   DEFINE p_xmdl025   LIKE xmdl_t.xmdl025   #稅別
   DEFINE r_xmdl018   LIKE xmdl_t.xmdl018   #出貨數量
   DEFINE r_xmdl020   LIKE xmdl_t.xmdl020   #參考數量  
   DEFINE r_xmdl022   LIKE xmdl_t.xmdl022   #計價數量
   DEFINE r_xmdl027   LIKE xmdl_t.xmdl027   #未稅金額
   DEFINE r_xmdl028   LIKE xmdl_t.xmdl028   #含稅金額
   DEFINE r_xmdl029   LIKE xmdl_t.xmdl029   #稅額
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_money     LIKE xmdk_t.xmdk051
   DEFINE l_xrcd113   LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114   LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115   LIKE xrcd_t.xrcd115
   DEFINE l_xrcd123   LIKE xrcd_t.xrcd123
   DEFINE l_xrcd124   LIKE xrcd_t.xrcd124
   DEFINE l_xrcd125   LIKE xrcd_t.xrcd125
   DEFINE l_xrcd133   LIKE xrcd_t.xrcd133
   DEFINE l_xrcd134   LIKE xrcd_t.xrcd134
   DEFINE l_xrcd135   LIKE xrcd_t.xrcd135
   
   LET r_xmdl018 = NULL
   LET r_xmdl020 = NULL
   LET r_xmdl022 = NULL
   LET r_xmdl027 = NULL
   LET r_xmdl028 = NULL
   
   LET r_xmdl029 = NULL
   
   IF p_xmdl205 IS NOT NULL THEN
      #轉換出貨數量
      IF p_xmdl017 IS NOT NULL AND cl_null(p_xmdl018) THEN
         CALL s_aooi250_convert_qty(p_xmdl008,p_xmdl204,p_xmdl017,p_xmdl205)
            RETURNING l_success,r_xmdl018   
      ELSE
         LET r_xmdl018 = p_xmdl018
      END IF
      
      #轉換算參考數量
      IF p_xmdl019 IS NOT NULL THEN
         CALL s_aooi250_convert_qty(p_xmdl008,p_xmdl204,p_xmdl019,p_xmdl205)
            RETURNING l_success,r_xmdl020
      END IF
      
      #若料號有使用銷售計價單位時，自動推算計價數量
      IF p_xmdl021 IS NOT NULL THEN
         CALL s_aooi250_convert_qty(p_xmdl008,p_xmdl204,p_xmdl021,p_xmdl205)
           RETURNING l_success,r_xmdl022
         
         IF p_xmdlseq IS NOT NULL AND r_xmdl022 IS NOT NULL AND p_xmdl025 IS NOT NULL THEN
            #稅額計算
            LET l_money = p_xmdl024 * r_xmdl022 
            IF l_money IS NOT NULL THEN
               CALL s_tax_ins(g_xmdk_m.xmdkdocno,p_xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                              p_xmdl025,r_xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
               RETURNING r_xmdl027,r_xmdl029,r_xmdl028,
                         l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
                         l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135   
            END IF             
         END IF     
      END IF
   END IF
   
   RETURN r_xmdl018,r_xmdl020,r_xmdl022,r_xmdl027,r_xmdl028,r_xmdl029
END FUNCTION]]>
  </point>
  <point name="function.adbt540_auto_insert_xmdm" order="62" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由出通單多庫儲批自動帶出單身
# Memo...........:
# Usage..........: CALL adbt540_auto_insert_xmdm(p_xmdl001,p_xmdl002,p_xmdlseq)
#                  
# Input parameter: p_xmdl001(出通單號)
#                : p_xmdl002(出通單項次)
#                : p_xmdlseq(出貨單項次)
# Return code....: 
#                : 
# Date & Author..: 140304 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_auto_insert_xmdm(p_xmdl001,p_xmdl002,p_xmdlseq)
   DEFINE p_xmdl001    LIKE xmdl_t.xmdl001
   DEFINE p_xmdl002    LIKE xmdl_t.xmdl002
   DEFINE p_xmdlseq    LIKE xmdl_t.xmdlseq
   DEFINE l_n          LIKE type_t.num5
   DEFINE l_xmdm     RECORD      
      xmdmseq1         LIKE xmdm_t.xmdmseq1,
      xmdm001          LIKE xmdm_t.xmdm001,
      xmdm002          LIKE xmdm_t.xmdm002,
      xmdm003          LIKE xmdm_t.xmdm003,
      xmdm004          LIKE xmdm_t.xmdm004,
      xmdm005          LIKE xmdm_t.xmdm005,
      xmdm006          LIKE xmdm_t.xmdm006,
      xmdm007          LIKE xmdm_t.xmdm007,
      xmdm008          LIKE xmdm_t.xmdm008,
      xmdm009          LIKE xmdm_t.xmdm009,
      xmdm010          LIKE xmdm_t.xmdm010,
      xmdm011          LIKE xmdm_t.xmdm011,
      xmdm033          LIKE xmdm_t.xmdm033
                     END RECORD
   
   LET g_errno = ''
   LET l_n = 0
   #檢查是否有多庫儲批資料
   SELECT COUNT(xmdiseq1) INTO l_n 
     FROM xmdi_t
    WHERE xmdient = g_enterprise
      AND xmdidocno = p_xmdl001
      AND xmdiseq = p_xmdl002
      
   IF l_n = 0 THEN
      RETURN
   END IF

   LET g_sql = "SELECT xmdiseq1,",
               "       xmdi001,xmdi002,xmdi003,xmdi004,xmdi005,",
               "       xmdi006,xmdi007,xmdi008,xmdi009,xmdi010,",
               "       xmdi011,xmdi013 ",
               "  FROM xmdi_t",
               " WHERE xmdient = '",g_enterprise,"'",
               "   AND xmdidocno = '",p_xmdl001,"'",
               "   AND xmdiseq = '",p_xmdl002,"'",
               " ORDER BY xmdiseq1"
                  
   PREPARE auto_import3_pre FROM g_sql
   DECLARE auto_import3_cur CURSOR FOR auto_import3_pre
      
   INITIALIZE l_xmdm.* TO NULL
   
   FOREACH auto_import3_cur INTO l_xmdm.xmdmseq1,
                                 l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                                 l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                                 l_xmdm.xmdm011,l_xmdm.xmdm033
   
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         EXIT FOREACH
      END IF      

      #產品特徵為NULL時,給空白             
      IF cl_null(l_xmdm.xmdm002) THEN
         LET l_xmdm.xmdm002 = ' '
      END IF 

      #庫存管理特徵為NULL時,給空白             
      IF cl_null(l_xmdm.xmdm033) THEN
         LET l_xmdm.xmdm033 = ' '
      END IF 
      
      INSERT INTO xmdm_t (xmdment,xmdmsite,xmdmdocno,xmdmseq,xmdmseq1,
                          xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,
                          xmdm006,xmdm007,xmdm008,xmdm009,xmdm010,
                          xmdm011,xmdm033)
           VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,p_xmdlseq,l_xmdm.xmdmseq1,
                   l_xmdm.xmdm001,l_xmdm.xmdm002,l_xmdm.xmdm003,l_xmdm.xmdm004,l_xmdm.xmdm005,
                   l_xmdm.xmdm006,l_xmdm.xmdm007,l_xmdm.xmdm008,l_xmdm.xmdm009,l_xmdm.xmdm010,
                   l_xmdm.xmdm011,xmdm033)
      IF SQLCA.sqlcode THEN
         LET g_errno = SQLCA.sqlcode
         EXIT FOREACH
      END IF
   END FOREACH
   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_set_required_b" order="63" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_set_required_b(p_cmd)
   DEFINE p_cmd      LIKE type_t.chr1
   DEFINE l_imaa005  LIKE imaa_t.imaa005
   
   IF g_xmdl_d[l_ac].xmdl007 <> '9' THEN   #樣品
      IF g_xmdl_d[l_ac].xmdl001 IS NOT NULL THEN
         CALL cl_set_comp_required("xmdl001,xmdl002",TRUE)
      END IF

      IF g_xmdl_d[l_ac].xmdl003 IS NOT NULL THEN
         CALL cl_set_comp_required("xmdl003,xmdl004,xmdl005,xmdl006",TRUE)
      END IF
   END IF   
   
   #判斷料件是否存在產品特徵
   LET l_imaa005 = NULL
   CALL s_adb_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
   IF NOT cl_null(l_imaa005) THEN
      CALL cl_set_comp_required("xmdl009",TRUE)
   END IF
   
   #判斷料件有無做批號管理  
   IF s_adbt540_get_imaf061(g_xmdl_d[l_ac].xmdl008) = '1' THEN
      CALL cl_set_comp_required("xmdl016",TRUE)
   END IF
   
   CALL adbt540_set_visible()   #隱藏欄位
END FUNCTION]]>
  </point>
  <point name="function.adbt540_auto_insert_1" order="64" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由出通單自動帶出單身
# Memo...........:
# Usage..........: CALL adbt540_auto_insert_1()
#                  
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140303 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_auto_insert_1()
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmdhseq    LIKE xmdh_t.xmdhseq
   DEFINE l_msg        STRING
   DEFINE r_success    LIKE type_t.num5

   LET g_sql = "SELECT xmdhseq ",
               "  FROM xmdh_t ",
               " WHERE xmdhent = ",g_enterprise,
               "   AND xmdhdocno = ? ",
               " ORDER BY xmdhseq "
                  
   PREPARE auto_import1_pre FROM g_sql
   DECLARE auto_import1_cur CURSOR FOR auto_import1_pre   
   OPEN auto_import1_cur USING g_xmdk_m.xmdk005
   
   LET l_seq = 1

   CALL s_transaction_begin()                      #單身transaction
   CALL cl_showmsg_init()
   
   LET r_success = TRUE
   
   FOREACH auto_import1_cur INTO l_xmdhseq
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('FOREACH','','',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      #替換錯誤訊息
      CALL cl_getmsg_parm('axm-00218',g_dlang,g_xmdk_m.xmdk005 ||'|'|| l_xmdhseq)
      RETURNING l_msg
      
      IF NOT adbt540_notice_chk_and_val() THEN
         CALL cl_errmsg('',l_msg,'',g_errno,1)
         CONTINUE FOREACH
      END IF
               
      INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                          xmdl001,xmdl002,
                          xmdl003,xmdl004,xmdl005,xmdl006,
                          xmdl007,xmdl008,xmdl009,xmdl010,xmdl011,xmdl012,
                          xmdl013,xmdl014,xmdl015,xmdl016,
                          xmdl017,xmdl018,xmdl019,xmdl020,xmdl021,xmdl022,
                          xmdl023,
                          xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,xmdl029,
                          xmdl030,xmdl031,xmdl032,xmdl033,xmdl034,
                          xmdl041,xmdl051,
                          xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl050,
                          xmdl087,xmdl088) 
           VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_seq,
                   g_xmdl.xmdl001,g_xmdl.xmdl002,
                   g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                   g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl010,g_xmdl.xmdl011,g_xmdl.xmdl012,
                   g_xmdl.xmdl013,g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,
                   g_xmdl.xmdl017,g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,g_xmdl.xmdl022,
                   g_xmdl.xmdl023,
                   g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,g_xmdl.xmdl027,g_xmdl.xmdl028,g_xmdl.xmdl029,
                   g_xmdl.xmdl030,g_xmdl.xmdl031,g_xmdl.xmdl032,g_xmdl.xmdl033,g_xmdl.xmdl034,
                   g_xmdl.xmdl041,g_xmdl.xmdl051,
                   g_xmdl.xmdl042,g_xmdl.xmdl043,g_xmdl.xmdl044,g_xmdl.xmdl045,g_xmdl.xmdl046,g_xmdl.xmdl050,
                   g_xmdl.xmdl087,g_xmdl.xmdl088)
                             
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #由出通單多庫儲批自動帶出單身
      IF g_xmdl.xmdl013 = 'Y' THEN
         CALL adbt540_auto_insert_xmdm(g_xmdl.xmdl001,g_xmdl.xmdl002,l_seq)
         IF NOT cl_null(g_errno) THEN
            CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END IF
      
      LET l_seq = l_seq + 1
   END FOREACH

   CALL cl_showmsg()
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_set_no_required_b" order="64" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt540_set_no_required_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   
   CALL cl_set_comp_required("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl009,xmdl016",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.adbt540_auto_insert_2" order="65" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由訂單自動帶出單身
# Memo...........:
# Usage..........: CALL adbt540_auto_insert_2()
#                  
# Input parameter: 
#                : 
# Return code....: r_success  執行結果
#                : 
# Date & Author..: 140303 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_auto_insert_2()
   DEFINE l_seq        LIKE type_t.num5
   DEFINE l_xmddseq    LIKE xmdd_t.xmddseq
   DEFINE l_xmddseq1   LIKE xmdd_t.xmddseq1
   DEFINE l_xmddseq2   LIKE xmdd_t.xmddseq2
   DEFINE l_xmdd011    LIKE xmdd_t.xmdd011
   DEFINE l_msg        STRING
   DEFINE r_success    LIKE type_t.num5
         
   LET g_sql = "SELECT xmddseq,xmddseq1,xmddseq2,",
               "       xmdd011",
               "  FROM xmdc_t,xmdd_t",
               " WHERE xmdcent = xmddent",
               "   AND xmdcdocno = xmdddocno",
               "   AND xmdcseq = xmddseq",
               "   AND xmddent = '",g_enterprise,"'",
               "   AND xmdddocno = ?",
               " ORDER BY xmddseq,xmddseq1,xmddseq2"  
                                                              
   PREPARE auto_import2_pre FROM g_sql
   DECLARE auto_import2_cur CURSOR FOR auto_import2_pre   
   OPEN auto_import2_cur USING g_xmdk_m.xmdk006

   LET l_xmdd011 = ''   
   LET l_seq = 1
   
   CALL s_transaction_begin()         #單身transaction
   CALL cl_showmsg_init()
   
   LET r_success = TRUE
           
   FOREACH auto_import2_cur INTO l_xmddseq,l_xmddseq1,l_xmddseq2,l_xmdd011
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('FOREACH','','',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #替換錯誤訊息
      CALL cl_getmsg_parm('axm-00219',g_lang,g_xmdk_m.xmdk006 ||'|'|| l_xmddseq ||'|'|| l_xmddseq1 ||'|'|| l_xmddseq2)
      RETURNING l_msg
      
      
      IF l_xmdd011 > g_xmdk_m.xmdkdocdt THEN
         CALL cl_errmsg('',l_msg,'','axm-00222',1)
         CONTINUE FOREACH
      END IF
      
      IF NOT adbt540_order_chk_and_val() THEN
         CALL cl_errmsg('',l_msg,'',g_errno,1)
         CONTINUE FOREACH
      END IF                              

      LET g_xmdl.xmdl013 = 'N'
      LET g_xmdl.xmdl087 = 'N'
      LET g_xmdl.xmdl088 = 'N'
   
      INSERT INTO xmdl_t (xmdlent,xmdlsite,xmdldocno,xmdlseq,
                          xmdl003,xmdl004,xmdl005,xmdl006,
                          xmdl007,xmdl008,xmdl009,xmdl017,
                          xmdl018,xmdl019,xmdl020,xmdl021,xmdl022,
                          xmdl024,xmdl025,xmdl026,xmdl027,xmdl028,
                          xmdl029,xmdl033,
                          xmdl034,xmdl010,xmdl011,xmdl012,
                          xmdl014,xmdl015,xmdl016,xmdl023,
                          xmdl041,xmdl013,xmdl087,xmdl088)
           VALUES (g_enterprise,g_site,g_xmdk_m.xmdkdocno,l_seq,
                   g_xmdl.xmdl003,g_xmdl.xmdl004,g_xmdl.xmdl005,g_xmdl.xmdl006,
                   g_xmdl.xmdl007,g_xmdl.xmdl008,g_xmdl.xmdl009,g_xmdl.xmdl017,
                   g_xmdl.xmdl018,g_xmdl.xmdl019,g_xmdl.xmdl020,g_xmdl.xmdl021,g_xmdl.xmdl022,
                   g_xmdl.xmdl024,g_xmdl.xmdl025,g_xmdl.xmdl026,g_xmdl.xmdl027,g_xmdl.xmdl028,
                   g_xmdl.xmdl029,g_xmdl.xmdl033,
                   g_xmdl.xmdl034,g_xmdl.xmdl010,g_xmdl.xmdl011,g_xmdl.xmdl012,
                   g_xmdl.xmdl014,g_xmdl.xmdl015,g_xmdl.xmdl016,g_xmdl.xmdl023,
                   g_xmdl.xmdl041,g_xmdl.xmdl013,g_xmdl.xmdl087,g_xmdl.xmdl088)
                   
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('INSERT',l_msg,'',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_seq = l_seq + 1
   END FOREACH

   CALL cl_showmsg()

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl033_xmdl008_xmdl009_default" order="65" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由客戶料號帶出料號
# Memo...........:
# Usage..........: CALL adbt540_xmdl033_xmdl008_xmdl009_default()
#                  
# Input parameter: 
#                :
# Return code....:
#                :
# Date & Author..: 140313 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl033_xmdl008_xmdl009_default()
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_xmdl008      LIKE xmdl_t.xmdl008
   DEFINE l_xmdl009      LIKE xmdl_t.xmdl009
   
   LET l_xmdl008 = ''
   LET l_xmdl009 = ''
   
   IF NOT cl_null(g_xmdk_m.xmdk007) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl033) THEN
      
      CALL s_apmi070_get_pmao002_pmao003(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl033)
      RETURNING l_success,l_xmdl008,l_xmdl009
   
      IF NOT l_success THEN
         LET l_xmdl008 = ''
         LET l_xmdl009 = ''
      END IF
   END IF
   
   LET g_xmdl_d[l_ac].xmdl008 = l_xmdl008
   LET g_xmdl_d[l_ac].xmdl009 = l_xmdl009
   
   CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
   
   LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008
   LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdl008_xmdl009_xmdl033_default" order="66" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 由料號帶出客戶料號
# Memo...........:
# Usage..........: CALL adbt540_xmdl008_xmdl009_xmdl033_default()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 140313 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdl008_xmdl009_xmdl033_default()
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_xmdl033      LIKE xmdl_t.xmdl033
   
   LET l_xmdl033 = ''
   
   IF NOT cl_null(g_xmdk_m.xmdk007) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN
      
      CALL s_apmi070_get_pmao004(g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009)
      RETURNING l_success,l_xmdl033
   
      IF NOT l_success THEN
         LET l_xmdl033 = ''
      END IF
   END IF
   
   LET g_xmdl_d[l_ac].xmdl033 = l_xmdl033
   
   LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033
END FUNCTION]]>
  </point>
  <point name="function.adbt540_post_input" order="67" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 出貨單過帳Input
# Memo...........:
# Usage..........: CALL adbt540_post_input()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success   處理狀況
#                : 
# Date & Author..: 140326 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_post_input()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_para_data     LIKE type_t.chr80          #接參數用
   
   LET r_success = TRUE
   
   INPUT BY NAME g_xmdk_m.xmdk001 ATTRIBUTE(WITHOUT DEFAULTS)

      BEFORE INPUT
         IF cl_null(g_xmdk_m.xmdk001) THEN
            LET g_xmdk_m.xmdk001 = g_today
         END IF
         DISPLAY BY NAME g_xmdk_m.xmdk001
         LET g_xmdk_m_t.xmdk001 = g_xmdk_m.xmdk001

      AFTER FIELD xmdk001
         IF NOT cl_null(g_xmdk_m.xmdk001) THEN
            IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00267'   #扣帳日期不可小於單據日期！
               LET g_errparam.extend = g_xmdk_m.xmdk001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
               DISPLAY g_xmdk_m.xmdk001 TO xmdk001
               NEXT FIELD CURRENT
            END IF
         
            CALL cl_get_para(g_enterprise,g_xmdk_m.xmdksite,'S-MFG-0031') RETURNING l_para_data
            IF g_xmdk_m.xmdk001 <= l_para_data THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00077'   #扣帳日期小於關帳日期，請重新輸入！
               LET g_errparam.extend = g_xmdk_m.xmdk001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
               DISPLAY g_xmdk_m.xmdk001 TO xmdk001
               NEXT FIELD CURRENT
            END IF
         END IF
            
     AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

         ON ACTION accept
            ACCEPT INPUT

         ON ACTION cancel
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET r_success = FALSE
      RETURN r_success
   END IF

   IF NOT adbt540_upd_xmdk001() THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
  
   RETURN r_success  

END FUNCTION]]>
  </point>
  <point name="function.adbt540_unit_chk" order="68" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單位檢查
# Memo...........:
# Usage..........: CALL adbt540_unit_chk(p_xmdl008,p_xmdl017)
#                  RETURNING r_success
# Input parameter: p_xmdl008      料件編號
#                : p_xmdl017      單位
# Return code....: r_success      執行結果
#                : 
# Date & Author..: 140423 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_unit_chk(p_xmdl008,p_xmdl017)
   DEFINE p_xmdl008     LIKE xmdl_t.xmdl008
   DEFINE p_xmdl017     LIKE xmdl_t.xmdl017
   DEFINE r_success     LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF cl_null(p_xmdl008) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00229'   #請先輸入料號！
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT cl_null(p_xmdl017) THEN            
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
            
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = p_xmdl008
      LET g_chkparam.arg2 = p_xmdl017
                                    
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_imao002") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_open_s_pay" order="69" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 執行款別相關作業
# Memo...........:
# Usage..........: CALL adbt540_open_s_pay(p_process)
# Input parameter: p_process   款別作業
#                              ''    執行款別 s_pay
#                              '09'  執行款別明細 s_pay9
# Date & Author..: 2014/06/11 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_open_s_pay(p_process)
   DEFINE p_process     LIKE type_t.chr10
   DEFINE l_sql         STRING
   
   LET l_sql = NULL
   
   IF cl_null(g_xmdk_m.xmdkdocno) THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'std-00003'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()

       RETURN
   END IF
  
   IF g_xmdk_m.xmdk002 = '3' THEN
      RETURN   
   END IF
   
   IF cl_null(g_slip_xmdl216) THEN
      CALL adbt540_get_slip_xmdl216()
      IF g_slip_xmdl216 = '13' THEN
         RETURN
      END IF
   END IF
   
   CASE p_process
      WHEN '' 
         CALL s_pay('xmdk_t',1,g_xmdk_m.xmdkdocno)
      WHEN '09'
         CALL s_pay_09(g_xmdk_m.xmdkdocno) 
   END CASE  
   
END FUNCTION]]>
  </point>
  <point name="function.adbt540_produce_adbt580" order="70" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.adbt540_produce_axmt580" order="70" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 自動產生簽收單
# Memo...........:
# Usage..........: CALL adbt540_produce_axmt580(p_xmdkdocno)
#                  RETURNING r_success
# Input parameter: p_xmdkdocno  單據單號
#                : p_xmdkstus   單據狀態
#                : p_xmdk002    出貨性質
# Return code....: r_success    執行結果
#                : 
# Date & Author..: 140423 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_produce_axmt580(p_xmdkdocno,p_xmdkstus,p_xmdk002)
   DEFINE p_xmdkdocno     LIKE xmdk_t.xmdkdocno
   DEFINE p_xmdkstus      LIKE xmdk_t.xmdkstus
   DEFINE p_xmdk002       LIKE xmdk_t.xmdk002
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_ooef004       LIKE ooef_t.ooef004
   DEFINE l_n             LIKE type_t.num5
   DEFINE l_produce    RECORD
             slip         LIKE xmdk_t.xmdkdocno,
             date         LIKE xmdk_t.xmdk001
                       END RECORD
   DEFINE l_xmdk       RECORD
             xmdkdocno    LIKE xmdk_t.xmdkdocno,
             xmdkdocdt    LIKE xmdk_t.xmdkdocdt,
             xmdk000      LIKE xmdk_t.xmdk000,
             xmdk001      LIKE xmdk_t.xmdk001,
             xmdk003      LIKE xmdk_t.xmdk003,
             xmdk004      LIKE xmdk_t.xmdk004,
             xmdk005      LIKE xmdk_t.xmdk005,
             xmdk006      LIKE xmdk_t.xmdk006,
             xmdk007      LIKE xmdk_t.xmdk007,
             xmdk008      LIKE xmdk_t.xmdk008,
             xmdk009      LIKE xmdk_t.xmdk009,
             xmdk010      LIKE xmdk_t.xmdk010,
             xmdk011      LIKE xmdk_t.xmdk011,
             xmdk012      LIKE xmdk_t.xmdk012,
             xmdk013      LIKE xmdk_t.xmdk013,
             xmdk014      LIKE xmdk_t.xmdk014,
             xmdk015      LIKE xmdk_t.xmdk015,    
             xmdk016      LIKE xmdk_t.xmdk016,             
             xmdk017      LIKE xmdk_t.xmdk017,
             xmdk018      LIKE xmdk_t.xmdk018,
             xmdk019      LIKE xmdk_t.xmdk019,
             xmdk035      LIKE xmdk_t.xmdk035,
             xmdk037      LIKE xmdk_t.xmdk037,
             xmdkownid    LIKE xmdk_t.xmdkownid,
             xmdkowndp    LIKE xmdk_t.xmdkowndp,
             xmdkcrtid    LIKE xmdk_t.xmdkcrtid,
             xmdkcrtdp    LIKE xmdk_t.xmdkcrtdp,
             xmdkcrtdt    LIKE xmdk_t.xmdkcrtdt,
             xmdkstus     LIKE xmdk_t.xmdkstus
                       END RECORD
   
   LET r_success = TRUE
   
   IF cl_null(p_xmdkdocno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00324'
      LET g_errparam.extend = p_xmdkdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF p_xmdkstus <> 'S' OR
      cl_null(p_xmdkstus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00054'
      LET g_errparam.extend = p_xmdkdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF p_xmdk002 <> '3' OR
      cl_null(p_xmdk002) THEN    #簽收訂單
      #IF  THEN  #無訂單出貨
      #   CALL cl_err(p_xmdkdocno,'axm-00271',1)
      #ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adb-00326'   #出貨單的出貨性質需為"3:簽收訂單"
         LET g_errparam.extend = p_xmdkdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

      #END IF
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #若出貨單已經有對應得簽收單且還未確認扣帳時則不允許再轉出貨簽收單
   LET l_n = 0
   SELECT COUNT(xmdkdocno) INTO l_n
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdk005 = p_xmdkdocno
      AND xmdkstus = 'N'
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00215'   #該出貨單已有存在其他未過帳簽收單！
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   OPEN WINDOW w_adbt540_s01 WITH FORM cl_ap_formpath("adb",'adbt540_s01')
   #畫面初始化
   CALL cl_ui_locale('adbt540_s01')
   
   INITIALIZE l_produce.* TO NULL
   LET l_produce.date = g_today
      
   INPUT BY NAME l_produce.slip,l_produce.date WITHOUT DEFAULTS   
      BEFORE INPUT
      
      AFTER FIELD slip
         IF NOT cl_null(l_produce.slip) THEN         
            #檢查單別
            IF NOT s_aooi200_chk_slip(g_xmdk_m.xmdksite,'',l_produce.slip,'axmt580') THEN
               LET l_produce.slip = ''
               NEXT FIELD CURRENT
            END IF
         END IF
            
      ON ACTION controlp INFIELD slip                          
         #開窗i段
			INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

         LET g_qryparam.default1 = l_produce.slip             #給予default值

         #給予arg
         LET l_ooef004 = ''
         SELECT ooef004 
           INTO l_ooef004
           FROM ooef_t
          WHERE ooefent = g_enterprise
            AND ooef001 = g_site
            AND ooefstus = 'Y'
             
         LET g_qryparam.arg1 = l_ooef004
         LET g_qryparam.arg2 = 'axmt580'

         CALL q_ooba002_1()                                #呼叫開窗

         LET l_produce.slip = g_qryparam.return1              #將開窗取得的值回傳到變數

         DISPLAY l_produce.slip TO slip              #顯示到畫面上

         NEXT FIELD slip                          #返回原欄位
            
      ON ACTION confirm
         ACCEPT INPUT
         
      ON ACTION cancel
         EXIT INPUT

      ON ACTION exit
         EXIT INPUT
      
      AFTER INPUT
      
   END INPUT
   
   CLOSE WINDOW w_adbt540_s01
   
   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   INITIALIZE l_xmdk.* TO NULL
   SELECT xmdk003,xmdk004,
          xmdk006,xmdk007,xmdk008,xmdk009,
          xmdk010,xmdk011,xmdk012,xmdk013,
          xmdk014,xmdk015,xmdk016,xmdk017,
          xmdk018,xmdk019,xmdk035,xmdk037
     INTO l_xmdk.xmdk003,l_xmdk.xmdk004,
          l_xmdk.xmdk006,l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,
          l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk013,
          l_xmdk.xmdk014,l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk017,
          l_xmdk.xmdk018,l_xmdk.xmdk019,l_xmdk.xmdk035,l_xmdk.xmdk037
     FROM xmdk_t
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = p_xmdkdocno
   
   LET l_xmdk.xmdkownid = g_user
   LET l_xmdk.xmdkowndp = g_dept
   LET l_xmdk.xmdkcrtid = g_user
   LET l_xmdk.xmdkcrtdp = g_dept 
   LET l_xmdk.xmdkcrtdt = cl_get_current()
   
   LET l_xmdk.xmdk000 = '4'          #簽收單
   LET l_xmdk.xmdk005 = p_xmdkdocno  #出貨單號
   LET l_xmdk.xmdkdocdt = g_today         #單據日期
   LET l_xmdk.xmdk001 = l_produce.date    #簽收日期
   LET l_xmdk.xmdkstus = 'N'
      
   #自動產生單號
   CALL s_aooi200_gen_docno(g_xmdk_m.xmdksite,l_produce.slip,l_xmdk.xmdkdocdt,'axmt580')
   RETURNING r_success,l_xmdk.xmdkdocno
   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00003'
      LET g_errparam.extend = l_produce.slip
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   INSERT INTO xmdk_t(xmdkent,xmdksite,xmdkdocno,
                      xmdk003,xmdk004,
                      xmdk006,xmdk007,xmdk008,xmdk009,
                      xmdk010,xmdk011,xmdk012,xmdk013,
                      xmdk014,xmdk015,xmdk016,xmdk017,
                      xmdk018,xmdk019,xmdk035,xmdk037,
                      xmdkownid,xmdkowndp,
                      xmdkcrtid,xmdkcrtdp,xmdkcrtdt,
                      xmdk000,xmdk005,xmdkdocdt,
                      xmdk001,xmdkstus)   
   VALUES (g_enterprise,g_site,l_xmdk.xmdkdocno,
           l_xmdk.xmdk003,l_xmdk.xmdk004,
           l_xmdk.xmdk006,l_xmdk.xmdk007,l_xmdk.xmdk008,l_xmdk.xmdk009,
           l_xmdk.xmdk010,l_xmdk.xmdk011,l_xmdk.xmdk012,l_xmdk.xmdk013,
           l_xmdk.xmdk014,l_xmdk.xmdk015,l_xmdk.xmdk016,l_xmdk.xmdk017,
           l_xmdk.xmdk018,l_xmdk.xmdk019,l_xmdk.xmdk035,l_xmdk.xmdk037,
           l_xmdk.xmdkownid,l_xmdk.xmdkowndp,
           l_xmdk.xmdkcrtid,l_xmdk.xmdkcrtdp,l_xmdk.xmdkcrtdt,
           l_xmdk.xmdk000,l_xmdk.xmdk005,l_xmdk.xmdkdocdt,
           l_xmdk.xmdk001,l_xmdk.xmdkstus)   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CALL s_axmt580_auto_insert(l_xmdk.xmdkdocno,l_xmdk.xmdk005,l_xmdk.xmdk016,l_xmdk.xmdk017) RETURNING r_success

   IF r_success THEN
      CALL cl_ask_msg_error(l_xmdk.xmdkdocno,'axm-00270','')   #簽收單產生成功！
   ELSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_open_adbt540_01" order="70" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 多庫儲批維護
# Memo...........:
# Usage..........: CALL adbt540_open_adbt540_01()
# Date & Author..: 2014/06/10 By Lori
# Modify.........: 2015/03/05 By Lori  1.150302-00004#11, CALL adbt540_01 增加參數 xmdl005,xmdl006
#                                      2.關閉多庫儲批維護作業後,重新確認xmdm_t的資料,若只有一筆,則多庫儲批仍為 N
################################################################################
PRIVATE FUNCTION adbt540_open_adbt540_01()
   DEFINE l_source    LIKE type_t.num5
   DEFINE l_store_id  LIKE xmdc_t.xmdc028   #倉庫
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_rollback  LIKE type_t.num5
   DEFINE l_xmdl052   LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5      #by 150305 lori522612 add
   
   LET l_source = NULL
   LET l_store_id = NULL
   LET l_success = NULL
   
   IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00073'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   LET l_source = s_adbt540_get_slip_source(g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl003)
   
   #IF NOT adbt540_xmdl013_chk() THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = g_errno
   #   LET g_errparam.extend = ''
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   RETURN
   #END IF
   
   IF s_adbt540_change_xmdm_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq) THEN
      CALL s_transaction_begin()
      
      #ken_mark
      #CALL adbt540_01('1',g_xmdk_m.xmdksite,'',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,
      #                g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
      #                g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl204,
      #                g_xmdl_d[l_ac].xmdl205,'','') RETURNING l_success,l_rollback
      #ken------------------------------------------------------------------s
      CALL adbt540_01('1',                    g_xmdk_m.xmdksite,     '',                    
                      g_xmdk_m.xmdkdocno,     g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,
                      g_xmdl_d[l_ac].xmdl009, g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,                      
                      g_xmdl_d[l_ac].xmdl017, g_xmdl_d[l_ac].xmdl018,'', 
                      g_xmdl_d[l_ac].xmdl019, g_xmdl_d[l_ac].xmdl020,'',                      
                      g_xmdl_d[l_ac].xmdl001, g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003, 
                      g_xmdl_d[l_ac].xmdl004, g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006,   #150302-00004#11 150305 by lori522612 add xmdl005/xmdl006
                      g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205,                       
                      g_xmdl6_d[l_ac].xmdl200,g_xmdl_d[l_ac].xmdl222,g_xmdl_d[l_ac].xmdl223,
                      g_xmdl_d[l_ac].xmdl224, g_xmdl_d[l_ac].xmdl225)
       RETURNING l_success,l_rollback,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,l_xmdl052
       #ken------------------------------------------------------------------e

      IF l_rollback THEN
         LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013 
         LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
         LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
         LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016      
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      IF NOT l_success THEN
         LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013 
         LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
         LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
         LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
         CALL s_transaction_end('N','0')
         RETURN         
      ELSE
         IF NOT s_adbt540_change_xmdm_upd_after(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus) THEN
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         # by 150305 lori522612 add---(S)   
         LET l_cnt = 0
         
         SELECT COuNT(*) INTO l_cnt
           FROM xmdm_t
          WHERE xmdment = g_enterprise
            AND xmdmdocno = g_xmdk_m.xmdkdocno
            AND xmdmseq = g_xmdl2_d[g_detail_idx].xmdlseq            
         
         IF l_cnt = 1 THEN
            LET g_xmdl_d[l_ac].xmdl013 = 'N'
            
            SELECT xmdm005,xmdm006,xmdm007
              INTO g_xmdl_d[l_ac].xmdl014,
                   g_xmdl_d[l_ac].xmdl015,
                   g_xmdl_d[l_ac].xmdl016
              FROM xmdm_t     
             WHERE xmdment = g_enterprise
               AND xmdmdocno = g_xmdk_m.xmdkdocno
               AND xmdmseq = g_xmdl2_d[g_detail_idx].xmdlseq      
         ELSE
         # by 150305 lori522612 add---(S)   
            UPDATE xmdl_t
               SET xmdl013 = 'Y',
                   xmdl014 = ' ',
                   xmdl015 = ' ',
                   xmdl016 = ' '
             WHERE xmdldocno = g_xmdk_m.xmdkdocno
               AND xmdlseq = g_xmdl2_d[g_detail_idx].xmdlseq
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "UPDATE:"
               LET g_errparam.popup = TRUE
               CALL cl_err()
            
               CALL s_transaction_end('N','0')
               RETURN               
            END IF
         END IF # by 150305 lori522612 add
      END IF   
      CALL s_transaction_end('Y','0')
   END IF                     
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdm_delete" order="71" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除多庫儲批出貨資料
# Memo...........:
# Usage..........: CALL adbt540_xmdm_delete(p_xmdlseq)
#                  RETURNING r_success
# Input parameter: p_xmdlseq   項次
# Return code....: r_success   執行狀態
# Date & Author..: 2014/06/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdm_delete(p_xmdlseq)
   DEFINE p_xmdlseq     LIKE xmdl_t.xmdlseq
   DEFINE r_success     LIKE type_t.num5
   
   LET r_success = TRUE
   
   CALL adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl013)   #出貨單(1),單據單號,項次,是否彈出視窗詢問Y,N
      RETURNING r_success  
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_xmdm_upd" order="71" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 更新多庫儲批資料
# Memo...........:
# Usage..........: CALL adbt540_xmdm_upd(p_xmdlseq)
#                  RETURNING r_success
# Input parameter: p_xmdlseq   項次
#                : 
# Return code....: r_success   執行狀態
#                : 
# Date & Author..: 140327 By earl
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_xmdm_upd(p_xmdlseq)
   DEFINE p_xmdlseq     LIKE xmdl_t.xmdlseq
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_n           LIKE type_t.num5
   
   LET r_success = TRUE

   IF NOT cl_null(p_xmdlseq) AND
      NOT cl_null(g_xmdk_m.xmdkdocno) THEN
   
      #檢查有無多庫儲批資料
      LET l_n = 0
      SELECT COUNT(xmdmseq1) INTO l_n
        FROM xmdm_t
       WHERE xmdment = g_enterprise
         AND xmdmdocno = g_xmdk_m.xmdkdocno
         AND xmdmseq = p_xmdlseq
      
      IF l_n = 0 THEN
         RETURN r_success
      ELSE
         UPDATE xmdm_t
            SET xmdmseq = g_xmdl_d[l_ac].xmdlseq
          WHERE xmdment = g_enterprise
            AND xmdmseq = p_xmdlseq
               
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "xmdm_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success            
         END IF
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_open_adbt540_s01" order="71" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 簽收訂單時開窗維護在途倉
# Usage..........: CALL adbt540_open_adbt540_s01()
# Return Code....: r_success
# Date & Author..: 2014/06/13 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_open_adbt540_s01()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_xmdk039       LIKE xmdk_t.xmdk039
   DEFINE l_xmdk039_desc  STRING
   DEFINE l_xmdk040       LIKE xmdk_t.xmdk040
   DEFINE l_xmdk040_desc  STRING
   
   LET r_success = TRUE
   LET l_xmdk039 = NULL
   LET l_xmdk040 = NULL
   LET l_xmdk039_desc = NULL
   LET l_xmdk040_desc = NULL   
   
   OPEN WINDOW w_adbt540_s01 WITH FORM cl_ap_formpath("adb","adbt540_s01")
   #畫面初始化
   CALL cl_ui_init()
   
   IF NOT cl_null(g_xmdk_m.xmdk039) THEN
      LET l_xmdk039 = g_xmdk_m.xmdk039
      LET l_xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk039)
      DISPLAY l_xmdk039 TO xmdk039
      DISPLAY l_xmdk039_desc TO xmdk039_desc 
   END IF

   IF NOT cl_null(g_xmdk_m.xmdk040) THEN
      LET l_xmdk040 = g_xmdk_m.xmdk040
      LET l_xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk040)
      DISPLAY l_xmdk040 TO xmdk040
      DISPLAY l_xmdk040_desc TO xmdk040_desc 
   END IF
   
   INPUT l_xmdk039,l_xmdk040 FROM xmdk039,xmdk040 ATTRIBUTE(WITHOUT DEFAULTS)
      AFTER FIELD xmdk039
         IF NOT cl_null(l_xmdk039) THEN            
            INITIALIZE g_chkparam.* TO NULL
            LET g_chkparam.arg1 = g_xmdk_m.xmdksite
            LET g_chkparam.arg2 = l_xmdk039
            IF NOT cl_chk_exist("v_inaa001_14") THEN
               LET l_xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk039)
               DISPLAY l_xmdk039_desc TO xmdk039_desc 
               NEXT FIELD xmdk039
            END IF
         END IF
         LET l_xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk039)
         DISPLAY l_xmdk039_desc TO xmdk039_desc 
            
      AFTER FIELD xmdk040
         IF NOT cl_null(l_xmdk040) THEN            
            INITIALIZE g_chkparam.* TO NULL
            LET g_chkparam.arg1 = g_xmdk_m.xmdksite
            LET g_chkparam.arg2 = l_xmdk040
            IF NOT cl_chk_exist("v_inaa001_15") THEN
               LET l_xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk040)
               DISPLAY l_xmdk040_desc TO xmdk040_desc 
               NEXT FIELD xmdk040
            END IF
         END IF
         LET l_xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk040)
         DISPLAY l_xmdk040_desc TO xmdk040_desc 
         
      ON ACTION controlp INFIELD xmdk039
		   INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'i'
		   LET g_qryparam.reqry = FALSE
         LET g_qryparam.default1 = l_xmdk039  
         LET g_qryparam.arg1 = g_xmdk_m.xmdksite
         CALL q_inaa001_18()  
         LET l_xmdk039 = g_qryparam.return1 
         DISPLAY l_xmdk039 TO xmdk039
         LET l_xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk039)
         DISPLAY l_xmdk039_desc TO xmdk039_desc 
         NEXT FIELD xmdk039   
            
      ON ACTION controlp INFIELD xmdk040
		   INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'i'
		   LET g_qryparam.reqry = FALSE
         LET g_qryparam.default1 = l_xmdk040  
         LET g_qryparam.arg1 = g_xmdk_m.xmdksite
         CALL q_inaa001_19()  
         LET l_xmdk040 = g_qryparam.return1 
         DISPLAY l_xmdk040 TO xmdk040
         LET l_xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,l_xmdk040)
         DISPLAY l_xmdk040_desc TO xmdk040_desc 
         NEXT FIELD xmdk040
            
      ON ACTION confirm
         LET INT_FLAG = FALSE
         ACCEPT INPUT
   
      ON ACTION cancel      
         LET INT_FLAG = TRUE
         EXIT INPUT
   
      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT INPUT
   
      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT INPUT              
   END INPUT
   
   IF INT_FLAG THEN
      LET r_success = FALSE
      LET INT_FLAG = FALSE
      CLOSE WINDOW w_adbt540_s01
      RETURN r_success
   END IF
   
   CLOSE WINDOW w_adbt540_s01
   
   UPDATE xmdk_t
      SET xmdk039 = l_xmdk039,
          xmdk040 = l_xmdk040
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = g_xmdk_m.xmdkdocno    
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "FOREACH:s_adbt540_cs8"      #值
      LET g_errparam.code =  SQLCA.sqlcode
      LET g_errparam.popup =  TRUE
      CALL cl_err()      
      RETURN r_success
   END IF   
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_open_adbp580" order="72" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 轉出貨簽收單
# Memo...........:
# Usage..........: CALL adbt540_open_adbp580()
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/06/13 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_open_adbp580()
   DEFINE la_param     RECORD
          prog         STRING,
          param        DYNAMIC ARRAY OF STRING
                       END RECORD
   DEFINE ls_js        STRING
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_str        STRING
   DEFINE l_gentype    LIKE type_t.chr1
   DEFINE l_xmdk001    LIKE xmdk_t.xmdk001
   DEFINE l_cmd        STRING
   
   LET l_cmd = g_xmdk_m.xmdkdocno
   CALL s_transaction_begin()
   CALL s_adbp580_input() RETURNING l_success,l_gentype,l_xmdk001
   IF l_success THEN
      CALL cl_err_collect_init()
      CALL s_adbp580(l_cmd,l_gentype,l_xmdk001) RETURNING l_success,l_str
      IF l_success THEN
         CALL s_transaction_end('Y','1')
         CALL cl_err_collect_show()
         LET la_param.prog = 'adbt580'
         LET la_param.param[1] = ''
         LET la_param.param[2] = l_str
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun(ls_js)
      ELSE
         CALL s_transaction_end('N','1')
         CALL cl_err_collect_show()
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_xmdl008_and_xmdl226" order="73" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得出貨明細的商品編號與商品條碼
# Memo...........:
# Usage..........: CALL adbt540_get_xmdl008_and_xmdl226(p_seq)
#                  RETURNING r_xmdl226,r_xmdl008
# Input parameter: p_seq       出貨明細項次
# Return code....: r_xmdl008   商品編號
#                : r_xmdl226   商品條碼
# Date & Author..: 2014/10/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_xmdl008_and_xmdl226(p_seq)
   DEFINE p_seq       LIKE xmdl_t.xmdlseq 
   DEFINE r_xmdl008   LIKE xmdl_t.xmdl008
   DEFINE r_xmdl226   LIKE xmdl_t.xmdl226
   
   LET r_xmdl008 = ''
   LET r_xmdl226 = '' 
   
   SELECT xmdl226,xmdl008 INTO r_xmdl226,r_xmdl008
     FROM xmdl_t     
    WHERE xmdlent = g_enterprise
      AND xmdldocno = g_xmdk_m.xmdkdocno
      AND xmdlseq = p_seq

   RETURN r_xmdl226,r_xmdl008
END FUNCTION]]>
  </point>
  <point name="function.adbt540_upd_xmdk001" order="74" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 更新扣帳日期
# Memo...........:
# Usage..........: CALL adbt540_upd_xmdk001()
#                  RETURNING r_success
# Return code....: r_success
# Date & Author..: 2015/01/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_upd_xmdk001()
   DEFINE r_success   LIKE type_t.num5
   
   LET r_success = TRUE
   
   UPDATE xmdk_t
      SET xmdk001 = g_xmdk_m.xmdk001
    WHERE xmdkent = g_enterprise
      AND xmdkdocno = g_xmdk_m.xmdkdocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE      
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_cal_amount" order="75" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 計算總金額
# Memo...........:
# Usage..........: CALL adbt540_cal_amount()
#                  RETURNING r_success
# Date & Author..: 2014/10/23 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_cal_amount()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_xrcd103     LIKE xrcd_t.xrcd103
   DEFINE l_xrcd104     LIKE xrcd_t.xrcd104
   DEFINE l_xrcd105     LIKE xrcd_t.xrcd105
   DEFINE l_xrcd113     LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114     LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115     LIKE xrcd_t.xrcd115 
   DEFINE l_xmdk213     LIKE xmdk_t.xmdk213 
   DEFINE l_ooef016     LIKE ooef_t.ooef016   
   
   LET r_success = TRUE
   LET l_xmdk213 = ''
   LET l_ooef016 = ''
   
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_xmdk_m.xmdksite 
   
   CALL s_tax_recount(g_xmdk_m.xmdkdocno)
      RETURNING l_xrcd103,l_xrcd104,l_xrcd105,l_xrcd113,l_xrcd114,l_xrcd115     
   
   LET l_xmdk213 = l_xrcd105 * g_xmdk_m.xmdk017
   CALL s_curr_round(g_xmdk_m.xmdksite,l_ooef016,l_xmdk213,'2') RETURNING l_xmdk213
   
   UPDATE xmdk_t SET xmdk051 = l_xrcd103,
                     xmdk052 = l_xrcd105,
                     xmdk053 = l_xrcd104,
                     xmdk213 = l_xmdk213
    WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno                    
   IF SQLCA.sqlcode THEN          
      LET r_success = FALSE
      
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = 'xmdk_t' 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE
      CALL cl_err() 
   END IF    
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.adbt540_get_inaa014" order="75" ver="3" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取庫位設定-是否允許負庫存
# Memo...........:
# Usage..........: CALL adbt540_get_inaa014(p_inaa001)
#                  RETURNING r_inaa014
# Input parameter: p_inaa001   庫位編號
# Return code....: r_inaa014   是否允許負庫存
# Date & Author..: 2014/09/17 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_get_inaa014(p_inaa001)
   DEFINE p_inaa001   LIKE inaa_t.inaa001
   DEFINE r_inaa014   LIKE inaa_t.inaa014

   LET r_inaa014 = NULL
   
   IF cl_null(p_inaa001) THEN
      RETURN r_inaa014
   END IF
   
   SELECT inaa014 INTO r_inaa014
     FROM inaa_t
    WHERE inaaent = g_enterprise
      AND inaasite = g_xmdk_m.xmdksite
      AND inaa001 = p_inaa001      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "SELECT:inaa014"
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
      
   RETURN r_inaa014
END FUNCTION]]>
  </point>
  <point name="function.adbt540_hold_upd" order="75" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 留置狀態
# Memo...........:
# Usage..........: CALL adbt540_hold_upd(p_type)
#                  RETURNING r_success
# Input parameter: p_type    1.留置  2.取消留置
# Return code....: r_success 執行結果
# Date & Author..: 2015/01/08 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt540_hold_upd(p_type)
   DEFINE p_type        LIKE type_t.chr1
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE

   OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = STATUS
      LET g_errparam.extend = "OPEN adbt540_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE adbt540_cl
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF p_type = '1' THEN  #留置
      INPUT BY NAME g_xmdk_m.xmdk034 ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
            LET g_xmdk_m.xmdkstus = 'H'
            UPDATE xmdk_t 
               SET xmdkstus= g_xmdk_m.xmdkstus
             WHERE xmdkent = g_enterprise 
               AND xmdkdocno = g_xmdk_m.xmdkdocno
            CALL adbt540_show() 
            NEXT FIELD xmdk034   
            
         AFTER FIELD xmdk034
            CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
            DISPLAY BY NAME g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc

            IF NOT cl_null(g_xmdk_m.xmdk034) THEN
               IF g_xmdk_m.xmdk034 <> g_xmdk_m_t.xmdk034 OR cl_null(g_xmdk_m_t.xmdk034) THEN

                  IF NOT s_azzi650_chk_exist('297',g_xmdk_m.xmdk034) THEN
                     LET g_xmdk_m.xmdk034 = g_xmdk_m_o.xmdk034
                     CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
                     DISPLAY BY NAME g_xmdk_m.xmdk034_desc

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            ON ACTION controlp INFIELD xmdk034
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_xmdk_m.xmdk034  #給予default值
               LET g_qryparam.arg1 = "297"

               CALL q_oocq002()                            #呼叫開窗

               LET g_xmdk_m.xmdk034 = g_qryparam.return1   #將開窗取得的值回傳到變數
               DISPLAY g_xmdk_m.xmdk034 TO xmdk034         #顯示到畫面上
               CALL s_desc_get_acc_desc('297',g_xmdk_m.xmdk034) RETURNING g_xmdk_m.xmdk034_desc
               DISPLAY BY NAME g_xmdk_m.xmdk034_desc
               NEXT FIELD xmdk034                          #返回原欄位
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT INPUT
            END IF

            ON ACTION accept
               ACCEPT INPUT

            ON ACTION cancel
               LET INT_FLAG = TRUE
               EXIT INPUT

            ON ACTION exit
               LET INT_FLAG = TRUE
               EXIT INPUT

            ON ACTION close
               LET INT_FLAG = TRUE
               EXIT INPUT

      END INPUT              

      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmdk_m.* = g_xmdk_m_t.*
         CALL adbt540_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 9001
         LET g_errparam.popup  = FALSE
         CALL cl_err()

         CLOSE adbt540_cl
         LET r_success = FALSE
         RETURN r_success
      END IF

      UPDATE xmdk_t 
         SET xmdk034 = g_xmdk_m.xmdk034
       WHERE xmdkent = g_enterprise 
         AND xmdkdocno = g_xmdk_m.xmdkdocno

   ELSE  #取消留置
      UPDATE xmdk_t 
         SET xmdk034 = ''
       WHERE xmdkent = g_enterprise 
         AND xmdkdocno = g_xmdk_m.xmdkdocno
   END IF

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "xmdk_t"
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE
      CALL cl_err()

      CLOSE adbt540_cl
      LET r_success = FALSE
      RETURN r_success
   END IF

   CLOSE adbt540_cl

   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_sql = " 1=1"
      #多庫儲
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdm_t ",
                                                              " WHERE xmdment   = xmdlent ",
                                                              "   AND xmdmdocno = xmdldocno ",
                                                              "   AND xmdmseq   = xmdlseq ",
                                                              "   AND ",g_wc2_table2 CLIPPED,")"
      END IF
      #稅別
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xrcd_t ",
                                                              " WHERE xrcdent   = xmdlent ",
                                                              "   AND xrcddocno = xmdldocno ",
                                                              "   AND xrcdseq   = xmdlseq ",
                                                              "   AND ",g_wc2_table3 CLIPPED,")"
      END IF
      #退款
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtie_t ",
                                                              " WHERE rtieent   = xmdlent ",
                                                              "   AND rtiedocno = xmdldocno ",
                                                              "   AND rtieseq   = xmdlseq ",
                                                              "   AND ",g_wc2_table4 CLIPPED,")"
      END IF
      #折扣
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtic_t ",
                                                              " WHERE rticent   = xmdlent ",
                                                              "   AND rticdocno = xmdldocno ",
                                                              "   AND rticseq   = xmdlseq ",
                                                              "   AND ",g_wc2_table5 CLIPPED,")"
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF                                                          ]]>
  </point>
  <point name="b_fill.body2.fill_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdl_t ",
                                                              " WHERE xmdlent   = xmdment ",
                                                              "   AND xmdldocno = xmdmdocno ",
                                                              "   AND xmdlseq   = xmdmseq ",
                                                              "   AND ",g_wc2_table1 CLIPPED,")"
      END IF
      #稅別
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xrcd_t ",
                                                              " WHERE xrcdent   = xmdment ",
                                                              "   AND xrcddocno = xmdmdocno ",
                                                              "   AND xrcdseq   = xmdmseq ",
                                                              "   AND ",g_wc2_table3 CLIPPED,")"
      END IF
      #退款
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtie_t ",
                                                              " WHERE rtieent   = xmdment ",
                                                              "   AND rtiedocno = xmdmdocno ",
                                                              "   AND rtieseq   = xmdmseq ",
                                                              "   AND ",g_wc2_table4 CLIPPED,")"
      END IF
      #折扣
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtic_t ",
                                                              " WHERE rticent   = xmdment ",
                                                              "   AND rticdocno = xmdmdocno ",
                                                              "   AND rticseq   = xmdmseq ",
                                                              "   AND ",g_wc2_table5 CLIPPED,")"
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF                                              ]]>
  </point>
  <point name="b_fill.body3.fill_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdl_t ",
                                                              " WHERE xmdlent   = xrcdent ",
                                                              "   AND xmdldocno = xrcddocno ",
                                                              "   AND xmdlseq   = xrcdseq ",
                                                              "   AND ",g_wc2_table1 CLIPPED,")"
      END IF
      #多庫儲
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdm_t ",
                                                              " WHERE xmdment   = xrcdent ",
                                                              "   AND xmdmdocno = xrcddocno ",
                                                              "   AND xmdmseq   = xrcdseq ",
                                                              "   AND ",g_wc2_table2 CLIPPED,")"
      END IF
      #退款
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtie_t ",
                                                              " WHERE rtieent   = xrcdent ",
                                                              "   AND rtiedocno = xrcddocno ",
                                                              "   AND rtieseq   = xrcdseq ",
                                                              "   AND ",g_wc2_table4 CLIPPED,")"
      END IF
      #折扣
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtic_t ",
                                                              " WHERE rticent   = xrcdent ",
                                                              "   AND rticdocno = xrcddocno ",
                                                              "   AND rticseq   = xrcdseq ",
                                                              "   AND ",g_wc2_table5 CLIPPED,")"
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF      ]]>
  </point>
  <point name="b_fill.body4.fill_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdl_t ",
                                                              " WHERE xmdlent   = rtieent ",
                                                              "   AND xmdldocno = rtiedocno ",
                                                              "   AND xmdlseq   = rtieseq ",
                                                              "   AND ",g_wc2_table1 CLIPPED,")"
      END IF
      #多庫儲
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdm_t ",
                                                              " WHERE xmdment   = rtieent ",
                                                              "   AND xmdmdocno = rtiedocno ",
                                                              "   AND xmdmseq   = rtieseq ",
                                                              "   AND ",g_wc2_table2 CLIPPED,")"
      END IF
      #稅別
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xrcd_t ",
                                                              " WHERE xrcdent   = rtieent ",
                                                              "   AND xrcddocno = rtiedocno ",
                                                              "   AND xrcdseq   = rtieseq ",
                                                              "   AND ",g_wc2_table3 CLIPPED,")"
      END IF
      #折扣
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtic_t ",
                                                              " WHERE rticent   = rtieent ",
                                                              "   AND rticdocno = rtiedocno ",
                                                              "   AND rticseq   = rtieseq ",
                                                              "   AND ",g_wc2_table5 CLIPPED,")"
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF      ]]>
  </point>
  <point name="b_fill.body5.fill_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdl_t ",
                                                              " WHERE xmdlent   = rticent ",
                                                              "   AND xmdldocno = rticdocno ",
                                                              "   AND xmdlseq   = rticseq ",
                                                              "   AND ",g_wc2_table1 CLIPPED,")"
      END IF
      #多庫儲
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xmdm_t ",
                                                              " WHERE xmdment   = rticent ",
                                                              "   AND xmdmdocno = rticdocno ",
                                                              "   AND xmdmseq   = rticseq ",
                                                              "   AND ",g_wc2_table2 CLIPPED,")"
      END IF
      #稅別
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM xrcd_t ",
                                                              " WHERE xrcdent   = rticent ",
                                                              "   AND xrcddocno = rticdocno ",
                                                              "   AND xrcdseq   = rticseq ",
                                                              "   AND ",g_wc2_table3 CLIPPED,")"
      END IF
      #退款
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED," AND EXISTS (SELECT 1 FROM rtie_t ",
                                                              " WHERE rtieent   = rticent ",
                                                              "   AND rtiedocno = rticdocno ",
                                                              "   AND rtieseq   = rticseq ",
                                                              "   AND ",g_wc2_table4 CLIPPED,")"
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF      ]]>
  </point>
  <point name="b_fill.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_sql      STRING                       ]]>
  </point>
  <point name="b_fill.fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL adbt540_xmdl_ref()
         CALL adbt540_xmdl2_ref()
         CALL adbt540_xmdl3_ref()
         CALL adbt540_xmdl6_ref()        ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="b_fill.sql2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="b_fill.sql3" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #折扣
   #LET l_sql = "SELECT xmdl226,xmdl008,imaal003,imaal004,xmdl021,",
   #            "       oocal003,xmdl022,xmdl208,xmdl209,xmdl210,",
   #            "       xmdl028",
   #            "  FROM xmdl_t",
   #            "  LEFT OUTER JOIN imaal_t ON imaalent = xmdlent AND imaal001 = xmdl008 AND imaal002 = '",g_dlang,"'",
   #            "  LEFT OUTER JOIN oocal_t ON oocalent = xmdlent AND oocal001 = xmdl021 AND oocal002 = '",g_dlang,"'",
   #            " WHERE xmdlent = ",g_enterprise,
   #            "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'",
   #            "   AND xmdlseq = ?"
   #PREPARE adbt540_detail_pre1 FROM l_sql     ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="b_fill2.fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL adbt540_xmdl3_ref()                                                                                    ]]>
  </point>
  <point name="b_fill3.fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL adbt540_xmdl4_ref()]]>
  </point>
  <point name="b_fill4.fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL adbt540_xmdl5_ref()]]>
  </point>
  <point name="b_fill5.fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         ##折扣
         #EXECUTE adbt540_detail_pre1 USING g_xmdl7_d[l_ac].rticseq
         #   INTO g_xmdl7_d[l_ac].xmdl2265,g_xmdl7_d[l_ac].xmdl0085,
         #        g_xmdl7_d[l_ac].xmdl0085_desc,
         #        g_xmdl7_d[l_ac].xmdl0085_desc_1,
         #        g_xmdl7_d[l_ac].xmdl0215,
         #        g_xmdl7_d[l_ac].xmdl0215_desc,
         #        g_xmdl7_d[l_ac].xmdl0225,g_xmdl7_d[l_ac].xmdl2085,
         #        g_xmdl7_d[l_ac].xmdl2095,g_xmdl7_d[l_ac].xmdl2105,
         #        g_xmdl7_d[l_ac].xmdl0285
         CALL adbt540_xmdl7_ref()]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'xmdksite') RETURNING l_where]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   ##過濾g_site
   #CASE 
   #   WHEN g_argv[1] MATCHES "[12]"
   #      LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
   #                       " AND xmdk000 = '1' "
   #      IF NOT cl_null(g_argv[2]) THEN
   #         LET l_wc = l_wc," AND ",g_argv[2]
   #      END IF         
   #   WHEN #無訂單出貨
   #      LET l_wc = l_wc, " AND xmdksite = '",g_site,"'",
   #                       " AND xmdk000 = '2'"
   #END CASE
]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="browser_fill.cnt_sqlwc" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = g_wc , "xmdk000 = '1' "
   CASE g_argv[1]
      WHEN '1'
         LET l_sub_sql = l_sub_sql, " AND xmdk002 IN('1','2','3','6')"
      WHEN '2'
         LET l_sub_sql = l_sub_sql, " AND xmdk002 ='7'"
   END CASE
   
   LET l_sub_sql = l_sub_sql," AND ", l_where]]>
  </point>
  <point name="browser_fill.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING                        ]]>
  </point>
  <point name="browser_fill.fill_sqlwc" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CASE g_argv[1]
      WHEN '1'
         LET g_sql = g_sql, " AND xmdk002 IN('1','2','3','6')"
      WHEN '2'
         LET g_sql = g_sql, " AND xmdk002 ='7'"
   END CASE
   LET g_sql = g_sql , "AND xmdk000 = '1' "
   
   LET g_sql = g_sql," AND ", l_where]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="construct.a.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdkpstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.a.xmdksite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                      ]]>
  </point>
  <point name="construct.a.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkcnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkcrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkmoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkpstdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkpstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdksite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.b.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = g_site
            CALL q_xmdgdocno_3()                   #呼叫開窗                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO xmdg028 #預計出貨日期 

            NEXT FIELD xmdl001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl003" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_site
			   LET g_qryparam.arg2 = '9'              #銷售組織
			   LET g_qryparam.arg3 = g_site
            CALL q_xmdadocno_4()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl003  #顯示到畫面上

            NEXT FIELD xmdl003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl008  #顯示到畫面上

            NEXT FIELD xmdl008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdl009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			
			LET g_qryparam.arg1 = '221'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl011  #顯示到畫面上

            NEXT FIELD xmdl011                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl014" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site   
            CALL q_inaa001_4()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl014  #顯示到畫面上

            NEXT FIELD xmdl014                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl015" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " inabsite = '",g_site,"' "
            CALL q_inab002_11()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl015  #顯示到畫面上

            NEXT FIELD xmdl015                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl016" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c'
			   #LET g_qryparam.reqry = FALSE
			   #
            #CALL q_inag006()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xmdl016  #顯示到畫面上
            #
            #NEXT FIELD xmdl016                     #返回原欄位                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl017  #顯示到畫面上

            NEXT FIELD xmdl017                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl019  #顯示到畫面上

            NEXT FIELD xmdl019                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl021  #顯示到畫面上

            NEXT FIELD xmdl021                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl033  #顯示到畫面上

            NEXT FIELD xmdl033                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl050" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段 
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_acc24_gzcb004
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl050  #顯示到畫面上
            NEXT FIELD xmdl050                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdl052" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c' 
            #LET g_qryparam.reqry = FALSE
            #CALL q_inag003()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xmdl052  #顯示到畫面上
            #NEXT FIELD xmdl052 ]]>
  </point>
  <point name="construct.c.page1.xmdl204" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl204  #顯示到畫面上
            
            NEXT FIELD xmdl204                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.xmdl222" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl222  #顯示到畫面上
            NEXT FIELD xmdl222                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmdl223" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl223  #顯示到畫面上
            NEXT FIELD xmdl223                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmdl224" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl224  #顯示到畫面上
            NEXT FIELD xmdl224                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmdl225" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl225  #顯示到畫面上
            NEXT FIELD xmdl225                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmdl226" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl226  #顯示到畫面上
            NEXT FIELD xmdl226                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl0081" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl0081  #顯示到畫面上
            NEXT FIELD xmdl0081                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_site
            CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl025  #顯示到畫面上

            NEXT FIELD xmdl025                     #返回原欄位                                                                                                ]]>
  </point>
  <point name="construct.c.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm001  #顯示到畫面上 

            NEXT FIELD xmdm001                     #返回原欄位                        ]]>
  </point>
  <point name="construct.c.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   CASE 
			      WHEN g_argv[1] MATCHES "[12]"
			         LET g_qryparam.arg1 = '1'
			      #WHEN   #無訂單
			      #   LET g_qryparam.arg1 = '2'
			   END CASE			   
            CALL q_xmdm002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm002  #顯示到畫面上 

            NEXT FIELD xmdm002                     #返回原欄位                                                                                                                ]]>
  </point>
  <point name="construct.c.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_inag004_2()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm005  #顯示到畫面上 

            NEXT FIELD xmdm005                     #返回原欄位                                                                                                                ]]>
  </point>
  <point name="construct.c.page3.xmdm006" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " inabsite = '",g_site,"' "
            CALL q_inab002_11()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm006  #顯示到畫面上 

            NEXT FIELD xmdm006                     #返回原欄位                                                                                                                 ]]>
  </point>
  <point name="construct.c.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                  #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm008  #顯示到畫面上 

            NEXT FIELD xmdm008                     #返回原欄位                                                                                                                ]]>
  </point>
  <point name="construct.c.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                  #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdm010  #顯示到畫面上 

            NEXT FIELD xmdm010                     #返回原欄位                                                                                                              ]]>
  </point>
  <point name="construct.c.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdm033" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c' 
            #LET g_qryparam.reqry = FALSE
            #CALL q_inag003()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xmdm033  #顯示到畫面上
            #NEXT FIELD xmdm033                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.page4.xmdl0082" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl0082  #顯示到畫面上
            NEXT FIELD xmdl0082                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.xmdl2262" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl2262  #顯示到畫面上
            NEXT FIELD xmdl2262                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.xmja0022" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja0022  #顯示到畫面上
            NEXT FIELD xmja0022                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.xrcd002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xrcd002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrcd002  #顯示到畫面上
            NEXT FIELD xrcd002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page5.rtie002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtie002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtie002  #顯示到畫面上
            NEXT FIELD rtie002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page5.xmdl0083" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl0083  #顯示到畫面上
            NEXT FIELD xmdl0083                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page5.xmdl2263" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl2263  #顯示到畫面上
            NEXT FIELD xmdl2263                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page5.xmja0023" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja0023  #顯示到畫面上
            NEXT FIELD xmja0023                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmdl0084" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl0084  #顯示到畫面上
            NEXT FIELD xmdl0084                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmdl200" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl200  #顯示到畫面上

            NEXT FIELD xmdl200                     #返回原欄位   ]]>
  </point>
  <point name="construct.c.page6.xmdl201" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl201  #顯示到畫面上

            NEXT FIELD xmdl201                     #返回原欄位   ]]>
  </point>
  <point name="construct.c.page6.xmdl202" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl202  #顯示到畫面上

            NEXT FIELD xmdl202                     #返回原欄位  ]]>
  </point>
  <point name="construct.c.page6.xmdl203" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " ooef305 = 'Y' "
            CALL q_ooef001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl203  #顯示到畫面上

            NEXT FIELD xmdl2023]]>
  </point>
  <point name="construct.c.page6.xmdl212" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   IF s_aooi500_setpoint(g_prog,'xmdl212') THEN
			      LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdl212',g_site,'c')  #150308-00001#4 150309 by lori522612 add 'c'
               CALL q_ooef001_24()
			   ELSE			   
			      LET g_qryparam.arg1 = g_site
			      LET g_qryparam.arg2 = '9'
               CALL q_ooed004_3()                       #呼叫開窗
            END IF
            DISPLAY g_qryparam.return1 TO xmdl212  #顯示到畫面上
            
            NEXT FIELD xmdl212                     #返回原欄位              ]]>
  </point>
  <point name="construct.c.page6.xmdl213" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl213  #顯示到畫面上
            NEXT FIELD xmdl213                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmdl214" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl214  #顯示到畫面上
            NEXT FIELD xmdl214                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmdl217" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'A'
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl217  #顯示到畫面上
            NEXT FIELD xmdl217                     #返回原欄位]]>
  </point>
  <point name="construct.c.page6.xmdl2264" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdl2264  #顯示到畫面上
            NEXT FIELD xmdl2264                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.xmdlorga" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef201 = 'Y'  "
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdlorga  #顯示到畫面上
            NEXT FIELD xmdlorga                     #返回原欄位]]>
  </point>
  <point name="construct.c.page6.xmja002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja002  #顯示到畫面上
            NEXT FIELD xmja002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xmda026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '5'
			   CALL q_oofb019_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda026  #顯示到畫面上
            NEXT FIELD xmda026                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk003  #顯示到畫面上
            NEXT FIELD xmdk003                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk004  #顯示到畫面上
            NEXT FIELD xmdk004                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = g_site
            CALL q_xmdgdocno_3()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk005  #顯示到畫面上
            NEXT FIELD xmdk005                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk006" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_site
			   LET g_qryparam.arg2 = '9'              #銷售組織
			   LET g_qryparam.arg3 = g_site
            CALL q_xmdadocno_4()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk006  #顯示到畫面上
            NEXT FIELD xmdk006                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk007" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = 'ALL'
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk007  #顯示到畫面上
            NEXT FIELD xmdk007                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[          
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk008  #顯示到畫面上
            NEXT FIELD xmdk008                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk009  #顯示到畫面上
            NEXT FIELD xmdk009                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE			
            CALL q_pmad002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk010  #顯示到畫面上
            NEXT FIELD xmdk010                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk011  #顯示到畫面上
            NEXT FIELD xmdk011                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_xmdk_m.xmdksite
			   CALL q_oodb002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk012  #顯示到畫面上
            NEXT FIELD xmdk012                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE			   
			   LET g_qryparam.arg1 = g_ooef019  #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項
            CALL q_isac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk015  #顯示到畫面上
            NEXT FIELD xmdk015                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE			
			   LET g_qryparam.arg1 = g_xmdk_m.xmdksite			
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk016  #顯示到畫面上
            NEXT FIELD xmdk016                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk018  #顯示到畫面上

            NEXT FIELD xmdk018                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooid001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk019  #顯示到畫面上

            NEXT FIELD xmdk019                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk020  #顯示到畫面上

            NEXT FIELD xmdk020                     #返回原欄位
]]>
  </point>
  <point name="construct.c.xmdk021" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE			
			   LET g_qryparam.where = " oofb008 = '3' "   #限送貨地址
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk021  #顯示到畫面上
            NEXT FIELD xmdk021                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			
			LET g_qryparam.arg1 = '263'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk022  #顯示到畫面上

            NEXT FIELD xmdk022                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗c段   
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			
			CASE 
			   WHEN g_argv[1] MATCHES "[12]"
			      LET g_qryparam.arg1 = '1'
			   #WHEN   #無訂單出貨
			   #   LET g_qryparam.arg1 = '2'
			END CASE
			
            CALL q_xmdk023()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk023  #顯示到畫面上

            NEXT FIELD xmdk023                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #開窗c段   
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			
			CASE 
			   WHEN g_argv[1] MATCHES "[12]"
			      LET g_qryparam.arg1 = '1'
			   #WHEN   #無訂單出貨
			   #   LET g_qryparam.arg1 = '2'
			END CASE
			
            CALL q_xmdk024()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk024  #顯示到畫面上

            NEXT FIELD xmdk024                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk030  #顯示到畫面上
            NEXT FIELD xmdk030                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = "295"			   
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk031  #顯示到畫面上
            NEXT FIELD xmdk031                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '209'			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk033  #顯示到畫面上
            NEXT FIELD xmdk033                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '297'
			   CALL q_oocq002()                       #呼叫開窗            
            DISPLAY g_qryparam.return1 TO xmdk034  #顯示到畫面上
            NEXT FIELD xmdk034                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			
			LET g_qryparam.arg1 = '299'
			
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk038  #顯示到畫面上

            NEXT FIELD xmdk038                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdk039" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "inaa010 = 'Y' "
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            CALL q_inaa001_18()                               #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk039  #顯示到畫面上
            NEXT FIELD xmdk039                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk040" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "inaa010 = 'N' "
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            CALL q_inaa001_19()                               #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk040  #顯示到畫面上
            NEXT FIELD xmdk040                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdk200" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_20()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk200  #顯示到畫面上
            NEXT FIELD xmdk200                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk201" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk201  #顯示到畫面上
            NEXT FIELD xmdk201                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk202" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #LET g_qryparam.arg1 = g_xmdk_m.xmdk202
            #LET g_qryparam.arg2 = '3'
            #CALL q_pmac002_9()                    #呼叫開窗
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_7()
            
            DISPLAY g_qryparam.return1 TO xmdk202  #顯示到畫面上
            NEXT FIELD xmdk202                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk205" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk205  #顯示到畫面上
            NEXT FIELD xmdk205                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk206" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdk206  #顯示到畫面上
            NEXT FIELD xmdk206                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdk207" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            IF s_aooi500_setpoint(g_prog,'xmdk207') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdk207',g_site,'c')  #150308-00001#4 150309 by lori522612 add 'c'
               CALL q_ooef001_24()
            ELSE                
               LET g_qryparam.arg1 = g_site
               LET g_qryparam.arg2 = '9'
               CALL q_ooed004()                           #呼叫開窗
            END IF
            DISPLAY g_qryparam.return1 TO xmdk207  #顯示到畫面上
            NEXT FIELD xmdk207                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdkcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcnfid  #顯示到畫面上

            NEXT FIELD xmdkcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtdp  #顯示到畫面上

            NEXT FIELD xmdkcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkcrtid  #顯示到畫面上

            NEXT FIELD xmdkcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="construct.c.xmdkdocno" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			
			   CASE 
			      WHEN g_argv[1] MATCHES "[12]"
			         LET g_qryparam.arg1 = '1'
			      #WHEN   #無訂單出貨
			      #   LET g_qryparam.arg1 = '2'
			   END CASE
			   IF g_argv[1] = '1' THEN
			      LET g_qryparam.where = " xmdk002 <> '7' "
			   ELSE
               LET g_qryparam.where = " xmdk002 = '7' "			   
			   END IF
            CALL q_xmdkdocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkdocno  #顯示到畫面上
            NEXT FIELD xmdkdocno                     #返回原欄位]]>
  </point>
  <point name="construct.c.xmdkmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkmodid  #顯示到畫面上

            NEXT FIELD xmdkmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkowndp  #顯示到畫面上

            NEXT FIELD xmdkowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkownid  #顯示到畫面上

            NEXT FIELD xmdkownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdkpstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdkpstid  #顯示到畫面上

            NEXT FIELD xmdkpstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xmdksite" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdksite',g_xmdk_m.xmdksite,'c')   #150308-00001#4 150309 by lori522612 add 'c'
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdksite  #顯示到畫面上
            NEXT FIELD xmdksite                     #返回原欄位            ]]>
  </point>
  <point name="construct.c.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_ooef019) THEN
      IF NOT cl_null(g_xmdk_m.xmdksite) THEN
         CALL s_tax_get_ooef019(g_xmdk_m.xmdksite) RETURNING l_success,g_ooef019
      ELSE
         CALL s_tax_get_ooef019(g_site) RETURNING l_success,g_ooef019
      END IF      
   END IF   ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5   ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="default_search.after" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   
   CASE g_argv[01]
      WHEN '1'
         LET g_wc = g_wc,"AND xmdk002 IN ('1','2','3','6') "
      WHEN '2'
         LET g_wc = g_wc,"AND xmdk002 = '7' "
   END CASE 

   IF NOT cl_null(g_argv[02]) THEN   
      LET g_wc = g_wc," AND ",g_argv[02]
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
   END IF]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="delete.before_ask" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = ''
   LET l_xmdl216 = s_adbt540_get_business_model(g_xmdk_m.xmdkdocno)
   IF g_xmdk_m.xmdk002 <> '3' AND (l_xmdl216 <> '13' OR cl_null(l_xmdl216)) THEN
      CALL s_pay_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END IF]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_adb_tax_delete(g_xmdk_m.xmdkdocno,'','1')
         RETURNING l_success
      IF l_success = FALSE THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF                                                      ]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.body.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.body.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success       LIKE type_t.num5      
   DEFINE l_xmdl216        LIKE xmdl_t.xmdl216   ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF   ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise 
         AND xmdmdocno = ps_keys_bak[1] 
         AND xmdmseq = ps_keys_bak[2] 
         AND xmdmseq1 = ps_keys_bak[3]      
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise
         AND rtiedocno = ps_keys_bak[1]
         AND rtieseq = ps_keys_bak[2]
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise
         AND xrcddocno = ps_keys_bak[1]
         AND xrcdseq = ps_keys_bak[2]      
      #折扣
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise
         AND rticdocno = ps_keys_bak[1]
         AND rticseq = ps_keys_bak[2]                                                      ]]>
  </point>
  <point name="delete_b.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.body.table2.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="fetch.after" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤
   CALL adbt540_set_act_visible()
   CALL adbt540_set_act_no_visible()
   CALL adbt540_set_visible()      ]]>
  </point>
  <point name="fetch.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_current_idx_t LIKE type_t.num10

   LET l_current_idx_t = g_current_idx                           ]]>
  </point>
  <point name="fill_chk.after_chk" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF (NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table5) AND g_wc2_table5.trim() <> '1=1') THEN
      RETURN TRUE
   END IF]]>
  </point>
  <point name="fill_chk.before_chk" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="global.argv" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#argv[1]   type_t.chr10        #作業類型
#argv[2]   STRING              #外部參數,批次拋轉候傳入查詢的單號,為SQL字串
#argv[3]   xmdk_t.xmdkdocno    #單號]]>
  </point>
  <point name="global.variable" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE type_source_master  RECORD
     doc_stus  LIKE xmdk_t.xmdkstus,  
     xmdk002   LIKE xmdk_t.xmdk002,   #出貨性質
     xmdk006   LIKE xmdk_t.xmdk006,   #訂單單號
     xmdk007   LIKE xmdk_t.xmdk007,   #客戶編號
     xmdk008   LIKE xmdk_t.xmdk008,   #收款客戶
     xmdk009   LIKE xmdk_t.xmdk009,   #收貨客戶
     xmdk010   LIKE xmdk_t.xmdk010,   #收款條件
     xmdk011   LIKE xmdk_t.xmdk011,   #交易條件
     xmdk012   LIKE xmdk_t.xmdk012,   #稅別
     xmdk013   LIKE xmdk_t.xmdk013,   #稅率
     xmdk014   LIKE xmdk_t.xmdk014,   #單價含稅否
     xmdk015   LIKE xmdk_t.xmdk015,   #發票類型
     xmdk016   LIKE xmdk_t.xmdk016,   #幣別
     xmdk017   LIKE xmdk_t.xmdk017,   #匯率
     xmdk018   LIKE xmdk_t.xmdk018,   #取價方式
     xmdk019   LIKE xmdk_t.xmdk019,   #優惠條件
     xmdk020   LIKE xmdk_t.xmdk020,   #送貨供應商
     xmdk021   LIKE xmdk_t.xmdk021,   #送貨地址
     xmdk022   LIKE xmdk_t.xmdk022,   #運輸方式
     xmdk023   LIKE xmdk_t.xmdk023,   #交運起點
     xmdk024   LIKE xmdk_t.xmdk024,   #交運終點
     xmdk025   LIKE xmdk_t.xmdk025,   #航次/航班/車號
     xmdk026   LIKE xmdk_t.xmdk026,   #起運日期
     xmdk027   LIKE xmdk_t.xmdk027,   #嘜頭編號
     xmdk028   LIKE xmdk_t.xmdk028,   #包裝單製作
     xmdk029   LIKE xmdk_t.xmdk029,   #Invoice
     xmdk030   LIKE xmdk_t.xmdk030,   #銷貨渠道 
     xmdk031   LIKE xmdk_t.xmdk031,   #銷售分類
     xmdk033   LIKE xmdk_t.xmdk033,   #額外品名規格
     xmdk034   LIKE xmdk_t.xmdk034,   #留置原因
     xmdk054   LIKE xmdk_t.xmdk054,   #備註
     xmdk083   LIKE xmdk_t.xmdk083,   #多角貿易已拋轉
     xmdk200   LIKE xmdk_t.xmdk200,   #調貨經銷商編號
     xmdk201   LIKE xmdk_t.xmdk201,   #代送商編號
     xmdk202   LIKE xmdk_t.xmdk202,   #發票客戶
     xmdk203   LIKE xmdk_t.xmdk203,   #促銷方案編號
     xmdk204   LIKE xmdk_t.xmdk204,   #整單折扣
     xmdk205   LIKE xmdk_t.xmdk205,   #送貨站點編號
     xmdk206   LIKE xmdk_t.xmdk206,   #運輸路線編號
     xmdk207   LIKE xmdk_t.xmdk207,   #銷售組織
     xmdk214   LIKE xmdk_t.xmdk213,   #收款完成否
     xmdksite  LIKE xmdk_t.xmdksite,  #發貨組織     
     xmda026   LIKE xmda_t.xmda026    #帳款地址
                         END RECORD

TYPE type_source_detail  RECORD                      
     xmdl001   LIKE xmdl_t.xmdl001,   #出通單號
     xmdl002	LIKE xmdl_t.xmdl002,   #出通項次
     xmdl003	LIKE xmdl_t.xmdl003,   #訂單單號
     xmdl004	LIKE xmdl_t.xmdl004,   #訂單項次
     xmdl005	LIKE xmdl_t.xmdl005,   #訂單項序
     xmdl006	LIKE xmdl_t.xmdl006,   #訂單分批序
     xmdl007	LIKE xmdl_t.xmdl007,   #子件特性
     xmdl008	LIKE xmdl_t.xmdl008,   #料件編號
     xmdl009	LIKE xmdl_t.xmdl009,   #產品特徵
     xmdl010	LIKE xmdl_t.xmdl010,   #包裝容器
     xmdl011	LIKE xmdl_t.xmdl011,   #作業編號
     xmdl012	LIKE xmdl_t.xmdl012,   #製程序
     xmdl013	LIKE xmdl_t.xmdl013,   #多庫儲批出貨
     xmdl014	LIKE xmdl_t.xmdl014,   #庫位
     xmdl015	LIKE xmdl_t.xmdl015,   #儲位
     xmdl016	LIKE xmdl_t.xmdl016,   #批號
     xmdl017	LIKE xmdl_t.xmdl017,   #出貨單位
     xmdl018	LIKE xmdl_t.xmdl018,   #數量
     xmdl019	LIKE xmdl_t.xmdl019,   #參考單位
     xmdl020	LIKE xmdl_t.xmdl020,   #參考數量
     xmdl021	LIKE xmdl_t.xmdl021,   #計價單位
     xmdl022	LIKE xmdl_t.xmdl022,   #計價數量
     xmdl023	LIKE xmdl_t.xmdl023,   #檢驗否
     xmdl024	LIKE xmdl_t.xmdl024,   #單價
     xmdl025	LIKE xmdl_t.xmdl025,   #稅別
     xmdl026	LIKE xmdl_t.xmdl026,   #稅率
     xmdl027	LIKE xmdl_t.xmdl027,   #未稅金額
     xmdl028	LIKE xmdl_t.xmdl028,   #含稅金額
     xmdl029	LIKE xmdl_t.xmdl029,   #稅額
     xmdl030	LIKE xmdl_t.xmdl030,   #專案編號
     xmdl031	LIKE xmdl_t.xmdl031,   #WBS編號
     xmdl032	LIKE xmdl_t.xmdl032,   #活動代號
     xmdl033	LIKE xmdl_t.xmdl033,   #客戶料號
     xmdl034	LIKE xmdl_t.xmdl034,   #QPA
     xmdl037	LIKE xmdl_t.xmdl037,   #已銷退量
     xmdl041	LIKE xmdl_t.xmdl041,   #保稅否
     xmdl042	LIKE xmdl_t.xmdl042,   #取價來源
     xmdl043	LIKE xmdl_t.xmdl043,   #價格來源參考單號
     xmdl044	LIKE xmdl_t.xmdl044,   #價格來源參考項次
     xmdl045	LIKE xmdl_t.xmdl045,   #取出價格
     xmdl046	LIKE xmdl_t.xmdl046,   #價差比
     xmdl050	LIKE xmdl_t.xmdl050,   #理由碼
     xmdl051	LIKE xmdl_t.xmdl051,   #備註
     xmdl052   LIKE xmdl_t.xmdl052,   #庫存管理特徵
     xmdl087	LIKE xmdl_t.xmdl087,   #需自立應收否
     xmdl088	LIKE xmdl_t.xmdl088,   #多角流程代碼
     xmdl200	LIKE xmdl_t.xmdl200,   #銷售渠道
     xmdl201	LIKE xmdl_t.xmdl201,   #產品組編碼
     xmdl202	LIKE xmdl_t.xmdl202,   #銷售範圍編碼
     xmdl203	LIKE xmdl_t.xmdl203,   #銷售辦公室
     xmdl204	LIKE xmdl_t.xmdl204,   #出貨包裝單位
     xmdl205	LIKE xmdl_t.xmdl205,   #出貨包裝數量
     xmdl207	LIKE xmdl_t.xmdl207,   #庫存鎖定等級
     xmdl208	LIKE xmdl_t.xmdl208,   #標準價
     xmdl209	LIKE xmdl_t.xmdl209,   #促銷價
     xmdl210	LIKE xmdl_t.xmdl210,   #交易價
     xmdl211	LIKE xmdl_t.xmdl211,   #折價金額
     xmdl212	LIKE xmdl_t.xmdl212,   #銷售組織
     xmdl213	LIKE xmdl_t.xmdl213,   #銷售人員
     xmdl214	LIKE xmdl_t.xmdl214,   #銷售部門
     xmdl215	LIKE xmdl_t.xmdl215,   #合約編號
     xmdl216	LIKE xmdl_t.xmdl216,   #經營方式
     xmdl217	LIKE xmdl_t.xmdl217,   #結算類型
     xmdl218	LIKE xmdl_t.xmdl218,   #結算方式
     xmdl219	LIKE xmdl_t.xmdl219,   #交易類型
     xmdl220   LIKE xmdl_t.xmdl220,   #寄銷已核銷數量
     xmdl222   LIKE xmdl_t.xmdl222,   #地區編號
     xmdl223   LIKE xmdl_t.xmdl223,   #縣市編號
     xmdl224   LIKE xmdl_t.xmdl224,   #省區編號
     xmdl225   LIKE xmdl_t.xmdl225,   #區域編號
     xmdl226   LIKE xmdl_t.xmdl226,   #商品條碼
     xmdlsite  LIKE xmdk_t.xmdksite,  #發貨組織,單身可能與單頭不同
     xmdlunit  LIKE xmdl_t.xmdlunit,  #應用組織
     xmdlorga	LIKE xmdl_t.xmdlorga,  #帳務組織     
     xmdc022   LIKE xmdc_t.xmdc022,   #部分交貨 
     xmdk009   LIKE xmdk_t.xmdk009,   #收貨客戶,單身可能與單頭不同
     xmdk021   LIKE xmdk_t.xmdk021,   #送貨地址,單身可能與單頭不同
     xmdk207   LIKE xmdk_t.xmdk207    #銷售組織,單身可能與單頭不同
                         END RECORD
     
DEFINE g_oodbl004             LIKE oodbl_t.oodbl004    #稅別名稱
DEFINE g_oodb005              LIKE oodb_t.oodb005      #含稅否
DEFINE g_oodb006              LIKE oodb_t.oodb006      #稅率
DEFINE g_oodb011              LIKE oodb_t.oodb011      #稅別應用(1.依料建設定2.正常稅率)
DEFINE g_slip_para            STRING               #紀錄出貨單號參數(D-BAS-0062)值
DEFINE g_slip_para_t          STRING               #紀錄出貨單號參數(D-BAS-0062)值
DEFINE g_xmdl087_def          LIKE xmdl_t.xmdl087  #須自立應收否預設值,依出貨性質
DEFINE g_acc24_gzcb004        LIKE gzcb_t.gzcb004
DEFINE g_ooef019              LIKE ooef_t.ooef019  #稅區
DEFINE g_slip_xmdl216         LIKE xmdl_t.xmdl216  #本單據的經營方式
DEFINE g_mutil_inv            LIKE type_t.chr5     #多庫儲批處理單據類型
DEFINE g_master_t             type_source_master   #單頭取來源資料時備份, 作為後續判斷
DEFINE g_detail_t             type_source_detail   #單身取來源資料時備份, 作為後續判斷
DEFINE g_ins_site_flag        LIKE type_t.chr1              #紀錄dbeasite 有無輸入資料, 作為欄位entry控制判斷
DEFINE g_ins_docno_flag       LIKE type_t.chr1              #紀錄dbeadocno 有無輸入資料, 作為欄位entry控制判斷 ]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="init.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5                        ]]>
  </point>
  <point name="init.init" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   
   CALL cl_set_combo_scc_part('xmdkstus','13','N,X,Y,S,A,D,R,W,H')
   CASE g_argv[1] 
      WHEN "1"
         CALL cl_set_combo_scc_part('xmdk002','2063','1,2,3,6')
      WHEN "2"
         CALL cl_set_combo_scc_part('xmdk002','2063','7')
   END CASE
   CALL cl_set_combo_scc_part('xmdl007','2055','1,2,3,9') 
   CALL cl_set_combo_scc_part('xmdl0071','2055','1,2,3,9')
   CALL cl_set_combo_scc_part('xmdl0074','2055','1,2,3,9') 
   
   CALL adbt540_set_visible()   #隱藏 
   #單據性質-理由碼
   LET g_acc24_gzcb004 = NULL
     SELECT gzcb004
    INTO g_acc24_gzcb004
    FROM gzcb_t
   WHERE gzcb001 = '24'
     AND gzcb002 = 'adbt540'
     
   LET g_errshow = 1   #校驗訊息彈窗

   CALL adbt540_01_create_temp_table() RETURNING l_success]]>
  </point>
  <point name="input.a.page1.xmdl001" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u'  AND (g_xmdl_d[l_ac].xmdl001 != g_xmdl_d_o.xmdl001 
                                                 OR g_xmdl_d_o.xmdl001 IS NULL OR g_xmdl_d_o.xmdl001 IS NULL)) THEN
                  IF NOT adbt540_notice_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdl_d[l_ac].xmdl001 = g_xmdl_d_o.xmdl001                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            LET g_xmdl_d_o.xmdl001 = g_xmdl_d[l_ac].xmdl001

            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl002" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl002) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl002 != g_xmdl_d_o.xmdl002 
                                                OR g_xmdl_d_t.xmdl002 IS NULL OR g_xmdl_d_t.xmdl002 IS NULL)) THEN
                  IF NOT adbt540_notice_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl002 = g_xmdl_d_o.xmdl002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF                                          
            
            LET g_xmdl_d_o.xmdl002 = g_xmdl_d[l_ac].xmdl002
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl003" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl003 !=g_xmdl_d_o.xmdl003 
                                                OR g_xmdl_d_o.xmdl003 IS NULL OR g_xmdl_d_t.xmdl003 IS NULL)) THEN
                  IF NOT adbt540_order_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006) 
                     THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdl_d[l_ac].xmdl003 = g_xmdl_d_o.xmdl003
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl004" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl004 !=g_xmdl_d_o.xmdl004 
                                                OR g_xmdl_d_o.xmdl004 IS NULL OR g_xmdl_d_t.xmdl004 IS NULL)) THEN
                  IF NOT adbt540_order_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006) 
                     THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl004 = g_xmdl_d_o.xmdl004
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl005" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl005) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl005 !=g_xmdl_d_o.xmdl005 
                                                OR g_xmdl_d_o.xmdl005 IS NULL OR g_xmdl_d_t.xmdl005 IS NULL)) THEN
                  IF NOT adbt540_order_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006) 
                     THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl005 = g_xmdl_d_o.xmdl005
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl006" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl006) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl006 !=g_xmdl_d_o.xmdl006 
                                                OR g_xmdl_d_o.xmdl006 IS NULL OR g_xmdl_d_t.xmdl006 IS NULL)) THEN
                  IF NOT adbt540_order_chk_and_val(2,l_cmd,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006) 
                     THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdl_d[l_ac].xmdl006 = g_xmdl_d_o.xmdl006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

            LET g_xmdl_d_o.xmdl003 = g_xmdl_d[l_ac].xmdl003
            LET g_xmdl_d_o.xmdl004 = g_xmdl_d[l_ac].xmdl004
            LET g_xmdl_d_o.xmdl005 = g_xmdl_d[l_ac].xmdl005
            LET g_xmdl_d_o.xmdl006 = g_xmdl_d[l_ac].xmdl006
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.xmdl007" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl007) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl007 != g_xmdl_d_o.xmdl007 OR g_xmdl_d_o.xmdl007 IS NULL )) THEN
                  IF NOT adbt540_xmdl007_chk() THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdl_d[l_ac].xmdl007 = g_xmdl_d_o.xmdl007
                     LET g_xmdl_d[l_ac].xmdl022 = g_xmdl_d_t.xmdl022
                     LET g_xmdl2_d[l_ac].xmdl024 = g_xmdl2_d_t.xmdl024
                     NEXT FIELD CURRENT
                  ELSE
                     IF g_xmdl_d[l_ac].xmdl007 = '9' THEN
                        LET g_xmdl_d[l_ac].xmdl022 = 0 
                        LET g_xmdl2_d[l_ac].xmdl024 = 0
                     END IF
                  END IF
               END IF
            END IF

            CALL adbt540_set_no_required_b(l_cmd)            
            CALL adbt540_set_required_b(l_cmd)               ]]>
  </point>
  <point name="input.a.page1.xmdl008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl008 != g_xmdl_d_o.xmdl008 OR g_xmdl_d_o.xmdl008 IS NULL )) THEN
                  IF NOT adbt540_xmdl008_chk(g_xmdl_d[l_ac].xmdl008) THEN                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                     NEXT FIELD CURRENT
                  END IF                                   
                                
                  #刪除多庫儲批
                  #元件參數：出貨單(1),單據單號,項次,是否彈出視窗詢問Y/N
                  IF NOT adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'N') THEN
                     LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                     CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                     NEXT FIELD CURRENT                     
                  END IF
               
                  CALL adbt540_set_entry_b(l_cmd)
                  CALL adbt540_set_no_required_b(l_cmd)            
                  CALL adbt540_set_required_b(l_cmd)  
                  CALL adbt540_set_no_entry_b(l_cmd)                        
            
                  #判斷料件是否存在產品特徵
                  LET l_imaa005 = NULL
                  CALL s_adb_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
                  IF cl_null(l_imaa005) THEN
                     LET g_xmdl_d[l_ac].xmdl009 = ''
                  ELSE
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                  END IF  

                  #單位檢查
                  IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
                     NEXT FIELD xmdl017
                  END IF
                  IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl019) THEN
                     NEXT FIELD xmdl019
                  END IF
                  
#                  IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl021) THEN
#                     NEXT FIELD xmdl021
#                  END IF  

                  IF g_xmdl_d[l_ac].xmdl008 != g_xmdl_d_o.xmdl008 OR g_xmdl_d_o.xmdl008 IS NULL THEN
                     CALL adbt540_xmdl021_default()                   #帶出計價單位                     
                     CALL adbt540_xmdl008_xmdl009_xmdl033_default()   #顯示客戶料號
                  END IF
                  
                  #若稅別應用為2.依料件設定，呼叫應用元件帶出稅別、稅率
                  IF g_oodb011 = '2' THEN
                     CALL s_tax_chktype(g_xmdk_m.xmdksite,g_xmdk_m.xmdk007,g_xmdl_d[l_ac].xmdl008,'1',g_xmdk_m.xmdk031)
                     RETURNING l_success,l_oodb002,l_oodb006
                     
                     IF NOT l_success THEN
                        LET g_xmdl2_d[l_ac].xmdl025 = ''
                        LET g_xmdl2_d[l_ac].xmdl026 = ''
                     ELSE                     
                        LET g_xmdl2_d[l_ac].xmdl025 = l_oodb002
                        LET g_xmdl2_d[l_ac].xmdl026 = l_oodb006
                     END IF
                                                          
                     #稅額計算
                     LET l_money = g_xmdl2_d[l_ac].xmdl024 * g_xmdl_d[l_ac].xmdl022 
                     CALL s_tax_ins(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                                    g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
                     RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,
                               l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
                               l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
                  END IF
               END IF 
            END IF
            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                        
            
            
            LET g_xmdl_d_o.xmdl008 = g_xmdl_d[l_ac].xmdl008            ]]>
  </point>
  <point name="input.a.page1.xmdl009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl009) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl009 != g_xmdl_d_o.xmdl009 OR g_xmdl_d_o.xmdl009 IS NULL )) THEN
                  #刪除多庫儲批
                  #元件參數：出貨單(1),單據單號,項次,是否彈出視窗詢問Y/N
                  IF NOT adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,'N') THEN
                     LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                     NEXT FIELD CURRENT                     
                  END IF
                  
                  IF g_xmdl_d[l_ac].xmdl009 != g_xmdl_d_o.xmdl009 OR g_xmdl_d_o.xmdl009 IS NULL THEN
                     CALL adbt540_xmdl008_xmdl009_xmdl033_default()    
                  END IF
               END IF
            END IF
            
            LET g_xmdl_d_o.xmdl009 = g_xmdl_d[l_ac].xmdl009                      ]]>
  </point>
  <point name="input.a.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl011) THEN
                                                  
               #呼叫檢查存在並帶值的library
               IF NOT s_azzi650_chk_exist('221',g_xmdl_d[l_ac].xmdl011) THEN
                  LET g_xmdl_d[l_ac].xmdl011 = g_xmdl_d_t.xmdl011
                  NEXT FIELD CURRENT               
               END IF
            END IF      
            ]]>
  </point>
  <point name="input.a.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl013" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
            LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            
            CALL adbt540_set_entry_b(l_cmd)
            CALL adbt540_set_no_entry_b(l_cmd)   

            LET g_xmdl_d_o.xmdl013 = g_xmdl_d[l_ac].xmdl013
            LET g_xmdl_d_o.xmdl014 = g_xmdl_d[l_ac].xmdl014
            LET g_xmdl_d_o.xmdl015 = g_xmdl_d[l_ac].xmdl015
            LET g_xmdl_d_o.xmdl016 = g_xmdl_d[l_ac].xmdl016 ]]>
  </point>
  <point name="input.a.page1.xmdl014" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl014 != g_xmdl_d_t.xmdl014 OR g_xmdl_d_t.xmdl014 IS NULL )) THEN
                  LET l_inaa014 = s_adb_get_inaa014(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014)
                  #IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) AND NOT cl_null(g_xmdl_d[l_ac].xmdl014) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xmdk_m.xmdksite
                     LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl014
                     LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl008
                     LET g_chkparam.arg4 = g_xmdl6_d[l_ac].xmdl200
                     LET g_chkparam.arg5 = g_xmdl_d[l_ac].xmdl225  
                     LET g_chkparam.arg6 = g_xmdl_d[l_ac].xmdl224
                     LET g_chkparam.arg7 = g_xmdl_d[l_ac].xmdl223
                     LET g_chkparam.arg8 = g_xmdl_d[l_ac].xmdl222  
                     LET g_chkparam.arg9 = g_xmdk_m.xmdksite                             
                     IF NOT cl_chk_exist("v_inaa001_16") THEN
                        LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_t.xmdl014
                        LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
                        LET l_inaa014 = s_adb_get_inaa014(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014)
                        NEXT FIELD CURRENT
                     END IF  
                  #END IF   
               END IF
               
               #IF NOT adbt540_xmdl015_chk() THEN
               #   NEXT FIELD xmdl015
               #END IF
               #
               #IF NOT adbt540_xmdl016_chk() THEN
               #   NEXT FIELD xmdl016
               #END IF
               #150324-00007#6 150416 pomelo mark(S)
               #在揀量check
               #IF NOT s_adbt540_packing_qty_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,
               #                                 g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
               #                                 g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
               #                                 g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl052) THEN             
               #   LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_t.xmdl014
               #   NEXT FIELD xmdl014
               #END IF   
               #150324-00007#6 150416 pomelo mark(E)
            END IF
            LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014)
            
]]>
  </point>
  <point name="input.a.page1.xmdl015" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            LET g_xmdl_d[l_ac].xmdl015_desc = ' '
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl015) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl015 != g_xmdl_d_t.xmdl015 OR g_xmdl_d_t.xmdl015 IS NULL )) THEN
                  IF NOT adbt540_xmdl015_chk() THEN
                     LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_t.xmdl015
                     LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
                     NEXT FIELD xmdl015
                  END IF  
               END IF
               
               IF NOT adbt540_xmdl016_chk() THEN
                  NEXT FIELD xmdl016
               END IF                 
               
               #150324-00007#6 150416 pomelo mark(S)
               #在揀量check
               #IF NOT s_adbt540_packing_qty_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,
               #                                 g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
               #                                 g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
               #                                 g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl052) THEN             
               #   LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_t.xmdl015
               #   LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
               #      NEXT FIELD xmdl015
               #END IF 
               #150324-00007#6 150416 pomelo mark(E)
            END IF
            
            LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            ]]>
  </point>
  <point name="input.a.page1.xmdl016" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #150324-00007#6 150416 pomelo mark(S)
            #IF NOT adbt540_xmdl016_chk() THEN
            #   LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_t.xmdl016
            #   NEXT FIELD CURRENT
            #END IF
            #
            ##在揀量check
            #IF NOT s_adbt540_packing_qty_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,
            #                                 g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
            #                                 g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
            #                                 g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl052) THEN             
            #   LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_t.xmdl016
            #   NEXT FIELD xmdl016
            #END IF
            #150324-00007#6 150416 pomelo mark(E)]]>
  </point>
  <point name="input.a.page1.xmdl017" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl017_desc = ' '
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl017) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl017 != g_xmdl_d_o.xmdl017 OR g_xmdl_d_o.xmdl017 IS NULL )) THEN
                  IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017) THEN
                     LET g_xmdl_d[l_ac].xmdl017 = g_xmdl_d_o.xmdl017
                     LET g_xmdl_d[l_ac].xmdl017_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017)
                     NEXT FIELD CURRENT      
                  END IF

                  IF g_xmdl_d[l_ac].xmdl017 != g_xmdl_d_o.xmdl017 OR g_xmdl_d_o.xmdl017 IS NULL THEN
                     #推算參考數量
                     CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl020 
                     
                     CALL adbt540_xmdl021_default()                  
                  END IF
               END IF
            END IF
            
            LET g_xmdl_d[l_ac].xmdl017_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017)
            
            LET g_xmdl_d_o.xmdl017 = g_xmdl_d[l_ac].xmdl017
            LET g_xmdl_d_o.xmdl020 = g_xmdl_d[l_ac].xmdl020 ]]>
  </point>
  <point name="input.a.page1.xmdl018" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl018) THEN     
               IF g_xmdl_d[l_ac].xmdl018 <> g_xmdl_d_o.xmdl018 OR cl_null(g_xmdl_d_o.xmdl018) THEN
                  IF NOT adbt540_xmdl018_chk_and_val() THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
            
                     LET g_xmdl_d[l_ac].xmdl018 = g_xmdl_d_o.xmdl018
                     LET g_xmdl_d[l_ac].xmdl205 = g_xmdl_d_o.xmdl205  #ken
                     NEXT FIELD CURRENT
                  END IF                  
                  
                  #ken-------------------------------s
                  #輸入[C:出貨數量]時則應自動推算出貨包裝數量xmdl205，
                  #[C:出貨包裝數量]=[C:出貨量]*[C:出貨單位]與[C:出貨包裝單位]換算率
                  CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl018)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl205
                  #ken-------------------------------e   
                     
                  CALL adbt540_xmdl205_qty_convert(g_xmdl_d[l_ac].xmdlseq,
                                                   g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,
                                                   g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205,g_xmdl_d[l_ac].xmdl019,
                                                   g_xmdl_d[l_ac].xmdl021,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025)
                     RETURNING g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl022,
                               g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029
               END IF
            ELSE
               LET g_xmdl_d[l_ac].xmdl205 = null   #ken            
            END IF 
            #ken-------------------------------s
            CALL adbt540_set_entry_b(p_cmd)
            CALL adbt540_set_no_entry_b(p_cmd) 
            LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018
            LET g_xmdl_d_o.xmdl205 = g_xmdl_d[l_ac].xmdl205
            #ken-------------------------------e            ]]>
  </point>
  <point name="input.a.page1.xmdl019" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl019) THEN            
               IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl019) THEN
                  LET g_xmdl_d[l_ac].xmdl019 = g_xmdl_d_o.xmdl019
                  LET g_xmdl_d[l_ac].xmdl019_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019)
                  NEXT FIELD CURRENT      
               END IF  
               
               #推算參考數量
               CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl018)
               RETURNING l_success,g_xmdl_d[l_ac].xmdl020
               DISPLAY BY NAME g_xmdl_d[l_ac].xmdl020                
            END IF 
            
            LET g_xmdl_d[l_ac].xmdl019_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019)    
            
          ]]>
  </point>
  <point name="input.a.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl020) THEN                
               #參考數量取位
               CALL s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020) RETURNING l_success,g_xmdl_d[l_ac].xmdl020
            END IF 
]]>
  </point>
  <point name="input.a.page1.xmdl021" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl021) THEN
            
               IF NOT adbt540_unit_chk(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl021) THEN
                  LET g_xmdl_d[l_ac].xmdl021 = g_xmdl_d_t.xmdl021
                  NEXT FIELD CURRENT      
               END IF
               
            END IF 

            #若料號有使用銷售計價單位時，自動推算計價數量
            CALL s_aooi250_convert_qty(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl018)
            RETURNING l_success,g_xmdl_d[l_ac].xmdl022
            #稅額計算
            LET l_money = g_xmdl2_d[l_ac].xmdl024 * g_xmdl_d[l_ac].xmdl022 
            CALL s_tax_ins(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                           g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
            RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,
                      l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
                      l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135]]>
  </point>
  <point name="input.a.page1.xmdl022" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl022) THEN  
               #取位
               CALL  s_aooi250_take_decimals(g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022) RETURNING l_success,g_xmdl_d[l_ac].xmdl022
            END IF

            #稅額計算
            LET l_money = g_xmdl2_d[l_ac].xmdl024 * g_xmdl_d[l_ac].xmdl022 
            CALL s_tax_ins(g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,0,g_xmdk_m.xmdksite,l_money,
                           g_xmdl2_d[l_ac].xmdl025,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,'','','')
            RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,
                      l_xrcd113,l_xrcd114,l_xrcd115,l_xrcd123,l_xrcd124,
                      l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135]]>
  </point>
  <point name="input.a.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl033" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl033) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl033 != g_xmdl_d_o.xmdl033 OR g_xmdl_d_o.xmdl033 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl007
                  LET g_chkparam.arg2 = g_xmdl_d[l_ac].xmdl008
                  LET g_chkparam.arg3 = g_xmdl_d[l_ac].xmdl009
                  LET g_chkparam.arg4 = g_xmdl_d[l_ac].xmdl033
                  
                  IF NOT cl_chk_exist("v_pmao004") THEN
                     LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF g_xmdl_d[l_ac].xmdl033 != g_xmdl_d_o.xmdl033 OR g_xmdl_d_o.xmdl033 IS NULL THEN
                     #由客戶料號帶出料號
                     CALL adbt540_xmdl033_xmdl008_xmdl009_default()
                     
                     #料號檢查
                     IF NOT adbt540_xmdl008_chk(g_xmdl_d[l_ac].xmdl008) THEN
                        LET g_xmdl_d[l_ac].xmdl008 = g_xmdl_d_o.xmdl008
                        LET g_xmdl_d[l_ac].xmdl009 = g_xmdl_d_o.xmdl009
                        LET g_xmdl_d[l_ac].xmdl033 = g_xmdl_d_o.xmdl033
                        CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) 
                           RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
                        NEXT FIELD CURRENT
                     END IF                   
                  END IF
               END IF
            END IF
            
            LET g_xmdl_d_o.xmdl033 = g_xmdl_d[l_ac].xmdl033]]>
  </point>
  <point name="input.a.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl050" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl050_desc = ' '
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl050_desc
            IF NOT cl_null( g_xmdl_d[l_ac].xmdl050) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND ( g_xmdl_d[l_ac].xmdl050 != g_xmdl_d_o.xmdl050 OR g_xmdl_d_o.xmdl050 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050) THEN
                     LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_t.xmdl050
                     LET g_xmdl_d[l_ac].xmdl050_desc = s_desc_get_acc_desc(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050)
                     NEXT FIELD CURRENT
                  #ELSE
                  #   #檢核輸入的理由碼是否在單據別限制範圍內
                  #   CALL s_control_chk_doc('8',g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdl050,'','','','')
                  #   RETURNING l_success,l_flag
                  #   
                  #   IF NOT l_success OR NOT l_flag THEN
                  #      LET g_xmdl_d[l_ac].xmdl050 = g_xmdl_d_t.xmdl050
                  #      LET g_xmdl_d[l_ac].xmdl050_desc = s_desc_get_acc_desc(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050)
                  #      NEXT FIELD CURRENT
                  #   END IF
                  END IF
               END IF
            END IF
            
            LET g_xmdl_d[l_ac].xmdl050_desc = s_desc_get_acc_desc(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050)]]>
  </point>
  <point name="input.a.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page1.xmdl052" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #150324-00007#6 150416 pomelo mark(S)
            #IF NOT cl_null(g_xmdl_d[l_ac].xmdl052) THEN
            #   IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl052 != g_xmdl_d_o.xmdl052 OR g_xmdl_d_o.xmdl052 IS NULL )) THEN
            #      #在揀量check
            #      IF NOT s_adbt540_packing_qty_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,
            #                                       g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,
            #                                       g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,
            #                                       g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl052) THEN             
            #         LET g_xmdl_d[l_ac].xmdl052 = g_xmdl_d_o.xmdl052
            #         NEXT FIELD xmdl052
            #      END IF 
            #   END IF
            #END IF
            #
            #LET g_xmdl_d_o.xmdl052 = g_xmdl_d[l_ac].xmdl052
            #150324-00007#6 150416 pomelo mark(E)]]>
  </point>
  <point name="input.a.page1.xmdl204" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xmdl_d[l_ac].xmdl204
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xmdl_d[l_ac].xmdl204_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl204_desc

]]>
  </point>
  <point name="input.a.page1.xmdl205" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl_d[l_ac].xmdl205) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl205 != g_xmdl_d_o.xmdl205 OR g_xmdl_d_o.xmdl205 IS NULL )) THEN
                  IF NOT adbt540_xmdl018_chk_and_val() THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl_d[l_ac].xmdl018
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdl_d[l_ac].xmdl205 = g_xmdl_d_o.xmdl205
                     LET g_xmdl_d[l_ac].xmdl018 = g_xmdl_d_o.xmdl018  #ken
                     NEXT FIELD CURRENT
                  END IF                  
                  
                  #重新換算出貨數量/參考數量/計價數量/未稅金額/含稅金額/稅額, 出貨數項需傳空值
                  CALL adbt540_xmdl205_qty_convert(g_xmdl_d[l_ac].xmdlseq,
                                                   g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl017,'',
                                                   g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205,g_xmdl_d[l_ac].xmdl019,
                                                   g_xmdl_d[l_ac].xmdl021,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl025)
                     RETURNING g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl022,
                               g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029  
               END IF
            END IF
            LET g_xmdl_d_o.xmdl205 = g_xmdl_d[l_ac].xmdl205
            LET g_xmdl_d_o.xmdl018 = g_xmdl_d[l_ac].xmdl018  #ken]]>
  </point>
  <point name="input.a.page1.xmdl222" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl222_desc = ' '
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl222_desc
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl222) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl222 != g_xmdl_d_t.xmdl222 OR g_xmdl_d_t.xmdl222 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl222
                  LET g_chkparam.arg2 = '1'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdl_d[l_ac].xmdl222 = g_xmdl_d_t.xmdl222
                     LET g_xmdl_d[l_ac].xmdl222_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl222)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xmdl_d[l_ac].xmdl222_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl222)]]>
  </point>
  <point name="input.a.page1.xmdl223" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl223_desc = ' '
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl223_desc
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl223) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl223 != g_xmdl_d_t.xmdl223 OR g_xmdl_d_t.xmdl223 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl223
                  LET g_chkparam.arg2 = '1'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdl_d[l_ac].xmdl223 = g_xmdl_d_t.xmdl223
                     LET g_xmdl_d[l_ac].xmdl223_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl223)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xmdl_d[l_ac].xmdl223_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl223)]]>
  </point>
  <point name="input.a.page1.xmdl224" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl224_desc = ' '
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl224_desc
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl224) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl224 != g_xmdl_d_t.xmdl224 OR g_xmdl_d_t.xmdl224 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl224
                  LET g_chkparam.arg2 = '2'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdl_d[l_ac].xmdl224 = g_xmdl_d_t.xmdl224
                     LET g_xmdl_d[l_ac].xmdl224_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl224)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xmdl_d[l_ac].xmdl224_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl224)]]>
  </point>
  <point name="input.a.page1.xmdl225" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdl225_desc = ' '
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl225_desc
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl225) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdl_d[l_ac].xmdl225 != g_xmdl_d_t.xmdl225 OR g_xmdl_d_t.xmdl225 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdl_d[l_ac].xmdl225
                  LET g_chkparam.arg2 = '1'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdl_d[l_ac].xmdl225 = g_xmdl_d_t.xmdl225
                     LET g_xmdl_d[l_ac].xmdl225_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl225)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xmdl_d[l_ac].xmdl225_desc = s_desc_get_dbaa001_desc(g_xmdl_d[l_ac].xmdl225)]]>
  </point>
  <point name="input.a.page1.xmdlseq" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl_d[g_detail_idx].xmdlseq != g_xmdl_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     LET g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq
                     NEXT FIELD CURRENT                              
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl024) THEN 
               IF adbt540_xmdl024_chk() THEN
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl2_d[l_ac].xmdl024
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_xmdl2_d[l_ac].xmdl024
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

               END IF
            END IF 
            
            #稅額計算
            CALL s_adbt540_tax_count(g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl024,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017)
            RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029]]>
  </point>
  <point name="input.a.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL adbt540_xmdk012_ref(g_xmdl2_d[l_ac].xmdl025)
            RETURNING g_xmdl2_d[l_ac].xmdl025_desc
            DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
                              
            CALL adbt540_xmdk012_ref(g_xmdl2_d[l_ac].xmdl025)
            RETURNING g_xmdl2_d[l_ac].xmdl025_desc
            DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
            
            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl025) THEN 
               IF g_xmdl2_d[l_ac].xmdl025 <> g_xmdl2_d_t.xmdl025 OR
                  cl_null(g_xmdl2_d_t.xmdl025) THEN
                  
                  #檢查、取得稅別、單價含稅否
                  CALL s_tax_chk(g_site,g_xmdl2_d[l_ac].xmdl025)
                  RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011 
       
                  IF NOT l_success THEN
                     LET g_xmdl2_d[l_ac].xmdl025 = g_xmdl2_d_t.xmdl025
                     CALL adbt540_xmdk012_ref(g_xmdl2_d[l_ac].xmdl025)
                     RETURNING g_xmdl2_d[l_ac].xmdl025_desc
                     DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
                     
                     NEXT FIELD CURRENT
                  END IF       
                              
                  LET g_xmdl2_d[l_ac].xmdl026 = g_oodb006
                  DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl026          
               END IF
            END IF  
            
            #稅額計算
            CALL s_axmt540_tax_count(g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl024,g_xmdl_d[l_ac].xmdl022,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017)
            RETURNING g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl029]]>
  </point>
  <point name="input.a.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page2.xmdl205" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdl2_d[l_ac].xmdl205) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.xmdlseq_2" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl2_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl2_d[g_detail_idx].xmdlseq != g_xmdl2_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl2_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                       ]]>
  </point>
  <point name="input.a.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.a.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl3_d[g_detail_idx].xmdmseq IS NOT NULL AND g_xmdl3_d[g_detail_idx].xmdmseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl3_d[g_detail_idx].xmdmseq != g_xmdl3_d_t.xmdmseq OR g_xmdl3_d[g_detail_idx].xmdmseq1 != g_xmdl3_d_t.xmdmseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdm_t WHERE "||"xmdment = '" ||g_enterprise|| "' AND "||"xmdmdocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdmseq = '"||g_xmdl3_d[g_detail_idx].xmdmseq ||"' AND "|| "xmdmseq1 = '"||g_xmdl3_d[g_detail_idx].xmdmseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl3_d[g_detail_idx].xmdmseq IS NOT NULL AND g_xmdl3_d[g_detail_idx].xmdmseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl3_d[g_detail_idx].xmdmseq != g_xmdl3_d_t.xmdmseq OR g_xmdl3_d[g_detail_idx].xmdmseq1 != g_xmdl3_d_t.xmdmseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdm_t WHERE "||"xmdment = '" ||g_enterprise|| "' AND "||"xmdmdocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdmseq = '"||g_xmdl3_d[g_detail_idx].xmdmseq ||"' AND "|| "xmdmseq1 = '"||g_xmdl3_d[g_detail_idx].xmdmseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.page4.xmdlseq_4" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl4_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl4_d[g_detail_idx].xmdlseq != g_xmdl4_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl4_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xrcd007" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdld IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq2 IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcd007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl4_d[g_detail_idx].xrcdld != g_xmdl4_d_t.xrcdld OR g_xmdl4_d[g_detail_idx].xrcdseq != g_xmdl4_d_t.xrcdseq OR g_xmdl4_d[g_detail_idx].xrcdseq2 != g_xmdl4_d_t.xrcdseq2 OR g_xmdl4_d[g_detail_idx].xrcd007 != g_xmdl4_d_t.xrcd007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcd_t WHERE "||"xrcdent = '" ||g_enterprise|| "' AND "||"xrcddocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xrcdld = '"||g_xmdl4_d[g_detail_idx].xrcdld ||"' AND "|| "xrcdseq = '"||g_xmdl4_d[g_detail_idx].xrcdseq ||"' AND "|| "xrcdseq2 = '"||g_xmdl4_d[g_detail_idx].xrcdseq2 ||"' AND "|| "xrcd007 = '"||g_xmdl4_d[g_detail_idx].xrcd007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xrcdld" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdld IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq2 IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcd007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl4_d[g_detail_idx].xrcdld != g_xmdl4_d_t.xrcdld OR g_xmdl4_d[g_detail_idx].xrcdseq != g_xmdl4_d_t.xrcdseq OR g_xmdl4_d[g_detail_idx].xrcdseq2 != g_xmdl4_d_t.xrcdseq2 OR g_xmdl4_d[g_detail_idx].xrcd007 != g_xmdl4_d_t.xrcd007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcd_t WHERE "||"xrcdent = '" ||g_enterprise|| "' AND "||"xrcddocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xrcdld = '"||g_xmdl4_d[g_detail_idx].xrcdld ||"' AND "|| "xrcdseq = '"||g_xmdl4_d[g_detail_idx].xrcdseq ||"' AND "|| "xrcdseq2 = '"||g_xmdl4_d[g_detail_idx].xrcdseq2 ||"' AND "|| "xrcd007 = '"||g_xmdl4_d[g_detail_idx].xrcd007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xrcdseq" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdld IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq2 IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcd007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl4_d[g_detail_idx].xrcdld != g_xmdl4_d_t.xrcdld OR g_xmdl4_d[g_detail_idx].xrcdseq != g_xmdl4_d_t.xrcdseq OR g_xmdl4_d[g_detail_idx].xrcdseq2 != g_xmdl4_d_t.xrcdseq2 OR g_xmdl4_d[g_detail_idx].xrcd007 != g_xmdl4_d_t.xrcd007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcd_t WHERE "||"xrcdent = '" ||g_enterprise|| "' AND "||"xrcddocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xrcdld = '"||g_xmdl4_d[g_detail_idx].xrcdld ||"' AND "|| "xrcdseq = '"||g_xmdl4_d[g_detail_idx].xrcdseq ||"' AND "|| "xrcdseq2 = '"||g_xmdl4_d[g_detail_idx].xrcdseq2 ||"' AND "|| "xrcd007 = '"||g_xmdl4_d[g_detail_idx].xrcd007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.xrcdseq2" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdld IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcdseq2 IS NOT NULL AND g_xmdl4_d[g_detail_idx].xrcd007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl4_d[g_detail_idx].xrcdld != g_xmdl4_d_t.xrcdld OR g_xmdl4_d[g_detail_idx].xrcdseq != g_xmdl4_d_t.xrcdseq OR g_xmdl4_d[g_detail_idx].xrcdseq2 != g_xmdl4_d_t.xrcdseq2 OR g_xmdl4_d[g_detail_idx].xrcd007 != g_xmdl4_d_t.xrcd007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcd_t WHERE "||"xrcdent = '" ||g_enterprise|| "' AND "||"xrcddocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xrcdld = '"||g_xmdl4_d[g_detail_idx].xrcdld ||"' AND "|| "xrcdseq = '"||g_xmdl4_d[g_detail_idx].xrcdseq ||"' AND "|| "xrcdseq2 = '"||g_xmdl4_d[g_detail_idx].xrcdseq2 ||"' AND "|| "xrcd007 = '"||g_xmdl4_d[g_detail_idx].xrcd007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.rtieseq" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl5_d[g_detail_idx].rtieseq IS NOT NULL AND g_xmdl5_d[g_detail_idx].rtieseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl5_d[g_detail_idx].rtieseq != g_xmdl5_d_t.rtieseq OR g_xmdl5_d[g_detail_idx].rtieseq1 != g_xmdl5_d_t.rtieseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtie_t WHERE "||"rtieent = '" ||g_enterprise|| "' AND "||"rtiedocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "rtieseq = '"||g_xmdl5_d[g_detail_idx].rtieseq ||"' AND "|| "rtieseq1 = '"||g_xmdl5_d[g_detail_idx].rtieseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.rtieseq1" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl5_d[g_detail_idx].rtieseq IS NOT NULL AND g_xmdl5_d[g_detail_idx].rtieseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl5_d[g_detail_idx].rtieseq != g_xmdl5_d_t.rtieseq OR g_xmdl5_d[g_detail_idx].rtieseq1 != g_xmdl5_d_t.rtieseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtie_t WHERE "||"rtieent = '" ||g_enterprise|| "' AND "||"rtiedocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "rtieseq = '"||g_xmdl5_d[g_detail_idx].rtieseq ||"' AND "|| "rtieseq1 = '"||g_xmdl5_d[g_detail_idx].rtieseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.xmdlseq_5" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl5_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl5_d[g_detail_idx].xmdlseq != g_xmdl5_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl5_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.xmdlseq_6" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl6_d[g_detail_idx].xmdlseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl6_d[g_detail_idx].xmdlseq != g_xmdl6_d_t.xmdlseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdl_t WHERE "||"xmdlent = '" ||g_enterprise|| "' AND "||"xmdldocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "xmdlseq = '"||g_xmdl6_d[g_detail_idx].xmdlseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.rticseq" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl7_d[g_detail_idx].rticseq IS NOT NULL AND g_xmdl7_d[g_detail_idx].rticseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl7_d[g_detail_idx].rticseq != g_xmdl7_d_t.rticseq OR g_xmdl7_d[g_detail_idx].rticseq1 != g_xmdl7_d_t.rticseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtic_t WHERE "||"rticent = '" ||g_enterprise|| "' AND "||"rticdocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "rticseq = '"||g_xmdl7_d[g_detail_idx].rticseq ||"' AND "|| "rticseq1 = '"||g_xmdl7_d[g_detail_idx].rticseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.rticseq1" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xmdk_m.xmdkdocno IS NOT NULL AND g_xmdl7_d[g_detail_idx].rticseq IS NOT NULL AND g_xmdl7_d[g_detail_idx].rticseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdl7_d[g_detail_idx].rticseq != g_xmdl7_d_t.rticseq OR g_xmdl7_d[g_detail_idx].rticseq1 != g_xmdl7_d_t.rticseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtic_t WHERE "||"rticent = '" ||g_enterprise|| "' AND "||"rticdocno = '"||g_xmdk_m.xmdkdocno ||"' AND "|| "rticseq = '"||g_xmdl7_d[g_detail_idx].rticseq ||"' AND "|| "rticseq1 = '"||g_xmdl7_d[g_detail_idx].rticseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xmda026" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmda026_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmda026_desc
            IF NOT cl_null(g_xmdk_m.xmda026) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmda026 != g_xmdk_m_o.xmda026 OR g_xmdk_m_o.xmda026 IS NULL )) THEN
                  LET l_oofb002 = s_adb_get_pmaa027(g_xmdk_m.xmdk008)
                  
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = l_oofb002
                  LET g_chkparam.arg2 = g_xmdk_m.xmda026
                  LET g_chkparam.err_str[1] = "apm-00214:adb-00362"
                  LET g_chkparam.err_str[2] = "anm-00025:adb-00363"
                  LET g_chkparam.err_str[3] = "apm-00270:adb-00365"                  
                  IF NOT cl_chk_exist("v_oofb019_2") THEN
                     LET g_xmdk_m.xmda026 = g_xmdk_m_o.xmda026
                     DISPLAY BY NAME g_xmdk_m.xmda026
                     CALL adbt540_xmda026_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL adbt540_xmda026_ref()
            
            LET g_xmdk_m_o.xmda026 = g_xmdk_m.xmda026]]>
  </point>
  <point name="input.a.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk001" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk001) THEN
               IF p_cmd = 'a' OR
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk001 <> g_xmdk_m_t.xmdk001 OR cl_null(g_xmdk_m_t.xmdk001))) THEN
                  IF g_xmdk_m.xmdk001 < g_xmdk_m.xmdkdocdt THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00267'   #扣帳日期不可小於單據日期！
                     LET g_errparam.extend = g_xmdk_m.xmdk001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
                     NEXT FIELD CURRENT
                  END IF
                  #庫存關帳日期
                  CALL cl_get_para(g_enterprise,g_xmdk_m.xmdksite,'S-MFG-0031') RETURNING l_para_data
                  IF g_xmdk_m.xmdk001 <= l_para_data THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00077'   #扣帳日期小於關帳日期，請重新輸入！
                     LET g_errparam.extend = g_xmdk_m.xmdk001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m_t.xmdk001 = g_xmdk_m.xmdk001]]>
  </point>
  <point name="input.a.xmdk002" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #沒有來源單(出通單/訂單)時,出貨性質才允許維護,下面以此為前提做處理
            IF NOT cl_null(g_xmdk_m.xmdk002) THEN
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk002 <> g_xmdk_m_o.xmdk002 OR cl_null(g_xmdk_m_o.xmdk002))) THEN
                  CALL adbt540_xmdl087_default()   #單身自立應收否預設值                 
               END IF
            END IF            
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdk_m_o.xmdk002 = g_xmdk_m.xmdk002]]>
  </point>
  <point name="input.a.xmdk003" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk003_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc
            IF NOT cl_null(g_xmdk_m.xmdk003) THEN
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND ( g_xmdk_m.xmdk003 <>  g_xmdk_m_t.xmdk003) OR cl_null(g_xmdk_m_t.xmdk003)) THEN               
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk003                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_xmdk_m.xmdk003 = g_xmdk_m_t.xmdk003
                     LET g_xmdk_m.xmdk003_desc = s_desc_get_person_desc(g_xmdk_m.xmdk003)
                     DISPLAY BY NAME g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #帶出歸屬部門ooag003
               SELECT ooag003 INTO g_xmdk_m.xmdk004
                 FROM ooag_t
                WHERE ooagent = g_enterprise
                  AND ooag001 = g_xmdk_m.xmdk003
            ELSE
               LET g_xmdk_m.xmdk004 = NULL
            END IF            
            
            LET g_xmdk_m.xmdk003_desc = s_desc_get_person_desc(g_xmdk_m.xmdk003)
            LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)
            DISPLAY BY NAME g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc  

            LET g_xmdk_m_t.xmdk003 = g_xmdk_m.xmdk003
            LET g_xmdk_m_t.xmdk004 = g_xmdk_m.xmdk004]]>
  </point>
  <point name="input.a.xmdk004" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk004_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc
            IF NOT cl_null(g_xmdk_m.xmdk004) THEN 
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND ( g_xmdk_m.xmdk004 <> g_xmdk_m_t.xmdk004 OR cl_null(g_xmdk_m_t.xmdk004))) THEN
                  INITIALIZE g_chkparam.* TO NULL               
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk004                  
                  IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
                     LET g_chkparam.arg2 = g_xmdk_m.xmdkdocdt
                  ELSE
                     LET g_chkparam.arg2 = g_today
                  END IF                  
                  
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmdk_m.xmdk004 = g_xmdk_m_t.xmdk004
                     LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)
                     DISPLAY BY NAME g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc                 
                     NEXT FIELD CURRENT
                  END IF  
               END IF
            END IF 
            
            LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)
            DISPLAY BY NAME g_xmdk_m.xmdk004_desc 
            
            LET g_xmdk_m_t.xmdk004 = g_xmdk_m.xmdk004]]>
  </point>
  <point name="input.a.xmdk005" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk005) THEN             
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk005 <> g_xmdk_m_t.xmdk005 OR cl_null(g_xmdk_m_t.xmdk005))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk005
                  LET g_chkparam.arg2 = g_xmdk_m.xmdksite
                  IF NOT cl_chk_exist("v_xmdgdocno_1") THEN
                     LET g_xmdk_m.xmdk005 = g_xmdk_m_t.xmdk005   
                     NEXT FIELD CURRENT
                  END IF                  
                  CALL adbt540_notice_master_default('')     #帶出出通單單頭 
               END IF 
            END IF  
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdk_m_t.xmdk005 = g_xmdk_m.xmdk005]]>
  </point>
  <point name="input.a.xmdk006" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk006) THEN 
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk006 <> g_xmdk_m_t.xmdk006 OR cl_null(g_xmdk_m_t.xmdk006))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk006  
                  LET g_chkparam.arg2 = '2' 
                  LET g_chkparam.arg3 = g_xmdk_m.xmdksite                  
                  IF NOT cl_chk_exist("v_xmdadocno_4") THEN
                     LET g_xmdk_m.xmdk006 = g_xmdk_m_t.xmdk006
                     #CALL adbt540_order_master_default('')  #帶出訂單單頭
                     NEXT FIELD CURRENT
                  END IF
            
                  CALL adbt540_order_master_default('')  #帶出訂單單頭
               END IF
            END IF               
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdk_m_t.xmdk006 = g_xmdk_m.xmdk006]]>
  </point>
  <point name="input.a.xmdk007" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #沒有來源單(出通單/訂單)時,客戶才允許維護,下面以此為前提做處理
            LET g_xmdk_m.xmdk007_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc
            IF NOT cl_null(g_xmdk_m.xmdk007) THEN
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk007 <> g_xmdk_m_o.xmdk007 OR cl_null(g_xmdk_m_o.xmdk007))) THEN
                  IF NOT adbt540_xmdk007_chk() THEN
                     LET g_xmdk_m.xmdk007 = g_xmdk_m_o.xmdk007
                     LET g_xmdk_m.xmdk007_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007)
                     DISPLAY BY NAME g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc
                     NEXT FIELD CURRENT
                  END IF 
                  
                  IF g_xmdk_m.xmdk007 <> g_xmdk_m_o.xmdk007 OR cl_null(g_xmdk_m_o.xmdk007) THEN
                     CALL adbt540_xmdk007_default()     #自動帶出客戶預設資料    
                  END IF                     
               END IF 
            END IF  
            
            LET g_xmdk_m.xmdk007_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007)
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdk_m_o.xmdk007 = g_xmdk_m.xmdk007]]>
  </point>
  <point name="input.a.xmdk008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk008_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk008_desc
            IF NOT cl_null(g_xmdk_m.xmdk008) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk008 != g_xmdk_m_o.xmdk008 OR g_xmdk_m_o.xmdk008 IS NULL )) THEN
                  IF NOT adbt540_xmdk008_chk() THEN
                     LET g_xmdk_m.xmdk008 = g_xmdk_m_o.xmdk008
                     LET g_xmdk_m.xmdk008_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008)
                     DISPLAY BY NAME g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF g_xmdk_m.xmdk008 != g_xmdk_m_o.xmdk008 OR g_xmdk_m_o.xmdk008 IS NULL THEN
                     CALL adbt540_xmda026_default()
                  END IF   
               END IF
            END IF
            
            LET g_xmdk_m.xmdk008_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk008)
            DISPLAY BY NAME g_xmdk_m.xmdk008_desc
            
            LET g_xmdk_m_o.xmdk008 = g_xmdk_m.xmdk008]]>
  </point>
  <point name="input.a.xmdk009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk009_desc = ''
            DISPLAY BY NAME g_xmdk_m.xmdk009_desc            
            IF NOT cl_null(g_xmdk_m.xmdk009) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk009 != g_xmdk_m_o.xmdk009 OR g_xmdk_m_o.xmdk009 IS NULL )) THEN            
                  IF NOT adbt540_xmdk009_chk() THEN
                     LET g_xmdk_m.xmdk009 = g_xmdk_m_o.xmdk009
                     LET g_xmdk_m.xmdk009_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009)
                     DISPLAY BY NAME g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc                     
                     NEXT FIELD CURRENT 
                  END IF   
                  
                  IF g_xmdk_m.xmdk009 != g_xmdk_m_o.xmdk009 OR g_xmdk_m_o.xmdk009 IS NULL THEN
                     CALL adbt540_xmdk021_default()
                  END IF                
               END IF
            END IF       
           
            LET g_xmdk_m.xmdk009_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk009)
            DISPLAY BY NAME g_xmdk_m.xmdk009_desc
            
            LET g_xmdk_m_o.xmdk009 = g_xmdk_m.xmdk009                        ]]>
  </point>
  <point name="input.a.xmdk010" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk010_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            IF NOT cl_null(g_xmdk_m.xmdk010) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk010 != g_xmdk_m_o.xmdk010 OR g_xmdk_m_o.xmdk010 IS NULL)) THEN
                  IF NOT adbt540_xmdk010_chk() THEN
                     LET g_xmdk_m.xmdk010 = g_xmdk_m_o.xmdk010
                     LET g_xmdk_m.xmdk010_desc = s_desc_get_ooib002_desc(g_xmdk_m.xmdk010)
                     DISPLAY BY NAME g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk010_desc = s_desc_get_ooib002_desc(g_xmdk_m.xmdk010)
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc 
            
            LET g_xmdk_m_o.xmdk010 = g_xmdk_m.xmdk010           ]]>
  </point>
  <point name="input.a.xmdk011" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk011_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk011_desc
            IF NOT cl_null(g_xmdk_m.xmdk011) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk011 != g_xmdk_m_o.xmdk011 OR g_xmdk_m_o.xmdk011 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('238',g_xmdk_m.xmdk011) THEN
                     LET g_xmdk_m.xmdk011 = g_xmdk_m_o.xmdk011
                     DISPLAY BY NAME g_xmdk_m.xmdk011
                     CALL adbt540_xmdk011_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL adbt540_xmdk011_ref()
            
            LET g_xmdk_m_o.xmdk011 = g_xmdk_m.xmdk011]]>
  </point>
  <point name="input.a.xmdk012" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk012_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc
            IF NOT cl_null(g_xmdk_m.xmdk012) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk012 != g_xmdk_m_o.xmdk012 OR g_xmdk_m_o.xmdk012 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdksite
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk012            
                  IF NOT cl_chk_exist("v_oodb002") THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     LET g_xmdk_m.xmdk013 = g_xmdk_m_o.xmdk013
                     LET g_xmdk_m.xmdk014 = g_xmdk_m_o.xmdk014
                     
                     LET g_xmdk_m.xmdk012_desc = s_desc_get_tax_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)  
                     DISPLAY BY NAME g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,
                                     g_xmdk_m.xmdk013,g_xmdk_m.xmdk014 
                     NEXT FIELD CURRENT                  
                  END IF
                  
                  #取得稅別、單價含稅否
                  CALL s_tax_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)
                  RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011 
       
                  IF NOT l_success THEN
                     LET g_xmdk_m.xmdk012 = g_xmdk_m_o.xmdk012
                     LET g_xmdk_m.xmdk013 = g_xmdk_m_o.xmdk013
                     LET g_xmdk_m.xmdk014 = g_xmdk_m_o.xmdk014
                     
                     LET g_xmdk_m.xmdk012_desc = s_desc_get_tax_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)  
                     DISPLAY BY NAME g_xmdk_m.xmdk012,g_xmdk_m.xmdk012_desc,
                                     g_xmdk_m.xmdk013,g_xmdk_m.xmdk014 
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_xmdk_m.xmdk013 = l_oodb006
                     LET g_xmdk_m.xmdk014 = l_oodb005
                     DISPLAY BY NAME  g_xmdk_m.xmdk013,g_xmdk_m.xmdk014 
                  END IF     
               END IF
            ELSE
               LET g_xmdk_m.xmdk013 = ''
               LET g_xmdk_m.xmdk014 = 'N'
            END IF
            
            LET g_xmdk_m.xmdk012_desc = s_desc_get_tax_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)          
            DISPLAY BY NAME  g_xmdk_m.xmdk012_desc
             
            LET g_xmdk_m_o.xmdk012 = g_xmdk_m.xmdk012
            LET g_xmdk_m_o.xmdk013 = g_xmdk_m.xmdk013
            LET g_xmdk_m_o.xmdk014 = g_xmdk_m.xmdk014]]>
  </point>
  <point name="input.a.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk015" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk015_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
            IF NOT cl_null(g_xmdk_m.xmdk015) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk015 != g_xmdk_m_o.xmdk015 OR g_xmdk_m_o.xmdk015 IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_ooef019
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk015
                  IF NOT cl_chk_exist("v_isac002") THEN
                     LET g_xmdk_m.xmdk015 = g_xmdk_m_o.xmdk015
                     LET g_xmdk_m.xmdk015_desc = s_desc_get_invoice_type_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk015)
                     DISPLAY BY NAME g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk015_desc = s_desc_get_invoice_type_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk015)
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc 
            
            LET g_xmdk_m_o.xmdk015 = g_xmdk_m.xmdk015]]>
  </point>
  <point name="input.a.xmdk016" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk016_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
            IF NOT cl_null(g_xmdk_m.xmdk016) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk016  != g_xmdk_m_o.xmdk016 OR g_xmdk_m_o.xmdk016 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdksite               
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk016 
                  IF NOT cl_chk_exist("v_ooaj002") THEN
                     LET g_xmdk_m.xmdk016 = g_xmdk_m_o.xmdk016
                     LET g_xmdk_m.xmdk016_desc = s_desc_get_currency_desc(g_xmdk_m.xmdk016)
                     
                     DISPLAY BY NAME g_xmdk_m.xmdk016,g_xmdk_m.xmdk016_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  LET g_xmdk_m.xmdk017 = s_aooi160_get_exrate('1',g_xmdk_m.xmdksite,g_today,g_xmdk_m.xmdk016,l_ooef016,0,'11')
                  DISPLAY BY NAME g_xmdk_m.xmdk017
               END IF
            ELSE
               LET g_xmdk_m.xmdk017 = ''
               DISPLAY BY NAME g_xmdk_m.xmdk017
            END IF
                        
            LET g_xmdk_m.xmdk016_desc = s_desc_get_currency_desc(g_xmdk_m.xmdk016)            
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
            
            LET g_xmdk_m_o.xmdk016 = g_xmdk_m.xmdk016          ]]>
  </point>
  <point name="input.a.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk018" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk018) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdk_m.xmdk018
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_xmah001") THEN
                  LET g_xmdk_m.xmdk018 = g_xmdk_m_t.xmdk018
                  LET g_xmdk_m.xmdk018_desc = s_desc_get_xmah001_desc(g_xmdk_m.xmdk018)
                  DISPLAY BY NAME g_xmdk_m.xmdk018_desc                 
                 
                  NEXT FIELD CURRENT
               END IF
            END IF 
            LET g_xmdk_m.xmdk018_desc = s_desc_get_xmah001_desc(g_xmdk_m.xmdk018)
            DISPLAY BY NAME g_xmdk_m.xmdk018_desc]]>
  </point>
  <point name="input.a.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk019) THEN 
                  
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdk_m.xmdk019
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooid001_2") THEN
                  LET g_xmdk_m.xmdk019 = g_xmdk_m_t.xmdk019
                  LET g_xmdk_m.xmdk019_desc = s_desc_ooid001_desc(g_xmdk_m.xmdk019)
                  DISPLAY BY NAME g_xmdk_m.xmdk019_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 
            LET g_xmdk_m.xmdk019_desc = s_desc_ooid001_desc(g_xmdk_m.xmdk019)
            DISPLAY BY NAME g_xmdk_m.xmdk019_desc]]>
  </point>
  <point name="input.a.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk020) THEN                
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmdk_m.xmdk020
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pmaa001_1") THEN
                  LET g_xmdk_m.xmdk020 = g_xmdk_m_t.xmdk020
                  LET g_xmdk_m.xmdk020_desc = s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020)
                  DISPLAY BY NAME g_xmdk_m.xmdk020_desc
                  NEXT FIELD CURRENT
               END IF            
            END IF 
            LET g_xmdk_m.xmdk020_desc = s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020)
            DISPLAY BY NAME g_xmdk_m.xmdk020_desc]]>
  </point>
  <point name="input.a.xmdk021" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk021_desc = ''
            LET g_xmdk_m.xmdk021_address = ''
            LET g_xmdk_m.xmdk205 = ''
            LET g_xmdk_m.xmdk206 = ''
            LET g_xmdk_m.xmdk205_desc = ''
            LET g_xmdk_m.xmdk206_desc = ''
            DISPLAY BY NAME g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,
                            g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc,
                            g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc
                            
            IF NOT cl_null(g_xmdk_m.xmdk021) THEN   
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk021 != g_xmdk_m_o.xmdk021 OR g_xmdk_m_o.xmdk021 IS NULL )) THEN            
                  LET l_oofb002 = s_adb_get_pmaa027(g_xmdk_m.xmdk009)
                  
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_oofb002
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk021
                  LET g_chkparam.err_str[1] = "apm-00214:adb-00362"
                  LET g_chkparam.err_str[2] = "anm-00025:adb-00363"
                  LET g_chkparam.err_str[3] = "apm-00269:adb-00365"                           
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_oofb019_1") THEN
                     LET g_xmdk_m.xmdk021      = g_xmdk_m_o.xmdk021                     
                     LET g_xmdk_m.xmdk205      = g_xmdk_m_o.xmdk205                     
                     LET g_xmdk_m.xmdk206      = g_xmdk_m_o.xmdk206
                     
                     LET g_xmdk_m.xmdk205_desc = s_desc_get_dbad001_desc(g_xmdk_m.xmdk205)
                     LET g_xmdk_m.xmdk206_desc = s_desc_get_dbab001_desc(g_xmdk_m.xmdk206) 
                     CALL adbt540_xmdk021_ref()

                     DISPLAY BY NAME g_xmdk_m.xmdk021,
                                     g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc,
                                     g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc
                     NEXT FIELD xmdk021
                  END IF
                  
                  IF g_xmdk_m.xmdk021 != g_xmdk_m_o.xmdk021 OR g_xmdk_m_o.xmdk021 IS NULL THEN
                     #重新取得站點/路線資料
                     CALL s_adb_delivery_site_default(g_xmdk_m.xmdk009,'','3',g_xmdk_m.xmdk021)
                        RETURNING g_xmdk_m.xmdk205
                     CALL s_adb_get_dbaf001(g_xmdk_m.xmdk205)
                        RETURNING g_xmdk_m.xmdk206
                        
                     LET g_xmdk_m.xmdk205_desc = s_desc_get_dbad001_desc(g_xmdk_m.xmdk205)
                     LET g_xmdk_m.xmdk206_desc = s_desc_get_dbab001_desc(g_xmdk_m.xmdk206) 
                  END IF
                  
                  DISPLAY BY NAME g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc                     
               END IF            
            END IF 
            
            CALL adbt540_xmdk021_ref()
            
            LET g_xmdk_m_o.xmdk021 = g_xmdk_m.xmdk021        
            LET g_xmdk_m_o.xmdk205 = g_xmdk_m.xmdk205        
            LET g_xmdk_m_o.xmdk206 = g_xmdk_m.xmdk206]]>
  </point>
  <point name="input.a.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CALL adbt540_xmdk022_ref()
            IF NOT cl_null(g_xmdk_m.xmdk022) THEN 
               IF NOT s_azzi650_chk_exist('263',g_xmdk_m.xmdk022) THEN
                  LET g_xmdk_m.xmdk022 = g_xmdk_m_t.xmdk022
                  CALL adbt540_xmdk022_ref()
                  NEXT FIELD CURRENT
               END IF          
            END IF 
            
            #檢查起運地
            IF NOT cl_null(g_xmdk_m.xmdk023) THEN
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN
                  NEXT FIELD xmdk023
               END IF
            END IF
            
            #檢查目的地
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                  NEXT FIELD xmdk024
               END IF
            END IF]]>
  </point>
  <point name="input.a.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CALL adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk023) THEN
            
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) THEN
                  LET g_xmdk_m.xmdk023 = g_xmdk_m_t.xmdk023
                     
                  CALL adbt540_location_ref(g_xmdk_m_t.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk023_desc
                     
                  NEXT FIELD CURRENT
               END IF
           
            END IF 
            
            #檢查目的地
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                  NEXT FIELD xmdk024
               END IF            
            END IF
]]>
  </point>
  <point name="input.a.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CALL adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            IF NOT cl_null(g_xmdk_m.xmdk024) THEN
            
               IF NOT s_apmi011_check_location(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) THEN
                  LET g_xmdk_m.xmdk024 = g_xmdk_m_t.xmdk024
                     
                  CALL adbt540_location_ref(g_xmdk_m_t.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
                  DISPLAY BY NAME g_xmdk_m.xmdk024_desc
                     
                  NEXT FIELD CURRENT
            
               END IF
            END IF ]]>
  </point>
  <point name="input.a.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.xmdk030" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk030_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc
            IF NOT cl_null(g_xmdk_m.xmdk030) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk030 != g_xmdk_m_o.xmdk030 OR g_xmdk_m_o.xmdk030 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdk030
                  LET g_chkparam.arg2 = '1'
                  IF NOT cl_chk_exist("v_oojd001") THEN
                     LET g_xmdk_m.xmdk030 = g_xmdk_m_o.xmdk030
                     LET g_xmdk_m.xmdk030_desc = s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030)
                     DISPLAY BY NAME g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk030_desc = s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030)
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc 
            
            LET g_xmdk_m_o.xmdk030 = g_xmdk_m.xmdk030]]>
  </point>
  <point name="input.a.xmdk031" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk031_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk031_desc
            IF NOT cl_null(g_xmdk_m.xmdk031) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk031 != g_xmdk_m_o.xmdk031 OR g_xmdk_m_o.xmdk031 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('295',g_xmdk_m.xmdk031) THEN
                     LET g_xmdk_m.xmdk031 = g_xmdk_m_o.xmdk031
                     CALL adbt540_xmdk031_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL adbt540_xmdk031_ref()
            
            LET g_xmdk_m_o.xmdk031 = g_xmdk_m.xmdk031 
            ]]>
  </point>
  <point name="input.a.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk033" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk033_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk033_desc
            IF NOT cl_null(g_xmdk_m.xmdk033) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk033 != g_xmdk_m_o.xmdk033 OR g_xmdk_m_o.xmdk033 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('209',g_xmdk_m.xmdk033) THEN
                     LET g_xmdk_m.xmdk033 = g_xmdk_m_o.xmdk033
                     CALL adbt540_xmdk033_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL adbt540_xmdk033_ref()
            
            LET g_xmdk_m_o.xmdk033 = g_xmdk_m.xmdk033]]>
  </point>
  <point name="input.a.xmdk034" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk034_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk034_desc
            IF NOT cl_null(g_xmdk_m.xmdk034) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk034 != g_xmdk_m_t.xmdk034 OR g_xmdk_m_t.xmdk034 IS NULL )) THEN
                   IF NOT s_azzi650_chk_exist('297',g_xmdk_m.xmdk034) THEN
                     LET g_xmdk_m.xmdk034 = g_xmdk_m_t.xmdk034
                     DISPLAY BY NAME g_xmdk_m.xmdk034
                     CALL adbt540_xmdk034_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL adbt540_xmdk034_ref()  

            LET g_xmdk_m_t.xmdk034 = g_xmdk_m.xmdk034]]>
  </point>
  <point name="input.a.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CALL adbt540_xmdk038_ref()
            IF NOT cl_null(g_xmdk_m.xmdk038) THEN 
               IF NOT s_azzi650_chk_exist('299',g_xmdk_m.xmdk038) THEN
                  LET g_xmdk_m.xmdk038 = g_xmdk_m_t.xmdk038
                  CALL adbt540_xmdk038_ref()
                  NEXT FIELD CURRENT
               END IF            

            END IF 

]]>
  </point>
  <point name="input.a.xmdk039" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk039_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc
            IF NOT cl_null(g_xmdk_m.xmdk039) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk039 != g_xmdk_m_t.xmdk039 OR g_xmdk_m_t.xmdk039 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdksite
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk039
                  LET g_chkparam.arg3 = 'Y'
                     
                  IF NOT cl_chk_exist("v_inaa001_6") THEN
                     LET g_xmdk_m.xmdk039 = g_xmdk_m_t.xmdk039
                     LET g_xmdk_m.xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk039)
                     DISPLAY BY NAME g_xmdk_m.xmdk039,g_xmdk_m.xmdk039_desc            
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk039)
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc 
            
            LET g_xmdk_m_t.xmdk039 = g_xmdk_m.xmdk039]]>
  </point>
  <point name="input.a.xmdk040" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk040_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk040_desc
            IF NOT cl_null(g_xmdk_m.xmdk040) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk040 != g_xmdk_m_t.xmdk040 OR g_xmdk_m_t.xmdk040 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdk_m.xmdksite
                  LET g_chkparam.arg2 = g_xmdk_m.xmdk040
                  LET g_chkparam.arg3 = 'N'
                     
                  IF NOT cl_chk_exist("v_inaa001_6") THEN
                     LET g_xmdk_m.xmdk040 = g_xmdk_m_t.xmdk040
                     LET g_xmdk_m.xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk040)
                     DISPLAY BY NAME g_xmdk_m_t.xmdk040,g_xmdk_m.xmdk040_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk040)
            DISPLAY BY NAME g_xmdk_m.xmdk040_desc 
            
            LET g_xmdk_m_t.xmdk040 = g_xmdk_m.xmdk040]]>
  </point>
  <point name="input.a.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdk200" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #沒有來源單(出通單/訂單)時,經銷商才允許維護,下面以此為前提做處理
            LET g_xmdk_m.xmdk200_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk200_desc
            IF NOT cl_null(g_xmdk_m.xmdk200) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk200 != g_xmdk_m_o.xmdk200 OR g_xmdk_m_o.xmdk200 IS NULL )) THEN
                  IF NOT adbt540_xmdk200_chk() THEN
                     LET g_xmdk_m.xmdk200 = g_xmdk_m_o.xmdk200
                     LET g_xmdk_m.xmdk200_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk200)
                     DISPLAY BY NAME g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_xmdk_m.xmdk200_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk200)
            DISPLAY BY NAME g_xmdk_m.xmdk200_desc
            
            LET g_xmdk_m_o.xmdk200 = g_xmdk_m.xmdk200]]>
  </point>
  <point name="input.a.xmdk201" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk201_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk201_desc
            IF NOT cl_null(g_xmdk_m.xmdk201) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk201 != g_xmdk_m_o.xmdk201 OR g_xmdk_m_o.xmdk201 IS NULL )) THEN
                  IF NOT adbt540_xmdk201_chk() THEN
                     LET g_xmdk_m.xmdk201 = g_xmdk_m_o.xmdk201
                     LET g_xmdk_m.xmdk201_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk201)
                     DISPLAY BY NAME g_xmdk_m.xmdk201_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            END IF           
            
            LET g_xmdk_m.xmdk201_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk201)
            DISPLAY BY NAME g_xmdk_m.xmdk201_desc
            
            LET g_xmdk_m_o.xmdk201 = g_xmdk_m.xmdk201]]>
  </point>
  <point name="input.a.xmdk202" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk202_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk202_desc
            IF NOT cl_null(g_xmdk_m.xmdk202) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xmdk_m.xmdk202 != g_xmdk_m_o.xmdk202 OR g_xmdk_m_o.xmdk202 IS NULL )) THEN
                  IF NOT adbt540_xmdk202_chk() THEN
                     LET g_xmdk_m.xmdk202 = g_xmdk_m_o.xmdk202
                     LET g_xmdk_m.xmdk202_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202)
                     DISPLAY BY NAME g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc         
                     NEXT FIELD CURRENT
                  END IF                  
               END IF
            END IF
            
            LET g_xmdk_m.xmdk202_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk202)
            DISPLAY BY NAME g_xmdk_m.xmdk202_desc            
           
            LET g_xmdk_m_o.xmdk202 = g_xmdk_m.xmdk202]]>
  </point>
  <point name="input.a.xmdk205" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.xmdk206" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.xmdk207" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdk207_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdk207_desc
            IF NOT cl_null(g_xmdk_m.xmdk207) THEN
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdk207 != g_xmdk_m_o.xmdk207 OR g_xmdk_m_o.xmdk207 IS NULL )) THEN
                  IF s_aooi500_setpoint(g_prog,'xmdk207') THEN
                     CALL s_aooi500_chk(g_prog,'xmdk207',g_xmdk_m.xmdk207 ,g_xmdk_m.xmdksite) RETURNING l_success,l_errno
                     IF NOT l_success THEN
                        LET g_xmdk_m.xmdk207 = g_xmdk_m_o.xmdk207
                        LET g_xmdk_m.xmdk207_desc = s_desc_get_department_desc(g_xmdk_m.xmdk207)
                        DISPLAY BY NAME g_xmdk_m.xmdk207,g_xmdk_m.xmdk207_desc
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xmdk_m.xmdk207
                     LET g_chkparam.arg2 = '9'
                     LET g_chkparam.arg3 = g_site
                     IF NOT cl_chk_exist("v_ooed004") THEN
                        LET g_xmdk_m.xmdk207 = g_xmdk_m_o.xmdk207
                        LET g_xmdk_m.xmdk207_desc = s_desc_get_department_desc(g_xmdk_m.xmdk207)
                        DISPLAY BY NAME g_xmdk_m.xmdk207,g_xmdk_m.xmdk207_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF    
               END IF    
            END IF
            
            LET g_xmdk_m.xmdk207_desc = s_desc_get_department_desc(g_xmdk_m.xmdk207)
            DISPLAY BY NAME g_xmdk_m.xmdk207_desc   

            LET g_xmdk_m_t.xmdk207 = g_xmdk_m.xmdk207]]>
  </point>
  <point name="input.a.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.a.xmdkdocno" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmdk_m.xmdkdocno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD CURRENT
            END IF
                        
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdk_m.xmdkdocno != g_xmdkdocno_t OR g_xmdkdocno_t = NULL )) THEN 
               IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdk_t WHERE "||"xmdkent = '" ||g_enterprise|| "' AND "||"xmdkdocno = '"||g_xmdk_m.xmdkdocno ||"'",'std-00004',0) THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdkdocno_t
                  NEXT FIELD CURRENT
               END IF               

               IF NOT adbt540_xmdkdocno_chk() THEN
                  LET g_xmdk_m.xmdkdocno = g_xmdkdocno_t
                  NEXT FIELD CURRENT
               END IF
      
               #出貨單與出通單勾稽
               LET g_slip_para = adbt540_get_slip_para(g_xmdk_m.xmdkdocno)
               #根據參數的新舊值判斷已帶值的欄位是否需要清空
               IF g_slip_para <> g_slip_para_t THEN
                  CALL adbt540_notice_master_default('Y')
                  CALL adbt540_order_master_default('Y')               
               END IF               
            END IF 
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
            LET g_slip_para_t = g_slip_para]]>
  </point>
  <point name="input.a.xmdksite" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdk_m.xmdksite_desc = ' '
            DISPLAY BY NAME g_xmdk_m.xmdksite_desc
            IF NOT cl_null(g_xmdk_m.xmdksite) THEN
               IF p_cmd = 'a' OR 
                 (p_cmd = 'u' AND (g_xmdk_m.xmdksite != g_xmdk_m_t.xmdksite OR g_xmdk_m_t.xmdksite IS NULL )) THEN
                  CALL s_aooi500_chk(g_prog,'xmdksite',g_xmdk_m.xmdksite,g_xmdk_m.xmdksite) 
                  RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err() 
                     LET g_xmdk_m.xmdksite = g_xmdk_m_t.xmdksite
                     LET g_xmdk_m.xmdksite_desc = s_desc_get_department_desc(g_xmdk_m.xmdksite)
                     DISPLAY BY NAME g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_ins_site_flag = 'Y'
                  END IF               
               END IF    
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = 'sub-00507'
               LET g_errparam.popup  = TRUE
               CALL cl_err()    
               NEXT FIELD CURRENT                      
            END IF
            LET g_xmdk_m.xmdksite_desc = s_desc_get_department_desc(g_xmdk_m.xmdksite)
            DISPLAY BY NAME g_xmdk_m.xmdksite_desc            
            
            CALL s_tax_get_ooef019(g_xmdk_m.xmdksite) RETURNING l_success,g_ooef019
            
            CALL adbt540_set_entry(p_cmd)
            CALL adbt540_set_no_entry(p_cmd)
            
            LET g_xmdk_m_t.xmdksite = g_xmdk_m.xmdksite]]>
  </point>
  <point name="input.a.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.a.xmdkunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.accept" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="input.after_define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="input.after_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT INT_FLAG THEN
      #重新計算整單的未稅、含稅總金額
      CALL s_tax_recount_tmp()
      
      CALL s_transaction_begin()
      CALL s_adbt540_cal_amount(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk017) RETURNING l_success
      IF l_success THEN
         CALL s_transaction_end('Y',0)
      ELSE             
         CALL s_transaction_end('N',0)
      END IF   
   END IF          ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="input.b.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                        ]]>
  </point>
  <point name="input.b.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          ]]>
  </point>
  <point name="input.b.page1.xmdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              
            #必須先輸入料號            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN 
               IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) OR  NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN               
                  #取得產品特徵類別
                  LET l_imaa005 = NULL
                  CALL s_adb_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
                         
                  IF NOT cl_null(l_imaa005) THEN
                     CALL l_inam.clear()
                     IF l_cmd = 'a' AND cl_null(g_xmdl_d[l_ac].xmdl009) THEN   #新增且無值時開啟
                        CALL s_feature_multi(g_xmdl_d[l_ac].xmdl008,'','',g_site,g_xmdk_m.xmdkdocno) RETURNING l_success,l_inam
                        LET g_xmdl_d[l_ac].xmdl009 = l_inam[1].inam002
                        LET g_xmdl_d[l_ac].xmdl018 = l_inam[1].inam004
                        DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl018                  
                     END IF              
                  END IF
               END IF   
            END IF]]>
  </point>
  <point name="input.b.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl013" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL adbt540_set_entry_b(l_cmd)                                                                                                ]]>
  </point>
  <point name="input.b.page1.xmdl014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                              
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'   #請先輸入客戶編號！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       #請先輸入客戶編號
               NEXT FIELD xmdk007
            END IF                                                                                         ]]>
  </point>
  <point name="input.b.xmdk009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'   #請先輸入客戶編號！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               #請先輸入客戶編號
               NEXT FIELD xmdk007
            END IF                                                                                              ]]>
  </point>
  <point name="input.b.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk016" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_ooef016 = ''
            SELECT ooef016 INTO l_ooef016 
              FROM ooef_t 
             WHERE ooefent = g_enterprise 
               AND ooef001 = g_xmdk_m.xmdksite                                                                                                                      ]]>
  </point>
  <point name="input.b.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk021" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_xmdk_m.xmdk009) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00146'   #請先輸入收貨客戶！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               
               NEXT FIELD xmdk009
            END IF                                                                                                          ]]>
  </point>
  <point name="input.b.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdkdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdksite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.b.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.before_dialog" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL adbt540_set_act_visible_b()                                                                        
         CALL adbt540_set_act_no_visible_b()  
         IF p_cmd = 'a' THEN
            CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤  
         END IF]]>
  </point>
  <point name="input.before_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xmdk_m_t.* = g_xmdk_m.*           ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                  
                  #刪除多庫儲批
                  #元件參數：出貨單(1),單據單號,項次,是否彈出視窗詢問Y/N
                  IF NOT adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'N') THEN                       
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF
                  
                  #刪除稅別明細
                  IF NOT s_adb_tax_delete(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'2') THEN
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF                 ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #特徵碼input
               INITIALIZE l_xmdl.* TO NULL               
               
               SELECT xmdlent,xmdlsite,xmdldocno,xmdl001,
                      xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,
                      xmdl007,xmdl008,xmdl010,xmdl012,
                      xmdl013,xmdl014,xmdl015,xmdl016,xmdl017,
                      xmdl019,xmdl021,xmdl023,xmdl024,xmdl025,
                      xmdl026,xmdl030,xmdl031,xmdl032,xmdl033,
                      xmdl034,xmdl035,xmdl036,xmdl037,xmdl038,
                      xmdl039,xmdl040,xmdl041,xmdl042,xmdl043,
                      xmdl044,xmdl045,xmdl046,xmdl047,xmdl048,
                      xmdl049,xmdl050,xmdl051,xmdl052,xmdl081,
                      xmdl082,xmdl083,xmdl084,xmdl085,xmdl086,
                      xmdl087,xmdl088,xmdl200,xmdl201,xmdl202,
                      xmdl203,xmdl204,xmdl206,xmdl207,xmdl208,
                      xmdl209,xmdl210,xmdl211,xmdl212,xmdl213,
                      xmdl214,xmdl215,xmdl216,xmdl217,xmdl218,
                      xmdl219,xmdlunit,xmdlorga
                 INTO l_xmdl.xmdlent,l_xmdl.xmdlsite,l_xmdl.xmdldocno,l_xmdl.xmdl001,                 
                      l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,l_xmdl.xmdl006,                 
                      l_xmdl.xmdl007,l_xmdl.xmdl008,l_xmdl.xmdl010,l_xmdl.xmdl012,                 
                      l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl017,                 
                      l_xmdl.xmdl019,l_xmdl.xmdl021,l_xmdl.xmdl023,l_xmdl.xmdl024,l_xmdl.xmdl025,
                      l_xmdl.xmdl026,l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,l_xmdl.xmdl033,
                      l_xmdl.xmdl034,l_xmdl.xmdl035,l_xmdl.xmdl036,l_xmdl.xmdl037,l_xmdl.xmdl038,
                      l_xmdl.xmdl039,l_xmdl.xmdl040,l_xmdl.xmdl041,l_xmdl.xmdl042,l_xmdl.xmdl043,
                      l_xmdl.xmdl044,l_xmdl.xmdl045,l_xmdl.xmdl046,l_xmdl.xmdl047,l_xmdl.xmdl048,
                      l_xmdl.xmdl049,l_xmdl.xmdl050,l_xmdl.xmdl051,l_xmdl.xmdl052,l_xmdl.xmdl081,
                      l_xmdl.xmdl082,l_xmdl.xmdl083,l_xmdl.xmdl084,l_xmdl.xmdl085,l_xmdl.xmdl086,
                      l_xmdl.xmdl087,l_xmdl.xmdl088,l_xmdl.xmdl200,l_xmdl.xmdl201,l_xmdl.xmdl202,
                      l_xmdl.xmdl203,l_xmdl.xmdl204,l_xmdl.xmdl206,l_xmdl.xmdl207,l_xmdl.xmdl208,
                      l_xmdl.xmdl209,l_xmdl.xmdl210,l_xmdl.xmdl211,l_xmdl.xmdl212,l_xmdl.xmdl213,
                      l_xmdl.xmdl214,l_xmdl.xmdl215,l_xmdl.xmdl216,l_xmdl.xmdl217,l_xmdl.xmdl218,
                      l_xmdl.xmdl219,l_xmdl.xmdlunit,l_xmdl.xmdlorga
                 FROM xmdl_t
                WHERE xmdlent = g_enterprise
                  AND xmdldocno = g_xmdk_m.xmdkdocno
                  AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
                  
               IF l_inam.getLength() > 1 THEN   #第一筆已呈現在畫面上，固從第二筆開始新增                     
                  FOR l_i = 2 TO l_inam.getLength()                                         
                     LET l_xmdl.xmdlseq = adbt540_xmdlseq_default(g_xmdk_m.xmdkdocno)                     
                     LET l_xmdl.xmdl009 = l_inam[l_i].inam002
                     LET l_xmdl.xmdl018 = l_inam[l_i].inam004
                     LET l_xmdl.xmdl220 = 0
                     #出貨數量轉包裝數量
                     CALL s_aooi250_convert_qty(l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl204,l_xmdl.xmdl018)
                        RETURNING l_success,l_xmdl.xmdl205
                        
                     IF adbt540_xmdl018_chk_and_val() THEN        #出通單               
                        CALL adbt540_xmdl205_qty_convert(l_xmdl.xmdlseq,
                                                         l_xmdl.xmdl008,l_xmdl.xmdl017,l_xmdl.xmdl018,
                                                         l_xmdl.xmdl204,l_xmdl.xmdl205,l_xmdl.xmdl019,
                                                         l_xmdl.xmdl021,l_xmdl.xmdl024,l_xmdl.xmdl025)
                           RETURNING l_xmdl.xmdl018,l_xmdl.xmdl020,l_xmdl.xmdl022,l_xmdl.xmdl027,l_xmdl.xmdl028,l_xmdl.xmdl029                    
                     ELSE
                        CONTINUE FOR
                     END IF      
                     
                     #產品特徵為NULL時,給空白   
                     IF cl_null(l_xmdl.xmdl009) THEN
                        LET l_xmdl.xmdl009 = ' '
                     END IF    
                     
                     INSERT INTO xmdl_t ( xmdlent,xmdlsite,xmdldocno,xmdlseq,xmdl001,
                                          xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,
                                          xmdl007,xmdl009,xmdl010,xmdl011,xmdl012,
                                          xmdl013,xmdl014,xmdl015,xmdl016,xmdl017,
                                          xmdl018,xmdl019,xmdl020,xmdl021,xmdl022,
                                          xmdl023,xmdl024,xmdl025,xmdl026,xmdl027,
                                          xmdl028,xmdl029,xmdl030,xmdl031,xmdl032,
                                          xmdl033,xmdl034,xmdl035,xmdl036,xmdl037,
                                          xmdl038,xmdl039,xmdl040,xmdl041,xmdl042,
                                          xmdl043,xmdl044,xmdl045,xmdl046,xmdl047,
                                          xmdl048,xmdl049,xmdl050,xmdl051,xmdl052,
                                          xmdl081,xmdl082,xmdl083,xmdl084,xmdl085,
                                          xmdl086,xmdl087,xmdl088,xmdl200,xmdl201,
                                          xmdl202,xmdl203,xmdl204,xmdl205,xmdl206,
                                          xmdl207,xmdl208,xmdl209,xmdl210,xmdl211,
                                          xmdl212,xmdl213,xmdl214,xmdl215,xmdl216,
                                          xmdl217,xmdl218,xmdl219,xmdl220,xmdlunit,
                                          xmdlorga
                                         )                                  
                          VALUES ( l_xmdl.xmdlent,l_xmdl.xmdlsite,l_xmdl.xmdldocno,l_xmdl.xmdlseq,l_xmdl.xmdl001,                                  
                                   l_xmdl.xmdl002,l_xmdl.xmdl003,l_xmdl.xmdl004,l_xmdl.xmdl005,l_xmdl.xmdl006,                                  
                                   l_xmdl.xmdl007,l_xmdl.xmdl009,l_xmdl.xmdl010,l_xmdl.xmdl011,l_xmdl.xmdl012,                                  
                                   l_xmdl.xmdl013,l_xmdl.xmdl014,l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl017,                                  
                                   l_xmdl.xmdl018,l_xmdl.xmdl019,l_xmdl.xmdl020,l_xmdl.xmdl021,l_xmdl.xmdl022,                                  
                                   l_xmdl.xmdl023,l_xmdl.xmdl024,l_xmdl.xmdl025,l_xmdl.xmdl026,l_xmdl.xmdl027,                                  
                                   l_xmdl.xmdl028,l_xmdl.xmdl029,l_xmdl.xmdl030,l_xmdl.xmdl031,l_xmdl.xmdl032,                                  
                                   l_xmdl.xmdl033,l_xmdl.xmdl034,l_xmdl.xmdl035,l_xmdl.xmdl036,l_xmdl.xmdl037,                                  
                                   l_xmdl.xmdl038,l_xmdl.xmdl039,l_xmdl.xmdl040,l_xmdl.xmdl041,l_xmdl.xmdl042,                                  
                                   l_xmdl.xmdl043,l_xmdl.xmdl044,l_xmdl.xmdl045,l_xmdl.xmdl046,l_xmdl.xmdl047,                                  
                                   l_xmdl.xmdl048,l_xmdl.xmdl049,l_xmdl.xmdl050,l_xmdl.xmdl051,l_xmdl.xmdl052,
                                   l_xmdl.xmdl081,l_xmdl.xmdl082,l_xmdl.xmdl083,l_xmdl.xmdl084,l_xmdl.xmdl085,
                                   l_xmdl.xmdl086,l_xmdl.xmdl087,l_xmdl.xmdl088,l_xmdl.xmdl200,l_xmdl.xmdl201,
                                   l_xmdl.xmdl202,l_xmdl.xmdl203,l_xmdl.xmdl204,l_xmdl.xmdl205,l_xmdl.xmdl206,
                                   l_xmdl.xmdl207,l_xmdl.xmdl208,l_xmdl.xmdl209,l_xmdl.xmdl210,l_xmdl.xmdl211,
                                   l_xmdl.xmdl212,l_xmdl.xmdl213,l_xmdl.xmdl214,l_xmdl.xmdl215,l_xmdl.xmdl216,
                                   l_xmdl.xmdl217,l_xmdl.xmdl218,l_xmdl.xmdl219,l_xmdl.xmdl220,l_xmdl.xmdlunit,
                                   l_xmdl.xmdlorga )
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdl_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()                   
                     ELSE
                        CALL adbt540_01_xmdm_modify(g_mutil_inv,   l_xmdl.xmdlseq,l_xmdl.xmdlsite,l_xmdl.xmdldocno,l_xmdl.xmdlseq,   #出貨單(1),單據項次舊值,營運據點,單據單號,項次
                                                    l_xmdl.xmdl008,l_xmdl.xmdl009,l_xmdl.xmdl011, l_xmdl.xmdl012,  l_xmdl.xmdl014,   #料件編號,產品特徵,作業編號,製程序,庫位
                                                    l_xmdl.xmdl015,l_xmdl.xmdl016,l_xmdl.xmdl017, l_xmdl.xmdl018,  l_xmdl.xmdl019,   #儲位,批號,出貨單位,數量,參考單位
                                                    l_xmdl.xmdl020,'',            '',             l_xmdl.xmdl052)                    #參考數量,簽退數量,簽退參考數量,庫存管理特徵
                        RETURNING l_success   
                     END IF
                  END FOR  
                  CALL adbt540_b_fill()
                  LET g_rec_b = l_inam.getLength() - 1                  
               END IF                              ]]>
  </point>
  <point name="input.body.a_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_01_xmdm_modify(g_mutil_inv,           l_xmdlseq_backup,      g_xmdk_m.xmdksite,     g_xmdk_m.xmdkdocno,    g_xmdl_d[l_ac].xmdlseq,   #出貨單(1),單據項次舊值,營運據點,單據單號,項次
                                           g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl014,   #料件編號,產品特徵,作業編號,製程序,庫位
                                           g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,   #儲位,批號,出貨單位,數量,參考單位
                                           g_xmdl_d[l_ac].xmdl020,'',                    '',                    g_xmdl_d[l_ac].xmdl052)                          #參考數量,簽退數量,簽退參考數量,庫存管理特徵
               RETURNING l_success  
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               END IF

               IF NOT cl_null(g_xmdl_d_t.xmdlseq) AND
                  g_xmdl_d_t.xmdlseq <> g_xmdl_d[l_ac].xmdlseq THEN
                  CALL s_adb_tax_delete(g_xmdk_m.xmdkdocno,g_xmdl_d_t.xmdlseq,'2')
                     RETURNING l_success
                  IF l_success = FALSE THEN
                     CALL s_transaction_end('N','0')
                  END IF
               END IF                                                                                                                                       ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #折扣
            LET l_success = ''
            CALL s_adbt500_gen_rtic('2',g_xmdk_m.xmdkdocno)
               RETURNING l_success
            IF l_success THEN   
               LET l_success = ''
               CALL s_adbt540_cal_amount(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk017)
                  RETURNING l_success
               IF l_success THEN 
                  CALL s_transaction_end('Y',0)
               ELSE   
                  CALL s_transaction_end('N',0)
               END IF   
            ELSE
               CALL s_transaction_end('N',0)
            END IF
            CALL adbt540_b_fill() ]]>
  </point>
  <point name="input.body.after_row" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_set_act_visible_b()
               CALL adbt540_set_act_no_visible_b()                                                                                     
               CALL adbt540_set_no_required_b(l_cmd)            
               CALL adbt540_set_required_b(l_cmd) 
               LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*  #BACKUP
               LET g_xmdl2_d_o.* = g_xmdl2_d[l_ac].*               
               LET l_xmdlseq_backup = g_xmdl_d[l_ac].xmdlseq              ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_xmdl2_d[l_ac].xmdl087 = g_xmdl087_def    
               #稅別應用為'1'正常稅率帶入單頭的稅率
               IF g_oodb011 = '1' THEN
                  LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012
                  LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013
               END IF                                                                                                                        ]]>
  </point>
  <point name="input.body.b_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #產品特徵為NULL時,給空白   
               IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
                  LET g_xmdl_d[l_ac].xmdl009 = ' '
               END IF                                                                                                                                       ]]>
  </point>
  <point name="input.body.before_input2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF p_cmd = 'u' AND l_auto_detail <> 'Y' THEN         
               CALL s_transaction_begin()
               IF NOT adbt540_auto_ins_detail() THEN
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               LET l_auto_detail = 'Y'
            END IF               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.before_row2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL adbt540_set_act_visible_b()
            CALL adbt540_set_act_no_visible_b()  ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #單頭出通單號不為空時,Default至單身
            IF NOT cl_null(g_xmdk_m.xmdk005) THEN
               LET g_xmdl_d[l_ac].xmdl001 = g_xmdk_m.xmdk005
            END IF
            #單頭訂單單號不為空時,Default至單身
            IF NOT cl_null(g_xmdk_m.xmdk006) THEN
               LET g_xmdl_d[l_ac].xmdl003 = g_xmdk_m.xmdk006
            END IF  
            
            CALL adbt540_set_no_required_b(l_cmd)            
            CALL adbt540_set_required_b(l_cmd) 
            LET g_xmdl_d_o.* = g_xmdl_d[l_ac].* ]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_xmdlseq_backup = ''    #清空
                        
            IF cl_null(g_xmdl_d[l_ac].xmdlseq) THEN
               LET g_xmdl_d[l_ac].xmdlseq = adbt540_xmdlseq_default(g_xmdk_m.xmdkdocno)
            END IF                      ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                                                  ]]>
  </point>
  <point name="input.body2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body2.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body2.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CANCEL DELETE  #價格資訊頁籤不可直接刪除                                                                                                                       ]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #取得稅別應用
            CALL s_tax_chk(g_site,g_xmdk_m.xmdk012)
            RETURNING g_success,g_oodbl004,g_oodb005,g_oodb006,g_oodb011                                                                                                 ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            CANCEL INSERT   #價格資訊頁籤不可直接新增            ]]>
  </point>
  <point name="input.body2.before_row" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #FROMONLY顯示           
            CALL adbt540_xmdl_ref()
            CALL adbt540_xmdl2_ref()
            CALL adbt540_xmdl3_ref()
            CALL adbt540_xmdl4_ref()
            CALL adbt540_xmdl5_ref()
            CALL adbt540_xmdl6_ref()  
            CALL adbt540_xmdl7_ref()            ]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_xmdl_d[l_ac].xmdlsite = g_site
            
            #稅別應用為'1'正常稅率帶入單頭的稅率
            IF g_oodb011 = '1' THEN
               LET g_xmdl2_d[l_ac].xmdl025 = g_xmdk_m.xmdk012
               LET g_xmdl2_d[l_ac].xmdl026 = g_xmdk_m.xmdk013
            END IF]]>
  </point>
  <point name="input.body2.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                              ]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                                                  ]]>
  </point>
  <point name="input.body3.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                            ]]>
  </point>
  <point name="input.body3.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.b_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #產品特徵為NULL時,給空白   
               IF cl_null(g_xmdl3_d[l_ac].xmdm002) THEN
                  LET g_xmdl3_d[l_ac].xmdm002 = ' '
               END IF                                                                                                                                   ]]>
  </point>
  <point name="input.body3.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.body3.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body3.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.body3.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.c.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_where = NULL 
            LET l_where = " xmdhunit = '",g_xmdk_m.xmdksite,"' ",    #發貨組織
                          " AND xmdg001 = '",g_xmdk_m.xmdk002,"' ",  #出貨類型
                          " AND xmdg005 = '",g_xmdk_m.xmdk007,"' ",  #客戶編號
                          " AND xmdh217 = '",g_xmdk_m.xmdk030,"' ",  #銷售渠道
                          " AND xmdh212 = '",g_xmdk_m.xmdk009,"' ",  #收貨客戶
                          " AND xmdh213 = '",g_xmdk_m.xmdk021,"' ",  #收貨地址
                          " AND xmdg006 = '",g_xmdk_m.xmdk008,"' ",  #收款客戶
                          " AND xmdg202 = '",g_xmdk_m.xmdk202,"' ",  #發票客戶
                          " AND xmdg013 = '",g_xmdk_m.xmdk015,"' ",  #發票類型
                          " AND xmdg008 = '",g_xmdk_m.xmdk010,"' ",  #收款條件
                          " AND xmdg009 = '",g_xmdk_m.xmdk011,"' ",  #交易條件
                          " AND xmdg014 = '",g_xmdk_m.xmdk016,"' ",  #幣別
                          " AND xmdg010 = '",g_xmdk_m.xmdk012,"' ",  #稅別
                          " AND xmdg027 = '",g_xmdk_m.xmdk031,"' "   #銷售分類
            IF NOT cl_null(g_xmdk_m.xmdk200) THEN
               LET l_where = l_where," AND xmdg200 = '",g_xmdk_m.xmdk200,"' "   #經銷商 
            END IF
            
            IF NOT cl_null(g_xmdk_m.xmdk201) THEN
               LET l_where = l_where," AND xmdg201 = '",g_xmdk_m.xmdk201,"' "   #代送商 
            END IF
            
            IF NOT cl_null(g_xmdk_m.xmdk207) THEN
               LET l_where = l_where," AND xmdhsite = '",g_xmdk_m.xmdk207,"' "  #銷售組織 
            END IF
            
            IF g_xmdk_m.xmdk028 = 'Y' THEN     #包裝單
               LET l_where = l_where,g_qryparam.where," AND xmdg024 = 'N'"
            END IF            
            IF g_xmdk_m.xmdk029 = 'Y' THEN     #Invoice
               LET l_where = l_where,g_qryparam.where," AND xmdg025 = 'N'"
            END IF

            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE 
			   LET g_qryparam.where =  l_where
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl001   #給予default值
            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl002
            LET g_qryparam.arg1 = g_site                       #給予arg
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = g_xmdk_m.xmdksite
            CALL q_xmdhdocno()                                 #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl001 = g_qryparam.return1    #將開窗取得的值回傳到變數
            LET g_xmdl_d[l_ac].xmdl002 = g_qryparam.return2
            DISPLAY g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002 TO xmdl001,xmdl002   #顯示到畫面上

            NEXT FIELD xmdl001                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_where = NULL
            LET l_where = " xmddunit = '",g_xmdk_m.xmdksite,"' ",    #發貨組織
                          " AND xmda005 = '",g_xmdk_m.xmdk002,"' ",  #出貨類型
                          " AND xmda004 = '",g_xmdk_m.xmdk007,"' ",  #客戶編號
                          " AND xmdd218 = '",g_xmdk_m.xmdk030,"' ",  #銷售渠道
                          " AND xmdd211 = '",g_xmdk_m.xmdk009,"' ",  #收貨客戶
                          " AND xmdd208 = '",g_xmdk_m.xmdk021,"' ",  #收貨地址
                          " AND xmda021 = '",g_xmdk_m.xmdk008,"' ",  #收款客戶
                          " AND xmda203 = '",g_xmdk_m.xmdk202,"' ",  #發票客戶
                          " AND xmda035 = '",g_xmdk_m.xmdk015,"' ",  #發票類型
                          " AND xmda009 = '",g_xmdk_m.xmdk010,"' ",  #收款條件
                          " AND xmda010 = '",g_xmdk_m.xmdk011,"' ",  #交易條件
                          " AND xmda015 = '",g_xmdk_m.xmdk016,"' ",  #幣別
                          " AND xmda011 = '",g_xmdk_m.xmdk012,"' ",  #稅別
                          " AND xmda024 = '",g_xmdk_m.xmdk031,"' "   #銷售分類
            IF NOT cl_null(g_xmdk_m.xmdk200) THEN
               LET l_where = l_where," AND xmda200 = '",g_xmdk_m.xmdk200,"' "   #經銷商 
            END IF
            
            IF NOT cl_null(g_xmdk_m.xmdk201) THEN
               LET l_where = l_where," AND xmda201 = '",g_xmdk_m.xmdk201,"' "   #代送商 
            END IF
            
            IF NOT cl_null(g_xmdk_m.xmdk207) THEN
               LET l_where = l_where," AND xmddsite = '",g_xmdk_m.xmdk207,"' "  #銷售組織 
            END IF
                                                                                                                      #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl003    #給予default值
            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl004
            LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl005
            LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl006
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = g_xmdk_m.xmdksite
            LET g_qryparam.where = l_where
            CALL q_xmdddocno_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl003 = g_qryparam.return1     #將開窗取得的值回傳到變數
            LET g_xmdl_d[l_ac].xmdl004 = g_qryparam.return2
            LET g_xmdl_d[l_ac].xmdl005 = g_qryparam.return3
            LET g_xmdl_d[l_ac].xmdl006 = g_qryparam.return4
            DISPLAY g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004 TO xmdl003,xmdl004    #顯示到畫面上
            DISPLAY g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006 TO xmdl005,xmdl006    
            NEXT FIELD xmdl003                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_where = NULL                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl008             #給予default值

            #CALL s_control_get_doc_sql('imaa001',g_xmdk_m.xmdkdocno,'4') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF
            #
            #CALL s_control_get_doc_sql('imaa001',g_xmdk_m.xmdkdocno,'5') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = g_qryparam.where," AND ",l_where
            #END IF

            CALL q_imaa001()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl008 TO xmdl008              #顯示到畫面上
            CALL s_desc_get_item_desc(g_xmdl_d[l_ac].xmdl008) RETURNING g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
            DISPLAY BY NAME g_xmdl_d[l_ac].xmdl008_desc,g_xmdl_d[l_ac].xmdl008_desc1
            NEXT FIELD xmdl008                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗i段                                                                                                
            #必須先輸入料號            
            IF NOT cl_null(g_xmdl_d[l_ac].xmdl008) THEN            
               #取得產品特徵
               LET l_imaa005 = NULL
               CALL s_adb_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
                      
               IF NOT cl_null(l_imaa005) THEN
                  IF l_cmd = 'u' OR (l_cmd = 'a' AND NOT cl_null(g_xmdl_d[l_ac].xmdl009)) THEN
                     CALL s_feature_single(g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno)
                     RETURNING l_success,g_xmdl_d[l_ac].xmdl009

                     DISPLAY BY NAME g_xmdl_d[l_ac].xmdl009             
                  END IF              
               ELSE   #無使用產品特徵
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00121'
                  LET g_errparam.extend = g_xmdl_d[l_ac].xmdl008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF
            ELSE      #未輸入料號
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00229'   #請先輸入料號！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF]]>
  </point>
  <point name="input.c.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl011             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmdl_d[l_ac].xmdl011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl011 TO xmdl011              #顯示到畫面上
            NEXT FIELD xmdl011                          #返回原欄位                                                                                          ]]>
  </point>
  <point name="input.c.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl014" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014  #給予default值
            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl015  #150324-00007#6 150410 lori522612 add
            LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl016  #150324-00007#6 150410 lori522612 add
            LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl052  #150324-00007#6 150410 lori522612 add
            
            #150324-00007#6 150410 lori522612 mark---(S)
            #LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
            #LET g_qryparam.arg2 = g_xmdl6_d[l_ac].xmdl200
            #LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl225
            #LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl224
            #LET g_qryparam.arg5 = g_xmdl_d[l_ac].xmdl223
            #LET g_qryparam.arg6 = g_xmdl_d[l_ac].xmdl222
            #LET g_qryparam.arg7 = g_xmdk_m.xmdksite
            #CALL q_inaa001_24()                                #呼叫開窗
            #150324-00007#6 150410 lori522612 mark---(E)
            
            #150324-00007#6 150410 lori522612 add---(S)
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
               LET g_xmdl_d[l_ac].xmdl009 = ' '
            END IF
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
            IF cl_null(g_xmdl_d[l_ac].xmdl052) THEN
               LET g_qryparam.arg4 = ''
            ELSE
               LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl052
            END IF
            LET g_qryparam.arg5 = ''
            IF cl_null(g_xmdl_d[l_ac].xmdl015) THEN
               LET g_qryparam.arg6 = ''
            ELSE
               LET g_qryparam.arg6 = g_xmdl_d[l_ac].xmdl015
            END IF
            IF cl_null(g_xmdl_d[l_ac].xmdl016) THEN
               LET g_qryparam.arg7 = ''
            ELSE
               LET g_qryparam.arg7 = g_xmdl_d[l_ac].xmdl016
            END IF
            CALL q_inag004_18()
            #150324-00007#6 150410 lori522612 add---(E)
            
            LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014         #顯示到畫面上
            LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
            
            #150324-00007#6 150410 lori522612 add---(S)
            LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return2
            LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return3
            LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return4
            DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015 
            DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
            DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052             
            LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            #150324-00007#6 150410 lori522612 add---(E)
            
            NEXT FIELD xmdl014                                #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl015" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014   #150324-00007#6 150410 lori522612 add
            LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl015
            LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl016   #150324-00007#6 150410 lori522612 add
            LET g_qryparam.default4 = g_xmdl_d[l_ac].xmdl052   #150324-00007#6 150410 lori522612 add
            #150324-00007#6 150410 lori522612 add---(S)
            #LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            #LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl014
            #CALL q_inab002_6()                          
            #LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return1        #將開窗取得的值回傳到變數
            #DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
            #LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            #150324-00007#6 150410 lori522612 add---(E)
            
            #150324-00007#6 150410 lori522612 add---(S)
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            IF cl_null(g_xmdl_d[l_ac].xmdl009) THEN
               LET g_xmdl_d[l_ac].xmdl009 = ' '
            END IF
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
            IF cl_null(g_xmdl_d[l_ac].xmdl052) THEN
               LET g_qryparam.arg4 = ''
            ELSE
               LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl052
            END IF
            LET g_qryparam.arg5 = g_xmdl_d[l_ac].xmdl014
            LET g_qryparam.arg6 = ''
            IF cl_null(g_xmdl_d[l_ac].xmdl016) THEN
               LET g_qryparam.arg7 = ''
            ELSE
               LET g_qryparam.arg7 = g_xmdl_d[l_ac].xmdl016
            END IF
            CALL q_inag004_18()
            
            LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1  
            LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return2
            LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return3
            LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return4
            DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014         
            DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015 
            DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
            DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052             
            LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
            LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdk_m.xmdksite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            #150324-00007#6 150410 lori522612 add---(E)
            
            NEXT FIELD xmdl015                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl016" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #開窗i段
			   #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
			   #LET g_qryparam.reqry = FALSE
            #
            #LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl014             #給予default值
            #LET g_qryparam.default2 = g_xmdl_d[l_ac].xmdl015
            #LET g_qryparam.default3 = g_xmdl_d[l_ac].xmdl016
            #
            ##給予arg
            #LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
            #LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl009
            #
            #CALL q_inag004_1()                                #呼叫開窗
            #
            #LET g_xmdl_d[l_ac].xmdl014 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_xmdl_d[l_ac].xmdl015 = g_qryparam.return2
            #LET g_xmdl_d[l_ac].xmdl016 = g_qryparam.return3 
            #
            #DISPLAY g_xmdl_d[l_ac].xmdl014 TO xmdl014              #顯示到畫面上
            #DISPLAY g_xmdl_d[l_ac].xmdl015 TO xmdl015
            #DISPLAY g_xmdl_d[l_ac].xmdl016 TO xmdl016
            #
            #LET g_xmdl_d[l_ac].xmdl014_desc = s_desc_get_stock_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014)
            #LET g_xmdl_d[l_ac].xmdl015_desc = s_desc_get_locator_desc(g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015)
            #
            #NEXT FIELD xmdl016                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE			   
			   LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl017             #給予default值     
            CALL q_imao002()                                #呼叫開窗
            LET g_xmdl_d[l_ac].xmdl017 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl017 TO xmdl017              #顯示到畫面上
            LET g_xmdl_d[l_ac].xmdl017_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl017)
            NEXT FIELD xmdl017                          #返回原欄位                                                                                                  ]]>
  </point>
  <point name="input.c.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            #開窗i段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl019  #給予default值     
            CALL q_imao002()                                  #呼叫開窗
            LET g_xmdl_d[l_ac].xmdl019 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl019 TO xmdl019         #顯示到畫面上

            LET g_xmdl_d[l_ac].xmdl019_desc = s_desc_get_unit_desc(g_xmdl_d[l_ac].xmdl019)
            NEXT FIELD xmdl019                          #返回原欄位
]]>
  </point>
  <point name="input.c.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                                                                                                       
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl008

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl021             #給予default值
     
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl021 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl_d[l_ac].xmdl021 TO xmdl021              #顯示到畫面上
            NEXT FIELD xmdl021                          #返回原欄位                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl033             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmdl_d[l_ac].xmdl007
            LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008
            LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009
            CALL q_pmao004_1()                                #呼叫開窗
            LET g_xmdl_d[l_ac].xmdl033 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl033 TO xmdl033              #顯示到畫面上
            NEXT FIELD xmdl033                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl050" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #LET l_where = NULL                                                                                                #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl050             #給予default值
            #CALL s_control_get_doc_sql('oocq002',g_xmdk_m.xmdkdocno,'8') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF            

            #給予arg
            LET g_qryparam.arg1 = g_acc24_gzcb004
            CALL q_oocq002()                                       #呼叫開窗
            LET g_xmdl_d[l_ac].xmdl050 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_xmdl_d[l_ac].xmdl050 TO xmdl050              #顯示到畫面上
            
            LET g_xmdl_d[l_ac].xmdl050_desc = s_desc_get_acc_desc(g_acc24_gzcb004,g_xmdl_d[l_ac].xmdl050)
            NEXT FIELD xmdl050                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdl052" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
            #LET g_qryparam.reqry = FALSE
            #
            #LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl052
            #
            #LET g_qryparam.arg1 = g_xmdk_m.xmdksite 
            #LET g_qryparam.arg2 = g_xmdl_d[l_ac].xmdl008 
            #LET g_qryparam.arg3 = g_xmdl_d[l_ac].xmdl009 
            #LET g_qryparam.arg4 = g_xmdl_d[l_ac].xmdl014 
            #LET g_qryparam.arg5 = g_xmdl_d[l_ac].xmdl015 
            #LET g_qryparam.arg6 = g_xmdl_d[l_ac].xmdl016 
            #
            #CALL q_inag003_4()                                #呼叫開窗
            #
            #LET g_xmdl_d[l_ac].xmdl052 = g_qryparam.return1
            #DISPLAY g_xmdl_d[l_ac].xmdl052 TO xmdl052     
            #NEXT FIELD xmdl052                               #返回原欄位]]>
  </point>
  <point name="input.c.page1.xmdl222" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl222             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_dbaa001_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl222 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl222 TO xmdl222              #

            NEXT FIELD xmdl222                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdl223" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl223             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_dbaa001_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl223 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl223 TO xmdl223              #

            NEXT FIELD xmdl223                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdl224" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl224             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_dbaa001_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl224 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl224 TO xmdl224              #

            NEXT FIELD xmdl224                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdl225" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl225             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_dbaa001_1()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl225 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl225 TO xmdl225              #

            NEXT FIELD xmdl225                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdl226" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl_d[l_ac].xmdl226             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imay003_6()                                #呼叫開窗

            LET g_xmdl_d[l_ac].xmdl226 = g_qryparam.return1              

            DISPLAY g_xmdl_d[l_ac].xmdl226 TO xmdl226              #

            NEXT FIELD xmdl226                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdl2_d[l_ac].xmdl025             #給予default值

            LET g_qryparam.arg1 = g_site

            CALL q_oodb002_3()                                #呼叫開窗

            LET g_xmdl2_d[l_ac].xmdl025 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdl2_d[l_ac].xmdl025 TO xmdl025              #顯示到畫面上

            CALL adbt540_xmdk012_ref(g_xmdl2_d[l_ac].xmdl025)
            RETURNING g_xmdl2_d[l_ac].xmdl025_desc
            DISPLAY BY NAME g_xmdl2_d[l_ac].xmdl025_desc
            NEXT FIELD xmdl025                          #返回原欄位                                                                                             ]]>
  </point>
  <point name="input.c.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmda026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.default1 = g_xmdk_m.xmda026
			   LET g_qryparam.arg1 = '5'
			   LET g_qryparam.arg2 = g_xmdk_m.xmdk008
            CALL q_oofb019_4()                           #呼叫開窗
            LET g_xmdk_m.xmda026 = g_qryparam.return1
            CALL adbt540_xmda026_ref()
            NEXT FIELD xmda026                     #返回原欄位]]>
  </point>
  <point name="input.c.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk003             #給予default值
            #給予arg
            CALL q_ooag001()                                #呼叫開窗
            LET g_xmdk_m.xmdk003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk003_desc = s_desc_get_person_desc(g_xmdk_m.xmdk003)
            DISPLAY g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc TO xmdk003,xmdk003_desc  #顯示到畫面上
            NEXT FIELD xmdk003                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk004             #給予default值
            #給予arg
            IF NOT cl_null(g_xmdk_m.xmdkdocdt) THEN
               LET g_qryparam.arg1 = g_xmdk_m.xmdkdocdt
            ELSE
               LET g_qryparam.arg1 = g_today
            END IF
            CALL q_ooeg001()                                #呼叫開窗
            LET g_xmdk_m.xmdk004 = g_qryparam.return1              #將開窗取得的值回傳到變數            
            LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)
            DISPLAY g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc  TO xmdk004,xmdk004_desc    #顯示到畫面上            
            NEXT FIELD xmdk004                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk005 #給予default值
            LET g_qryparam.arg1 = g_site   #給予arg
            LET g_qryparam.arg2 = '2'
            LET g_qryparam.arg3 = g_xmdk_m.xmdksite
            CALL q_xmdgdocno_3()                                #呼叫開窗
            LET g_xmdk_m.xmdk005 = g_qryparam.return1           #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk005 TO xmdk005 #顯示到畫面上
            NEXT FIELD xmdk005                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk006" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk006             #給予default值
            #給予arg
			   LET g_qryparam.arg1 = g_site
			   LET g_qryparam.arg2 = '9'                   #銷售組織
			   LET g_qryparam.arg3 = g_xmdk_m.xmdksite
            CALL q_xmdadocno_4()                        #呼叫開窗
            LET g_xmdk_m.xmdk006 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk006 TO xmdk006         #顯示到畫面上
            NEXT FIELD xmdk006                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk007" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.default1 = g_xmdk_m.xmdk007             #給予default值			
			   LET g_qryparam.arg1 = 'ALL'
			   ##單據別是否設置限用的資料
            #CALL s_control_get_doc_sql('pmaa001',g_xmdk_m.xmdkdocno,'3') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF
            #
            #LET l_success = ''
            #LET l_where = ''
            #CALL s_control_get_sql("pmaa001",'2','2',g_user,g_dept) RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            #END IF            
            #給予arg
            CALL q_pmaa001_6()                                #呼叫開窗
            LET g_xmdk_m.xmdk007 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk007 TO xmdk007              #顯示到畫面上
            LET g_xmdk_m.xmdk007_desc = s_desc_get_trading_partner_abbr_desc(g_xmdk_m.xmdk007)
            DISPLAY BY NAME g_xmdk_m.xmdk007_desc
            NEXT FIELD xmdk007                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk008" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'   #請先輸入客戶編號！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       #請先輸入客戶編號
               NEXT FIELD xmdk007
            END IF
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk008             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk008_desc
            
            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = 'ALL'
            #CALL s_control_get_doc_sql('pmac002',g_xmdk_m.xmdkdocno,'3') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF

            CALL q_pmac002_5()                                #呼叫開窗
            LET g_xmdk_m.xmdk008 = g_qryparam.return1         #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk008_desc = g_qryparam.return2    #交易對象簡稱
            DISPLAY g_xmdk_m.xmdk008 TO xmdk008               #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk008_desc TO xmdk008_desc     #交易對象簡稱
            NEXT FIELD xmdk008                                #返回原欄位            ]]>
  </point>
  <point name="input.c.xmdk009" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
            IF cl_null(g_xmdk_m.xmdk007) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00145'   #請先輸入客戶編號！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       #請先輸入客戶編號
               NEXT FIELD xmdk007
            END IF            
            
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk009             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk009_desc

            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007 
            LET g_qryparam.arg2 = 'ALL'            
            CALL q_pmac002_6()                                #呼叫開窗
            LET g_xmdk_m.xmdk009 = g_qryparam.return1       #將開窗取得的值回傳到變數
            LET g_xmdk_m.xmdk009_desc = g_qryparam.return2  #交易對象簡稱
            DISPLAY g_xmdk_m.xmdk009 TO xmdk009              #顯示到畫面上
            DISPLAY g_xmdk_m.xmdk009_desc TO xmdk009_desc    #交易對象簡稱
            NEXT FIELD xmdk009                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk010             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdk008            #帳款客戶
            CALL q_pmad002_3()                                #呼叫開窗
            LET g_xmdk_m.xmdk010 = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk010 TO xmdk010               #顯示到畫面上
            LET g_xmdk_m.xmdk010_desc = s_desc_get_ooib002_desc(g_xmdk_m.xmdk010)
            DISPLAY BY NAME g_xmdk_m.xmdk010_desc
            NEXT FIELD xmdk010                                #返回原欄位]]>
  </point>
  <point name="input.c.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk011             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '238' #
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmdk_m.xmdk011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk011 TO xmdk011              #顯示到畫面上
            CALL adbt540_xmdk011_ref()
            NEXT FIELD xmdk011                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk012             #給予default值
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            CALL q_oodb002_3()                                #呼叫開窗
            LET g_xmdk_m.xmdk012 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk012 TO xmdk012              #顯示到畫面上
            
            CALL adbt540_tax_ref(g_xmdk_m.xmdk012) RETURNING g_xmdk_m.xmdk012_desc
            DISPLAY BY NAME g_xmdk_m.xmdk012_desc
            NEXT FIELD xmdk012                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef019  #稅區編號 
            LET g_qryparam.arg2 = '2'        #銷項
            CALL q_isac002_1()               #呼叫開窗
            LET g_xmdk_m.xmdk015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk015 TO xmdk015              #顯示到畫面上
            LET g_xmdk_m.xmdk015_desc = s_desc_get_invoice_type_desc1(g_xmdk_m.xmdksite,g_xmdk_m.xmdk015)
            DISPLAY BY NAME g_xmdk_m.xmdk015_desc
            NEXT FIELD xmdk015                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk016             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmdk_m.xmdksite
            CALL q_ooaj002_1()                                     #呼叫開窗
            LET g_xmdk_m.xmdk016 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk016 TO xmdk016              #顯示到畫面上
            LET g_xmdk_m.xmdk016_desc = s_desc_get_currency_desc(g_xmdk_m.xmdk016)
            DISPLAY BY NAME g_xmdk_m.xmdk016_desc
            NEXT FIELD xmdk016                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk018" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk018             #給予default值

            #給予arg

            CALL q_xmah001()                               #呼叫開窗

            LET g_xmdk_m.xmdk018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk018 TO xmdk018              #顯示到畫面上
            LET g_xmdk_m.xmdk018_desc = s_desc_get_xmah001_desc(g_xmdk_m.xmdk018)
            DISPLAY BY NAME g_xmdk_m.xmdk018_desc
            NEXT FIELD xmdk018                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk019             #給予default值

            #給予arg

            CALL q_ooid001_1()                                #呼叫開窗

            LET g_xmdk_m.xmdk019 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk019 TO xmdk019              #顯示到畫面上
            LET g_xmdk_m.xmdk019_desc = s_desc_ooid001_desc(g_xmdk_m.xmdk019)
            DISPLAY BY NAME g_xmdk_m.xmdk019_desc
            NEXT FIELD xmdk019                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk020             #給予default值

            #給予arg

            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmdk_m.xmdk020 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk020 TO xmdk020              #顯示到畫面上
            LET g_xmdk_m.xmdk020_desc = s_desc_get_trading_partner_full_desc(g_xmdk_m.xmdk020)
            DISPLAY BY NAME g_xmdk_m.xmdk020_desc
            NEXT FIELD xmdk020                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk021" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
            LET l_oofb002 = s_adb_get_pmaa027(g_xmdk_m.xmdk009)
            DISPLAY 'xmdl009-id: ',l_oofb002
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk021             #給予default值
            #給予arg
            LET g_qryparam.arg1 = l_oofb002             #收貨客戶
            CALL q_oofb019_1()                          #呼叫開窗
            LET g_xmdk_m.xmdk021 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk021 TO xmdk021         #顯示到畫面上
            CALL adbt540_xmdk021_ref()
            NEXT FIELD xmdk021                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '263'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk022 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk022 TO xmdk022              #顯示到畫面上

            CALL adbt540_xmdk022_ref()
            NEXT FIELD xmdk022                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk023" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'   #請先輸入"運輸方式"！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       #請先輸入運輸方式
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR   #陸運
                    l_oocq019 = '4'      #海運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
                  CALL q_oock003()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE	              
	              
	              LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	              LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE
	              
	              LET g_qryparam.default1 = g_xmdk_m.xmdk023             #給予default值
	              
	              LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk023 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk023 TO xmdk023              #顯示到畫面上
              
            END CASE
            
            CALL adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk023) RETURNING g_xmdk_m.xmdk023_desc
            DISPLAY BY NAME g_xmdk_m.xmdk023_desc
            
            NEXT FIELD xmdk023     #返回原欄位 ]]>
  </point>
  <point name="input.c.xmdk024" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        #開窗i段   
            IF cl_null(g_xmdk_m.xmdk022) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00085'   #請先輸入"運輸方式"！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
       #請先輸入運輸方式
               NEXT FIELD xmdk022
            END IF   
            
            LET l_oocq019 = ''
            SELECT oocq019 INTO l_oocq019
              FROM oocq_t
             WHERE oocqent = g_enterprise
               AND oocq001 = '263'
               AND oocq002 = g_xmdk_m.xmdk022
            
            CASE
               WHEN l_oocq019 = '1' OR   #陸運
                    l_oocq019 = '4'      #海運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE

                  LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
                  CALL q_oock003()                           #呼叫開窗
                  
                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
                 
                    
               WHEN l_oocq019 = '2'      #空運
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE	              
	              
	              LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	              LET g_qryparam.arg1 = '262'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
               
               WHEN l_oocq019 = '3'      #其它
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
	              LET g_qryparam.reqry = FALSE
	              
	              LET g_qryparam.default1 = g_xmdk_m.xmdk024             #給予default值
	              
	              LET g_qryparam.arg1 = '276'
	              
                  CALL q_oocq002()                           #呼叫開窗

                  LET g_xmdk_m.xmdk024 = g_qryparam.return1        #將開窗取得的值回傳到變數
                  DISPLAY g_xmdk_m.xmdk024 TO xmdk024              #顯示到畫面上
              
            END CASE
            
            CALL adbt540_location_ref(g_xmdk_m.xmdk022,g_xmdk_m.xmdk024) RETURNING g_xmdk_m.xmdk024_desc
            DISPLAY BY NAME g_xmdk_m.xmdk024_desc
            
            NEXT FIELD xmdk024     #返回原欄位 ]]>
  </point>
  <point name="input.c.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk030" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk030             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001_1()                              #呼叫開窗
            LET g_xmdk_m.xmdk030 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk030 TO xmdk030             #顯示到畫面上
            LET g_xmdk_m.xmdk030_desc = s_desc_get_oojdl003_desc(g_xmdk_m.xmdk030)
            DISPLAY BY NAME g_xmdk_m.xmdk030_desc 
            NEXT FIELD xmdk030                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk031             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "295"
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmdk_m.xmdk031 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk031 TO xmdk031              #顯示到畫面上
            CALL adbt540_xmdk031_ref()
            NEXT FIELD xmdk031                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk033             #給予default值
            #給予arg
            LET g_qryparam.arg1 = '209'
            CALL q_oocq002()                                #呼叫開窗
            LET g_xmdk_m.xmdk033 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdk033 TO xmdk033              #顯示到畫面上
            CALL adbt540_xmdk033_ref()
            NEXT FIELD xmdk033                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk034             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '297'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk034 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk034 TO xmdk034              #顯示到畫面上

            CALL adbt540_xmdk034_ref()
            NEXT FIELD xmdk034                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk038             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '299'

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmdk_m.xmdk038 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdk_m.xmdk038 TO xmdk038              #顯示到畫面上

            CALL adbt540_xmdk038_ref()
            NEXT FIELD xmdk038                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk039" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk039             #給予default值

            LET g_qryparam.where = "inaa010 = 'Y' "

            
            CALL q_inaa001_2()                               #呼叫開窗                               #呼叫開窗

            LET g_xmdk_m.xmdk039 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk039 TO xmdk039              #
            LET g_xmdk_m.xmdk039_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk039)
            DISPLAY BY NAME g_xmdk_m.xmdk039_desc
            NEXT FIELD xmdk039                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk040" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk040             #給予default值

            LET g_qryparam.where = "inaa010 = 'N' "

            
            CALL q_inaa001_2()                              #呼叫開窗

            LET g_xmdk_m.xmdk040 = g_qryparam.return1              

            DISPLAY g_xmdk_m.xmdk040 TO xmdk040              #
            LET g_xmdk_m.xmdk040_desc = s_desc_get_stock_desc(g_xmdk_m.xmdksite,g_xmdk_m.xmdk040)
            DISPLAY BY NAME g_xmdk_m.xmdk040_desc

            NEXT FIELD xmdk040                          #返回原欄位

]]>
  </point>
  <point name="input.c.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdk200" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk200             #給予default值
            ##單據別是否設置限用的資料
            #CALL s_control_get_doc_sql('pmaa001',g_xmdk_m.xmdkdocno,'3') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF
            #給予arg            
            CALL q_pmaa001_20()                                #呼叫開窗
            LET g_xmdk_m.xmdk200 = g_qryparam.return1              
            DISPLAY g_xmdk_m.xmdk200 TO xmdk200              #
            NEXT FIELD xmdk200                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk201" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk201             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk201_desc #交易對象簡稱
            ##單據別是否設置限用的資料
            #CALL s_control_get_doc_sql('pmaa001',g_xmdk_m.xmdkdocno,'3') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF            
            #給予arg
            CALL q_pmaa001_10()                                #呼叫開窗
            LET g_xmdk_m.xmdk201 = g_qryparam.return1 
            LET g_xmdk_m.xmdk201_desc = g_qryparam.return2            
            DISPLAY g_xmdk_m.xmdk201 TO xmdk201   
            DISPLAY g_xmdk_m.xmdk201_desc TO xmdk201_desc   
            NEXT FIELD xmdk201                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdk202" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdk_m.xmdk202             #給予default值
            LET g_qryparam.default2 = g_xmdk_m.xmdk202_desc        #交易對象簡稱
            #給予arg
            #LET g_qryparam.arg1 = g_xmdk_m.xmdk202 #
            #LET g_qryparam.arg2 = '3' #

            #CALL s_control_get_doc_sql('pmac002',g_xmdk_m.xmdkdocno,'3') RETURNING l_success,l_where
            #IF l_success THEN
            #   LET g_qryparam.where = l_where
            #END IF
            
            #CALL q_pmac002_9()                                 #呼叫開窗
            
            LET g_qryparam.arg1 = g_xmdk_m.xmdk007
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_7()
            LET g_xmdk_m.xmdk202 = g_qryparam.return1              
            LET g_xmdk_m.xmdk202_desc  = g_qryparam.return2 
            DISPLAY g_xmdk_m.xmdk202 TO xmdk202         
            DISPLAY g_xmdk_m.xmdk202_desc TO xmdk202_desc       #交易對象簡稱
            NEXT FIELD xmdk202                                  #返回原欄位]]>
  </point>
  <point name="input.c.xmdk207" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdk207             #給予default值
            #給予arg
            IF s_aooi500_setpoint(g_prog,'xmdk207') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdk207',g_xmdk_m.xmdksite,'i')   #150308-00001#4 150309 by lori522612 add 'i'
               CALL q_ooef001_24()
            ELSE   
               LET g_qryparam.arg1 = g_site
               LET g_qryparam.arg2 = '9'
               CALL q_ooed004()                                #呼叫開窗
            END IF
            LET g_xmdk_m.xmdk207 = g_qryparam.return1  
            DISPLAY g_xmdk_m.xmdk207 TO xmdk207              
            NEXT FIELD xmdk207                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.c.xmdkdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdkdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 
              INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise 
               AND ooef001 = g_site 
               AND ooefstus = 'Y'
             
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            CALL q_ooba002_1()                                #呼叫開窗
            LET g_xmdk_m.xmdkdocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmdk_m.xmdkdocno TO xmdkdocno              #顯示到畫面上
            NEXT FIELD xmdkdocno                          #返回原欄位]]>
  </point>
  <point name="input.c.xmdksite" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdk_m.xmdksite
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdksite',g_xmdk_m.xmdksite,'i')   #150308-00001#4 150309 by lori522612 add 'i'
            CALL q_ooef001_24()
            LET g_xmdk_m.xmdksite = g_qryparam.return1
            LET g_xmdk_m.xmdksite_desc = s_desc_get_department_desc(g_xmdk_m.xmdksite)
            DISPLAY BY NAME g_xmdk_m.xmdksite_desc
            NEXT FIELD xmdksite]]>
  </point>
  <point name="input.c.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.d.before_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #取得稅別應用
            CALL s_tax_chk(g_xmdk_m.xmdksite,g_xmdk_m.xmdk012)
            RETURNING l_success,g_oodbl004,g_oodb005,g_oodb006,g_oodb011                                                                                    ]]>
  </point>
  <point name="input.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success              LIKE type_t.num5
   DEFINE l_para_data            LIKE type_t.chr80      #接參數用
   DEFINE l_ooef004              LIKE ooef_t.ooef004    #單據別參照表號
   DEFINE l_ooef016              LIKE ooef_t.ooef016    #主幣別編號
   DEFINE l_flag                 LIKE type_t.num5
   DEFINE l_xmdg001              LIKE xmdg_t.xmdg001    #出通單出貨性質
   DEFINE l_xmda005              LIKE xmda_t.xmda005    #訂單性質
   DEFINE l_xmdg024              LIKE xmdg_t.xmdg024    #包裝單製作
   DEFINE l_xmdg025              LIKE xmdg_t.xmdg025    #Invoice製作
   DEFINE l_where                STRING                 #單據別過濾sql條件
   DEFINE l_oocq019              LIKE oocq_t.oocq019    #運輸方式   
   DEFINE l_imaa005              LIKE imaa_t.imaa005    #產品特徵
   DEFINE l_inam              DYNAMIC ARRAY OF RECORD   #紀錄產品特徵
             inam001             LIKE inam_t.inam001,
             inam002             LIKE inam_t.inam002,
             inam004             LIKE inam_t.inam004
                              END RECORD
   DEFINE l_xmdh011              LIKE xmdh_t.xmdh011
   DEFINE l_xmdc028              LIKE xmdc_t.xmdc028
   DEFINE l_num                  LIKE type_t.num5
   DEFINE l_xmdlseq_backup       LIKE xmdl_t.xmdlseq    #紀錄新增多庫儲批時的項次
   DEFINE l_oodb002              LIKE oodb_t.oodb002    #稅別
   DEFINE l_oodb005              LIKE oodb_t.oodb005    #含稅否
   DEFINE l_oodb006              LIKE oodb_t.oodb006    #稅率
   DEFINE l_oodbl004             LIKE oodbl_t.oodbl004  #稅率說明
   DEFINE l_oodb011              LIKE oodb_t.oodb011    #稅別應用   
   DEFINE l_oofb002              LIKE oofb_t.oofb002    #聯絡對象識別碼
   DEFINE l_xmdl                 RECORD LIKE xmdl_t.*
   DEFINE l_money                LIKE xrcd_t.xrcd102
   DEFINE l_xrcd103              LIKE xrcd_t.xrcd103
   DEFINE l_xrcd104              LIKE xrcd_t.xrcd104
   DEFINE l_xrcd105              LIKE xrcd_t.xrcd105
   DEFINE l_xrcd113              LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114              LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115              LIKE xrcd_t.xrcd115      
   DEFINE l_xrcd123              LIKE xrcd_t.xrcd123
   DEFINE l_xrcd124              LIKE xrcd_t.xrcd124
   DEFINE l_xrcd125              LIKE xrcd_t.xrcd125
   DEFINE l_xrcd133              LIKE xrcd_t.xrcd133
   DEFINE l_xrcd134              LIKE xrcd_t.xrcd134
   DEFINE l_xrcd135              LIKE xrcd_t.xrcd135   
   DEFINE l_rollback             LIKE type_t.num5
   DEFINE l_auto_detail          LIKE type_t.chr1      #記錄進到單身是否已有詢問過自動產生單身
   DEFINE l_inaa014              LIKE inaa_t.inaa014   #庫位允許負庫存否
   DEFINE l_errno                STRING
   #ken-----------------------s
   DEFINE l_xmdl014              LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015              LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016              LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052              LIKE xmdl_t.xmdl052
   #ken-----------------------e
   DEFINE l_del_xmdm_pop         LIKE type_t.chr1]]>
  </point>
  <point name="input.define_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_auto_detail = ''                         ]]>
  </point>
  <point name="input.define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="input.detail_input.page1.open_adbt540_01" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_open_adbt540_01()]]>
  </point>
  <point name="input.g.page1.xmdl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl013" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #IF g_xmdl_d[l_ac].xmdl013 = 'N' THEN
            #   LET l_del_xmdm_pop = 'Y'
            #ELSE
            #   LET l_del_xmdm_pop = 'N'                  
            #END IF
            #
            #IF NOT adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,l_del_xmdm_pop) THEN
            #   LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013               
            #   LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
            #   LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
            #   LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
            #ELSE
            #   IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN            
            #      CALL adbt540_open_adbt540_01()                 
            #   END IF            
            #END IF 
            IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN               
               CALL adbt540_open_adbt540_01()     
            ELSE
               LET l_del_xmdm_pop = 'Y'   
               IF NOT adbt540_01_xmdm_delete(g_mutil_inv,g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlseq,l_del_xmdm_pop) THEN
                  LET g_xmdl_d[l_ac].xmdl013 = g_xmdl_d_o.xmdl013 
                  LET g_xmdl_d[l_ac].xmdl014 = g_xmdl_d_o.xmdl014
                  LET g_xmdl_d[l_ac].xmdl015 = g_xmdl_d_o.xmdl015
                  LET g_xmdl_d[l_ac].xmdl016 = g_xmdl_d_o.xmdl016
               ELSE
                  CALL s_adbt540_source_define(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                               g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,
                                               g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006)
                     RETURNING g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,
                               g_xmdl_d[l_ac].xmdl016,l_xmdl052     
               END IF                                 
            END IF            ]]>
  </point>
  <point name="input.g.page1.xmdl014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl041" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdl051" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdlseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page1.xmdlsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl028" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl029" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl042" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl043" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page2.xmdl046" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdm014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdmseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.page3.xmdmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk000" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk026" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk027" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk028" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk028) THEN
               IF g_xmdk_m.xmdk028 <> g_xmdk_m_t.xmdk028 OR
                  cl_null(g_xmdk_m_t.xmdk028) THEN
                  
                  LET l_xmdg024 = ''
                  
                  IF NOT cl_null(g_xmdk_m.xmdk005) THEN
                     SELECT xmdg024 INTO l_xmdg024
                       FROM xmdg_t
                      WHERE xmdgent = g_enterprise
                        AND xmdgdocno = g_xmdk_m.xmdk005
                        
                     IF l_xmdg024 = 'Y' AND 
                        g_xmdk_m.xmdk028 = 'Y'  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'adb-00325'   #出通單已勾選要製作包裝單，不可重複勾選！
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_xmdk_m.xmdk028 = 'N'
                        NEXT FIELD CURRENT                        
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.g.xmdk029" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xmdk_m.xmdk029) THEN
               IF g_xmdk_m.xmdk029 <> g_xmdk_m_t.xmdk029 OR
                  cl_null(g_xmdk_m_t.xmdk029) THEN
                  
                  LET l_xmdg025 = ''
                  
                  IF NOT cl_null(g_xmdk_m.xmdk005) THEN
                     SELECT xmdg025 INTO l_xmdg025
                       FROM xmdg_t
                      WHERE xmdgent = g_enterprise
                        AND xmdgdocno = g_xmdk_m.xmdk005
                        
                     IF l_xmdg025 = 'Y' AND 
                        g_xmdk_m.xmdk029 = 'Y'  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'adb-00325'   #出通單已勾選要製作包裝單，不可重複勾選！
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_xmdk_m.xmdk029 = 'N'
                        NEXT FIELD CURRENT                        
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.g.xmdk030" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk031" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdk054" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdkdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdkdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdksite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.g.xmdkstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF p_cmd = 'a' THEN
                  IF NOT adbt540_auto_ins_detail() THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     LET l_auto_detail = 'Y'
                  END IF
               END IF                  ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               
               #自動產生單號
               CALL s_aooi200_gen_docno(g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkdocdt,g_prog)
               RETURNING l_success,g_xmdk_m.xmdkdocno
               IF l_success = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmdk_m.xmdkdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD xmdkdocno
               END IF
               DISPLAY BY NAME g_xmdk_m.xmdkdocno
               
               LET g_xmdk_m.xmdkunit = g_xmdk_m.xmdksite]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="input.m.before_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                 ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="input.next_field" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD xmdksite]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="insert.default" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_aooi500_default(g_prog,'xmdksite',g_xmdk_m.xmdksite)
         RETURNING l_insert,g_xmdk_m.xmdksite
      IF l_insert = FALSE THEN
         RETURN
      END IF

      CALL s_tax_get_ooef019(g_xmdk_m.xmdksite) RETURNING l_success,g_ooef019
      
      LET g_xmdk_m.xmdkunit  = g_site     #銷售組織,同xmdksite
      CALL s_arti200_get_def_doc_type(g_xmdk_m.xmdksite,g_prog,'1')
         RETURNING l_success,g_xmdk_m.xmdkdocno
      
      LET g_xmdk_m.xmdkdocdt = g_today    #單據日期
      LET g_xmdk_m.xmdk001   = g_today    #扣帳日期
      LET g_xmdk_m.xmdk032   = g_today    #結關日期
      LET g_xmdk_m.xmdkstus  = 'N'        #狀態碼
      LET g_xmdk_m.xmdk026   = g_today    #起運日期
      LET g_xmdk_m.xmdk083   = 'N'        #多角貿易已拋轉
      
      LET g_xmdk_m.xmdk003 = g_user       #業務人員
      LET g_xmdk_m.xmdk003_desc = s_desc_get_person_desc(g_xmdk_m.xmdk003)
      
      LET g_xmdk_m.xmdk004 = g_dept       #業務部門
      LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)
      CALL adbt540_xmdk038_ref()
      
      ##無訂單出貨
      #IF g_prog = '' THEN
      #   LET g_xmdk_m.xmdk000 = "2"
      #END IF
      
      INITIALIZE g_xmdk_m_t.* TO NULL
      INITIALIZE g_xmdk_m_o.* TO NULL
      
      LET g_ins_site_flag = ''     ]]>
  </point>
  <point name="insert.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5   ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_01_xmdm_modify(g_mutil_inv,           g_xmdl_d[l_ac].xmdlseq,g_xmdk_m.xmdksite,     g_xmdk_m.xmdkdocno,    g_xmdl_d[l_ac].xmdlseq,   #出貨單(1),單據項次舊值,營運據點,單據單號,項次
                                  g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl014,   #料件編號,產品特徵,作業編號,製程序,庫位
                                  g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,   #儲位,批號,出貨單位,數量,參考單位
                                  g_xmdl_d[l_ac].xmdl020,'',                    '',                    g_xmdl_d[l_ac].xmdl052)                          #參考數量,簽退數量,簽退參考數量,庫存管理特徵
      RETURNING l_success  ]]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_xmdl_d[g_detail_idx].xmdlsite = g_xmdk_m.xmdksite
      LET g_xmdl6_d[g_detail_idx].xmdlunit = g_xmdk_m.xmdkunit
      
      #產品特徵為NULL時,給空白 
      IF cl_null(g_xmdl_d[g_detail_idx].xmdl009) THEN
         LET g_xmdl_d[g_detail_idx].xmdl009 = ' '
      END IF   

      #庫存管理特徵為NULL時,給空白 
      IF cl_null(g_xmdl_d[g_detail_idx].xmdl052) THEN
         LET g_xmdl_d[g_detail_idx].xmdl052 = ' '
      END IF 
      ]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdl3_d[g_detail_idx].xmdm002) THEN
         LET g_xmdl3_d[g_detail_idx].xmdm002 = ' '
      END IF   
      
      #庫存管理特徵為NULL時,給空白   
      IF cl_null(g_xmdl3_d[g_detail_idx].xmdm033) THEN
         LET g_xmdl3_d[g_detail_idx].xmdm033 = ' '
      END IF    
      ]]>
  </point>
  <point name="insert_b.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5    
   DEFINE l_seq       LIKE xmdm_t.xmdmseq   ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="main.after_refresh_sql" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="main.before_close" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="main.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 #150308-00001#4 150309 by lori522612 add                           ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="main.exit" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#4 150309 by lori522612 add
   CALL adbt540_01_drop_temp_table()                        ]]>
  </point>
  <point name="main.init" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_argv[01] = cl_replace_str(g_argv[01], '\"', '')
   LET g_argv[02] = cl_replace_str(g_argv[02], '\"', '')
   LET g_argv[03] = cl_replace_str(g_argv[03], '\"', '')
   LET g_errshow = '1'
   LET g_slip_para = NULL
   LET g_slip_para_t = NULL
   LET g_xmdl087_def = NULL 
   LET g_ooef019 = NULL   
   LET g_mutil_inv = '1'  #出貨單
   
   CALL s_tax_recount_tmp()   #建立稅額資料處理暫存檔]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="menu.adbt540_call_adbt540_01" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               
               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  
                  EXIT DIALOG
               END IF
               
               #若出貨單來源為訂單時，若訂單已經有指定出貨的庫儲批時，則出貨單就不能再勾選多庫儲批出貨           
               IF cl_null(g_xmdl_d[g_detail_idx].xmdl001) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl003) AND
                  NOT cl_null(g_xmdl_d[g_detail_idx].xmdl004) THEN
                  
                  LET l_xmdc028 = ''
                  SELECT xmdc028 INTO l_xmdc028
                    FROM xmdc_t
                   WHERE xmdcent = g_enterprise
                     AND xmdcdocno = g_xmdl_d[g_detail_idx].xmdl003
                     AND xmdcseq = g_xmdl_d[g_detail_idx].xmdl004
                  
                  IF NOT cl_null(l_xmdc028) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00162'
                     LET g_errparam.extend = g_xmdl_d[g_detail_idx].xmdl013
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     EXIT DIALOG
                  END IF
               END IF
               
               IF s_axmt540_change_xmdm_chk(g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq) THEN               
                  CALL s_transaction_begin()
                              
                  IF NOT s_axmt540_change_xmdm_upd_before(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus) THEN
                     CALL s_transaction_end('N','0')
                     EXIT DIALOG
                  END IF
                                     
                  CALL axmt540_01('1',g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq,g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,
                                    g_xmdl_d[g_detail_idx].xmdl011,g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl017,g_xmdl_d[g_detail_idx].xmdl018,
                                    g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002,g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020)
                  RETURNING r_success
                   
                  IF NOT r_success THEN
                     CALL s_transaction_end('N','0')
                     EXIT DIALOG
                  END IF

                  IF NOT s_axmt540_change_xmdm_upd_after(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus) THEN
                     CALL s_transaction_end('N','0')
                     EXIT DIALOG
                  END IF
                  
                  UPDATE xmdl_t
                     SET xmdl013 = 'Y',
                         xmdl014 = '',
                         xmdl015 = '',
                         xmdl016 = ''
                   WHERE xmdldocno = g_xmdk_m.xmdkdocno
                     AND xmdlseq = g_xmdl2_d[g_detail_idx].xmdlseq
                     
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE:"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     EXIT DIALOG
                  END IF
                  CALL s_transaction_end('Y','0')
               END IF]]>
  </point>
  <point name="menu.adbt540_modify_price" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   
               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  
                  EXIT DIALOG
               END IF
   
               LET g_aw = 's_detail2'
               LET g_action_choice= "modify_detail"
               IF cl_auth_chk_act("modify") THEN 
                  CALL adbt540_modify()  
               END IF                  ]]>
  </point>
  <point name="menu.adbt540_produce_axmt580" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               
               CALL s_transaction_begin()
               CALL adbt540_produce_axmt580(g_xmdk_m.xmdkdocno,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk002) RETURNING r_success
               IF NOT r_success THEN
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)
               END IF
               ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.detail_show.page1.open_adbt540_01" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_open_adbt540_01()]]>
  </point>
  <point name="menu.detail_show.page1_sub.prog_adbt520" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'adbt520'
               LET la_param.param[1] = g_xmdl_d[l_ac].xmdl001

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)]]>
  </point>
  <point name="menu.gen_adbt600" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_err_collect_init()
               CALL s_transaction_begin()
               IF s_adbt600_gen_sales_return(g_xmdk_m.xmdkdocno) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('Y','1')
               ELSE
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
               END IF
               ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.open_adbp580" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_open_adbp580()]]>
  </point>
  <point name="menu.open_adbt540_01" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_open_adbt540_01()]]>
  </point>
  <point name="menu.open_s_pay" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  CALL s_pay('xmdk_t',1,g_xmdk_m.xmdkdocno)
                  CALL adbt540_b_fill()
                  LET g_action_choice= ""
               END IF]]>
  </point>
  <point name="menu.open_s_pay09" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
                  CALL s_pay_09(g_xmdk_m.xmdkdocno)
                  LET g_action_choice= ""
               END IF               ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.prog_adbt520" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'adbt520'
               LET la_param.param[1] = g_xmdk_m.xmdk005

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 

]]>
  </point>
  <point name="menu.prog_aooi130" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a45 樣板自動產生(Version:2)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_m.aooi130)
 

]]>
  </point>
  <point name="menu.prog_xmdk003" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a45 樣板自動產生(Version:2)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmdk_m.xmdk003)]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.query_price" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",TRUE)               ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="menu.transfer_shipping_receipt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_transfer_shipping_receipt()]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="modify.before_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #150424 by zhujing add---(S)  
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmdk_m.xmdkstus MATCHES "[DR]" THEN
         LET g_xmdk_m.xmdkstus = "N"
      END IF
      #150424 by zhujing add---(E)                                                ]]>
  </point>
  <point name="modify.before_show" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = ''
   LET l_xmdl216 = s_adbt540_get_business_model(g_xmdk_m.xmdkdocno)
   IF g_xmdk_m.xmdk002 <> '3' AND (l_xmdl216 <> '13' OR cl_null(l_xmdl216)) THEN
      CALL s_pay_chk(g_xmdk_m.xmdkdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END IF]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.body.a_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.body.b_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.body.m_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="modify.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5  
   DEFINE l_xmdl216   LIKE xmdl_t.xmdl216   ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="reproduce.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmdl001   LIKE xmdl_t.xmdl001
   DEFINE l_xmdl002   LIKE xmdl_t.xmdl002
   DEFINE l_xmdl003   LIKE xmdl_t.xmdl003
   DEFINE l_xmdl004   LIKE xmdl_t.xmdl004
   DEFINE l_xmdl005   LIKE xmdl_t.xmdl005
   DEFINE l_xmdl006   LIKE xmdl_t.xmdl006
   DEFINE l_xmdl018   LIKE xmdl_t.xmdl018
   DEFINE l_insert    LIKE type_t.num5
   
   LET g_sql = "SELECT xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl018",
               "  FROM xmdl_t",
               " WHERE xmdlent = '",g_enterprise,"'",
               "   AND xmdldocno = '",g_xmdk_m.xmdkdocno,"'"
   PREPARE adbt540_repro FROM g_sql
   DECLARE adbt540_repro_cs CURSOR FOR adbt540_repro
   
   LET l_success = TRUE
   LET g_errno = ''
   FOREACH adbt540_repro_cs INTO l_xmdl001,l_xmdl002,l_xmdl003,l_xmdl004,l_xmdl005,l_xmdl006,l_xmdl018
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      IF NOT adbt540_xmdl018_chk_and_val() THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = g_errno
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET l_success = FALSE
         EXIT FOREACH
      END IF
   END FOREACH
   
   FREE adbt540_repro
   CLOSE adbt540_repro_cs 
   
   IF l_success = FALSE THEN
      RETURN
   END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_default(g_prog,'xmdksite',g_xmdk_m.xmdksite)
      RETURNING l_insert,g_xmdk_m.xmdksite
   IF l_insert = FALSE THEN
      RETURN
   END IF
   LET g_xmdk_m.xmdkunit = g_xmdk_m.xmdksite

   #ken--------------------------------------s
   LET g_xmdk_m.xmdkunit  = g_site     #銷售組織,同xmdksite
      CALL s_arti200_get_def_doc_type(g_xmdk_m.xmdksite,g_prog,'1')
   RETURNING l_success,g_xmdk_m.xmdkdocno   
   #ken--------------------------------------s
   
   LET g_xmdk_m.xmdkstus = 'N'
   LET g_xmdk_m.xmdkdocdt = g_today
   LET g_xmdk_m.xmdk001 = g_today
   LET g_xmdk_m.xmdk003 = g_user
   LET g_xmdk_m.xmdk004 = g_dept
   LET g_xmdk_m.xmdkpstid = ''
   LET g_xmdk_m.xmdkpstdt = ''
   LET g_xmdk_m.xmdkcnfid = ''
   LET g_xmdk_m.xmdkcnfdt = ''
   
   LET g_xmdk_m.xmdk028 = 'N'   #包裝單
   LET g_xmdk_m.xmdk029 = 'N'   #Invoice]]>
  </point>
  <point name="send.before_send" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #150424 by zhujing add---(S) 
   CALL s_adbt540_conf_chk(g_argv[1],g_xmdk_m.xmdkdocno) RETURNING l_success
   IF NOT l_success THEN
      RETURN l_success
   END IF
   #150424 by zhujing add---(E) ]]>
  </point>
  <point name="send.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5   #150424 by zhujing add]]>
  </point>
  <point name="set_act_no_visible.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_xmdl216   LIKE xmdl_t.xmdl216]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #修改/刪除/單身修改
   IF g_argv[1] = '1' AND g_xmdk_m.xmdkstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF

   #新增/複製/修改/刪除/單身修改
   IF g_argv[1] = '2' THEN
      CALL cl_set_act_visible("insert,reproduce,modify,delete,modify_detail",FALSE)
   END IF 
   
   LET l_xmdl216 = s_adbt540_get_business_model(g_xmdk_m.xmdkdocno)
   
   #轉簽收單
   #IF (  g_argv[1] = '1' AND (g_xmdk_m.xmdk002 <> '3' OR l_xmdl216 = '13' OR cl_null(l_xmdl216)))                          
   #   OR g_argv[1] = '2' THEN 
   #   CALL cl_set_toolbaritem_visible("open_adbp580",FALSE)   
   #END IF
   IF g_argv[1] = '1' AND g_xmdk_m.xmdk002 = '3' THEN
      IF g_xmdk_m.xmdkstus <> 'S' THEN
         CALL cl_set_act_visible("open_adbp580",FALSE)   
      END IF   
   ELSE
      IF  (g_xmdk_m.xmdk002 <> '3' OR l_xmdl216 = '13' OR cl_null(l_xmdl216)) THEN 
         CALL cl_set_toolbaritem_visible("open_adbp580",FALSE)   
      END IF      
   END IF
   
   #轉調貨換貨單
   #IF (  g_argv[1] = '1' AND (g_xmdk_m.xmdk002 <> '6' OR l_xmdl216 = '13' OR cl_null(l_xmdl216)))  
   #   OR g_argv[1] = '2' THEN
   #   CALL cl_set_toolbaritem_visible("gen_adbt600",FALSE)
   #END IF
   IF g_argv[1] = '1' AND g_xmdk_m.xmdk002 = '6' THEN
      IF g_xmdk_m.xmdkstus <> 'S' THEN
         CALL cl_set_act_visible("gen_adbt600",FALSE)
      END IF   
   ELSE
      IF g_xmdk_m.xmdk002 <> '6' OR l_xmdl216 = '13' OR cl_null(l_xmdl216) THEN
         CALL cl_set_toolbaritem_visible("gen_adbt600",FALSE)
      END IF
   END IF

   #收款
   IF    (g_argv[1] = '1' AND (g_xmdk_m.xmdk002 MATCHES "[23]")) 
      OR (g_argv[1] = '2' AND NOT s_pay_chk_ooib007('xmdk_t',g_xmdk_m.xmdkdocno)) THEN
      CALL cl_set_toolbaritem_visible("open_s_pay,open_s_pay09", FALSE)    
   ELSE
      IF (g_argv[1] = '1' AND l_xmdl216 = '13')
         OR (((g_argv[1] = '1' AND l_xmdl216 <> '13') OR g_argv[1] = '2')
            AND g_xmdk_m.xmdkstus NOT MATCHES "[NDR]") THEN
         CALL cl_set_act_visible("open_s_pay", FALSE)   
      END IF   
   END IF]]>
  </point>
  <point name="set_act_no_visible_b.set_act_no_visible_b" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #多庫儲批維護
   IF l_ac > 0 THEN 
      IF (g_argv[1] = '1' AND g_xmdk_m.xmdkstus MATCHES "[NDR]") OR g_argv[1] = '2' THEN
         IF g_xmdl_d[l_ac].xmdl013 = 'N' THEN
            CALL cl_set_act_visible("open_adbt540_01",FALSE)                     
         END IF
      ELSE
         CALL cl_set_act_visible("open_adbt540_01",FALSE)      
      END IF
   END IF]]>
  </point>
  <point name="set_act_visible.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #灰階顯示,不可使用
   CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)  
   CALL cl_set_act_visible("insert,reproduce", TRUE)
   CALL cl_set_act_visible("open_adbp580",TRUE)                        #轉出貨簽收單
   CALL cl_set_act_visible("gen_adbt600",TRUE)                         #調貨拋轉消退單   
   CALL cl_set_act_visible("open_s_pay,open_s_pay09", TRUE)            #收款/款別明細
   #隱藏
   CALL cl_set_toolbaritem_visible("query_price",TRUE)                 #查詢單價
   CALL cl_set_toolbaritem_visible("open_adbp580",TRUE)                #轉出貨簽收單
   CALL cl_set_toolbaritem_visible("gen_adbt600",TRUE)                 #調貨拋轉消退單   
     
   ]]>
  </point>
  <point name="set_act_visible_b.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("open_adbt540_01",TRUE)             #多庫儲批]]>
  </point>
  <point name="set_entry.after_control" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmdksite,xmdkunit",TRUE)  
   
   #依單頭有無輸入出通單/訂單控制欄位是否可輸入
   #隱藏欄位,不做控制：xmdk018,xmdk019,xmdk020,xmdk022,xmdk023,xmdk024,xmdk025,xmdk026,xmdk027,xmdk028,
   #                 xmdk029,xmdk203,xmdk204,xmdk207
   CALL cl_set_comp_entry("xmdk002,xmdk005,xmdk006,xmdk007,xmdk008",TRUE)
   CALL cl_set_comp_entry("xmdk009,xmdk010,xmdk011,xmdk012",TRUE)
   CALL cl_set_comp_entry("xmdk015,xmdk016,xmdk017,xmdk021",TRUE)
   CALL cl_set_comp_entry("xmdk030,xmdk031,xmdk032,xmdk033,xmdk034",TRUE)
   CALL cl_set_comp_entry("xmdk035,xmdk036,xmdk037,xmdk038,xmdk051",TRUE)
   CALL cl_set_comp_entry("xmdk052,xmdk053,xmdk054,xmdk081,xmdk082",TRUE)
   CALL cl_set_comp_entry("xmdk083,xmdk200,xmdk201,xmdk202,xmda026",TRUE)
   
   #CALL cl_set_comp_entry("xmdk039,xmdk040",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmdksite,xmdkdocdt",TRUE)                             ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006",TRUE)
   CALL cl_set_comp_entry("xmdl008,xmdl222,xmdl223,xmdl224,xmdl225,xmdl226,",TRUE)
   CALL cl_set_comp_entry("xmdl007,xmdl009,xmdl205,xmdl019",TRUE)   
   CALL cl_set_comp_entry("xmdl013,xmdl014,xmdl015,xmdl016",TRUE)
   CALL cl_set_comp_entry("xmdl024",TRUE)
   
   CALL cl_set_comp_entry("xmdl205",TRUE)  #ken
   #無訂單出貨
   IF g_xmdl_d[l_ac].xmdl007 = '9' THEN
      #CALL cl_set_comp_entry("xmdl011,xmdl012,xmdl017,xmdl023,xmdl025,xmdl026",TRUE) 
      CALL cl_set_comp_entry("xmdl017,xmdl023,xmdl025,xmdl026,xmdl204",TRUE) 
   END IF]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #aooi500設定的欄位控卡
   IF (NOT s_aooi500_comp_entry(g_prog,'xmdksite') OR g_ins_site_flag = 'Y') THEN
      CALL cl_set_comp_entry("xmdksite",FALSE)
   END IF
   IF NOT s_aooi500_comp_entry(g_prog,'xmdkunit') THEN
      CALL cl_set_comp_entry("xmdkunit",FALSE)
   END IF
   
   CALL adbt540_detail_count() RETURNING r_notice_cnt,r_order_cnt
   #單身有輸入出通單,#單身有輸入訂單
   CASE
      WHEN r_notice_cnt = 1
         CALL cl_set_comp_entry("xmdk006",FALSE)
      WHEN r_order_cnt = 1   
         CALL cl_set_comp_entry("xmdk005",FALSE)  
      WHEN r_notice_cnt > 1 OR r_order_cnt > 1     
         CALL cl_set_comp_entry("xmdk005",FALSE)  
         CALL cl_set_comp_entry("xmdk006",FALSE)
   END CASE 
   
   #出貨單與出通單勾稽
   #依單頭有無輸入出通單/訂單控制欄位是否可輸入
   #隱藏欄位，不做控制：xmdk018,xmdk019,xmdk020,xmdk022,xmdk023,xmdk024,xmdk025,xmdk026,xmdk027,xmdk028,
   #                  xmdk029,xmdk203,xmdk204,xmdk207   
   IF NOT cl_null(g_xmdk_m.xmdkdocno) THEN
      IF adbt540_get_slip_para(g_xmdk_m.xmdkdocno) = 'Y' THEN
         CALL cl_set_comp_entry("xmdk006",FALSE)
      ELSE
         CALL cl_set_comp_entry("xmdk005",FALSE)
      END IF
   END IF 
   
   IF NOT cl_null(g_xmdk_m.xmdk005) OR NOT cl_null(g_xmdk_m.xmdk006) THEN
      IF NOT cl_null(g_xmdk_m.xmdk002) THEN      CALL cl_set_comp_entry("xmdk002",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk007) THEN      CALL cl_set_comp_entry("xmdk007",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk008) THEN      CALL cl_set_comp_entry("xmdk008",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk009) THEN      CALL cl_set_comp_entry("xmdk009",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk010) THEN      CALL cl_set_comp_entry("xmdk010",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk011) THEN      CALL cl_set_comp_entry("xmdk011",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk012) THEN      CALL cl_set_comp_entry("xmdk012",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk013) THEN      CALL cl_set_comp_entry("xmdk013",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk014) THEN      CALL cl_set_comp_entry("xmdk014",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk015) THEN      CALL cl_set_comp_entry("xmdk015",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk016) THEN      CALL cl_set_comp_entry("xmdk016",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk017) THEN      CALL cl_set_comp_entry("xmdk017",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk021) THEN      CALL cl_set_comp_entry("xmdk021",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk030) THEN      CALL cl_set_comp_entry("xmdk030",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk031) THEN      CALL cl_set_comp_entry("xmdk031",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk032) THEN      CALL cl_set_comp_entry("xmdk032",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk033) THEN      CALL cl_set_comp_entry("xmdk033",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk034) THEN      CALL cl_set_comp_entry("xmdk034",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk035) THEN      CALL cl_set_comp_entry("xmdk035",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk036) THEN      CALL cl_set_comp_entry("xmdk036",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk037) THEN      CALL cl_set_comp_entry("xmdk037",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk038) THEN      CALL cl_set_comp_entry("xmdk038",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk051) THEN      CALL cl_set_comp_entry("xmdk051",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk052) THEN      CALL cl_set_comp_entry("xmdk052",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk053) THEN      CALL cl_set_comp_entry("xmdk053",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk054) THEN      CALL cl_set_comp_entry("xmdk054",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk081) THEN      CALL cl_set_comp_entry("xmdk081",FALSE)      END IF
      #IF NOT cl_null(g_xmdk_m.xmdk082) THEN      CALL cl_set_comp_entry("xmdk082",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk083) THEN      CALL cl_set_comp_entry("xmdk083",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk200) THEN      CALL cl_set_comp_entry("xmdk200",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk201) THEN      CALL cl_set_comp_entry("xmdk201",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk202) THEN      CALL cl_set_comp_entry("xmdk202",FALSE)      END IF
      IF NOT cl_null(g_xmdk_m.xmdk205) THEN      CALL cl_set_comp_entry("xmda026",FALSE)      END IF
   ELSE
      #2014/08/22 沒有單據來源,由客戶帶出預設值的欄位開放允許更改
      #IF NOT cl_null(g_xmdk_m.xmdk007) THEN
      #   IF NOT cl_null(g_xmdk_m.xmdk008) THEN      CALL cl_set_comp_entry("xmdk008",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk009) THEN      CALL cl_set_comp_entry("xmdk009",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk010) THEN      CALL cl_set_comp_entry("xmdk010",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk011) THEN      CALL cl_set_comp_entry("xmdk011",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk012) THEN      CALL cl_set_comp_entry("xmdk012",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk013) THEN      CALL cl_set_comp_entry("xmdk013",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk014) THEN      CALL cl_set_comp_entry("xmdk014",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk015) THEN      CALL cl_set_comp_entry("xmdk015",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk016) THEN      CALL cl_set_comp_entry("xmdk016",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk017) THEN      CALL cl_set_comp_entry("xmdk017",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk030) THEN      CALL cl_set_comp_entry("xmdk030",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk031) THEN      CALL cl_set_comp_entry("xmdk031",FALSE)      END IF      
      #   IF NOT cl_null(g_xmdk_m.xmdk202) THEN      CALL cl_set_comp_entry("xmdk202",FALSE)      END IF
      #   IF NOT cl_null(g_xmdk_m.xmdk205) THEN      CALL cl_set_comp_entry("xmda026",FALSE)      END IF       
      #END IF
      
      #依出貨性質控制:調貨經銷商,代送商
      IF g_xmdk_m.xmdk002 <> '6' THEN
         CALL cl_set_comp_entry("xmdk200",FALSE)
      END IF

      IF g_xmdk_m.xmdk002 = '6' THEN
         CALL cl_set_comp_entry("xmdk201",FALSE)
      END IF
   END IF
   
   CALL cl_set_comp_entry("xmdk039,xmdk040",FALSE)

   #留置時才可以維護留置原因
   IF g_xmdk_m.xmdkstus <> 'H' THEN
      CALL cl_set_comp_entry("xmdk034",FALSE)
   END IF   ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   DEFINE r_notice_cnt   LIKE type_t.num5
   DEFINE r_order_cnt    LIKE type_t.num5]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("xmdksite",FALSE)
      CALL cl_set_comp_entry("xmdkdocdt",FALSE)                                                 ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_slip     LIKE ooba_t.ooba001
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_imaa005  LIKE imaa_t.imaa005
   DEFINE l_xmdc022  LIKE xmdc_t.xmdc022
   DEFINE l_xmdl013  LIKE xmdl_t.xmdl013
   DEFINE l_xmdl014  LIKE xmdl_t.xmdl014
   DEFINE l_xmdl015  LIKE xmdl_t.xmdl015
   DEFINE l_xmdl016  LIKE xmdl_t.xmdl016
   DEFINE l_xmdl052  LIKE xmdl_t.xmdl052
   DEFINE l_xmah003  LIKE xmah_t.xmah003  #價格允許修改
   DEFINE l_imaf061  LIKE imaf_t.imaf061]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CASE
      WHEN NOT cl_null(g_xmdk_m.xmdk005)              #出通單
         CALL cl_set_comp_entry("xmdl001,xmdl002,xmdl007",FALSE)
         CALL cl_set_comp_entry("xmdl003,xmdl004,xmdl005,xmdl006",FALSE)    
         CALL cl_set_comp_entry("xmdl008,xmdl222,xmdl223,xmdl224,xmdl225,xmdl226,",FALSE)
      WHEN NOT cl_null(g_xmdk_m.xmdk006)              #訂單
         CALL cl_set_comp_entry("xmdl001,xmdl002,xmdl003,xmdl007",FALSE) 
         CALL cl_set_comp_entry("xmdl008,xmdl222,xmdl223,xmdl224,xmdl225,xmdl226,",FALSE)         
      WHEN cl_null(g_xmdk_m.xmdk005) AND cl_null(g_xmdk_m.xmdk006)
        LET g_slip_para = adbt540_get_slip_para(g_xmdk_m.xmdkdocno)
        IF g_slip_para = 'Y' THEN                     #出貨單與出通單勾稽
           CALL cl_set_comp_entry("xmdl003,xmdl004,xmdl005,xmdl006",FALSE)     
        ELSE
           CALL cl_set_comp_entry("xmdl001,xmdl002",FALSE)
        END IF   
   END CASE
   
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) OR NOT cl_null(g_xmdl_d[l_ac].xmdl003) THEN
      CALL cl_set_comp_entry("xmdl007",FALSE)
      CALL cl_set_comp_entry("xmdl008,xmdl222,xmdl223,xmdl224,xmdl225,xmdl226,",FALSE)
      IF NOT cl_null(g_xmdl_d[l_ac].xmdl019) THEN
         CALL cl_set_comp_entry("xmdl019",FALSE)
      END IF     
   END IF

   IF NOT cl_null(g_xmdl_d[l_ac].xmdl001) THEN
      CALL s_aooi200_get_slip(g_xmdl_d[l_ac].xmdl001) RETURNING l_success,l_slip
      IF l_success THEN
         IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0060') = '1' THEN    #出通轉出貨單控管為"一對一"
            CALL cl_set_comp_entry("xmdl205",FALSE)
         END IF
      END IF
      
      CALL cl_set_comp_entry("xmdl003,xmdl004,xmdl005,xmdl006",FALSE)     #訂單
   END IF
   
   IF (NOT cl_null(g_xmdl_d[l_ac].xmdl001) AND NOT cl_null(g_xmdl_d[l_ac].xmdl002)) OR
      (NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND NOT cl_null(g_xmdl_d[l_ac].xmdl004) AND 
       NOT cl_null(g_xmdl_d[l_ac].xmdl005) AND NOT cl_null(g_xmdl_d[l_ac].xmdl006)) THEN      
      CALL cl_set_comp_entry("xmdl007",FALSE)
      CALL cl_set_comp_entry("xmdl008,xmdl222,xmdl223,xmdl224,xmdl225,xmdl226,",FALSE)
   END IF
   
   #判斷料件是否存在產品特徵
   LET l_imaa005 = NULL
   CALL s_adb_get_imaa005(g_enterprise,g_xmdl_d[l_ac].xmdl008) RETURNING l_imaa005
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_required("xmdl009",FALSE)
   END IF
   
   #訂單設置不允許分批出貨時，則數量直接預設訂單分批量不可修改
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl003) AND
      NOT cl_null(g_xmdl_d[l_ac].xmdl004) THEN
      
      LET l_xmdc022 = 'Y'
      SELECT xmdc022 INTO l_xmdc022
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_xmdl_d[l_ac].xmdl003
         AND xmdcseq = g_xmdl_d[l_ac].xmdl004
      IF l_xmdc022 = 'N' THEN
         CALL cl_set_comp_entry("xmdl205",FALSE)
      END IF
   END IF
   
   #是否限定多庫儲批/庫位/儲位/批號
   LET l_xmdl013 = ''
   LET l_xmdl014 = ''
   LET l_xmdl015 = ''
   LET l_xmdl016 = ''
   LET l_xmdl052 = ''   
   
   CALL s_adbt540_source_define(g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,
                                g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,
                                g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006)
      RETURNING l_xmdl013,l_xmdl014,l_xmdl015,l_xmdl016,l_xmdl052
   
   #若出貨單來源已經有指定出貨的庫儲批時，則出貨單就不能再勾選多庫儲批出貨   
   IF l_xmdl013 = 'Y' THEN
      CALL cl_set_comp_entry("xmdl013,xmdl014,xmdl015,xmdl016",FALSE)
   ELSE
      IF NOT cl_null(l_xmdl014) THEN
         CALL cl_set_comp_entry("xmdl014",FALSE)
      END IF
      IF NOT cl_null(l_xmdl015) THEN
         CALL cl_set_comp_entry("xmdl015",FALSE)
      END IF     
      IF NOT cl_null(l_xmdl016) THEN
         CALL cl_set_comp_entry("xmdl016",FALSE)
      END IF
   END IF  
   
   LET l_imaf061 = NULL
   LET l_imaf061 = s_adbt540_get_imaf061(g_xmdl_d[l_ac].xmdl008) 
   IF l_imaf061 = '1' OR l_imaf061 = '3' THEN
      CALL cl_set_comp_entry("xmdl016",FALSE)
   END IF
   
   #若為多庫儲批出貨
   IF g_xmdl_d[l_ac].xmdl013 = 'Y' THEN
      CALL cl_set_comp_entry("xmdl014,xmdl015,xmdl016",FALSE)
   END IF
      
   #若單頭取價方式的基本資料設置不允許修改單價時，則單價欄位不可以維護 
   LET l_xmah003 = ''
   SELECT xmah003
     FROM xmah_t
    WHERE xmahent = g_enterprise
      AND xmah001 = g_xmdk_m.xmdk018
   
   IF l_xmah003 = 'N' THEN
      CALL cl_set_comp_entry("xmdl024",FALSE)
   END IF
   
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN  #參數使用銷售計價單位
      CALL cl_set_comp_entry("xmdl022",FALSE)
   END IF
   
   #稅別應用為'1'正常稅率
   IF g_oodb011 = '1' THEN
      CALL cl_set_comp_entry("xmdl025,xmdl026",FALSE)
   END IF
   
   #ken------------------------------------s
   IF NOT cl_null(g_xmdl_d[l_ac].xmdl018)  THEN
     CALL cl_set_comp_entry("xmdl205",FALSE)
   END IF
   #ken------------------------------------e 
   
   CALL adbt540_set_visible()   #隱藏欄位]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xmdk_m_o.* = g_xmdk_m.*      #保存單頭舊值                        ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl_ref()]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl2_ref()         ]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl3_ref()]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl4_ref()]]>
  </point>
  <point name="show.body5.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl5_ref()]]>
  </point>
  <point name="show.body6.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl6_ref()]]>
  </point>
  <point name="show.body7.reference" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL adbt540_xmdl7_ref()]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xmdk_m.xmdksite_desc = s_desc_get_department_desc(g_xmdk_m.xmdksite)
   LET g_xmdk_m.xmdk003_desc = s_desc_get_person_desc(g_xmdk_m.xmdk003)
   LET g_xmdk_m.xmdk004_desc = s_desc_get_department_desc(g_xmdk_m.xmdk004)   

   CALL adbt540_xmdk_ref()   #透過出通單/訂單帶值的欄位的說明
   
   LET g_xmdk_m.xmdkownid_desc = s_desc_get_person_desc(g_xmdk_m.xmdkownid)
   LET g_xmdk_m.xmdkowndp_desc = s_desc_get_department_desc(g_xmdk_m.xmdkowndp)
   LET g_xmdk_m.xmdkcrtid_desc = s_desc_get_person_desc(g_xmdk_m.xmdkcrtid)
   LET g_xmdk_m.xmdkcrtdp_desc = s_desc_get_department_desc(g_xmdk_m.xmdkcrtdp)
   LET g_xmdk_m.xmdkmodid_desc = s_desc_get_person_desc(g_xmdk_m.xmdkmodid)
   LET g_xmdk_m.xmdkcnfid_desc = s_desc_get_person_desc(g_xmdk_m.xmdkcnfid)
   LET g_xmdk_m.xmdkpstid_desc = s_desc_get_person_desc(g_xmdk_m.xmdkpstid)
]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="statechange.a_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL adbt540_set_act_visible()
   CALL adbt540_set_act_no_visible()   ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="statechange.b_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   
   OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt540_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err() 
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   LET l_success = TRUE   
   
   #彙總錯誤訊息因每個狀態的變更有不同的操作情況, 因此在各個狀態變更段落中宣告初始值&顯示
   CASE
      WHEN lc_state = 'Y'   #確認
         CALL cl_err_collect_init()
         IF g_xmdk_m.xmdkstus = 'N' OR
            g_xmdk_m.xmdkstus = 'A' OR
            g_xmdk_m.xmdkstus = 'D' OR
            g_xmdk_m.xmdkstus = 'R' THEN   
            
            IF NOT s_adbt540_conf_chk(g_argv[1],g_xmdk_m.xmdkdocno) THEN
               LET l_success = FALSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
               LET l_success = FALSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF NOT s_adbt540_conf_upd(g_xmdk_m.xmdkdocno) THEN
               LET l_success = FALSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
         CALL cl_err_collect_show()         
      WHEN lc_state = 'N'   #取消確認
         CALL cl_err_collect_init()
         IF NOT s_adbt540_unconf_chk(g_xmdk_m.xmdkdocno) THEN
           LET l_success = FALSE
           CALL cl_err_collect_show()
           CALL s_transaction_end('N','0')
           RETURN
         END IF
         
         IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         IF NOT s_adbt540_unconf_upd(g_xmdk_m.xmdkdocno) THEN
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL cl_err_collect_show()   
      WHEN lc_state = 'X'   #作廢
         CALL cl_err_collect_init()
         IF NOT s_adbt540_invalid_chk(g_xmdk_m.xmdkdocno) THEN
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         IF NOT cl_ask_confirm('aim-00109') THEN  #是否執行作廢？
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         IF NOT s_adbt540_invalid_upd(g_xmdk_m.xmdkdocno) THEN
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL cl_err_collect_show()         
      WHEN lc_state = 'S'   #過帳
         CALL cl_err_collect_init()
         IF NOT s_adbt540_post_chk(g_xmdk_m.xmdkdocno) THEN
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL cl_err_collect_show()
         
         IF NOT cl_ask_confirm('sub-00360') THEN  #是否執行過帳？
            LET l_success = FALSE
            CALL s_transaction_end('N','0')
            RETURN
         END IF   
         
         IF NOT adbt540_post_input() THEN  #INPUT
            LET l_success = FALSE
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         IF g_xmdk_m.xmdk002 = '3' THEN
            #開窗維護在途倉        
            CALL adbt540_open_adbt540_s01() RETURNING l_success
            IF NOT l_success THEN
               LET l_success = FALSE
               CALL s_transaction_end('N','0')
               LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001  
               CALL adbt540_upd_xmdk001() RETURNING l_success
               DISPLAY BY NAME g_xmdk_m.xmdk001
               RETURN
            ELSE
               CALL adbt540_ui_headershow()
            END IF              
         END IF
         
         CALL cl_err_collect_init()
         IF NOT s_adbt540_post_upd(g_xmdk_m.xmdkdocno) THEN
            LET l_success = FALSE
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            LET g_xmdk_m.xmdk001 = g_xmdk_m_t.xmdk001  
            CALL adbt540_upd_xmdk001() RETURNING l_success
            DISPLAY BY NAME g_xmdk_m.xmdk001
            RETURN
         END IF
         CALL cl_err_collect_show()
      WHEN lc_state = 'Z'   #過帳還原
         CALL cl_err_collect_init()
         IF g_xmdk_m.xmdkstus = 'S' THEN   #取消過帳
            IF NOT s_adbt540_unpost_chk(g_xmdk_m.xmdkdocno) THEN
               LET l_success = FALSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            CALL cl_err_collect_show()
            
            IF NOT cl_ask_confirm('sub-00361') THEN  #是否執行取消過帳？
               LET l_success = FALSE                  
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET lc_state = 'Y'
            CALL cl_err_collect_init()
            IF NOT s_adbt540_unpost_upd(g_xmdk_m.xmdkdocno) THEN   
               LET l_success = FALSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            CALL cl_err_collect_show()
         END IF      
      WHEN lc_state = 'H'   #留置
         IF NOT adbt540_hold_upd('1') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_transaction_end('Y','0')
         END IF
      WHEN lc_state = 'UH'  #取消留置      
         IF NOT adbt540_hold_upd('2') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET lc_state = 'Y'
            CALL s_transaction_end('Y','0')
         END IF 
   END CASE   
   
   IF NOT l_success THEN      
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      CALL s_transaction_end('Y','0')   
   END IF]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #approved    已核准(不卡)
      #rejection   已拒絕(不卡)
      #signing     提交
      #withdraw    抽單

      #confirmed   確認
      #unconfirmed 取消確認
      #posted      過帳
      #unposted    過帳還原
      #invalid     作廢
      #unhold      取消留置
      #hold        留置

      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted,invalid,unhold,hold",FALSE)
      CASE g_xmdk_m.xmdkstus
         WHEN "N"   #未確認
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "X"   #作廢
            RETURN

         WHEN "Y"   #已確認
            CALL cl_set_act_visible("unconfirmed,posted,hold",TRUE)

         WHEN "S"   #已過帳
            CALL cl_set_act_visible("unposted",TRUE)

         WHEN "A"   #已核准
            CALL cl_set_act_visible("confirmed ",TRUE)

         WHEN "R"   #已拒絕
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "D"   #抽單
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "W"   #送簽中
            CALL cl_set_act_visible("withdraw",TRUE)

         WHEN "H"  #留置
            CALL cl_set_act_visible("unhold",TRUE)

         WHEN "UH" #取消留置
            CALL cl_set_act_visible("hold",TRUE)
#         WHEN "Z"  #扣帳還原

      END CASE            ]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                   ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤                        ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_action_choice) OR g_action_choice != "query_price" THEN
               CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤
            END IF
            CALL adbt540_set_act_visible_b()
            CALL adbt540_set_act_no_visible_b()  ]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="ui_dialog.body2.before_display" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_action_choice) OR g_action_choice != "query_price" THEN
                  CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤
               END IF                                                                                                                                       ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="ui_dialog.body3.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="ui_dialog.body3.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="ui_dialog.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                       ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE r_success LIKE type_t.num5
   DEFINE l_xmdc028 LIKE xmdc_t.xmdc028]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                 ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_comp_visible("page_7,page_8,page_9,page_11",FALSE)      #價格頁籤                                                                                                                          ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL adbt540_set_act_visible_b()
               CALL adbt540_set_act_no_visible_b()                                                                                                                         ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="update_b.after_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="update_b.before_update" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #產品特徵為NULL時,給空白                                                                 #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdl_d[g_detail_idx].xmdl009) THEN
         LET g_xmdl_d[g_detail_idx].xmdl009 = ' '
      END IF ]]>
  </point>
  <point name="update_b.before_update2" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdl3_d[g_detail_idx].xmdm002) THEN
         LET g_xmdl3_d[g_detail_idx].xmdm002 = ' '
      END IF                                                       ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="update_b.m_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                      ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <section id="adbt540.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION adbt540_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.b_fill" ver="63" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adbt540_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_xmdl_d.clear()    #g_xmdl_d 單頭及單身 
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
   CALL g_xmdl4_d.clear()
   CALL g_xmdl5_d.clear()
   CALL g_xmdl6_d.clear()
   CALL g_xmdl7_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adbt540_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006, 
             xmdl007,xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019,xmdl020, 
             xmdl013,xmdl207,xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223,xmdl222, 
             xmdl051,xmdl035,xmdl036,xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022,xmdl023, 
             xmdl034,xmdl041,xmdl088,xmdlseq,xmdl208,xmdl209,xmdl210,xmdl025,xmdl026,xmdl211,xmdl027, 
             xmdl029,xmdl028,xmdl087,xmdl024,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdlseq,xmdl212, 
             xmdl200,xmdl201,xmdl202,xmdl203,xmdl030,xmdl031,xmdl032,xmdl213,xmdl214,xmdlorga,xmdl215, 
             xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit ,t1.imaal003 ,t2.oocal003 ,t3.oocal003 ,t4.oocal003 , 
             t5.inayl003 ,t6.inab003 ,t7.oocql004 ,t8.dbaal003 ,t9.dbaal003 ,t10.dbaal003 ,t11.dbaal003 , 
             t26.ooefl003 ,t27.oojdl003 ,t28.dbbal003 ,t29.dbbcl003 ,t30.ooefl003 ,t31.ooag011 ,t32.ooefl003 , 
             t33.ooefl003 ,t34.oocql004 FROM xmdl_t",   
                     " INNER JOIN xmdk_t ON xmdkdocno = xmdldocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xmdl008 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t2 ON t2.oocalent='"||g_enterprise||"' AND t2.oocal001=xmdl204 AND t2.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=xmdl017 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=xmdl019 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t5 ON t5.inaylent='"||g_enterprise||"' AND t5.inayl001=xmdl014 AND t5.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t6 ON t6.inabent='"||g_enterprise||"' AND t6.inabsite=xmdlsite AND t6.inab001=xmdl014 AND t6.inab002=xmdl015  ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='265' AND t7.oocql002=xmdl050 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t8 ON t8.dbaalent='"||g_enterprise||"' AND t8.dbaal001=xmdl225 AND t8.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t9 ON t9.dbaalent='"||g_enterprise||"' AND t9.dbaal001=xmdl224 AND t9.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t10 ON t10.dbaalent='"||g_enterprise||"' AND t10.dbaal001=xmdl223 AND t10.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t11 ON t11.dbaalent='"||g_enterprise||"' AND t11.dbaal001=xmdl222 AND t11.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t26 ON t26.ooeflent='"||g_enterprise||"' AND t26.ooefl001=xmdl212 AND t26.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t27 ON t27.oojdlent='"||g_enterprise||"' AND t27.oojdl001=xmdl200 AND t27.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t28 ON t28.dbbalent='"||g_enterprise||"' AND t28.dbbal001=xmdl201 AND t28.dbbal002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t29 ON t29.dbbclent='"||g_enterprise||"' AND t29.dbbcl001=xmdl202 AND t29.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t30 ON t30.ooeflent='"||g_enterprise||"' AND t30.ooefl001=xmdl203 AND t30.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t31 ON t31.ooagent='"||g_enterprise||"' AND t31.ooag001=xmdl213  ",
               " LEFT JOIN ooefl_t t32 ON t32.ooeflent='"||g_enterprise||"' AND t32.ooefl001=xmdl214 AND t32.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t33 ON t33.ooeflent='"||g_enterprise||"' AND t33.ooefl001=xmdlorga AND t33.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t34 ON t34.oocqlent='"||g_enterprise||"' AND t34.oocql001='2060' AND t34.oocql002=xmdl217 AND t34.oocql003='"||g_dlang||"' ",
 
                     " WHERE xmdlent=? AND xmdldocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdl_t.xmdlseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt540_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR adbt540_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002, 
          g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006, 
          g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl226,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009, 
          g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205,g_xmdl_d[l_ac].xmdl017, 
          g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl013, 
          g_xmdl_d[l_ac].xmdl207,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016, 
          g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl225,g_xmdl_d[l_ac].xmdl224, 
          g_xmdl_d[l_ac].xmdl223,g_xmdl_d[l_ac].xmdl222,g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035, 
          g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl220,g_xmdl_d[l_ac].xmdl010, 
          g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022, 
          g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl034,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl088, 
          g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl208,g_xmdl2_d[l_ac].xmdl209,g_xmdl2_d[l_ac].xmdl210, 
          g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl211,g_xmdl2_d[l_ac].xmdl027, 
          g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl087,g_xmdl2_d[l_ac].xmdl024, 
          g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045, 
          g_xmdl2_d[l_ac].xmdl046,g_xmdl6_d[l_ac].xmdlseq,g_xmdl6_d[l_ac].xmdl212,g_xmdl6_d[l_ac].xmdl200, 
          g_xmdl6_d[l_ac].xmdl201,g_xmdl6_d[l_ac].xmdl202,g_xmdl6_d[l_ac].xmdl203,g_xmdl6_d[l_ac].xmdl030, 
          g_xmdl6_d[l_ac].xmdl031,g_xmdl6_d[l_ac].xmdl032,g_xmdl6_d[l_ac].xmdl213,g_xmdl6_d[l_ac].xmdl214, 
          g_xmdl6_d[l_ac].xmdlorga,g_xmdl6_d[l_ac].xmdl215,g_xmdl6_d[l_ac].xmdl216,g_xmdl6_d[l_ac].xmdl217, 
          g_xmdl6_d[l_ac].xmdl218,g_xmdl6_d[l_ac].xmdl219,g_xmdl6_d[l_ac].xmdlunit,g_xmdl_d[l_ac].xmdl008_desc, 
          g_xmdl_d[l_ac].xmdl204_desc,g_xmdl_d[l_ac].xmdl017_desc,g_xmdl_d[l_ac].xmdl019_desc,g_xmdl_d[l_ac].xmdl014_desc, 
          g_xmdl_d[l_ac].xmdl015_desc,g_xmdl_d[l_ac].xmdl050_desc,g_xmdl_d[l_ac].xmdl225_desc,g_xmdl_d[l_ac].xmdl224_desc, 
          g_xmdl_d[l_ac].xmdl223_desc,g_xmdl_d[l_ac].xmdl222_desc,g_xmdl6_d[l_ac].xmdl212_desc,g_xmdl6_d[l_ac].xmdl200_desc, 
          g_xmdl6_d[l_ac].xmdl201_desc,g_xmdl6_d[l_ac].xmdl202_desc,g_xmdl6_d[l_ac].xmdl203_desc,g_xmdl6_d[l_ac].xmdl213_desc, 
          g_xmdl6_d[l_ac].xmdl214_desc,g_xmdl6_d[l_ac].xmdlorga_desc,g_xmdl6_d[l_ac].xmdl217_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF adbt540_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005, 
             xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014 ,t15.imaal003 , 
             t16.inayl003 ,t17.inab003 ,t18.oocal003 ,t19.oocal003 FROM xmdm_t",   
                     " INNER JOIN xmdk_t ON xmdkdocno = xmdmdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t15 ON t15.imaalent='"||g_enterprise||"' AND t15.imaal001=xmdm001 AND t15.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t16 ON t16.inaylent='"||g_enterprise||"' AND t16.inayl001=xmdm005 AND t16.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t17 ON t17.inabent='"||g_enterprise||"' AND t17.inabsite=xmdmsite AND t17.inab001=xmdm005 AND t17.inab002=xmdm006  ",
               " LEFT JOIN oocal_t t18 ON t18.oocalent='"||g_enterprise||"' AND t18.oocal001=xmdm008 AND t18.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t19 ON t19.oocalent='"||g_enterprise||"' AND t19.oocal001=xmdm010 AND t19.oocal002='"||g_dlang||"' ",
 
                     " WHERE xmdment=? AND xmdmdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdm_t.xmdmseq,xmdm_t.xmdmseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt540_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR adbt540_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs2 INTO g_xmdl3_d[l_ac].xmdmsite,g_xmdl3_d[l_ac].xmdmseq,g_xmdl3_d[l_ac].xmdmseq1, 
          g_xmdl3_d[l_ac].xmdm001,g_xmdl3_d[l_ac].xmdm002,g_xmdl3_d[l_ac].xmdm003,g_xmdl3_d[l_ac].xmdm004, 
          g_xmdl3_d[l_ac].xmdm005,g_xmdl3_d[l_ac].xmdm006,g_xmdl3_d[l_ac].xmdm007,g_xmdl3_d[l_ac].xmdm033, 
          g_xmdl3_d[l_ac].xmdm008,g_xmdl3_d[l_ac].xmdm009,g_xmdl3_d[l_ac].xmdm010,g_xmdl3_d[l_ac].xmdm011, 
          g_xmdl3_d[l_ac].xmdm012,g_xmdl3_d[l_ac].xmdm013,g_xmdl3_d[l_ac].xmdm014,g_xmdl3_d[l_ac].xmdm001_desc, 
          g_xmdl3_d[l_ac].xmdm005_desc,g_xmdl3_d[l_ac].xmdm006_desc,g_xmdl3_d[l_ac].xmdm008_desc,g_xmdl3_d[l_ac].xmdm010_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt540_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE xrcdsite,xrcdld,xrcdseq,xrcd007,xrcd002,xrcdseq2,xrcd003,xrcd006, 
             xrcd004,xrcd104  FROM xrcd_t",   
                     " INNER JOIN xmdk_t ON xmdkdocno = xrcddocno ",
 
                     "",
                     
                     
                     " WHERE xrcdent=? AND xrcddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrcd_t.xrcdld,xrcd_t.xrcdseq,xrcd_t.xrcdseq2,xrcd_t.xrcd007"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt540_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR adbt540_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs3 INTO g_xmdl4_d[l_ac].xrcdsite,g_xmdl4_d[l_ac].xrcdld,g_xmdl4_d[l_ac].xrcdseq, 
          g_xmdl4_d[l_ac].xrcd007,g_xmdl4_d[l_ac].xrcd002,g_xmdl4_d[l_ac].xrcdseq2,g_xmdl4_d[l_ac].xrcd003, 
          g_xmdl4_d[l_ac].xrcd006,g_xmdl4_d[l_ac].xrcd004,g_xmdl4_d[l_ac].xrcd104
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt540_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rtiesite,rtieseq,rtieseq1,rtie001,rtie002,rtie006  FROM rtie_t", 
                
                     " INNER JOIN xmdk_t ON xmdkdocno = rtiedocno ",
 
                     "",
                     
                     
                     " WHERE rtieent=? AND rtiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtie_t.rtieseq,rtie_t.rtieseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt540_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR adbt540_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs4 INTO g_xmdl5_d[l_ac].rtiesite,g_xmdl5_d[l_ac].rtieseq,g_xmdl5_d[l_ac].rtieseq1, 
          g_xmdl5_d[l_ac].rtie001,g_xmdl5_d[l_ac].rtie002,g_xmdl5_d[l_ac].rtie006
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt540_fill_chk(5) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006, 
             rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
             rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028, 
             rtic029,rticsite,rticunit  FROM rtic_t",   
                     " INNER JOIN xmdk_t ON xmdkdocno = rticdocno ",
 
                     "",
                     
                     
                     " WHERE rticent=? AND rticdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtic_t.rticseq,rtic_t.rticseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt540_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR adbt540_pb5
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_xmdk_m.xmdkdocno
                                               
      FOREACH b_fill_cs5 INTO g_xmdl7_d[l_ac].rticseq,g_xmdl7_d[l_ac].rticseq1,g_xmdl7_d[l_ac].rtic001, 
          g_xmdl7_d[l_ac].rtic002,g_xmdl7_d[l_ac].rtic003,g_xmdl7_d[l_ac].rtic004,g_xmdl7_d[l_ac].rtic005, 
          g_xmdl7_d[l_ac].rtic006,g_xmdl7_d[l_ac].rtic007,g_xmdl7_d[l_ac].rtic008,g_xmdl7_d[l_ac].rtic009, 
          g_xmdl7_d[l_ac].rtic010,g_xmdl7_d[l_ac].rtic011,g_xmdl7_d[l_ac].rtic012,g_xmdl7_d[l_ac].rtic013, 
          g_xmdl7_d[l_ac].rtic014,g_xmdl7_d[l_ac].rtic015,g_xmdl7_d[l_ac].rtic016,g_xmdl7_d[l_ac].rtic017, 
          g_xmdl7_d[l_ac].rtic018,g_xmdl7_d[l_ac].rtic019,g_xmdl7_d[l_ac].rtic020,g_xmdl7_d[l_ac].rtic021, 
          g_xmdl7_d[l_ac].rtic022,g_xmdl7_d[l_ac].rtic023,g_xmdl7_d[l_ac].rtic024,g_xmdl7_d[l_ac].rtic025, 
          g_xmdl7_d[l_ac].rtic026,g_xmdl7_d[l_ac].rtic027,g_xmdl7_d[l_ac].rtic028,g_xmdl7_d[l_ac].rtic029, 
          g_xmdl7_d[l_ac].rticsite,g_xmdl7_d[l_ac].rticunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xmdl_d.deleteElement(g_xmdl_d.getLength())
   CALL g_xmdl2_d.deleteElement(g_xmdl2_d.getLength())
   CALL g_xmdl3_d.deleteElement(g_xmdl3_d.getLength())
   CALL g_xmdl4_d.deleteElement(g_xmdl4_d.getLength())
   CALL g_xmdl5_d.deleteElement(g_xmdl5_d.getLength())
   CALL g_xmdl6_d.deleteElement(g_xmdl6_d.getLength())
   CALL g_xmdl7_d.deleteElement(g_xmdl7_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adbt540_pb
   FREE adbt540_pb2
 
   FREE adbt540_pb3
 
   FREE adbt540_pb4
 
   FREE adbt540_pb5
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
      CALL adbt540_xmdl_t_mask()
      LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
   END FOR
   
   LET g_xmdl2_d_mask_o.* =  g_xmdl2_d.*
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      LET g_xmdl2_d_mask_o[l_ac].* =  g_xmdl2_d[l_ac].*
      CALL adbt540_xmdl_t_mask()
      LET g_xmdl2_d_mask_n[l_ac].* =  g_xmdl2_d[l_ac].*
   END FOR
   LET g_xmdl3_d_mask_o.* =  g_xmdl3_d.*
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      LET g_xmdl3_d_mask_o[l_ac].* =  g_xmdl3_d[l_ac].*
      CALL adbt540_xmdm_t_mask()
      LET g_xmdl3_d_mask_n[l_ac].* =  g_xmdl3_d[l_ac].*
   END FOR
   LET g_xmdl4_d_mask_o.* =  g_xmdl4_d.*
   FOR l_ac = 1 TO g_xmdl4_d.getLength()
      LET g_xmdl4_d_mask_o[l_ac].* =  g_xmdl4_d[l_ac].*
      CALL adbt540_xrcd_t_mask()
      LET g_xmdl4_d_mask_n[l_ac].* =  g_xmdl4_d[l_ac].*
   END FOR
   LET g_xmdl5_d_mask_o.* =  g_xmdl5_d.*
   FOR l_ac = 1 TO g_xmdl5_d.getLength()
      LET g_xmdl5_d_mask_o[l_ac].* =  g_xmdl5_d[l_ac].*
      CALL adbt540_rtie_t_mask()
      LET g_xmdl5_d_mask_n[l_ac].* =  g_xmdl5_d[l_ac].*
   END FOR
   LET g_xmdl6_d_mask_o.* =  g_xmdl6_d.*
   FOR l_ac = 1 TO g_xmdl6_d.getLength()
      LET g_xmdl6_d_mask_o[l_ac].* =  g_xmdl6_d[l_ac].*
      CALL adbt540_xmdl_t_mask()
      LET g_xmdl6_d_mask_n[l_ac].* =  g_xmdl6_d[l_ac].*
   END FOR
   LET g_xmdl7_d_mask_o.* =  g_xmdl7_d.*
   FOR l_ac = 1 TO g_xmdl7_d.getLength()
      LET g_xmdl7_d_mask_o[l_ac].* =  g_xmdl7_d[l_ac].*
      CALL adbt540_rtic_t_mask()
      LET g_xmdl7_d_mask_n[l_ac].* =  g_xmdl7_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.b_fill2" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION adbt540_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adbt540_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.browser_fill" ver="64" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adbt540_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xmdkdocno ",
                      " FROM xmdk_t ",
                      " ",
                      " LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ",
                      #add-point:browser_fill段sql(xmdl_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ",
                      #add-point:browser_fill段sql(xmdm_t1)
                      {<point name="browser_fill.cnt.join.xmdm_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xrcd_t ON xrcdent = xmdkent AND xmdkdocno = xrcddocno", "  ",
                      #add-point:browser_fill段sql(xrcd_t1)
                      {<point name="browser_fill.cnt.join.xrcd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtie_t ON rtieent = xmdkent AND xmdkdocno = rtiedocno", "  ",
                      #add-point:browser_fill段sql(rtie_t1)
                      {<point name="browser_fill.cnt.join.rtie_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtic_t ON rticent = xmdkent AND xmdkdocno = rticdocno", "  ",
                      #add-point:browser_fill段sql(rtic_t1)
                      {<point name="browser_fill.cnt.join.rtic_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE xmdkent = '" ||g_enterprise|| "' AND xmdlent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmdk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xmdkdocno ",
                      " FROM xmdk_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdkent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xmdk_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmdk_m.* TO NULL
      CALL g_xmdl_d.clear()        
      CALL g_xmdl2_d.clear() 
      CALL g_xmdl3_d.clear() 
      CALL g_xmdl4_d.clear() 
      CALL g_xmdl5_d.clear() 
      CALL g_xmdl6_d.clear() 
      CALL g_xmdl7_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdkdocno,t0.xmdkdocdt,t0.xmdk001,t0.xmdk003,t0.xmdk004,t0.xmdk006,t0.xmdk007,t0.xmdk008,t0.xmdk009 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.xmdkstus,t0.xmdkdocno,t0.xmdkdocdt,t0.xmdk001,t0.xmdk003,t0.xmdk004, 
       t0.xmdk006,t0.xmdk007,t0.xmdk008,t0.xmdk009,t1.ooag011 ,t2.ooefl003 ,t3.pmaal003 ,t4.pmaal003 , 
       t5.pmaal003 ",
               " FROM xmdk_t t0",
               "  ",
               "  LEFT JOIN xmdl_t ON xmdlent = xmdkent AND xmdkdocno = xmdldocno ", "  ", 
               #add-point:browser_fill段sql(xmdl_t1)
               {<point name="browser_fill.join.xmdl_t1"/>}
               #end add-point
               "  LEFT JOIN xmdm_t ON xmdment = xmdkent AND xmdkdocno = xmdmdocno", "  ", 
               #add-point:browser_fill段sql(xmdm_t1)
               {<point name="browser_fill.join.xmdm_t1"/>}
               #end add-point
 
               "  LEFT JOIN xrcd_t ON xrcdent = xmdkent AND xmdkdocno = xrcddocno", "  ", 
               #add-point:browser_fill段sql(xrcd_t1)
               {<point name="browser_fill.join.xrcd_t1"/>}
               #end add-point
 
               "  LEFT JOIN rtie_t ON rtieent = xmdkent AND xmdkdocno = rtiedocno", "  ", 
               #add-point:browser_fill段sql(rtie_t1)
               {<point name="browser_fill.join.rtie_t1"/>}
               #end add-point
 
               "  LEFT JOIN rtic_t ON rticent = xmdkent AND xmdkdocno = rticdocno", "  ", 
               #add-point:browser_fill段sql(rtic_t1)
               {<point name="browser_fill.join.rtic_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xmdk004 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.xmdk007 AND t3.pmaal002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.xmdk008 AND t4.pmaal002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.xmdk009 AND t5.pmaal002='"||g_lang||"' ",
 
               " WHERE t0.xmdkent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmdk_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdkdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmdk_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdkdocno,g_browser[g_cnt].b_xmdkdocdt, 
       g_browser[g_cnt].b_xmdk001,g_browser[g_cnt].b_xmdk003,g_browser[g_cnt].b_xmdk004,g_browser[g_cnt].b_xmdk006, 
       g_browser[g_cnt].b_xmdk007,g_browser[g_cnt].b_xmdk008,g_browser[g_cnt].b_xmdk009,g_browser[g_cnt].b_xmdk003_desc, 
       g_browser[g_cnt].b_xmdk004_desc,g_browser[g_cnt].b_xmdk007_desc,g_browser[g_cnt].b_xmdk008_desc, 
       g_browser[g_cnt].b_xmdk009_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL adbt540_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdkdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.construct" ver="88" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adbt540_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmdk_m.* TO NULL
   CALL g_xmdl_d.clear()        
   CALL g_xmdl2_d.clear() 
   CALL g_xmdl3_d.clear() 
   CALL g_xmdl4_d.clear() 
   CALL g_xmdl5_d.clear() 
   CALL g_xmdl6_d.clear() 
   CALL g_xmdl7_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdk000,xmdksite,xmdkdocdt,xmdk001,xmdkdocno,xmdk005,xmdk006,xmdk002, 
          xmdk003,xmdk004,xmdkstus,xmdk007,xmdk200,xmdk201,xmdk207,xmdk030,xmdk009,xmdk021,xmdk021_desc, 
          xmdk021_address,xmdk205,xmdk206,xmdk034,xmdk039,xmdk040,xmdk054,xmdk032,xmdk028,xmdk029,xmdk008, 
          xmdk202,xmdk015,xmdk015_desc,xmdk037,xmdk214,xmdk010,xmdk011,xmdk016,xmdk017,xmdk012,xmdk013, 
          xmdk012_desc,xmdk014,xmda026,xmda026_desc,xmda026_address,xmdk213,xmdk031,xmdk033,xmdk020, 
          xmdk025,xmdk026,xmdk027,xmdk038,xmdk022,xmdk023,xmdk024,xmdk018,xmdk019,xmdk035,xmdk036,xmdk083, 
          xmdk203,xmdk204,xmdkunit,xmdkownid,xmdkowndp,xmdkcrtid,xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt, 
          xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<xmdkcrtdt>>----
         AFTER FIELD xmdkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdkmoddt>>----
         AFTER FIELD xmdkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkcnfdt>>----
         AFTER FIELD xmdkcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdkpstdt>>----
         AFTER FIELD xmdkpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000
            {<point name="construct.b.xmdk000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000
            {<point name="construct.a.xmdk000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000
            {<point name="construct.c.xmdk000" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdksite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite
            {<point name="construct.c.xmdksite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite
            {<point name="construct.b.xmdksite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite
            {<point name="construct.a.xmdksite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt
            {<point name="construct.b.xmdkdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt
            {<point name="construct.a.xmdkdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt
            {<point name="construct.c.xmdkdocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001
            {<point name="construct.b.xmdk001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001
            {<point name="construct.a.xmdk001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001
            {<point name="construct.c.xmdk001" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno
            {<point name="construct.c.xmdkdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno
            {<point name="construct.b.xmdkdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno
            {<point name="construct.a.xmdkdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005
            {<point name="construct.c.xmdk005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005
            {<point name="construct.b.xmdk005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005
            {<point name="construct.a.xmdk005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006
            {<point name="construct.c.xmdk006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006
            {<point name="construct.b.xmdk006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006
            {<point name="construct.a.xmdk006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk002
            #add-point:BEFORE FIELD xmdk002
            {<point name="construct.b.xmdk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk002
            
            #add-point:AFTER FIELD xmdk002
            {<point name="construct.a.xmdk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk002
            #add-point:ON ACTION controlp INFIELD xmdk002
            {<point name="construct.c.xmdk002" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003
            {<point name="construct.c.xmdk003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003
            {<point name="construct.b.xmdk003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003
            {<point name="construct.a.xmdk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004
            {<point name="construct.c.xmdk004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004
            {<point name="construct.b.xmdk004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004
            {<point name="construct.a.xmdk004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus
            {<point name="construct.b.xmdkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus
            {<point name="construct.a.xmdkstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus
            {<point name="construct.c.xmdkstus" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007
            {<point name="construct.c.xmdk007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007
            {<point name="construct.b.xmdk007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007
            {<point name="construct.a.xmdk007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk200
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk200
            #add-point:ON ACTION controlp INFIELD xmdk200
            {<point name="construct.c.xmdk200" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk200
            #add-point:BEFORE FIELD xmdk200
            {<point name="construct.b.xmdk200" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk200
            
            #add-point:AFTER FIELD xmdk200
            {<point name="construct.a.xmdk200" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk201
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk201
            #add-point:ON ACTION controlp INFIELD xmdk201
            {<point name="construct.c.xmdk201" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk201
            #add-point:BEFORE FIELD xmdk201
            {<point name="construct.b.xmdk201" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk201
            
            #add-point:AFTER FIELD xmdk201
            {<point name="construct.a.xmdk201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk207
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk207
            #add-point:ON ACTION controlp INFIELD xmdk207
            {<point name="construct.c.xmdk207" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk207
            #add-point:BEFORE FIELD xmdk207
            {<point name="construct.b.xmdk207" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk207
            
            #add-point:AFTER FIELD xmdk207
            {<point name="construct.a.xmdk207" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030
            {<point name="construct.c.xmdk030" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030
            {<point name="construct.b.xmdk030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030
            {<point name="construct.a.xmdk030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009
            {<point name="construct.c.xmdk009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009
            {<point name="construct.b.xmdk009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009
            {<point name="construct.a.xmdk009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk021
            #add-point:ON ACTION controlp INFIELD xmdk021
            {<point name="construct.c.xmdk021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk021
            #add-point:BEFORE FIELD xmdk021
            {<point name="construct.b.xmdk021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk021
            
            #add-point:AFTER FIELD xmdk021
            {<point name="construct.a.xmdk021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk021_desc
            #add-point:BEFORE FIELD xmdk021_desc
            {<point name="construct.b.xmdk021_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk021_desc
            
            #add-point:AFTER FIELD xmdk021_desc
            {<point name="construct.a.xmdk021_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk021_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk021_desc
            #add-point:ON ACTION controlp INFIELD xmdk021_desc
            {<point name="construct.c.xmdk021_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk021_address
            #add-point:BEFORE FIELD xmdk021_address
            {<point name="construct.b.xmdk021_address" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk021_address
            
            #add-point:AFTER FIELD xmdk021_address
            {<point name="construct.a.xmdk021_address" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk021_address
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk021_address
            #add-point:ON ACTION controlp INFIELD xmdk021_address
            {<point name="construct.c.xmdk021_address" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk205
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk205
            #add-point:ON ACTION controlp INFIELD xmdk205
            {<point name="construct.c.xmdk205" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk205
            #add-point:BEFORE FIELD xmdk205
            {<point name="construct.b.xmdk205" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk205
            
            #add-point:AFTER FIELD xmdk205
            {<point name="construct.a.xmdk205" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk206
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk206
            #add-point:ON ACTION controlp INFIELD xmdk206
            {<point name="construct.c.xmdk206" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk206
            #add-point:BEFORE FIELD xmdk206
            {<point name="construct.b.xmdk206" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk206
            
            #add-point:AFTER FIELD xmdk206
            {<point name="construct.a.xmdk206" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk034
            #add-point:ON ACTION controlp INFIELD xmdk034
            {<point name="construct.c.xmdk034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk034
            #add-point:BEFORE FIELD xmdk034
            {<point name="construct.b.xmdk034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk034
            
            #add-point:AFTER FIELD xmdk034
            {<point name="construct.a.xmdk034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk039
            #add-point:ON ACTION controlp INFIELD xmdk039
            {<point name="construct.c.xmdk039" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk039
            #add-point:BEFORE FIELD xmdk039
            {<point name="construct.b.xmdk039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk039
            
            #add-point:AFTER FIELD xmdk039
            {<point name="construct.a.xmdk039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk040
            #add-point:ON ACTION controlp INFIELD xmdk040
            {<point name="construct.c.xmdk040" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk040
            #add-point:BEFORE FIELD xmdk040
            {<point name="construct.b.xmdk040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk040
            
            #add-point:AFTER FIELD xmdk040
            {<point name="construct.a.xmdk040" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054
            {<point name="construct.b.xmdk054" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054
            {<point name="construct.a.xmdk054" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054
            {<point name="construct.c.xmdk054" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk032
            #add-point:BEFORE FIELD xmdk032
            {<point name="construct.b.xmdk032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk032
            
            #add-point:AFTER FIELD xmdk032
            {<point name="construct.a.xmdk032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk032
            #add-point:ON ACTION controlp INFIELD xmdk032
            {<point name="construct.c.xmdk032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk028
            #add-point:BEFORE FIELD xmdk028
            {<point name="construct.b.xmdk028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk028
            
            #add-point:AFTER FIELD xmdk028
            {<point name="construct.a.xmdk028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk028
            #add-point:ON ACTION controlp INFIELD xmdk028
            {<point name="construct.c.xmdk028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk029
            #add-point:BEFORE FIELD xmdk029
            {<point name="construct.b.xmdk029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk029
            
            #add-point:AFTER FIELD xmdk029
            {<point name="construct.a.xmdk029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk029
            #add-point:ON ACTION controlp INFIELD xmdk029
            {<point name="construct.c.xmdk029" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008
            {<point name="construct.c.xmdk008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008
            {<point name="construct.b.xmdk008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008
            {<point name="construct.a.xmdk008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk202
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202
            {<point name="construct.c.xmdk202" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202
            {<point name="construct.b.xmdk202" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202
            {<point name="construct.a.xmdk202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015
            {<point name="construct.c.xmdk015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015
            {<point name="construct.b.xmdk015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015
            {<point name="construct.a.xmdk015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk015_desc
            #add-point:BEFORE FIELD xmdk015_desc
            {<point name="construct.b.xmdk015_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk015_desc
            
            #add-point:AFTER FIELD xmdk015_desc
            {<point name="construct.a.xmdk015_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk015_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk015_desc
            #add-point:ON ACTION controlp INFIELD xmdk015_desc
            {<point name="construct.c.xmdk015_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk037
            #add-point:BEFORE FIELD xmdk037
            {<point name="construct.b.xmdk037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk037
            
            #add-point:AFTER FIELD xmdk037
            {<point name="construct.a.xmdk037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk037
            #add-point:ON ACTION controlp INFIELD xmdk037
            {<point name="construct.c.xmdk037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk214
            #add-point:BEFORE FIELD xmdk214
            {<point name="construct.b.xmdk214" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk214
            
            #add-point:AFTER FIELD xmdk214
            {<point name="construct.a.xmdk214" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk214
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk214
            #add-point:ON ACTION controlp INFIELD xmdk214
            {<point name="construct.c.xmdk214" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010
            {<point name="construct.c.xmdk010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010
            {<point name="construct.b.xmdk010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010
            {<point name="construct.a.xmdk010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011
            {<point name="construct.c.xmdk011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011
            {<point name="construct.b.xmdk011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011
            {<point name="construct.a.xmdk011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016
            {<point name="construct.c.xmdk016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016
            {<point name="construct.b.xmdk016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016
            {<point name="construct.a.xmdk016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017
            {<point name="construct.b.xmdk017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk017
            
            #add-point:AFTER FIELD xmdk017
            {<point name="construct.a.xmdk017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017
            {<point name="construct.c.xmdk017" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012
            {<point name="construct.c.xmdk012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012
            {<point name="construct.b.xmdk012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012
            {<point name="construct.a.xmdk012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013
            {<point name="construct.b.xmdk013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk013
            
            #add-point:AFTER FIELD xmdk013
            {<point name="construct.a.xmdk013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013
            {<point name="construct.c.xmdk013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk012_desc
            #add-point:BEFORE FIELD xmdk012_desc
            {<point name="construct.b.xmdk012_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk012_desc
            
            #add-point:AFTER FIELD xmdk012_desc
            {<point name="construct.a.xmdk012_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk012_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk012_desc
            #add-point:ON ACTION controlp INFIELD xmdk012_desc
            {<point name="construct.c.xmdk012_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014
            {<point name="construct.b.xmdk014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014
            {<point name="construct.a.xmdk014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014
            {<point name="construct.c.xmdk014" />}
            #END add-point
 
         #Ctrlp:construct.c.xmda026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026
            {<point name="construct.c.xmda026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026
            {<point name="construct.b.xmda026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026
            {<point name="construct.a.xmda026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026_desc
            #add-point:BEFORE FIELD xmda026_desc
            {<point name="construct.b.xmda026_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026_desc
            
            #add-point:AFTER FIELD xmda026_desc
            {<point name="construct.a.xmda026_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda026_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026_desc
            #add-point:ON ACTION controlp INFIELD xmda026_desc
            {<point name="construct.c.xmda026_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026_address
            #add-point:BEFORE FIELD xmda026_address
            {<point name="construct.b.xmda026_address" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026_address
            
            #add-point:AFTER FIELD xmda026_address
            {<point name="construct.a.xmda026_address" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmda026_address
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026_address
            #add-point:ON ACTION controlp INFIELD xmda026_address
            {<point name="construct.c.xmda026_address" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk213
            #add-point:BEFORE FIELD xmdk213
            {<point name="construct.b.xmdk213" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk213
            
            #add-point:AFTER FIELD xmdk213
            {<point name="construct.a.xmdk213" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk213
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk213
            #add-point:ON ACTION controlp INFIELD xmdk213
            {<point name="construct.c.xmdk213" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031
            {<point name="construct.c.xmdk031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031
            {<point name="construct.b.xmdk031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031
            {<point name="construct.a.xmdk031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033
            {<point name="construct.c.xmdk033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033
            {<point name="construct.b.xmdk033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033
            {<point name="construct.a.xmdk033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk020
            #add-point:ON ACTION controlp INFIELD xmdk020
            {<point name="construct.c.xmdk020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk020
            #add-point:BEFORE FIELD xmdk020
            {<point name="construct.b.xmdk020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk020
            
            #add-point:AFTER FIELD xmdk020
            {<point name="construct.a.xmdk020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk025
            #add-point:BEFORE FIELD xmdk025
            {<point name="construct.b.xmdk025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk025
            
            #add-point:AFTER FIELD xmdk025
            {<point name="construct.a.xmdk025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk025
            #add-point:ON ACTION controlp INFIELD xmdk025
            {<point name="construct.c.xmdk025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk026
            #add-point:BEFORE FIELD xmdk026
            {<point name="construct.b.xmdk026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk026
            
            #add-point:AFTER FIELD xmdk026
            {<point name="construct.a.xmdk026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk026
            #add-point:ON ACTION controlp INFIELD xmdk026
            {<point name="construct.c.xmdk026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk027
            #add-point:BEFORE FIELD xmdk027
            {<point name="construct.b.xmdk027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk027
            
            #add-point:AFTER FIELD xmdk027
            {<point name="construct.a.xmdk027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk027
            #add-point:ON ACTION controlp INFIELD xmdk027
            {<point name="construct.c.xmdk027" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdk038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk038
            #add-point:ON ACTION controlp INFIELD xmdk038
            {<point name="construct.c.xmdk038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk038
            #add-point:BEFORE FIELD xmdk038
            {<point name="construct.b.xmdk038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk038
            
            #add-point:AFTER FIELD xmdk038
            {<point name="construct.a.xmdk038" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk022
            #add-point:ON ACTION controlp INFIELD xmdk022
            {<point name="construct.c.xmdk022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk022
            #add-point:BEFORE FIELD xmdk022
            {<point name="construct.b.xmdk022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk022
            
            #add-point:AFTER FIELD xmdk022
            {<point name="construct.a.xmdk022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk023
            #add-point:ON ACTION controlp INFIELD xmdk023
            {<point name="construct.c.xmdk023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk023
            #add-point:BEFORE FIELD xmdk023
            {<point name="construct.b.xmdk023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk023
            
            #add-point:AFTER FIELD xmdk023
            {<point name="construct.a.xmdk023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk024
            #add-point:ON ACTION controlp INFIELD xmdk024
            {<point name="construct.c.xmdk024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk024
            #add-point:BEFORE FIELD xmdk024
            {<point name="construct.b.xmdk024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk024
            
            #add-point:AFTER FIELD xmdk024
            {<point name="construct.a.xmdk024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018
            {<point name="construct.c.xmdk018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018
            {<point name="construct.b.xmdk018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018
            {<point name="construct.a.xmdk018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk019
            #add-point:ON ACTION controlp INFIELD xmdk019
            {<point name="construct.c.xmdk019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk019
            #add-point:BEFORE FIELD xmdk019
            {<point name="construct.b.xmdk019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk019
            
            #add-point:AFTER FIELD xmdk019
            {<point name="construct.a.xmdk019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035
            {<point name="construct.b.xmdk035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035
            {<point name="construct.a.xmdk035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035
            {<point name="construct.c.xmdk035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036
            {<point name="construct.b.xmdk036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036
            {<point name="construct.a.xmdk036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036
            {<point name="construct.c.xmdk036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk083
            #add-point:BEFORE FIELD xmdk083
            {<point name="construct.b.xmdk083" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk083
            
            #add-point:AFTER FIELD xmdk083
            {<point name="construct.a.xmdk083" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk083
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk083
            #add-point:ON ACTION controlp INFIELD xmdk083
            {<point name="construct.c.xmdk083" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk203
            #add-point:BEFORE FIELD xmdk203
            {<point name="construct.b.xmdk203" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk203
            
            #add-point:AFTER FIELD xmdk203
            {<point name="construct.a.xmdk203" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk203
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk203
            #add-point:ON ACTION controlp INFIELD xmdk203
            {<point name="construct.c.xmdk203" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk204
            #add-point:BEFORE FIELD xmdk204
            {<point name="construct.b.xmdk204" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk204
            
            #add-point:AFTER FIELD xmdk204
            {<point name="construct.a.xmdk204" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdk204
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk204
            #add-point:ON ACTION controlp INFIELD xmdk204
            {<point name="construct.c.xmdk204" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkunit
            #add-point:BEFORE FIELD xmdkunit
            {<point name="construct.b.xmdkunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkunit
            
            #add-point:AFTER FIELD xmdkunit
            {<point name="construct.a.xmdkunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkunit
            #add-point:ON ACTION controlp INFIELD xmdkunit
            {<point name="construct.c.xmdkunit" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdkownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkownid
            #add-point:ON ACTION controlp INFIELD xmdkownid
            {<point name="construct.c.xmdkownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkownid
            #add-point:BEFORE FIELD xmdkownid
            {<point name="construct.b.xmdkownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkownid
            
            #add-point:AFTER FIELD xmdkownid
            {<point name="construct.a.xmdkownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkowndp
            #add-point:ON ACTION controlp INFIELD xmdkowndp
            {<point name="construct.c.xmdkowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkowndp
            #add-point:BEFORE FIELD xmdkowndp
            {<point name="construct.b.xmdkowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkowndp
            
            #add-point:AFTER FIELD xmdkowndp
            {<point name="construct.a.xmdkowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkcrtid
            #add-point:ON ACTION controlp INFIELD xmdkcrtid
            {<point name="construct.c.xmdkcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkcrtid
            #add-point:BEFORE FIELD xmdkcrtid
            {<point name="construct.b.xmdkcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkcrtid
            
            #add-point:AFTER FIELD xmdkcrtid
            {<point name="construct.a.xmdkcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xmdkcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkcrtdp
            #add-point:ON ACTION controlp INFIELD xmdkcrtdp
            {<point name="construct.c.xmdkcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkcrtdp
            #add-point:BEFORE FIELD xmdkcrtdp
            {<point name="construct.b.xmdkcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkcrtdp
            
            #add-point:AFTER FIELD xmdkcrtdp
            {<point name="construct.a.xmdkcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkcrtdt
            #add-point:BEFORE FIELD xmdkcrtdt
            {<point name="construct.b.xmdkcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdkmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkmodid
            #add-point:ON ACTION controlp INFIELD xmdkmodid
            {<point name="construct.c.xmdkmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkmodid
            #add-point:BEFORE FIELD xmdkmodid
            {<point name="construct.b.xmdkmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkmodid
            
            #add-point:AFTER FIELD xmdkmodid
            {<point name="construct.a.xmdkmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkmoddt
            #add-point:BEFORE FIELD xmdkmoddt
            {<point name="construct.b.xmdkmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdkcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkcnfid
            #add-point:ON ACTION controlp INFIELD xmdkcnfid
            {<point name="construct.c.xmdkcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkcnfid
            #add-point:BEFORE FIELD xmdkcnfid
            {<point name="construct.b.xmdkcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkcnfid
            
            #add-point:AFTER FIELD xmdkcnfid
            {<point name="construct.a.xmdkcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkcnfdt
            #add-point:BEFORE FIELD xmdkcnfdt
            {<point name="construct.b.xmdkcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.xmdkpstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkpstid
            #add-point:ON ACTION controlp INFIELD xmdkpstid
            {<point name="construct.c.xmdkpstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkpstid
            #add-point:BEFORE FIELD xmdkpstid
            {<point name="construct.b.xmdkpstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkpstid
            
            #add-point:AFTER FIELD xmdkpstid
            {<point name="construct.a.xmdkpstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkpstdt
            #add-point:BEFORE FIELD xmdkpstdt
            {<point name="construct.b.xmdkpstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
          xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019,xmdl020,xmdl013,xmdl207, 
          xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223,xmdl222,xmdl051,xmdl035,xmdl036, 
          xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022,xmdl023,xmdl034,xmdl041,xmdl088,xmdlseq_1, 
          xmdl0071,xmdl0081,xmdl0081_desc,xmdl0081_desc1,xmdl0091,xmdl2041,xmdl2051,xmdl0171,xmdl0181, 
          xmdl0211,xmdl0221,xmdl208,xmdl209,xmdl210,xmdl025,xmdl025_desc,xmdl026,xmdl211,xmdl027,xmdl029, 
          xmdl028,xmdl087,xmdl024,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdlseq_4,xmdl0074,xmdl2264, 
          xmdl0084,xmdl0094,xmdl212,xmdl200,xmdl201,xmdl202,xmdl203,xmdl030,xmdl031,xmdl032,xmdl213, 
          xmdl214,xmdlorga,xmdl215,xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit
           FROM s_detail1[1].xmdlsite,s_detail1[1].xmdlseq,s_detail1[1].xmdl001,s_detail1[1].xmdl002, 
               s_detail1[1].xmdl003,s_detail1[1].xmdl004,s_detail1[1].xmdl005,s_detail1[1].xmdl006,s_detail1[1].xmdl007, 
               s_detail1[1].xmdl226,s_detail1[1].xmdl008,s_detail1[1].xmdl009,s_detail1[1].xmdl033,s_detail1[1].xmdl204, 
               s_detail1[1].xmdl205,s_detail1[1].xmdl017,s_detail1[1].xmdl018,s_detail1[1].xmdl019,s_detail1[1].xmdl020, 
               s_detail1[1].xmdl013,s_detail1[1].xmdl207,s_detail1[1].xmdl014,s_detail1[1].xmdl015,s_detail1[1].xmdl016, 
               s_detail1[1].xmdl052,s_detail1[1].xmdl050,s_detail1[1].xmdl225,s_detail1[1].xmdl224,s_detail1[1].xmdl223, 
               s_detail1[1].xmdl222,s_detail1[1].xmdl051,s_detail1[1].xmdl035,s_detail1[1].xmdl036,s_detail1[1].xmdl037, 
               s_detail1[1].xmdl220,s_detail1[1].xmdl010,s_detail1[1].xmdl011,s_detail1[1].xmdl012,s_detail1[1].xmdl021, 
               s_detail1[1].xmdl022,s_detail1[1].xmdl023,s_detail1[1].xmdl034,s_detail1[1].xmdl041,s_detail1[1].xmdl088, 
               s_detail2[1].xmdlseq_1,s_detail2[1].xmdl0071,s_detail2[1].xmdl0081,s_detail2[1].xmdl0081_desc, 
               s_detail2[1].xmdl0081_desc1,s_detail2[1].xmdl0091,s_detail2[1].xmdl2041,s_detail2[1].xmdl2051, 
               s_detail2[1].xmdl0171,s_detail2[1].xmdl0181,s_detail2[1].xmdl0211,s_detail2[1].xmdl0221, 
               s_detail2[1].xmdl208,s_detail2[1].xmdl209,s_detail2[1].xmdl210,s_detail2[1].xmdl025,s_detail2[1].xmdl025_desc, 
               s_detail2[1].xmdl026,s_detail2[1].xmdl211,s_detail2[1].xmdl027,s_detail2[1].xmdl029,s_detail2[1].xmdl028, 
               s_detail2[1].xmdl087,s_detail2[1].xmdl024,s_detail2[1].xmdl042,s_detail2[1].xmdl043,s_detail2[1].xmdl044, 
               s_detail2[1].xmdl045,s_detail2[1].xmdl046,s_detail6[1].xmdlseq_4,s_detail6[1].xmdl0074, 
               s_detail6[1].xmdl2264,s_detail6[1].xmdl0084,s_detail6[1].xmdl0094,s_detail6[1].xmdl212, 
               s_detail6[1].xmdl200,s_detail6[1].xmdl201,s_detail6[1].xmdl202,s_detail6[1].xmdl203,s_detail6[1].xmdl030, 
               s_detail6[1].xmdl031,s_detail6[1].xmdl032,s_detail6[1].xmdl213,s_detail6[1].xmdl214,s_detail6[1].xmdlorga, 
               s_detail6[1].xmdl215,s_detail6[1].xmdl216,s_detail6[1].xmdl217,s_detail6[1].xmdl218,s_detail6[1].xmdl219, 
               s_detail6[1].xmdlunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite
            {<point name="construct.b.page1.xmdlsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite
            {<point name="construct.a.page1.xmdlsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdlsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite
            {<point name="construct.c.page1.xmdlsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq
            {<point name="construct.b.page1.xmdlseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlseq
            
            #add-point:AFTER FIELD xmdlseq
            {<point name="construct.a.page1.xmdlseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdlseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq
            {<point name="construct.c.page1.xmdlseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001
            {<point name="construct.c.page1.xmdl001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001
            {<point name="construct.b.page1.xmdl001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001
            {<point name="construct.a.page1.xmdl001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002
            {<point name="construct.b.page1.xmdl002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002
            {<point name="construct.a.page1.xmdl002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002
            {<point name="construct.c.page1.xmdl002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003
            {<point name="construct.c.page1.xmdl003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003
            {<point name="construct.b.page1.xmdl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003
            {<point name="construct.a.page1.xmdl003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004
            {<point name="construct.b.page1.xmdl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl004
            
            #add-point:AFTER FIELD xmdl004
            {<point name="construct.a.page1.xmdl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004
            {<point name="construct.c.page1.xmdl004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005
            {<point name="construct.b.page1.xmdl005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl005
            
            #add-point:AFTER FIELD xmdl005
            {<point name="construct.a.page1.xmdl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005
            {<point name="construct.c.page1.xmdl005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006
            {<point name="construct.b.page1.xmdl006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl006
            
            #add-point:AFTER FIELD xmdl006
            {<point name="construct.a.page1.xmdl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006
            {<point name="construct.c.page1.xmdl006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007
            {<point name="construct.b.page1.xmdl007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007
            {<point name="construct.a.page1.xmdl007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007
            {<point name="construct.c.page1.xmdl007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl226
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl226
            #add-point:ON ACTION controlp INFIELD xmdl226
            {<point name="construct.c.page1.xmdl226" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl226
            #add-point:BEFORE FIELD xmdl226
            {<point name="construct.b.page1.xmdl226" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl226
            
            #add-point:AFTER FIELD xmdl226
            {<point name="construct.a.page1.xmdl226" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008
            {<point name="construct.c.page1.xmdl008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008
            {<point name="construct.b.page1.xmdl008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008
            {<point name="construct.a.page1.xmdl008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009
            {<point name="construct.b.page1.xmdl009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009
            {<point name="construct.a.page1.xmdl009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009
            {<point name="construct.c.page1.xmdl009" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033
            {<point name="construct.c.page1.xmdl033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033
            {<point name="construct.b.page1.xmdl033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033
            {<point name="construct.a.page1.xmdl033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl204
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl204
            #add-point:ON ACTION controlp INFIELD xmdl204
            {<point name="construct.c.page1.xmdl204" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl204
            #add-point:BEFORE FIELD xmdl204
            {<point name="construct.b.page1.xmdl204" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl204
            
            #add-point:AFTER FIELD xmdl204
            {<point name="construct.a.page1.xmdl204" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl205
            #add-point:BEFORE FIELD xmdl205
            {<point name="construct.b.page1.xmdl205" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl205
            
            #add-point:AFTER FIELD xmdl205
            {<point name="construct.a.page1.xmdl205" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl205
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl205
            #add-point:ON ACTION controlp INFIELD xmdl205
            {<point name="construct.c.page1.xmdl205" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017
            {<point name="construct.c.page1.xmdl017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017
            {<point name="construct.b.page1.xmdl017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017
            {<point name="construct.a.page1.xmdl017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018
            {<point name="construct.b.page1.xmdl018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl018
            
            #add-point:AFTER FIELD xmdl018
            {<point name="construct.a.page1.xmdl018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018
            {<point name="construct.c.page1.xmdl018" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019
            {<point name="construct.c.page1.xmdl019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019
            {<point name="construct.b.page1.xmdl019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019
            {<point name="construct.a.page1.xmdl019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020
            {<point name="construct.b.page1.xmdl020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl020
            
            #add-point:AFTER FIELD xmdl020
            {<point name="construct.a.page1.xmdl020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020
            {<point name="construct.c.page1.xmdl020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013
            {<point name="construct.b.page1.xmdl013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013
            {<point name="construct.a.page1.xmdl013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013
            {<point name="construct.c.page1.xmdl013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl207
            #add-point:BEFORE FIELD xmdl207
            {<point name="construct.b.page1.xmdl207" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl207
            
            #add-point:AFTER FIELD xmdl207
            {<point name="construct.a.page1.xmdl207" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl207
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl207
            #add-point:ON ACTION controlp INFIELD xmdl207
            {<point name="construct.c.page1.xmdl207" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014
            {<point name="construct.c.page1.xmdl014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014
            {<point name="construct.b.page1.xmdl014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014
            {<point name="construct.a.page1.xmdl014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015
            {<point name="construct.c.page1.xmdl015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015
            {<point name="construct.b.page1.xmdl015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015
            {<point name="construct.a.page1.xmdl015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016
            {<point name="construct.c.page1.xmdl016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016
            {<point name="construct.b.page1.xmdl016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016
            {<point name="construct.a.page1.xmdl016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052
            {<point name="construct.c.page1.xmdl052" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052
            {<point name="construct.b.page1.xmdl052" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052
            {<point name="construct.a.page1.xmdl052" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050
            {<point name="construct.c.page1.xmdl050" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050
            {<point name="construct.b.page1.xmdl050" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050
            {<point name="construct.a.page1.xmdl050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl225
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl225
            #add-point:ON ACTION controlp INFIELD xmdl225
            {<point name="construct.c.page1.xmdl225" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl225
            #add-point:BEFORE FIELD xmdl225
            {<point name="construct.b.page1.xmdl225" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl225
            
            #add-point:AFTER FIELD xmdl225
            {<point name="construct.a.page1.xmdl225" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl224
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl224
            #add-point:ON ACTION controlp INFIELD xmdl224
            {<point name="construct.c.page1.xmdl224" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl224
            #add-point:BEFORE FIELD xmdl224
            {<point name="construct.b.page1.xmdl224" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl224
            
            #add-point:AFTER FIELD xmdl224
            {<point name="construct.a.page1.xmdl224" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl223
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl223
            #add-point:ON ACTION controlp INFIELD xmdl223
            {<point name="construct.c.page1.xmdl223" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl223
            #add-point:BEFORE FIELD xmdl223
            {<point name="construct.b.page1.xmdl223" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl223
            
            #add-point:AFTER FIELD xmdl223
            {<point name="construct.a.page1.xmdl223" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl222
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl222
            #add-point:ON ACTION controlp INFIELD xmdl222
            {<point name="construct.c.page1.xmdl222" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl222
            #add-point:BEFORE FIELD xmdl222
            {<point name="construct.b.page1.xmdl222" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl222
            
            #add-point:AFTER FIELD xmdl222
            {<point name="construct.a.page1.xmdl222" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051
            {<point name="construct.b.page1.xmdl051" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051
            {<point name="construct.a.page1.xmdl051" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl051
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051
            {<point name="construct.c.page1.xmdl051" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl035
            #add-point:BEFORE FIELD xmdl035
            {<point name="construct.b.page1.xmdl035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl035
            
            #add-point:AFTER FIELD xmdl035
            {<point name="construct.a.page1.xmdl035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl035
            #add-point:ON ACTION controlp INFIELD xmdl035
            {<point name="construct.c.page1.xmdl035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl036
            #add-point:BEFORE FIELD xmdl036
            {<point name="construct.b.page1.xmdl036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl036
            
            #add-point:AFTER FIELD xmdl036
            {<point name="construct.a.page1.xmdl036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl036
            #add-point:ON ACTION controlp INFIELD xmdl036
            {<point name="construct.c.page1.xmdl036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl037
            #add-point:BEFORE FIELD xmdl037
            {<point name="construct.b.page1.xmdl037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl037
            
            #add-point:AFTER FIELD xmdl037
            {<point name="construct.a.page1.xmdl037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl037
            #add-point:ON ACTION controlp INFIELD xmdl037
            {<point name="construct.c.page1.xmdl037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl220
            #add-point:BEFORE FIELD xmdl220
            {<point name="construct.b.page1.xmdl220" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl220
            
            #add-point:AFTER FIELD xmdl220
            {<point name="construct.a.page1.xmdl220" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl220
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl220
            #add-point:ON ACTION controlp INFIELD xmdl220
            {<point name="construct.c.page1.xmdl220" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010
            {<point name="construct.b.page1.xmdl010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010
            {<point name="construct.a.page1.xmdl010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010
            {<point name="construct.c.page1.xmdl010" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011
            {<point name="construct.c.page1.xmdl011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011
            {<point name="construct.b.page1.xmdl011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011
            {<point name="construct.a.page1.xmdl011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012
            {<point name="construct.b.page1.xmdl012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012
            {<point name="construct.a.page1.xmdl012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012
            {<point name="construct.c.page1.xmdl012" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xmdl021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021
            {<point name="construct.c.page1.xmdl021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021
            {<point name="construct.b.page1.xmdl021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021
            {<point name="construct.a.page1.xmdl021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022
            {<point name="construct.b.page1.xmdl022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl022
            
            #add-point:AFTER FIELD xmdl022
            {<point name="construct.a.page1.xmdl022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022
            {<point name="construct.c.page1.xmdl022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023
            {<point name="construct.b.page1.xmdl023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023
            {<point name="construct.a.page1.xmdl023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023
            {<point name="construct.c.page1.xmdl023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl034
            #add-point:BEFORE FIELD xmdl034
            {<point name="construct.b.page1.xmdl034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl034
            
            #add-point:AFTER FIELD xmdl034
            {<point name="construct.a.page1.xmdl034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl034
            #add-point:ON ACTION controlp INFIELD xmdl034
            {<point name="construct.c.page1.xmdl034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041
            {<point name="construct.b.page1.xmdl041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041
            {<point name="construct.a.page1.xmdl041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041
            {<point name="construct.c.page1.xmdl041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088
            {<point name="construct.b.page1.xmdl088" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088
            {<point name="construct.a.page1.xmdl088" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xmdl088
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088
            {<point name="construct.c.page1.xmdl088" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlseq_1
            #add-point:BEFORE FIELD xmdlseq_1
            {<point name="construct.b.page2.xmdlseq_1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlseq_1
            
            #add-point:AFTER FIELD xmdlseq_1
            {<point name="construct.a.page2.xmdlseq_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdlseq_1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlseq_1
            #add-point:ON ACTION controlp INFIELD xmdlseq_1
            {<point name="construct.c.page2.xmdlseq_1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0071
            #add-point:BEFORE FIELD xmdl0071
            {<point name="construct.b.page2.xmdl0071" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0071
            
            #add-point:AFTER FIELD xmdl0071
            {<point name="construct.a.page2.xmdl0071" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0071
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0071
            #add-point:ON ACTION controlp INFIELD xmdl0071
            {<point name="construct.c.page2.xmdl0071" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0081
            #add-point:BEFORE FIELD xmdl0081
            {<point name="construct.b.page2.xmdl0081" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0081
            
            #add-point:AFTER FIELD xmdl0081
            {<point name="construct.a.page2.xmdl0081" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0081
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0081
            #add-point:ON ACTION controlp INFIELD xmdl0081
            {<point name="construct.c.page2.xmdl0081" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0081_desc
            #add-point:BEFORE FIELD xmdl0081_desc
            {<point name="construct.b.page2.xmdl0081_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0081_desc
            
            #add-point:AFTER FIELD xmdl0081_desc
            {<point name="construct.a.page2.xmdl0081_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0081_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0081_desc
            #add-point:ON ACTION controlp INFIELD xmdl0081_desc
            {<point name="construct.c.page2.xmdl0081_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0081_desc1
            #add-point:BEFORE FIELD xmdl0081_desc1
            {<point name="construct.b.page2.xmdl0081_desc1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0081_desc1
            
            #add-point:AFTER FIELD xmdl0081_desc1
            {<point name="construct.a.page2.xmdl0081_desc1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0081_desc1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0081_desc1
            #add-point:ON ACTION controlp INFIELD xmdl0081_desc1
            {<point name="construct.c.page2.xmdl0081_desc1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0091
            #add-point:BEFORE FIELD xmdl0091
            {<point name="construct.b.page2.xmdl0091" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0091
            
            #add-point:AFTER FIELD xmdl0091
            {<point name="construct.a.page2.xmdl0091" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0091
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0091
            #add-point:ON ACTION controlp INFIELD xmdl0091
            {<point name="construct.c.page2.xmdl0091" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl2041
            #add-point:BEFORE FIELD xmdl2041
            {<point name="construct.b.page2.xmdl2041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl2041
            
            #add-point:AFTER FIELD xmdl2041
            {<point name="construct.a.page2.xmdl2041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl2041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl2041
            #add-point:ON ACTION controlp INFIELD xmdl2041
            {<point name="construct.c.page2.xmdl2041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl2051
            #add-point:BEFORE FIELD xmdl2051
            {<point name="construct.b.page2.xmdl2051" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl2051
            
            #add-point:AFTER FIELD xmdl2051
            {<point name="construct.a.page2.xmdl2051" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl2051
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl2051
            #add-point:ON ACTION controlp INFIELD xmdl2051
            {<point name="construct.c.page2.xmdl2051" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0171
            #add-point:BEFORE FIELD xmdl0171
            {<point name="construct.b.page2.xmdl0171" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0171
            
            #add-point:AFTER FIELD xmdl0171
            {<point name="construct.a.page2.xmdl0171" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0171
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0171
            #add-point:ON ACTION controlp INFIELD xmdl0171
            {<point name="construct.c.page2.xmdl0171" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0181
            #add-point:BEFORE FIELD xmdl0181
            {<point name="construct.b.page2.xmdl0181" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0181
            
            #add-point:AFTER FIELD xmdl0181
            {<point name="construct.a.page2.xmdl0181" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0181
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0181
            #add-point:ON ACTION controlp INFIELD xmdl0181
            {<point name="construct.c.page2.xmdl0181" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0211
            #add-point:BEFORE FIELD xmdl0211
            {<point name="construct.b.page2.xmdl0211" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0211
            
            #add-point:AFTER FIELD xmdl0211
            {<point name="construct.a.page2.xmdl0211" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0211
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0211
            #add-point:ON ACTION controlp INFIELD xmdl0211
            {<point name="construct.c.page2.xmdl0211" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0221
            #add-point:BEFORE FIELD xmdl0221
            {<point name="construct.b.page2.xmdl0221" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0221
            
            #add-point:AFTER FIELD xmdl0221
            {<point name="construct.a.page2.xmdl0221" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl0221
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0221
            #add-point:ON ACTION controlp INFIELD xmdl0221
            {<point name="construct.c.page2.xmdl0221" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl208
            #add-point:BEFORE FIELD xmdl208
            {<point name="construct.b.page2.xmdl208" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl208
            
            #add-point:AFTER FIELD xmdl208
            {<point name="construct.a.page2.xmdl208" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl208
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl208
            #add-point:ON ACTION controlp INFIELD xmdl208
            {<point name="construct.c.page2.xmdl208" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl209
            #add-point:BEFORE FIELD xmdl209
            {<point name="construct.b.page2.xmdl209" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl209
            
            #add-point:AFTER FIELD xmdl209
            {<point name="construct.a.page2.xmdl209" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl209
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl209
            #add-point:ON ACTION controlp INFIELD xmdl209
            {<point name="construct.c.page2.xmdl209" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl210
            #add-point:BEFORE FIELD xmdl210
            {<point name="construct.b.page2.xmdl210" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl210
            
            #add-point:AFTER FIELD xmdl210
            {<point name="construct.a.page2.xmdl210" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl210
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl210
            #add-point:ON ACTION controlp INFIELD xmdl210
            {<point name="construct.c.page2.xmdl210" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xmdl025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl025
            #add-point:ON ACTION controlp INFIELD xmdl025
            {<point name="construct.c.page2.xmdl025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl025
            #add-point:BEFORE FIELD xmdl025
            {<point name="construct.b.page2.xmdl025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl025
            
            #add-point:AFTER FIELD xmdl025
            {<point name="construct.a.page2.xmdl025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl025_desc
            #add-point:BEFORE FIELD xmdl025_desc
            {<point name="construct.b.page2.xmdl025_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl025_desc
            
            #add-point:AFTER FIELD xmdl025_desc
            {<point name="construct.a.page2.xmdl025_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl025_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl025_desc
            #add-point:ON ACTION controlp INFIELD xmdl025_desc
            {<point name="construct.c.page2.xmdl025_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl026
            #add-point:BEFORE FIELD xmdl026
            {<point name="construct.b.page2.xmdl026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl026
            
            #add-point:AFTER FIELD xmdl026
            {<point name="construct.a.page2.xmdl026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl026
            #add-point:ON ACTION controlp INFIELD xmdl026
            {<point name="construct.c.page2.xmdl026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl211
            #add-point:BEFORE FIELD xmdl211
            {<point name="construct.b.page2.xmdl211" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl211
            
            #add-point:AFTER FIELD xmdl211
            {<point name="construct.a.page2.xmdl211" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl211
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl211
            #add-point:ON ACTION controlp INFIELD xmdl211
            {<point name="construct.c.page2.xmdl211" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl027
            #add-point:BEFORE FIELD xmdl027
            {<point name="construct.b.page2.xmdl027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl027
            
            #add-point:AFTER FIELD xmdl027
            {<point name="construct.a.page2.xmdl027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl027
            #add-point:ON ACTION controlp INFIELD xmdl027
            {<point name="construct.c.page2.xmdl027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl029
            #add-point:BEFORE FIELD xmdl029
            {<point name="construct.b.page2.xmdl029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl029
            
            #add-point:AFTER FIELD xmdl029
            {<point name="construct.a.page2.xmdl029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl029
            #add-point:ON ACTION controlp INFIELD xmdl029
            {<point name="construct.c.page2.xmdl029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl028
            #add-point:BEFORE FIELD xmdl028
            {<point name="construct.b.page2.xmdl028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl028
            
            #add-point:AFTER FIELD xmdl028
            {<point name="construct.a.page2.xmdl028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl028
            #add-point:ON ACTION controlp INFIELD xmdl028
            {<point name="construct.c.page2.xmdl028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl087
            #add-point:BEFORE FIELD xmdl087
            {<point name="construct.b.page2.xmdl087" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl087
            
            #add-point:AFTER FIELD xmdl087
            {<point name="construct.a.page2.xmdl087" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl087
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl087
            #add-point:ON ACTION controlp INFIELD xmdl087
            {<point name="construct.c.page2.xmdl087" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl024
            #add-point:BEFORE FIELD xmdl024
            {<point name="construct.b.page2.xmdl024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl024
            
            #add-point:AFTER FIELD xmdl024
            {<point name="construct.a.page2.xmdl024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl024
            #add-point:ON ACTION controlp INFIELD xmdl024
            {<point name="construct.c.page2.xmdl024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl042
            #add-point:BEFORE FIELD xmdl042
            {<point name="construct.b.page2.xmdl042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl042
            
            #add-point:AFTER FIELD xmdl042
            {<point name="construct.a.page2.xmdl042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl042
            #add-point:ON ACTION controlp INFIELD xmdl042
            {<point name="construct.c.page2.xmdl042" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl043
            #add-point:BEFORE FIELD xmdl043
            {<point name="construct.b.page2.xmdl043" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl043
            
            #add-point:AFTER FIELD xmdl043
            {<point name="construct.a.page2.xmdl043" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl043
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl043
            #add-point:ON ACTION controlp INFIELD xmdl043
            {<point name="construct.c.page2.xmdl043" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl044
            #add-point:BEFORE FIELD xmdl044
            {<point name="construct.b.page2.xmdl044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl044
            
            #add-point:AFTER FIELD xmdl044
            {<point name="construct.a.page2.xmdl044" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl044
            #add-point:ON ACTION controlp INFIELD xmdl044
            {<point name="construct.c.page2.xmdl044" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl045
            #add-point:BEFORE FIELD xmdl045
            {<point name="construct.b.page2.xmdl045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl045
            
            #add-point:AFTER FIELD xmdl045
            {<point name="construct.a.page2.xmdl045" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl045
            #add-point:ON ACTION controlp INFIELD xmdl045
            {<point name="construct.c.page2.xmdl045" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl046
            #add-point:BEFORE FIELD xmdl046
            {<point name="construct.b.page2.xmdl046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl046
            
            #add-point:AFTER FIELD xmdl046
            {<point name="construct.a.page2.xmdl046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xmdl046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl046
            #add-point:ON ACTION controlp INFIELD xmdl046
            {<point name="construct.c.page2.xmdl046" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlseq_4
            #add-point:BEFORE FIELD xmdlseq_4
            {<point name="construct.b.page6.xmdlseq_4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlseq_4
            
            #add-point:AFTER FIELD xmdlseq_4
            {<point name="construct.a.page6.xmdlseq_4" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdlseq_4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlseq_4
            #add-point:ON ACTION controlp INFIELD xmdlseq_4
            {<point name="construct.c.page6.xmdlseq_4" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0074
            #add-point:BEFORE FIELD xmdl0074
            {<point name="construct.b.page6.xmdl0074" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0074
            
            #add-point:AFTER FIELD xmdl0074
            {<point name="construct.a.page6.xmdl0074" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl0074
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0074
            #add-point:ON ACTION controlp INFIELD xmdl0074
            {<point name="construct.c.page6.xmdl0074" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmdl2264
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl2264
            #add-point:ON ACTION controlp INFIELD xmdl2264
            {<point name="construct.c.page6.xmdl2264" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl2264
            #add-point:BEFORE FIELD xmdl2264
            {<point name="construct.b.page6.xmdl2264" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl2264
            
            #add-point:AFTER FIELD xmdl2264
            {<point name="construct.a.page6.xmdl2264" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl0084
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0084
            #add-point:ON ACTION controlp INFIELD xmdl0084
            {<point name="construct.c.page6.xmdl0084" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0084
            #add-point:BEFORE FIELD xmdl0084
            {<point name="construct.b.page6.xmdl0084" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0084
            
            #add-point:AFTER FIELD xmdl0084
            {<point name="construct.a.page6.xmdl0084" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0094
            #add-point:BEFORE FIELD xmdl0094
            {<point name="construct.b.page6.xmdl0094" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0094
            
            #add-point:AFTER FIELD xmdl0094
            {<point name="construct.a.page6.xmdl0094" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl0094
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0094
            #add-point:ON ACTION controlp INFIELD xmdl0094
            {<point name="construct.c.page6.xmdl0094" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmdl212
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl212
            #add-point:ON ACTION controlp INFIELD xmdl212
            {<point name="construct.c.page6.xmdl212" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl212
            #add-point:BEFORE FIELD xmdl212
            {<point name="construct.b.page6.xmdl212" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl212
            
            #add-point:AFTER FIELD xmdl212
            {<point name="construct.a.page6.xmdl212" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl200
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl200
            #add-point:ON ACTION controlp INFIELD xmdl200
            {<point name="construct.c.page6.xmdl200" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl200
            #add-point:BEFORE FIELD xmdl200
            {<point name="construct.b.page6.xmdl200" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl200
            
            #add-point:AFTER FIELD xmdl200
            {<point name="construct.a.page6.xmdl200" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl201
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl201
            #add-point:ON ACTION controlp INFIELD xmdl201
            {<point name="construct.c.page6.xmdl201" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl201
            #add-point:BEFORE FIELD xmdl201
            {<point name="construct.b.page6.xmdl201" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl201
            
            #add-point:AFTER FIELD xmdl201
            {<point name="construct.a.page6.xmdl201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl202
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl202
            #add-point:ON ACTION controlp INFIELD xmdl202
            {<point name="construct.c.page6.xmdl202" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl202
            #add-point:BEFORE FIELD xmdl202
            {<point name="construct.b.page6.xmdl202" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl202
            
            #add-point:AFTER FIELD xmdl202
            {<point name="construct.a.page6.xmdl202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl203
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl203
            #add-point:ON ACTION controlp INFIELD xmdl203
            {<point name="construct.c.page6.xmdl203" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl203
            #add-point:BEFORE FIELD xmdl203
            {<point name="construct.b.page6.xmdl203" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl203
            
            #add-point:AFTER FIELD xmdl203
            {<point name="construct.a.page6.xmdl203" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl030
            #add-point:BEFORE FIELD xmdl030
            {<point name="construct.b.page6.xmdl030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl030
            
            #add-point:AFTER FIELD xmdl030
            {<point name="construct.a.page6.xmdl030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl030
            #add-point:ON ACTION controlp INFIELD xmdl030
            {<point name="construct.c.page6.xmdl030" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl031
            #add-point:BEFORE FIELD xmdl031
            {<point name="construct.b.page6.xmdl031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl031
            
            #add-point:AFTER FIELD xmdl031
            {<point name="construct.a.page6.xmdl031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl031
            #add-point:ON ACTION controlp INFIELD xmdl031
            {<point name="construct.c.page6.xmdl031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl032
            #add-point:BEFORE FIELD xmdl032
            {<point name="construct.b.page6.xmdl032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl032
            
            #add-point:AFTER FIELD xmdl032
            {<point name="construct.a.page6.xmdl032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl032
            #add-point:ON ACTION controlp INFIELD xmdl032
            {<point name="construct.c.page6.xmdl032" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmdl213
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl213
            #add-point:ON ACTION controlp INFIELD xmdl213
            {<point name="construct.c.page6.xmdl213" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl213
            #add-point:BEFORE FIELD xmdl213
            {<point name="construct.b.page6.xmdl213" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl213
            
            #add-point:AFTER FIELD xmdl213
            {<point name="construct.a.page6.xmdl213" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl214
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl214
            #add-point:ON ACTION controlp INFIELD xmdl214
            {<point name="construct.c.page6.xmdl214" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl214
            #add-point:BEFORE FIELD xmdl214
            {<point name="construct.b.page6.xmdl214" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl214
            
            #add-point:AFTER FIELD xmdl214
            {<point name="construct.a.page6.xmdl214" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdlorga
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlorga
            #add-point:ON ACTION controlp INFIELD xmdlorga
            {<point name="construct.c.page6.xmdlorga" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlorga
            #add-point:BEFORE FIELD xmdlorga
            {<point name="construct.b.page6.xmdlorga" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlorga
            
            #add-point:AFTER FIELD xmdlorga
            {<point name="construct.a.page6.xmdlorga" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl215
            #add-point:BEFORE FIELD xmdl215
            {<point name="construct.b.page6.xmdl215" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl215
            
            #add-point:AFTER FIELD xmdl215
            {<point name="construct.a.page6.xmdl215" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl215
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl215
            #add-point:ON ACTION controlp INFIELD xmdl215
            {<point name="construct.c.page6.xmdl215" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl216
            #add-point:BEFORE FIELD xmdl216
            {<point name="construct.b.page6.xmdl216" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl216
            
            #add-point:AFTER FIELD xmdl216
            {<point name="construct.a.page6.xmdl216" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl216
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl216
            #add-point:ON ACTION controlp INFIELD xmdl216
            {<point name="construct.c.page6.xmdl216" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.xmdl217
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl217
            #add-point:ON ACTION controlp INFIELD xmdl217
            {<point name="construct.c.page6.xmdl217" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl217
            #add-point:BEFORE FIELD xmdl217
            {<point name="construct.b.page6.xmdl217" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl217
            
            #add-point:AFTER FIELD xmdl217
            {<point name="construct.a.page6.xmdl217" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl218
            #add-point:BEFORE FIELD xmdl218
            {<point name="construct.b.page6.xmdl218" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl218
            
            #add-point:AFTER FIELD xmdl218
            {<point name="construct.a.page6.xmdl218" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl218
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl218
            #add-point:ON ACTION controlp INFIELD xmdl218
            {<point name="construct.c.page6.xmdl218" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl219
            #add-point:BEFORE FIELD xmdl219
            {<point name="construct.b.page6.xmdl219" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl219
            
            #add-point:AFTER FIELD xmdl219
            {<point name="construct.a.page6.xmdl219" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdl219
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl219
            #add-point:ON ACTION controlp INFIELD xmdl219
            {<point name="construct.c.page6.xmdl219" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlunit
            #add-point:BEFORE FIELD xmdlunit
            {<point name="construct.b.page6.xmdlunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlunit
            
            #add-point:AFTER FIELD xmdlunit
            {<point name="construct.a.page6.xmdlunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.xmdlunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlunit
            #add-point:ON ACTION controlp INFIELD xmdlunit
            {<point name="construct.c.page6.xmdlunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006, 
          xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014
           FROM s_detail3[1].xmdmsite,s_detail3[1].xmdmseq,s_detail3[1].xmdmseq1,s_detail3[1].xmdm001, 
               s_detail3[1].xmdm002,s_detail3[1].xmdm003,s_detail3[1].xmdm004,s_detail3[1].xmdm005,s_detail3[1].xmdm006, 
               s_detail3[1].xmdm007,s_detail3[1].xmdm033,s_detail3[1].xmdm008,s_detail3[1].xmdm009,s_detail3[1].xmdm010, 
               s_detail3[1].xmdm011,s_detail3[1].xmdm012,s_detail3[1].xmdm013,s_detail3[1].xmdm014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdmsite
            #add-point:BEFORE FIELD xmdmsite
            {<point name="construct.b.page3.xmdmsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdmsite
            
            #add-point:AFTER FIELD xmdmsite
            {<point name="construct.a.page3.xmdmsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdmsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdmsite
            #add-point:ON ACTION controlp INFIELD xmdmsite
            {<point name="construct.c.page3.xmdmsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdmseq
            #add-point:BEFORE FIELD xmdmseq
            {<point name="construct.b.page3.xmdmseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdmseq
            
            #add-point:AFTER FIELD xmdmseq
            {<point name="construct.a.page3.xmdmseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdmseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdmseq
            #add-point:ON ACTION controlp INFIELD xmdmseq
            {<point name="construct.c.page3.xmdmseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdmseq1
            #add-point:BEFORE FIELD xmdmseq1
            {<point name="construct.b.page3.xmdmseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdmseq1
            
            #add-point:AFTER FIELD xmdmseq1
            {<point name="construct.a.page3.xmdmseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdmseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdmseq1
            #add-point:ON ACTION controlp INFIELD xmdmseq1
            {<point name="construct.c.page3.xmdmseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdm001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm001
            #add-point:ON ACTION controlp INFIELD xmdm001
            {<point name="construct.c.page3.xmdm001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm001
            #add-point:BEFORE FIELD xmdm001
            {<point name="construct.b.page3.xmdm001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm001
            
            #add-point:AFTER FIELD xmdm001
            {<point name="construct.a.page3.xmdm001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm002
            #add-point:ON ACTION controlp INFIELD xmdm002
            {<point name="construct.c.page3.xmdm002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm002
            #add-point:BEFORE FIELD xmdm002
            {<point name="construct.b.page3.xmdm002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm002
            
            #add-point:AFTER FIELD xmdm002
            {<point name="construct.a.page3.xmdm002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm003
            #add-point:BEFORE FIELD xmdm003
            {<point name="construct.b.page3.xmdm003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm003
            
            #add-point:AFTER FIELD xmdm003
            {<point name="construct.a.page3.xmdm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm003
            #add-point:ON ACTION controlp INFIELD xmdm003
            {<point name="construct.c.page3.xmdm003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm004
            #add-point:BEFORE FIELD xmdm004
            {<point name="construct.b.page3.xmdm004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm004
            
            #add-point:AFTER FIELD xmdm004
            {<point name="construct.a.page3.xmdm004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm004
            #add-point:ON ACTION controlp INFIELD xmdm004
            {<point name="construct.c.page3.xmdm004" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdm005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm005
            #add-point:ON ACTION controlp INFIELD xmdm005
            {<point name="construct.c.page3.xmdm005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm005
            #add-point:BEFORE FIELD xmdm005
            {<point name="construct.b.page3.xmdm005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm005
            
            #add-point:AFTER FIELD xmdm005
            {<point name="construct.a.page3.xmdm005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm006
            #add-point:ON ACTION controlp INFIELD xmdm006
            {<point name="construct.c.page3.xmdm006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm006
            #add-point:BEFORE FIELD xmdm006
            {<point name="construct.b.page3.xmdm006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm006
            
            #add-point:AFTER FIELD xmdm006
            {<point name="construct.a.page3.xmdm006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm007
            #add-point:BEFORE FIELD xmdm007
            {<point name="construct.b.page3.xmdm007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm007
            
            #add-point:AFTER FIELD xmdm007
            {<point name="construct.a.page3.xmdm007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm007
            #add-point:ON ACTION controlp INFIELD xmdm007
            {<point name="construct.c.page3.xmdm007" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdm033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm033
            #add-point:ON ACTION controlp INFIELD xmdm033
            {<point name="construct.c.page3.xmdm033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm033
            #add-point:BEFORE FIELD xmdm033
            {<point name="construct.b.page3.xmdm033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm033
            
            #add-point:AFTER FIELD xmdm033
            {<point name="construct.a.page3.xmdm033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm008
            #add-point:ON ACTION controlp INFIELD xmdm008
            {<point name="construct.c.page3.xmdm008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm008
            #add-point:BEFORE FIELD xmdm008
            {<point name="construct.b.page3.xmdm008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm008
            
            #add-point:AFTER FIELD xmdm008
            {<point name="construct.a.page3.xmdm008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm009
            #add-point:BEFORE FIELD xmdm009
            {<point name="construct.b.page3.xmdm009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm009
            
            #add-point:AFTER FIELD xmdm009
            {<point name="construct.a.page3.xmdm009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm009
            #add-point:ON ACTION controlp INFIELD xmdm009
            {<point name="construct.c.page3.xmdm009" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.xmdm010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm010
            #add-point:ON ACTION controlp INFIELD xmdm010
            {<point name="construct.c.page3.xmdm010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm010
            #add-point:BEFORE FIELD xmdm010
            {<point name="construct.b.page3.xmdm010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm010
            
            #add-point:AFTER FIELD xmdm010
            {<point name="construct.a.page3.xmdm010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm011
            #add-point:BEFORE FIELD xmdm011
            {<point name="construct.b.page3.xmdm011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm011
            
            #add-point:AFTER FIELD xmdm011
            {<point name="construct.a.page3.xmdm011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm011
            #add-point:ON ACTION controlp INFIELD xmdm011
            {<point name="construct.c.page3.xmdm011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm012
            #add-point:BEFORE FIELD xmdm012
            {<point name="construct.b.page3.xmdm012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm012
            
            #add-point:AFTER FIELD xmdm012
            {<point name="construct.a.page3.xmdm012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm012
            #add-point:ON ACTION controlp INFIELD xmdm012
            {<point name="construct.c.page3.xmdm012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm013
            #add-point:BEFORE FIELD xmdm013
            {<point name="construct.b.page3.xmdm013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm013
            
            #add-point:AFTER FIELD xmdm013
            {<point name="construct.a.page3.xmdm013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm013
            #add-point:ON ACTION controlp INFIELD xmdm013
            {<point name="construct.c.page3.xmdm013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdm014
            #add-point:BEFORE FIELD xmdm014
            {<point name="construct.b.page3.xmdm014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdm014
            
            #add-point:AFTER FIELD xmdm014
            {<point name="construct.a.page3.xmdm014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xmdm014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdm014
            #add-point:ON ACTION controlp INFIELD xmdm014
            {<point name="construct.c.page3.xmdm014" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xrcdsite,xrcdld,xrcdseq,xrcd007,xmdl2262,xmdl0082,xrcd002,xrcd002_desc, 
          xrcdseq2,xrcd003,xrcd006,xrcd004,xrcd104
           FROM s_detail4[1].xrcdsite,s_detail4[1].xrcdld,s_detail4[1].xrcdseq,s_detail4[1].xrcd007, 
               s_detail4[1].xmdl2262,s_detail4[1].xmdl0082,s_detail4[1].xrcd002,s_detail4[1].xrcd002_desc, 
               s_detail4[1].xrcdseq2,s_detail4[1].xrcd003,s_detail4[1].xrcd006,s_detail4[1].xrcd004, 
               s_detail4[1].xrcd104
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcdsite
            #add-point:BEFORE FIELD xrcdsite
            {<point name="construct.b.page4.xrcdsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcdsite
            
            #add-point:AFTER FIELD xrcdsite
            {<point name="construct.a.page4.xrcdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcdsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcdsite
            #add-point:ON ACTION controlp INFIELD xrcdsite
            {<point name="construct.c.page4.xrcdsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcdld
            #add-point:BEFORE FIELD xrcdld
            {<point name="construct.b.page4.xrcdld" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcdld
            
            #add-point:AFTER FIELD xrcdld
            {<point name="construct.a.page4.xrcdld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcdld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcdld
            #add-point:ON ACTION controlp INFIELD xrcdld
            {<point name="construct.c.page4.xrcdld" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcdseq
            #add-point:BEFORE FIELD xrcdseq
            {<point name="construct.b.page4.xrcdseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcdseq
            
            #add-point:AFTER FIELD xrcdseq
            {<point name="construct.a.page4.xrcdseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcdseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcdseq
            #add-point:ON ACTION controlp INFIELD xrcdseq
            {<point name="construct.c.page4.xrcdseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd007
            #add-point:BEFORE FIELD xrcd007
            {<point name="construct.b.page4.xrcd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd007
            
            #add-point:AFTER FIELD xrcd007
            {<point name="construct.a.page4.xrcd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd007
            #add-point:ON ACTION controlp INFIELD xrcd007
            {<point name="construct.c.page4.xrcd007" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.xmdl2262
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl2262
            #add-point:ON ACTION controlp INFIELD xmdl2262
            {<point name="construct.c.page4.xmdl2262" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl2262
            #add-point:BEFORE FIELD xmdl2262
            {<point name="construct.b.page4.xmdl2262" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl2262
            
            #add-point:AFTER FIELD xmdl2262
            {<point name="construct.a.page4.xmdl2262" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xmdl0082
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0082
            #add-point:ON ACTION controlp INFIELD xmdl0082
            {<point name="construct.c.page4.xmdl0082" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0082
            #add-point:BEFORE FIELD xmdl0082
            {<point name="construct.b.page4.xmdl0082" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0082
            
            #add-point:AFTER FIELD xmdl0082
            {<point name="construct.a.page4.xmdl0082" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd002
            #add-point:ON ACTION controlp INFIELD xrcd002
            {<point name="construct.c.page4.xrcd002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd002
            #add-point:BEFORE FIELD xrcd002
            {<point name="construct.b.page4.xrcd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd002
            
            #add-point:AFTER FIELD xrcd002
            {<point name="construct.a.page4.xrcd002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd002_desc
            #add-point:BEFORE FIELD xrcd002_desc
            {<point name="construct.b.page4.xrcd002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd002_desc
            
            #add-point:AFTER FIELD xrcd002_desc
            {<point name="construct.a.page4.xrcd002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd002_desc
            #add-point:ON ACTION controlp INFIELD xrcd002_desc
            {<point name="construct.c.page4.xrcd002_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcdseq2
            #add-point:BEFORE FIELD xrcdseq2
            {<point name="construct.b.page4.xrcdseq2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcdseq2
            
            #add-point:AFTER FIELD xrcdseq2
            {<point name="construct.a.page4.xrcdseq2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcdseq2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcdseq2
            #add-point:ON ACTION controlp INFIELD xrcdseq2
            {<point name="construct.c.page4.xrcdseq2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd003
            #add-point:BEFORE FIELD xrcd003
            {<point name="construct.b.page4.xrcd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd003
            
            #add-point:AFTER FIELD xrcd003
            {<point name="construct.a.page4.xrcd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd003
            #add-point:ON ACTION controlp INFIELD xrcd003
            {<point name="construct.c.page4.xrcd003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd006
            #add-point:BEFORE FIELD xrcd006
            {<point name="construct.b.page4.xrcd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd006
            
            #add-point:AFTER FIELD xrcd006
            {<point name="construct.a.page4.xrcd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd006
            #add-point:ON ACTION controlp INFIELD xrcd006
            {<point name="construct.c.page4.xrcd006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd004
            #add-point:BEFORE FIELD xrcd004
            {<point name="construct.b.page4.xrcd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd004
            
            #add-point:AFTER FIELD xrcd004
            {<point name="construct.a.page4.xrcd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd004
            #add-point:ON ACTION controlp INFIELD xrcd004
            {<point name="construct.c.page4.xrcd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xrcd104
            #add-point:BEFORE FIELD xrcd104
            {<point name="construct.b.page4.xrcd104" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xrcd104
            
            #add-point:AFTER FIELD xrcd104
            {<point name="construct.a.page4.xrcd104" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.xrcd104
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xrcd104
            #add-point:ON ACTION controlp INFIELD xrcd104
            {<point name="construct.c.page4.xrcd104" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtiesite,rtieseq,xmdl2263,xmdl0083,rtieseq1,rtie001,rtie002,rtie006
           FROM s_detail5[1].rtiesite,s_detail5[1].rtieseq,s_detail5[1].xmdl2263,s_detail5[1].xmdl0083, 
               s_detail5[1].rtieseq1,s_detail5[1].rtie001,s_detail5[1].rtie002,s_detail5[1].rtie006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtiesite
            #add-point:BEFORE FIELD rtiesite
            {<point name="construct.b.page5.rtiesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtiesite
            
            #add-point:AFTER FIELD rtiesite
            {<point name="construct.a.page5.rtiesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.rtiesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtiesite
            #add-point:ON ACTION controlp INFIELD rtiesite
            {<point name="construct.c.page5.rtiesite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtieseq
            #add-point:BEFORE FIELD rtieseq
            {<point name="construct.b.page5.rtieseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtieseq
            
            #add-point:AFTER FIELD rtieseq
            {<point name="construct.a.page5.rtieseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.rtieseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtieseq
            #add-point:ON ACTION controlp INFIELD rtieseq
            {<point name="construct.c.page5.rtieseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page5.xmdl2263
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl2263
            #add-point:ON ACTION controlp INFIELD xmdl2263
            {<point name="construct.c.page5.xmdl2263" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl2263
            #add-point:BEFORE FIELD xmdl2263
            {<point name="construct.b.page5.xmdl2263" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl2263
            
            #add-point:AFTER FIELD xmdl2263
            {<point name="construct.a.page5.xmdl2263" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.xmdl0083
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl0083
            #add-point:ON ACTION controlp INFIELD xmdl0083
            {<point name="construct.c.page5.xmdl0083" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl0083
            #add-point:BEFORE FIELD xmdl0083
            {<point name="construct.b.page5.xmdl0083" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl0083
            
            #add-point:AFTER FIELD xmdl0083
            {<point name="construct.a.page5.xmdl0083" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtieseq1
            #add-point:BEFORE FIELD rtieseq1
            {<point name="construct.b.page5.rtieseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtieseq1
            
            #add-point:AFTER FIELD rtieseq1
            {<point name="construct.a.page5.rtieseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.rtieseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtieseq1
            #add-point:ON ACTION controlp INFIELD rtieseq1
            {<point name="construct.c.page5.rtieseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtie001
            #add-point:BEFORE FIELD rtie001
            {<point name="construct.b.page5.rtie001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtie001
            
            #add-point:AFTER FIELD rtie001
            {<point name="construct.a.page5.rtie001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.rtie001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtie001
            #add-point:ON ACTION controlp INFIELD rtie001
            {<point name="construct.c.page5.rtie001" />}
            #END add-point
 
         #Ctrlp:construct.c.page5.rtie002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtie002
            #add-point:ON ACTION controlp INFIELD rtie002
            {<point name="construct.c.page5.rtie002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtie002
            #add-point:BEFORE FIELD rtie002
            {<point name="construct.b.page5.rtie002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtie002
            
            #add-point:AFTER FIELD rtie002
            {<point name="construct.a.page5.rtie002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtie006
            #add-point:BEFORE FIELD rtie006
            {<point name="construct.b.page5.rtie006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtie006
            
            #add-point:AFTER FIELD rtie006
            {<point name="construct.a.page5.rtie006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.rtie006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtie006
            #add-point:ON ACTION controlp INFIELD rtie006
            {<point name="construct.c.page5.rtie006" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
          rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019, 
          rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029
           FROM s_detail7[1].rticseq,s_detail7[1].rticseq1,s_detail7[1].rtic001,s_detail7[1].rtic002, 
               s_detail7[1].rtic003,s_detail7[1].rtic004,s_detail7[1].rtic005,s_detail7[1].rtic006,s_detail7[1].rtic007, 
               s_detail7[1].rtic008,s_detail7[1].rtic009,s_detail7[1].rtic010,s_detail7[1].rtic011,s_detail7[1].rtic012, 
               s_detail7[1].rtic013,s_detail7[1].rtic014,s_detail7[1].rtic015,s_detail7[1].rtic016,s_detail7[1].rtic017, 
               s_detail7[1].rtic018,s_detail7[1].rtic019,s_detail7[1].rtic020,s_detail7[1].rtic021,s_detail7[1].rtic022, 
               s_detail7[1].rtic023,s_detail7[1].rtic024,s_detail7[1].rtic025,s_detail7[1].rtic026,s_detail7[1].rtic027, 
               s_detail7[1].rtic028,s_detail7[1].rtic029
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rticseq
            #add-point:BEFORE FIELD rticseq
            {<point name="construct.b.page7.rticseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rticseq
            
            #add-point:AFTER FIELD rticseq
            {<point name="construct.a.page7.rticseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rticseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rticseq
            #add-point:ON ACTION controlp INFIELD rticseq
            {<point name="construct.c.page7.rticseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rticseq1
            #add-point:BEFORE FIELD rticseq1
            {<point name="construct.b.page7.rticseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rticseq1
            
            #add-point:AFTER FIELD rticseq1
            {<point name="construct.a.page7.rticseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rticseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rticseq1
            #add-point:ON ACTION controlp INFIELD rticseq1
            {<point name="construct.c.page7.rticseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic001
            #add-point:BEFORE FIELD rtic001
            {<point name="construct.b.page7.rtic001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic001
            
            #add-point:AFTER FIELD rtic001
            {<point name="construct.a.page7.rtic001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic001
            #add-point:ON ACTION controlp INFIELD rtic001
            {<point name="construct.c.page7.rtic001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic002
            #add-point:BEFORE FIELD rtic002
            {<point name="construct.b.page7.rtic002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic002
            
            #add-point:AFTER FIELD rtic002
            {<point name="construct.a.page7.rtic002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic002
            #add-point:ON ACTION controlp INFIELD rtic002
            {<point name="construct.c.page7.rtic002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic003
            #add-point:BEFORE FIELD rtic003
            {<point name="construct.b.page7.rtic003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic003
            
            #add-point:AFTER FIELD rtic003
            {<point name="construct.a.page7.rtic003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic003
            #add-point:ON ACTION controlp INFIELD rtic003
            {<point name="construct.c.page7.rtic003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic004
            #add-point:BEFORE FIELD rtic004
            {<point name="construct.b.page7.rtic004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic004
            
            #add-point:AFTER FIELD rtic004
            {<point name="construct.a.page7.rtic004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic004
            #add-point:ON ACTION controlp INFIELD rtic004
            {<point name="construct.c.page7.rtic004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic005
            #add-point:BEFORE FIELD rtic005
            {<point name="construct.b.page7.rtic005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic005
            
            #add-point:AFTER FIELD rtic005
            {<point name="construct.a.page7.rtic005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic005
            #add-point:ON ACTION controlp INFIELD rtic005
            {<point name="construct.c.page7.rtic005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic006
            #add-point:BEFORE FIELD rtic006
            {<point name="construct.b.page7.rtic006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic006
            
            #add-point:AFTER FIELD rtic006
            {<point name="construct.a.page7.rtic006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic006
            #add-point:ON ACTION controlp INFIELD rtic006
            {<point name="construct.c.page7.rtic006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic007
            #add-point:BEFORE FIELD rtic007
            {<point name="construct.b.page7.rtic007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic007
            
            #add-point:AFTER FIELD rtic007
            {<point name="construct.a.page7.rtic007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic007
            #add-point:ON ACTION controlp INFIELD rtic007
            {<point name="construct.c.page7.rtic007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic008
            #add-point:BEFORE FIELD rtic008
            {<point name="construct.b.page7.rtic008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic008
            
            #add-point:AFTER FIELD rtic008
            {<point name="construct.a.page7.rtic008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic008
            #add-point:ON ACTION controlp INFIELD rtic008
            {<point name="construct.c.page7.rtic008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic009
            #add-point:BEFORE FIELD rtic009
            {<point name="construct.b.page7.rtic009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic009
            
            #add-point:AFTER FIELD rtic009
            {<point name="construct.a.page7.rtic009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic009
            #add-point:ON ACTION controlp INFIELD rtic009
            {<point name="construct.c.page7.rtic009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic010
            #add-point:BEFORE FIELD rtic010
            {<point name="construct.b.page7.rtic010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic010
            
            #add-point:AFTER FIELD rtic010
            {<point name="construct.a.page7.rtic010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic010
            #add-point:ON ACTION controlp INFIELD rtic010
            {<point name="construct.c.page7.rtic010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic011
            #add-point:BEFORE FIELD rtic011
            {<point name="construct.b.page7.rtic011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic011
            
            #add-point:AFTER FIELD rtic011
            {<point name="construct.a.page7.rtic011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic011
            #add-point:ON ACTION controlp INFIELD rtic011
            {<point name="construct.c.page7.rtic011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic012
            #add-point:BEFORE FIELD rtic012
            {<point name="construct.b.page7.rtic012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic012
            
            #add-point:AFTER FIELD rtic012
            {<point name="construct.a.page7.rtic012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic012
            #add-point:ON ACTION controlp INFIELD rtic012
            {<point name="construct.c.page7.rtic012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic013
            #add-point:BEFORE FIELD rtic013
            {<point name="construct.b.page7.rtic013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic013
            
            #add-point:AFTER FIELD rtic013
            {<point name="construct.a.page7.rtic013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic013
            #add-point:ON ACTION controlp INFIELD rtic013
            {<point name="construct.c.page7.rtic013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic014
            #add-point:BEFORE FIELD rtic014
            {<point name="construct.b.page7.rtic014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic014
            
            #add-point:AFTER FIELD rtic014
            {<point name="construct.a.page7.rtic014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic014
            #add-point:ON ACTION controlp INFIELD rtic014
            {<point name="construct.c.page7.rtic014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic015
            #add-point:BEFORE FIELD rtic015
            {<point name="construct.b.page7.rtic015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic015
            
            #add-point:AFTER FIELD rtic015
            {<point name="construct.a.page7.rtic015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic015
            #add-point:ON ACTION controlp INFIELD rtic015
            {<point name="construct.c.page7.rtic015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic016
            #add-point:BEFORE FIELD rtic016
            {<point name="construct.b.page7.rtic016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic016
            
            #add-point:AFTER FIELD rtic016
            {<point name="construct.a.page7.rtic016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic016
            #add-point:ON ACTION controlp INFIELD rtic016
            {<point name="construct.c.page7.rtic016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic017
            #add-point:BEFORE FIELD rtic017
            {<point name="construct.b.page7.rtic017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic017
            
            #add-point:AFTER FIELD rtic017
            {<point name="construct.a.page7.rtic017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic017
            #add-point:ON ACTION controlp INFIELD rtic017
            {<point name="construct.c.page7.rtic017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic018
            #add-point:BEFORE FIELD rtic018
            {<point name="construct.b.page7.rtic018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic018
            
            #add-point:AFTER FIELD rtic018
            {<point name="construct.a.page7.rtic018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic018
            #add-point:ON ACTION controlp INFIELD rtic018
            {<point name="construct.c.page7.rtic018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic019
            #add-point:BEFORE FIELD rtic019
            {<point name="construct.b.page7.rtic019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic019
            
            #add-point:AFTER FIELD rtic019
            {<point name="construct.a.page7.rtic019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic019
            #add-point:ON ACTION controlp INFIELD rtic019
            {<point name="construct.c.page7.rtic019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic020
            #add-point:BEFORE FIELD rtic020
            {<point name="construct.b.page7.rtic020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic020
            
            #add-point:AFTER FIELD rtic020
            {<point name="construct.a.page7.rtic020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic020
            #add-point:ON ACTION controlp INFIELD rtic020
            {<point name="construct.c.page7.rtic020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic021
            #add-point:BEFORE FIELD rtic021
            {<point name="construct.b.page7.rtic021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic021
            
            #add-point:AFTER FIELD rtic021
            {<point name="construct.a.page7.rtic021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic021
            #add-point:ON ACTION controlp INFIELD rtic021
            {<point name="construct.c.page7.rtic021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic022
            #add-point:BEFORE FIELD rtic022
            {<point name="construct.b.page7.rtic022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic022
            
            #add-point:AFTER FIELD rtic022
            {<point name="construct.a.page7.rtic022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic022
            #add-point:ON ACTION controlp INFIELD rtic022
            {<point name="construct.c.page7.rtic022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic023
            #add-point:BEFORE FIELD rtic023
            {<point name="construct.b.page7.rtic023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic023
            
            #add-point:AFTER FIELD rtic023
            {<point name="construct.a.page7.rtic023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic023
            #add-point:ON ACTION controlp INFIELD rtic023
            {<point name="construct.c.page7.rtic023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic024
            #add-point:BEFORE FIELD rtic024
            {<point name="construct.b.page7.rtic024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic024
            
            #add-point:AFTER FIELD rtic024
            {<point name="construct.a.page7.rtic024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic024
            #add-point:ON ACTION controlp INFIELD rtic024
            {<point name="construct.c.page7.rtic024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic025
            #add-point:BEFORE FIELD rtic025
            {<point name="construct.b.page7.rtic025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic025
            
            #add-point:AFTER FIELD rtic025
            {<point name="construct.a.page7.rtic025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic025
            #add-point:ON ACTION controlp INFIELD rtic025
            {<point name="construct.c.page7.rtic025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic026
            #add-point:BEFORE FIELD rtic026
            {<point name="construct.b.page7.rtic026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic026
            
            #add-point:AFTER FIELD rtic026
            {<point name="construct.a.page7.rtic026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic026
            #add-point:ON ACTION controlp INFIELD rtic026
            {<point name="construct.c.page7.rtic026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic027
            #add-point:BEFORE FIELD rtic027
            {<point name="construct.b.page7.rtic027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic027
            
            #add-point:AFTER FIELD rtic027
            {<point name="construct.a.page7.rtic027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic027
            #add-point:ON ACTION controlp INFIELD rtic027
            {<point name="construct.c.page7.rtic027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic028
            #add-point:BEFORE FIELD rtic028
            {<point name="construct.b.page7.rtic028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic028
            
            #add-point:AFTER FIELD rtic028
            {<point name="construct.a.page7.rtic028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic028
            #add-point:ON ACTION controlp INFIELD rtic028
            {<point name="construct.c.page7.rtic028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtic029
            #add-point:BEFORE FIELD rtic029
            {<point name="construct.b.page7.rtic029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtic029
            
            #add-point:AFTER FIELD rtic029
            {<point name="construct.a.page7.rtic029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.rtic029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtic029
            #add-point:ON ACTION controlp INFIELD rtic029
            {<point name="construct.c.page7.rtic029" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmdk_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdl_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdm_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xrcd_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtie_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtic_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.default_search" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adbt540_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xmdkdocno = '", g_argv[03], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmdk_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdl_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdm_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xrcd_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtie_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtic_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.delete" ver="65" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION adbt540_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt540_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

   
   #檢查是否允許此動作
   IF NOT adbt540_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL adbt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   CALL adbt540_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL adbt540_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
 
      DELETE FROM xmdk_t
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmdk_m.xmdkdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = g_xmdk_m.xmdkdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE adbt540_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdl_d.clear() 
      CALL g_xmdl2_d.clear()       
      CALL g_xmdl3_d.clear()       
      CALL g_xmdl4_d.clear()       
      CALL g_xmdl5_d.clear()       
      CALL g_xmdl6_d.clear()       
      CALL g_xmdl7_d.clear()       
 
     
      CALL adbt540_ui_browser_refresh()  
      #CALL adbt540_ui_headershow()  
      #CALL adbt540_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL adbt540_browser_fill("")
         CALL adbt540_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE adbt540_cl
 
   #功能已完成,通報訊息中心
   CALL adbt540_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="adbt540.delete_b" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbt540_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','6',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdl_t
       WHERE xmdlent = g_enterprise AND
         xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'6'" THEN 
         CALL g_xmdl6_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xmdm_t
       WHERE xmdment = g_enterprise AND
             xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdl4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdl5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_xmdl7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.description" ver="642" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000581
#+ 
#+ Filename...: adbt540
#+ Description: 分銷出貨單維護作業
#+ Creator....: 02749(2014-05-15 00:00:00)
#+ Modifier...: 06815(2015-05-06 15:46:52) -SD/PR-
]]>
  </section>
  <section id="adbt540.detail_reproduce" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION adbt540_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdl_t.*
   DEFINE l_detail2    RECORD LIKE xmdm_t.*
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.*
 
   DEFINE l_detail4    RECORD LIKE rtie_t.*
 
   DEFINE l_detail5    RECORD LIKE rtic_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adbt540_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adbt540_detail AS ",
                "SELECT * FROM xmdl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt540_detail SELECT * FROM xmdl_t 
                                         WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdkdocno_t
 
   
   #將key修正為調整後   
   UPDATE adbt540_detail 
      #更新key欄位
      SET xmdldocno = g_xmdk_m.xmdkdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdl_t SELECT * FROM adbt540_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt540_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adbt540_detail AS ",
      "SELECT * FROM xmdm_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt540_detail SELECT * FROM xmdm_t
                                         WHERE xmdment = g_enterprise AND xmdmdocno = g_xmdkdocno_t
 
 
   #將key修正為調整後   
   UPDATE adbt540_detail SET xmdmdocno = g_xmdk_m.xmdkdocno
 
  
   #將資料塞回原table   
   INSERT INTO xmdm_t SELECT * FROM adbt540_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt540_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adbt540_detail AS ",
      "SELECT * FROM xrcd_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt540_detail SELECT * FROM xrcd_t
                                         WHERE xrcdent = g_enterprise AND xrcddocno = g_xmdkdocno_t
 
 
   #將key修正為調整後   
   UPDATE adbt540_detail SET xrcddocno = g_xmdk_m.xmdkdocno
 
  
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM adbt540_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt540_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adbt540_detail AS ",
      "SELECT * FROM rtie_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt540_detail SELECT * FROM rtie_t
                                         WHERE rtieent = g_enterprise AND rtiedocno = g_xmdkdocno_t
 
 
   #將key修正為調整後   
   UPDATE adbt540_detail SET rtiedocno = g_xmdk_m.xmdkdocno
 
  
   #將資料塞回原table   
   INSERT INTO rtie_t SELECT * FROM adbt540_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt540_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adbt540_detail AS ",
      "SELECT * FROM rtic_t "
   PREPARE repro_tbl5 FROM ls_sql
   EXECUTE repro_tbl5
   FREE repro_tbl5
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt540_detail SELECT * FROM rtic_t
                                         WHERE rticent = g_enterprise AND rticdocno = g_xmdkdocno_t
 
 
   #將key修正為調整後   
   UPDATE adbt540_detail SET rticdocno = g_xmdk_m.xmdkdocno
 
  
   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM adbt540_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt540_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION adbt540_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.fetch" ver="37" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adbt540_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL adbt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt540_set_act_visible()   
   CALL adbt540_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   LET g_data_owner = g_xmdk_m.xmdkownid      
   LET g_data_dept  = g_xmdk_m.xmdkowndp
   
   #重新顯示   
   CALL adbt540_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.fill_chk" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION adbt540_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.filter" ver="14" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION adbt540_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdkdocno,xmdkdocdt,xmdk001,xmdk003,xmdk004,xmdk006,xmdk007,xmdk008,xmdk009 

                          FROM s_browse[1].b_xmdkdocno,s_browse[1].b_xmdkdocdt,s_browse[1].b_xmdk001, 
                              s_browse[1].b_xmdk003,s_browse[1].b_xmdk004,s_browse[1].b_xmdk006,s_browse[1].b_xmdk007, 
                              s_browse[1].b_xmdk008,s_browse[1].b_xmdk009
 
         BEFORE CONSTRUCT
               DISPLAY adbt540_filter_parser('xmdkdocno') TO s_browse[1].b_xmdkdocno
            DISPLAY adbt540_filter_parser('xmdkdocdt') TO s_browse[1].b_xmdkdocdt
            DISPLAY adbt540_filter_parser('xmdk001') TO s_browse[1].b_xmdk001
            DISPLAY adbt540_filter_parser('xmdk003') TO s_browse[1].b_xmdk003
            DISPLAY adbt540_filter_parser('xmdk004') TO s_browse[1].b_xmdk004
            DISPLAY adbt540_filter_parser('xmdk006') TO s_browse[1].b_xmdk006
            DISPLAY adbt540_filter_parser('xmdk007') TO s_browse[1].b_xmdk007
            DISPLAY adbt540_filter_parser('xmdk008') TO s_browse[1].b_xmdk008
            DISPLAY adbt540_filter_parser('xmdk009') TO s_browse[1].b_xmdk009
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adbt540_filter_show('xmdkdocno')
   CALL adbt540_filter_show('xmdkdocdt')
   CALL adbt540_filter_show('xmdk001')
   CALL adbt540_filter_show('xmdk003')
   CALL adbt540_filter_show('xmdk004')
   CALL adbt540_filter_show('xmdk006')
   CALL adbt540_filter_show('xmdk007')
   CALL adbt540_filter_show('xmdk008')
   CALL adbt540_filter_show('xmdk009')
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION adbt540_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION adbt540_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adbt540_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.global" ver="120" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmdk_m        RECORD
       xmdk000 LIKE xmdk_t.xmdk000, 
   xmdksite LIKE xmdk_t.xmdksite, 
   xmdksite_desc LIKE type_t.chr80, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdkdocno LIKE xmdk_t.xmdkdocno, 
   xmdk005 LIKE xmdk_t.xmdk005, 
   xmdk006 LIKE xmdk_t.xmdk006, 
   xmdk002 LIKE xmdk_t.xmdk002, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   xmdk003_desc LIKE type_t.chr80, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   xmdk004_desc LIKE type_t.chr80, 
   xmdkstus LIKE xmdk_t.xmdkstus, 
   xmdk007 LIKE xmdk_t.xmdk007, 
   xmdk007_desc LIKE type_t.chr80, 
   xmdk200 LIKE xmdk_t.xmdk200, 
   xmdk200_desc LIKE type_t.chr80, 
   xmdk201 LIKE xmdk_t.xmdk201, 
   xmdk201_desc LIKE type_t.chr80, 
   xmdk207 LIKE xmdk_t.xmdk207, 
   xmdk207_desc LIKE type_t.chr80, 
   xmdk030 LIKE xmdk_t.xmdk030, 
   xmdk030_desc LIKE type_t.chr80, 
   xmdk009 LIKE xmdk_t.xmdk009, 
   xmdk009_desc LIKE type_t.chr80, 
   xmdk021 LIKE xmdk_t.xmdk021, 
   xmdk021_desc LIKE type_t.chr80, 
   xmdk021_address LIKE type_t.chr500, 
   xmdk205 LIKE xmdk_t.xmdk205, 
   xmdk205_desc LIKE type_t.chr80, 
   xmdk206 LIKE xmdk_t.xmdk206, 
   xmdk206_desc LIKE type_t.chr80, 
   xmdk034 LIKE xmdk_t.xmdk034, 
   xmdk034_desc LIKE type_t.chr80, 
   xmdk039 LIKE xmdk_t.xmdk039, 
   xmdk039_desc LIKE type_t.chr80, 
   xmdk040 LIKE xmdk_t.xmdk040, 
   xmdk040_desc LIKE type_t.chr80, 
   xmdk054 LIKE xmdk_t.xmdk054, 
   xmdk032 LIKE xmdk_t.xmdk032, 
   xmdk028 LIKE xmdk_t.xmdk028, 
   xmdk029 LIKE xmdk_t.xmdk029, 
   xmdk008 LIKE xmdk_t.xmdk008, 
   xmdk008_desc LIKE type_t.chr80, 
   xmdk202 LIKE xmdk_t.xmdk202, 
   xmdk202_desc LIKE type_t.chr80, 
   xmdk015 LIKE xmdk_t.xmdk015, 
   xmdk015_desc LIKE type_t.chr80, 
   xmdk037 LIKE xmdk_t.xmdk037, 
   xmdk214 LIKE xmdk_t.xmdk214, 
   xmdk010 LIKE xmdk_t.xmdk010, 
   xmdk010_desc LIKE type_t.chr80, 
   xmdk011 LIKE xmdk_t.xmdk011, 
   xmdk011_desc LIKE type_t.chr80, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdk016_desc LIKE type_t.chr80, 
   xmdk012 LIKE xmdk_t.xmdk012, 
   xmdk013 LIKE xmdk_t.xmdk013, 
   xmdk012_desc LIKE type_t.chr80, 
   xmdk014 LIKE xmdk_t.xmdk014, 
   xmda026 LIKE type_t.chr500, 
   xmda026_desc LIKE type_t.chr80, 
   xmda026_address LIKE type_t.chr500, 
   xmdk213 LIKE xmdk_t.xmdk213, 
   xmdk031 LIKE xmdk_t.xmdk031, 
   xmdk031_desc LIKE type_t.chr80, 
   xmdk033 LIKE xmdk_t.xmdk033, 
   xmdk033_desc LIKE type_t.chr80, 
   xmdk020 LIKE xmdk_t.xmdk020, 
   xmdk020_desc LIKE type_t.chr80, 
   xmdk025 LIKE xmdk_t.xmdk025, 
   xmdk026 LIKE xmdk_t.xmdk026, 
   xmdk027 LIKE xmdk_t.xmdk027, 
   xmdk038 LIKE xmdk_t.xmdk038, 
   xmdk038_desc LIKE type_t.chr80, 
   xmdk022 LIKE xmdk_t.xmdk022, 
   xmdk022_desc LIKE type_t.chr80, 
   xmdk023 LIKE xmdk_t.xmdk023, 
   xmdk023_desc LIKE type_t.chr80, 
   xmdk024 LIKE xmdk_t.xmdk024, 
   xmdk024_desc LIKE type_t.chr80, 
   xmdk018 LIKE xmdk_t.xmdk018, 
   xmdk018_desc LIKE type_t.chr80, 
   xmdk019 LIKE xmdk_t.xmdk019, 
   xmdk019_desc LIKE type_t.chr80, 
   xmdk035 LIKE xmdk_t.xmdk035, 
   xmdk036 LIKE xmdk_t.xmdk036, 
   xmdk083 LIKE xmdk_t.xmdk083, 
   xmdk203 LIKE xmdk_t.xmdk203, 
   xmdk204 LIKE xmdk_t.xmdk204, 
   xmdkunit LIKE xmdk_t.xmdkunit, 
   xmdkownid LIKE xmdk_t.xmdkownid, 
   xmdkownid_desc LIKE type_t.chr80, 
   xmdkowndp LIKE xmdk_t.xmdkowndp, 
   xmdkowndp_desc LIKE type_t.chr80, 
   xmdkcrtid LIKE xmdk_t.xmdkcrtid, 
   xmdkcrtid_desc LIKE type_t.chr80, 
   xmdkcrtdp LIKE xmdk_t.xmdkcrtdp, 
   xmdkcrtdp_desc LIKE type_t.chr80, 
   xmdkcrtdt LIKE xmdk_t.xmdkcrtdt, 
   xmdkmodid LIKE xmdk_t.xmdkmodid, 
   xmdkmodid_desc LIKE type_t.chr80, 
   xmdkmoddt LIKE xmdk_t.xmdkmoddt, 
   xmdkcnfid LIKE xmdk_t.xmdkcnfid, 
   xmdkcnfid_desc LIKE type_t.chr80, 
   xmdkcnfdt LIKE xmdk_t.xmdkcnfdt, 
   xmdkpstid LIKE xmdk_t.xmdkpstid, 
   xmdkpstid_desc LIKE type_t.chr80, 
   xmdkpstdt LIKE xmdk_t.xmdkpstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdl_d        RECORD
       xmdlsite LIKE xmdl_t.xmdlsite, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl001 LIKE xmdl_t.xmdl001, 
   xmdl002 LIKE xmdl_t.xmdl002, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl005 LIKE xmdl_t.xmdl005, 
   xmdl006 LIKE xmdl_t.xmdl006, 
   xmdl007 LIKE xmdl_t.xmdl007, 
   xmdl226 LIKE xmdl_t.xmdl226, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   xmdl008_desc LIKE type_t.chr500, 
   xmdl008_desc1 LIKE type_t.chr500, 
   xmdl009 LIKE xmdl_t.xmdl009, 
   xmdl033 LIKE xmdl_t.xmdl033, 
   xmdl204 LIKE xmdl_t.xmdl204, 
   xmdl204_desc LIKE type_t.chr500, 
   xmdl205 LIKE xmdl_t.xmdl205, 
   xmdl017 LIKE xmdl_t.xmdl017, 
   xmdl017_desc LIKE type_t.chr500, 
   xmdl018 LIKE xmdl_t.xmdl018, 
   xmdl019 LIKE xmdl_t.xmdl019, 
   xmdl019_desc LIKE type_t.chr500, 
   xmdl020 LIKE xmdl_t.xmdl020, 
   xmdl013 LIKE xmdl_t.xmdl013, 
   xmdl207 LIKE xmdl_t.xmdl207, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   xmdl014_desc LIKE type_t.chr500, 
   xmdl015 LIKE xmdl_t.xmdl015, 
   xmdl015_desc LIKE type_t.chr500, 
   xmdl016 LIKE xmdl_t.xmdl016, 
   xmdl052 LIKE xmdl_t.xmdl052, 
   xmdl050 LIKE xmdl_t.xmdl050, 
   xmdl050_desc LIKE type_t.chr500, 
   xmdl225 LIKE xmdl_t.xmdl225, 
   xmdl225_desc LIKE type_t.chr500, 
   xmdl224 LIKE xmdl_t.xmdl224, 
   xmdl224_desc LIKE type_t.chr500, 
   xmdl223 LIKE xmdl_t.xmdl223, 
   xmdl223_desc LIKE type_t.chr500, 
   xmdl222 LIKE xmdl_t.xmdl222, 
   xmdl222_desc LIKE type_t.chr500, 
   xmdl051 LIKE xmdl_t.xmdl051, 
   xmdl035 LIKE xmdl_t.xmdl035, 
   xmdl036 LIKE xmdl_t.xmdl036, 
   xmdl037 LIKE xmdl_t.xmdl037, 
   xmdl220 LIKE xmdl_t.xmdl220, 
   xmdl010 LIKE xmdl_t.xmdl010, 
   xmdl011 LIKE xmdl_t.xmdl011, 
   xmdl012 LIKE xmdl_t.xmdl012, 
   xmdl021 LIKE xmdl_t.xmdl021, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl023 LIKE xmdl_t.xmdl023, 
   xmdl034 LIKE xmdl_t.xmdl034, 
   xmdl041 LIKE xmdl_t.xmdl041, 
   xmdl088 LIKE xmdl_t.xmdl088
       END RECORD
PRIVATE TYPE type_g_xmdl2_d RECORD
       xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl0071 LIKE type_t.chr500, 
   xmdl0081 LIKE type_t.chr500, 
   xmdl0081_desc LIKE type_t.chr500, 
   xmdl0081_desc1 LIKE type_t.chr500, 
   xmdl0091 LIKE type_t.chr500, 
   xmdl2041 LIKE type_t.chr500, 
   xmdl2041_desc LIKE type_t.chr500, 
   xmdl2051 LIKE type_t.chr500, 
   xmdl0171 LIKE type_t.chr500, 
   xmdl0171_desc LIKE type_t.chr500, 
   xmdl0181 LIKE type_t.chr500, 
   xmdl0211 LIKE type_t.chr500, 
   xmdl0211_desc LIKE type_t.chr500, 
   xmdl0221 LIKE type_t.chr500, 
   xmdl208 LIKE xmdl_t.xmdl208, 
   xmdl209 LIKE xmdl_t.xmdl209, 
   xmdl210 LIKE xmdl_t.xmdl210, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl025_desc LIKE type_t.chr500, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl211 LIKE xmdl_t.xmdl211, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xmdl087 LIKE xmdl_t.xmdl087, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   xmdl042 LIKE xmdl_t.xmdl042, 
   xmdl043 LIKE xmdl_t.xmdl043, 
   xmdl044 LIKE xmdl_t.xmdl044, 
   xmdl045 LIKE xmdl_t.xmdl045, 
   xmdl046 LIKE xmdl_t.xmdl046
       END RECORD
PRIVATE TYPE type_g_xmdl3_d RECORD
       xmdmsite LIKE xmdm_t.xmdmsite, 
   xmdmseq LIKE xmdm_t.xmdmseq, 
   xmdmseq1 LIKE xmdm_t.xmdmseq1, 
   xmdm001 LIKE xmdm_t.xmdm001, 
   xmdm001_desc LIKE type_t.chr500, 
   xmdm001_desc1 LIKE type_t.chr500, 
   xmdm002 LIKE xmdm_t.xmdm002, 
   xmdm003 LIKE xmdm_t.xmdm003, 
   xmdm004 LIKE xmdm_t.xmdm004, 
   xmdm005 LIKE xmdm_t.xmdm005, 
   xmdm005_desc LIKE type_t.chr500, 
   xmdm006 LIKE xmdm_t.xmdm006, 
   xmdm006_desc LIKE type_t.chr500, 
   xmdm007 LIKE xmdm_t.xmdm007, 
   xmdm033 LIKE xmdm_t.xmdm033, 
   xmdm008 LIKE xmdm_t.xmdm008, 
   xmdm008_desc LIKE type_t.chr500, 
   xmdm009 LIKE xmdm_t.xmdm009, 
   xmdm010 LIKE xmdm_t.xmdm010, 
   xmdm010_desc LIKE type_t.chr500, 
   xmdm011 LIKE xmdm_t.xmdm011, 
   xmdm012 LIKE xmdm_t.xmdm012, 
   xmdm013 LIKE xmdm_t.xmdm013, 
   xmdm014 LIKE xmdm_t.xmdm014
       END RECORD
PRIVATE TYPE type_g_xmdl4_d RECORD
       xrcdsite LIKE xrcd_t.xrcdsite, 
   xrcdld LIKE xrcd_t.xrcdld, 
   xrcdseq LIKE xrcd_t.xrcdseq, 
   xrcd007 LIKE xrcd_t.xrcd007, 
   xmdl2262 LIKE type_t.chr500, 
   xmdl0082 LIKE type_t.chr500, 
   xmdl0082_desc LIKE type_t.chr500, 
   xmdl0082_desc_desc LIKE type_t.chr500, 
   xrcd002 LIKE xrcd_t.xrcd002, 
   xrcd002_desc LIKE type_t.chr500, 
   xrcdseq2 LIKE xrcd_t.xrcdseq2, 
   xrcd003 LIKE xrcd_t.xrcd003, 
   xrcd006 LIKE xrcd_t.xrcd006, 
   xrcd004 LIKE xrcd_t.xrcd004, 
   xrcd104 LIKE xrcd_t.xrcd104
       END RECORD
PRIVATE TYPE type_g_xmdl5_d RECORD
       rtiesite LIKE rtie_t.rtiesite, 
   rtieseq LIKE rtie_t.rtieseq, 
   xmdl2263 LIKE type_t.chr500, 
   xmdl0083 LIKE type_t.chr500, 
   xmdl0083_desc LIKE type_t.chr500, 
   xmdl0083_desc_desc LIKE type_t.chr500, 
   rtieseq1 LIKE rtie_t.rtieseq1, 
   rtie001 LIKE rtie_t.rtie001, 
   rtie002 LIKE rtie_t.rtie002, 
   rtie006 LIKE rtie_t.rtie006
       END RECORD
PRIVATE TYPE type_g_xmdl6_d RECORD
       xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdl0074 LIKE type_t.chr500, 
   xmdl2264 LIKE type_t.chr500, 
   xmdl0084 LIKE type_t.chr500, 
   xmdl0084_desc LIKE type_t.chr500, 
   xmdl0084_desc_desc LIKE type_t.chr500, 
   xmdl0094 LIKE type_t.chr500, 
   xmdl212 LIKE xmdl_t.xmdl212, 
   xmdl212_desc LIKE type_t.chr500, 
   xmdl200 LIKE xmdl_t.xmdl200, 
   xmdl200_desc LIKE type_t.chr500, 
   xmdl201 LIKE xmdl_t.xmdl201, 
   xmdl201_desc LIKE type_t.chr500, 
   xmdl202 LIKE xmdl_t.xmdl202, 
   xmdl202_desc LIKE type_t.chr500, 
   xmdl203 LIKE xmdl_t.xmdl203, 
   xmdl203_desc LIKE type_t.chr500, 
   xmdl030 LIKE xmdl_t.xmdl030, 
   xmdl031 LIKE xmdl_t.xmdl031, 
   xmdl032 LIKE xmdl_t.xmdl032, 
   xmdl213 LIKE xmdl_t.xmdl213, 
   xmdl213_desc LIKE type_t.chr500, 
   xmdl214 LIKE xmdl_t.xmdl214, 
   xmdl214_desc LIKE type_t.chr500, 
   xmdlorga LIKE xmdl_t.xmdlorga, 
   xmdlorga_desc LIKE type_t.chr500, 
   xmdl215 LIKE xmdl_t.xmdl215, 
   xmdl216 LIKE xmdl_t.xmdl216, 
   xmdl217 LIKE xmdl_t.xmdl217, 
   xmdl217_desc LIKE type_t.chr500, 
   xmdl218 LIKE xmdl_t.xmdl218, 
   xmdl219 LIKE xmdl_t.xmdl219, 
   xmdlunit LIKE xmdl_t.xmdlunit
       END RECORD
PRIVATE TYPE type_g_xmdl7_d RECORD
       rticseq LIKE rtic_t.rticseq, 
   xmdl2265 LIKE type_t.chr500, 
   xmdl0085 LIKE type_t.chr500, 
   xmdl0085_desc LIKE type_t.chr500, 
   xmdl0085_desc_1 LIKE type_t.chr500, 
   xmdl0215 LIKE type_t.chr500, 
   xmdl0215_desc LIKE type_t.chr500, 
   xmdl0225 LIKE type_t.chr500, 
   xmdl2085 LIKE type_t.chr500, 
   xmdl2095 LIKE type_t.chr500, 
   xmdl2105 LIKE type_t.chr500, 
   xmdl0285 LIKE type_t.chr500, 
   rticseq1 LIKE rtic_t.rticseq1, 
   rtic001 LIKE rtic_t.rtic001, 
   rtic002 LIKE rtic_t.rtic002, 
   rtic003 LIKE rtic_t.rtic003, 
   rtic004 LIKE rtic_t.rtic004, 
   rtic005 LIKE rtic_t.rtic005, 
   rtic006 LIKE rtic_t.rtic006, 
   rtic007 LIKE rtic_t.rtic007, 
   rtic008 LIKE rtic_t.rtic008, 
   rtic009 LIKE rtic_t.rtic009, 
   rtic010 LIKE rtic_t.rtic010, 
   rtic011 LIKE rtic_t.rtic011, 
   rtic012 LIKE rtic_t.rtic012, 
   rtic013 LIKE rtic_t.rtic013, 
   rtic014 LIKE rtic_t.rtic014, 
   rtic015 LIKE rtic_t.rtic015, 
   rtic016 LIKE rtic_t.rtic016, 
   rtic017 LIKE rtic_t.rtic017, 
   rtic018 LIKE rtic_t.rtic018, 
   rtic019 LIKE rtic_t.rtic019, 
   rtic020 LIKE rtic_t.rtic020, 
   rtic021 LIKE rtic_t.rtic021, 
   rtic022 LIKE rtic_t.rtic022, 
   rtic023 LIKE rtic_t.rtic023, 
   rtic024 LIKE rtic_t.rtic024, 
   rtic025 LIKE rtic_t.rtic025, 
   rtic026 LIKE rtic_t.rtic026, 
   rtic027 LIKE rtic_t.rtic027, 
   rtic028 LIKE rtic_t.rtic028, 
   rtic029 LIKE rtic_t.rtic029, 
   rticsite LIKE rtic_t.rticsite, 
   rticunit LIKE rtic_t.rticunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdkdocno LIKE xmdk_t.xmdkdocno,
      b_xmdkdocdt LIKE xmdk_t.xmdkdocdt,
      b_xmdk001 LIKE xmdk_t.xmdk001,
      b_xmdk003 LIKE xmdk_t.xmdk003,
   b_xmdk003_desc LIKE type_t.chr80,
      b_xmdk004 LIKE xmdk_t.xmdk004,
   b_xmdk004_desc LIKE type_t.chr80,
      b_xmdk006 LIKE xmdk_t.xmdk006,
      b_xmdk007 LIKE xmdk_t.xmdk007,
   b_xmdk007_desc LIKE type_t.chr80,
      b_xmdk008 LIKE xmdk_t.xmdk008,
   b_xmdk008_desc LIKE type_t.chr80,
      b_xmdk009 LIKE xmdk_t.xmdk009,
   b_xmdk009_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_xmdk_m          type_g_xmdk_m
DEFINE g_xmdk_m_t        type_g_xmdk_m
DEFINE g_xmdk_m_o        type_g_xmdk_m
DEFINE g_xmdk_m_mask_o   type_g_xmdk_m #轉換遮罩前資料
DEFINE g_xmdk_m_mask_n   type_g_xmdk_m #轉換遮罩後資料
 
   DEFINE g_xmdkdocno_t LIKE xmdk_t.xmdkdocno
 
 
DEFINE g_xmdl_d          DYNAMIC ARRAY OF type_g_xmdl_d
DEFINE g_xmdl_d_t        type_g_xmdl_d
DEFINE g_xmdl_d_o        type_g_xmdl_d
DEFINE g_xmdl_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩前資料
DEFINE g_xmdl_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl_d #轉換遮罩後資料
DEFINE g_xmdl2_d          DYNAMIC ARRAY OF type_g_xmdl2_d
DEFINE g_xmdl2_d_t        type_g_xmdl2_d
DEFINE g_xmdl2_d_o        type_g_xmdl2_d
DEFINE g_xmdl2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩前資料
DEFINE g_xmdl2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl2_d #轉換遮罩後資料
DEFINE g_xmdl3_d          DYNAMIC ARRAY OF type_g_xmdl3_d
DEFINE g_xmdl3_d_t        type_g_xmdl3_d
DEFINE g_xmdl3_d_o        type_g_xmdl3_d
DEFINE g_xmdl3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩前資料
DEFINE g_xmdl3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl3_d #轉換遮罩後資料
DEFINE g_xmdl4_d          DYNAMIC ARRAY OF type_g_xmdl4_d
DEFINE g_xmdl4_d_t        type_g_xmdl4_d
DEFINE g_xmdl4_d_o        type_g_xmdl4_d
DEFINE g_xmdl4_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl4_d #轉換遮罩前資料
DEFINE g_xmdl4_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl4_d #轉換遮罩後資料
DEFINE g_xmdl5_d          DYNAMIC ARRAY OF type_g_xmdl5_d
DEFINE g_xmdl5_d_t        type_g_xmdl5_d
DEFINE g_xmdl5_d_o        type_g_xmdl5_d
DEFINE g_xmdl5_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl5_d #轉換遮罩前資料
DEFINE g_xmdl5_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl5_d #轉換遮罩後資料
DEFINE g_xmdl6_d          DYNAMIC ARRAY OF type_g_xmdl6_d
DEFINE g_xmdl6_d_t        type_g_xmdl6_d
DEFINE g_xmdl6_d_o        type_g_xmdl6_d
DEFINE g_xmdl6_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl6_d #轉換遮罩前資料
DEFINE g_xmdl6_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl6_d #轉換遮罩後資料
DEFINE g_xmdl7_d          DYNAMIC ARRAY OF type_g_xmdl7_d
DEFINE g_xmdl7_d_t        type_g_xmdl7_d
DEFINE g_xmdl7_d_o        type_g_xmdl7_d
DEFINE g_xmdl7_d_mask_o   DYNAMIC ARRAY OF type_g_xmdl7_d #轉換遮罩前資料
DEFINE g_xmdl7_d_mask_n   DYNAMIC ARRAY OF type_g_xmdl7_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="adbt540.idx_chk" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION adbt540_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdl_d.getLength() THEN
         LET g_detail_idx = g_xmdl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdl2_d.getLength() THEN
         LET g_detail_idx = g_xmdl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdl3_d.getLength() THEN
         LET g_detail_idx = g_xmdl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmdl4_d.getLength() THEN
         LET g_detail_idx = g_xmdl4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_xmdl5_d.getLength() THEN
         LET g_detail_idx = g_xmdl5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_xmdl6_d.getLength() THEN
         LET g_detail_idx = g_xmdl6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_xmdl7_d.getLength() THEN
         LET g_detail_idx = g_xmdl7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdl7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdl7_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.init" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adbt540_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdkstus','13','N,Y,S,A,D,R,W,UH,H,Z,X')
 
      CALL cl_set_combo_scc('xmdk000','2077') 
   CALL cl_set_combo_scc('xmdk002','2063') 
   CALL cl_set_combo_scc('xmdl007','2055') 
   CALL cl_set_combo_scc('xmdl042','2067') 
   CALL cl_set_combo_scc('rtie001','8310') 
   CALL cl_set_combo_scc('xmdl216','6013') 
   CALL cl_set_combo_scc('xmdl219','6064') 
   CALL cl_set_combo_scc('rtic001','6707') 
   CALL cl_set_combo_scc('rtic002','6708') 
   CALL cl_set_combo_scc('rtic006','6564') 
   CALL cl_set_combo_scc('rtic007','6565') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL adbt540_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="adbt540.input" ver="54" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION adbt540_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc, 
       g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207, 
       g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc, 
       g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039, 
       g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk014,g_xmdk_m.xmda026,g_xmdk_m.xmda026_desc, 
       g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033, 
       g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026, 
       g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk018, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc, 
       g_xmdk_m.xmdkpstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007, 
       xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019,xmdl020,xmdl013,xmdl207, 
       xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223,xmdl222,xmdl051,xmdl035,xmdl036, 
       xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022,xmdl023,xmdl034,xmdl041,xmdl088,xmdlseq, 
       xmdl208,xmdl209,xmdl210,xmdl025,xmdl026,xmdl211,xmdl027,xmdl029,xmdl028,xmdl087,xmdl024,xmdl042, 
       xmdl043,xmdl044,xmdl045,xmdl046,xmdlseq,xmdl212,xmdl200,xmdl201,xmdl202,xmdl203,xmdl030,xmdl031, 
       xmdl032,xmdl213,xmdl214,xmdlorga,xmdl215,xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit FROM xmdl_t  
       WHERE xmdlent=? AND xmdldocno=? AND xmdlseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xmdmsite,xmdmseq,xmdmseq1,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006, 
       xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014 FROM xmdm_t WHERE xmdment=?  
       AND xmdmdocno=? AND xmdmseq=? AND xmdmseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xrcdsite,xrcdld,xrcdseq,xrcd007,xrcd002,xrcdseq2,xrcd003,xrcd006,xrcd004, 
       xrcd104 FROM xrcd_t WHERE xrcdent=? AND xrcddocno=? AND xrcdld=? AND xrcdseq=? AND xrcdseq2=?  
       AND xrcd007=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtiesite,rtieseq,rtieseq1,rtie001,rtie002,rtie006 FROM rtie_t WHERE rtieent=?  
       AND rtiedocno=? AND rtieseq=? AND rtieseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
       rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019, 
       rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029,rticsite,rticunit  
       FROM rtic_t WHERE rticent=? AND rticdocno=? AND rticseq=? AND rticseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_bcl5 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adbt540_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adbt540_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno, 
       g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
       g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201,g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,g_xmdk_m.xmdk034, 
       g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029, 
       g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
       g_xmdk_m.xmda026,g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033, 
       g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="adbt540.input.body" ver="84" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION open_adbt540_01
            LET g_action_choice="open_adbt540_01"
            IF cl_auth_chk_act("open_adbt540_01") THEN
               
               #add-point:ON ACTION open_adbt540_01
               {<point name="input.detail_input.page1.open_adbt540_01" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt540_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt540_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adbt540_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xmdl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdl_d[l_ac].xmdlseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*  #BACKUP
               LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*  #BACKUP
               CALL adbt540_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adbt540_set_no_entry_b(l_cmd)
               IF NOT adbt540_lock_b("xmdl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt540_bcl INTO g_xmdl_d[l_ac].xmdlsite,g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001, 
                      g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003,g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005, 
                      g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007,g_xmdl_d[l_ac].xmdl226,g_xmdl_d[l_ac].xmdl008, 
                      g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033,g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205, 
                      g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018,g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020, 
                      g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl207,g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015, 
                      g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052,g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl225, 
                      g_xmdl_d[l_ac].xmdl224,g_xmdl_d[l_ac].xmdl223,g_xmdl_d[l_ac].xmdl222,g_xmdl_d[l_ac].xmdl051, 
                      g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036,g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl220, 
                      g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl011,g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl021, 
                      g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl023,g_xmdl_d[l_ac].xmdl034,g_xmdl_d[l_ac].xmdl041, 
                      g_xmdl_d[l_ac].xmdl088,g_xmdl2_d[l_ac].xmdlseq,g_xmdl2_d[l_ac].xmdl208,g_xmdl2_d[l_ac].xmdl209, 
                      g_xmdl2_d[l_ac].xmdl210,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026,g_xmdl2_d[l_ac].xmdl211, 
                      g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028,g_xmdl2_d[l_ac].xmdl087, 
                      g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043,g_xmdl2_d[l_ac].xmdl044, 
                      g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl6_d[l_ac].xmdlseq,g_xmdl6_d[l_ac].xmdl212, 
                      g_xmdl6_d[l_ac].xmdl200,g_xmdl6_d[l_ac].xmdl201,g_xmdl6_d[l_ac].xmdl202,g_xmdl6_d[l_ac].xmdl203, 
                      g_xmdl6_d[l_ac].xmdl030,g_xmdl6_d[l_ac].xmdl031,g_xmdl6_d[l_ac].xmdl032,g_xmdl6_d[l_ac].xmdl213, 
                      g_xmdl6_d[l_ac].xmdl214,g_xmdl6_d[l_ac].xmdlorga,g_xmdl6_d[l_ac].xmdl215,g_xmdl6_d[l_ac].xmdl216, 
                      g_xmdl6_d[l_ac].xmdl217,g_xmdl6_d[l_ac].xmdl218,g_xmdl6_d[l_ac].xmdl219,g_xmdl6_d[l_ac].xmdlunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdl_d_t.xmdlseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdl_d_mask_o[l_ac].* =  g_xmdl_d[l_ac].*
                  CALL adbt540_xmdl_t_mask()
                  LET g_xmdl_d_mask_n[l_ac].* =  g_xmdl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adbt540_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdl_d[l_ac].* TO NULL 
            INITIALIZE g_xmdl_d_t.* TO NULL 
            INITIALIZE g_xmdl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdl_d[l_ac].xmdl007 = "1"
      LET g_xmdl_d[l_ac].xmdl205 = "0"
      LET g_xmdl_d[l_ac].xmdl018 = "0"
      LET g_xmdl_d[l_ac].xmdl020 = "0"
      LET g_xmdl_d[l_ac].xmdl013 = "N"
      LET g_xmdl_d[l_ac].xmdl207 = "N"
      LET g_xmdl_d[l_ac].xmdl035 = "0"
      LET g_xmdl_d[l_ac].xmdl036 = "0"
      LET g_xmdl_d[l_ac].xmdl037 = "0"
      LET g_xmdl_d[l_ac].xmdl220 = "0"
      LET g_xmdl_d[l_ac].xmdl022 = "0"
      LET g_xmdl_d[l_ac].xmdl023 = "Y"
      LET g_xmdl_d[l_ac].xmdl041 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_xmdl_d_t.* = g_xmdl_d[l_ac].*     #新輸入資料
            LET g_xmdl_d_o.* = g_xmdl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt540_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adbt540_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdl_d[li_reproduce_target].* = g_xmdl_d[li_reproduce].*
               LET g_xmdl2_d[li_reproduce_target].* = g_xmdl2_d[li_reproduce].*
               LET g_xmdl6_d[li_reproduce_target].* = g_xmdl6_d[li_reproduce].*
 
               LET g_xmdl_d[li_reproduce_target].xmdlseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmdl_t 
             WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno
 
               AND xmdlseq = g_xmdl_d[l_ac].xmdlseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               CALL adbt540_insert_b('xmdl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xmdl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt540_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
            
               #刪除同層單身
               IF NOT adbt540_delete_b('xmdl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt540_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adbt540_key_delete_b(gs_keys,'xmdl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt540_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE adbt540_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_xmdl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlsite
            #add-point:BEFORE FIELD xmdlsite
            {<point name="input.b.page1.xmdlsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlsite
            
            #add-point:AFTER FIELD xmdlsite
            {<point name="input.a.page1.xmdlsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdlsite
            #add-point:ON CHANGE xmdlsite
            {<point name="input.g.page1.xmdlsite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdlseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdlseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdlseq
            END IF 
 
 
            #add-point:AFTER FIELD xmdlseq
            {<point name="input.a.page1.xmdlseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdlseq
            #add-point:BEFORE FIELD xmdlseq
            {<point name="input.b.page1.xmdlseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdlseq
            #add-point:ON CHANGE xmdlseq
            {<point name="input.g.page1.xmdlseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl001
            
            #add-point:AFTER FIELD xmdl001
            {<point name="input.a.page1.xmdl001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl001
            #add-point:BEFORE FIELD xmdl001
            {<point name="input.b.page1.xmdl001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl001
            #add-point:ON CHANGE xmdl001
            {<point name="input.g.page1.xmdl001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl002
            
            #add-point:AFTER FIELD xmdl002
            {<point name="input.a.page1.xmdl002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl002
            #add-point:BEFORE FIELD xmdl002
            {<point name="input.b.page1.xmdl002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl002
            #add-point:ON CHANGE xmdl002
            {<point name="input.g.page1.xmdl002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl003
            
            #add-point:AFTER FIELD xmdl003
            {<point name="input.a.page1.xmdl003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl003
            #add-point:BEFORE FIELD xmdl003
            {<point name="input.b.page1.xmdl003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl003
            #add-point:ON CHANGE xmdl003
            {<point name="input.g.page1.xmdl003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl004
            
            #add-point:AFTER FIELD xmdl004
            {<point name="input.a.page1.xmdl004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl004
            #add-point:BEFORE FIELD xmdl004
            {<point name="input.b.page1.xmdl004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl004
            #add-point:ON CHANGE xmdl004
            {<point name="input.g.page1.xmdl004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl005
            
            #add-point:AFTER FIELD xmdl005
            {<point name="input.a.page1.xmdl005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl005
            #add-point:BEFORE FIELD xmdl005
            {<point name="input.b.page1.xmdl005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl005
            #add-point:ON CHANGE xmdl005
            {<point name="input.g.page1.xmdl005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl006
            
            #add-point:AFTER FIELD xmdl006
            {<point name="input.a.page1.xmdl006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl006
            #add-point:BEFORE FIELD xmdl006
            {<point name="input.b.page1.xmdl006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl006
            #add-point:ON CHANGE xmdl006
            {<point name="input.g.page1.xmdl006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl007
            #add-point:BEFORE FIELD xmdl007
            {<point name="input.b.page1.xmdl007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl007
            
            #add-point:AFTER FIELD xmdl007
            {<point name="input.a.page1.xmdl007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl007
            #add-point:ON CHANGE xmdl007
            {<point name="input.g.page1.xmdl007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl226
            #add-point:BEFORE FIELD xmdl226
            {<point name="input.b.page1.xmdl226" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl226
            
            #add-point:AFTER FIELD xmdl226
            {<point name="input.a.page1.xmdl226" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl226
            #add-point:ON CHANGE xmdl226
            {<point name="input.g.page1.xmdl226" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl008
            
            #add-point:AFTER FIELD xmdl008
            {<point name="input.a.page1.xmdl008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl008
            #add-point:BEFORE FIELD xmdl008
            {<point name="input.b.page1.xmdl008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl008
            #add-point:ON CHANGE xmdl008
            {<point name="input.g.page1.xmdl008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl009
            #add-point:BEFORE FIELD xmdl009
            {<point name="input.b.page1.xmdl009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl009
            
            #add-point:AFTER FIELD xmdl009
            {<point name="input.a.page1.xmdl009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl009
            #add-point:ON CHANGE xmdl009
            {<point name="input.g.page1.xmdl009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl033
            
            #add-point:AFTER FIELD xmdl033
            {<point name="input.a.page1.xmdl033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl033
            #add-point:BEFORE FIELD xmdl033
            {<point name="input.b.page1.xmdl033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl033
            #add-point:ON CHANGE xmdl033
            {<point name="input.g.page1.xmdl033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl204
            
            #add-point:AFTER FIELD xmdl204
            {<point name="input.a.page1.xmdl204" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl204
            #add-point:BEFORE FIELD xmdl204
            {<point name="input.b.page1.xmdl204" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl204
            #add-point:ON CHANGE xmdl204
            {<point name="input.g.page1.xmdl204" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl205
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl205,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl205
            END IF 
 
 
            #add-point:AFTER FIELD xmdl205
            {<point name="input.a.page1.xmdl205" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl205
            #add-point:BEFORE FIELD xmdl205
            {<point name="input.b.page1.xmdl205" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl205
            #add-point:ON CHANGE xmdl205
            {<point name="input.g.page1.xmdl205" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl017
            
            #add-point:AFTER FIELD xmdl017
            {<point name="input.a.page1.xmdl017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl017
            #add-point:BEFORE FIELD xmdl017
            {<point name="input.b.page1.xmdl017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl017
            #add-point:ON CHANGE xmdl017
            {<point name="input.g.page1.xmdl017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl018
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl018,"0","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl018
            END IF 
 
 
            #add-point:AFTER FIELD xmdl018
            {<point name="input.a.page1.xmdl018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl018
            #add-point:BEFORE FIELD xmdl018
            {<point name="input.b.page1.xmdl018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl018
            #add-point:ON CHANGE xmdl018
            {<point name="input.g.page1.xmdl018" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl019
            
            #add-point:AFTER FIELD xmdl019
            {<point name="input.a.page1.xmdl019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl019
            #add-point:BEFORE FIELD xmdl019
            {<point name="input.b.page1.xmdl019" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl019
            #add-point:ON CHANGE xmdl019
            {<point name="input.g.page1.xmdl019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl020
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl020,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl020
            END IF 
 
 
            #add-point:AFTER FIELD xmdl020
            {<point name="input.a.page1.xmdl020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl020
            #add-point:BEFORE FIELD xmdl020
            {<point name="input.b.page1.xmdl020" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl020
            #add-point:ON CHANGE xmdl020
            {<point name="input.g.page1.xmdl020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl013
            #add-point:BEFORE FIELD xmdl013
            {<point name="input.b.page1.xmdl013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl013
            
            #add-point:AFTER FIELD xmdl013
            {<point name="input.a.page1.xmdl013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl013
            #add-point:ON CHANGE xmdl013
            {<point name="input.g.page1.xmdl013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl207
            #add-point:BEFORE FIELD xmdl207
            {<point name="input.b.page1.xmdl207" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl207
            
            #add-point:AFTER FIELD xmdl207
            {<point name="input.a.page1.xmdl207" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl207
            #add-point:ON CHANGE xmdl207
            {<point name="input.g.page1.xmdl207" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl014
            
            #add-point:AFTER FIELD xmdl014
            {<point name="input.a.page1.xmdl014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl014
            #add-point:BEFORE FIELD xmdl014
            {<point name="input.b.page1.xmdl014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl014
            #add-point:ON CHANGE xmdl014
            {<point name="input.g.page1.xmdl014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl015
            
            #add-point:AFTER FIELD xmdl015
            {<point name="input.a.page1.xmdl015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl015
            #add-point:BEFORE FIELD xmdl015
            {<point name="input.b.page1.xmdl015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl015
            #add-point:ON CHANGE xmdl015
            {<point name="input.g.page1.xmdl015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl016
            
            #add-point:AFTER FIELD xmdl016
            {<point name="input.a.page1.xmdl016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl016
            #add-point:BEFORE FIELD xmdl016
            {<point name="input.b.page1.xmdl016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl016
            #add-point:ON CHANGE xmdl016
            {<point name="input.g.page1.xmdl016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl052
            #add-point:BEFORE FIELD xmdl052
            {<point name="input.b.page1.xmdl052" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl052
            
            #add-point:AFTER FIELD xmdl052
            {<point name="input.a.page1.xmdl052" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl052
            #add-point:ON CHANGE xmdl052
            {<point name="input.g.page1.xmdl052" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl050
            
            #add-point:AFTER FIELD xmdl050
            {<point name="input.a.page1.xmdl050" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl050
            #add-point:BEFORE FIELD xmdl050
            {<point name="input.b.page1.xmdl050" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl050
            #add-point:ON CHANGE xmdl050
            {<point name="input.g.page1.xmdl050" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl225
            
            #add-point:AFTER FIELD xmdl225
            {<point name="input.a.page1.xmdl225" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl225
            #add-point:BEFORE FIELD xmdl225
            {<point name="input.b.page1.xmdl225" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl225
            #add-point:ON CHANGE xmdl225
            {<point name="input.g.page1.xmdl225" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl224
            
            #add-point:AFTER FIELD xmdl224
            {<point name="input.a.page1.xmdl224" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl224
            #add-point:BEFORE FIELD xmdl224
            {<point name="input.b.page1.xmdl224" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl224
            #add-point:ON CHANGE xmdl224
            {<point name="input.g.page1.xmdl224" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl223
            
            #add-point:AFTER FIELD xmdl223
            {<point name="input.a.page1.xmdl223" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl223
            #add-point:BEFORE FIELD xmdl223
            {<point name="input.b.page1.xmdl223" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl223
            #add-point:ON CHANGE xmdl223
            {<point name="input.g.page1.xmdl223" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl222
            
            #add-point:AFTER FIELD xmdl222
            {<point name="input.a.page1.xmdl222" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl222
            #add-point:BEFORE FIELD xmdl222
            {<point name="input.b.page1.xmdl222" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl222
            #add-point:ON CHANGE xmdl222
            {<point name="input.g.page1.xmdl222" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl051
            #add-point:BEFORE FIELD xmdl051
            {<point name="input.b.page1.xmdl051" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl051
            
            #add-point:AFTER FIELD xmdl051
            {<point name="input.a.page1.xmdl051" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl051
            #add-point:ON CHANGE xmdl051
            {<point name="input.g.page1.xmdl051" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl035
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl035,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl035
            END IF 
 
 
            #add-point:AFTER FIELD xmdl035
            {<point name="input.a.page1.xmdl035" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl035
            #add-point:BEFORE FIELD xmdl035
            {<point name="input.b.page1.xmdl035" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl035
            #add-point:ON CHANGE xmdl035
            {<point name="input.g.page1.xmdl035" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl036
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl036,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl036
            END IF 
 
 
            #add-point:AFTER FIELD xmdl036
            {<point name="input.a.page1.xmdl036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl036
            #add-point:BEFORE FIELD xmdl036
            {<point name="input.b.page1.xmdl036" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl036
            #add-point:ON CHANGE xmdl036
            {<point name="input.g.page1.xmdl036" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl037
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl037,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdl037
            END IF 
 
 
            #add-point:AFTER FIELD xmdl037
            {<point name="input.a.page1.xmdl037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl037
            #add-point:BEFORE FIELD xmdl037
            {<point name="input.b.page1.xmdl037" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl037
            #add-point:ON CHANGE xmdl037
            {<point name="input.g.page1.xmdl037" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl220
            #add-point:BEFORE FIELD xmdl220
            {<point name="input.b.page1.xmdl220" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl220
            
            #add-point:AFTER FIELD xmdl220
            {<point name="input.a.page1.xmdl220" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl220
            #add-point:ON CHANGE xmdl220
            {<point name="input.g.page1.xmdl220" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl010
            #add-point:BEFORE FIELD xmdl010
            {<point name="input.b.page1.xmdl010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl010
            
            #add-point:AFTER FIELD xmdl010
            {<point name="input.a.page1.xmdl010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl010
            #add-point:ON CHANGE xmdl010
            {<point name="input.g.page1.xmdl010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl011
            #add-point:BEFORE FIELD xmdl011
            {<point name="input.b.page1.xmdl011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl011
            
            #add-point:AFTER FIELD xmdl011
            {<point name="input.a.page1.xmdl011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl011
            #add-point:ON CHANGE xmdl011
            {<point name="input.g.page1.xmdl011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl012
            #add-point:BEFORE FIELD xmdl012
            {<point name="input.b.page1.xmdl012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl012
            
            #add-point:AFTER FIELD xmdl012
            {<point name="input.a.page1.xmdl012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl012
            #add-point:ON CHANGE xmdl012
            {<point name="input.g.page1.xmdl012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl021
            
            #add-point:AFTER FIELD xmdl021
            {<point name="input.a.page1.xmdl021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl021
            #add-point:BEFORE FIELD xmdl021
            {<point name="input.b.page1.xmdl021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl021
            #add-point:ON CHANGE xmdl021
            {<point name="input.g.page1.xmdl021" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl022
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdl_d[l_ac].xmdl022,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmdl022
            END IF 
 
 
            #add-point:AFTER FIELD xmdl022
            {<point name="input.a.page1.xmdl022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl022
            #add-point:BEFORE FIELD xmdl022
            {<point name="input.b.page1.xmdl022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl022
            #add-point:ON CHANGE xmdl022
            {<point name="input.g.page1.xmdl022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl023
            #add-point:BEFORE FIELD xmdl023
            {<point name="input.b.page1.xmdl023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl023
            
            #add-point:AFTER FIELD xmdl023
            {<point name="input.a.page1.xmdl023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl023
            #add-point:ON CHANGE xmdl023
            {<point name="input.g.page1.xmdl023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl034
            #add-point:BEFORE FIELD xmdl034
            {<point name="input.b.page1.xmdl034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl034
            
            #add-point:AFTER FIELD xmdl034
            {<point name="input.a.page1.xmdl034" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl034
            #add-point:ON CHANGE xmdl034
            {<point name="input.g.page1.xmdl034" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl041
            #add-point:BEFORE FIELD xmdl041
            {<point name="input.b.page1.xmdl041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl041
            
            #add-point:AFTER FIELD xmdl041
            {<point name="input.a.page1.xmdl041" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl041
            #add-point:ON CHANGE xmdl041
            {<point name="input.g.page1.xmdl041" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdl088
            #add-point:BEFORE FIELD xmdl088
            {<point name="input.b.page1.xmdl088" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdl088
            
            #add-point:AFTER FIELD xmdl088
            {<point name="input.a.page1.xmdl088" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdl088
            #add-point:ON CHANGE xmdl088
            {<point name="input.g.page1.xmdl088" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xmdlsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlsite
            #add-point:ON ACTION controlp INFIELD xmdlsite
            {<point name="input.c.page1.xmdlsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdlseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdlseq
            #add-point:ON ACTION controlp INFIELD xmdlseq
            {<point name="input.c.page1.xmdlseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl001
            #add-point:ON ACTION controlp INFIELD xmdl001
            {<point name="input.c.page1.xmdl001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl002
            #add-point:ON ACTION controlp INFIELD xmdl002
            {<point name="input.c.page1.xmdl002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl003
            #add-point:ON ACTION controlp INFIELD xmdl003
            {<point name="input.c.page1.xmdl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl004
            #add-point:ON ACTION controlp INFIELD xmdl004
            {<point name="input.c.page1.xmdl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl005
            #add-point:ON ACTION controlp INFIELD xmdl005
            {<point name="input.c.page1.xmdl005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl006
            #add-point:ON ACTION controlp INFIELD xmdl006
            {<point name="input.c.page1.xmdl006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl007
            #add-point:ON ACTION controlp INFIELD xmdl007
            {<point name="input.c.page1.xmdl007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl226
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl226
            #add-point:ON ACTION controlp INFIELD xmdl226
            {<point name="input.c.page1.xmdl226" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl008
            #add-point:ON ACTION controlp INFIELD xmdl008
            {<point name="input.c.page1.xmdl008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl009
            #add-point:ON ACTION controlp INFIELD xmdl009
            {<point name="input.c.page1.xmdl009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl033
            #add-point:ON ACTION controlp INFIELD xmdl033
            {<point name="input.c.page1.xmdl033" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl204
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl204
            #add-point:ON ACTION controlp INFIELD xmdl204
            {<point name="input.c.page1.xmdl204" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl205
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl205
            #add-point:ON ACTION controlp INFIELD xmdl205
            {<point name="input.c.page1.xmdl205" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl017
            #add-point:ON ACTION controlp INFIELD xmdl017
            {<point name="input.c.page1.xmdl017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl018
            #add-point:ON ACTION controlp INFIELD xmdl018
            {<point name="input.c.page1.xmdl018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl019
            #add-point:ON ACTION controlp INFIELD xmdl019
            {<point name="input.c.page1.xmdl019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl020
            #add-point:ON ACTION controlp INFIELD xmdl020
            {<point name="input.c.page1.xmdl020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl013
            #add-point:ON ACTION controlp INFIELD xmdl013
            {<point name="input.c.page1.xmdl013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl207
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl207
            #add-point:ON ACTION controlp INFIELD xmdl207
            {<point name="input.c.page1.xmdl207" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl014
            #add-point:ON ACTION controlp INFIELD xmdl014
            {<point name="input.c.page1.xmdl014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl015
            #add-point:ON ACTION controlp INFIELD xmdl015
            {<point name="input.c.page1.xmdl015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl016
            #add-point:ON ACTION controlp INFIELD xmdl016
            {<point name="input.c.page1.xmdl016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl052
            #add-point:ON ACTION controlp INFIELD xmdl052
            {<point name="input.c.page1.xmdl052" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl050
            #add-point:ON ACTION controlp INFIELD xmdl050
            {<point name="input.c.page1.xmdl050" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl225
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl225
            #add-point:ON ACTION controlp INFIELD xmdl225
            {<point name="input.c.page1.xmdl225" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl224
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl224
            #add-point:ON ACTION controlp INFIELD xmdl224
            {<point name="input.c.page1.xmdl224" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl223
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl223
            #add-point:ON ACTION controlp INFIELD xmdl223
            {<point name="input.c.page1.xmdl223" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl222
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl222
            #add-point:ON ACTION controlp INFIELD xmdl222
            {<point name="input.c.page1.xmdl222" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl051
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl051
            #add-point:ON ACTION controlp INFIELD xmdl051
            {<point name="input.c.page1.xmdl051" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl035
            #add-point:ON ACTION controlp INFIELD xmdl035
            {<point name="input.c.page1.xmdl035" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl036
            #add-point:ON ACTION controlp INFIELD xmdl036
            {<point name="input.c.page1.xmdl036" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl037
            #add-point:ON ACTION controlp INFIELD xmdl037
            {<point name="input.c.page1.xmdl037" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl220
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl220
            #add-point:ON ACTION controlp INFIELD xmdl220
            {<point name="input.c.page1.xmdl220" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl010
            #add-point:ON ACTION controlp INFIELD xmdl010
            {<point name="input.c.page1.xmdl010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl011
            #add-point:ON ACTION controlp INFIELD xmdl011
            {<point name="input.c.page1.xmdl011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl012
            #add-point:ON ACTION controlp INFIELD xmdl012
            {<point name="input.c.page1.xmdl012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl021
            #add-point:ON ACTION controlp INFIELD xmdl021
            {<point name="input.c.page1.xmdl021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl022
            #add-point:ON ACTION controlp INFIELD xmdl022
            {<point name="input.c.page1.xmdl022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl023
            #add-point:ON ACTION controlp INFIELD xmdl023
            {<point name="input.c.page1.xmdl023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl034
            #add-point:ON ACTION controlp INFIELD xmdl034
            {<point name="input.c.page1.xmdl034" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl041
            #add-point:ON ACTION controlp INFIELD xmdl041
            {<point name="input.c.page1.xmdl041" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xmdl088
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdl088
            #add-point:ON ACTION controlp INFIELD xmdl088
            {<point name="input.c.page1.xmdl088" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
               CLOSE adbt540_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdl_d[l_ac].xmdlseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL adbt540_xmdl_t_mask_restore('restore_mask_o')
      
               UPDATE xmdl_t SET (xmdldocno,xmdlsite,xmdlseq,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005, 
                   xmdl006,xmdl007,xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019, 
                   xmdl020,xmdl013,xmdl207,xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223, 
                   xmdl222,xmdl051,xmdl035,xmdl036,xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022, 
                   xmdl023,xmdl034,xmdl041,xmdl088,xmdl208,xmdl209,xmdl210,xmdl025,xmdl026,xmdl211,xmdl027, 
                   xmdl029,xmdl028,xmdl087,xmdl024,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl212,xmdl200, 
                   xmdl201,xmdl202,xmdl203,xmdl030,xmdl031,xmdl032,xmdl213,xmdl214,xmdlorga,xmdl215, 
                   xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit) = (g_xmdk_m.xmdkdocno,g_xmdl_d[l_ac].xmdlsite, 
                   g_xmdl_d[l_ac].xmdlseq,g_xmdl_d[l_ac].xmdl001,g_xmdl_d[l_ac].xmdl002,g_xmdl_d[l_ac].xmdl003, 
                   g_xmdl_d[l_ac].xmdl004,g_xmdl_d[l_ac].xmdl005,g_xmdl_d[l_ac].xmdl006,g_xmdl_d[l_ac].xmdl007, 
                   g_xmdl_d[l_ac].xmdl226,g_xmdl_d[l_ac].xmdl008,g_xmdl_d[l_ac].xmdl009,g_xmdl_d[l_ac].xmdl033, 
                   g_xmdl_d[l_ac].xmdl204,g_xmdl_d[l_ac].xmdl205,g_xmdl_d[l_ac].xmdl017,g_xmdl_d[l_ac].xmdl018, 
                   g_xmdl_d[l_ac].xmdl019,g_xmdl_d[l_ac].xmdl020,g_xmdl_d[l_ac].xmdl013,g_xmdl_d[l_ac].xmdl207, 
                   g_xmdl_d[l_ac].xmdl014,g_xmdl_d[l_ac].xmdl015,g_xmdl_d[l_ac].xmdl016,g_xmdl_d[l_ac].xmdl052, 
                   g_xmdl_d[l_ac].xmdl050,g_xmdl_d[l_ac].xmdl225,g_xmdl_d[l_ac].xmdl224,g_xmdl_d[l_ac].xmdl223, 
                   g_xmdl_d[l_ac].xmdl222,g_xmdl_d[l_ac].xmdl051,g_xmdl_d[l_ac].xmdl035,g_xmdl_d[l_ac].xmdl036, 
                   g_xmdl_d[l_ac].xmdl037,g_xmdl_d[l_ac].xmdl220,g_xmdl_d[l_ac].xmdl010,g_xmdl_d[l_ac].xmdl011, 
                   g_xmdl_d[l_ac].xmdl012,g_xmdl_d[l_ac].xmdl021,g_xmdl_d[l_ac].xmdl022,g_xmdl_d[l_ac].xmdl023, 
                   g_xmdl_d[l_ac].xmdl034,g_xmdl_d[l_ac].xmdl041,g_xmdl_d[l_ac].xmdl088,g_xmdl2_d[l_ac].xmdl208, 
                   g_xmdl2_d[l_ac].xmdl209,g_xmdl2_d[l_ac].xmdl210,g_xmdl2_d[l_ac].xmdl025,g_xmdl2_d[l_ac].xmdl026, 
                   g_xmdl2_d[l_ac].xmdl211,g_xmdl2_d[l_ac].xmdl027,g_xmdl2_d[l_ac].xmdl029,g_xmdl2_d[l_ac].xmdl028, 
                   g_xmdl2_d[l_ac].xmdl087,g_xmdl2_d[l_ac].xmdl024,g_xmdl2_d[l_ac].xmdl042,g_xmdl2_d[l_ac].xmdl043, 
                   g_xmdl2_d[l_ac].xmdl044,g_xmdl2_d[l_ac].xmdl045,g_xmdl2_d[l_ac].xmdl046,g_xmdl6_d[l_ac].xmdl212, 
                   g_xmdl6_d[l_ac].xmdl200,g_xmdl6_d[l_ac].xmdl201,g_xmdl6_d[l_ac].xmdl202,g_xmdl6_d[l_ac].xmdl203, 
                   g_xmdl6_d[l_ac].xmdl030,g_xmdl6_d[l_ac].xmdl031,g_xmdl6_d[l_ac].xmdl032,g_xmdl6_d[l_ac].xmdl213, 
                   g_xmdl6_d[l_ac].xmdl214,g_xmdl6_d[l_ac].xmdlorga,g_xmdl6_d[l_ac].xmdl215,g_xmdl6_d[l_ac].xmdl216, 
                   g_xmdl6_d[l_ac].xmdl217,g_xmdl6_d[l_ac].xmdl218,g_xmdl6_d[l_ac].xmdl219,g_xmdl6_d[l_ac].xmdlunit) 

                WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdk_m.xmdkdocno 
 
                  AND xmdlseq = g_xmdl_d_t.xmdlseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdl_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_xmdl_d[l_ac].* = g_xmdl_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmdk_m.xmdkdocno
               LET gs_keys_bak[1] = g_xmdkdocno_t
               LET gs_keys[2] = g_xmdl_d[g_detail_idx].xmdlseq
               LET gs_keys_bak[2] = g_xmdl_d_t.xmdlseq
               CALL adbt540_update_b('xmdl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL adbt540_xmdl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdl_d[g_detail_idx].xmdlseq = g_xmdl_d_t.xmdlseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmdk_m.xmdkdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdl_d_t.xmdlseq
 
                  CALL adbt540_key_update_b(gs_keys,'xmdl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m),util.JSON.stringify(g_xmdl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adbt540_unlock_b("xmdl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xmdl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xmdl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL adbt540_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作
            {<point name="input.body3.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL adbt540_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為
         {<point name="input.body3.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL adbt540_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page5, before row動作
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL adbt540_idx_chk()
            LET g_current_page = 5
      
         #add-point:page5自定義行為
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            LET g_detail_idx = l_ac
            
            #add-point:page6, before row動作
            {<point name="input.body6.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            CALL adbt540_idx_chk()
            LET g_current_page = 6
      
         #add-point:page6自定義行為
         {<point name="input.body6.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdl7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt540_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            LET g_detail_idx = l_ac
            
            #add-point:page7, before row動作
            {<point name="input.body7.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            CALL adbt540_idx_chk()
            LET g_current_page = 7
      
         #add-point:page7自定義行為
         {<point name="input.body7.action"/>}
         #end add-point
      
      END DISPLAY
 
 
]]>
  </section>
  <section id="adbt540.input.head" ver="60" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno, 
          g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
          g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201,g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009, 
          g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,g_xmdk_m.xmdk034, 
          g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029, 
          g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010, 
          g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
          g_xmdk_m.xmda026,g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033, 
          g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022, 
          g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
          g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt540_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adbt540_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL adbt540_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL adbt540_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk000
            #add-point:BEFORE FIELD xmdk000
            {<point name="input.b.xmdk000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk000
            
            #add-point:AFTER FIELD xmdk000
            {<point name="input.a.xmdk000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk000
            #add-point:ON CHANGE xmdk000
            {<point name="input.g.xmdk000" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdksite
            
            #add-point:AFTER FIELD xmdksite
            {<point name="input.a.xmdksite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdksite
            #add-point:BEFORE FIELD xmdksite
            {<point name="input.b.xmdksite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdksite
            #add-point:ON CHANGE xmdksite
            {<point name="input.g.xmdksite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkdocdt
            #add-point:BEFORE FIELD xmdkdocdt
            {<point name="input.b.xmdkdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkdocdt
            
            #add-point:AFTER FIELD xmdkdocdt
            {<point name="input.a.xmdkdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdkdocdt
            #add-point:ON CHANGE xmdkdocdt
            {<point name="input.g.xmdkdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk001
            #add-point:BEFORE FIELD xmdk001
            {<point name="input.b.xmdk001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk001
            
            #add-point:AFTER FIELD xmdk001
            {<point name="input.a.xmdk001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk001
            #add-point:ON CHANGE xmdk001
            {<point name="input.g.xmdk001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkdocno
            #add-point:BEFORE FIELD xmdkdocno
            {<point name="input.b.xmdkdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkdocno
            
            #add-point:AFTER FIELD xmdkdocno
            {<point name="input.a.xmdkdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdkdocno
            #add-point:ON CHANGE xmdkdocno
            {<point name="input.g.xmdkdocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk005
            
            #add-point:AFTER FIELD xmdk005
            {<point name="input.a.xmdk005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk005
            #add-point:BEFORE FIELD xmdk005
            {<point name="input.b.xmdk005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk005
            #add-point:ON CHANGE xmdk005
            {<point name="input.g.xmdk005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk006
            
            #add-point:AFTER FIELD xmdk006
            {<point name="input.a.xmdk006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk006
            #add-point:BEFORE FIELD xmdk006
            {<point name="input.b.xmdk006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk006
            #add-point:ON CHANGE xmdk006
            {<point name="input.g.xmdk006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk002
            #add-point:BEFORE FIELD xmdk002
            {<point name="input.b.xmdk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk002
            
            #add-point:AFTER FIELD xmdk002
            {<point name="input.a.xmdk002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk002
            #add-point:ON CHANGE xmdk002
            {<point name="input.g.xmdk002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk003
            
            #add-point:AFTER FIELD xmdk003
            {<point name="input.a.xmdk003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk003
            #add-point:BEFORE FIELD xmdk003
            {<point name="input.b.xmdk003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk003
            #add-point:ON CHANGE xmdk003
            {<point name="input.g.xmdk003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk004
            
            #add-point:AFTER FIELD xmdk004
            {<point name="input.a.xmdk004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk004
            #add-point:BEFORE FIELD xmdk004
            {<point name="input.b.xmdk004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk004
            #add-point:ON CHANGE xmdk004
            {<point name="input.g.xmdk004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkstus
            #add-point:BEFORE FIELD xmdkstus
            {<point name="input.b.xmdkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkstus
            
            #add-point:AFTER FIELD xmdkstus
            {<point name="input.a.xmdkstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdkstus
            #add-point:ON CHANGE xmdkstus
            {<point name="input.g.xmdkstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk007
            
            #add-point:AFTER FIELD xmdk007
            {<point name="input.a.xmdk007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk007
            #add-point:BEFORE FIELD xmdk007
            {<point name="input.b.xmdk007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk007
            #add-point:ON CHANGE xmdk007
            {<point name="input.g.xmdk007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk200
            
            #add-point:AFTER FIELD xmdk200
            {<point name="input.a.xmdk200" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk200
            #add-point:BEFORE FIELD xmdk200
            {<point name="input.b.xmdk200" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk200
            #add-point:ON CHANGE xmdk200
            {<point name="input.g.xmdk200" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk201
            
            #add-point:AFTER FIELD xmdk201
            {<point name="input.a.xmdk201" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk201
            #add-point:BEFORE FIELD xmdk201
            {<point name="input.b.xmdk201" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk201
            #add-point:ON CHANGE xmdk201
            {<point name="input.g.xmdk201" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk207
            
            #add-point:AFTER FIELD xmdk207
            {<point name="input.a.xmdk207" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk207
            #add-point:BEFORE FIELD xmdk207
            {<point name="input.b.xmdk207" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk207
            #add-point:ON CHANGE xmdk207
            {<point name="input.g.xmdk207" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk030
            
            #add-point:AFTER FIELD xmdk030
            {<point name="input.a.xmdk030" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk030
            #add-point:BEFORE FIELD xmdk030
            {<point name="input.b.xmdk030" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk030
            #add-point:ON CHANGE xmdk030
            {<point name="input.g.xmdk030" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk009
            
            #add-point:AFTER FIELD xmdk009
            {<point name="input.a.xmdk009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk009
            #add-point:BEFORE FIELD xmdk009
            {<point name="input.b.xmdk009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk009
            #add-point:ON CHANGE xmdk009
            {<point name="input.g.xmdk009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk021
            
            #add-point:AFTER FIELD xmdk021
            {<point name="input.a.xmdk021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk021
            #add-point:BEFORE FIELD xmdk021
            {<point name="input.b.xmdk021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk021
            #add-point:ON CHANGE xmdk021
            {<point name="input.g.xmdk021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk021_address
            #add-point:BEFORE FIELD xmdk021_address
            {<point name="input.b.xmdk021_address" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk021_address
            
            #add-point:AFTER FIELD xmdk021_address
            {<point name="input.a.xmdk021_address" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk021_address
            #add-point:ON CHANGE xmdk021_address
            {<point name="input.g.xmdk021_address" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk205
            
            #add-point:AFTER FIELD xmdk205
            {<point name="input.a.xmdk205" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk205
            #add-point:BEFORE FIELD xmdk205
            {<point name="input.b.xmdk205" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk205
            #add-point:ON CHANGE xmdk205
            {<point name="input.g.xmdk205" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk206
            
            #add-point:AFTER FIELD xmdk206
            {<point name="input.a.xmdk206" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk206
            #add-point:BEFORE FIELD xmdk206
            {<point name="input.b.xmdk206" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk206
            #add-point:ON CHANGE xmdk206
            {<point name="input.g.xmdk206" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk034
            
            #add-point:AFTER FIELD xmdk034
            {<point name="input.a.xmdk034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk034
            #add-point:BEFORE FIELD xmdk034
            {<point name="input.b.xmdk034" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk034
            #add-point:ON CHANGE xmdk034
            {<point name="input.g.xmdk034" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk039
            
            #add-point:AFTER FIELD xmdk039
            {<point name="input.a.xmdk039" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk039
            #add-point:BEFORE FIELD xmdk039
            {<point name="input.b.xmdk039" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk039
            #add-point:ON CHANGE xmdk039
            {<point name="input.g.xmdk039" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk040
            
            #add-point:AFTER FIELD xmdk040
            {<point name="input.a.xmdk040" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk040
            #add-point:BEFORE FIELD xmdk040
            {<point name="input.b.xmdk040" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk040
            #add-point:ON CHANGE xmdk040
            {<point name="input.g.xmdk040" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk054
            #add-point:BEFORE FIELD xmdk054
            {<point name="input.b.xmdk054" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk054
            
            #add-point:AFTER FIELD xmdk054
            {<point name="input.a.xmdk054" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk054
            #add-point:ON CHANGE xmdk054
            {<point name="input.g.xmdk054" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk032
            #add-point:BEFORE FIELD xmdk032
            {<point name="input.b.xmdk032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk032
            
            #add-point:AFTER FIELD xmdk032
            {<point name="input.a.xmdk032" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk032
            #add-point:ON CHANGE xmdk032
            {<point name="input.g.xmdk032" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk028
            #add-point:BEFORE FIELD xmdk028
            {<point name="input.b.xmdk028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk028
            
            #add-point:AFTER FIELD xmdk028
            {<point name="input.a.xmdk028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk028
            #add-point:ON CHANGE xmdk028
            {<point name="input.g.xmdk028" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk029
            #add-point:BEFORE FIELD xmdk029
            {<point name="input.b.xmdk029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk029
            
            #add-point:AFTER FIELD xmdk029
            {<point name="input.a.xmdk029" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk029
            #add-point:ON CHANGE xmdk029
            {<point name="input.g.xmdk029" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk008
            
            #add-point:AFTER FIELD xmdk008
            {<point name="input.a.xmdk008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk008
            #add-point:BEFORE FIELD xmdk008
            {<point name="input.b.xmdk008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk008
            #add-point:ON CHANGE xmdk008
            {<point name="input.g.xmdk008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk202
            
            #add-point:AFTER FIELD xmdk202
            {<point name="input.a.xmdk202" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk202
            #add-point:BEFORE FIELD xmdk202
            {<point name="input.b.xmdk202" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk202
            #add-point:ON CHANGE xmdk202
            {<point name="input.g.xmdk202" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk015
            
            #add-point:AFTER FIELD xmdk015
            {<point name="input.a.xmdk015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk015
            #add-point:BEFORE FIELD xmdk015
            {<point name="input.b.xmdk015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk015
            #add-point:ON CHANGE xmdk015
            {<point name="input.g.xmdk015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk037
            #add-point:BEFORE FIELD xmdk037
            {<point name="input.b.xmdk037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk037
            
            #add-point:AFTER FIELD xmdk037
            {<point name="input.a.xmdk037" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk037
            #add-point:ON CHANGE xmdk037
            {<point name="input.g.xmdk037" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk214
            #add-point:BEFORE FIELD xmdk214
            {<point name="input.b.xmdk214" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk214
            
            #add-point:AFTER FIELD xmdk214
            {<point name="input.a.xmdk214" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk214
            #add-point:ON CHANGE xmdk214
            {<point name="input.g.xmdk214" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk010
            
            #add-point:AFTER FIELD xmdk010
            {<point name="input.a.xmdk010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk010
            #add-point:BEFORE FIELD xmdk010
            {<point name="input.b.xmdk010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk010
            #add-point:ON CHANGE xmdk010
            {<point name="input.g.xmdk010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk011
            
            #add-point:AFTER FIELD xmdk011
            {<point name="input.a.xmdk011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk011
            #add-point:BEFORE FIELD xmdk011
            {<point name="input.b.xmdk011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk011
            #add-point:ON CHANGE xmdk011
            {<point name="input.g.xmdk011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk016
            
            #add-point:AFTER FIELD xmdk016
            {<point name="input.a.xmdk016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk016
            #add-point:BEFORE FIELD xmdk016
            {<point name="input.b.xmdk016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk016
            #add-point:ON CHANGE xmdk016
            {<point name="input.g.xmdk016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk017
            #add-point:BEFORE FIELD xmdk017
            {<point name="input.b.xmdk017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk017
            
            #add-point:AFTER FIELD xmdk017
            {<point name="input.a.xmdk017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk017
            #add-point:ON CHANGE xmdk017
            {<point name="input.g.xmdk017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk012
            
            #add-point:AFTER FIELD xmdk012
            {<point name="input.a.xmdk012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk012
            #add-point:BEFORE FIELD xmdk012
            {<point name="input.b.xmdk012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk012
            #add-point:ON CHANGE xmdk012
            {<point name="input.g.xmdk012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk013
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdk_m.xmdk013,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xmdk013
            END IF 
 
 
            #add-point:AFTER FIELD xmdk013
            {<point name="input.a.xmdk013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk013
            #add-point:BEFORE FIELD xmdk013
            {<point name="input.b.xmdk013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk013
            #add-point:ON CHANGE xmdk013
            {<point name="input.g.xmdk013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk014
            #add-point:BEFORE FIELD xmdk014
            {<point name="input.b.xmdk014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk014
            
            #add-point:AFTER FIELD xmdk014
            {<point name="input.a.xmdk014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk014
            #add-point:ON CHANGE xmdk014
            {<point name="input.g.xmdk014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026
            {<point name="input.a.xmda026" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026
            {<point name="input.b.xmda026" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda026
            #add-point:ON CHANGE xmda026
            {<point name="input.g.xmda026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmda026_address
            #add-point:BEFORE FIELD xmda026_address
            {<point name="input.b.xmda026_address" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmda026_address
            
            #add-point:AFTER FIELD xmda026_address
            {<point name="input.a.xmda026_address" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmda026_address
            #add-point:ON CHANGE xmda026_address
            {<point name="input.g.xmda026_address" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk213
            #add-point:BEFORE FIELD xmdk213
            {<point name="input.b.xmdk213" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk213
            
            #add-point:AFTER FIELD xmdk213
            {<point name="input.a.xmdk213" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk213
            #add-point:ON CHANGE xmdk213
            {<point name="input.g.xmdk213" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk031
            
            #add-point:AFTER FIELD xmdk031
            {<point name="input.a.xmdk031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk031
            #add-point:BEFORE FIELD xmdk031
            {<point name="input.b.xmdk031" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk031
            #add-point:ON CHANGE xmdk031
            {<point name="input.g.xmdk031" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk033
            
            #add-point:AFTER FIELD xmdk033
            {<point name="input.a.xmdk033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk033
            #add-point:BEFORE FIELD xmdk033
            {<point name="input.b.xmdk033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk033
            #add-point:ON CHANGE xmdk033
            {<point name="input.g.xmdk033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk020
            
            #add-point:AFTER FIELD xmdk020
            {<point name="input.a.xmdk020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk020
            #add-point:BEFORE FIELD xmdk020
            {<point name="input.b.xmdk020" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk020
            #add-point:ON CHANGE xmdk020
            {<point name="input.g.xmdk020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk025
            #add-point:BEFORE FIELD xmdk025
            {<point name="input.b.xmdk025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk025
            
            #add-point:AFTER FIELD xmdk025
            {<point name="input.a.xmdk025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk025
            #add-point:ON CHANGE xmdk025
            {<point name="input.g.xmdk025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk026
            #add-point:BEFORE FIELD xmdk026
            {<point name="input.b.xmdk026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk026
            
            #add-point:AFTER FIELD xmdk026
            {<point name="input.a.xmdk026" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk026
            #add-point:ON CHANGE xmdk026
            {<point name="input.g.xmdk026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk027
            #add-point:BEFORE FIELD xmdk027
            {<point name="input.b.xmdk027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk027
            
            #add-point:AFTER FIELD xmdk027
            {<point name="input.a.xmdk027" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk027
            #add-point:ON CHANGE xmdk027
            {<point name="input.g.xmdk027" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk038
            
            #add-point:AFTER FIELD xmdk038
            {<point name="input.a.xmdk038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk038
            #add-point:BEFORE FIELD xmdk038
            {<point name="input.b.xmdk038" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk038
            #add-point:ON CHANGE xmdk038
            {<point name="input.g.xmdk038" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk022
            
            #add-point:AFTER FIELD xmdk022
            {<point name="input.a.xmdk022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk022
            #add-point:BEFORE FIELD xmdk022
            {<point name="input.b.xmdk022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk022
            #add-point:ON CHANGE xmdk022
            {<point name="input.g.xmdk022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk023
            
            #add-point:AFTER FIELD xmdk023
            {<point name="input.a.xmdk023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk023
            #add-point:BEFORE FIELD xmdk023
            {<point name="input.b.xmdk023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk023
            #add-point:ON CHANGE xmdk023
            {<point name="input.g.xmdk023" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk024
            
            #add-point:AFTER FIELD xmdk024
            {<point name="input.a.xmdk024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk024
            #add-point:BEFORE FIELD xmdk024
            {<point name="input.b.xmdk024" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk024
            #add-point:ON CHANGE xmdk024
            {<point name="input.g.xmdk024" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk018
            
            #add-point:AFTER FIELD xmdk018
            {<point name="input.a.xmdk018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk018
            #add-point:BEFORE FIELD xmdk018
            {<point name="input.b.xmdk018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk018
            #add-point:ON CHANGE xmdk018
            {<point name="input.g.xmdk018" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk019
            
            #add-point:AFTER FIELD xmdk019
            {<point name="input.a.xmdk019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk019
            #add-point:BEFORE FIELD xmdk019
            {<point name="input.b.xmdk019" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk019
            #add-point:ON CHANGE xmdk019
            {<point name="input.g.xmdk019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk035
            #add-point:BEFORE FIELD xmdk035
            {<point name="input.b.xmdk035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk035
            
            #add-point:AFTER FIELD xmdk035
            {<point name="input.a.xmdk035" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk035
            #add-point:ON CHANGE xmdk035
            {<point name="input.g.xmdk035" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk036
            #add-point:BEFORE FIELD xmdk036
            {<point name="input.b.xmdk036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk036
            
            #add-point:AFTER FIELD xmdk036
            {<point name="input.a.xmdk036" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk036
            #add-point:ON CHANGE xmdk036
            {<point name="input.g.xmdk036" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk083
            #add-point:BEFORE FIELD xmdk083
            {<point name="input.b.xmdk083" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk083
            
            #add-point:AFTER FIELD xmdk083
            {<point name="input.a.xmdk083" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk083
            #add-point:ON CHANGE xmdk083
            {<point name="input.g.xmdk083" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk203
            #add-point:BEFORE FIELD xmdk203
            {<point name="input.b.xmdk203" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk203
            
            #add-point:AFTER FIELD xmdk203
            {<point name="input.a.xmdk203" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk203
            #add-point:ON CHANGE xmdk203
            {<point name="input.g.xmdk203" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdk204
            #add-point:BEFORE FIELD xmdk204
            {<point name="input.b.xmdk204" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdk204
            
            #add-point:AFTER FIELD xmdk204
            {<point name="input.a.xmdk204" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdk204
            #add-point:ON CHANGE xmdk204
            {<point name="input.g.xmdk204" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xmdkunit
            #add-point:BEFORE FIELD xmdkunit
            {<point name="input.b.xmdkunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xmdkunit
            
            #add-point:AFTER FIELD xmdkunit
            {<point name="input.a.xmdkunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xmdkunit
            #add-point:ON CHANGE xmdkunit
            {<point name="input.g.xmdkunit" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdk000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk000
            #add-point:ON ACTION controlp INFIELD xmdk000
            {<point name="input.c.xmdk000" />}
            #END add-point
 
         #Ctrlp:input.c.xmdksite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdksite
            #add-point:ON ACTION controlp INFIELD xmdksite
            {<point name="input.c.xmdksite" />}
            #END add-point
 
         #Ctrlp:input.c.xmdkdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkdocdt
            #add-point:ON ACTION controlp INFIELD xmdkdocdt
            {<point name="input.c.xmdkdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk001
            #add-point:ON ACTION controlp INFIELD xmdk001
            {<point name="input.c.xmdk001" />}
            #END add-point
 
         #Ctrlp:input.c.xmdkdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkdocno
            #add-point:ON ACTION controlp INFIELD xmdkdocno
            {<point name="input.c.xmdkdocno" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk005
            #add-point:ON ACTION controlp INFIELD xmdk005
            {<point name="input.c.xmdk005" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk006
            #add-point:ON ACTION controlp INFIELD xmdk006
            {<point name="input.c.xmdk006" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk002
            #add-point:ON ACTION controlp INFIELD xmdk002
            {<point name="input.c.xmdk002" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk003
            #add-point:ON ACTION controlp INFIELD xmdk003
            {<point name="input.c.xmdk003" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk004
            #add-point:ON ACTION controlp INFIELD xmdk004
            {<point name="input.c.xmdk004" />}
            #END add-point
 
         #Ctrlp:input.c.xmdkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkstus
            #add-point:ON ACTION controlp INFIELD xmdkstus
            {<point name="input.c.xmdkstus" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk007
            #add-point:ON ACTION controlp INFIELD xmdk007
            {<point name="input.c.xmdk007" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk200
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk200
            #add-point:ON ACTION controlp INFIELD xmdk200
            {<point name="input.c.xmdk200" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk201
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk201
            #add-point:ON ACTION controlp INFIELD xmdk201
            {<point name="input.c.xmdk201" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk207
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk207
            #add-point:ON ACTION controlp INFIELD xmdk207
            {<point name="input.c.xmdk207" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk030
            #add-point:ON ACTION controlp INFIELD xmdk030
            {<point name="input.c.xmdk030" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk009
            #add-point:ON ACTION controlp INFIELD xmdk009
            {<point name="input.c.xmdk009" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk021
            #add-point:ON ACTION controlp INFIELD xmdk021
            {<point name="input.c.xmdk021" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk021_address
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk021_address
            #add-point:ON ACTION controlp INFIELD xmdk021_address
            {<point name="input.c.xmdk021_address" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk205
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk205
            #add-point:ON ACTION controlp INFIELD xmdk205
            {<point name="input.c.xmdk205" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk206
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk206
            #add-point:ON ACTION controlp INFIELD xmdk206
            {<point name="input.c.xmdk206" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk034
            #add-point:ON ACTION controlp INFIELD xmdk034
            {<point name="input.c.xmdk034" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk039
            #add-point:ON ACTION controlp INFIELD xmdk039
            {<point name="input.c.xmdk039" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk040
            #add-point:ON ACTION controlp INFIELD xmdk040
            {<point name="input.c.xmdk040" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk054
            #add-point:ON ACTION controlp INFIELD xmdk054
            {<point name="input.c.xmdk054" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk032
            #add-point:ON ACTION controlp INFIELD xmdk032
            {<point name="input.c.xmdk032" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk028
            #add-point:ON ACTION controlp INFIELD xmdk028
            {<point name="input.c.xmdk028" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk029
            #add-point:ON ACTION controlp INFIELD xmdk029
            {<point name="input.c.xmdk029" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk008
            #add-point:ON ACTION controlp INFIELD xmdk008
            {<point name="input.c.xmdk008" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk202
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk202
            #add-point:ON ACTION controlp INFIELD xmdk202
            {<point name="input.c.xmdk202" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk015
            #add-point:ON ACTION controlp INFIELD xmdk015
            {<point name="input.c.xmdk015" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk037
            #add-point:ON ACTION controlp INFIELD xmdk037
            {<point name="input.c.xmdk037" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk214
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk214
            #add-point:ON ACTION controlp INFIELD xmdk214
            {<point name="input.c.xmdk214" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk010
            #add-point:ON ACTION controlp INFIELD xmdk010
            {<point name="input.c.xmdk010" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk011
            #add-point:ON ACTION controlp INFIELD xmdk011
            {<point name="input.c.xmdk011" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk016
            #add-point:ON ACTION controlp INFIELD xmdk016
            {<point name="input.c.xmdk016" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk017
            #add-point:ON ACTION controlp INFIELD xmdk017
            {<point name="input.c.xmdk017" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk012
            #add-point:ON ACTION controlp INFIELD xmdk012
            {<point name="input.c.xmdk012" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk013
            #add-point:ON ACTION controlp INFIELD xmdk013
            {<point name="input.c.xmdk013" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk014
            #add-point:ON ACTION controlp INFIELD xmdk014
            {<point name="input.c.xmdk014" />}
            #END add-point
 
         #Ctrlp:input.c.xmda026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026
            {<point name="input.c.xmda026" />}
            #END add-point
 
         #Ctrlp:input.c.xmda026_address
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmda026_address
            #add-point:ON ACTION controlp INFIELD xmda026_address
            {<point name="input.c.xmda026_address" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk213
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk213
            #add-point:ON ACTION controlp INFIELD xmdk213
            {<point name="input.c.xmdk213" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk031
            #add-point:ON ACTION controlp INFIELD xmdk031
            {<point name="input.c.xmdk031" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk033
            #add-point:ON ACTION controlp INFIELD xmdk033
            {<point name="input.c.xmdk033" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk020
            #add-point:ON ACTION controlp INFIELD xmdk020
            {<point name="input.c.xmdk020" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk025
            #add-point:ON ACTION controlp INFIELD xmdk025
            {<point name="input.c.xmdk025" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk026
            #add-point:ON ACTION controlp INFIELD xmdk026
            {<point name="input.c.xmdk026" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk027
            #add-point:ON ACTION controlp INFIELD xmdk027
            {<point name="input.c.xmdk027" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk038
            #add-point:ON ACTION controlp INFIELD xmdk038
            {<point name="input.c.xmdk038" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk022
            #add-point:ON ACTION controlp INFIELD xmdk022
            {<point name="input.c.xmdk022" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk023
            #add-point:ON ACTION controlp INFIELD xmdk023
            {<point name="input.c.xmdk023" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk024
            #add-point:ON ACTION controlp INFIELD xmdk024
            {<point name="input.c.xmdk024" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk018
            #add-point:ON ACTION controlp INFIELD xmdk018
            {<point name="input.c.xmdk018" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk019
            #add-point:ON ACTION controlp INFIELD xmdk019
            {<point name="input.c.xmdk019" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk035
            #add-point:ON ACTION controlp INFIELD xmdk035
            {<point name="input.c.xmdk035" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk036
            #add-point:ON ACTION controlp INFIELD xmdk036
            {<point name="input.c.xmdk036" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk083
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk083
            #add-point:ON ACTION controlp INFIELD xmdk083
            {<point name="input.c.xmdk083" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk203
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk203
            #add-point:ON ACTION controlp INFIELD xmdk203
            {<point name="input.c.xmdk203" />}
            #END add-point
 
         #Ctrlp:input.c.xmdk204
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdk204
            #add-point:ON ACTION controlp INFIELD xmdk204
            {<point name="input.c.xmdk204" />}
            #END add-point
 
         #Ctrlp:input.c.xmdkunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xmdkunit
            #add-point:ON ACTION controlp INFIELD xmdkunit
            {<point name="input.c.xmdkunit" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmdk_m.xmdkdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xmdk_t (xmdkent,xmdk000,xmdksite,xmdkdocdt,xmdk001,xmdkdocno,xmdk005,xmdk006, 
                   xmdk002,xmdk003,xmdk004,xmdkstus,xmdk007,xmdk200,xmdk201,xmdk207,xmdk030,xmdk009, 
                   xmdk021,xmdk205,xmdk206,xmdk034,xmdk039,xmdk040,xmdk054,xmdk032,xmdk028,xmdk029,xmdk008, 
                   xmdk202,xmdk015,xmdk037,xmdk214,xmdk010,xmdk011,xmdk016,xmdk017,xmdk012,xmdk013,xmdk014, 
                   xmdk213,xmdk031,xmdk033,xmdk020,xmdk025,xmdk026,xmdk027,xmdk038,xmdk022,xmdk023,xmdk024, 
                   xmdk018,xmdk019,xmdk035,xmdk036,xmdk083,xmdk203,xmdk204,xmdkunit,xmdkownid,xmdkowndp, 
                   xmdkcrtid,xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt) 

               VALUES (g_enterprise,g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
                   g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003, 
                   g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
                   g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205, 
                   g_xmdk_m.xmdk206,g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054, 
                   g_xmdk_m.xmdk032,g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202, 
                   g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011, 
                   g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014, 
                   g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
                   g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023, 
                   g_xmdk_m.xmdk024,g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
                   g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid, 
                   g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid, 
                   g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt)  

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmdk_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adbt540_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL adbt540_b_fill()
                  CALL adbt540_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL adbt540_xmdk_t_mask_restore('restore_mask_o')
               
               UPDATE xmdk_t SET (xmdk000,xmdksite,xmdkdocdt,xmdk001,xmdkdocno,xmdk005,xmdk006,xmdk002, 
                   xmdk003,xmdk004,xmdkstus,xmdk007,xmdk200,xmdk201,xmdk207,xmdk030,xmdk009,xmdk021, 
                   xmdk205,xmdk206,xmdk034,xmdk039,xmdk040,xmdk054,xmdk032,xmdk028,xmdk029,xmdk008,xmdk202, 
                   xmdk015,xmdk037,xmdk214,xmdk010,xmdk011,xmdk016,xmdk017,xmdk012,xmdk013,xmdk014,xmdk213, 
                   xmdk031,xmdk033,xmdk020,xmdk025,xmdk026,xmdk027,xmdk038,xmdk022,xmdk023,xmdk024,xmdk018, 
                   xmdk019,xmdk035,xmdk036,xmdk083,xmdk203,xmdk204,xmdkunit,xmdkownid,xmdkowndp,xmdkcrtid, 
                   xmdkcrtdp,xmdkcrtdt,xmdkmodid,xmdkmoddt,xmdkcnfid,xmdkcnfdt,xmdkpstid,xmdkpstdt) = (g_xmdk_m.xmdk000, 
                   g_xmdk_m.xmdksite,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005, 
                   g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus, 
                   g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201,g_xmdk_m.xmdk207,g_xmdk_m.xmdk030, 
                   g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206,g_xmdk_m.xmdk034, 
                   g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
                   g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037, 
                   g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017, 
                   g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031, 
                   g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027, 
                   g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024,g_xmdk_m.xmdk018, 
                   g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
                   g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid, 
                   g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
                   g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt)
                WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmdk_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL adbt540_xmdk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmdk_m_t)
               LET g_log2 = util.JSON.stringify(g_xmdk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="adbt540.input.other" ver="22" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail5",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail6",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail7",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD xmdkdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdlsite
               WHEN "s_detail2"
                  NEXT FIELD xmdlseq_2
               WHEN "s_detail3"
                  NEXT FIELD xmdmsite
               WHEN "s_detail4"
                  NEXT FIELD xrcdsite
               WHEN "s_detail5"
                  NEXT FIELD rtiesite
               WHEN "s_detail6"
                  NEXT FIELD xmdlseq_6
               WHEN "s_detail7"
                  NEXT FIELD rticseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.insert" ver="38" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION adbt540_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdl_d.clear()   
   CALL g_xmdl2_d.clear()  
   CALL g_xmdl3_d.clear()  
   CALL g_xmdl4_d.clear()  
   CALL g_xmdl5_d.clear()  
   CALL g_xmdl6_d.clear()  
   CALL g_xmdl7_d.clear()  
 
 
   INITIALIZE g_xmdk_m.* LIKE xmdk_t.*             #DEFAULT 設定
   
   LET g_xmdkdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmdk_m.xmdk000 = "1"
      LET g_xmdk_m.xmdk002 = "1"
      LET g_xmdk_m.xmdk028 = "N"
      LET g_xmdk_m.xmdk029 = "N"
      LET g_xmdk_m.xmdk214 = "N"
      LET g_xmdk_m.xmdk014 = "N"
      LET g_xmdk_m.xmdk213 = "0"
      LET g_xmdk_m.xmdk038 = "1"
      LET g_xmdk_m.xmdk083 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmdk_m_t.* = g_xmdk_m.*
      LET g_xmdk_m_o.* = g_xmdk_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL adbt540_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmdk_m.* TO NULL
         INITIALIZE g_xmdl_d TO NULL
         INITIALIZE g_xmdl2_d TO NULL
         INITIALIZE g_xmdl3_d TO NULL
         INITIALIZE g_xmdl4_d TO NULL
         INITIALIZE g_xmdl5_d TO NULL
         INITIALIZE g_xmdl6_d TO NULL
         INITIALIZE g_xmdl7_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL adbt540_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdl_d.clear()
      #CALL g_xmdl2_d.clear()
      #CALL g_xmdl3_d.clear()
      #CALL g_xmdl4_d.clear()
      #CALL g_xmdl5_d.clear()
      #CALL g_xmdl6_d.clear()
      #CALL g_xmdl7_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt540_set_act_visible()   
   CALL adbt540_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt540_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE adbt540_cl
   
   CALL adbt540_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL adbt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc, 
       g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207, 
       g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc, 
       g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039, 
       g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk014,g_xmdk_m.xmda026,g_xmdk_m.xmda026_desc, 
       g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033, 
       g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026, 
       g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk018, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc, 
       g_xmdk_m.xmdkpstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL adbt540_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.insert_b" ver="35" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adbt540_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','6',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdl_t
                  (xmdlent,
                   xmdldocno,
                   xmdlseq
                   ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019,xmdl020,xmdl013,xmdl207,xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223,xmdl222,xmdl051,xmdl035,xmdl036,xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022,xmdl023,xmdl034,xmdl041,xmdl088,xmdl208,xmdl209,xmdl210,xmdl025,xmdl026,xmdl211,xmdl027,xmdl029,xmdl028,xmdl087,xmdl024,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl212,xmdl200,xmdl201,xmdl202,xmdl203,xmdl030,xmdl031,xmdl032,xmdl213,xmdl214,xmdlorga,xmdl215,xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                       g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                       g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl226, 
                       g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033, 
                       g_xmdl_d[g_detail_idx].xmdl204,g_xmdl_d[g_detail_idx].xmdl205,g_xmdl_d[g_detail_idx].xmdl017, 
                       g_xmdl_d[g_detail_idx].xmdl018,g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020, 
                       g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl207,g_xmdl_d[g_detail_idx].xmdl014, 
                       g_xmdl_d[g_detail_idx].xmdl015,g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052, 
                       g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl225,g_xmdl_d[g_detail_idx].xmdl224, 
                       g_xmdl_d[g_detail_idx].xmdl223,g_xmdl_d[g_detail_idx].xmdl222,g_xmdl_d[g_detail_idx].xmdl051, 
                       g_xmdl_d[g_detail_idx].xmdl035,g_xmdl_d[g_detail_idx].xmdl036,g_xmdl_d[g_detail_idx].xmdl037, 
                       g_xmdl_d[g_detail_idx].xmdl220,g_xmdl_d[g_detail_idx].xmdl010,g_xmdl_d[g_detail_idx].xmdl011, 
                       g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl021,g_xmdl_d[g_detail_idx].xmdl022, 
                       g_xmdl_d[g_detail_idx].xmdl023,g_xmdl_d[g_detail_idx].xmdl034,g_xmdl_d[g_detail_idx].xmdl041, 
                       g_xmdl_d[g_detail_idx].xmdl088,g_xmdl2_d[g_detail_idx].xmdl208,g_xmdl2_d[g_detail_idx].xmdl209, 
                       g_xmdl2_d[g_detail_idx].xmdl210,g_xmdl2_d[g_detail_idx].xmdl025,g_xmdl2_d[g_detail_idx].xmdl026, 
                       g_xmdl2_d[g_detail_idx].xmdl211,g_xmdl2_d[g_detail_idx].xmdl027,g_xmdl2_d[g_detail_idx].xmdl029, 
                       g_xmdl2_d[g_detail_idx].xmdl028,g_xmdl2_d[g_detail_idx].xmdl087,g_xmdl2_d[g_detail_idx].xmdl024, 
                       g_xmdl2_d[g_detail_idx].xmdl042,g_xmdl2_d[g_detail_idx].xmdl043,g_xmdl2_d[g_detail_idx].xmdl044, 
                       g_xmdl2_d[g_detail_idx].xmdl045,g_xmdl2_d[g_detail_idx].xmdl046,g_xmdl6_d[g_detail_idx].xmdl212, 
                       g_xmdl6_d[g_detail_idx].xmdl200,g_xmdl6_d[g_detail_idx].xmdl201,g_xmdl6_d[g_detail_idx].xmdl202, 
                       g_xmdl6_d[g_detail_idx].xmdl203,g_xmdl6_d[g_detail_idx].xmdl030,g_xmdl6_d[g_detail_idx].xmdl031, 
                       g_xmdl6_d[g_detail_idx].xmdl032,g_xmdl6_d[g_detail_idx].xmdl213,g_xmdl6_d[g_detail_idx].xmdl214, 
                       g_xmdl6_d[g_detail_idx].xmdlorga,g_xmdl6_d[g_detail_idx].xmdl215,g_xmdl6_d[g_detail_idx].xmdl216, 
                       g_xmdl6_d[g_detail_idx].xmdl217,g_xmdl6_d[g_detail_idx].xmdl218,g_xmdl6_d[g_detail_idx].xmdl219, 
                       g_xmdl6_d[g_detail_idx].xmdlunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdl_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_xmdl2_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'6'" THEN 
         CALL g_xmdl6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO xmdm_t
                  (xmdment,
                   xmdmdocno,
                   xmdmseq,xmdmseq1
                   ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                       g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                       g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                       g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                       g_xmdl3_d[g_detail_idx].xmdm011,g_xmdl3_d[g_detail_idx].xmdm012,g_xmdl3_d[g_detail_idx].xmdm013, 
                       g_xmdl3_d[g_detail_idx].xmdm014)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdl3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xrcd_t
                  (xrcdent,
                   xrcddocno,
                   xrcdld,xrcdseq,xrcdseq2,xrcd007
                   ,xrcdsite,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_xmdl4_d[g_detail_idx].xrcdsite,g_xmdl4_d[g_detail_idx].xrcd002,g_xmdl4_d[g_detail_idx].xrcd003, 
                       g_xmdl4_d[g_detail_idx].xrcd006,g_xmdl4_d[g_detail_idx].xrcd004,g_xmdl4_d[g_detail_idx].xrcd104) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdl4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtie_t
                  (rtieent,
                   rtiedocno,
                   rtieseq,rtieseq1
                   ,rtiesite,rtie001,rtie002,rtie006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdl5_d[g_detail_idx].rtiesite,g_xmdl5_d[g_detail_idx].rtie001,g_xmdl5_d[g_detail_idx].rtie002, 
                       g_xmdl5_d[g_detail_idx].rtie006)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdl5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO rtic_t
                  (rticent,
                   rticdocno,
                   rticseq,rticseq1
                   ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029,rticsite,rticunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdl7_d[g_detail_idx].rtic001,g_xmdl7_d[g_detail_idx].rtic002,g_xmdl7_d[g_detail_idx].rtic003, 
                       g_xmdl7_d[g_detail_idx].rtic004,g_xmdl7_d[g_detail_idx].rtic005,g_xmdl7_d[g_detail_idx].rtic006, 
                       g_xmdl7_d[g_detail_idx].rtic007,g_xmdl7_d[g_detail_idx].rtic008,g_xmdl7_d[g_detail_idx].rtic009, 
                       g_xmdl7_d[g_detail_idx].rtic010,g_xmdl7_d[g_detail_idx].rtic011,g_xmdl7_d[g_detail_idx].rtic012, 
                       g_xmdl7_d[g_detail_idx].rtic013,g_xmdl7_d[g_detail_idx].rtic014,g_xmdl7_d[g_detail_idx].rtic015, 
                       g_xmdl7_d[g_detail_idx].rtic016,g_xmdl7_d[g_detail_idx].rtic017,g_xmdl7_d[g_detail_idx].rtic018, 
                       g_xmdl7_d[g_detail_idx].rtic019,g_xmdl7_d[g_detail_idx].rtic020,g_xmdl7_d[g_detail_idx].rtic021, 
                       g_xmdl7_d[g_detail_idx].rtic022,g_xmdl7_d[g_detail_idx].rtic023,g_xmdl7_d[g_detail_idx].rtic024, 
                       g_xmdl7_d[g_detail_idx].rtic025,g_xmdl7_d[g_detail_idx].rtic026,g_xmdl7_d[g_detail_idx].rtic027, 
                       g_xmdl7_d[g_detail_idx].rtic028,g_xmdl7_d[g_detail_idx].rtic029,g_xmdl7_d[g_detail_idx].rticsite, 
                       g_xmdl7_d[g_detail_idx].rticunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_xmdl7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION adbt540_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION adbt540_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.lock_b" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbt540_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL adbt540_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2','6',"
   #僅鎖定自身table
   LET ls_group = "xmdl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adbt540_bcl USING g_enterprise,
                                       g_xmdk_m.xmdkdocno,g_xmdl_d[g_detail_idx].xmdlseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt540_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt540_bcl2 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl3_d[g_detail_idx].xmdmseq,g_xmdl3_d[g_detail_idx].xmdmseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt540_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "xrcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt540_bcl3 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl4_d[g_detail_idx].xrcdld,g_xmdl4_d[g_detail_idx].xrcdseq, 
                                                 g_xmdl4_d[g_detail_idx].xrcdseq2,g_xmdl4_d[g_detail_idx].xrcd007 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt540_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "rtie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt540_bcl4 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl5_d[g_detail_idx].rtieseq,g_xmdl5_d[g_detail_idx].rtieseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt540_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "rtic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt540_bcl5 USING g_enterprise,
                                             g_xmdk_m.xmdkdocno,g_xmdl7_d[g_detail_idx].rticseq,g_xmdl7_d[g_detail_idx].rticseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt540_bcl5" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.main" ver="61" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xmdk000,xmdksite,'',xmdkdocdt,xmdk001,xmdkdocno,xmdk005,xmdk006,xmdk002, 
       xmdk003,'',xmdk004,'',xmdkstus,xmdk007,'',xmdk200,'',xmdk201,'',xmdk207,'',xmdk030,'',xmdk009, 
       '',xmdk021,'','',xmdk205,'',xmdk206,'',xmdk034,'',xmdk039,'',xmdk040,'',xmdk054,xmdk032,xmdk028, 
       xmdk029,xmdk008,'',xmdk202,'',xmdk015,'',xmdk037,xmdk214,xmdk010,'',xmdk011,'',xmdk016,xmdk017, 
       '',xmdk012,xmdk013,'',xmdk014,'','','',xmdk213,xmdk031,'',xmdk033,'',xmdk020,'',xmdk025,xmdk026, 
       xmdk027,xmdk038,'',xmdk022,'',xmdk023,'',xmdk024,'',xmdk018,'',xmdk019,'',xmdk035,xmdk036,xmdk083, 
       xmdk203,xmdk204,xmdkunit,xmdkownid,'',xmdkowndp,'',xmdkcrtid,'',xmdkcrtdp,'',xmdkcrtdt,xmdkmodid, 
       '',xmdkmoddt,xmdkcnfid,'',xmdkcnfdt,xmdkpstid,'',xmdkpstdt", 
                      " FROM xmdk_t",
                      " WHERE xmdkent= ? AND xmdkdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt540_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xmdk000,t0.xmdksite,t0.xmdkdocdt,t0.xmdk001,t0.xmdkdocno,t0.xmdk005, 
       t0.xmdk006,t0.xmdk002,t0.xmdk003,t0.xmdk004,t0.xmdkstus,t0.xmdk007,t0.xmdk200,t0.xmdk201,t0.xmdk207, 
       t0.xmdk030,t0.xmdk009,t0.xmdk021,t0.xmdk205,t0.xmdk206,t0.xmdk034,t0.xmdk039,t0.xmdk040,t0.xmdk054, 
       t0.xmdk032,t0.xmdk028,t0.xmdk029,t0.xmdk008,t0.xmdk202,t0.xmdk015,t0.xmdk037,t0.xmdk214,t0.xmdk010, 
       t0.xmdk011,t0.xmdk016,t0.xmdk017,t0.xmdk012,t0.xmdk013,t0.xmdk014,t0.xmdk213,t0.xmdk031,t0.xmdk033, 
       t0.xmdk020,t0.xmdk025,t0.xmdk026,t0.xmdk027,t0.xmdk038,t0.xmdk022,t0.xmdk023,t0.xmdk024,t0.xmdk018, 
       t0.xmdk019,t0.xmdk035,t0.xmdk036,t0.xmdk083,t0.xmdk203,t0.xmdk204,t0.xmdkunit,t0.xmdkownid,t0.xmdkowndp, 
       t0.xmdkcrtid,t0.xmdkcrtdp,t0.xmdkcrtdt,t0.xmdkmodid,t0.xmdkmoddt,t0.xmdkcnfid,t0.xmdkcnfdt,t0.xmdkpstid, 
       t0.xmdkpstdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.pmaal004 ,t5.pmaal004 ,t6.pmaal004 ,t7.ooefl003 , 
       t8.oocql004 ,t9.pmaal004 ,t10.dbadl003 ,t11.dbabl003 ,t12.oocql004 ,t13.inayl003 ,t14.inayl003 , 
       t15.pmaal004 ,t17.ooibl004 ,t18.oocql004 ,t19.ooail003 ,t20.oocql004 ,t21.oocql004 ,t22.pmaal003 , 
       t23.oocql004 ,t24.oocql004 ,t25.xmahl003 ,t26.ooidl003 ,t27.ooag011 ,t28.ooefl003 ,t29.ooag011 , 
       t30.ooefl003 ,t31.ooag011 ,t32.ooag011 ,t33.ooag011",
               " FROM xmdk_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.xmdksite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.xmdk003  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.xmdk004 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.xmdk007 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.xmdk200 AND t5.pmaal003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent='"||g_enterprise||"' AND t6.pmaal001=t0.xmdk201 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.xmdkunit AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='275' AND t8.oocql002=t0.xmdk030 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t9 ON t9.pmaalent='"||g_enterprise||"' AND t9.pmaal001=t0.xmdk009 AND t9.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN dbadl_t t10 ON t10.dbadlent='"||g_enterprise||"' AND t10.dbadl001=t0.xmdk205 AND t10.dbadl002='"||g_dlang||"' ",
               " LEFT JOIN dbabl_t t11 ON t11.dbablent='"||g_enterprise||"' AND t11.dbabl001=t0.xmdk206 AND t11.dbabl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='297' AND t12.oocql002=t0.xmdk034 AND t12.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t13 ON t13.inaylent='"||g_enterprise||"' AND t13.inayl001=t0.xmdk039 AND t13.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t14 ON t14.inaylent='"||g_enterprise||"' AND t14.inayl001=t0.xmdk040 AND t14.inayl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t15 ON t15.pmaalent='"||g_enterprise||"' AND t15.pmaal001=t0.xmdk008 AND t15.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t17 ON t17.ooiblent='"||g_enterprise||"' AND t17.ooibl002=t0.xmdk010 AND t17.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t18 ON t18.oocqlent='"||g_enterprise||"' AND t18.oocql001='238' AND t18.oocql002=t0.xmdk011 AND t18.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t19 ON t19.ooailent='"||g_enterprise||"' AND t19.ooail001=t0.xmdk016 AND t19.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t20 ON t20.oocqlent='"||g_enterprise||"' AND t20.oocql001='295' AND t20.oocql002=t0.xmdk031 AND t20.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t21 ON t21.oocqlent='"||g_enterprise||"' AND t21.oocql001='209' AND t21.oocql002=t0.xmdk033 AND t21.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t22 ON t22.pmaalent='"||g_enterprise||"' AND t22.pmaal001=t0.xmdk020 AND t22.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t23 ON t23.oocqlent='"||g_enterprise||"' AND t23.oocql001='299' AND t23.oocql002=t0.xmdk038 AND t23.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t24 ON t24.oocqlent='"||g_enterprise||"' AND t24.oocql001='263' AND t24.oocql002=t0.xmdk022 AND t24.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xmahl_t t25 ON t25.xmahlent='"||g_enterprise||"' AND t25.xmahl001=t0.xmdk018 AND t25.xmahl002='"||g_dlang||"' ",
               " LEFT JOIN ooidl_t t26 ON t26.ooidlent='"||g_enterprise||"' AND t26.ooidl001=t0.xmdk019 AND t26.ooidl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t27 ON t27.ooagent='"||g_enterprise||"' AND t27.ooag001=t0.xmdkownid  ",
               " LEFT JOIN ooefl_t t28 ON t28.ooeflent='"||g_enterprise||"' AND t28.ooefl001=t0.xmdkowndp AND t28.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t29 ON t29.ooagent='"||g_enterprise||"' AND t29.ooag001=t0.xmdkcrtid  ",
               " LEFT JOIN ooefl_t t30 ON t30.ooeflent='"||g_enterprise||"' AND t30.ooefl001=t0.xmdkcrtdp AND t30.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t31 ON t31.ooagent='"||g_enterprise||"' AND t31.ooag001=t0.xmdkmodid  ",
               " LEFT JOIN ooag_t t32 ON t32.ooagent='"||g_enterprise||"' AND t32.ooag001=t0.xmdkcnfid  ",
               " LEFT JOIN ooag_t t33 ON t33.ooagent='"||g_enterprise||"' AND t33.ooag001=t0.xmdkpstid  ",
 
               " WHERE t0.xmdkent = '" ||g_enterprise|| "' AND t0.xmdkdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adbt540_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbt540 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbt540_init()   
 
      #進入選單 Menu (="N")
      CALL adbt540_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbt540
      
   END IF 
   
   CLOSE adbt540_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="adbt540.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/adb/adbt540_mask.4gl"
]]>
  </section>
  <section id="adbt540.modify" ver="64" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION adbt540_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_xmdk_m_t.* = g_xmdk_m.*
   LET g_xmdk_m_o.* = g_xmdk_m.*
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   CALL s_transaction_begin()
   
   OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt540_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

   
   #檢查是否允許此動作
   IF NOT adbt540_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL adbt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
 
 
   
   CALL adbt540_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
 
 
    
   WHILE TRUE
      LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmdk_m.xmdkmodid = g_user 
LET g_xmdk_m.xmdkmoddt = cl_get_current()
LET g_xmdk_m.xmdkmodid_desc = cl_get_username(g_xmdk_m.xmdkmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL adbt540_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmdk_t SET (xmdkmodid,xmdkmoddt) = (g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)
          WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdkdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xmdk_m.* = g_xmdk_m_t.*
         CALL adbt540_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmdk_m.xmdkdocno != g_xmdkdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xmdl_t SET xmdldocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdlent = g_enterprise AND xmdldocno = g_xmdkdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE xmdm_t
            SET xmdmdocno = g_xmdk_m.xmdkdocno
 
          WHERE xmdment = g_enterprise AND
                xmdmdocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdm_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdm_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE xrcd_t
            SET xrcddocno = g_xmdk_m.xmdkdocno
 
          WHERE xrcdent = g_enterprise AND
                xrcddocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE rtie_t
            SET rtiedocno = g_xmdk_m.xmdkdocno
 
          WHERE rtieent = g_enterprise AND
                rtiedocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE rtic_t
            SET rticdocno = g_xmdk_m.xmdkdocno
 
          WHERE rticent = g_enterprise AND
                rticdocno = g_xmdkdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt540_set_act_visible()   
   CALL adbt540_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到對應位置
   CALL adbt540_browser_fill("")
 
   CLOSE adbt540_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt540_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="adbt540.msgcentre_notify" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION adbt540_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL adbt540_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmdk_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="adbt540.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="adbt540.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="adbt540.query" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adbt540_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdl_d.clear()
   CALL g_xmdl2_d.clear()
   CALL g_xmdl3_d.clear()
   CALL g_xmdl4_d.clear()
   CALL g_xmdl5_d.clear()
   CALL g_xmdl6_d.clear()
   CALL g_xmdl7_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL adbt540_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adbt540_browser_fill("")
      CALL adbt540_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adbt540_filter_show('xmdkdocno')
   CALL adbt540_filter_show('xmdkdocdt')
   CALL adbt540_filter_show('xmdk001')
   CALL adbt540_filter_show('xmdk003')
   CALL adbt540_filter_show('xmdk004')
   CALL adbt540_filter_show('xmdk006')
   CALL adbt540_filter_show('xmdk007')
   CALL adbt540_filter_show('xmdk008')
   CALL adbt540_filter_show('xmdk009')
   CALL adbt540_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL adbt540_fetch("F") 
      #顯示單身筆數
      CALL adbt540_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.reproduce" ver="37" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION adbt540_reproduce()
   DEFINE l_newno     LIKE xmdk_t.xmdkdocno 
   DEFINE l_oldno     LIKE xmdk_t.xmdkdocno 
 
   DEFINE l_master    RECORD LIKE xmdk_t.*
   DEFINE l_detail    RECORD LIKE xmdl_t.*
   DEFINE l_detail2    RECORD LIKE xmdm_t.*
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.*
 
   DEFINE l_detail4    RECORD LIKE rtie_t.*
 
   DEFINE l_detail5    RECORD LIKE rtic_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
    
   LET g_xmdk_m.xmdkdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_xmdk_m.xmdkownid = g_user
      LET g_xmdk_m.xmdkowndp = g_dept
      LET g_xmdk_m.xmdkcrtid = g_user
      LET g_xmdk_m.xmdkcrtdp = g_dept 
      LET g_xmdk_m.xmdkcrtdt = cl_get_current()
      LET g_xmdk_m.xmdkmodid = g_user
      LET g_xmdk_m.xmdkmoddt = cl_get_current()
      LET g_xmdk_m.xmdkstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL adbt540_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmdk_m.* TO NULL
      INITIALIZE g_xmdl_d TO NULL
      INITIALIZE g_xmdl2_d TO NULL
      INITIALIZE g_xmdl3_d TO NULL
      INITIALIZE g_xmdl4_d TO NULL
      INITIALIZE g_xmdl5_d TO NULL
      INITIALIZE g_xmdl6_d TO NULL
      INITIALIZE g_xmdl7_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL adbt540_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt540_set_act_visible()   
   CALL adbt540_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdkdocno_t = g_xmdk_m.xmdkdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                      " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt540_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL adbt540_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL adbt540_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION adbt540_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION adbt540_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION adbt540_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION adbt540_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION adbt540_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("xmdkdocno,xmdkdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdkdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adbt540_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION adbt540_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdkdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("xmdkdocno,xmdkdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adbt540_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="adbt540.set_pk_array" ver="6" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION adbt540_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmdk_m.xmdkdocno
   LET g_pk_array[1].column = 'xmdkdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="adbt540.show" ver="46" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adbt540_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL adbt540_b_fill() #單身填充
      CALL adbt540_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL adbt540_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_xmdk_m_mask_o.* =  g_xmdk_m.*
   CALL adbt540_xmdk_t_mask()
   LET g_xmdk_m_mask_n.* =  g_xmdk_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc, 
       g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207, 
       g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc, 
       g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039, 
       g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk014,g_xmdk_m.xmda026,g_xmdk_m.xmda026_desc, 
       g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033, 
       g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026, 
       g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk018, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc, 
       g_xmdk_m.xmdkpstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_xmdk_m.xmdkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdl2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl5_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl6_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdl7_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adbt540_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.signature" ver="33" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION adbt540_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
 
 
   CALL adbt540_show()
   CALL adbt540_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmdk_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdl_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdl2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdl3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmdl4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_xmdl5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_xmdl6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_xmdl7_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adbt540_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt540_ui_headershow()
   CALL adbt540_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION adbt540_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt540_ui_headershow()  
   CALL adbt540_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="adbt540.state_change" ver="30" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION adbt540_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmdk_m.xmdkdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN adbt540_cl USING g_enterprise,g_xmdk_m.xmdkdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt540_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

 
   #檢查是否允許此動作
   IF NOT adbt540_action_chk() THEN
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
       g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc, 
       g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc, 
       g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207, 
       g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc, 
       g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc, 
       g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039, 
       g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032, 
       g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202,g_xmdk_m.xmdk202_desc, 
       g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214,g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc, 
       g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk012_desc,g_xmdk_m.xmdk014,g_xmdk_m.xmda026,g_xmdk_m.xmda026_desc, 
       g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033, 
       g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026, 
       g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc,g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk018, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036, 
       g_xmdk_m.xmdk083,g_xmdk_m.xmdk203,g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc, 
       g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt, 
       g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc, 
       g_xmdk_m.xmdkpstdt
 
   CASE g_xmdk_m.xmdkstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmdk_m.xmdkstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adbt540_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt540_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adbt540_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt540_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制
            {<point name="statechange.unhold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制
            {<point name="statechange.hold"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "UH"
      AND lc_state <> "H"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_xmdk_m.xmdkstus = lc_state OR cl_null(lc_state) THEN
      CLOSE adbt540_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_xmdk_m.xmdkmodid = g_user
   LET g_xmdk_m.xmdkmoddt = cl_get_current()
   LET g_xmdk_m.xmdkstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmdk_t 
      SET (xmdkstus,xmdkmodid,xmdkmoddt) 
        = (g_xmdk_m.xmdkstus,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt)     
    WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmdk_m.xmdkdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
          g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
          g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
          g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
          g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
          g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
          g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
          g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
          g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
          g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
          g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid, 
          g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
          g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc, 
          g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc, 
          g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc, 
          g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc, 
          g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc, 
          g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc, 
          g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc, 
          g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmdk_m.xmdk000,g_xmdk_m.xmdksite,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001, 
          g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002,g_xmdk_m.xmdk003,g_xmdk_m.xmdk003_desc, 
          g_xmdk_m.xmdk004,g_xmdk_m.xmdk004_desc,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk007_desc, 
          g_xmdk_m.xmdk200,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207, 
          g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030,g_xmdk_m.xmdk030_desc,g_xmdk_m.xmdk009,g_xmdk_m.xmdk009_desc, 
          g_xmdk_m.xmdk021,g_xmdk_m.xmdk021_desc,g_xmdk_m.xmdk021_address,g_xmdk_m.xmdk205,g_xmdk_m.xmdk205_desc, 
          g_xmdk_m.xmdk206,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039, 
          g_xmdk_m.xmdk039_desc,g_xmdk_m.xmdk040,g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032, 
          g_xmdk_m.xmdk028,g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk202, 
          g_xmdk_m.xmdk202_desc,g_xmdk_m.xmdk015,g_xmdk_m.xmdk015_desc,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
          g_xmdk_m.xmdk010,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016, 
          g_xmdk_m.xmdk017,g_xmdk_m.xmdk016_desc,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013,g_xmdk_m.xmdk012_desc, 
          g_xmdk_m.xmdk014,g_xmdk_m.xmda026,g_xmdk_m.xmda026_desc,g_xmdk_m.xmda026_address,g_xmdk_m.xmdk213, 
          g_xmdk_m.xmdk031,g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020, 
          g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk025,g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038, 
          g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022,g_xmdk_m.xmdk022_desc,g_xmdk_m.xmdk023,g_xmdk_m.xmdk023_desc, 
          g_xmdk_m.xmdk024,g_xmdk_m.xmdk024_desc,g_xmdk_m.xmdk018,g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019, 
          g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
          g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp, 
          g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtid_desc,g_xmdk_m.xmdkcrtdp,g_xmdk_m.xmdkcrtdp_desc, 
          g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid, 
          g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkcnfdt,g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstid_desc,g_xmdk_m.xmdkpstdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE adbt540_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt540_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="adbt540.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION adbt540_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="adbt540.ui_browser_refresh" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adbt540_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdkdocno = g_xmdk_m.xmdkdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.ui_detailshow" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION adbt540_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="adbt540.ui_dialog" ver="182" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION adbt540_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adbt540_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmdk_m.* TO NULL
         CALL g_xmdl_d.clear()
         CALL g_xmdl2_d.clear()
         CALL g_xmdl3_d.clear()
         CALL g_xmdl4_d.clear()
         CALL g_xmdl5_d.clear()
         CALL g_xmdl6_d.clear()
         CALL g_xmdl7_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL adbt540_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adbt540_fetch('') # reload data
               LET l_ac = 1
               CALL adbt540_ui_detailshow() #Setting the current row 
         
               CALL adbt540_idx_chk()
               #NEXT FIELD xmdlseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION open_adbt540_01
            LET g_action_choice="open_adbt540_01"
            IF cl_auth_chk_act("open_adbt540_01") THEN
               
               #add-point:ON ACTION open_adbt540_01
               {<point name="menu.detail_show.page1.open_adbt540_01" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作
                  {<point name="menu.detail_show.page1_sub.detail_qrystr" />}
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:2)
               ON ACTION prog_adbt520
                  LET g_action_choice="prog_adbt520"
                  IF cl_auth_chk_act("prog_adbt520") THEN
                     
                     #add-point:ON ACTION prog_adbt520
                     {<point name="menu.detail_show.page1_sub.prog_adbt520" />}
                     #END add-point
                     
                  END IF
 
 
 
               END MENU
 
 
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
 
 
 
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               
               #add-point:page5, before row動作
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page5自定義行為
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               
               #add-point:page6, before row動作
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page6自定義行為
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdl7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               
               #add-point:page7, before row動作
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL adbt540_idx_chk()
               #add-point:page7自定義行為
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL adbt540_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adbt540_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adbt540_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adbt540_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adbt540_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL adbt540_set_act_visible()   
            CALL adbt540_set_act_no_visible()
            IF NOT (g_xmdk_m.xmdkdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdkent = '" ||g_enterprise|| "' AND",
                                  " xmdkdocno = '", g_xmdk_m.xmdkdocno, "' "
 
               #填到對應位置
               CALL adbt540_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL adbt540_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmdk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdm_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL adbt540_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL adbt540_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adbt540_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL adbt540_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt540_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL adbt540_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt540_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL adbt540_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt540_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL adbt540_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt540_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL adbt540_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt540_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdl2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdl3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_xmdl4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_xmdl5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_xmdl6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_xmdl7_d)
                  LET g_export_id[7]   = "s_detail7"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdlseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION gen_adbt600
            LET g_action_choice="gen_adbt600"
            IF cl_auth_chk_act("gen_adbt600") THEN
               
               #add-point:ON ACTION gen_adbt600
               {<point name="menu.gen_adbt600" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbt540_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbt540_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query_price
            LET g_action_choice="query_price"
            IF cl_auth_chk_act("query_price") THEN
               
               #add-point:ON ACTION query_price
               {<point name="menu.query_price" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION open_s_pay
            LET g_action_choice="open_s_pay"
            IF cl_auth_chk_act("open_s_pay") THEN
               
               #add-point:ON ACTION open_s_pay
               {<point name="menu.open_s_pay" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adbt540_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adbt540_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION open_s_pay09
            LET g_action_choice="open_s_pay09"
            IF cl_auth_chk_act("open_s_pay09") THEN
               
               #add-point:ON ACTION open_s_pay09
               {<point name="menu.open_s_pay09" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/adb/adbt540_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adbt540_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION open_adbp580
            LET g_action_choice="open_adbp580"
            IF cl_auth_chk_act("open_adbp580") THEN
               
               #add-point:ON ACTION open_adbp580
               {<point name="menu.open_adbp580" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adbt540_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_adbt520
            LET g_action_choice="prog_adbt520"
            IF cl_auth_chk_act("prog_adbt520") THEN
               
               #add-point:ON ACTION prog_adbt520
               {<point name="menu.prog_adbt520" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_xmdk003
            LET g_action_choice="prog_xmdk003"
            IF cl_auth_chk_act("prog_xmdk003") THEN
               
               #add-point:ON ACTION prog_xmdk003
               {<point name="menu.prog_xmdk003" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL adbt540_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adbt540_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adbt540_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_xmdk_m.xmdkdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="adbt540.ui_headershow" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION adbt540_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_xmdk_m.xmdkdocno = g_browser[g_current_idx].b_xmdkdocno   
 
   EXECUTE adbt540_master_referesh USING g_xmdk_m.xmdkdocno INTO g_xmdk_m.xmdk000,g_xmdk_m.xmdksite, 
       g_xmdk_m.xmdkdocdt,g_xmdk_m.xmdk001,g_xmdk_m.xmdkdocno,g_xmdk_m.xmdk005,g_xmdk_m.xmdk006,g_xmdk_m.xmdk002, 
       g_xmdk_m.xmdk003,g_xmdk_m.xmdk004,g_xmdk_m.xmdkstus,g_xmdk_m.xmdk007,g_xmdk_m.xmdk200,g_xmdk_m.xmdk201, 
       g_xmdk_m.xmdk207,g_xmdk_m.xmdk030,g_xmdk_m.xmdk009,g_xmdk_m.xmdk021,g_xmdk_m.xmdk205,g_xmdk_m.xmdk206, 
       g_xmdk_m.xmdk034,g_xmdk_m.xmdk039,g_xmdk_m.xmdk040,g_xmdk_m.xmdk054,g_xmdk_m.xmdk032,g_xmdk_m.xmdk028, 
       g_xmdk_m.xmdk029,g_xmdk_m.xmdk008,g_xmdk_m.xmdk202,g_xmdk_m.xmdk015,g_xmdk_m.xmdk037,g_xmdk_m.xmdk214, 
       g_xmdk_m.xmdk010,g_xmdk_m.xmdk011,g_xmdk_m.xmdk016,g_xmdk_m.xmdk017,g_xmdk_m.xmdk012,g_xmdk_m.xmdk013, 
       g_xmdk_m.xmdk014,g_xmdk_m.xmdk213,g_xmdk_m.xmdk031,g_xmdk_m.xmdk033,g_xmdk_m.xmdk020,g_xmdk_m.xmdk025, 
       g_xmdk_m.xmdk026,g_xmdk_m.xmdk027,g_xmdk_m.xmdk038,g_xmdk_m.xmdk022,g_xmdk_m.xmdk023,g_xmdk_m.xmdk024, 
       g_xmdk_m.xmdk018,g_xmdk_m.xmdk019,g_xmdk_m.xmdk035,g_xmdk_m.xmdk036,g_xmdk_m.xmdk083,g_xmdk_m.xmdk203, 
       g_xmdk_m.xmdk204,g_xmdk_m.xmdkunit,g_xmdk_m.xmdkownid,g_xmdk_m.xmdkowndp,g_xmdk_m.xmdkcrtid,g_xmdk_m.xmdkcrtdp, 
       g_xmdk_m.xmdkcrtdt,g_xmdk_m.xmdkmodid,g_xmdk_m.xmdkmoddt,g_xmdk_m.xmdkcnfid,g_xmdk_m.xmdkcnfdt, 
       g_xmdk_m.xmdkpstid,g_xmdk_m.xmdkpstdt,g_xmdk_m.xmdksite_desc,g_xmdk_m.xmdk003_desc,g_xmdk_m.xmdk004_desc, 
       g_xmdk_m.xmdk007_desc,g_xmdk_m.xmdk200_desc,g_xmdk_m.xmdk201_desc,g_xmdk_m.xmdk207_desc,g_xmdk_m.xmdk030_desc, 
       g_xmdk_m.xmdk009_desc,g_xmdk_m.xmdk205_desc,g_xmdk_m.xmdk206_desc,g_xmdk_m.xmdk034_desc,g_xmdk_m.xmdk039_desc, 
       g_xmdk_m.xmdk040_desc,g_xmdk_m.xmdk008_desc,g_xmdk_m.xmdk010_desc,g_xmdk_m.xmdk011_desc,g_xmdk_m.xmdk016_desc, 
       g_xmdk_m.xmdk031_desc,g_xmdk_m.xmdk033_desc,g_xmdk_m.xmdk020_desc,g_xmdk_m.xmdk038_desc,g_xmdk_m.xmdk022_desc, 
       g_xmdk_m.xmdk018_desc,g_xmdk_m.xmdk019_desc,g_xmdk_m.xmdkownid_desc,g_xmdk_m.xmdkowndp_desc,g_xmdk_m.xmdkcrtid_desc, 
       g_xmdk_m.xmdkcrtdp_desc,g_xmdk_m.xmdkmodid_desc,g_xmdk_m.xmdkcnfid_desc,g_xmdk_m.xmdkpstid_desc 

   CALL adbt540_xmdk_t_mask()
   CALL adbt540_show()
      
END FUNCTION
]]>
  </section>
  <section id="adbt540.unlock_b" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbt540_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1','2','6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt540_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt540_bcl2
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt540_bcl3
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt540_bcl4
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt540_bcl5
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adbt540.update_b" ver="36" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adbt540_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','6',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL adbt540_xmdl_t_mask_restore('restore_mask_o')
               
      UPDATE xmdl_t 
         SET (xmdldocno,
              xmdlseq
              ,xmdlsite,xmdl001,xmdl002,xmdl003,xmdl004,xmdl005,xmdl006,xmdl007,xmdl226,xmdl008,xmdl009,xmdl033,xmdl204,xmdl205,xmdl017,xmdl018,xmdl019,xmdl020,xmdl013,xmdl207,xmdl014,xmdl015,xmdl016,xmdl052,xmdl050,xmdl225,xmdl224,xmdl223,xmdl222,xmdl051,xmdl035,xmdl036,xmdl037,xmdl220,xmdl010,xmdl011,xmdl012,xmdl021,xmdl022,xmdl023,xmdl034,xmdl041,xmdl088,xmdl208,xmdl209,xmdl210,xmdl025,xmdl026,xmdl211,xmdl027,xmdl029,xmdl028,xmdl087,xmdl024,xmdl042,xmdl043,xmdl044,xmdl045,xmdl046,xmdl212,xmdl200,xmdl201,xmdl202,xmdl203,xmdl030,xmdl031,xmdl032,xmdl213,xmdl214,xmdlorga,xmdl215,xmdl216,xmdl217,xmdl218,xmdl219,xmdlunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdl_d[g_detail_idx].xmdlsite,g_xmdl_d[g_detail_idx].xmdl001,g_xmdl_d[g_detail_idx].xmdl002, 
                  g_xmdl_d[g_detail_idx].xmdl003,g_xmdl_d[g_detail_idx].xmdl004,g_xmdl_d[g_detail_idx].xmdl005, 
                  g_xmdl_d[g_detail_idx].xmdl006,g_xmdl_d[g_detail_idx].xmdl007,g_xmdl_d[g_detail_idx].xmdl226, 
                  g_xmdl_d[g_detail_idx].xmdl008,g_xmdl_d[g_detail_idx].xmdl009,g_xmdl_d[g_detail_idx].xmdl033, 
                  g_xmdl_d[g_detail_idx].xmdl204,g_xmdl_d[g_detail_idx].xmdl205,g_xmdl_d[g_detail_idx].xmdl017, 
                  g_xmdl_d[g_detail_idx].xmdl018,g_xmdl_d[g_detail_idx].xmdl019,g_xmdl_d[g_detail_idx].xmdl020, 
                  g_xmdl_d[g_detail_idx].xmdl013,g_xmdl_d[g_detail_idx].xmdl207,g_xmdl_d[g_detail_idx].xmdl014, 
                  g_xmdl_d[g_detail_idx].xmdl015,g_xmdl_d[g_detail_idx].xmdl016,g_xmdl_d[g_detail_idx].xmdl052, 
                  g_xmdl_d[g_detail_idx].xmdl050,g_xmdl_d[g_detail_idx].xmdl225,g_xmdl_d[g_detail_idx].xmdl224, 
                  g_xmdl_d[g_detail_idx].xmdl223,g_xmdl_d[g_detail_idx].xmdl222,g_xmdl_d[g_detail_idx].xmdl051, 
                  g_xmdl_d[g_detail_idx].xmdl035,g_xmdl_d[g_detail_idx].xmdl036,g_xmdl_d[g_detail_idx].xmdl037, 
                  g_xmdl_d[g_detail_idx].xmdl220,g_xmdl_d[g_detail_idx].xmdl010,g_xmdl_d[g_detail_idx].xmdl011, 
                  g_xmdl_d[g_detail_idx].xmdl012,g_xmdl_d[g_detail_idx].xmdl021,g_xmdl_d[g_detail_idx].xmdl022, 
                  g_xmdl_d[g_detail_idx].xmdl023,g_xmdl_d[g_detail_idx].xmdl034,g_xmdl_d[g_detail_idx].xmdl041, 
                  g_xmdl_d[g_detail_idx].xmdl088,g_xmdl2_d[g_detail_idx].xmdl208,g_xmdl2_d[g_detail_idx].xmdl209, 
                  g_xmdl2_d[g_detail_idx].xmdl210,g_xmdl2_d[g_detail_idx].xmdl025,g_xmdl2_d[g_detail_idx].xmdl026, 
                  g_xmdl2_d[g_detail_idx].xmdl211,g_xmdl2_d[g_detail_idx].xmdl027,g_xmdl2_d[g_detail_idx].xmdl029, 
                  g_xmdl2_d[g_detail_idx].xmdl028,g_xmdl2_d[g_detail_idx].xmdl087,g_xmdl2_d[g_detail_idx].xmdl024, 
                  g_xmdl2_d[g_detail_idx].xmdl042,g_xmdl2_d[g_detail_idx].xmdl043,g_xmdl2_d[g_detail_idx].xmdl044, 
                  g_xmdl2_d[g_detail_idx].xmdl045,g_xmdl2_d[g_detail_idx].xmdl046,g_xmdl6_d[g_detail_idx].xmdl212, 
                  g_xmdl6_d[g_detail_idx].xmdl200,g_xmdl6_d[g_detail_idx].xmdl201,g_xmdl6_d[g_detail_idx].xmdl202, 
                  g_xmdl6_d[g_detail_idx].xmdl203,g_xmdl6_d[g_detail_idx].xmdl030,g_xmdl6_d[g_detail_idx].xmdl031, 
                  g_xmdl6_d[g_detail_idx].xmdl032,g_xmdl6_d[g_detail_idx].xmdl213,g_xmdl6_d[g_detail_idx].xmdl214, 
                  g_xmdl6_d[g_detail_idx].xmdlorga,g_xmdl6_d[g_detail_idx].xmdl215,g_xmdl6_d[g_detail_idx].xmdl216, 
                  g_xmdl6_d[g_detail_idx].xmdl217,g_xmdl6_d[g_detail_idx].xmdl218,g_xmdl6_d[g_detail_idx].xmdl219, 
                  g_xmdl6_d[g_detail_idx].xmdlunit) 
         WHERE xmdlent = g_enterprise AND xmdldocno = ps_keys_bak[1] AND xmdlseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdl_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt540_xmdl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdm_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt540_xmdm_t_mask_restore('restore_mask_o')
               
      UPDATE xmdm_t 
         SET (xmdmdocno,
              xmdmseq,xmdmseq1
              ,xmdmsite,xmdm001,xmdm002,xmdm003,xmdm004,xmdm005,xmdm006,xmdm007,xmdm033,xmdm008,xmdm009,xmdm010,xmdm011,xmdm012,xmdm013,xmdm014) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdl3_d[g_detail_idx].xmdmsite,g_xmdl3_d[g_detail_idx].xmdm001,g_xmdl3_d[g_detail_idx].xmdm002, 
                  g_xmdl3_d[g_detail_idx].xmdm003,g_xmdl3_d[g_detail_idx].xmdm004,g_xmdl3_d[g_detail_idx].xmdm005, 
                  g_xmdl3_d[g_detail_idx].xmdm006,g_xmdl3_d[g_detail_idx].xmdm007,g_xmdl3_d[g_detail_idx].xmdm033, 
                  g_xmdl3_d[g_detail_idx].xmdm008,g_xmdl3_d[g_detail_idx].xmdm009,g_xmdl3_d[g_detail_idx].xmdm010, 
                  g_xmdl3_d[g_detail_idx].xmdm011,g_xmdl3_d[g_detail_idx].xmdm012,g_xmdl3_d[g_detail_idx].xmdm013, 
                  g_xmdl3_d[g_detail_idx].xmdm014) 
         WHERE xmdment = g_enterprise AND xmdmdocno = ps_keys_bak[1] AND xmdmseq = ps_keys_bak[2] AND xmdmseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdm_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt540_xmdm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrcd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt540_xrcd_t_mask_restore('restore_mask_o')
               
      UPDATE xrcd_t 
         SET (xrcddocno,
              xrcdld,xrcdseq,xrcdseq2,xrcd007
              ,xrcdsite,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_xmdl4_d[g_detail_idx].xrcdsite,g_xmdl4_d[g_detail_idx].xrcd002,g_xmdl4_d[g_detail_idx].xrcd003, 
                  g_xmdl4_d[g_detail_idx].xrcd006,g_xmdl4_d[g_detail_idx].xrcd004,g_xmdl4_d[g_detail_idx].xrcd104)  

         WHERE xrcdent = g_enterprise AND xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt540_xrcd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtie_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt540_rtie_t_mask_restore('restore_mask_o')
               
      UPDATE rtie_t 
         SET (rtiedocno,
              rtieseq,rtieseq1
              ,rtiesite,rtie001,rtie002,rtie006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdl5_d[g_detail_idx].rtiesite,g_xmdl5_d[g_detail_idx].rtie001,g_xmdl5_d[g_detail_idx].rtie002, 
                  g_xmdl5_d[g_detail_idx].rtie006) 
         WHERE rtieent = g_enterprise AND rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt540_rtie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtic_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt540_rtic_t_mask_restore('restore_mask_o')
               
      UPDATE rtic_t 
         SET (rticdocno,
              rticseq,rticseq1
              ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029,rticsite,rticunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdl7_d[g_detail_idx].rtic001,g_xmdl7_d[g_detail_idx].rtic002,g_xmdl7_d[g_detail_idx].rtic003, 
                  g_xmdl7_d[g_detail_idx].rtic004,g_xmdl7_d[g_detail_idx].rtic005,g_xmdl7_d[g_detail_idx].rtic006, 
                  g_xmdl7_d[g_detail_idx].rtic007,g_xmdl7_d[g_detail_idx].rtic008,g_xmdl7_d[g_detail_idx].rtic009, 
                  g_xmdl7_d[g_detail_idx].rtic010,g_xmdl7_d[g_detail_idx].rtic011,g_xmdl7_d[g_detail_idx].rtic012, 
                  g_xmdl7_d[g_detail_idx].rtic013,g_xmdl7_d[g_detail_idx].rtic014,g_xmdl7_d[g_detail_idx].rtic015, 
                  g_xmdl7_d[g_detail_idx].rtic016,g_xmdl7_d[g_detail_idx].rtic017,g_xmdl7_d[g_detail_idx].rtic018, 
                  g_xmdl7_d[g_detail_idx].rtic019,g_xmdl7_d[g_detail_idx].rtic020,g_xmdl7_d[g_detail_idx].rtic021, 
                  g_xmdl7_d[g_detail_idx].rtic022,g_xmdl7_d[g_detail_idx].rtic023,g_xmdl7_d[g_detail_idx].rtic024, 
                  g_xmdl7_d[g_detail_idx].rtic025,g_xmdl7_d[g_detail_idx].rtic026,g_xmdl7_d[g_detail_idx].rtic027, 
                  g_xmdl7_d[g_detail_idx].rtic028,g_xmdl7_d[g_detail_idx].rtic029,g_xmdl7_d[g_detail_idx].rticsite, 
                  g_xmdl7_d[g_detail_idx].rticunit) 
         WHERE rticent = g_enterprise AND rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt540_rtic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
